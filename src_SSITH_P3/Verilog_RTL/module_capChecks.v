//
// Generated by Bluespec Compiler, version 2019.05.beta2 (build a88bf40db, 2019-05-24)
//
// On Wed Jun 24 20:24:22 BST 2020
//
//
// Ports:
// Name                         I/O  size props
// capChecks                      O    12
// capChecks_a                    I   163
// capChecks_b                    I   163
// capChecks_ddc                  I   163
// capChecks_toCheck              I    46
// capChecks_cap_exact            I     1
//
// Combinational paths from inputs to outputs:
//   (capChecks_a,
//    capChecks_b,
//    capChecks_ddc,
//    capChecks_toCheck,
//    capChecks_cap_exact) -> capChecks
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module module_capChecks(capChecks_a,
			capChecks_b,
			capChecks_ddc,
			capChecks_toCheck,
			capChecks_cap_exact,
			capChecks);
  // value method capChecks
  input  [162 : 0] capChecks_a;
  input  [162 : 0] capChecks_b;
  input  [162 : 0] capChecks_ddc;
  input  [45 : 0] capChecks_toCheck;
  input  capChecks_cap_exact;
  output [11 : 0] capChecks;

  // signals for module outputs
  wire [11 : 0] capChecks;

  // remaining internal signals
  wire [10 : 0] IF_capChecks_toCheck_BIT_45_AND_NOT_capChecks__ETC___d334;
  wire [5 : 0] IF_capChecks_toCheck_BIT_34_4_AND_NOT_capCheck_ETC___d252,
	       IF_capChecks_toCheck_BIT_39_9_AND_capChecks_a__ETC___d258,
	       IF_capChecks_toCheck_BIT_41_9_AND_capChecks_b__ETC___d255,
	       IF_capChecks_toCheck_BIT_42_1_AND_capChecks_a__ETC___d256,
	       IF_capChecks_toCheck_BIT_43_AND_NOT_capChecks__ETC___d260;
  wire [4 : 0] IF_NOT_capChecks_toCheck_BIT_34_4_89_OR_capChe_ETC___d323,
	       IF_NOT_capChecks_toCheck_BIT_36_6_85_OR_capChe_ETC___d326,
	       IF_NOT_capChecks_toCheck_BIT_36_6_85_OR_capChe_ETC___d327,
	       IF_NOT_capChecks_toCheck_BIT_36_6_85_OR_capChe_ETC___d329,
	       IF_NOT_capChecks_toCheck_BIT_45_50_OR_capCheck_ETC___d333,
	       IF_capChecks_toCheck_BIT_36_6_AND_NOT_capCheck_ETC___d324,
	       IF_capChecks_toCheck_BIT_40_3_AND_capChecks_dd_ETC___d331;
  wire NOT_capChecks_a_BITS_43_TO_38_01_ULE_52_02_03__ETC___d119,
       NOT_capChecks_toCheck_BIT_28_7_81_OR_0_CONCAT__ETC___d277,
       NOT_capChecks_toCheck_BIT_30_9_98_OR_capChecks_ETC___d303,
       NOT_capChecks_toCheck_BIT_30_9_98_OR_capChecks_ETC___d316,
       NOT_capChecks_toCheck_BIT_34_4_89_OR_capChecks_ETC___d275,
       NOT_capChecks_toCheck_BIT_34_4_89_OR_capChecks_ETC___d291,
       NOT_capChecks_toCheck_BIT_34_4_89_OR_capChecks_ETC___d298,
       NOT_capChecks_toCheck_BIT_34_4_89_OR_capChecks_ETC___d306,
       NOT_capChecks_toCheck_BIT_34_4_89_OR_capChecks_ETC___d319,
       NOT_capChecks_toCheck_BIT_36_6_85_OR_capChecks_ETC___d312,
       NOT_capChecks_toCheck_BIT_39_9_59_OR_NOT_capCh_ETC___d265,
       NOT_capChecks_toCheck_BIT_42_1_65_OR_NOT_capCh_ETC___d263,
       NOT_capChecks_toCheck_BIT_44_52_OR_capChecks_a_ETC___d280,
       _0_CONCAT_capChecks_a_BITS_62_TO_45_1_8_ULE_262139___d49,
       _0_CONCAT_capChecks_a_BITS_81_TO_78_9_AND_capCh_ETC___d97,
       capChecks_a_BITS_43_TO_38_01_ULE_52_02_AND_NOT_ETC___d214,
       capChecks_a_BITS_43_TO_38_01_ULE_52___d102,
       capChecks_a_BITS_62_TO_45_1_EQ_capChecks_b_BIT_ETC___d53,
       capChecks_b_BITS_159_TO_96_0_EQ_0_CONCAT_capCh_ETC___d81,
       capChecks_b_BITS_159_TO_96_0_ULE_262139___d85,
       capChecks_toCheck_BIT_28_7_AND_NOT_0_CONCAT_ca_ETC___d141,
       capChecks_toCheck_BIT_28_7_AND_NOT_0_CONCAT_ca_ETC___d293,
       capChecks_toCheck_BIT_29_4_AND_NOT_capChecks_b_ETC___d132,
       capChecks_toCheck_BIT_29_4_AND_NOT_capChecks_b_ETC___d271,
       capChecks_toCheck_BIT_33_8_AND_capChecks_b_BIT_ETC___d248,
       capChecks_toCheck_BIT_34_4_AND_NOT_capChecks_a_ETC___d137,
       capChecks_toCheck_BIT_39_9_AND_capChecks_a_BIT_ETC___d145,
       capChecks_toCheck_BIT_39_9_AND_capChecks_a_BIT_ETC___d286,
       capChecks_toCheck_BIT_42_1_AND_capChecks_a_BIT_ETC___d143,
       capChecks_toCheck_BIT_42_1_AND_capChecks_a_BIT_ETC___d284,
       capChecks_toCheck_BIT_44_AND_NOT_capChecks_a_B_ETC___d148;

  // value method capChecks
  assign capChecks =
	     { capChecks_toCheck[45] && !capChecks_ddc[162] ||
	       capChecks_toCheck_BIT_44_AND_NOT_capChecks_a_B_ETC___d148,
	       IF_capChecks_toCheck_BIT_45_AND_NOT_capChecks__ETC___d334 } ;

  // remaining internal signals
  assign IF_NOT_capChecks_toCheck_BIT_34_4_89_OR_capChe_ETC___d323 =
	     ((!capChecks_toCheck[34] || capChecks_a[67]) &&
	      (!capChecks_toCheck[33] || !capChecks_b[67]) &&
	      capChecks_toCheck[32] &&
	      !capChecks_b[75]) ?
	       5'd26 :
	       5'd27 ;
  assign IF_NOT_capChecks_toCheck_BIT_36_6_85_OR_capChe_ETC___d326 =
	     NOT_capChecks_toCheck_BIT_36_6_85_OR_capChecks_ETC___d312 ?
	       5'd23 :
	       (((!capChecks_toCheck[36] || capChecks_a[74]) &&
		 (!capChecks_toCheck[35] || capChecks_b[74]) &&
		 NOT_capChecks_toCheck_BIT_34_4_89_OR_capChecks_ETC___d319) ?
		  5'd24 :
		  IF_capChecks_toCheck_BIT_36_6_AND_NOT_capCheck_ETC___d324) ;
  assign IF_NOT_capChecks_toCheck_BIT_36_6_85_OR_capChe_ETC___d327 =
	     ((!capChecks_toCheck[36] || capChecks_a[74]) &&
	      (!capChecks_toCheck[35] || capChecks_b[74]) &&
	      (capChecks_toCheck[34] && !capChecks_a[67] ||
	       capChecks_toCheck[33] && capChecks_b[67])) ?
	       5'd17 :
	       IF_NOT_capChecks_toCheck_BIT_36_6_85_OR_capChe_ETC___d326 ;
  assign IF_NOT_capChecks_toCheck_BIT_36_6_85_OR_capChe_ETC___d329 =
	     ((!capChecks_toCheck[36] || capChecks_a[74]) &&
	      (!capChecks_toCheck[35] || capChecks_b[74]) &&
	      NOT_capChecks_toCheck_BIT_34_4_89_OR_capChecks_ETC___d298) ?
	       5'd8 :
	       (((!capChecks_toCheck[36] || capChecks_a[74]) &&
		 (!capChecks_toCheck[35] || capChecks_b[74]) &&
		 NOT_capChecks_toCheck_BIT_34_4_89_OR_capChecks_ETC___d306) ?
		  5'd10 :
		  IF_NOT_capChecks_toCheck_BIT_36_6_85_OR_capChe_ETC___d327) ;
  assign IF_NOT_capChecks_toCheck_BIT_45_50_OR_capCheck_ETC___d333 =
	     ((!capChecks_toCheck[45] || capChecks_ddc[162]) &&
	      NOT_capChecks_toCheck_BIT_44_52_OR_capChecks_a_ETC___d280) ?
	       5'd1 :
	       ((capChecks_toCheck[45] && !capChecks_ddc[162] ||
		 capChecks_toCheck[44] && !capChecks_a[162] ||
		 capChecks_toCheck[43] && !capChecks_b[162]) ?
		  5'd2 :
		  IF_capChecks_toCheck_BIT_40_3_AND_capChecks_dd_ETC___d331) ;
  assign IF_capChecks_toCheck_BIT_34_4_AND_NOT_capCheck_ETC___d252 =
	     (capChecks_toCheck[34] && !capChecks_a[67]) ?
	       capChecks_toCheck[11:6] :
	       (capChecks_toCheck_BIT_33_8_AND_capChecks_b_BIT_ETC___d248 ?
		  capChecks_toCheck[5:0] :
		  ((capChecks_toCheck[26] &&
		    NOT_capChecks_a_BITS_43_TO_38_01_ULE_52_02_03__ETC___d119) ?
		     capChecks_toCheck[11:6] :
		     ((capChecks_toCheck[25] &&
		       capChecks_toCheck[11:6] != 6'd0) ?
			6'd32 :
			capChecks_toCheck[11:6]))) ;
  assign IF_capChecks_toCheck_BIT_36_6_AND_NOT_capCheck_ETC___d324 =
	     (capChecks_toCheck[36] && !capChecks_a[74] ||
	      capChecks_toCheck[35] && !capChecks_b[74]) ?
	       5'd25 :
	       IF_NOT_capChecks_toCheck_BIT_34_4_89_OR_capChe_ETC___d323 ;
  assign IF_capChecks_toCheck_BIT_39_9_AND_capChecks_a__ETC___d258 =
	     (capChecks_toCheck[39] && capChecks_a[162] &&
	      capChecks_a[62:45] != 18'd262143) ?
	       capChecks_toCheck[11:6] :
	       ((capChecks_toCheck[38] && capChecks_b[162] &&
		 capChecks_b[62:45] != 18'd262143) ?
		  capChecks_toCheck[5:0] :
		  IF_capChecks_toCheck_BIT_42_1_AND_capChecks_a__ETC___d256) ;
  assign IF_capChecks_toCheck_BIT_40_3_AND_capChecks_dd_ETC___d331 =
	     (capChecks_toCheck[40] && capChecks_ddc[162] &&
	      capChecks_ddc[62:45] != 18'd262143 ||
	      capChecks_toCheck_BIT_39_9_AND_capChecks_a_BIT_ETC___d286) ?
	       5'd3 :
	       (capChecks_toCheck_BIT_28_7_AND_NOT_0_CONCAT_ca_ETC___d293 ?
		  5'd4 :
		  IF_NOT_capChecks_toCheck_BIT_36_6_85_OR_capChe_ETC___d329) ;
  assign IF_capChecks_toCheck_BIT_41_9_AND_capChecks_b__ETC___d255 =
	     (capChecks_toCheck[41] &&
	      (capChecks_b[62:45] == 18'd262143 ||
	       capChecks_b[62:45] == 18'd262142 ||
	       capChecks_b[62:45] == 18'd262141 ||
	       capChecks_b[62:45] == 18'd262140)) ?
	       capChecks_toCheck[5:0] :
	       ((capChecks_toCheck[28] &&
		 !_0_CONCAT_capChecks_a_BITS_62_TO_45_1_8_ULE_262139___d49 ||
		 capChecks_toCheck[37] &&
		 !capChecks_a_BITS_62_TO_45_1_EQ_capChecks_b_BIT_ETC___d53 ||
		 capChecks_toCheck[36] && !capChecks_a[74]) ?
		  capChecks_toCheck[11:6] :
		  ((capChecks_toCheck[35] && !capChecks_b[74]) ?
		     capChecks_toCheck[5:0] :
		     IF_capChecks_toCheck_BIT_34_4_AND_NOT_capCheck_ETC___d252)) ;
  assign IF_capChecks_toCheck_BIT_42_1_AND_capChecks_a__ETC___d256 =
	     (capChecks_toCheck[42] &&
	      (capChecks_a[62:45] == 18'd262143 ||
	       capChecks_a[62:45] == 18'd262142 ||
	       capChecks_a[62:45] == 18'd262141 ||
	       capChecks_a[62:45] == 18'd262140)) ?
	       capChecks_toCheck[11:6] :
	       IF_capChecks_toCheck_BIT_41_9_AND_capChecks_b__ETC___d255 ;
  assign IF_capChecks_toCheck_BIT_43_AND_NOT_capChecks__ETC___d260 =
	     (capChecks_toCheck[43] && !capChecks_b[162]) ?
	       capChecks_toCheck[5:0] :
	       ((capChecks_toCheck[40] && capChecks_ddc[162] &&
		 capChecks_ddc[62:45] != 18'd262143) ?
		  6'b100001 :
		  IF_capChecks_toCheck_BIT_39_9_AND_capChecks_a__ETC___d258) ;
  assign IF_capChecks_toCheck_BIT_45_AND_NOT_capChecks__ETC___d334 =
	     { (capChecks_toCheck[45] && !capChecks_ddc[162]) ?
		 6'b100001 :
		 ((capChecks_toCheck[44] && !capChecks_a[162]) ?
		    capChecks_toCheck[11:6] :
		    IF_capChecks_toCheck_BIT_43_AND_NOT_capChecks__ETC___d260),
	       IF_NOT_capChecks_toCheck_BIT_45_50_OR_capCheck_ETC___d333 } ;
  assign NOT_capChecks_a_BITS_43_TO_38_01_ULE_52_02_03__ETC___d119 =
	     !capChecks_a_BITS_43_TO_38_01_ULE_52___d102 ||
	     capChecks_a[43:38] == 6'd52 &&
	     (capChecks_a[37] || capChecks_a[23:22] != 2'b0) ||
	     capChecks_a[43:38] == 6'd51 && capChecks_a[23] ||
	     capChecks_a[64:63] != 2'd0 ;
  assign NOT_capChecks_toCheck_BIT_28_7_81_OR_0_CONCAT__ETC___d277 =
	     (!capChecks_toCheck[28] ||
	      _0_CONCAT_capChecks_a_BITS_62_TO_45_1_8_ULE_262139___d49) &&
	     (!capChecks_toCheck[37] ||
	      capChecks_a_BITS_62_TO_45_1_EQ_capChecks_b_BIT_ETC___d53) &&
	     (!capChecks_toCheck[36] || capChecks_a[74]) &&
	     (!capChecks_toCheck[35] || capChecks_b[74]) &&
	     NOT_capChecks_toCheck_BIT_34_4_89_OR_capChecks_ETC___d275 ;
  assign NOT_capChecks_toCheck_BIT_30_9_98_OR_capChecks_ETC___d303 =
	     (!capChecks_toCheck[30] ||
	      capChecks_b_BITS_159_TO_96_0_EQ_0_CONCAT_capCh_ETC___d81) &&
	     (!capChecks_toCheck[29] ||
	      capChecks_b_BITS_159_TO_96_0_ULE_262139___d85) &&
	     (!capChecks_toCheck[27] ||
	      _0_CONCAT_capChecks_a_BITS_81_TO_78_9_AND_capCh_ETC___d97) &&
	     (!capChecks_toCheck[26] ||
	      capChecks_a_BITS_43_TO_38_01_ULE_52_02_AND_NOT_ETC___d214) &&
	     (!capChecks_toCheck[25] || capChecks_toCheck[11:6] == 6'd0) ;
  assign NOT_capChecks_toCheck_BIT_30_9_98_OR_capChecks_ETC___d316 =
	     (!capChecks_toCheck[30] ||
	      capChecks_b_BITS_159_TO_96_0_EQ_0_CONCAT_capCh_ETC___d81) &&
	     (!capChecks_toCheck[29] ||
	      capChecks_b_BITS_159_TO_96_0_ULE_262139___d85) &&
	     (!capChecks_toCheck[27] ||
	      _0_CONCAT_capChecks_a_BITS_81_TO_78_9_AND_capCh_ETC___d97) &&
	     (!capChecks_toCheck[26] ||
	      capChecks_a_BITS_43_TO_38_01_ULE_52_02_AND_NOT_ETC___d214) &&
	     capChecks_toCheck[25] &&
	     capChecks_toCheck[11:6] != 6'd0 ;
  assign NOT_capChecks_toCheck_BIT_34_4_89_OR_capChecks_ETC___d275 =
	     (!capChecks_toCheck[34] || capChecks_a[67]) &&
	     (!capChecks_toCheck[33] || !capChecks_b[67]) &&
	     (!capChecks_toCheck[32] || capChecks_b[75]) &&
	     (!capChecks_toCheck[31] || capChecks_b[73]) &&
	     (!capChecks_toCheck[30] ||
	      capChecks_b_BITS_159_TO_96_0_EQ_0_CONCAT_capCh_ETC___d81) &&
	     capChecks_toCheck_BIT_29_4_AND_NOT_capChecks_b_ETC___d271 ;
  assign NOT_capChecks_toCheck_BIT_34_4_89_OR_capChecks_ETC___d291 =
	     (!capChecks_toCheck[34] || capChecks_a[67]) &&
	     (!capChecks_toCheck[33] || !capChecks_b[67]) &&
	     (!capChecks_toCheck[32] || capChecks_b[75]) &&
	     (!capChecks_toCheck[31] || capChecks_b[73]) &&
	     capChecks_toCheck[30] &&
	     !capChecks_b_BITS_159_TO_96_0_EQ_0_CONCAT_capCh_ETC___d81 ;
  assign NOT_capChecks_toCheck_BIT_34_4_89_OR_capChecks_ETC___d298 =
	     (!capChecks_toCheck[34] || capChecks_a[67]) &&
	     (!capChecks_toCheck[33] || !capChecks_b[67]) &&
	     (!capChecks_toCheck[32] || capChecks_b[75]) &&
	     (!capChecks_toCheck[31] || capChecks_b[73]) &&
	     (!capChecks_toCheck[30] ||
	      capChecks_b_BITS_159_TO_96_0_EQ_0_CONCAT_capCh_ETC___d81) &&
	     (!capChecks_toCheck[29] ||
	      capChecks_b_BITS_159_TO_96_0_ULE_262139___d85) &&
	     capChecks_toCheck[27] &&
	     !_0_CONCAT_capChecks_a_BITS_81_TO_78_9_AND_capCh_ETC___d97 ;
  assign NOT_capChecks_toCheck_BIT_34_4_89_OR_capChecks_ETC___d306 =
	     (!capChecks_toCheck[34] || capChecks_a[67]) &&
	     (!capChecks_toCheck[33] || !capChecks_b[67]) &&
	     (!capChecks_toCheck[32] || capChecks_b[75]) &&
	     (!capChecks_toCheck[31] || capChecks_b[73]) &&
	     NOT_capChecks_toCheck_BIT_30_9_98_OR_capChecks_ETC___d303 ;
  assign NOT_capChecks_toCheck_BIT_34_4_89_OR_capChecks_ETC___d319 =
	     (!capChecks_toCheck[34] || capChecks_a[67]) &&
	     (!capChecks_toCheck[33] || !capChecks_b[67]) &&
	     (!capChecks_toCheck[32] || capChecks_b[75]) &&
	     (!capChecks_toCheck[31] || capChecks_b[73]) &&
	     NOT_capChecks_toCheck_BIT_30_9_98_OR_capChecks_ETC___d316 ;
  assign NOT_capChecks_toCheck_BIT_36_6_85_OR_capChecks_ETC___d312 =
	     (!capChecks_toCheck[36] || capChecks_a[74]) &&
	     (!capChecks_toCheck[35] || capChecks_b[74]) &&
	     (!capChecks_toCheck[34] || capChecks_a[67]) &&
	     (!capChecks_toCheck[33] || !capChecks_b[67]) &&
	     (!capChecks_toCheck[32] || capChecks_b[75]) &&
	     capChecks_toCheck[31] &&
	     !capChecks_b[73] ;
  assign NOT_capChecks_toCheck_BIT_39_9_59_OR_NOT_capCh_ETC___d265 =
	     (!capChecks_toCheck[39] || !capChecks_a[162] ||
	      capChecks_a[62:45] == 18'd262143) &&
	     (!capChecks_toCheck[38] || !capChecks_b[162] ||
	      capChecks_b[62:45] == 18'd262143) &&
	     NOT_capChecks_toCheck_BIT_42_1_65_OR_NOT_capCh_ETC___d263 ;
  assign NOT_capChecks_toCheck_BIT_42_1_65_OR_NOT_capCh_ETC___d263 =
	     (!capChecks_toCheck[42] ||
	      capChecks_a[62:45] != 18'd262143 &&
	      capChecks_a[62:45] != 18'd262142 &&
	      capChecks_a[62:45] != 18'd262141 &&
	      capChecks_a[62:45] != 18'd262140) &&
	     (!capChecks_toCheck[41] ||
	      capChecks_b[62:45] != 18'd262143 &&
	      capChecks_b[62:45] != 18'd262142 &&
	      capChecks_b[62:45] != 18'd262141 &&
	      capChecks_b[62:45] != 18'd262140) ;
  assign NOT_capChecks_toCheck_BIT_44_52_OR_capChecks_a_ETC___d280 =
	     (!capChecks_toCheck[44] || capChecks_a[162]) &&
	     (!capChecks_toCheck[43] || capChecks_b[162]) &&
	     (!capChecks_toCheck[40] || !capChecks_ddc[162] ||
	      capChecks_ddc[62:45] == 18'd262143) &&
	     NOT_capChecks_toCheck_BIT_39_9_59_OR_NOT_capCh_ETC___d265 &&
	     NOT_capChecks_toCheck_BIT_28_7_81_OR_0_CONCAT__ETC___d277 ;
  assign _0_CONCAT_capChecks_a_BITS_62_TO_45_1_8_ULE_262139___d49 =
	     { 46'd0, capChecks_a[62:45] } <= 64'd262139 ;
  assign _0_CONCAT_capChecks_a_BITS_81_TO_78_9_AND_capCh_ETC___d97 =
	     { 12'd0,
	       capChecks_a[81:78] & capChecks_b[81:78],
	       3'd0,
	       capChecks_a[77:66] & capChecks_b[77:66] } ==
	     { 12'd0, capChecks_a[81:78], 3'h0, capChecks_a[77:66] } ;
  assign capChecks_a_BITS_43_TO_38_01_ULE_52_02_AND_NOT_ETC___d214 =
	     capChecks_a_BITS_43_TO_38_01_ULE_52___d102 &&
	     (capChecks_a[43:38] != 6'd52 ||
	      !capChecks_a[37] && capChecks_a[23:22] == 2'b0) &&
	     (capChecks_a[43:38] != 6'd51 || !capChecks_a[23]) &&
	     capChecks_a[64:63] == 2'd0 ;
  assign capChecks_a_BITS_43_TO_38_01_ULE_52___d102 =
	     capChecks_a[43:38] <= 6'd52 ;
  assign capChecks_a_BITS_62_TO_45_1_EQ_capChecks_b_BIT_ETC___d53 =
	     capChecks_a[62:45] == capChecks_b[62:45] ;
  assign capChecks_b_BITS_159_TO_96_0_EQ_0_CONCAT_capCh_ETC___d81 =
	     capChecks_b[159:96] == { 46'd0, capChecks_a[62:45] } ;
  assign capChecks_b_BITS_159_TO_96_0_ULE_262139___d85 =
	     capChecks_b[159:96] <= 64'd262139 ;
  assign capChecks_toCheck_BIT_28_7_AND_NOT_0_CONCAT_ca_ETC___d141 =
	     capChecks_toCheck[28] &&
	     !_0_CONCAT_capChecks_a_BITS_62_TO_45_1_8_ULE_262139___d49 ||
	     capChecks_toCheck[37] &&
	     !capChecks_a_BITS_62_TO_45_1_EQ_capChecks_b_BIT_ETC___d53 ||
	     capChecks_toCheck[36] && !capChecks_a[74] ||
	     capChecks_toCheck[35] && !capChecks_b[74] ||
	     capChecks_toCheck_BIT_34_4_AND_NOT_capChecks_a_ETC___d137 ;
  assign capChecks_toCheck_BIT_28_7_AND_NOT_0_CONCAT_ca_ETC___d293 =
	     capChecks_toCheck[28] &&
	     !_0_CONCAT_capChecks_a_BITS_62_TO_45_1_8_ULE_262139___d49 ||
	     capChecks_toCheck[37] &&
	     !capChecks_a_BITS_62_TO_45_1_EQ_capChecks_b_BIT_ETC___d53 ||
	     (!capChecks_toCheck[36] || capChecks_a[74]) &&
	     (!capChecks_toCheck[35] || capChecks_b[74]) &&
	     NOT_capChecks_toCheck_BIT_34_4_89_OR_capChecks_ETC___d291 ;
  assign capChecks_toCheck_BIT_29_4_AND_NOT_capChecks_b_ETC___d132 =
	     capChecks_toCheck[29] &&
	     !capChecks_b_BITS_159_TO_96_0_ULE_262139___d85 ||
	     capChecks_toCheck[27] &&
	     !_0_CONCAT_capChecks_a_BITS_81_TO_78_9_AND_capCh_ETC___d97 ||
	     capChecks_toCheck[26] &&
	     NOT_capChecks_a_BITS_43_TO_38_01_ULE_52_02_03__ETC___d119 ||
	     capChecks_toCheck[25] && capChecks_toCheck[11:6] != 6'd0 ||
	     capChecks_toCheck[22] && !capChecks_cap_exact ;
  assign capChecks_toCheck_BIT_29_4_AND_NOT_capChecks_b_ETC___d271 =
	     capChecks_toCheck[29] &&
	     !capChecks_b_BITS_159_TO_96_0_ULE_262139___d85 ||
	     (!capChecks_toCheck[27] ||
	      _0_CONCAT_capChecks_a_BITS_81_TO_78_9_AND_capCh_ETC___d97) &&
	     capChecks_toCheck[26] &&
	     NOT_capChecks_a_BITS_43_TO_38_01_ULE_52_02_03__ETC___d119 ;
  assign capChecks_toCheck_BIT_33_8_AND_capChecks_b_BIT_ETC___d248 =
	     capChecks_toCheck[33] && capChecks_b[67] ||
	     capChecks_toCheck[32] && !capChecks_b[75] ||
	     capChecks_toCheck[31] && !capChecks_b[73] ||
	     capChecks_toCheck[30] &&
	     !capChecks_b_BITS_159_TO_96_0_EQ_0_CONCAT_capCh_ETC___d81 ||
	     capChecks_toCheck[29] &&
	     !capChecks_b_BITS_159_TO_96_0_ULE_262139___d85 ||
	     capChecks_toCheck[27] &&
	     !_0_CONCAT_capChecks_a_BITS_81_TO_78_9_AND_capCh_ETC___d97 ;
  assign capChecks_toCheck_BIT_34_4_AND_NOT_capChecks_a_ETC___d137 =
	     capChecks_toCheck[34] && !capChecks_a[67] ||
	     capChecks_toCheck[33] && capChecks_b[67] ||
	     capChecks_toCheck[32] && !capChecks_b[75] ||
	     capChecks_toCheck[31] && !capChecks_b[73] ||
	     capChecks_toCheck[30] &&
	     !capChecks_b_BITS_159_TO_96_0_EQ_0_CONCAT_capCh_ETC___d81 ||
	     capChecks_toCheck_BIT_29_4_AND_NOT_capChecks_b_ETC___d132 ;
  assign capChecks_toCheck_BIT_39_9_AND_capChecks_a_BIT_ETC___d145 =
	     capChecks_toCheck[39] && capChecks_a[162] &&
	     capChecks_a[62:45] != 18'd262143 ||
	     capChecks_toCheck[38] && capChecks_b[162] &&
	     capChecks_b[62:45] != 18'd262143 ||
	     capChecks_toCheck_BIT_42_1_AND_capChecks_a_BIT_ETC___d143 ;
  assign capChecks_toCheck_BIT_39_9_AND_capChecks_a_BIT_ETC___d286 =
	     capChecks_toCheck[39] && capChecks_a[162] &&
	     capChecks_a[62:45] != 18'd262143 ||
	     capChecks_toCheck[38] && capChecks_b[162] &&
	     capChecks_b[62:45] != 18'd262143 ||
	     capChecks_toCheck_BIT_42_1_AND_capChecks_a_BIT_ETC___d284 ;
  assign capChecks_toCheck_BIT_42_1_AND_capChecks_a_BIT_ETC___d143 =
	     capChecks_toCheck[42] &&
	     (capChecks_a[62:45] == 18'd262143 ||
	      capChecks_a[62:45] == 18'd262142 ||
	      capChecks_a[62:45] == 18'd262141 ||
	      capChecks_a[62:45] == 18'd262140) ||
	     capChecks_toCheck[41] &&
	     (capChecks_b[62:45] == 18'd262143 ||
	      capChecks_b[62:45] == 18'd262142 ||
	      capChecks_b[62:45] == 18'd262141 ||
	      capChecks_b[62:45] == 18'd262140) ||
	     capChecks_toCheck_BIT_28_7_AND_NOT_0_CONCAT_ca_ETC___d141 ;
  assign capChecks_toCheck_BIT_42_1_AND_capChecks_a_BIT_ETC___d284 =
	     capChecks_toCheck[42] &&
	     (capChecks_a[62:45] == 18'd262143 ||
	      capChecks_a[62:45] == 18'd262142 ||
	      capChecks_a[62:45] == 18'd262141 ||
	      capChecks_a[62:45] == 18'd262140) ||
	     capChecks_toCheck[41] &&
	     (capChecks_b[62:45] == 18'd262143 ||
	      capChecks_b[62:45] == 18'd262142 ||
	      capChecks_b[62:45] == 18'd262141 ||
	      capChecks_b[62:45] == 18'd262140) ;
  assign capChecks_toCheck_BIT_44_AND_NOT_capChecks_a_B_ETC___d148 =
	     capChecks_toCheck[44] && !capChecks_a[162] ||
	     capChecks_toCheck[43] && !capChecks_b[162] ||
	     capChecks_toCheck[40] && capChecks_ddc[162] &&
	     capChecks_ddc[62:45] != 18'd262143 ||
	     capChecks_toCheck_BIT_39_9_AND_capChecks_a_BIT_ETC___d145 ;
endmodule  // module_capChecks

