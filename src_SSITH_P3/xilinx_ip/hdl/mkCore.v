//
// Generated by Bluespec Compiler (build 39ae402)
//
//
//
//
// Ports:
// Name                         I/O  size props
// RDY_coreReq_start              O     1
// RDY_coreReq_perfReq            O     1 reg
// coreIndInv_perfResp            O    73
// RDY_coreIndInv_perfResp        O     1 reg
// RDY_coreIndInv_terminate       O     1 reg
// dCacheToParent_rsToP_notEmpty  O     1
// RDY_dCacheToParent_rsToP_notEmpty  O     1 const
// RDY_dCacheToParent_rsToP_deq   O     1
// dCacheToParent_rsToP_first     O   579
// RDY_dCacheToParent_rsToP_first  O     1
// dCacheToParent_rqToP_notEmpty  O     1
// RDY_dCacheToParent_rqToP_notEmpty  O     1 const
// RDY_dCacheToParent_rqToP_deq   O     1
// dCacheToParent_rqToP_first     O    72
// RDY_dCacheToParent_rqToP_first  O     1
// dCacheToParent_fromP_notFull   O     1
// RDY_dCacheToParent_fromP_notFull  O     1 const
// RDY_dCacheToParent_fromP_enq   O     1
// iCacheToParent_rsToP_notEmpty  O     1
// RDY_iCacheToParent_rsToP_notEmpty  O     1 const
// RDY_iCacheToParent_rsToP_deq   O     1
// iCacheToParent_rsToP_first     O   579
// RDY_iCacheToParent_rsToP_first  O     1
// iCacheToParent_rqToP_notEmpty  O     1
// RDY_iCacheToParent_rqToP_notEmpty  O     1 const
// RDY_iCacheToParent_rqToP_deq   O     1
// iCacheToParent_rqToP_first     O    72
// RDY_iCacheToParent_rqToP_first  O     1
// iCacheToParent_fromP_notFull   O     1
// RDY_iCacheToParent_fromP_notFull  O     1 const
// RDY_iCacheToParent_fromP_enq   O     1
// tlbToMem_memReq_notEmpty       O     1
// RDY_tlbToMem_memReq_notEmpty   O     1 const
// RDY_tlbToMem_memReq_deq        O     1
// tlbToMem_memReq_first          O    65
// RDY_tlbToMem_memReq_first      O     1
// tlbToMem_respLd_notFull        O     1
// RDY_tlbToMem_respLd_notFull    O     1 const
// RDY_tlbToMem_respLd_enq        O     1
// mmioToPlatform_cRq_notEmpty    O     1
// RDY_mmioToPlatform_cRq_notEmpty  O     1 const
// RDY_mmioToPlatform_cRq_deq     O     1
// mmioToPlatform_cRq_first       O   142
// RDY_mmioToPlatform_cRq_first   O     1
// mmioToPlatform_pRs_notFull     O     1
// RDY_mmioToPlatform_pRs_notFull  O     1 const
// RDY_mmioToPlatform_pRs_enq     O     1
// mmioToPlatform_pRq_notFull     O     1
// RDY_mmioToPlatform_pRq_notFull  O     1 const
// RDY_mmioToPlatform_pRq_enq     O     1
// mmioToPlatform_cRs_notEmpty    O     1
// RDY_mmioToPlatform_cRs_notEmpty  O     1 const
// RDY_mmioToPlatform_cRs_deq     O     1
// mmioToPlatform_cRs_first       O     1 reg
// RDY_mmioToPlatform_cRs_first   O     1
// RDY_mmioToPlatform_setTime     O     1 const
// sendDoStats                    O     1 reg
// RDY_sendDoStats                O     1 reg
// RDY_recvDoStats                O     1 const
// deadlock_dCacheCRqStuck_get    O    73 const
// RDY_deadlock_dCacheCRqStuck_get  O     1 const
// deadlock_dCachePRqStuck_get    O    68 const
// RDY_deadlock_dCachePRqStuck_get  O     1 const
// deadlock_iCacheCRqStuck_get    O    68 const
// RDY_deadlock_iCacheCRqStuck_get  O     1 const
// deadlock_iCachePRqStuck_get    O    68 const
// RDY_deadlock_iCachePRqStuck_get  O     1 const
// deadlock_renameInstStuck_get   O    72 const
// RDY_deadlock_renameInstStuck_get  O     1 const
// deadlock_renameCorrectPathStuck_get  O    72 const
// RDY_deadlock_renameCorrectPathStuck_get  O     1 const
// deadlock_commitInstStuck_get   O   155 const
// RDY_deadlock_commitInstStuck_get  O     1 const
// deadlock_commitUserInstStuck_get  O   155 const
// RDY_deadlock_commitUserInstStuck_get  O     1 const
// RDY_deadlock_checkStarted_get  O     1 const
// renameDebug_renameErr_get      O    81 const
// RDY_renameDebug_renameErr_get  O     1 const
// RDY_setMEIP                    O     1 const
// RDY_setSEIP                    O     1 const
// RDY_hart0_run_halt_server_request_put  O     1 reg
// hart0_run_halt_server_response_get  O     1 reg
// RDY_hart0_run_halt_server_response_get  O     1 reg
// RDY_hart0_gpr_mem_server_request_put  O     1 reg
// hart0_gpr_mem_server_response_get  O    65 reg
// RDY_hart0_gpr_mem_server_response_get  O     1 reg
// RDY_hart0_fpr_mem_server_request_put  O     1 reg
// hart0_fpr_mem_server_response_get  O    65 reg
// RDY_hart0_fpr_mem_server_response_get  O     1 reg
// RDY_hart0_csr_mem_server_request_put  O     1 reg
// hart0_csr_mem_server_response_get  O    65 reg
// RDY_hart0_csr_mem_server_response_get  O     1 reg
// coreId                         I     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// coreReq_start_running          I     1
// coreReq_start_startpc          I    64
// coreReq_start_toHostAddr       I    64 reg
// coreReq_start_fromHostAddr     I    64 reg
// coreReq_perfReq_loc            I     4 reg
// coreReq_perfReq_t              I     5 reg
// dCacheToParent_fromP_enq_x     I   583
// iCacheToParent_fromP_enq_x     I   583
// tlbToMem_respLd_enq_x          I    65
// mmioToPlatform_pRs_enq_x       I    69
// mmioToPlatform_pRq_enq_x       I    39
// mmioToPlatform_setTime_t       I    64 reg
// recvDoStats_x                  I     1 reg
// setMEIP_v                      I     1 reg
// setSEIP_v                      I     1
// hart0_run_halt_server_request_put  I     1 reg
// hart0_gpr_mem_server_request_put  I    70 reg
// hart0_fpr_mem_server_request_put  I    70 reg
// hart0_csr_mem_server_request_put  I    77 reg
// EN_coreReq_start               I     1
// EN_coreReq_perfReq             I     1
// EN_coreIndInv_terminate        I     1
// EN_dCacheToParent_rsToP_deq    I     1
// EN_dCacheToParent_rqToP_deq    I     1
// EN_dCacheToParent_fromP_enq    I     1
// EN_iCacheToParent_rsToP_deq    I     1
// EN_iCacheToParent_rqToP_deq    I     1
// EN_iCacheToParent_fromP_enq    I     1
// EN_tlbToMem_memReq_deq         I     1
// EN_tlbToMem_respLd_enq         I     1
// EN_mmioToPlatform_cRq_deq      I     1
// EN_mmioToPlatform_pRs_enq      I     1
// EN_mmioToPlatform_pRq_enq      I     1
// EN_mmioToPlatform_cRs_deq      I     1
// EN_mmioToPlatform_setTime      I     1
// EN_recvDoStats                 I     1
// EN_deadlock_checkStarted_get   I     1 unused
// EN_setMEIP                     I     1
// EN_setSEIP                     I     1
// EN_hart0_run_halt_server_request_put  I     1
// EN_hart0_gpr_mem_server_request_put  I     1
// EN_hart0_fpr_mem_server_request_put  I     1
// EN_hart0_csr_mem_server_request_put  I     1
// EN_coreIndInv_perfResp         I     1
// EN_sendDoStats                 I     1
// EN_deadlock_dCacheCRqStuck_get  I     1 unused
// EN_deadlock_dCachePRqStuck_get  I     1 unused
// EN_deadlock_iCacheCRqStuck_get  I     1 unused
// EN_deadlock_iCachePRqStuck_get  I     1 unused
// EN_deadlock_renameInstStuck_get  I     1 unused
// EN_deadlock_renameCorrectPathStuck_get  I     1 unused
// EN_deadlock_commitInstStuck_get  I     1 unused
// EN_deadlock_commitUserInstStuck_get  I     1 unused
// EN_renameDebug_renameErr_get   I     1 unused
// EN_hart0_run_halt_server_response_get  I     1
// EN_hart0_gpr_mem_server_response_get  I     1
// EN_hart0_fpr_mem_server_response_get  I     1
// EN_hart0_csr_mem_server_response_get  I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkCore(coreId,
	      CLK,
	      RST_N,

	      coreReq_start_running,
	      coreReq_start_startpc,
	      coreReq_start_toHostAddr,
	      coreReq_start_fromHostAddr,
	      EN_coreReq_start,
	      RDY_coreReq_start,

	      coreReq_perfReq_loc,
	      coreReq_perfReq_t,
	      EN_coreReq_perfReq,
	      RDY_coreReq_perfReq,

	      EN_coreIndInv_perfResp,
	      coreIndInv_perfResp,
	      RDY_coreIndInv_perfResp,

	      EN_coreIndInv_terminate,
	      RDY_coreIndInv_terminate,

	      dCacheToParent_rsToP_notEmpty,
	      RDY_dCacheToParent_rsToP_notEmpty,

	      EN_dCacheToParent_rsToP_deq,
	      RDY_dCacheToParent_rsToP_deq,

	      dCacheToParent_rsToP_first,
	      RDY_dCacheToParent_rsToP_first,

	      dCacheToParent_rqToP_notEmpty,
	      RDY_dCacheToParent_rqToP_notEmpty,

	      EN_dCacheToParent_rqToP_deq,
	      RDY_dCacheToParent_rqToP_deq,

	      dCacheToParent_rqToP_first,
	      RDY_dCacheToParent_rqToP_first,

	      dCacheToParent_fromP_notFull,
	      RDY_dCacheToParent_fromP_notFull,

	      dCacheToParent_fromP_enq_x,
	      EN_dCacheToParent_fromP_enq,
	      RDY_dCacheToParent_fromP_enq,

	      iCacheToParent_rsToP_notEmpty,
	      RDY_iCacheToParent_rsToP_notEmpty,

	      EN_iCacheToParent_rsToP_deq,
	      RDY_iCacheToParent_rsToP_deq,

	      iCacheToParent_rsToP_first,
	      RDY_iCacheToParent_rsToP_first,

	      iCacheToParent_rqToP_notEmpty,
	      RDY_iCacheToParent_rqToP_notEmpty,

	      EN_iCacheToParent_rqToP_deq,
	      RDY_iCacheToParent_rqToP_deq,

	      iCacheToParent_rqToP_first,
	      RDY_iCacheToParent_rqToP_first,

	      iCacheToParent_fromP_notFull,
	      RDY_iCacheToParent_fromP_notFull,

	      iCacheToParent_fromP_enq_x,
	      EN_iCacheToParent_fromP_enq,
	      RDY_iCacheToParent_fromP_enq,

	      tlbToMem_memReq_notEmpty,
	      RDY_tlbToMem_memReq_notEmpty,

	      EN_tlbToMem_memReq_deq,
	      RDY_tlbToMem_memReq_deq,

	      tlbToMem_memReq_first,
	      RDY_tlbToMem_memReq_first,

	      tlbToMem_respLd_notFull,
	      RDY_tlbToMem_respLd_notFull,

	      tlbToMem_respLd_enq_x,
	      EN_tlbToMem_respLd_enq,
	      RDY_tlbToMem_respLd_enq,

	      mmioToPlatform_cRq_notEmpty,
	      RDY_mmioToPlatform_cRq_notEmpty,

	      EN_mmioToPlatform_cRq_deq,
	      RDY_mmioToPlatform_cRq_deq,

	      mmioToPlatform_cRq_first,
	      RDY_mmioToPlatform_cRq_first,

	      mmioToPlatform_pRs_notFull,
	      RDY_mmioToPlatform_pRs_notFull,

	      mmioToPlatform_pRs_enq_x,
	      EN_mmioToPlatform_pRs_enq,
	      RDY_mmioToPlatform_pRs_enq,

	      mmioToPlatform_pRq_notFull,
	      RDY_mmioToPlatform_pRq_notFull,

	      mmioToPlatform_pRq_enq_x,
	      EN_mmioToPlatform_pRq_enq,
	      RDY_mmioToPlatform_pRq_enq,

	      mmioToPlatform_cRs_notEmpty,
	      RDY_mmioToPlatform_cRs_notEmpty,

	      EN_mmioToPlatform_cRs_deq,
	      RDY_mmioToPlatform_cRs_deq,

	      mmioToPlatform_cRs_first,
	      RDY_mmioToPlatform_cRs_first,

	      mmioToPlatform_setTime_t,
	      EN_mmioToPlatform_setTime,
	      RDY_mmioToPlatform_setTime,

	      EN_sendDoStats,
	      sendDoStats,
	      RDY_sendDoStats,

	      recvDoStats_x,
	      EN_recvDoStats,
	      RDY_recvDoStats,

	      EN_deadlock_dCacheCRqStuck_get,
	      deadlock_dCacheCRqStuck_get,
	      RDY_deadlock_dCacheCRqStuck_get,

	      EN_deadlock_dCachePRqStuck_get,
	      deadlock_dCachePRqStuck_get,
	      RDY_deadlock_dCachePRqStuck_get,

	      EN_deadlock_iCacheCRqStuck_get,
	      deadlock_iCacheCRqStuck_get,
	      RDY_deadlock_iCacheCRqStuck_get,

	      EN_deadlock_iCachePRqStuck_get,
	      deadlock_iCachePRqStuck_get,
	      RDY_deadlock_iCachePRqStuck_get,

	      EN_deadlock_renameInstStuck_get,
	      deadlock_renameInstStuck_get,
	      RDY_deadlock_renameInstStuck_get,

	      EN_deadlock_renameCorrectPathStuck_get,
	      deadlock_renameCorrectPathStuck_get,
	      RDY_deadlock_renameCorrectPathStuck_get,

	      EN_deadlock_commitInstStuck_get,
	      deadlock_commitInstStuck_get,
	      RDY_deadlock_commitInstStuck_get,

	      EN_deadlock_commitUserInstStuck_get,
	      deadlock_commitUserInstStuck_get,
	      RDY_deadlock_commitUserInstStuck_get,

	      EN_deadlock_checkStarted_get,
	      RDY_deadlock_checkStarted_get,

	      EN_renameDebug_renameErr_get,
	      renameDebug_renameErr_get,
	      RDY_renameDebug_renameErr_get,

	      setMEIP_v,
	      EN_setMEIP,
	      RDY_setMEIP,

	      setSEIP_v,
	      EN_setSEIP,
	      RDY_setSEIP,

	      hart0_run_halt_server_request_put,
	      EN_hart0_run_halt_server_request_put,
	      RDY_hart0_run_halt_server_request_put,

	      EN_hart0_run_halt_server_response_get,
	      hart0_run_halt_server_response_get,
	      RDY_hart0_run_halt_server_response_get,

	      hart0_gpr_mem_server_request_put,
	      EN_hart0_gpr_mem_server_request_put,
	      RDY_hart0_gpr_mem_server_request_put,

	      EN_hart0_gpr_mem_server_response_get,
	      hart0_gpr_mem_server_response_get,
	      RDY_hart0_gpr_mem_server_response_get,

	      hart0_fpr_mem_server_request_put,
	      EN_hart0_fpr_mem_server_request_put,
	      RDY_hart0_fpr_mem_server_request_put,

	      EN_hart0_fpr_mem_server_response_get,
	      hart0_fpr_mem_server_response_get,
	      RDY_hart0_fpr_mem_server_response_get,

	      hart0_csr_mem_server_request_put,
	      EN_hart0_csr_mem_server_request_put,
	      RDY_hart0_csr_mem_server_request_put,

	      EN_hart0_csr_mem_server_response_get,
	      hart0_csr_mem_server_response_get,
	      RDY_hart0_csr_mem_server_response_get);
  input  coreId;
  input  CLK;
  input  RST_N;

  // action method coreReq_start
  input  coreReq_start_running;
  input  [63 : 0] coreReq_start_startpc;
  input  [63 : 0] coreReq_start_toHostAddr;
  input  [63 : 0] coreReq_start_fromHostAddr;
  input  EN_coreReq_start;
  output RDY_coreReq_start;

  // action method coreReq_perfReq
  input  [3 : 0] coreReq_perfReq_loc;
  input  [4 : 0] coreReq_perfReq_t;
  input  EN_coreReq_perfReq;
  output RDY_coreReq_perfReq;

  // actionvalue method coreIndInv_perfResp
  input  EN_coreIndInv_perfResp;
  output [72 : 0] coreIndInv_perfResp;
  output RDY_coreIndInv_perfResp;

  // action method coreIndInv_terminate
  input  EN_coreIndInv_terminate;
  output RDY_coreIndInv_terminate;

  // value method dCacheToParent_rsToP_notEmpty
  output dCacheToParent_rsToP_notEmpty;
  output RDY_dCacheToParent_rsToP_notEmpty;

  // action method dCacheToParent_rsToP_deq
  input  EN_dCacheToParent_rsToP_deq;
  output RDY_dCacheToParent_rsToP_deq;

  // value method dCacheToParent_rsToP_first
  output [578 : 0] dCacheToParent_rsToP_first;
  output RDY_dCacheToParent_rsToP_first;

  // value method dCacheToParent_rqToP_notEmpty
  output dCacheToParent_rqToP_notEmpty;
  output RDY_dCacheToParent_rqToP_notEmpty;

  // action method dCacheToParent_rqToP_deq
  input  EN_dCacheToParent_rqToP_deq;
  output RDY_dCacheToParent_rqToP_deq;

  // value method dCacheToParent_rqToP_first
  output [71 : 0] dCacheToParent_rqToP_first;
  output RDY_dCacheToParent_rqToP_first;

  // value method dCacheToParent_fromP_notFull
  output dCacheToParent_fromP_notFull;
  output RDY_dCacheToParent_fromP_notFull;

  // action method dCacheToParent_fromP_enq
  input  [582 : 0] dCacheToParent_fromP_enq_x;
  input  EN_dCacheToParent_fromP_enq;
  output RDY_dCacheToParent_fromP_enq;

  // value method iCacheToParent_rsToP_notEmpty
  output iCacheToParent_rsToP_notEmpty;
  output RDY_iCacheToParent_rsToP_notEmpty;

  // action method iCacheToParent_rsToP_deq
  input  EN_iCacheToParent_rsToP_deq;
  output RDY_iCacheToParent_rsToP_deq;

  // value method iCacheToParent_rsToP_first
  output [578 : 0] iCacheToParent_rsToP_first;
  output RDY_iCacheToParent_rsToP_first;

  // value method iCacheToParent_rqToP_notEmpty
  output iCacheToParent_rqToP_notEmpty;
  output RDY_iCacheToParent_rqToP_notEmpty;

  // action method iCacheToParent_rqToP_deq
  input  EN_iCacheToParent_rqToP_deq;
  output RDY_iCacheToParent_rqToP_deq;

  // value method iCacheToParent_rqToP_first
  output [71 : 0] iCacheToParent_rqToP_first;
  output RDY_iCacheToParent_rqToP_first;

  // value method iCacheToParent_fromP_notFull
  output iCacheToParent_fromP_notFull;
  output RDY_iCacheToParent_fromP_notFull;

  // action method iCacheToParent_fromP_enq
  input  [582 : 0] iCacheToParent_fromP_enq_x;
  input  EN_iCacheToParent_fromP_enq;
  output RDY_iCacheToParent_fromP_enq;

  // value method tlbToMem_memReq_notEmpty
  output tlbToMem_memReq_notEmpty;
  output RDY_tlbToMem_memReq_notEmpty;

  // action method tlbToMem_memReq_deq
  input  EN_tlbToMem_memReq_deq;
  output RDY_tlbToMem_memReq_deq;

  // value method tlbToMem_memReq_first
  output [64 : 0] tlbToMem_memReq_first;
  output RDY_tlbToMem_memReq_first;

  // value method tlbToMem_respLd_notFull
  output tlbToMem_respLd_notFull;
  output RDY_tlbToMem_respLd_notFull;

  // action method tlbToMem_respLd_enq
  input  [64 : 0] tlbToMem_respLd_enq_x;
  input  EN_tlbToMem_respLd_enq;
  output RDY_tlbToMem_respLd_enq;

  // value method mmioToPlatform_cRq_notEmpty
  output mmioToPlatform_cRq_notEmpty;
  output RDY_mmioToPlatform_cRq_notEmpty;

  // action method mmioToPlatform_cRq_deq
  input  EN_mmioToPlatform_cRq_deq;
  output RDY_mmioToPlatform_cRq_deq;

  // value method mmioToPlatform_cRq_first
  output [141 : 0] mmioToPlatform_cRq_first;
  output RDY_mmioToPlatform_cRq_first;

  // value method mmioToPlatform_pRs_notFull
  output mmioToPlatform_pRs_notFull;
  output RDY_mmioToPlatform_pRs_notFull;

  // action method mmioToPlatform_pRs_enq
  input  [68 : 0] mmioToPlatform_pRs_enq_x;
  input  EN_mmioToPlatform_pRs_enq;
  output RDY_mmioToPlatform_pRs_enq;

  // value method mmioToPlatform_pRq_notFull
  output mmioToPlatform_pRq_notFull;
  output RDY_mmioToPlatform_pRq_notFull;

  // action method mmioToPlatform_pRq_enq
  input  [38 : 0] mmioToPlatform_pRq_enq_x;
  input  EN_mmioToPlatform_pRq_enq;
  output RDY_mmioToPlatform_pRq_enq;

  // value method mmioToPlatform_cRs_notEmpty
  output mmioToPlatform_cRs_notEmpty;
  output RDY_mmioToPlatform_cRs_notEmpty;

  // action method mmioToPlatform_cRs_deq
  input  EN_mmioToPlatform_cRs_deq;
  output RDY_mmioToPlatform_cRs_deq;

  // value method mmioToPlatform_cRs_first
  output mmioToPlatform_cRs_first;
  output RDY_mmioToPlatform_cRs_first;

  // action method mmioToPlatform_setTime
  input  [63 : 0] mmioToPlatform_setTime_t;
  input  EN_mmioToPlatform_setTime;
  output RDY_mmioToPlatform_setTime;

  // actionvalue method sendDoStats
  input  EN_sendDoStats;
  output sendDoStats;
  output RDY_sendDoStats;

  // action method recvDoStats
  input  recvDoStats_x;
  input  EN_recvDoStats;
  output RDY_recvDoStats;

  // actionvalue method deadlock_dCacheCRqStuck_get
  input  EN_deadlock_dCacheCRqStuck_get;
  output [72 : 0] deadlock_dCacheCRqStuck_get;
  output RDY_deadlock_dCacheCRqStuck_get;

  // actionvalue method deadlock_dCachePRqStuck_get
  input  EN_deadlock_dCachePRqStuck_get;
  output [67 : 0] deadlock_dCachePRqStuck_get;
  output RDY_deadlock_dCachePRqStuck_get;

  // actionvalue method deadlock_iCacheCRqStuck_get
  input  EN_deadlock_iCacheCRqStuck_get;
  output [67 : 0] deadlock_iCacheCRqStuck_get;
  output RDY_deadlock_iCacheCRqStuck_get;

  // actionvalue method deadlock_iCachePRqStuck_get
  input  EN_deadlock_iCachePRqStuck_get;
  output [67 : 0] deadlock_iCachePRqStuck_get;
  output RDY_deadlock_iCachePRqStuck_get;

  // actionvalue method deadlock_renameInstStuck_get
  input  EN_deadlock_renameInstStuck_get;
  output [71 : 0] deadlock_renameInstStuck_get;
  output RDY_deadlock_renameInstStuck_get;

  // actionvalue method deadlock_renameCorrectPathStuck_get
  input  EN_deadlock_renameCorrectPathStuck_get;
  output [71 : 0] deadlock_renameCorrectPathStuck_get;
  output RDY_deadlock_renameCorrectPathStuck_get;

  // actionvalue method deadlock_commitInstStuck_get
  input  EN_deadlock_commitInstStuck_get;
  output [154 : 0] deadlock_commitInstStuck_get;
  output RDY_deadlock_commitInstStuck_get;

  // actionvalue method deadlock_commitUserInstStuck_get
  input  EN_deadlock_commitUserInstStuck_get;
  output [154 : 0] deadlock_commitUserInstStuck_get;
  output RDY_deadlock_commitUserInstStuck_get;

  // action method deadlock_checkStarted_get
  input  EN_deadlock_checkStarted_get;
  output RDY_deadlock_checkStarted_get;

  // actionvalue method renameDebug_renameErr_get
  input  EN_renameDebug_renameErr_get;
  output [80 : 0] renameDebug_renameErr_get;
  output RDY_renameDebug_renameErr_get;

  // action method setMEIP
  input  setMEIP_v;
  input  EN_setMEIP;
  output RDY_setMEIP;

  // action method setSEIP
  input  setSEIP_v;
  input  EN_setSEIP;
  output RDY_setSEIP;

  // action method hart0_run_halt_server_request_put
  input  hart0_run_halt_server_request_put;
  input  EN_hart0_run_halt_server_request_put;
  output RDY_hart0_run_halt_server_request_put;

  // actionvalue method hart0_run_halt_server_response_get
  input  EN_hart0_run_halt_server_response_get;
  output hart0_run_halt_server_response_get;
  output RDY_hart0_run_halt_server_response_get;

  // action method hart0_gpr_mem_server_request_put
  input  [69 : 0] hart0_gpr_mem_server_request_put;
  input  EN_hart0_gpr_mem_server_request_put;
  output RDY_hart0_gpr_mem_server_request_put;

  // actionvalue method hart0_gpr_mem_server_response_get
  input  EN_hart0_gpr_mem_server_response_get;
  output [64 : 0] hart0_gpr_mem_server_response_get;
  output RDY_hart0_gpr_mem_server_response_get;

  // action method hart0_fpr_mem_server_request_put
  input  [69 : 0] hart0_fpr_mem_server_request_put;
  input  EN_hart0_fpr_mem_server_request_put;
  output RDY_hart0_fpr_mem_server_request_put;

  // actionvalue method hart0_fpr_mem_server_response_get
  input  EN_hart0_fpr_mem_server_response_get;
  output [64 : 0] hart0_fpr_mem_server_response_get;
  output RDY_hart0_fpr_mem_server_response_get;

  // action method hart0_csr_mem_server_request_put
  input  [76 : 0] hart0_csr_mem_server_request_put;
  input  EN_hart0_csr_mem_server_request_put;
  output RDY_hart0_csr_mem_server_request_put;

  // actionvalue method hart0_csr_mem_server_response_get
  input  EN_hart0_csr_mem_server_response_get;
  output [64 : 0] hart0_csr_mem_server_response_get;
  output RDY_hart0_csr_mem_server_response_get;

  // signals for module outputs
  wire [578 : 0] dCacheToParent_rsToP_first, iCacheToParent_rsToP_first;
  wire [154 : 0] deadlock_commitInstStuck_get,
		 deadlock_commitUserInstStuck_get;
  wire [141 : 0] mmioToPlatform_cRq_first;
  wire [80 : 0] renameDebug_renameErr_get;
  wire [72 : 0] coreIndInv_perfResp, deadlock_dCacheCRqStuck_get;
  wire [71 : 0] dCacheToParent_rqToP_first,
		deadlock_renameCorrectPathStuck_get,
		deadlock_renameInstStuck_get,
		iCacheToParent_rqToP_first;
  wire [67 : 0] deadlock_dCachePRqStuck_get,
		deadlock_iCacheCRqStuck_get,
		deadlock_iCachePRqStuck_get;
  wire [64 : 0] hart0_csr_mem_server_response_get,
		hart0_fpr_mem_server_response_get,
		hart0_gpr_mem_server_response_get,
		tlbToMem_memReq_first;
  wire RDY_coreIndInv_perfResp,
       RDY_coreIndInv_terminate,
       RDY_coreReq_perfReq,
       RDY_coreReq_start,
       RDY_dCacheToParent_fromP_enq,
       RDY_dCacheToParent_fromP_notFull,
       RDY_dCacheToParent_rqToP_deq,
       RDY_dCacheToParent_rqToP_first,
       RDY_dCacheToParent_rqToP_notEmpty,
       RDY_dCacheToParent_rsToP_deq,
       RDY_dCacheToParent_rsToP_first,
       RDY_dCacheToParent_rsToP_notEmpty,
       RDY_deadlock_checkStarted_get,
       RDY_deadlock_commitInstStuck_get,
       RDY_deadlock_commitUserInstStuck_get,
       RDY_deadlock_dCacheCRqStuck_get,
       RDY_deadlock_dCachePRqStuck_get,
       RDY_deadlock_iCacheCRqStuck_get,
       RDY_deadlock_iCachePRqStuck_get,
       RDY_deadlock_renameCorrectPathStuck_get,
       RDY_deadlock_renameInstStuck_get,
       RDY_hart0_csr_mem_server_request_put,
       RDY_hart0_csr_mem_server_response_get,
       RDY_hart0_fpr_mem_server_request_put,
       RDY_hart0_fpr_mem_server_response_get,
       RDY_hart0_gpr_mem_server_request_put,
       RDY_hart0_gpr_mem_server_response_get,
       RDY_hart0_run_halt_server_request_put,
       RDY_hart0_run_halt_server_response_get,
       RDY_iCacheToParent_fromP_enq,
       RDY_iCacheToParent_fromP_notFull,
       RDY_iCacheToParent_rqToP_deq,
       RDY_iCacheToParent_rqToP_first,
       RDY_iCacheToParent_rqToP_notEmpty,
       RDY_iCacheToParent_rsToP_deq,
       RDY_iCacheToParent_rsToP_first,
       RDY_iCacheToParent_rsToP_notEmpty,
       RDY_mmioToPlatform_cRq_deq,
       RDY_mmioToPlatform_cRq_first,
       RDY_mmioToPlatform_cRq_notEmpty,
       RDY_mmioToPlatform_cRs_deq,
       RDY_mmioToPlatform_cRs_first,
       RDY_mmioToPlatform_cRs_notEmpty,
       RDY_mmioToPlatform_pRq_enq,
       RDY_mmioToPlatform_pRq_notFull,
       RDY_mmioToPlatform_pRs_enq,
       RDY_mmioToPlatform_pRs_notFull,
       RDY_mmioToPlatform_setTime,
       RDY_recvDoStats,
       RDY_renameDebug_renameErr_get,
       RDY_sendDoStats,
       RDY_setMEIP,
       RDY_setSEIP,
       RDY_tlbToMem_memReq_deq,
       RDY_tlbToMem_memReq_first,
       RDY_tlbToMem_memReq_notEmpty,
       RDY_tlbToMem_respLd_enq,
       RDY_tlbToMem_respLd_notFull,
       dCacheToParent_fromP_notFull,
       dCacheToParent_rqToP_notEmpty,
       dCacheToParent_rsToP_notEmpty,
       hart0_run_halt_server_response_get,
       iCacheToParent_fromP_notFull,
       iCacheToParent_rqToP_notEmpty,
       iCacheToParent_rsToP_notEmpty,
       mmioToPlatform_cRq_notEmpty,
       mmioToPlatform_cRs_first,
       mmioToPlatform_cRs_notEmpty,
       mmioToPlatform_pRq_notFull,
       mmioToPlatform_pRs_notFull,
       sendDoStats,
       tlbToMem_memReq_notEmpty,
       tlbToMem_respLd_notFull;

  // inlined wires
  reg [150 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget;
  reg [64 : 0] coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wget;
  reg [58 : 0] coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wget;
  reg [1 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$wget;
  wire [583 : 0] coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget;
  wire [579 : 0] coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wget;
  wire [150 : 0] coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget;
  wire [142 : 0] mmio_cRqQ_enqReq_lat_0$wget, mmio_dataReqQ_enqReq_lat_0$wget;
  wire [74 : 0] coreFix_memExe_issueLd$wget;
  wire [72 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_lat_0$wget;
  wire [70 : 0] coreFix_aluExe_0_bypassWire_0$wget,
		coreFix_aluExe_0_bypassWire_1$wget,
		coreFix_aluExe_0_bypassWire_2$wget,
		coreFix_aluExe_0_bypassWire_3$wget;
  wire [69 : 0] mmio_pRsQ_enqReq_lat_0$wget;
  wire [67 : 0] coreFix_memExe_forwardQ_enqReq_lat_0$wget,
		coreFix_memExe_memRespLdQ_enqReq_lat_0$wget;
  wire [66 : 0] coreFix_memExe_reqLdQ_data_0_lat_0$wget;
  wire [65 : 0] mmio_dataRespQ_enqReq_lat_0$wget;
  wire [64 : 0] coreFix_memExe_reqStQ_data_0_lat_0$wget;
  wire [39 : 0] mmio_pRqQ_enqReq_lat_0$wget;
  wire [3 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$wget;
  wire [1 : 0] mmio_cRsQ_enqReq_lat_0$wget;
  wire coreFix_aluExe_0_bypassWire_0$whas,
       coreFix_aluExe_0_bypassWire_1$whas,
       coreFix_aluExe_0_bypassWire_2$whas,
       coreFix_aluExe_0_bypassWire_3$whas,
       coreFix_aluExe_1_bypassWire_2$whas,
       coreFix_aluExe_1_bypassWire_3$whas,
       coreFix_fpuMulDivExe_0_bypassWire_2$whas,
       coreFix_fpuMulDivExe_0_bypassWire_3$whas,
       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_deqEn$whas,
       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$whas,
       coreFix_globalSpecUpdate_correctSpecTag_0$whas,
       coreFix_globalSpecUpdate_correctSpecTag_1$whas,
       coreFix_memExe_bypassWire_2$whas,
       coreFix_memExe_bypassWire_3$whas,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$whas,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_lat_0$whas,
       coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$whas,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_lat_0$whas,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$whas,
       coreFix_memExe_forwardQ_enqReq_lat_0$whas,
       coreFix_memExe_issueLd$whas,
       coreFix_memExe_memRespLdQ_enqReq_lat_0$whas,
       coreFix_memExe_reqLdQ_data_0_lat_0$whas,
       coreFix_memExe_reqLdQ_empty_lat_0$whas,
       coreFix_memExe_reqLdQ_full_lat_0$whas,
       coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas,
       coreFix_memExe_reqLrScAmoQ_enqP_lat_0$whas,
       coreFix_memExe_respLrScAmoQ_deqReq_lat_0$whas,
       coreFix_memExe_respLrScAmoQ_enqReq_lat_0$whas,
       csrInstOrInterruptInflight_lat_1$whas,
       csrf_mcycle_ehr_data_lat_0$whas,
       csrf_minstret_ehr_data_dummy_1_0$whas,
       csrf_minstret_ehr_data_lat_0$whas,
       csrf_minstret_ehr_data_lat_1$whas,
       mmio_cRqQ_enqReq_lat_0$whas,
       mmio_dataPendQ_enqReq_lat_0$whas,
       mmio_dataReqQ_enqReq_lat_0$whas,
       mmio_dataRespQ_deqReq_lat_0$whas,
       mmio_pRsQ_deqReq_lat_0$whas;

  // register commitStage_commitTrap
  reg [165 : 0] commitStage_commitTrap;
  wire [165 : 0] commitStage_commitTrap$D_IN;
  wire commitStage_commitTrap$EN;

  // register commitStage_rg_run_state
  reg commitStage_rg_run_state;
  wire commitStage_rg_run_state$D_IN, commitStage_rg_run_state$EN;

  // register commitStage_rg_serial_num
  reg [63 : 0] commitStage_rg_serial_num;
  reg [63 : 0] commitStage_rg_serial_num$D_IN;
  wire commitStage_rg_serial_num$EN;

  // register coreFix_doStatsReg
  reg coreFix_doStatsReg;
  wire coreFix_doStatsReg$D_IN, coreFix_doStatsReg$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt
  reg [3 : 0] coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt;
  wire [3 : 0] coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt$D_IN;
  wire coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init
  reg coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init;
  wire coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init$D_IN,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit
  reg [1 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit;
  wire [1 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit$D_IN;
  wire coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0
  reg [2 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0;
  wire [2 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0$D_IN;
  wire coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1
  reg [2 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1;
  wire [2 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1$D_IN;
  wire coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty
  reg coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl
  reg [3 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl;
  wire [3 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full
  reg coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0
  reg [582 : 0] coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0;
  wire [582 : 0] coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1
  reg [582 : 0] coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1;
  wire [582 : 0] coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP
  reg coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP;
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty
  reg coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty;
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP
  reg coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP;
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl
  reg [583 : 0] coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl;
  wire [583 : 0] coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full
  reg coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full;
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl
  reg [58 : 0] coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl;
  wire [58 : 0] coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_processAmo
  reg [158 : 0] coreFix_memExe_dMem_cache_m_banks_0_processAmo;
  reg [158 : 0] coreFix_memExe_dMem_cache_m_banks_0_processAmo$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_processAmo$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl
  reg [150 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl;
  wire [150 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0
  reg [71 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0;
  wire [71 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1
  reg [71 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1;
  wire [71 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP
  reg coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty
  reg coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP
  reg coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl
  reg [72 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl;
  wire [72 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full
  reg coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0
  reg [578 : 0] coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0;
  wire [578 : 0] coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1
  reg [578 : 0] coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1;
  wire [578 : 0] coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP
  reg coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty
  reg coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP
  reg coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl
  reg [579 : 0] coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl;
  wire [579 : 0] coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full
  reg coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full$EN;

  // register coreFix_memExe_dMem_perfReqQ_clearReq_rl
  reg coreFix_memExe_dMem_perfReqQ_clearReq_rl;
  wire coreFix_memExe_dMem_perfReqQ_clearReq_rl$D_IN,
       coreFix_memExe_dMem_perfReqQ_clearReq_rl$EN;

  // register coreFix_memExe_dMem_perfReqQ_data_0
  reg [3 : 0] coreFix_memExe_dMem_perfReqQ_data_0;
  wire [3 : 0] coreFix_memExe_dMem_perfReqQ_data_0$D_IN;
  wire coreFix_memExe_dMem_perfReqQ_data_0$EN;

  // register coreFix_memExe_dMem_perfReqQ_deqReq_rl
  reg coreFix_memExe_dMem_perfReqQ_deqReq_rl;
  wire coreFix_memExe_dMem_perfReqQ_deqReq_rl$D_IN,
       coreFix_memExe_dMem_perfReqQ_deqReq_rl$EN;

  // register coreFix_memExe_dMem_perfReqQ_empty
  reg coreFix_memExe_dMem_perfReqQ_empty;
  wire coreFix_memExe_dMem_perfReqQ_empty$D_IN,
       coreFix_memExe_dMem_perfReqQ_empty$EN;

  // register coreFix_memExe_dMem_perfReqQ_enqReq_rl
  reg [4 : 0] coreFix_memExe_dMem_perfReqQ_enqReq_rl;
  wire [4 : 0] coreFix_memExe_dMem_perfReqQ_enqReq_rl$D_IN;
  wire coreFix_memExe_dMem_perfReqQ_enqReq_rl$EN;

  // register coreFix_memExe_dMem_perfReqQ_full
  reg coreFix_memExe_dMem_perfReqQ_full;
  wire coreFix_memExe_dMem_perfReqQ_full$D_IN,
       coreFix_memExe_dMem_perfReqQ_full$EN;

  // register coreFix_memExe_forwardQ_clearReq_rl
  reg coreFix_memExe_forwardQ_clearReq_rl;
  wire coreFix_memExe_forwardQ_clearReq_rl$D_IN,
       coreFix_memExe_forwardQ_clearReq_rl$EN;

  // register coreFix_memExe_forwardQ_data_0
  reg [66 : 0] coreFix_memExe_forwardQ_data_0;
  wire [66 : 0] coreFix_memExe_forwardQ_data_0$D_IN;
  wire coreFix_memExe_forwardQ_data_0$EN;

  // register coreFix_memExe_forwardQ_data_1
  reg [66 : 0] coreFix_memExe_forwardQ_data_1;
  wire [66 : 0] coreFix_memExe_forwardQ_data_1$D_IN;
  wire coreFix_memExe_forwardQ_data_1$EN;

  // register coreFix_memExe_forwardQ_deqP
  reg coreFix_memExe_forwardQ_deqP;
  wire coreFix_memExe_forwardQ_deqP$D_IN, coreFix_memExe_forwardQ_deqP$EN;

  // register coreFix_memExe_forwardQ_deqReq_rl
  reg coreFix_memExe_forwardQ_deqReq_rl;
  wire coreFix_memExe_forwardQ_deqReq_rl$D_IN,
       coreFix_memExe_forwardQ_deqReq_rl$EN;

  // register coreFix_memExe_forwardQ_empty
  reg coreFix_memExe_forwardQ_empty;
  wire coreFix_memExe_forwardQ_empty$D_IN, coreFix_memExe_forwardQ_empty$EN;

  // register coreFix_memExe_forwardQ_enqP
  reg coreFix_memExe_forwardQ_enqP;
  wire coreFix_memExe_forwardQ_enqP$D_IN, coreFix_memExe_forwardQ_enqP$EN;

  // register coreFix_memExe_forwardQ_enqReq_rl
  reg [67 : 0] coreFix_memExe_forwardQ_enqReq_rl;
  wire [67 : 0] coreFix_memExe_forwardQ_enqReq_rl$D_IN;
  wire coreFix_memExe_forwardQ_enqReq_rl$EN;

  // register coreFix_memExe_forwardQ_full
  reg coreFix_memExe_forwardQ_full;
  wire coreFix_memExe_forwardQ_full$D_IN, coreFix_memExe_forwardQ_full$EN;

  // register coreFix_memExe_memRespLdQ_clearReq_rl
  reg coreFix_memExe_memRespLdQ_clearReq_rl;
  wire coreFix_memExe_memRespLdQ_clearReq_rl$D_IN,
       coreFix_memExe_memRespLdQ_clearReq_rl$EN;

  // register coreFix_memExe_memRespLdQ_data_0
  reg [66 : 0] coreFix_memExe_memRespLdQ_data_0;
  wire [66 : 0] coreFix_memExe_memRespLdQ_data_0$D_IN;
  wire coreFix_memExe_memRespLdQ_data_0$EN;

  // register coreFix_memExe_memRespLdQ_data_1
  reg [66 : 0] coreFix_memExe_memRespLdQ_data_1;
  wire [66 : 0] coreFix_memExe_memRespLdQ_data_1$D_IN;
  wire coreFix_memExe_memRespLdQ_data_1$EN;

  // register coreFix_memExe_memRespLdQ_deqP
  reg coreFix_memExe_memRespLdQ_deqP;
  wire coreFix_memExe_memRespLdQ_deqP$D_IN, coreFix_memExe_memRespLdQ_deqP$EN;

  // register coreFix_memExe_memRespLdQ_deqReq_rl
  reg coreFix_memExe_memRespLdQ_deqReq_rl;
  wire coreFix_memExe_memRespLdQ_deqReq_rl$D_IN,
       coreFix_memExe_memRespLdQ_deqReq_rl$EN;

  // register coreFix_memExe_memRespLdQ_empty
  reg coreFix_memExe_memRespLdQ_empty;
  wire coreFix_memExe_memRespLdQ_empty$D_IN,
       coreFix_memExe_memRespLdQ_empty$EN;

  // register coreFix_memExe_memRespLdQ_enqP
  reg coreFix_memExe_memRespLdQ_enqP;
  wire coreFix_memExe_memRespLdQ_enqP$D_IN, coreFix_memExe_memRespLdQ_enqP$EN;

  // register coreFix_memExe_memRespLdQ_enqReq_rl
  reg [67 : 0] coreFix_memExe_memRespLdQ_enqReq_rl;
  wire [67 : 0] coreFix_memExe_memRespLdQ_enqReq_rl$D_IN;
  wire coreFix_memExe_memRespLdQ_enqReq_rl$EN;

  // register coreFix_memExe_memRespLdQ_full
  reg coreFix_memExe_memRespLdQ_full;
  wire coreFix_memExe_memRespLdQ_full$D_IN, coreFix_memExe_memRespLdQ_full$EN;

  // register coreFix_memExe_reqLdQ_data_0_rl
  reg [66 : 0] coreFix_memExe_reqLdQ_data_0_rl;
  wire [66 : 0] coreFix_memExe_reqLdQ_data_0_rl$D_IN;
  wire coreFix_memExe_reqLdQ_data_0_rl$EN;

  // register coreFix_memExe_reqLdQ_empty_rl
  reg coreFix_memExe_reqLdQ_empty_rl;
  wire coreFix_memExe_reqLdQ_empty_rl$D_IN, coreFix_memExe_reqLdQ_empty_rl$EN;

  // register coreFix_memExe_reqLdQ_full_rl
  reg coreFix_memExe_reqLdQ_full_rl;
  wire coreFix_memExe_reqLdQ_full_rl$D_IN, coreFix_memExe_reqLdQ_full_rl$EN;

  // register coreFix_memExe_reqLrScAmoQ_data_0_rl
  reg [150 : 0] coreFix_memExe_reqLrScAmoQ_data_0_rl;
  wire [150 : 0] coreFix_memExe_reqLrScAmoQ_data_0_rl$D_IN;
  wire coreFix_memExe_reqLrScAmoQ_data_0_rl$EN;

  // register coreFix_memExe_reqLrScAmoQ_empty_rl
  reg coreFix_memExe_reqLrScAmoQ_empty_rl;
  wire coreFix_memExe_reqLrScAmoQ_empty_rl$D_IN,
       coreFix_memExe_reqLrScAmoQ_empty_rl$EN;

  // register coreFix_memExe_reqLrScAmoQ_full_rl
  reg coreFix_memExe_reqLrScAmoQ_full_rl;
  wire coreFix_memExe_reqLrScAmoQ_full_rl$D_IN,
       coreFix_memExe_reqLrScAmoQ_full_rl$EN;

  // register coreFix_memExe_reqStQ_data_0_rl
  reg [64 : 0] coreFix_memExe_reqStQ_data_0_rl;
  wire [64 : 0] coreFix_memExe_reqStQ_data_0_rl$D_IN;
  wire coreFix_memExe_reqStQ_data_0_rl$EN;

  // register coreFix_memExe_reqStQ_empty_rl
  reg coreFix_memExe_reqStQ_empty_rl;
  wire coreFix_memExe_reqStQ_empty_rl$D_IN, coreFix_memExe_reqStQ_empty_rl$EN;

  // register coreFix_memExe_reqStQ_full_rl
  reg coreFix_memExe_reqStQ_full_rl;
  wire coreFix_memExe_reqStQ_full_rl$D_IN, coreFix_memExe_reqStQ_full_rl$EN;

  // register coreFix_memExe_respLrScAmoQ_clearReq_rl
  reg coreFix_memExe_respLrScAmoQ_clearReq_rl;
  wire coreFix_memExe_respLrScAmoQ_clearReq_rl$D_IN,
       coreFix_memExe_respLrScAmoQ_clearReq_rl$EN;

  // register coreFix_memExe_respLrScAmoQ_data_0
  reg [63 : 0] coreFix_memExe_respLrScAmoQ_data_0;
  wire [63 : 0] coreFix_memExe_respLrScAmoQ_data_0$D_IN;
  wire coreFix_memExe_respLrScAmoQ_data_0$EN;

  // register coreFix_memExe_respLrScAmoQ_deqReq_rl
  reg coreFix_memExe_respLrScAmoQ_deqReq_rl;
  wire coreFix_memExe_respLrScAmoQ_deqReq_rl$D_IN,
       coreFix_memExe_respLrScAmoQ_deqReq_rl$EN;

  // register coreFix_memExe_respLrScAmoQ_empty
  reg coreFix_memExe_respLrScAmoQ_empty;
  wire coreFix_memExe_respLrScAmoQ_empty$D_IN,
       coreFix_memExe_respLrScAmoQ_empty$EN;

  // register coreFix_memExe_respLrScAmoQ_enqReq_rl
  reg [64 : 0] coreFix_memExe_respLrScAmoQ_enqReq_rl;
  wire [64 : 0] coreFix_memExe_respLrScAmoQ_enqReq_rl$D_IN;
  wire coreFix_memExe_respLrScAmoQ_enqReq_rl$EN;

  // register coreFix_memExe_respLrScAmoQ_full
  reg coreFix_memExe_respLrScAmoQ_full;
  wire coreFix_memExe_respLrScAmoQ_full$D_IN,
       coreFix_memExe_respLrScAmoQ_full$EN;

  // register coreFix_memExe_waitLrScAmoMMIOResp
  reg [2 : 0] coreFix_memExe_waitLrScAmoMMIOResp;
  reg [2 : 0] coreFix_memExe_waitLrScAmoMMIOResp$D_IN;
  wire coreFix_memExe_waitLrScAmoMMIOResp$EN;

  // register csrInstOrInterruptInflight_rl
  reg csrInstOrInterruptInflight_rl;
  wire csrInstOrInterruptInflight_rl$D_IN, csrInstOrInterruptInflight_rl$EN;

  // register csrf_external_int_en_vec_0
  reg csrf_external_int_en_vec_0;
  wire csrf_external_int_en_vec_0$D_IN, csrf_external_int_en_vec_0$EN;

  // register csrf_external_int_en_vec_1
  reg csrf_external_int_en_vec_1;
  wire csrf_external_int_en_vec_1$D_IN, csrf_external_int_en_vec_1$EN;

  // register csrf_external_int_en_vec_3
  reg csrf_external_int_en_vec_3;
  wire csrf_external_int_en_vec_3$D_IN, csrf_external_int_en_vec_3$EN;

  // register csrf_external_int_pend_vec_0
  reg csrf_external_int_pend_vec_0;
  wire csrf_external_int_pend_vec_0$D_IN, csrf_external_int_pend_vec_0$EN;

  // register csrf_external_int_pend_vec_1
  reg csrf_external_int_pend_vec_1;
  reg csrf_external_int_pend_vec_1$D_IN;
  wire csrf_external_int_pend_vec_1$EN;

  // register csrf_external_int_pend_vec_3
  reg csrf_external_int_pend_vec_3;
  wire csrf_external_int_pend_vec_3$D_IN, csrf_external_int_pend_vec_3$EN;

  // register csrf_fflags_reg
  reg [4 : 0] csrf_fflags_reg;
  reg [4 : 0] csrf_fflags_reg$D_IN;
  wire csrf_fflags_reg$EN;

  // register csrf_frm_reg
  reg [2 : 0] csrf_frm_reg;
  wire [2 : 0] csrf_frm_reg$D_IN;
  wire csrf_frm_reg$EN;

  // register csrf_fs_reg
  reg [1 : 0] csrf_fs_reg;
  reg [1 : 0] csrf_fs_reg$D_IN;
  wire csrf_fs_reg$EN;

  // register csrf_ie_vec_0
  reg csrf_ie_vec_0;
  wire csrf_ie_vec_0$D_IN, csrf_ie_vec_0$EN;

  // register csrf_ie_vec_1
  reg csrf_ie_vec_1;
  reg csrf_ie_vec_1$D_IN;
  wire csrf_ie_vec_1$EN;

  // register csrf_ie_vec_3
  reg csrf_ie_vec_3;
  reg csrf_ie_vec_3$D_IN;
  wire csrf_ie_vec_3$EN;

  // register csrf_mcause_code_reg
  reg [3 : 0] csrf_mcause_code_reg;
  reg [3 : 0] csrf_mcause_code_reg$D_IN;
  wire csrf_mcause_code_reg$EN;

  // register csrf_mcause_interrupt_reg
  reg csrf_mcause_interrupt_reg;
  reg csrf_mcause_interrupt_reg$D_IN;
  wire csrf_mcause_interrupt_reg$EN;

  // register csrf_mcounteren_cy_reg
  reg csrf_mcounteren_cy_reg;
  wire csrf_mcounteren_cy_reg$D_IN, csrf_mcounteren_cy_reg$EN;

  // register csrf_mcounteren_ir_reg
  reg csrf_mcounteren_ir_reg;
  wire csrf_mcounteren_ir_reg$D_IN, csrf_mcounteren_ir_reg$EN;

  // register csrf_mcounteren_tm_reg
  reg csrf_mcounteren_tm_reg;
  wire csrf_mcounteren_tm_reg$D_IN, csrf_mcounteren_tm_reg$EN;

  // register csrf_mcycle_ehr_data_rl
  reg [63 : 0] csrf_mcycle_ehr_data_rl;
  wire [63 : 0] csrf_mcycle_ehr_data_rl$D_IN;
  wire csrf_mcycle_ehr_data_rl$EN;

  // register csrf_medeleg_13_11_reg
  reg [2 : 0] csrf_medeleg_13_11_reg;
  wire [2 : 0] csrf_medeleg_13_11_reg$D_IN;
  wire csrf_medeleg_13_11_reg$EN;

  // register csrf_medeleg_15_reg
  reg csrf_medeleg_15_reg;
  wire csrf_medeleg_15_reg$D_IN, csrf_medeleg_15_reg$EN;

  // register csrf_medeleg_9_0_reg
  reg [9 : 0] csrf_medeleg_9_0_reg;
  wire [9 : 0] csrf_medeleg_9_0_reg$D_IN;
  wire csrf_medeleg_9_0_reg$EN;

  // register csrf_mepc_csr
  reg [63 : 0] csrf_mepc_csr;
  reg [63 : 0] csrf_mepc_csr$D_IN;
  wire csrf_mepc_csr$EN;

  // register csrf_mideleg_11_reg
  reg csrf_mideleg_11_reg;
  wire csrf_mideleg_11_reg$D_IN, csrf_mideleg_11_reg$EN;

  // register csrf_mideleg_1_0_reg
  reg [1 : 0] csrf_mideleg_1_0_reg;
  wire [1 : 0] csrf_mideleg_1_0_reg$D_IN;
  wire csrf_mideleg_1_0_reg$EN;

  // register csrf_mideleg_5_3_reg
  reg [2 : 0] csrf_mideleg_5_3_reg;
  wire [2 : 0] csrf_mideleg_5_3_reg$D_IN;
  wire csrf_mideleg_5_3_reg$EN;

  // register csrf_mideleg_9_7_reg
  reg [2 : 0] csrf_mideleg_9_7_reg;
  wire [2 : 0] csrf_mideleg_9_7_reg$D_IN;
  wire csrf_mideleg_9_7_reg$EN;

  // register csrf_minstret_ehr_data_rl
  reg [63 : 0] csrf_minstret_ehr_data_rl;
  wire [63 : 0] csrf_minstret_ehr_data_rl$D_IN;
  wire csrf_minstret_ehr_data_rl$EN;

  // register csrf_mpp_reg
  reg [1 : 0] csrf_mpp_reg;
  reg [1 : 0] csrf_mpp_reg$D_IN;
  wire csrf_mpp_reg$EN;

  // register csrf_mprv_reg
  reg csrf_mprv_reg;
  wire csrf_mprv_reg$D_IN, csrf_mprv_reg$EN;

  // register csrf_mscratch_csr
  reg [63 : 0] csrf_mscratch_csr;
  wire [63 : 0] csrf_mscratch_csr$D_IN;
  wire csrf_mscratch_csr$EN;

  // register csrf_mtval_csr
  reg [63 : 0] csrf_mtval_csr;
  reg [63 : 0] csrf_mtval_csr$D_IN;
  wire csrf_mtval_csr$EN;

  // register csrf_mtvec_base_hi_reg
  reg [61 : 0] csrf_mtvec_base_hi_reg;
  wire [61 : 0] csrf_mtvec_base_hi_reg$D_IN;
  wire csrf_mtvec_base_hi_reg$EN;

  // register csrf_mtvec_mode_low_reg
  reg csrf_mtvec_mode_low_reg;
  wire csrf_mtvec_mode_low_reg$D_IN, csrf_mtvec_mode_low_reg$EN;

  // register csrf_mxr_reg
  reg csrf_mxr_reg;
  wire csrf_mxr_reg$D_IN, csrf_mxr_reg$EN;

  // register csrf_ppn_reg
  reg [43 : 0] csrf_ppn_reg;
  wire [43 : 0] csrf_ppn_reg$D_IN;
  wire csrf_ppn_reg$EN;

  // register csrf_prev_ie_vec_0
  reg csrf_prev_ie_vec_0;
  wire csrf_prev_ie_vec_0$D_IN, csrf_prev_ie_vec_0$EN;

  // register csrf_prev_ie_vec_1
  reg csrf_prev_ie_vec_1;
  reg csrf_prev_ie_vec_1$D_IN;
  wire csrf_prev_ie_vec_1$EN;

  // register csrf_prev_ie_vec_3
  reg csrf_prev_ie_vec_3;
  reg csrf_prev_ie_vec_3$D_IN;
  wire csrf_prev_ie_vec_3$EN;

  // register csrf_prv_reg
  reg [1 : 0] csrf_prv_reg;
  reg [1 : 0] csrf_prv_reg$D_IN;
  wire csrf_prv_reg$EN;

  // register csrf_rg_dcsr
  reg [63 : 0] csrf_rg_dcsr;
  reg [63 : 0] csrf_rg_dcsr$D_IN;
  wire csrf_rg_dcsr$EN;

  // register csrf_rg_dpc
  reg [63 : 0] csrf_rg_dpc;
  reg [63 : 0] csrf_rg_dpc$D_IN;
  wire csrf_rg_dpc$EN;

  // register csrf_rg_dscratch0
  reg [63 : 0] csrf_rg_dscratch0;
  wire [63 : 0] csrf_rg_dscratch0$D_IN;
  wire csrf_rg_dscratch0$EN;

  // register csrf_rg_dscratch1
  reg [63 : 0] csrf_rg_dscratch1;
  wire [63 : 0] csrf_rg_dscratch1$D_IN;
  wire csrf_rg_dscratch1$EN;

  // register csrf_rg_tdata1_data
  reg [58 : 0] csrf_rg_tdata1_data;
  wire [58 : 0] csrf_rg_tdata1_data$D_IN;
  wire csrf_rg_tdata1_data$EN;

  // register csrf_rg_tdata1_dmode
  reg csrf_rg_tdata1_dmode;
  wire csrf_rg_tdata1_dmode$D_IN, csrf_rg_tdata1_dmode$EN;

  // register csrf_rg_tdata2
  reg [63 : 0] csrf_rg_tdata2;
  wire [63 : 0] csrf_rg_tdata2$D_IN;
  wire csrf_rg_tdata2$EN;

  // register csrf_rg_tdata3
  reg [63 : 0] csrf_rg_tdata3;
  wire [63 : 0] csrf_rg_tdata3$D_IN;
  wire csrf_rg_tdata3$EN;

  // register csrf_rg_tselect
  reg [63 : 0] csrf_rg_tselect;
  wire [63 : 0] csrf_rg_tselect$D_IN;
  wire csrf_rg_tselect$EN;

  // register csrf_scause_code_reg
  reg [3 : 0] csrf_scause_code_reg;
  reg [3 : 0] csrf_scause_code_reg$D_IN;
  wire csrf_scause_code_reg$EN;

  // register csrf_scause_interrupt_reg
  reg csrf_scause_interrupt_reg;
  reg csrf_scause_interrupt_reg$D_IN;
  wire csrf_scause_interrupt_reg$EN;

  // register csrf_scounteren_cy_reg
  reg csrf_scounteren_cy_reg;
  wire csrf_scounteren_cy_reg$D_IN, csrf_scounteren_cy_reg$EN;

  // register csrf_scounteren_ir_reg
  reg csrf_scounteren_ir_reg;
  wire csrf_scounteren_ir_reg$D_IN, csrf_scounteren_ir_reg$EN;

  // register csrf_scounteren_tm_reg
  reg csrf_scounteren_tm_reg;
  wire csrf_scounteren_tm_reg$D_IN, csrf_scounteren_tm_reg$EN;

  // register csrf_sepc_csr
  reg [63 : 0] csrf_sepc_csr;
  reg [63 : 0] csrf_sepc_csr$D_IN;
  wire csrf_sepc_csr$EN;

  // register csrf_software_int_en_vec_0
  reg csrf_software_int_en_vec_0;
  wire csrf_software_int_en_vec_0$D_IN, csrf_software_int_en_vec_0$EN;

  // register csrf_software_int_en_vec_1
  reg csrf_software_int_en_vec_1;
  wire csrf_software_int_en_vec_1$D_IN, csrf_software_int_en_vec_1$EN;

  // register csrf_software_int_en_vec_3
  reg csrf_software_int_en_vec_3;
  wire csrf_software_int_en_vec_3$D_IN, csrf_software_int_en_vec_3$EN;

  // register csrf_software_int_pend_vec_0
  reg csrf_software_int_pend_vec_0;
  wire csrf_software_int_pend_vec_0$D_IN, csrf_software_int_pend_vec_0$EN;

  // register csrf_software_int_pend_vec_1
  reg csrf_software_int_pend_vec_1;
  wire csrf_software_int_pend_vec_1$D_IN, csrf_software_int_pend_vec_1$EN;

  // register csrf_software_int_pend_vec_3
  reg csrf_software_int_pend_vec_3;
  wire csrf_software_int_pend_vec_3$D_IN, csrf_software_int_pend_vec_3$EN;

  // register csrf_spp_reg
  reg csrf_spp_reg;
  reg csrf_spp_reg$D_IN;
  wire csrf_spp_reg$EN;

  // register csrf_sscratch_csr
  reg [63 : 0] csrf_sscratch_csr;
  wire [63 : 0] csrf_sscratch_csr$D_IN;
  wire csrf_sscratch_csr$EN;

  // register csrf_stats_module_doStats
  reg csrf_stats_module_doStats;
  wire csrf_stats_module_doStats$D_IN, csrf_stats_module_doStats$EN;

  // register csrf_stval_csr
  reg [63 : 0] csrf_stval_csr;
  reg [63 : 0] csrf_stval_csr$D_IN;
  wire csrf_stval_csr$EN;

  // register csrf_stvec_base_hi_reg
  reg [61 : 0] csrf_stvec_base_hi_reg;
  wire [61 : 0] csrf_stvec_base_hi_reg$D_IN;
  wire csrf_stvec_base_hi_reg$EN;

  // register csrf_stvec_mode_low_reg
  reg csrf_stvec_mode_low_reg;
  wire csrf_stvec_mode_low_reg$D_IN, csrf_stvec_mode_low_reg$EN;

  // register csrf_sum_reg
  reg csrf_sum_reg;
  wire csrf_sum_reg$D_IN, csrf_sum_reg$EN;

  // register csrf_time_reg
  reg [63 : 0] csrf_time_reg;
  wire [63 : 0] csrf_time_reg$D_IN;
  wire csrf_time_reg$EN;

  // register csrf_timer_int_en_vec_0
  reg csrf_timer_int_en_vec_0;
  wire csrf_timer_int_en_vec_0$D_IN, csrf_timer_int_en_vec_0$EN;

  // register csrf_timer_int_en_vec_1
  reg csrf_timer_int_en_vec_1;
  wire csrf_timer_int_en_vec_1$D_IN, csrf_timer_int_en_vec_1$EN;

  // register csrf_timer_int_en_vec_3
  reg csrf_timer_int_en_vec_3;
  wire csrf_timer_int_en_vec_3$D_IN, csrf_timer_int_en_vec_3$EN;

  // register csrf_timer_int_pend_vec_0
  reg csrf_timer_int_pend_vec_0;
  wire csrf_timer_int_pend_vec_0$D_IN, csrf_timer_int_pend_vec_0$EN;

  // register csrf_timer_int_pend_vec_1
  reg csrf_timer_int_pend_vec_1;
  wire csrf_timer_int_pend_vec_1$D_IN, csrf_timer_int_pend_vec_1$EN;

  // register csrf_timer_int_pend_vec_3
  reg csrf_timer_int_pend_vec_3;
  wire csrf_timer_int_pend_vec_3$D_IN, csrf_timer_int_pend_vec_3$EN;

  // register csrf_tsr_reg
  reg csrf_tsr_reg;
  wire csrf_tsr_reg$D_IN, csrf_tsr_reg$EN;

  // register csrf_tvm_reg
  reg csrf_tvm_reg;
  wire csrf_tvm_reg$D_IN, csrf_tvm_reg$EN;

  // register csrf_tw_reg
  reg csrf_tw_reg;
  wire csrf_tw_reg$D_IN, csrf_tw_reg$EN;

  // register csrf_vm_mode_sv39_reg
  reg csrf_vm_mode_sv39_reg;
  wire csrf_vm_mode_sv39_reg$D_IN, csrf_vm_mode_sv39_reg$EN;

  // register flush_brpred
  reg flush_brpred;
  wire flush_brpred$D_IN, flush_brpred$EN;

  // register flush_caches
  reg flush_caches;
  wire flush_caches$D_IN, flush_caches$EN;

  // register flush_reservation
  reg flush_reservation;
  wire flush_reservation$D_IN, flush_reservation$EN;

  // register flush_tlbs
  reg flush_tlbs;
  wire flush_tlbs$D_IN, flush_tlbs$EN;

  // register mmio_cRqQ_clearReq_rl
  reg mmio_cRqQ_clearReq_rl;
  wire mmio_cRqQ_clearReq_rl$D_IN, mmio_cRqQ_clearReq_rl$EN;

  // register mmio_cRqQ_data_0
  reg [141 : 0] mmio_cRqQ_data_0;
  wire [141 : 0] mmio_cRqQ_data_0$D_IN;
  wire mmio_cRqQ_data_0$EN;

  // register mmio_cRqQ_deqReq_rl
  reg mmio_cRqQ_deqReq_rl;
  wire mmio_cRqQ_deqReq_rl$D_IN, mmio_cRqQ_deqReq_rl$EN;

  // register mmio_cRqQ_empty
  reg mmio_cRqQ_empty;
  wire mmio_cRqQ_empty$D_IN, mmio_cRqQ_empty$EN;

  // register mmio_cRqQ_enqReq_rl
  reg [142 : 0] mmio_cRqQ_enqReq_rl;
  wire [142 : 0] mmio_cRqQ_enqReq_rl$D_IN;
  wire mmio_cRqQ_enqReq_rl$EN;

  // register mmio_cRqQ_full
  reg mmio_cRqQ_full;
  wire mmio_cRqQ_full$D_IN, mmio_cRqQ_full$EN;

  // register mmio_cRsQ_clearReq_rl
  reg mmio_cRsQ_clearReq_rl;
  wire mmio_cRsQ_clearReq_rl$D_IN, mmio_cRsQ_clearReq_rl$EN;

  // register mmio_cRsQ_data_0
  reg mmio_cRsQ_data_0;
  wire mmio_cRsQ_data_0$D_IN, mmio_cRsQ_data_0$EN;

  // register mmio_cRsQ_deqReq_rl
  reg mmio_cRsQ_deqReq_rl;
  wire mmio_cRsQ_deqReq_rl$D_IN, mmio_cRsQ_deqReq_rl$EN;

  // register mmio_cRsQ_empty
  reg mmio_cRsQ_empty;
  wire mmio_cRsQ_empty$D_IN, mmio_cRsQ_empty$EN;

  // register mmio_cRsQ_enqReq_rl
  reg [1 : 0] mmio_cRsQ_enqReq_rl;
  wire [1 : 0] mmio_cRsQ_enqReq_rl$D_IN;
  wire mmio_cRsQ_enqReq_rl$EN;

  // register mmio_cRsQ_full
  reg mmio_cRsQ_full;
  wire mmio_cRsQ_full$D_IN, mmio_cRsQ_full$EN;

  // register mmio_dataPendQ_clearReq_rl
  reg mmio_dataPendQ_clearReq_rl;
  wire mmio_dataPendQ_clearReq_rl$D_IN, mmio_dataPendQ_clearReq_rl$EN;

  // register mmio_dataPendQ_deqReq_rl
  reg mmio_dataPendQ_deqReq_rl;
  wire mmio_dataPendQ_deqReq_rl$D_IN, mmio_dataPendQ_deqReq_rl$EN;

  // register mmio_dataPendQ_empty
  reg mmio_dataPendQ_empty;
  wire mmio_dataPendQ_empty$D_IN, mmio_dataPendQ_empty$EN;

  // register mmio_dataPendQ_enqReq_rl
  reg mmio_dataPendQ_enqReq_rl;
  wire mmio_dataPendQ_enqReq_rl$D_IN, mmio_dataPendQ_enqReq_rl$EN;

  // register mmio_dataPendQ_full
  reg mmio_dataPendQ_full;
  wire mmio_dataPendQ_full$D_IN, mmio_dataPendQ_full$EN;

  // register mmio_dataReqQ_clearReq_rl
  reg mmio_dataReqQ_clearReq_rl;
  wire mmio_dataReqQ_clearReq_rl$D_IN, mmio_dataReqQ_clearReq_rl$EN;

  // register mmio_dataReqQ_data_0
  reg [141 : 0] mmio_dataReqQ_data_0;
  wire [141 : 0] mmio_dataReqQ_data_0$D_IN;
  wire mmio_dataReqQ_data_0$EN;

  // register mmio_dataReqQ_deqReq_rl
  reg mmio_dataReqQ_deqReq_rl;
  wire mmio_dataReqQ_deqReq_rl$D_IN, mmio_dataReqQ_deqReq_rl$EN;

  // register mmio_dataReqQ_empty
  reg mmio_dataReqQ_empty;
  wire mmio_dataReqQ_empty$D_IN, mmio_dataReqQ_empty$EN;

  // register mmio_dataReqQ_enqReq_rl
  reg [142 : 0] mmio_dataReqQ_enqReq_rl;
  wire [142 : 0] mmio_dataReqQ_enqReq_rl$D_IN;
  wire mmio_dataReqQ_enqReq_rl$EN;

  // register mmio_dataReqQ_full
  reg mmio_dataReqQ_full;
  wire mmio_dataReqQ_full$D_IN, mmio_dataReqQ_full$EN;

  // register mmio_dataRespQ_clearReq_rl
  reg mmio_dataRespQ_clearReq_rl;
  wire mmio_dataRespQ_clearReq_rl$D_IN, mmio_dataRespQ_clearReq_rl$EN;

  // register mmio_dataRespQ_data_0
  reg [64 : 0] mmio_dataRespQ_data_0;
  wire [64 : 0] mmio_dataRespQ_data_0$D_IN;
  wire mmio_dataRespQ_data_0$EN;

  // register mmio_dataRespQ_deqReq_rl
  reg mmio_dataRespQ_deqReq_rl;
  wire mmio_dataRespQ_deqReq_rl$D_IN, mmio_dataRespQ_deqReq_rl$EN;

  // register mmio_dataRespQ_empty
  reg mmio_dataRespQ_empty;
  wire mmio_dataRespQ_empty$D_IN, mmio_dataRespQ_empty$EN;

  // register mmio_dataRespQ_enqReq_rl
  reg [65 : 0] mmio_dataRespQ_enqReq_rl;
  wire [65 : 0] mmio_dataRespQ_enqReq_rl$D_IN;
  wire mmio_dataRespQ_enqReq_rl$EN;

  // register mmio_dataRespQ_full
  reg mmio_dataRespQ_full;
  wire mmio_dataRespQ_full$D_IN, mmio_dataRespQ_full$EN;

  // register mmio_fromHostAddr
  reg [60 : 0] mmio_fromHostAddr;
  wire [60 : 0] mmio_fromHostAddr$D_IN;
  wire mmio_fromHostAddr$EN;

  // register mmio_pRqQ_clearReq_rl
  reg mmio_pRqQ_clearReq_rl;
  wire mmio_pRqQ_clearReq_rl$D_IN, mmio_pRqQ_clearReq_rl$EN;

  // register mmio_pRqQ_data_0
  reg [38 : 0] mmio_pRqQ_data_0;
  wire [38 : 0] mmio_pRqQ_data_0$D_IN;
  wire mmio_pRqQ_data_0$EN;

  // register mmio_pRqQ_deqReq_rl
  reg mmio_pRqQ_deqReq_rl;
  wire mmio_pRqQ_deqReq_rl$D_IN, mmio_pRqQ_deqReq_rl$EN;

  // register mmio_pRqQ_empty
  reg mmio_pRqQ_empty;
  wire mmio_pRqQ_empty$D_IN, mmio_pRqQ_empty$EN;

  // register mmio_pRqQ_enqReq_rl
  reg [39 : 0] mmio_pRqQ_enqReq_rl;
  wire [39 : 0] mmio_pRqQ_enqReq_rl$D_IN;
  wire mmio_pRqQ_enqReq_rl$EN;

  // register mmio_pRqQ_full
  reg mmio_pRqQ_full;
  wire mmio_pRqQ_full$D_IN, mmio_pRqQ_full$EN;

  // register mmio_pRsQ_clearReq_rl
  reg mmio_pRsQ_clearReq_rl;
  wire mmio_pRsQ_clearReq_rl$D_IN, mmio_pRsQ_clearReq_rl$EN;

  // register mmio_pRsQ_data_0
  reg [68 : 0] mmio_pRsQ_data_0;
  wire [68 : 0] mmio_pRsQ_data_0$D_IN;
  wire mmio_pRsQ_data_0$EN;

  // register mmio_pRsQ_deqReq_rl
  reg mmio_pRsQ_deqReq_rl;
  wire mmio_pRsQ_deqReq_rl$D_IN, mmio_pRsQ_deqReq_rl$EN;

  // register mmio_pRsQ_empty
  reg mmio_pRsQ_empty;
  wire mmio_pRsQ_empty$D_IN, mmio_pRsQ_empty$EN;

  // register mmio_pRsQ_enqReq_rl
  reg [69 : 0] mmio_pRsQ_enqReq_rl;
  wire [69 : 0] mmio_pRsQ_enqReq_rl$D_IN;
  wire mmio_pRsQ_enqReq_rl$EN;

  // register mmio_pRsQ_full
  reg mmio_pRsQ_full;
  wire mmio_pRsQ_full$D_IN, mmio_pRsQ_full$EN;

  // register mmio_toHostAddr
  reg [60 : 0] mmio_toHostAddr;
  wire [60 : 0] mmio_toHostAddr$D_IN;
  wire mmio_toHostAddr$EN;

  // register outOfReset
  reg outOfReset;
  wire outOfReset$D_IN, outOfReset$EN;

  // register renameStage_rg_m_halt_req
  reg [4 : 0] renameStage_rg_m_halt_req;
  reg [4 : 0] renameStage_rg_m_halt_req$D_IN;
  wire renameStage_rg_m_halt_req$EN;

  // register rg_core_run_state
  reg [1 : 0] rg_core_run_state;
  reg [1 : 0] rg_core_run_state$D_IN;
  wire rg_core_run_state$EN;

  // register started
  reg started;
  wire started$D_IN, started$EN;

  // register update_vm_info
  reg update_vm_info;
  wire update_vm_info$D_IN, update_vm_info$EN;

  // ports of submodule coreFix_aluExe_0_dispToRegQ
  reg [1 : 0] coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [145 : 0] coreFix_aluExe_0_dispToRegQ$enq_x,
		 coreFix_aluExe_0_dispToRegQ$first;
  wire [3 : 0] coreFix_aluExe_0_dispToRegQ$specUpdate_correctSpeculation_mask;
  wire coreFix_aluExe_0_dispToRegQ$EN_deq,
       coreFix_aluExe_0_dispToRegQ$EN_enq,
       coreFix_aluExe_0_dispToRegQ$EN_specUpdate_correctSpeculation,
       coreFix_aluExe_0_dispToRegQ$EN_specUpdate_incorrectSpeculation,
       coreFix_aluExe_0_dispToRegQ$RDY_deq,
       coreFix_aluExe_0_dispToRegQ$RDY_enq,
       coreFix_aluExe_0_dispToRegQ$RDY_first,
       coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_aluExe_0_exeToFinQ
  reg [1 : 0] coreFix_aluExe_0_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [314 : 0] coreFix_aluExe_0_exeToFinQ$enq_x,
		 coreFix_aluExe_0_exeToFinQ$first;
  wire [3 : 0] coreFix_aluExe_0_exeToFinQ$specUpdate_correctSpeculation_mask;
  wire coreFix_aluExe_0_exeToFinQ$EN_deq,
       coreFix_aluExe_0_exeToFinQ$EN_enq,
       coreFix_aluExe_0_exeToFinQ$EN_specUpdate_correctSpeculation,
       coreFix_aluExe_0_exeToFinQ$EN_specUpdate_incorrectSpeculation,
       coreFix_aluExe_0_exeToFinQ$RDY_deq,
       coreFix_aluExe_0_exeToFinQ$RDY_enq,
       coreFix_aluExe_0_exeToFinQ$RDY_first,
       coreFix_aluExe_0_exeToFinQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_aluExe_0_regToExeQ
  reg [1 : 0] coreFix_aluExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [409 : 0] coreFix_aluExe_0_regToExeQ$enq_x,
		 coreFix_aluExe_0_regToExeQ$first;
  wire [3 : 0] coreFix_aluExe_0_regToExeQ$specUpdate_correctSpeculation_mask;
  wire coreFix_aluExe_0_regToExeQ$EN_deq,
       coreFix_aluExe_0_regToExeQ$EN_enq,
       coreFix_aluExe_0_regToExeQ$EN_specUpdate_correctSpeculation,
       coreFix_aluExe_0_regToExeQ$EN_specUpdate_incorrectSpeculation,
       coreFix_aluExe_0_regToExeQ$RDY_deq,
       coreFix_aluExe_0_regToExeQ$RDY_enq,
       coreFix_aluExe_0_regToExeQ$RDY_first,
       coreFix_aluExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_aluExe_0_rsAlu
  reg [7 : 0] coreFix_aluExe_0_rsAlu$setRegReady_2_put,
	      coreFix_aluExe_0_rsAlu$setRegReady_4_put;
  reg [1 : 0] coreFix_aluExe_0_rsAlu$specUpdate_incorrectSpeculation_kill_tag;
  wire [149 : 0] coreFix_aluExe_0_rsAlu$dispatchData,
		 coreFix_aluExe_0_rsAlu$enq_x;
  wire [7 : 0] coreFix_aluExe_0_rsAlu$setRegReady_0_put,
	       coreFix_aluExe_0_rsAlu$setRegReady_1_put,
	       coreFix_aluExe_0_rsAlu$setRegReady_3_put;
  wire [4 : 0] coreFix_aluExe_0_rsAlu$setRobEnqTime_t;
  wire [3 : 0] coreFix_aluExe_0_rsAlu$approximateCount,
	       coreFix_aluExe_0_rsAlu$specUpdate_correctSpeculation_mask;
  wire coreFix_aluExe_0_rsAlu$EN_doDispatch,
       coreFix_aluExe_0_rsAlu$EN_enq,
       coreFix_aluExe_0_rsAlu$EN_setRegReady_0_put,
       coreFix_aluExe_0_rsAlu$EN_setRegReady_1_put,
       coreFix_aluExe_0_rsAlu$EN_setRegReady_2_put,
       coreFix_aluExe_0_rsAlu$EN_setRegReady_3_put,
       coreFix_aluExe_0_rsAlu$EN_setRegReady_4_put,
       coreFix_aluExe_0_rsAlu$EN_setRobEnqTime,
       coreFix_aluExe_0_rsAlu$EN_specUpdate_correctSpeculation,
       coreFix_aluExe_0_rsAlu$EN_specUpdate_incorrectSpeculation,
       coreFix_aluExe_0_rsAlu$RDY_dispatchData,
       coreFix_aluExe_0_rsAlu$RDY_doDispatch,
       coreFix_aluExe_0_rsAlu$RDY_enq,
       coreFix_aluExe_0_rsAlu$canEnq,
       coreFix_aluExe_0_rsAlu$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_aluExe_1_dispToRegQ
  reg [1 : 0] coreFix_aluExe_1_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [145 : 0] coreFix_aluExe_1_dispToRegQ$enq_x,
		 coreFix_aluExe_1_dispToRegQ$first;
  wire [3 : 0] coreFix_aluExe_1_dispToRegQ$specUpdate_correctSpeculation_mask;
  wire coreFix_aluExe_1_dispToRegQ$EN_deq,
       coreFix_aluExe_1_dispToRegQ$EN_enq,
       coreFix_aluExe_1_dispToRegQ$EN_specUpdate_correctSpeculation,
       coreFix_aluExe_1_dispToRegQ$EN_specUpdate_incorrectSpeculation,
       coreFix_aluExe_1_dispToRegQ$RDY_deq,
       coreFix_aluExe_1_dispToRegQ$RDY_enq,
       coreFix_aluExe_1_dispToRegQ$RDY_first,
       coreFix_aluExe_1_dispToRegQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_aluExe_1_exeToFinQ
  reg [1 : 0] coreFix_aluExe_1_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [314 : 0] coreFix_aluExe_1_exeToFinQ$enq_x,
		 coreFix_aluExe_1_exeToFinQ$first;
  wire [3 : 0] coreFix_aluExe_1_exeToFinQ$specUpdate_correctSpeculation_mask;
  wire coreFix_aluExe_1_exeToFinQ$EN_deq,
       coreFix_aluExe_1_exeToFinQ$EN_enq,
       coreFix_aluExe_1_exeToFinQ$EN_specUpdate_correctSpeculation,
       coreFix_aluExe_1_exeToFinQ$EN_specUpdate_incorrectSpeculation,
       coreFix_aluExe_1_exeToFinQ$RDY_deq,
       coreFix_aluExe_1_exeToFinQ$RDY_enq,
       coreFix_aluExe_1_exeToFinQ$RDY_first,
       coreFix_aluExe_1_exeToFinQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_aluExe_1_regToExeQ
  reg [1 : 0] coreFix_aluExe_1_regToExeQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [409 : 0] coreFix_aluExe_1_regToExeQ$enq_x,
		 coreFix_aluExe_1_regToExeQ$first;
  wire [3 : 0] coreFix_aluExe_1_regToExeQ$specUpdate_correctSpeculation_mask;
  wire coreFix_aluExe_1_regToExeQ$EN_deq,
       coreFix_aluExe_1_regToExeQ$EN_enq,
       coreFix_aluExe_1_regToExeQ$EN_specUpdate_correctSpeculation,
       coreFix_aluExe_1_regToExeQ$EN_specUpdate_incorrectSpeculation,
       coreFix_aluExe_1_regToExeQ$RDY_deq,
       coreFix_aluExe_1_regToExeQ$RDY_enq,
       coreFix_aluExe_1_regToExeQ$RDY_first,
       coreFix_aluExe_1_regToExeQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_aluExe_1_rsAlu
  reg [7 : 0] coreFix_aluExe_1_rsAlu$setRegReady_2_put,
	      coreFix_aluExe_1_rsAlu$setRegReady_4_put;
  reg [1 : 0] coreFix_aluExe_1_rsAlu$specUpdate_incorrectSpeculation_kill_tag;
  wire [149 : 0] coreFix_aluExe_1_rsAlu$dispatchData,
		 coreFix_aluExe_1_rsAlu$enq_x;
  wire [7 : 0] coreFix_aluExe_1_rsAlu$setRegReady_0_put,
	       coreFix_aluExe_1_rsAlu$setRegReady_1_put,
	       coreFix_aluExe_1_rsAlu$setRegReady_3_put;
  wire [4 : 0] coreFix_aluExe_1_rsAlu$setRobEnqTime_t;
  wire [3 : 0] coreFix_aluExe_1_rsAlu$approximateCount,
	       coreFix_aluExe_1_rsAlu$specUpdate_correctSpeculation_mask;
  wire coreFix_aluExe_1_rsAlu$EN_doDispatch,
       coreFix_aluExe_1_rsAlu$EN_enq,
       coreFix_aluExe_1_rsAlu$EN_setRegReady_0_put,
       coreFix_aluExe_1_rsAlu$EN_setRegReady_1_put,
       coreFix_aluExe_1_rsAlu$EN_setRegReady_2_put,
       coreFix_aluExe_1_rsAlu$EN_setRegReady_3_put,
       coreFix_aluExe_1_rsAlu$EN_setRegReady_4_put,
       coreFix_aluExe_1_rsAlu$EN_setRobEnqTime,
       coreFix_aluExe_1_rsAlu$EN_specUpdate_correctSpeculation,
       coreFix_aluExe_1_rsAlu$EN_specUpdate_incorrectSpeculation,
       coreFix_aluExe_1_rsAlu$RDY_dispatchData,
       coreFix_aluExe_1_rsAlu$RDY_doDispatch,
       coreFix_aluExe_1_rsAlu$RDY_enq,
       coreFix_aluExe_1_rsAlu$canEnq,
       coreFix_aluExe_1_rsAlu$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_fpuMulDivExe_0_dispToRegQ
  reg [1 : 0] coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [67 : 0] coreFix_fpuMulDivExe_0_dispToRegQ$enq_x,
		coreFix_fpuMulDivExe_0_dispToRegQ$first;
  wire [3 : 0] coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_correctSpeculation_mask;
  wire coreFix_fpuMulDivExe_0_dispToRegQ$EN_deq,
       coreFix_fpuMulDivExe_0_dispToRegQ$EN_enq,
       coreFix_fpuMulDivExe_0_dispToRegQ$EN_specUpdate_correctSpeculation,
       coreFix_fpuMulDivExe_0_dispToRegQ$EN_specUpdate_incorrectSpeculation,
       coreFix_fpuMulDivExe_0_dispToRegQ$RDY_deq,
       coreFix_fpuMulDivExe_0_dispToRegQ$RDY_enq,
       coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first,
       coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_fpuMulDivExe_0_fpuExec_divQ
  reg [1 : 0] coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [32 : 0] coreFix_fpuMulDivExe_0_fpuExec_divQ$enq_x,
		coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data;
  wire [3 : 0] coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_correctSpeculation_mask;
  wire coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_deq,
       coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_enq,
       coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_specUpdate_correctSpeculation,
       coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_specUpdate_incorrectSpeculation,
       coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_deq,
       coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_enq,
       coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_first_data,
       coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_first_poisoned,
       coreFix_fpuMulDivExe_0_fpuExec_divQ$first_poisoned,
       coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_fpuMulDivExe_0_fpuExec_double_div
  wire [130 : 0] coreFix_fpuMulDivExe_0_fpuExec_double_div$request_put;
  wire [68 : 0] coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get;
  wire coreFix_fpuMulDivExe_0_fpuExec_double_div$EN_request_put,
       coreFix_fpuMulDivExe_0_fpuExec_double_div$EN_response_get,
       coreFix_fpuMulDivExe_0_fpuExec_double_div$RDY_request_put,
       coreFix_fpuMulDivExe_0_fpuExec_double_div$RDY_response_get;

  // ports of submodule coreFix_fpuMulDivExe_0_fpuExec_double_fma
  wire [195 : 0] coreFix_fpuMulDivExe_0_fpuExec_double_fma$request_put;
  wire [68 : 0] coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get;
  wire coreFix_fpuMulDivExe_0_fpuExec_double_fma$EN_request_put,
       coreFix_fpuMulDivExe_0_fpuExec_double_fma$EN_response_get,
       coreFix_fpuMulDivExe_0_fpuExec_double_fma$RDY_request_put,
       coreFix_fpuMulDivExe_0_fpuExec_double_fma$RDY_response_get;

  // ports of submodule coreFix_fpuMulDivExe_0_fpuExec_double_sqrt
  wire [68 : 0] coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get;
  wire [66 : 0] coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$request_put;
  wire coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$EN_request_put,
       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$EN_response_get,
       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$RDY_request_put,
       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$RDY_response_get;

  // ports of submodule coreFix_fpuMulDivExe_0_fpuExec_fmaQ
  reg [1 : 0] coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [32 : 0] coreFix_fpuMulDivExe_0_fpuExec_fmaQ$enq_x,
		coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data;
  wire [3 : 0] coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_correctSpeculation_mask;
  wire coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_deq,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_enq,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_specUpdate_correctSpeculation,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_specUpdate_incorrectSpeculation,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_deq,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_enq,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_first_data,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_first_poisoned,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_poisoned,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_fpuMulDivExe_0_fpuExec_simpleQ
  reg [1 : 0] coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [91 : 0] coreFix_fpuMulDivExe_0_fpuExec_simpleQ$enq_x,
		coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first;
  wire [3 : 0] coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_correctSpeculation_mask;
  wire coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_deq,
       coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_enq,
       coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_specUpdate_correctSpeculation,
       coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_specUpdate_incorrectSpeculation,
       coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_deq,
       coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_enq,
       coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_first,
       coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_fpuMulDivExe_0_fpuExec_sqrtQ
  reg [1 : 0] coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [32 : 0] coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$enq_x,
		coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data;
  wire [3 : 0] coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_correctSpeculation_mask;
  wire coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_deq,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_enq,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_specUpdate_correctSpeculation,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_specUpdate_incorrectSpeculation,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_deq,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_enq,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_first_data,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_first_poisoned,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_poisoned,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_fpuMulDivExe_0_mulDivExec_divQ
  reg [1 : 0] coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [25 : 0] coreFix_fpuMulDivExe_0_mulDivExec_divQ$enq_x,
		coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data;
  wire [3 : 0] coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_correctSpeculation_mask;
  wire coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_deq,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_enq,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_specUpdate_correctSpeculation,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_specUpdate_incorrectSpeculation,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_deq,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_enq,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_first_data,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_first_poisoned,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_poisoned,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc
  wire [127 : 0] coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$m_axis_dout_tdata;
  wire [75 : 0] coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$m_axis_dout_tuser,
		coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$s_axis_dividend_tuser;
  wire [63 : 0] coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$s_axis_dividend_tdata,
		coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$s_axis_divisor_tdata;
  wire coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$m_axis_dout_tready,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$m_axis_dout_tvalid,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$s_axis_dividend_tready,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$s_axis_dividend_tvalid,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$s_axis_divisor_tready,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$s_axis_divisor_tvalid;

  // ports of submodule coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg
  wire coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg$IS_READY;

  // ports of submodule coreFix_fpuMulDivExe_0_mulDivExec_mulQ
  reg [1 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [25 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulQ$enq_x,
		coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data;
  wire [3 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_correctSpeculation_mask;
  wire coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_deq,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_enq,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_specUpdate_correctSpeculation,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_specUpdate_incorrectSpeculation,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_deq,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_enq,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_first_data,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_first_poisoned,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_poisoned,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned
  wire [127 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned$P;
  wire [63 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned$A,
		coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned$B;

  // ports of submodule coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned
  wire [127 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned$P;
  wire [63 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned$A,
		coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned$B;

  // ports of submodule coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned
  wire [127 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned$P;
  wire [63 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned$A,
		coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned$B;

  // ports of submodule coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ
  reg [127 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$D_IN;
  wire [127 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$D_OUT;
  wire coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$CLR,
       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$DEQ,
       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$EMPTY_N,
       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$ENQ;

  // ports of submodule coreFix_fpuMulDivExe_0_regToExeQ
  reg [1 : 0] coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [235 : 0] coreFix_fpuMulDivExe_0_regToExeQ$enq_x,
		 coreFix_fpuMulDivExe_0_regToExeQ$first;
  wire [3 : 0] coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_correctSpeculation_mask;
  wire coreFix_fpuMulDivExe_0_regToExeQ$EN_deq,
       coreFix_fpuMulDivExe_0_regToExeQ$EN_enq,
       coreFix_fpuMulDivExe_0_regToExeQ$EN_specUpdate_correctSpeculation,
       coreFix_fpuMulDivExe_0_regToExeQ$EN_specUpdate_incorrectSpeculation,
       coreFix_fpuMulDivExe_0_regToExeQ$RDY_deq,
       coreFix_fpuMulDivExe_0_regToExeQ$RDY_enq,
       coreFix_fpuMulDivExe_0_regToExeQ$RDY_first,
       coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_fpuMulDivExe_0_rsFpuMulDiv
  reg [7 : 0] coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_2_put,
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put;
  reg [1 : 0] coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_incorrectSpeculation_kill_tag;
  wire [74 : 0] coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData,
		coreFix_fpuMulDivExe_0_rsFpuMulDiv$enq_x;
  wire [7 : 0] coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_0_put,
	       coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_1_put,
	       coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_3_put;
  wire [4 : 0] coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRobEnqTime_t;
  wire [3 : 0] coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_correctSpeculation_mask;
  wire coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_doDispatch,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_enq,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_0_put,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_1_put,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_2_put,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_3_put,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_4_put,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRobEnqTime,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_specUpdate_correctSpeculation,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_specUpdate_incorrectSpeculation,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_dispatchData,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_doDispatch,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_enq,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_cRqMshr
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_n;
  wire [512 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setData_d,
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getData;
  wire [150 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getEmptyEntryInit_r,
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getRq,
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq,
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getRq,
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getRq;
  wire [63 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain_addr;
  wire [57 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_slot,
		coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getSlot,
		coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getSlot,
		coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_setWaitSt_setSlot_clearData_slot;
  wire [3 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setSucc_succ;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getEmptyEntryInit,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getRq_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSlot_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setData_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_state,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setSucc_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getRq_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getSlot_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getData_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getRq_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getSlot_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getState_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_setWaitSt_setSlot_clearData_n;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_cRqTransfer_getEmptyEntryInit,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_releaseEntry,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_setData,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_setStateSlot,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_setSucc,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_sendRsToP_cRq_setWaitSt_setSlot_clearData,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_stuck_get,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$RDY_cRqTransfer_getEmptyEntryInit,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$RDY_pipelineResp_releaseEntry;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1$EN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2$EN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$EN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1$EN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2$EN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$EN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$EN,
       coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1$EN,
       coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_pRqMshr
  wire [512 : 0] coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_setDone_setData_d,
		 coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getData;
  wire [65 : 0] coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$getEmptyEntryInit_r,
		coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq,
		coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getRq;
  wire [1 : 0] coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$getEmptyEntryInit,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq_n,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getState_n,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_releaseEntry_n,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_setDone_setData_n,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getData_n,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getRq_n,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_releaseEntry_n;
  wire coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_getEmptyEntryInit,
       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_pipelineResp_releaseEntry,
       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_pipelineResp_setDone_setData,
       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_sendRsToP_pRq_releaseEntry,
       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_stuck_get,
       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$RDY_getEmptyEntryInit,
       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$RDY_pipelineResp_releaseEntry,
       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$RDY_sendRsToP_pRq_releaseEntry;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_pipeline
  reg [583 : 0] coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_r;
  reg [569 : 0] coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_wrRam;
  reg [3 : 0] coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_swapRq;
  reg coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_updateRep;
  wire [578 : 0] coreFix_memExe_dMem_cache_m_banks_0_pipeline$first;
  wire coreFix_memExe_dMem_cache_m_banks_0_pipeline$EN_deqWrite,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline$EN_send,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_send;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$EN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_1$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_1$EN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_2
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_2$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_2$EN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_1$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_0$EN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_0$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_1$EN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_2
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_2$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_2$EN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_IN,
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$CLR,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$DEQ,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$EMPTY_N,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$ENQ,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$FULL_N;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$D_IN,
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$D_OUT;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$CLR,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$DEQ,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$EMPTY_N,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$ENQ,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$FULL_N;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$D_IN,
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$D_OUT;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$CLR,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$DEQ,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$EMPTY_N,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$ENQ,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$FULL_N;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1$EN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2$EN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2$EN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ
  wire [3 : 0] coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_IN,
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$CLR,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$DEQ,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$EMPTY_N,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$ENQ,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$FULL_N;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1$EN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2$EN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2$EN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_0
  wire coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1
  wire coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1$EN,
       coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_0
  wire coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_1
  wire coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2
  wire coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2$D_IN,
       coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2$EN,
       coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_0
  wire coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_1
  wire coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2
  wire coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2$D_IN,
       coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2$EN,
       coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_dTlb
  reg [1 : 0] coreFix_memExe_dTlb$specUpdate_incorrectSpeculation_kill_tag;
  wire [162 : 0] coreFix_memExe_dTlb$procResp;
  wire [93 : 0] coreFix_memExe_dTlb$procReq_req;
  wire [82 : 0] coreFix_memExe_dTlb$toParent_ldTransRsFromP_enq_x;
  wire [48 : 0] coreFix_memExe_dTlb$updateVMInfo_vm;
  wire [28 : 0] coreFix_memExe_dTlb$toParent_rqToP_first;
  wire [3 : 0] coreFix_memExe_dTlb$specUpdate_correctSpeculation_mask;
  wire [2 : 0] coreFix_memExe_dTlb$perf_req_r;
  wire coreFix_memExe_dTlb$EN_deqProcResp,
       coreFix_memExe_dTlb$EN_flush,
       coreFix_memExe_dTlb$EN_perf_req,
       coreFix_memExe_dTlb$EN_perf_resp,
       coreFix_memExe_dTlb$EN_perf_setStatus,
       coreFix_memExe_dTlb$EN_procReq,
       coreFix_memExe_dTlb$EN_specUpdate_correctSpeculation,
       coreFix_memExe_dTlb$EN_specUpdate_incorrectSpeculation,
       coreFix_memExe_dTlb$EN_toParent_flush_request_get,
       coreFix_memExe_dTlb$EN_toParent_flush_response_put,
       coreFix_memExe_dTlb$EN_toParent_ldTransRsFromP_enq,
       coreFix_memExe_dTlb$EN_toParent_rqToP_deq,
       coreFix_memExe_dTlb$EN_updateVMInfo,
       coreFix_memExe_dTlb$RDY_deqProcResp,
       coreFix_memExe_dTlb$RDY_flush,
       coreFix_memExe_dTlb$RDY_procReq,
       coreFix_memExe_dTlb$RDY_procResp,
       coreFix_memExe_dTlb$RDY_toParent_flush_request_get,
       coreFix_memExe_dTlb$RDY_toParent_flush_response_put,
       coreFix_memExe_dTlb$RDY_toParent_ldTransRsFromP_enq,
       coreFix_memExe_dTlb$RDY_toParent_rqToP_deq,
       coreFix_memExe_dTlb$RDY_toParent_rqToP_first,
       coreFix_memExe_dTlb$flush_done,
       coreFix_memExe_dTlb$noPendingReq,
       coreFix_memExe_dTlb$perf_setStatus_doStats,
       coreFix_memExe_dTlb$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_memExe_dispToRegQ
  reg [1 : 0] coreFix_memExe_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [85 : 0] coreFix_memExe_dispToRegQ$enq_x,
		coreFix_memExe_dispToRegQ$first;
  wire [3 : 0] coreFix_memExe_dispToRegQ$specUpdate_correctSpeculation_mask;
  wire coreFix_memExe_dispToRegQ$EN_deq,
       coreFix_memExe_dispToRegQ$EN_enq,
       coreFix_memExe_dispToRegQ$EN_specUpdate_correctSpeculation,
       coreFix_memExe_dispToRegQ$EN_specUpdate_incorrectSpeculation,
       coreFix_memExe_dispToRegQ$RDY_deq,
       coreFix_memExe_dispToRegQ$RDY_enq,
       coreFix_memExe_dispToRegQ$RDY_first,
       coreFix_memExe_dispToRegQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_memExe_forwardQ_clearReq_dummy2_0
  wire coreFix_memExe_forwardQ_clearReq_dummy2_0$D_IN,
       coreFix_memExe_forwardQ_clearReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_forwardQ_clearReq_dummy2_1
  wire coreFix_memExe_forwardQ_clearReq_dummy2_1$D_IN,
       coreFix_memExe_forwardQ_clearReq_dummy2_1$EN,
       coreFix_memExe_forwardQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_forwardQ_deqReq_dummy2_0
  wire coreFix_memExe_forwardQ_deqReq_dummy2_0$D_IN,
       coreFix_memExe_forwardQ_deqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_forwardQ_deqReq_dummy2_1
  wire coreFix_memExe_forwardQ_deqReq_dummy2_1$D_IN,
       coreFix_memExe_forwardQ_deqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_forwardQ_deqReq_dummy2_2
  wire coreFix_memExe_forwardQ_deqReq_dummy2_2$D_IN,
       coreFix_memExe_forwardQ_deqReq_dummy2_2$EN,
       coreFix_memExe_forwardQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_forwardQ_enqReq_dummy2_0
  wire coreFix_memExe_forwardQ_enqReq_dummy2_0$D_IN,
       coreFix_memExe_forwardQ_enqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_forwardQ_enqReq_dummy2_1
  wire coreFix_memExe_forwardQ_enqReq_dummy2_1$D_IN,
       coreFix_memExe_forwardQ_enqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_forwardQ_enqReq_dummy2_2
  wire coreFix_memExe_forwardQ_enqReq_dummy2_2$D_IN,
       coreFix_memExe_forwardQ_enqReq_dummy2_2$EN,
       coreFix_memExe_forwardQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_lsq
  reg [1 : 0] coreFix_memExe_lsq$specUpdate_incorrectSpeculation_kill_tag;
  wire [168 : 0] coreFix_memExe_lsq$firstSt;
  wire [111 : 0] coreFix_memExe_lsq$firstLd;
  wire [74 : 0] coreFix_memExe_lsq$getIssueLd, coreFix_memExe_lsq$issueLd;
  wire [73 : 0] coreFix_memExe_lsq$respLd;
  wire [66 : 0] coreFix_memExe_lsq$issueLd_sbRes;
  wire [63 : 0] coreFix_memExe_lsq$issueLd_paddr,
		coreFix_memExe_lsq$respLd_alignedData,
		coreFix_memExe_lsq$updateAddr_paddr,
		coreFix_memExe_lsq$updateData_d;
  wire [17 : 0] coreFix_memExe_lsq$enqLd_mem_inst,
		coreFix_memExe_lsq$enqSt_mem_inst;
  wire [9 : 0] coreFix_memExe_lsq$enqLd_inst_tag,
	       coreFix_memExe_lsq$enqSt_inst_tag,
	       coreFix_memExe_lsq$getHit;
  wire [8 : 0] coreFix_memExe_lsq$enqLd_dst, coreFix_memExe_lsq$enqSt_dst;
  wire [7 : 0] coreFix_memExe_lsq$getOrigBE,
	       coreFix_memExe_lsq$issueLd_shiftedBE,
	       coreFix_memExe_lsq$updateAddr_shiftedBE;
  wire [4 : 0] coreFix_memExe_lsq$enqLdTag,
	       coreFix_memExe_lsq$enqStTag,
	       coreFix_memExe_lsq$updateAddr_fault;
  wire [3 : 0] coreFix_memExe_lsq$enqLd_spec_bits,
	       coreFix_memExe_lsq$enqSt_spec_bits,
	       coreFix_memExe_lsq$getHit_t,
	       coreFix_memExe_lsq$getOrigBE_t,
	       coreFix_memExe_lsq$setAtCommit_0_put,
	       coreFix_memExe_lsq$setAtCommit_1_put,
	       coreFix_memExe_lsq$specUpdate_correctSpeculation_mask,
	       coreFix_memExe_lsq$updateAddr_lsqTag;
  wire [2 : 0] coreFix_memExe_lsq$issueLd_lsqTag, coreFix_memExe_lsq$respLd_t;
  wire [1 : 0] coreFix_memExe_lsq$updateData_t;
  wire coreFix_memExe_lsq$EN_deqLd,
       coreFix_memExe_lsq$EN_deqSt,
       coreFix_memExe_lsq$EN_enqLd,
       coreFix_memExe_lsq$EN_enqSt,
       coreFix_memExe_lsq$EN_getHit,
       coreFix_memExe_lsq$EN_getIssueLd,
       coreFix_memExe_lsq$EN_issueLd,
       coreFix_memExe_lsq$EN_respLd,
       coreFix_memExe_lsq$EN_setAtCommit_0_put,
       coreFix_memExe_lsq$EN_setAtCommit_1_put,
       coreFix_memExe_lsq$EN_specUpdate_correctSpeculation,
       coreFix_memExe_lsq$EN_specUpdate_incorrectSpeculation,
       coreFix_memExe_lsq$EN_updateAddr,
       coreFix_memExe_lsq$EN_updateData,
       coreFix_memExe_lsq$EN_wakeupLdStalledBySB,
       coreFix_memExe_lsq$RDY_deqLd,
       coreFix_memExe_lsq$RDY_deqSt,
       coreFix_memExe_lsq$RDY_enqLd,
       coreFix_memExe_lsq$RDY_enqSt,
       coreFix_memExe_lsq$RDY_firstLd,
       coreFix_memExe_lsq$RDY_firstSt,
       coreFix_memExe_lsq$RDY_getIssueLd,
       coreFix_memExe_lsq$noWrongPathLoads,
       coreFix_memExe_lsq$specUpdate_incorrectSpeculation_kill_all,
       coreFix_memExe_lsq$stqEmpty,
       coreFix_memExe_lsq$updateAddr,
       coreFix_memExe_lsq$updateAddr_isMMIO,
       coreFix_memExe_lsq$wakeupLdStalledBySB_sbIdx;

  // ports of submodule coreFix_memExe_memRespLdQ_clearReq_dummy2_0
  wire coreFix_memExe_memRespLdQ_clearReq_dummy2_0$D_IN,
       coreFix_memExe_memRespLdQ_clearReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_memRespLdQ_clearReq_dummy2_1
  wire coreFix_memExe_memRespLdQ_clearReq_dummy2_1$D_IN,
       coreFix_memExe_memRespLdQ_clearReq_dummy2_1$EN,
       coreFix_memExe_memRespLdQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_memRespLdQ_deqReq_dummy2_0
  wire coreFix_memExe_memRespLdQ_deqReq_dummy2_0$D_IN,
       coreFix_memExe_memRespLdQ_deqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_memRespLdQ_deqReq_dummy2_1
  wire coreFix_memExe_memRespLdQ_deqReq_dummy2_1$D_IN,
       coreFix_memExe_memRespLdQ_deqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_memRespLdQ_deqReq_dummy2_2
  wire coreFix_memExe_memRespLdQ_deqReq_dummy2_2$D_IN,
       coreFix_memExe_memRespLdQ_deqReq_dummy2_2$EN,
       coreFix_memExe_memRespLdQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_memRespLdQ_enqReq_dummy2_0
  wire coreFix_memExe_memRespLdQ_enqReq_dummy2_0$D_IN,
       coreFix_memExe_memRespLdQ_enqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_memRespLdQ_enqReq_dummy2_1
  wire coreFix_memExe_memRespLdQ_enqReq_dummy2_1$D_IN,
       coreFix_memExe_memRespLdQ_enqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_memRespLdQ_enqReq_dummy2_2
  wire coreFix_memExe_memRespLdQ_enqReq_dummy2_2$D_IN,
       coreFix_memExe_memRespLdQ_enqReq_dummy2_2$EN,
       coreFix_memExe_memRespLdQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_regToExeQ
  reg [1 : 0] coreFix_memExe_regToExeQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [180 : 0] coreFix_memExe_regToExeQ$enq_x,
		 coreFix_memExe_regToExeQ$first;
  wire [3 : 0] coreFix_memExe_regToExeQ$specUpdate_correctSpeculation_mask;
  wire coreFix_memExe_regToExeQ$EN_deq,
       coreFix_memExe_regToExeQ$EN_enq,
       coreFix_memExe_regToExeQ$EN_specUpdate_correctSpeculation,
       coreFix_memExe_regToExeQ$EN_specUpdate_incorrectSpeculation,
       coreFix_memExe_regToExeQ$RDY_deq,
       coreFix_memExe_regToExeQ$RDY_enq,
       coreFix_memExe_regToExeQ$RDY_first,
       coreFix_memExe_regToExeQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_memExe_reqLdQ_data_0_dummy2_0
  wire coreFix_memExe_reqLdQ_data_0_dummy2_0$D_IN,
       coreFix_memExe_reqLdQ_data_0_dummy2_0$EN;

  // ports of submodule coreFix_memExe_reqLdQ_data_0_dummy2_1
  wire coreFix_memExe_reqLdQ_data_0_dummy2_1$D_IN,
       coreFix_memExe_reqLdQ_data_0_dummy2_1$EN,
       coreFix_memExe_reqLdQ_data_0_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_reqLdQ_deqP_dummy2_0
  wire coreFix_memExe_reqLdQ_deqP_dummy2_0$D_IN,
       coreFix_memExe_reqLdQ_deqP_dummy2_0$EN;

  // ports of submodule coreFix_memExe_reqLdQ_deqP_dummy2_1
  wire coreFix_memExe_reqLdQ_deqP_dummy2_1$D_IN,
       coreFix_memExe_reqLdQ_deqP_dummy2_1$EN;

  // ports of submodule coreFix_memExe_reqLdQ_empty_dummy2_0
  wire coreFix_memExe_reqLdQ_empty_dummy2_0$D_IN,
       coreFix_memExe_reqLdQ_empty_dummy2_0$EN;

  // ports of submodule coreFix_memExe_reqLdQ_empty_dummy2_1
  wire coreFix_memExe_reqLdQ_empty_dummy2_1$D_IN,
       coreFix_memExe_reqLdQ_empty_dummy2_1$EN,
       coreFix_memExe_reqLdQ_empty_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_reqLdQ_empty_dummy2_2
  wire coreFix_memExe_reqLdQ_empty_dummy2_2$D_IN,
       coreFix_memExe_reqLdQ_empty_dummy2_2$EN,
       coreFix_memExe_reqLdQ_empty_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_reqLdQ_enqP_dummy2_0
  wire coreFix_memExe_reqLdQ_enqP_dummy2_0$D_IN,
       coreFix_memExe_reqLdQ_enqP_dummy2_0$EN;

  // ports of submodule coreFix_memExe_reqLdQ_enqP_dummy2_1
  wire coreFix_memExe_reqLdQ_enqP_dummy2_1$D_IN,
       coreFix_memExe_reqLdQ_enqP_dummy2_1$EN;

  // ports of submodule coreFix_memExe_reqLdQ_full_dummy2_0
  wire coreFix_memExe_reqLdQ_full_dummy2_0$D_IN,
       coreFix_memExe_reqLdQ_full_dummy2_0$EN,
       coreFix_memExe_reqLdQ_full_dummy2_0$Q_OUT;

  // ports of submodule coreFix_memExe_reqLdQ_full_dummy2_1
  wire coreFix_memExe_reqLdQ_full_dummy2_1$D_IN,
       coreFix_memExe_reqLdQ_full_dummy2_1$EN,
       coreFix_memExe_reqLdQ_full_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_reqLdQ_full_dummy2_2
  wire coreFix_memExe_reqLdQ_full_dummy2_2$D_IN,
       coreFix_memExe_reqLdQ_full_dummy2_2$EN,
       coreFix_memExe_reqLdQ_full_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_reqLrScAmoQ_data_0_dummy2_0
  wire coreFix_memExe_reqLrScAmoQ_data_0_dummy2_0$D_IN,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_0$EN;

  // ports of submodule coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1
  wire coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$D_IN,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$EN,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_reqLrScAmoQ_deqP_dummy2_0
  wire coreFix_memExe_reqLrScAmoQ_deqP_dummy2_0$D_IN,
       coreFix_memExe_reqLrScAmoQ_deqP_dummy2_0$EN;

  // ports of submodule coreFix_memExe_reqLrScAmoQ_deqP_dummy2_1
  wire coreFix_memExe_reqLrScAmoQ_deqP_dummy2_1$D_IN,
       coreFix_memExe_reqLrScAmoQ_deqP_dummy2_1$EN;

  // ports of submodule coreFix_memExe_reqLrScAmoQ_empty_dummy2_0
  wire coreFix_memExe_reqLrScAmoQ_empty_dummy2_0$D_IN,
       coreFix_memExe_reqLrScAmoQ_empty_dummy2_0$EN;

  // ports of submodule coreFix_memExe_reqLrScAmoQ_empty_dummy2_1
  wire coreFix_memExe_reqLrScAmoQ_empty_dummy2_1$D_IN,
       coreFix_memExe_reqLrScAmoQ_empty_dummy2_1$EN,
       coreFix_memExe_reqLrScAmoQ_empty_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_reqLrScAmoQ_empty_dummy2_2
  wire coreFix_memExe_reqLrScAmoQ_empty_dummy2_2$D_IN,
       coreFix_memExe_reqLrScAmoQ_empty_dummy2_2$EN,
       coreFix_memExe_reqLrScAmoQ_empty_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_reqLrScAmoQ_enqP_dummy2_0
  wire coreFix_memExe_reqLrScAmoQ_enqP_dummy2_0$D_IN,
       coreFix_memExe_reqLrScAmoQ_enqP_dummy2_0$EN;

  // ports of submodule coreFix_memExe_reqLrScAmoQ_enqP_dummy2_1
  wire coreFix_memExe_reqLrScAmoQ_enqP_dummy2_1$D_IN,
       coreFix_memExe_reqLrScAmoQ_enqP_dummy2_1$EN;

  // ports of submodule coreFix_memExe_reqLrScAmoQ_full_dummy2_0
  wire coreFix_memExe_reqLrScAmoQ_full_dummy2_0$D_IN,
       coreFix_memExe_reqLrScAmoQ_full_dummy2_0$EN,
       coreFix_memExe_reqLrScAmoQ_full_dummy2_0$Q_OUT;

  // ports of submodule coreFix_memExe_reqLrScAmoQ_full_dummy2_1
  wire coreFix_memExe_reqLrScAmoQ_full_dummy2_1$D_IN,
       coreFix_memExe_reqLrScAmoQ_full_dummy2_1$EN,
       coreFix_memExe_reqLrScAmoQ_full_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_reqLrScAmoQ_full_dummy2_2
  wire coreFix_memExe_reqLrScAmoQ_full_dummy2_2$D_IN,
       coreFix_memExe_reqLrScAmoQ_full_dummy2_2$EN,
       coreFix_memExe_reqLrScAmoQ_full_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_reqStQ_data_0_dummy2_0
  wire coreFix_memExe_reqStQ_data_0_dummy2_0$D_IN,
       coreFix_memExe_reqStQ_data_0_dummy2_0$EN;

  // ports of submodule coreFix_memExe_reqStQ_data_0_dummy2_1
  wire coreFix_memExe_reqStQ_data_0_dummy2_1$D_IN,
       coreFix_memExe_reqStQ_data_0_dummy2_1$EN,
       coreFix_memExe_reqStQ_data_0_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_reqStQ_deqP_dummy2_0
  wire coreFix_memExe_reqStQ_deqP_dummy2_0$D_IN,
       coreFix_memExe_reqStQ_deqP_dummy2_0$EN;

  // ports of submodule coreFix_memExe_reqStQ_deqP_dummy2_1
  wire coreFix_memExe_reqStQ_deqP_dummy2_1$D_IN,
       coreFix_memExe_reqStQ_deqP_dummy2_1$EN;

  // ports of submodule coreFix_memExe_reqStQ_empty_dummy2_0
  wire coreFix_memExe_reqStQ_empty_dummy2_0$D_IN,
       coreFix_memExe_reqStQ_empty_dummy2_0$EN;

  // ports of submodule coreFix_memExe_reqStQ_empty_dummy2_1
  wire coreFix_memExe_reqStQ_empty_dummy2_1$D_IN,
       coreFix_memExe_reqStQ_empty_dummy2_1$EN,
       coreFix_memExe_reqStQ_empty_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_reqStQ_empty_dummy2_2
  wire coreFix_memExe_reqStQ_empty_dummy2_2$D_IN,
       coreFix_memExe_reqStQ_empty_dummy2_2$EN,
       coreFix_memExe_reqStQ_empty_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_reqStQ_enqP_dummy2_0
  wire coreFix_memExe_reqStQ_enqP_dummy2_0$D_IN,
       coreFix_memExe_reqStQ_enqP_dummy2_0$EN;

  // ports of submodule coreFix_memExe_reqStQ_enqP_dummy2_1
  wire coreFix_memExe_reqStQ_enqP_dummy2_1$D_IN,
       coreFix_memExe_reqStQ_enqP_dummy2_1$EN;

  // ports of submodule coreFix_memExe_reqStQ_full_dummy2_0
  wire coreFix_memExe_reqStQ_full_dummy2_0$D_IN,
       coreFix_memExe_reqStQ_full_dummy2_0$EN,
       coreFix_memExe_reqStQ_full_dummy2_0$Q_OUT;

  // ports of submodule coreFix_memExe_reqStQ_full_dummy2_1
  wire coreFix_memExe_reqStQ_full_dummy2_1$D_IN,
       coreFix_memExe_reqStQ_full_dummy2_1$EN,
       coreFix_memExe_reqStQ_full_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_reqStQ_full_dummy2_2
  wire coreFix_memExe_reqStQ_full_dummy2_2$D_IN,
       coreFix_memExe_reqStQ_full_dummy2_2$EN,
       coreFix_memExe_reqStQ_full_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_respLrScAmoQ_clearReq_dummy2_0
  wire coreFix_memExe_respLrScAmoQ_clearReq_dummy2_0$D_IN,
       coreFix_memExe_respLrScAmoQ_clearReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1
  wire coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1$D_IN,
       coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1$EN,
       coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_respLrScAmoQ_deqReq_dummy2_0
  wire coreFix_memExe_respLrScAmoQ_deqReq_dummy2_0$D_IN,
       coreFix_memExe_respLrScAmoQ_deqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_respLrScAmoQ_deqReq_dummy2_1
  wire coreFix_memExe_respLrScAmoQ_deqReq_dummy2_1$D_IN,
       coreFix_memExe_respLrScAmoQ_deqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2
  wire coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2$D_IN,
       coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2$EN,
       coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0
  wire coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0$D_IN,
       coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_respLrScAmoQ_enqReq_dummy2_1
  wire coreFix_memExe_respLrScAmoQ_enqReq_dummy2_1$D_IN,
       coreFix_memExe_respLrScAmoQ_enqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2
  wire coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2$D_IN,
       coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2$EN,
       coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_rsMem
  reg [7 : 0] coreFix_memExe_rsMem$setRegReady_2_put,
	      coreFix_memExe_rsMem$setRegReady_4_put;
  reg [1 : 0] coreFix_memExe_rsMem$specUpdate_incorrectSpeculation_kill_tag;
  wire [92 : 0] coreFix_memExe_rsMem$dispatchData, coreFix_memExe_rsMem$enq_x;
  wire [7 : 0] coreFix_memExe_rsMem$setRegReady_0_put,
	       coreFix_memExe_rsMem$setRegReady_1_put,
	       coreFix_memExe_rsMem$setRegReady_3_put;
  wire [4 : 0] coreFix_memExe_rsMem$setRobEnqTime_t;
  wire [3 : 0] coreFix_memExe_rsMem$specUpdate_correctSpeculation_mask;
  wire coreFix_memExe_rsMem$EN_doDispatch,
       coreFix_memExe_rsMem$EN_enq,
       coreFix_memExe_rsMem$EN_setRegReady_0_put,
       coreFix_memExe_rsMem$EN_setRegReady_1_put,
       coreFix_memExe_rsMem$EN_setRegReady_2_put,
       coreFix_memExe_rsMem$EN_setRegReady_3_put,
       coreFix_memExe_rsMem$EN_setRegReady_4_put,
       coreFix_memExe_rsMem$EN_setRobEnqTime,
       coreFix_memExe_rsMem$EN_specUpdate_correctSpeculation,
       coreFix_memExe_rsMem$EN_specUpdate_incorrectSpeculation,
       coreFix_memExe_rsMem$RDY_dispatchData,
       coreFix_memExe_rsMem$RDY_doDispatch,
       coreFix_memExe_rsMem$RDY_enq,
       coreFix_memExe_rsMem$canEnq,
       coreFix_memExe_rsMem$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_memExe_stb
  wire [634 : 0] coreFix_memExe_stb$issue;
  wire [633 : 0] coreFix_memExe_stb$deq;
  wire [66 : 0] coreFix_memExe_stb$search;
  wire [63 : 0] coreFix_memExe_stb$enq_data,
		coreFix_memExe_stb$enq_paddr,
		coreFix_memExe_stb$getEnqIndex_paddr,
		coreFix_memExe_stb$noMatchLdQ_paddr,
		coreFix_memExe_stb$noMatchStQ_paddr,
		coreFix_memExe_stb$search_paddr;
  wire [7 : 0] coreFix_memExe_stb$enq_be,
	       coreFix_memExe_stb$noMatchLdQ_be,
	       coreFix_memExe_stb$noMatchStQ_be,
	       coreFix_memExe_stb$search_be;
  wire [1 : 0] coreFix_memExe_stb$getEnqIndex;
  wire coreFix_memExe_stb$EN_deq,
       coreFix_memExe_stb$EN_enq,
       coreFix_memExe_stb$EN_issue,
       coreFix_memExe_stb$RDY_deq,
       coreFix_memExe_stb$RDY_enq,
       coreFix_memExe_stb$RDY_issue,
       coreFix_memExe_stb$deq_idx,
       coreFix_memExe_stb$enq_idx,
       coreFix_memExe_stb$isEmpty,
       coreFix_memExe_stb$noMatchLdQ,
       coreFix_memExe_stb$noMatchStQ;

  // ports of submodule coreFix_trainBPQ_0
  wire [159 : 0] coreFix_trainBPQ_0$D_IN, coreFix_trainBPQ_0$D_OUT;
  wire coreFix_trainBPQ_0$CLR,
       coreFix_trainBPQ_0$DEQ,
       coreFix_trainBPQ_0$EMPTY_N,
       coreFix_trainBPQ_0$ENQ,
       coreFix_trainBPQ_0$FULL_N;

  // ports of submodule coreFix_trainBPQ_1
  wire [159 : 0] coreFix_trainBPQ_1$D_IN, coreFix_trainBPQ_1$D_OUT;
  wire coreFix_trainBPQ_1$CLR,
       coreFix_trainBPQ_1$DEQ,
       coreFix_trainBPQ_1$EMPTY_N,
       coreFix_trainBPQ_1$ENQ,
       coreFix_trainBPQ_1$FULL_N;

  // ports of submodule csrInstOrInterruptInflight_dummy2_0
  wire csrInstOrInterruptInflight_dummy2_0$D_IN,
       csrInstOrInterruptInflight_dummy2_0$EN,
       csrInstOrInterruptInflight_dummy2_0$Q_OUT;

  // ports of submodule csrInstOrInterruptInflight_dummy2_1
  wire csrInstOrInterruptInflight_dummy2_1$D_IN,
       csrInstOrInterruptInflight_dummy2_1$EN,
       csrInstOrInterruptInflight_dummy2_1$Q_OUT;

  // ports of submodule csrf_mcycle_ehr_data_dummy2_0
  wire csrf_mcycle_ehr_data_dummy2_0$D_IN,
       csrf_mcycle_ehr_data_dummy2_0$EN,
       csrf_mcycle_ehr_data_dummy2_0$Q_OUT;

  // ports of submodule csrf_mcycle_ehr_data_dummy2_1
  wire csrf_mcycle_ehr_data_dummy2_1$D_IN,
       csrf_mcycle_ehr_data_dummy2_1$EN,
       csrf_mcycle_ehr_data_dummy2_1$Q_OUT;

  // ports of submodule csrf_minstret_ehr_data_dummy2_0
  wire csrf_minstret_ehr_data_dummy2_0$D_IN,
       csrf_minstret_ehr_data_dummy2_0$EN,
       csrf_minstret_ehr_data_dummy2_0$Q_OUT;

  // ports of submodule csrf_minstret_ehr_data_dummy2_1
  wire csrf_minstret_ehr_data_dummy2_1$D_IN,
       csrf_minstret_ehr_data_dummy2_1$EN,
       csrf_minstret_ehr_data_dummy2_1$Q_OUT;

  // ports of submodule csrf_stats_module_writeQ
  wire csrf_stats_module_writeQ$CLR,
       csrf_stats_module_writeQ$DEQ,
       csrf_stats_module_writeQ$D_IN,
       csrf_stats_module_writeQ$D_OUT,
       csrf_stats_module_writeQ$EMPTY_N,
       csrf_stats_module_writeQ$ENQ,
       csrf_stats_module_writeQ$FULL_N;

  // ports of submodule csrf_terminate_module_terminateQ
  wire csrf_terminate_module_terminateQ$CLR,
       csrf_terminate_module_terminateQ$DEQ,
       csrf_terminate_module_terminateQ$EMPTY_N,
       csrf_terminate_module_terminateQ$ENQ,
       csrf_terminate_module_terminateQ$FULL_N;

  // ports of submodule epochManager
  wire [1 : 0] epochManager$checkEpoch_0_check_e,
	       epochManager$checkEpoch_1_check_e,
	       epochManager$updatePrevEpoch_0_update_e,
	       epochManager$updatePrevEpoch_1_update_e;
  wire epochManager$EN_incrementEpoch,
       epochManager$EN_updatePrevEpoch_0_update,
       epochManager$EN_updatePrevEpoch_1_update,
       epochManager$RDY_incrementEpoch,
       epochManager$checkEpoch_0_check,
       epochManager$checkEpoch_1_check;

  // ports of submodule f_csr_reqs
  wire [76 : 0] f_csr_reqs$D_IN, f_csr_reqs$D_OUT;
  wire f_csr_reqs$CLR,
       f_csr_reqs$DEQ,
       f_csr_reqs$EMPTY_N,
       f_csr_reqs$ENQ,
       f_csr_reqs$FULL_N;

  // ports of submodule f_csr_rsps
  reg [64 : 0] f_csr_rsps$D_IN;
  wire [64 : 0] f_csr_rsps$D_OUT;
  wire f_csr_rsps$CLR,
       f_csr_rsps$DEQ,
       f_csr_rsps$EMPTY_N,
       f_csr_rsps$ENQ,
       f_csr_rsps$FULL_N;

  // ports of submodule f_fpr_reqs
  wire [69 : 0] f_fpr_reqs$D_IN, f_fpr_reqs$D_OUT;
  wire f_fpr_reqs$CLR,
       f_fpr_reqs$DEQ,
       f_fpr_reqs$EMPTY_N,
       f_fpr_reqs$ENQ,
       f_fpr_reqs$FULL_N;

  // ports of submodule f_fpr_rsps
  reg [64 : 0] f_fpr_rsps$D_IN;
  wire [64 : 0] f_fpr_rsps$D_OUT;
  wire f_fpr_rsps$CLR,
       f_fpr_rsps$DEQ,
       f_fpr_rsps$EMPTY_N,
       f_fpr_rsps$ENQ,
       f_fpr_rsps$FULL_N;

  // ports of submodule f_gpr_reqs
  wire [69 : 0] f_gpr_reqs$D_IN, f_gpr_reqs$D_OUT;
  wire f_gpr_reqs$CLR,
       f_gpr_reqs$DEQ,
       f_gpr_reqs$EMPTY_N,
       f_gpr_reqs$ENQ,
       f_gpr_reqs$FULL_N;

  // ports of submodule f_gpr_rsps
  reg [64 : 0] f_gpr_rsps$D_IN;
  wire [64 : 0] f_gpr_rsps$D_OUT;
  wire f_gpr_rsps$CLR,
       f_gpr_rsps$DEQ,
       f_gpr_rsps$EMPTY_N,
       f_gpr_rsps$ENQ,
       f_gpr_rsps$FULL_N;

  // ports of submodule f_run_halt_reqs
  wire f_run_halt_reqs$CLR,
       f_run_halt_reqs$DEQ,
       f_run_halt_reqs$D_IN,
       f_run_halt_reqs$D_OUT,
       f_run_halt_reqs$EMPTY_N,
       f_run_halt_reqs$ENQ,
       f_run_halt_reqs$FULL_N;

  // ports of submodule f_run_halt_rsps
  wire f_run_halt_rsps$CLR,
       f_run_halt_rsps$DEQ,
       f_run_halt_rsps$D_IN,
       f_run_halt_rsps$D_OUT,
       f_run_halt_rsps$EMPTY_N,
       f_run_halt_rsps$ENQ,
       f_run_halt_rsps$FULL_N;

  // ports of submodule fetchStage
  reg [63 : 0] fetchStage$redirect_pc;
  wire [582 : 0] fetchStage$iMemIfc_to_parent_fromP_enq_x;
  wire [578 : 0] fetchStage$iMemIfc_to_parent_rsToP_first;
  wire [385 : 0] fetchStage$pipelines_0_first, fetchStage$pipelines_1_first;
  wire [80 : 0] fetchStage$iTlbIfc_toParent_rsFromP_enq_x;
  wire [71 : 0] fetchStage$iMemIfc_to_parent_rqToP_first;
  wire [67 : 0] fetchStage$iMemIfc_cRqStuck_get,
		fetchStage$iMemIfc_pRqStuck_get,
		fetchStage$mmioIfc_instResp_enq_x;
  wire [63 : 0] fetchStage$iMemIfc_to_proc_request_put,
		fetchStage$iTlbIfc_to_proc_request_put,
		fetchStage$mmioIfc_instReq_first_fst,
		fetchStage$mmioIfc_setHtifAddrs_fromHost,
		fetchStage$mmioIfc_setHtifAddrs_toHost,
		fetchStage$start_pc,
		fetchStage$train_predictors_next_pc,
		fetchStage$train_predictors_pc;
  wire [48 : 0] fetchStage$iTlbIfc_updateVMInfo_vm;
  wire [26 : 0] fetchStage$iTlbIfc_toParent_rqToP_first;
  wire [23 : 0] fetchStage$train_predictors_dpTrain;
  wire [4 : 0] fetchStage$train_predictors_iType;
  wire [2 : 0] fetchStage$iTlbIfc_perf_req_r;
  wire [1 : 0] fetchStage$iMemIfc_perf_req_r,
	       fetchStage$mmioIfc_instReq_first_snd,
	       fetchStage$perf_req_r;
  wire fetchStage$EN_done_flushing,
       fetchStage$EN_flush_predictors,
       fetchStage$EN_iMemIfc_cRqStuck_get,
       fetchStage$EN_iMemIfc_flush,
       fetchStage$EN_iMemIfc_pRqStuck_get,
       fetchStage$EN_iMemIfc_perf_req,
       fetchStage$EN_iMemIfc_perf_resp,
       fetchStage$EN_iMemIfc_perf_setStatus,
       fetchStage$EN_iMemIfc_to_parent_fromP_enq,
       fetchStage$EN_iMemIfc_to_parent_rqToP_deq,
       fetchStage$EN_iMemIfc_to_parent_rsToP_deq,
       fetchStage$EN_iMemIfc_to_proc_request_put,
       fetchStage$EN_iMemIfc_to_proc_response_get,
       fetchStage$EN_iTlbIfc_flush,
       fetchStage$EN_iTlbIfc_perf_req,
       fetchStage$EN_iTlbIfc_perf_resp,
       fetchStage$EN_iTlbIfc_perf_setStatus,
       fetchStage$EN_iTlbIfc_toParent_flush_request_get,
       fetchStage$EN_iTlbIfc_toParent_flush_response_put,
       fetchStage$EN_iTlbIfc_toParent_rqToP_deq,
       fetchStage$EN_iTlbIfc_toParent_rsFromP_enq,
       fetchStage$EN_iTlbIfc_to_proc_request_put,
       fetchStage$EN_iTlbIfc_to_proc_response_get,
       fetchStage$EN_iTlbIfc_updateVMInfo,
       fetchStage$EN_mmioIfc_instReq_deq,
       fetchStage$EN_mmioIfc_instResp_enq,
       fetchStage$EN_mmioIfc_setHtifAddrs,
       fetchStage$EN_perf_req,
       fetchStage$EN_perf_resp,
       fetchStage$EN_perf_setStatus,
       fetchStage$EN_pipelines_0_deq,
       fetchStage$EN_pipelines_1_deq,
       fetchStage$EN_redirect,
       fetchStage$EN_setWaitFlush,
       fetchStage$EN_setWaitRedirect,
       fetchStage$EN_start,
       fetchStage$EN_stop,
       fetchStage$EN_train_predictors,
       fetchStage$RDY_done_flushing,
       fetchStage$RDY_iMemIfc_cRqStuck_get,
       fetchStage$RDY_iMemIfc_pRqStuck_get,
       fetchStage$RDY_iMemIfc_to_parent_fromP_enq,
       fetchStage$RDY_iMemIfc_to_parent_rqToP_deq,
       fetchStage$RDY_iMemIfc_to_parent_rqToP_first,
       fetchStage$RDY_iMemIfc_to_parent_rsToP_deq,
       fetchStage$RDY_iMemIfc_to_parent_rsToP_first,
       fetchStage$RDY_iTlbIfc_flush,
       fetchStage$RDY_iTlbIfc_toParent_flush_request_get,
       fetchStage$RDY_iTlbIfc_toParent_flush_response_put,
       fetchStage$RDY_iTlbIfc_toParent_rqToP_deq,
       fetchStage$RDY_iTlbIfc_toParent_rqToP_first,
       fetchStage$RDY_iTlbIfc_toParent_rsFromP_enq,
       fetchStage$RDY_mmioIfc_instReq_deq,
       fetchStage$RDY_mmioIfc_instReq_first_fst,
       fetchStage$RDY_mmioIfc_instReq_first_snd,
       fetchStage$RDY_mmioIfc_instResp_enq,
       fetchStage$RDY_pipelines_0_deq,
       fetchStage$RDY_pipelines_0_first,
       fetchStage$RDY_pipelines_1_deq,
       fetchStage$RDY_pipelines_1_first,
       fetchStage$emptyForFlush,
       fetchStage$flush_predictors_done,
       fetchStage$iMemIfc_flush_done,
       fetchStage$iMemIfc_perf_setStatus_doStats,
       fetchStage$iMemIfc_to_parent_fromP_notFull,
       fetchStage$iMemIfc_to_parent_rqToP_notEmpty,
       fetchStage$iMemIfc_to_parent_rsToP_notEmpty,
       fetchStage$iTlbIfc_flush_done,
       fetchStage$iTlbIfc_noPendingReq,
       fetchStage$iTlbIfc_perf_setStatus_doStats,
       fetchStage$perf_setStatus_doStats,
       fetchStage$pipelines_0_canDeq,
       fetchStage$pipelines_1_canDeq,
       fetchStage$train_predictors_isCompressed,
       fetchStage$train_predictors_mispred,
       fetchStage$train_predictors_taken;

  // ports of submodule l2Tlb
  wire [83 : 0] l2Tlb$toChildren_rsToC_first;
  wire [64 : 0] l2Tlb$toMem_memReq_first, l2Tlb$toMem_respLd_enq_x;
  wire [48 : 0] l2Tlb$updateVMInfo_vmD, l2Tlb$updateVMInfo_vmI;
  wire [29 : 0] l2Tlb$toChildren_rqFromC_put;
  wire [3 : 0] l2Tlb$perf_req_r;
  wire l2Tlb$EN_perf_req,
       l2Tlb$EN_perf_resp,
       l2Tlb$EN_perf_setStatus,
       l2Tlb$EN_toChildren_dTlbReqFlush_put,
       l2Tlb$EN_toChildren_flushDone_get,
       l2Tlb$EN_toChildren_iTlbReqFlush_put,
       l2Tlb$EN_toChildren_rqFromC_put,
       l2Tlb$EN_toChildren_rsToC_deq,
       l2Tlb$EN_toMem_memReq_deq,
       l2Tlb$EN_toMem_respLd_enq,
       l2Tlb$EN_updateVMInfo,
       l2Tlb$RDY_toChildren_dTlbReqFlush_put,
       l2Tlb$RDY_toChildren_flushDone_get,
       l2Tlb$RDY_toChildren_iTlbReqFlush_put,
       l2Tlb$RDY_toChildren_rqFromC_put,
       l2Tlb$RDY_toChildren_rsToC_deq,
       l2Tlb$RDY_toChildren_rsToC_first,
       l2Tlb$RDY_toMem_memReq_deq,
       l2Tlb$RDY_toMem_memReq_first,
       l2Tlb$RDY_toMem_respLd_enq,
       l2Tlb$perf_setStatus_doStats,
       l2Tlb$toMem_memReq_notEmpty,
       l2Tlb$toMem_respLd_notFull;

  // ports of submodule mmio_cRqQ_clearReq_dummy2_0
  wire mmio_cRqQ_clearReq_dummy2_0$D_IN, mmio_cRqQ_clearReq_dummy2_0$EN;

  // ports of submodule mmio_cRqQ_clearReq_dummy2_1
  wire mmio_cRqQ_clearReq_dummy2_1$D_IN,
       mmio_cRqQ_clearReq_dummy2_1$EN,
       mmio_cRqQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule mmio_cRqQ_deqReq_dummy2_0
  wire mmio_cRqQ_deqReq_dummy2_0$D_IN, mmio_cRqQ_deqReq_dummy2_0$EN;

  // ports of submodule mmio_cRqQ_deqReq_dummy2_1
  wire mmio_cRqQ_deqReq_dummy2_1$D_IN, mmio_cRqQ_deqReq_dummy2_1$EN;

  // ports of submodule mmio_cRqQ_deqReq_dummy2_2
  wire mmio_cRqQ_deqReq_dummy2_2$D_IN,
       mmio_cRqQ_deqReq_dummy2_2$EN,
       mmio_cRqQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule mmio_cRqQ_enqReq_dummy2_0
  wire mmio_cRqQ_enqReq_dummy2_0$D_IN, mmio_cRqQ_enqReq_dummy2_0$EN;

  // ports of submodule mmio_cRqQ_enqReq_dummy2_1
  wire mmio_cRqQ_enqReq_dummy2_1$D_IN, mmio_cRqQ_enqReq_dummy2_1$EN;

  // ports of submodule mmio_cRqQ_enqReq_dummy2_2
  wire mmio_cRqQ_enqReq_dummy2_2$D_IN,
       mmio_cRqQ_enqReq_dummy2_2$EN,
       mmio_cRqQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule mmio_cRsQ_clearReq_dummy2_0
  wire mmio_cRsQ_clearReq_dummy2_0$D_IN, mmio_cRsQ_clearReq_dummy2_0$EN;

  // ports of submodule mmio_cRsQ_clearReq_dummy2_1
  wire mmio_cRsQ_clearReq_dummy2_1$D_IN,
       mmio_cRsQ_clearReq_dummy2_1$EN,
       mmio_cRsQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule mmio_cRsQ_deqReq_dummy2_0
  wire mmio_cRsQ_deqReq_dummy2_0$D_IN, mmio_cRsQ_deqReq_dummy2_0$EN;

  // ports of submodule mmio_cRsQ_deqReq_dummy2_1
  wire mmio_cRsQ_deqReq_dummy2_1$D_IN, mmio_cRsQ_deqReq_dummy2_1$EN;

  // ports of submodule mmio_cRsQ_deqReq_dummy2_2
  wire mmio_cRsQ_deqReq_dummy2_2$D_IN,
       mmio_cRsQ_deqReq_dummy2_2$EN,
       mmio_cRsQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule mmio_cRsQ_enqReq_dummy2_0
  wire mmio_cRsQ_enqReq_dummy2_0$D_IN, mmio_cRsQ_enqReq_dummy2_0$EN;

  // ports of submodule mmio_cRsQ_enqReq_dummy2_1
  wire mmio_cRsQ_enqReq_dummy2_1$D_IN, mmio_cRsQ_enqReq_dummy2_1$EN;

  // ports of submodule mmio_cRsQ_enqReq_dummy2_2
  wire mmio_cRsQ_enqReq_dummy2_2$D_IN,
       mmio_cRsQ_enqReq_dummy2_2$EN,
       mmio_cRsQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule mmio_dataPendQ_clearReq_dummy2_0
  wire mmio_dataPendQ_clearReq_dummy2_0$D_IN,
       mmio_dataPendQ_clearReq_dummy2_0$EN;

  // ports of submodule mmio_dataPendQ_clearReq_dummy2_1
  wire mmio_dataPendQ_clearReq_dummy2_1$D_IN,
       mmio_dataPendQ_clearReq_dummy2_1$EN,
       mmio_dataPendQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule mmio_dataPendQ_deqReq_dummy2_0
  wire mmio_dataPendQ_deqReq_dummy2_0$D_IN, mmio_dataPendQ_deqReq_dummy2_0$EN;

  // ports of submodule mmio_dataPendQ_deqReq_dummy2_1
  wire mmio_dataPendQ_deqReq_dummy2_1$D_IN, mmio_dataPendQ_deqReq_dummy2_1$EN;

  // ports of submodule mmio_dataPendQ_deqReq_dummy2_2
  wire mmio_dataPendQ_deqReq_dummy2_2$D_IN,
       mmio_dataPendQ_deqReq_dummy2_2$EN,
       mmio_dataPendQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule mmio_dataPendQ_enqReq_dummy2_0
  wire mmio_dataPendQ_enqReq_dummy2_0$D_IN, mmio_dataPendQ_enqReq_dummy2_0$EN;

  // ports of submodule mmio_dataPendQ_enqReq_dummy2_1
  wire mmio_dataPendQ_enqReq_dummy2_1$D_IN, mmio_dataPendQ_enqReq_dummy2_1$EN;

  // ports of submodule mmio_dataPendQ_enqReq_dummy2_2
  wire mmio_dataPendQ_enqReq_dummy2_2$D_IN,
       mmio_dataPendQ_enqReq_dummy2_2$EN,
       mmio_dataPendQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule mmio_dataReqQ_clearReq_dummy2_0
  wire mmio_dataReqQ_clearReq_dummy2_0$D_IN,
       mmio_dataReqQ_clearReq_dummy2_0$EN;

  // ports of submodule mmio_dataReqQ_clearReq_dummy2_1
  wire mmio_dataReqQ_clearReq_dummy2_1$D_IN,
       mmio_dataReqQ_clearReq_dummy2_1$EN,
       mmio_dataReqQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule mmio_dataReqQ_deqReq_dummy2_0
  wire mmio_dataReqQ_deqReq_dummy2_0$D_IN, mmio_dataReqQ_deqReq_dummy2_0$EN;

  // ports of submodule mmio_dataReqQ_deqReq_dummy2_1
  wire mmio_dataReqQ_deqReq_dummy2_1$D_IN, mmio_dataReqQ_deqReq_dummy2_1$EN;

  // ports of submodule mmio_dataReqQ_deqReq_dummy2_2
  wire mmio_dataReqQ_deqReq_dummy2_2$D_IN,
       mmio_dataReqQ_deqReq_dummy2_2$EN,
       mmio_dataReqQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule mmio_dataReqQ_enqReq_dummy2_0
  wire mmio_dataReqQ_enqReq_dummy2_0$D_IN, mmio_dataReqQ_enqReq_dummy2_0$EN;

  // ports of submodule mmio_dataReqQ_enqReq_dummy2_1
  wire mmio_dataReqQ_enqReq_dummy2_1$D_IN, mmio_dataReqQ_enqReq_dummy2_1$EN;

  // ports of submodule mmio_dataReqQ_enqReq_dummy2_2
  wire mmio_dataReqQ_enqReq_dummy2_2$D_IN,
       mmio_dataReqQ_enqReq_dummy2_2$EN,
       mmio_dataReqQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule mmio_dataRespQ_clearReq_dummy2_0
  wire mmio_dataRespQ_clearReq_dummy2_0$D_IN,
       mmio_dataRespQ_clearReq_dummy2_0$EN;

  // ports of submodule mmio_dataRespQ_clearReq_dummy2_1
  wire mmio_dataRespQ_clearReq_dummy2_1$D_IN,
       mmio_dataRespQ_clearReq_dummy2_1$EN,
       mmio_dataRespQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule mmio_dataRespQ_deqReq_dummy2_0
  wire mmio_dataRespQ_deqReq_dummy2_0$D_IN, mmio_dataRespQ_deqReq_dummy2_0$EN;

  // ports of submodule mmio_dataRespQ_deqReq_dummy2_1
  wire mmio_dataRespQ_deqReq_dummy2_1$D_IN, mmio_dataRespQ_deqReq_dummy2_1$EN;

  // ports of submodule mmio_dataRespQ_deqReq_dummy2_2
  wire mmio_dataRespQ_deqReq_dummy2_2$D_IN,
       mmio_dataRespQ_deqReq_dummy2_2$EN,
       mmio_dataRespQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule mmio_dataRespQ_enqReq_dummy2_0
  wire mmio_dataRespQ_enqReq_dummy2_0$D_IN, mmio_dataRespQ_enqReq_dummy2_0$EN;

  // ports of submodule mmio_dataRespQ_enqReq_dummy2_1
  wire mmio_dataRespQ_enqReq_dummy2_1$D_IN, mmio_dataRespQ_enqReq_dummy2_1$EN;

  // ports of submodule mmio_dataRespQ_enqReq_dummy2_2
  wire mmio_dataRespQ_enqReq_dummy2_2$D_IN,
       mmio_dataRespQ_enqReq_dummy2_2$EN,
       mmio_dataRespQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule mmio_pRqQ_clearReq_dummy2_0
  wire mmio_pRqQ_clearReq_dummy2_0$D_IN, mmio_pRqQ_clearReq_dummy2_0$EN;

  // ports of submodule mmio_pRqQ_clearReq_dummy2_1
  wire mmio_pRqQ_clearReq_dummy2_1$D_IN,
       mmio_pRqQ_clearReq_dummy2_1$EN,
       mmio_pRqQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule mmio_pRqQ_deqReq_dummy2_0
  wire mmio_pRqQ_deqReq_dummy2_0$D_IN, mmio_pRqQ_deqReq_dummy2_0$EN;

  // ports of submodule mmio_pRqQ_deqReq_dummy2_1
  wire mmio_pRqQ_deqReq_dummy2_1$D_IN, mmio_pRqQ_deqReq_dummy2_1$EN;

  // ports of submodule mmio_pRqQ_deqReq_dummy2_2
  wire mmio_pRqQ_deqReq_dummy2_2$D_IN,
       mmio_pRqQ_deqReq_dummy2_2$EN,
       mmio_pRqQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule mmio_pRqQ_enqReq_dummy2_0
  wire mmio_pRqQ_enqReq_dummy2_0$D_IN, mmio_pRqQ_enqReq_dummy2_0$EN;

  // ports of submodule mmio_pRqQ_enqReq_dummy2_1
  wire mmio_pRqQ_enqReq_dummy2_1$D_IN, mmio_pRqQ_enqReq_dummy2_1$EN;

  // ports of submodule mmio_pRqQ_enqReq_dummy2_2
  wire mmio_pRqQ_enqReq_dummy2_2$D_IN,
       mmio_pRqQ_enqReq_dummy2_2$EN,
       mmio_pRqQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule mmio_pRsQ_clearReq_dummy2_0
  wire mmio_pRsQ_clearReq_dummy2_0$D_IN, mmio_pRsQ_clearReq_dummy2_0$EN;

  // ports of submodule mmio_pRsQ_clearReq_dummy2_1
  wire mmio_pRsQ_clearReq_dummy2_1$D_IN,
       mmio_pRsQ_clearReq_dummy2_1$EN,
       mmio_pRsQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule mmio_pRsQ_deqReq_dummy2_0
  wire mmio_pRsQ_deqReq_dummy2_0$D_IN, mmio_pRsQ_deqReq_dummy2_0$EN;

  // ports of submodule mmio_pRsQ_deqReq_dummy2_1
  wire mmio_pRsQ_deqReq_dummy2_1$D_IN, mmio_pRsQ_deqReq_dummy2_1$EN;

  // ports of submodule mmio_pRsQ_deqReq_dummy2_2
  wire mmio_pRsQ_deqReq_dummy2_2$D_IN,
       mmio_pRsQ_deqReq_dummy2_2$EN,
       mmio_pRsQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule mmio_pRsQ_enqReq_dummy2_0
  wire mmio_pRsQ_enqReq_dummy2_0$D_IN, mmio_pRsQ_enqReq_dummy2_0$EN;

  // ports of submodule mmio_pRsQ_enqReq_dummy2_1
  wire mmio_pRsQ_enqReq_dummy2_1$D_IN, mmio_pRsQ_enqReq_dummy2_1$EN;

  // ports of submodule mmio_pRsQ_enqReq_dummy2_2
  wire mmio_pRsQ_enqReq_dummy2_2$D_IN,
       mmio_pRsQ_enqReq_dummy2_2$EN,
       mmio_pRsQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule perfReqQ
  wire [8 : 0] perfReqQ$D_IN, perfReqQ$D_OUT;
  wire perfReqQ$CLR,
       perfReqQ$DEQ,
       perfReqQ$EMPTY_N,
       perfReqQ$ENQ,
       perfReqQ$FULL_N;

  // ports of submodule regRenamingTable
  reg [26 : 0] regRenamingTable$rename_0_getRename_r;
  reg [1 : 0] regRenamingTable$specUpdate_incorrectSpeculation_kill_tag;
  wire [32 : 0] regRenamingTable$rename_0_getRename,
		regRenamingTable$rename_1_getRename;
  wire [26 : 0] regRenamingTable$rename_0_claimRename_r,
		regRenamingTable$rename_1_claimRename_r,
		regRenamingTable$rename_1_getRename_r;
  wire [3 : 0] regRenamingTable$rename_0_claimRename_sb,
	       regRenamingTable$rename_1_claimRename_sb,
	       regRenamingTable$specUpdate_correctSpeculation_mask;
  wire regRenamingTable$EN_commit_0_commit,
       regRenamingTable$EN_commit_1_commit,
       regRenamingTable$EN_rename_0_claimRename,
       regRenamingTable$EN_rename_1_claimRename,
       regRenamingTable$EN_specUpdate_correctSpeculation,
       regRenamingTable$EN_specUpdate_incorrectSpeculation,
       regRenamingTable$RDY_commit_0_commit,
       regRenamingTable$RDY_commit_1_commit,
       regRenamingTable$RDY_rename_0_claimRename,
       regRenamingTable$RDY_rename_0_getRename,
       regRenamingTable$RDY_rename_1_claimRename,
       regRenamingTable$RDY_rename_1_getRename,
       regRenamingTable$rename_0_canRename,
       regRenamingTable$rename_1_canRename,
       regRenamingTable$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule rf
  reg [63 : 0] rf$write_2_wr_data, rf$write_3_wr_data;
  reg [6 : 0] rf$write_2_wr_rindx, rf$write_3_wr_rindx;
  wire [63 : 0] rf$read_0_rd1,
		rf$read_0_rd2,
		rf$read_1_rd1,
		rf$read_1_rd2,
		rf$read_2_rd1,
		rf$read_2_rd2,
		rf$read_2_rd3,
		rf$read_3_rd1,
		rf$read_3_rd2,
		rf$read_4_rd1,
		rf$write_0_wr_data,
		rf$write_1_wr_data,
		rf$write_4_wr_data;
  wire [6 : 0] rf$read_0_rd1_rindx,
	       rf$read_0_rd2_rindx,
	       rf$read_0_rd3_rindx,
	       rf$read_1_rd1_rindx,
	       rf$read_1_rd2_rindx,
	       rf$read_1_rd3_rindx,
	       rf$read_2_rd1_rindx,
	       rf$read_2_rd2_rindx,
	       rf$read_2_rd3_rindx,
	       rf$read_3_rd1_rindx,
	       rf$read_3_rd2_rindx,
	       rf$read_3_rd3_rindx,
	       rf$read_4_rd1_rindx,
	       rf$read_4_rd2_rindx,
	       rf$read_4_rd3_rindx,
	       rf$write_0_wr_rindx,
	       rf$write_1_wr_rindx,
	       rf$write_4_wr_rindx;
  wire rf$EN_write_0_wr,
       rf$EN_write_1_wr,
       rf$EN_write_2_wr,
       rf$EN_write_3_wr,
       rf$EN_write_4_wr;

  // ports of submodule rob
  reg [343 : 0] rob$enqPort_0_enq_x;
  reg [63 : 0] rob$setExecuted_doFinishFpuMulDiv_0_set_dst_data;
  reg [9 : 0] rob$setExecuted_doFinishFpuMulDiv_0_set_x,
	      rob$specUpdate_incorrectSpeculation_inst_tag;
  reg [4 : 0] rob$setExecuted_deqLSQ_cause,
	      rob$setExecuted_doFinishFpuMulDiv_0_set_fflags;
  reg [1 : 0] rob$specUpdate_incorrectSpeculation_spec_tag;
  wire [343 : 0] rob$deqPort_0_deq_data,
		 rob$deqPort_1_deq_data,
		 rob$enqPort_1_enq_x;
  wire [129 : 0] rob$setExecuted_doFinishAlu_0_set_cf,
		 rob$setExecuted_doFinishAlu_1_set_cf;
  wire [64 : 0] rob$setExecuted_doFinishAlu_0_set_csrData,
		rob$setExecuted_doFinishAlu_1_set_csrData;
  wire [63 : 0] rob$getOrigPC_0_get,
		rob$getOrigPC_1_get,
		rob$getOrigPredPC_0_get,
		rob$getOrigPredPC_1_get,
		rob$setExecuted_doFinishAlu_0_set_dst_data,
		rob$setExecuted_doFinishAlu_1_set_dst_data,
		rob$setExecuted_doFinishMem_store_data,
		rob$setExecuted_doFinishMem_vaddr;
  wire [31 : 0] rob$getOrig_Inst_0_get, rob$getOrig_Inst_1_get;
  wire [9 : 0] rob$deqPort_0_getDeqInstTag,
	       rob$enqPort_0_getEnqInstTag,
	       rob$enqPort_1_getEnqInstTag,
	       rob$getOrigPC_0_get_x,
	       rob$getOrigPC_1_get_x,
	       rob$getOrigPC_2_get_x,
	       rob$getOrigPredPC_0_get_x,
	       rob$getOrigPredPC_1_get_x,
	       rob$getOrig_Inst_0_get_x,
	       rob$getOrig_Inst_1_get_x,
	       rob$setExecuted_deqLSQ_x,
	       rob$setExecuted_doFinishAlu_0_set_x,
	       rob$setExecuted_doFinishAlu_1_set_x,
	       rob$setExecuted_doFinishMem_x,
	       rob$setLSQAtCommitNotified_x;
  wire [7 : 0] rob$setExecuted_doFinishMem_store_data_BE;
  wire [4 : 0] rob$getEnqTime;
  wire [3 : 0] rob$specUpdate_correctSpeculation_mask;
  wire [2 : 0] rob$setExecuted_deqLSQ_ld_killed;
  wire rob$EN_deqPort_0_deq,
       rob$EN_deqPort_1_deq,
       rob$EN_enqPort_0_enq,
       rob$EN_enqPort_1_enq,
       rob$EN_setExecuted_deqLSQ,
       rob$EN_setExecuted_doFinishAlu_0_set,
       rob$EN_setExecuted_doFinishAlu_1_set,
       rob$EN_setExecuted_doFinishFpuMulDiv_0_set,
       rob$EN_setExecuted_doFinishMem,
       rob$EN_setLSQAtCommitNotified,
       rob$EN_specUpdate_correctSpeculation,
       rob$EN_specUpdate_incorrectSpeculation,
       rob$RDY_deqPort_0_deq,
       rob$RDY_deqPort_0_deq_data,
       rob$RDY_deqPort_1_deq,
       rob$RDY_deqPort_1_deq_data,
       rob$RDY_enqPort_0_enq,
       rob$RDY_enqPort_1_enq,
       rob$RDY_setExecuted_deqLSQ,
       rob$RDY_setExecuted_doFinishAlu_0_set,
       rob$RDY_setExecuted_doFinishAlu_1_set,
       rob$RDY_setExecuted_doFinishFpuMulDiv_0_set,
       rob$RDY_setExecuted_doFinishMem,
       rob$RDY_setLSQAtCommitNotified,
       rob$deqPort_0_canDeq,
       rob$deqPort_1_canDeq,
       rob$enqPort_0_canEnq,
       rob$enqPort_1_canEnq,
       rob$isEmpty,
       rob$setExecuted_doFinishMem_access_at_commit,
       rob$setExecuted_doFinishMem_non_mmio_st_done,
       rob$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule sbAggr
  reg [6 : 0] sbAggr$setReady_2_put, sbAggr$setReady_4_put;
  wire [32 : 0] sbAggr$eagerLookup_0_get_r, sbAggr$eagerLookup_1_get_r;
  wire [8 : 0] sbAggr$setBusy_0_set_dst, sbAggr$setBusy_1_set_dst;
  wire [6 : 0] sbAggr$setReady_0_put,
	       sbAggr$setReady_1_put,
	       sbAggr$setReady_3_put;
  wire [3 : 0] sbAggr$eagerLookup_0_get, sbAggr$eagerLookup_1_get;
  wire sbAggr$EN_setBusy_0_set,
       sbAggr$EN_setBusy_1_set,
       sbAggr$EN_setReady_0_put,
       sbAggr$EN_setReady_1_put,
       sbAggr$EN_setReady_2_put,
       sbAggr$EN_setReady_3_put,
       sbAggr$EN_setReady_4_put;

  // ports of submodule sbCons
  reg [6 : 0] sbCons$setReady_2_put, sbCons$setReady_3_put;
  wire [32 : 0] sbCons$eagerLookup_0_get_r,
		sbCons$eagerLookup_1_get_r,
		sbCons$lazyLookup_0_get_r,
		sbCons$lazyLookup_1_get_r,
		sbCons$lazyLookup_2_get_r,
		sbCons$lazyLookup_3_get_r,
		sbCons$lazyLookup_4_get_r;
  wire [8 : 0] sbCons$setBusy_0_set_dst, sbCons$setBusy_1_set_dst;
  wire [6 : 0] sbCons$setReady_0_put,
	       sbCons$setReady_1_put,
	       sbCons$setReady_4_put;
  wire [3 : 0] sbCons$lazyLookup_0_get,
	       sbCons$lazyLookup_1_get,
	       sbCons$lazyLookup_2_get,
	       sbCons$lazyLookup_3_get;
  wire sbCons$EN_setBusy_0_set,
       sbCons$EN_setBusy_1_set,
       sbCons$EN_setReady_0_put,
       sbCons$EN_setReady_1_put,
       sbCons$EN_setReady_2_put,
       sbCons$EN_setReady_3_put,
       sbCons$EN_setReady_4_put;

  // ports of submodule specTagManager
  reg [1 : 0] specTagManager$specUpdate_incorrectSpeculation_kill_tag;
  wire [3 : 0] specTagManager$currentSpecBits,
	       specTagManager$specUpdate_correctSpeculation_mask;
  wire [1 : 0] specTagManager$nextSpecTag;
  wire specTagManager$EN_claimSpecTag,
       specTagManager$EN_specUpdate_correctSpeculation,
       specTagManager$EN_specUpdate_incorrectSpeculation,
       specTagManager$RDY_claimSpecTag,
       specTagManager$RDY_nextSpecTag,
       specTagManager$canClaim,
       specTagManager$specUpdate_incorrectSpeculation_kill_all;

  // rule scheduling signals
  wire CAN_FIRE_RL_commitStage_doCommitKilledLd,
       CAN_FIRE_RL_commitStage_doCommitNormalInst,
       CAN_FIRE_RL_commitStage_doCommitSystemInst,
       CAN_FIRE_RL_commitStage_doCommitTrap_flush,
       CAN_FIRE_RL_commitStage_doCommitTrap_handle,
       CAN_FIRE_RL_commitStage_doSetLSQAtCommit,
       CAN_FIRE_RL_commitStage_doSetLSQAtCommit_1,
       CAN_FIRE_RL_commitStage_notifyLSQCommit,
       CAN_FIRE_RL_coreFix_aluExe_0_doDispatchAlu,
       CAN_FIRE_RL_coreFix_aluExe_0_doExeAlu,
       CAN_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F,
       CAN_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T,
       CAN_FIRE_RL_coreFix_aluExe_0_doRegReadAlu,
       CAN_FIRE_RL_coreFix_aluExe_1_doDispatchAlu,
       CAN_FIRE_RL_coreFix_aluExe_1_doExeAlu,
       CAN_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F,
       CAN_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T,
       CAN_FIRE_RL_coreFix_aluExe_1_doRegReadAlu,
       CAN_FIRE_RL_coreFix_doFetchTrainBP,
       CAN_FIRE_RL_coreFix_doFetchTrainBP_1,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqDivPoisoned,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqFmaPoisoned,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqSqrtPoisoned,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqDivPoisoned,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqMulPoisoned,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_doInit,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_canon,
       CAN_FIRE_RL_coreFix_globalSpecUpdate_canon_correct_spec,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_canonicalize,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_canonicalize,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromSendRsToP,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_canonicalize,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_canonicalize,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq,
       CAN_FIRE_RL_coreFix_memExe_dMem_perfReqQ_canonicalize,
       CAN_FIRE_RL_coreFix_memExe_dMem_perfReqQ_clearReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_perfReqQ_deqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_perfReqQ_enqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem,
       CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq,
       CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue,
       CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq,
       CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault,
       CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue,
       CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_fault,
       CAN_FIRE_RL_coreFix_memExe_doDeqStQ_Fence,
       CAN_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq,
       CAN_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault,
       CAN_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue,
       CAN_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq,
       CAN_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue,
       CAN_FIRE_RL_coreFix_memExe_doDeqStQ_St_Mem,
       CAN_FIRE_RL_coreFix_memExe_doDeqStQ_fault,
       CAN_FIRE_RL_coreFix_memExe_doDispatchMem,
       CAN_FIRE_RL_coreFix_memExe_doExeMem,
       CAN_FIRE_RL_coreFix_memExe_doFinishMem,
       CAN_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ,
       CAN_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate,
       CAN_FIRE_RL_coreFix_memExe_doIssueSB,
       CAN_FIRE_RL_coreFix_memExe_doRegReadMem,
       CAN_FIRE_RL_coreFix_memExe_doRespLdForward,
       CAN_FIRE_RL_coreFix_memExe_doRespLdMem,
       CAN_FIRE_RL_coreFix_memExe_forwardQ_canonicalize,
       CAN_FIRE_RL_coreFix_memExe_forwardQ_clearReq_canon,
       CAN_FIRE_RL_coreFix_memExe_forwardQ_deqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_forwardQ_enqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_memRespLdQ_canonicalize,
       CAN_FIRE_RL_coreFix_memExe_memRespLdQ_clearReq_canon,
       CAN_FIRE_RL_coreFix_memExe_memRespLdQ_deqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_memRespLdQ_enqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_reqLdQ_data_0_canon,
       CAN_FIRE_RL_coreFix_memExe_reqLdQ_empty_canon,
       CAN_FIRE_RL_coreFix_memExe_reqLdQ_full_canon,
       CAN_FIRE_RL_coreFix_memExe_reqLrScAmoQ_data_0_canon,
       CAN_FIRE_RL_coreFix_memExe_reqLrScAmoQ_empty_canon,
       CAN_FIRE_RL_coreFix_memExe_reqLrScAmoQ_full_canon,
       CAN_FIRE_RL_coreFix_memExe_reqStQ_data_0_canon,
       CAN_FIRE_RL_coreFix_memExe_reqStQ_empty_canon,
       CAN_FIRE_RL_coreFix_memExe_reqStQ_full_canon,
       CAN_FIRE_RL_coreFix_memExe_respLrScAmoQ_canonicalize,
       CAN_FIRE_RL_coreFix_memExe_respLrScAmoQ_clearReq_canon,
       CAN_FIRE_RL_coreFix_memExe_respLrScAmoQ_deqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_respLrScAmoQ_enqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_sendLdToMem,
       CAN_FIRE_RL_coreFix_memExe_sendLrScAmoToMem,
       CAN_FIRE_RL_coreFix_memExe_sendStToMem,
       CAN_FIRE_RL_csrInstOrInterruptInflight_canon,
       CAN_FIRE_RL_csrf_incCycle,
       CAN_FIRE_RL_csrf_mcycle_ehr_data_canon,
       CAN_FIRE_RL_csrf_mcycle_ehr_setRead,
       CAN_FIRE_RL_csrf_minstret_ehr_data_canon,
       CAN_FIRE_RL_csrf_minstret_ehr_setRead,
       CAN_FIRE_RL_flushBrPred,
       CAN_FIRE_RL_flushCaches,
       CAN_FIRE_RL_mkConnectionGetPut,
       CAN_FIRE_RL_mkConnectionGetPut_1,
       CAN_FIRE_RL_mmio_cRqQ_canonicalize,
       CAN_FIRE_RL_mmio_cRqQ_clearReq_canon,
       CAN_FIRE_RL_mmio_cRqQ_deqReq_canon,
       CAN_FIRE_RL_mmio_cRqQ_enqReq_canon,
       CAN_FIRE_RL_mmio_cRsQ_canonicalize,
       CAN_FIRE_RL_mmio_cRsQ_clearReq_canon,
       CAN_FIRE_RL_mmio_cRsQ_deqReq_canon,
       CAN_FIRE_RL_mmio_cRsQ_enqReq_canon,
       CAN_FIRE_RL_mmio_dataPendQ_canonicalize,
       CAN_FIRE_RL_mmio_dataPendQ_clearReq_canon,
       CAN_FIRE_RL_mmio_dataPendQ_deqReq_canon,
       CAN_FIRE_RL_mmio_dataPendQ_enqReq_canon,
       CAN_FIRE_RL_mmio_dataReqQ_canonicalize,
       CAN_FIRE_RL_mmio_dataReqQ_clearReq_canon,
       CAN_FIRE_RL_mmio_dataReqQ_deqReq_canon,
       CAN_FIRE_RL_mmio_dataReqQ_enqReq_canon,
       CAN_FIRE_RL_mmio_dataRespQ_canonicalize,
       CAN_FIRE_RL_mmio_dataRespQ_clearReq_canon,
       CAN_FIRE_RL_mmio_dataRespQ_deqReq_canon,
       CAN_FIRE_RL_mmio_dataRespQ_enqReq_canon,
       CAN_FIRE_RL_mmio_handlePRq,
       CAN_FIRE_RL_mmio_pRqQ_canonicalize,
       CAN_FIRE_RL_mmio_pRqQ_clearReq_canon,
       CAN_FIRE_RL_mmio_pRqQ_deqReq_canon,
       CAN_FIRE_RL_mmio_pRqQ_enqReq_canon,
       CAN_FIRE_RL_mmio_pRsQ_canonicalize,
       CAN_FIRE_RL_mmio_pRsQ_clearReq_canon,
       CAN_FIRE_RL_mmio_pRsQ_deqReq_canon,
       CAN_FIRE_RL_mmio_pRsQ_enqReq_canon,
       CAN_FIRE_RL_mmio_sendDataReq,
       CAN_FIRE_RL_mmio_sendDataResp,
       CAN_FIRE_RL_mmio_sendInstReq,
       CAN_FIRE_RL_mmio_sendInstResp,
       CAN_FIRE_RL_prepareCachesAndTlbs,
       CAN_FIRE_RL_readyToFetch,
       CAN_FIRE_RL_renameStage_doRenaming,
       CAN_FIRE_RL_renameStage_doRenaming_SystemInst,
       CAN_FIRE_RL_renameStage_doRenaming_Trap,
       CAN_FIRE_RL_renameStage_doRenaming_wrongPath,
       CAN_FIRE_RL_rl_debug_csr_access_busy,
       CAN_FIRE_RL_rl_debug_csr_read,
       CAN_FIRE_RL_rl_debug_csr_write,
       CAN_FIRE_RL_rl_debug_fpr_access_busy,
       CAN_FIRE_RL_rl_debug_fpr_read,
       CAN_FIRE_RL_rl_debug_fpr_write,
       CAN_FIRE_RL_rl_debug_gpr_access_busy,
       CAN_FIRE_RL_rl_debug_gpr_read,
       CAN_FIRE_RL_rl_debug_gpr_write,
       CAN_FIRE_RL_rl_debug_halt_req,
       CAN_FIRE_RL_rl_debug_halt_req_already_halted,
       CAN_FIRE_RL_rl_debug_halted,
       CAN_FIRE_RL_rl_debug_resume,
       CAN_FIRE_RL_rl_debug_run_redundant,
       CAN_FIRE_RL_rl_outOfReset,
       CAN_FIRE_RL_sendDTlbReq,
       CAN_FIRE_RL_sendFlushDone,
       CAN_FIRE_RL_sendITlbReq,
       CAN_FIRE_RL_sendRobEnqTime,
       CAN_FIRE_RL_sendRsToDTlb,
       CAN_FIRE_RL_sendRsToITlb,
       CAN_FIRE_RL_setDoFlushBrPred,
       CAN_FIRE_RL_setDoFlushCaches,
       CAN_FIRE_coreIndInv_perfResp,
       CAN_FIRE_coreIndInv_terminate,
       CAN_FIRE_coreReq_perfReq,
       CAN_FIRE_coreReq_start,
       CAN_FIRE_dCacheToParent_fromP_enq,
       CAN_FIRE_dCacheToParent_rqToP_deq,
       CAN_FIRE_dCacheToParent_rsToP_deq,
       CAN_FIRE_deadlock_checkStarted_get,
       CAN_FIRE_deadlock_commitInstStuck_get,
       CAN_FIRE_deadlock_commitUserInstStuck_get,
       CAN_FIRE_deadlock_dCacheCRqStuck_get,
       CAN_FIRE_deadlock_dCachePRqStuck_get,
       CAN_FIRE_deadlock_iCacheCRqStuck_get,
       CAN_FIRE_deadlock_iCachePRqStuck_get,
       CAN_FIRE_deadlock_renameCorrectPathStuck_get,
       CAN_FIRE_deadlock_renameInstStuck_get,
       CAN_FIRE_hart0_csr_mem_server_request_put,
       CAN_FIRE_hart0_csr_mem_server_response_get,
       CAN_FIRE_hart0_fpr_mem_server_request_put,
       CAN_FIRE_hart0_fpr_mem_server_response_get,
       CAN_FIRE_hart0_gpr_mem_server_request_put,
       CAN_FIRE_hart0_gpr_mem_server_response_get,
       CAN_FIRE_hart0_run_halt_server_request_put,
       CAN_FIRE_hart0_run_halt_server_response_get,
       CAN_FIRE_iCacheToParent_fromP_enq,
       CAN_FIRE_iCacheToParent_rqToP_deq,
       CAN_FIRE_iCacheToParent_rsToP_deq,
       CAN_FIRE_mmioToPlatform_cRq_deq,
       CAN_FIRE_mmioToPlatform_cRs_deq,
       CAN_FIRE_mmioToPlatform_pRq_enq,
       CAN_FIRE_mmioToPlatform_pRs_enq,
       CAN_FIRE_mmioToPlatform_setTime,
       CAN_FIRE_recvDoStats,
       CAN_FIRE_renameDebug_renameErr_get,
       CAN_FIRE_sendDoStats,
       CAN_FIRE_setMEIP,
       CAN_FIRE_setSEIP,
       CAN_FIRE_tlbToMem_memReq_deq,
       CAN_FIRE_tlbToMem_respLd_enq,
       WILL_FIRE_RL_commitStage_doCommitKilledLd,
       WILL_FIRE_RL_commitStage_doCommitNormalInst,
       WILL_FIRE_RL_commitStage_doCommitSystemInst,
       WILL_FIRE_RL_commitStage_doCommitTrap_flush,
       WILL_FIRE_RL_commitStage_doCommitTrap_handle,
       WILL_FIRE_RL_commitStage_doSetLSQAtCommit,
       WILL_FIRE_RL_commitStage_doSetLSQAtCommit_1,
       WILL_FIRE_RL_commitStage_notifyLSQCommit,
       WILL_FIRE_RL_coreFix_aluExe_0_doDispatchAlu,
       WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu,
       WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F,
       WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T,
       WILL_FIRE_RL_coreFix_aluExe_0_doRegReadAlu,
       WILL_FIRE_RL_coreFix_aluExe_1_doDispatchAlu,
       WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu,
       WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F,
       WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T,
       WILL_FIRE_RL_coreFix_aluExe_1_doRegReadAlu,
       WILL_FIRE_RL_coreFix_doFetchTrainBP,
       WILL_FIRE_RL_coreFix_doFetchTrainBP_1,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqDivPoisoned,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqFmaPoisoned,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqSqrtPoisoned,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqDivPoisoned,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqMulPoisoned,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_doInit,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_canon,
       WILL_FIRE_RL_coreFix_globalSpecUpdate_canon_correct_spec,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_canonicalize,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_canonicalize,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromSendRsToP,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_canonicalize,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_canonicalize,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq,
       WILL_FIRE_RL_coreFix_memExe_dMem_perfReqQ_canonicalize,
       WILL_FIRE_RL_coreFix_memExe_dMem_perfReqQ_clearReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_perfReqQ_deqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_perfReqQ_enqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem,
       WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq,
       WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue,
       WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq,
       WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault,
       WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue,
       WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault,
       WILL_FIRE_RL_coreFix_memExe_doDeqStQ_Fence,
       WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq,
       WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault,
       WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue,
       WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq,
       WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue,
       WILL_FIRE_RL_coreFix_memExe_doDeqStQ_St_Mem,
       WILL_FIRE_RL_coreFix_memExe_doDeqStQ_fault,
       WILL_FIRE_RL_coreFix_memExe_doDispatchMem,
       WILL_FIRE_RL_coreFix_memExe_doExeMem,
       WILL_FIRE_RL_coreFix_memExe_doFinishMem,
       WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ,
       WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate,
       WILL_FIRE_RL_coreFix_memExe_doIssueSB,
       WILL_FIRE_RL_coreFix_memExe_doRegReadMem,
       WILL_FIRE_RL_coreFix_memExe_doRespLdForward,
       WILL_FIRE_RL_coreFix_memExe_doRespLdMem,
       WILL_FIRE_RL_coreFix_memExe_forwardQ_canonicalize,
       WILL_FIRE_RL_coreFix_memExe_forwardQ_clearReq_canon,
       WILL_FIRE_RL_coreFix_memExe_forwardQ_deqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_forwardQ_enqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_memRespLdQ_canonicalize,
       WILL_FIRE_RL_coreFix_memExe_memRespLdQ_clearReq_canon,
       WILL_FIRE_RL_coreFix_memExe_memRespLdQ_deqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_memRespLdQ_enqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_reqLdQ_data_0_canon,
       WILL_FIRE_RL_coreFix_memExe_reqLdQ_empty_canon,
       WILL_FIRE_RL_coreFix_memExe_reqLdQ_full_canon,
       WILL_FIRE_RL_coreFix_memExe_reqLrScAmoQ_data_0_canon,
       WILL_FIRE_RL_coreFix_memExe_reqLrScAmoQ_empty_canon,
       WILL_FIRE_RL_coreFix_memExe_reqLrScAmoQ_full_canon,
       WILL_FIRE_RL_coreFix_memExe_reqStQ_data_0_canon,
       WILL_FIRE_RL_coreFix_memExe_reqStQ_empty_canon,
       WILL_FIRE_RL_coreFix_memExe_reqStQ_full_canon,
       WILL_FIRE_RL_coreFix_memExe_respLrScAmoQ_canonicalize,
       WILL_FIRE_RL_coreFix_memExe_respLrScAmoQ_clearReq_canon,
       WILL_FIRE_RL_coreFix_memExe_respLrScAmoQ_deqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_respLrScAmoQ_enqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_sendLdToMem,
       WILL_FIRE_RL_coreFix_memExe_sendLrScAmoToMem,
       WILL_FIRE_RL_coreFix_memExe_sendStToMem,
       WILL_FIRE_RL_csrInstOrInterruptInflight_canon,
       WILL_FIRE_RL_csrf_incCycle,
       WILL_FIRE_RL_csrf_mcycle_ehr_data_canon,
       WILL_FIRE_RL_csrf_mcycle_ehr_setRead,
       WILL_FIRE_RL_csrf_minstret_ehr_data_canon,
       WILL_FIRE_RL_csrf_minstret_ehr_setRead,
       WILL_FIRE_RL_flushBrPred,
       WILL_FIRE_RL_flushCaches,
       WILL_FIRE_RL_mkConnectionGetPut,
       WILL_FIRE_RL_mkConnectionGetPut_1,
       WILL_FIRE_RL_mmio_cRqQ_canonicalize,
       WILL_FIRE_RL_mmio_cRqQ_clearReq_canon,
       WILL_FIRE_RL_mmio_cRqQ_deqReq_canon,
       WILL_FIRE_RL_mmio_cRqQ_enqReq_canon,
       WILL_FIRE_RL_mmio_cRsQ_canonicalize,
       WILL_FIRE_RL_mmio_cRsQ_clearReq_canon,
       WILL_FIRE_RL_mmio_cRsQ_deqReq_canon,
       WILL_FIRE_RL_mmio_cRsQ_enqReq_canon,
       WILL_FIRE_RL_mmio_dataPendQ_canonicalize,
       WILL_FIRE_RL_mmio_dataPendQ_clearReq_canon,
       WILL_FIRE_RL_mmio_dataPendQ_deqReq_canon,
       WILL_FIRE_RL_mmio_dataPendQ_enqReq_canon,
       WILL_FIRE_RL_mmio_dataReqQ_canonicalize,
       WILL_FIRE_RL_mmio_dataReqQ_clearReq_canon,
       WILL_FIRE_RL_mmio_dataReqQ_deqReq_canon,
       WILL_FIRE_RL_mmio_dataReqQ_enqReq_canon,
       WILL_FIRE_RL_mmio_dataRespQ_canonicalize,
       WILL_FIRE_RL_mmio_dataRespQ_clearReq_canon,
       WILL_FIRE_RL_mmio_dataRespQ_deqReq_canon,
       WILL_FIRE_RL_mmio_dataRespQ_enqReq_canon,
       WILL_FIRE_RL_mmio_handlePRq,
       WILL_FIRE_RL_mmio_pRqQ_canonicalize,
       WILL_FIRE_RL_mmio_pRqQ_clearReq_canon,
       WILL_FIRE_RL_mmio_pRqQ_deqReq_canon,
       WILL_FIRE_RL_mmio_pRqQ_enqReq_canon,
       WILL_FIRE_RL_mmio_pRsQ_canonicalize,
       WILL_FIRE_RL_mmio_pRsQ_clearReq_canon,
       WILL_FIRE_RL_mmio_pRsQ_deqReq_canon,
       WILL_FIRE_RL_mmio_pRsQ_enqReq_canon,
       WILL_FIRE_RL_mmio_sendDataReq,
       WILL_FIRE_RL_mmio_sendDataResp,
       WILL_FIRE_RL_mmio_sendInstReq,
       WILL_FIRE_RL_mmio_sendInstResp,
       WILL_FIRE_RL_prepareCachesAndTlbs,
       WILL_FIRE_RL_readyToFetch,
       WILL_FIRE_RL_renameStage_doRenaming,
       WILL_FIRE_RL_renameStage_doRenaming_SystemInst,
       WILL_FIRE_RL_renameStage_doRenaming_Trap,
       WILL_FIRE_RL_renameStage_doRenaming_wrongPath,
       WILL_FIRE_RL_rl_debug_csr_access_busy,
       WILL_FIRE_RL_rl_debug_csr_read,
       WILL_FIRE_RL_rl_debug_csr_write,
       WILL_FIRE_RL_rl_debug_fpr_access_busy,
       WILL_FIRE_RL_rl_debug_fpr_read,
       WILL_FIRE_RL_rl_debug_fpr_write,
       WILL_FIRE_RL_rl_debug_gpr_access_busy,
       WILL_FIRE_RL_rl_debug_gpr_read,
       WILL_FIRE_RL_rl_debug_gpr_write,
       WILL_FIRE_RL_rl_debug_halt_req,
       WILL_FIRE_RL_rl_debug_halt_req_already_halted,
       WILL_FIRE_RL_rl_debug_halted,
       WILL_FIRE_RL_rl_debug_resume,
       WILL_FIRE_RL_rl_debug_run_redundant,
       WILL_FIRE_RL_rl_outOfReset,
       WILL_FIRE_RL_sendDTlbReq,
       WILL_FIRE_RL_sendFlushDone,
       WILL_FIRE_RL_sendITlbReq,
       WILL_FIRE_RL_sendRobEnqTime,
       WILL_FIRE_RL_sendRsToDTlb,
       WILL_FIRE_RL_sendRsToITlb,
       WILL_FIRE_RL_setDoFlushBrPred,
       WILL_FIRE_RL_setDoFlushCaches,
       WILL_FIRE_coreIndInv_perfResp,
       WILL_FIRE_coreIndInv_terminate,
       WILL_FIRE_coreReq_perfReq,
       WILL_FIRE_coreReq_start,
       WILL_FIRE_dCacheToParent_fromP_enq,
       WILL_FIRE_dCacheToParent_rqToP_deq,
       WILL_FIRE_dCacheToParent_rsToP_deq,
       WILL_FIRE_deadlock_checkStarted_get,
       WILL_FIRE_deadlock_commitInstStuck_get,
       WILL_FIRE_deadlock_commitUserInstStuck_get,
       WILL_FIRE_deadlock_dCacheCRqStuck_get,
       WILL_FIRE_deadlock_dCachePRqStuck_get,
       WILL_FIRE_deadlock_iCacheCRqStuck_get,
       WILL_FIRE_deadlock_iCachePRqStuck_get,
       WILL_FIRE_deadlock_renameCorrectPathStuck_get,
       WILL_FIRE_deadlock_renameInstStuck_get,
       WILL_FIRE_hart0_csr_mem_server_request_put,
       WILL_FIRE_hart0_csr_mem_server_response_get,
       WILL_FIRE_hart0_fpr_mem_server_request_put,
       WILL_FIRE_hart0_fpr_mem_server_response_get,
       WILL_FIRE_hart0_gpr_mem_server_request_put,
       WILL_FIRE_hart0_gpr_mem_server_response_get,
       WILL_FIRE_hart0_run_halt_server_request_put,
       WILL_FIRE_hart0_run_halt_server_response_get,
       WILL_FIRE_iCacheToParent_fromP_enq,
       WILL_FIRE_iCacheToParent_rqToP_deq,
       WILL_FIRE_iCacheToParent_rsToP_deq,
       WILL_FIRE_mmioToPlatform_cRq_deq,
       WILL_FIRE_mmioToPlatform_cRs_deq,
       WILL_FIRE_mmioToPlatform_pRq_enq,
       WILL_FIRE_mmioToPlatform_pRs_enq,
       WILL_FIRE_mmioToPlatform_setTime,
       WILL_FIRE_recvDoStats,
       WILL_FIRE_renameDebug_renameErr_get,
       WILL_FIRE_sendDoStats,
       WILL_FIRE_setMEIP,
       WILL_FIRE_setSEIP,
       WILL_FIRE_tlbToMem_memReq_deq,
       WILL_FIRE_tlbToMem_respLd_enq;

  // inputs to muxes for submodule ports
  reg [63 : 0] MUX_coreFix_memExe_lsq$respLd_2__VAL_1,
	       MUX_coreFix_memExe_lsq$respLd_2__VAL_2,
	       MUX_fetchStage$redirect_1__VAL_6;
  reg [2 : 0] MUX_coreFix_memExe_lsq$respLd_1__VAL_1,
	      MUX_coreFix_memExe_lsq$respLd_1__VAL_2;
  reg [1 : 0] MUX_csrf_fs_reg$write_1__VAL_2, MUX_csrf_fs_reg$write_1__VAL_3;
  wire [583 : 0] MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_1,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_2,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_3,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_4;
  wire [579 : 0] MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wset_1__VAL_1,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wset_1__VAL_2;
  wire [569 : 0] MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_1,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_2,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_3,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_4;
  wire [343 : 0] MUX_rob$enqPort_0_enq_1__VAL_1,
		 MUX_rob$enqPort_0_enq_1__VAL_2,
		 MUX_rob$enqPort_0_enq_1__VAL_3;
  wire [165 : 0] MUX_commitStage_commitTrap$write_1__VAL_2;
  wire [159 : 0] MUX_coreFix_trainBPQ_0$enq_1__VAL_1,
		 MUX_coreFix_trainBPQ_0$enq_1__VAL_2,
		 MUX_coreFix_trainBPQ_1$enq_1__VAL_1,
		 MUX_coreFix_trainBPQ_1$enq_1__VAL_2;
  wire [158 : 0] MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__VAL_1,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__VAL_2;
  wire [150 : 0] MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_1,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_2,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_3,
		 MUX_coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wset_1__VAL_1,
		 MUX_coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wset_1__VAL_2;
  wire [149 : 0] MUX_coreFix_aluExe_0_rsAlu$enq_1__VAL_1,
		 MUX_coreFix_aluExe_0_rsAlu$enq_1__VAL_2;
  wire [142 : 0] MUX_mmio_cRqQ_enqReq_lat_0$wset_1__VAL_1,
		 MUX_mmio_cRqQ_enqReq_lat_0$wset_1__VAL_2,
		 MUX_mmio_dataReqQ_enqReq_lat_0$wset_1__VAL_1,
		 MUX_mmio_dataReqQ_enqReq_lat_0$wset_1__VAL_2;
  wire [67 : 0] MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__VAL_1,
		MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__VAL_2,
		MUX_coreFix_memExe_memRespLdQ_enqReq_lat_0$wset_1__VAL_1;
  wire [66 : 0] MUX_coreFix_memExe_lsq$issueLd_4__VAL_1;
  wire [64 : 0] MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_1,
		MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_2,
		MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_3,
		MUX_f_csr_rsps$enq_1__VAL_3,
		MUX_f_fpr_rsps$enq_1__VAL_3;
  wire [63 : 0] MUX_commitStage_rg_serial_num$write_1__VAL_1,
		MUX_commitStage_rg_serial_num$write_1__VAL_3,
		MUX_csrf_minstret_ehr_data_lat_0$wset_1__VAL_2,
		MUX_csrf_minstret_ehr_data_lat_1$wset_1__VAL_1,
		MUX_csrf_minstret_ehr_data_lat_1$wset_1__VAL_2,
		MUX_csrf_mtval_csr$write_1__VAL_1,
		MUX_csrf_mtval_csr$write_1__VAL_2,
		MUX_csrf_rg_dcsr$write_1__VAL_2,
		MUX_csrf_sepc_csr$write_1__VAL_1,
		MUX_csrf_stval_csr$write_1__VAL_1,
		MUX_fetchStage$redirect_1__VAL_1,
		MUX_rf$write_2_wr_2__VAL_2,
		MUX_rf$write_2_wr_2__VAL_3,
		MUX_rf$write_2_wr_2__VAL_4,
		MUX_rf$write_2_wr_2__VAL_5,
		MUX_rf$write_2_wr_2__VAL_6,
		MUX_rf$write_3_wr_2__VAL_3,
		MUX_rf$write_3_wr_2__VAL_4;
  wire [58 : 0] MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__VAL_1,
		MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__VAL_2;
  wire [57 : 0] MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_3__VAL_1,
		MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_3__VAL_2;
  wire [48 : 0] MUX_coreFix_memExe_dTlb$updateVMInfo_1__VAL_1,
		MUX_fetchStage$iTlbIfc_updateVMInfo_1__VAL_1;
  wire [29 : 0] MUX_l2Tlb$toChildren_rqFromC_put_1__VAL_1,
		MUX_l2Tlb$toChildren_rqFromC_put_1__VAL_2;
  wire [26 : 0] MUX_regRenamingTable$rename_0_getRename_1__VAL_2,
		MUX_regRenamingTable$rename_0_getRename_1__VAL_3;
  wire [7 : 0] MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1,
	       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2,
	       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3,
	       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4,
	       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5,
	       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6,
	       MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1,
	       MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2,
	       MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_4;
  wire [4 : 0] MUX_csrf_fflags_reg$write_1__VAL_1,
	       MUX_rob$setExecuted_deqLSQ_2__VAL_3,
	       MUX_rob$setExecuted_deqLSQ_2__VAL_6,
	       MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_2,
	       MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_3,
	       MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_4;
  wire [3 : 0] MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__VAL_1,
	       MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__VAL_1,
	       MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__VAL_2,
	       MUX_coreFix_memExe_lsq$getHit_1__VAL_1;
  wire [2 : 0] MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_2__VAL_1,
	       MUX_csrf_frm_reg$write_1__VAL_1,
	       MUX_csrf_frm_reg$write_1__VAL_2;
  wire [1 : 0] MUX_csrf_mpp_reg$write_1__VAL_1,
	       MUX_csrf_prv_reg$write_1__VAL_1,
	       MUX_csrf_prv_reg$write_1__VAL_2;
  wire MUX_commitStage_rg_run_state$write_1__SEL_1,
       MUX_commitStage_rg_serial_num$write_1__SEL_1,
       MUX_commitStage_setLSQAtCommit_0$wset_1__SEL_1,
       MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3,
       MUX_coreFix_aluExe_0_rsAlu$enq_1__SEL_1,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_1,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_1,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_2,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4,
       MUX_coreFix_aluExe_1_rsAlu$setRegReady_4_put_1__SEL_1,
       MUX_coreFix_aluExe_1_rsAlu$setRegReady_4_put_1__SEL_2,
       MUX_coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put_1__SEL_1,
       MUX_coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put_1__SEL_2,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_1,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_1__SEL_1,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_1,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_2,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_3,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__SEL_1,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_3__VAL_1,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__SEL_1,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__SEL_2,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__SEL_1,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__SEL_2,
       MUX_coreFix_memExe_dTlb$updateVMInfo_1__SEL_1,
       MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__SEL_1,
       MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__SEL_2,
       MUX_coreFix_memExe_lsq$getHit_1__SEL_1,
       MUX_coreFix_memExe_lsq$getHit_1__SEL_2,
       MUX_coreFix_memExe_lsq$wakeupLdStalledBySB_1__SEL_1,
       MUX_coreFix_memExe_reqLdQ_data_0_lat_0$wset_1__SEL_1,
       MUX_coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0$write_1__SEL_1,
       MUX_coreFix_memExe_rsMem$setRegReady_4_put_1__SEL_1,
       MUX_coreFix_memExe_rsMem$setRegReady_4_put_1__SEL_2,
       MUX_coreFix_memExe_waitLrScAmoMMIOResp$write_1__SEL_1,
       MUX_coreFix_trainBPQ_0$enq_1__SEL_1,
       MUX_coreFix_trainBPQ_1$enq_1__SEL_1,
       MUX_csrInstOrInterruptInflight_dummy2_0$write_1__SEL_1,
       MUX_csrInstOrInterruptInflight_dummy2_0$write_1__SEL_2,
       MUX_csrInstOrInterruptInflight_dummy_1_0$wset_1__VAL_1,
       MUX_csrf_external_int_en_vec_1$write_1__SEL_1,
       MUX_csrf_external_int_en_vec_3$write_1__SEL_1,
       MUX_csrf_external_int_pend_vec_1$write_1__SEL_1,
       MUX_csrf_external_int_pend_vec_1$write_1__SEL_2,
       MUX_csrf_fflags_reg$write_1__SEL_1,
       MUX_csrf_fflags_reg$write_1__SEL_2,
       MUX_csrf_fflags_reg$write_1__SEL_3,
       MUX_csrf_frm_reg$write_1__SEL_1,
       MUX_csrf_fs_reg$write_1__SEL_2,
       MUX_csrf_fs_reg$write_1__SEL_3,
       MUX_csrf_ie_vec_0$write_1__SEL_1,
       MUX_csrf_ie_vec_0$write_1__SEL_2,
       MUX_csrf_ie_vec_1$write_1__SEL_1,
       MUX_csrf_ie_vec_1$write_1__SEL_2,
       MUX_csrf_ie_vec_1$write_1__VAL_1,
       MUX_csrf_ie_vec_3$write_1__SEL_1,
       MUX_csrf_ie_vec_3$write_1__SEL_2,
       MUX_csrf_ie_vec_3$write_1__SEL_3,
       MUX_csrf_ie_vec_3$write_1__VAL_1,
       MUX_csrf_mcause_code_reg$write_1__SEL_1,
       MUX_csrf_mcause_code_reg$write_1__SEL_3,
       MUX_csrf_mcounteren_cy_reg$write_1__SEL_1,
       MUX_csrf_mcycle_ehr_data_dummy2_0$write_1__SEL_1,
       MUX_csrf_mcycle_ehr_data_dummy2_0$write_1__SEL_2,
       MUX_csrf_medeleg_13_11_reg$write_1__SEL_1,
       MUX_csrf_mepc_csr$write_1__SEL_1,
       MUX_csrf_mepc_csr$write_1__SEL_3,
       MUX_csrf_mideleg_11_reg$write_1__SEL_1,
       MUX_csrf_minstret_ehr_data_dummy2_0$write_1__SEL_1,
       MUX_csrf_minstret_ehr_data_dummy2_0$write_1__SEL_2,
       MUX_csrf_mpp_reg$write_1__SEL_1,
       MUX_csrf_mscratch_csr$write_1__SEL_1,
       MUX_csrf_mtval_csr$write_1__SEL_1,
       MUX_csrf_mtval_csr$write_1__SEL_3,
       MUX_csrf_mtvec_base_hi_reg$write_1__SEL_1,
       MUX_csrf_ppn_reg$write_1__SEL_1,
       MUX_csrf_prev_ie_vec_1$write_1__SEL_1,
       MUX_csrf_prev_ie_vec_1$write_1__VAL_1,
       MUX_csrf_prev_ie_vec_3$write_1__SEL_1,
       MUX_csrf_prev_ie_vec_3$write_1__VAL_1,
       MUX_csrf_prv_reg$write_1__SEL_1,
       MUX_csrf_prv_reg$write_1__SEL_3,
       MUX_csrf_rg_dcsr$write_1__SEL_1,
       MUX_csrf_rg_dpc$write_1__SEL_1,
       MUX_csrf_rg_dpc$write_1__SEL_3,
       MUX_csrf_rg_dscratch0$write_1__SEL_1,
       MUX_csrf_rg_dscratch1$write_1__SEL_1,
       MUX_csrf_rg_tdata1_data$write_1__SEL_1,
       MUX_csrf_rg_tdata2$write_1__SEL_1,
       MUX_csrf_rg_tdata3$write_1__SEL_1,
       MUX_csrf_rg_tselect$write_1__SEL_1,
       MUX_csrf_scause_code_reg$write_1__SEL_1,
       MUX_csrf_scause_code_reg$write_1__SEL_3,
       MUX_csrf_scounteren_cy_reg$write_1__SEL_1,
       MUX_csrf_sepc_csr$write_1__SEL_1,
       MUX_csrf_sepc_csr$write_1__SEL_3,
       MUX_csrf_spp_reg$write_1__SEL_1,
       MUX_csrf_spp_reg$write_1__VAL_1,
       MUX_csrf_sscratch_csr$write_1__SEL_1,
       MUX_csrf_stats_module_writeQ$enq_1__SEL_1,
       MUX_csrf_stval_csr$write_1__SEL_1,
       MUX_csrf_stval_csr$write_1__SEL_3,
       MUX_csrf_stvec_base_hi_reg$write_1__SEL_1,
       MUX_epochManager$updatePrevEpoch_0_update_1__SEL_2,
       MUX_epochManager$updatePrevEpoch_1_update_1__SEL_2,
       MUX_f_run_halt_rsps$enq_1__SEL_1,
       MUX_flush_reservation$write_1__SEL_2,
       MUX_flush_tlbs$write_1__SEL_1,
       MUX_regRenamingTable$rename_0_getRename_1__SEL_1,
       MUX_regRenamingTable$rename_0_getRename_1__SEL_2,
       MUX_regRenamingTable$rename_0_getRename_1__SEL_3,
       MUX_renameStage_rg_m_halt_req$write_1__SEL_1,
       MUX_renameStage_rg_m_halt_req$write_1__SEL_2,
       MUX_renameStage_rg_m_halt_req$write_1__SEL_3,
       MUX_renameStage_rg_m_halt_req$write_1__SEL_6,
       MUX_rf$write_3_wr_1__PSEL_5,
       MUX_rf$write_3_wr_1__SEL_1,
       MUX_rf$write_3_wr_1__SEL_2,
       MUX_rf$write_3_wr_1__SEL_3,
       MUX_rf$write_3_wr_1__SEL_4,
       MUX_rf$write_3_wr_1__SEL_5,
       MUX_rf$write_3_wr_2__SEL_5,
       MUX_rg_core_run_state$write_1__SEL_4,
       MUX_rob$setExecuted_deqLSQ_1__SEL_5,
       MUX_sbAggr$setReady_4_put_1__SEL_1,
       MUX_sbAggr$setReady_4_put_1__SEL_2,
       MUX_sbCons$setReady_3_put_1__SEL_1,
       MUX_sbCons$setReady_3_put_1__SEL_2,
       MUX_sbCons$setReady_3_put_1__SEL_3,
       MUX_started$write_1__SEL_1;

  // remaining internal signals
  reg [511 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2558;
  reg [63 : 0] CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q281,
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q282,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q14,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q15,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q16,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q17,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q18,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q19,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q244,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q245,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q256,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q237,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q238,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q239,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q240,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q241,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q242,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q246,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q247,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q248,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10002,
	       SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2933,
	       addr__h290726,
	       curData__h193579,
	       data_out__h720863,
	       rVal1__h609706,
	       rVal1__h634440,
	       trap_val__h704156,
	       x__h197788;
  reg [51 : 0] CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q11,
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q7,
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q9,
	       CASE_guard03536_0b0_sfdin11756_BITS_56_TO_5_0b_ETC__q209,
	       CASE_guard03536_0b0_sfdin11756_BITS_56_TO_5_0b_ETC__q210,
	       CASE_guard12605_0b0_theResult___snd20541_BITS__ETC__q211,
	       CASE_guard12605_0b0_theResult___snd20541_BITS__ETC__q212,
	       CASE_guard33077_0b0_theResult___snd40989_BITS__ETC__q197,
	       CASE_guard33077_0b0_theResult___snd40989_BITS__ETC__q198,
	       CASE_guard42389_0b0_sfdin50609_BITS_56_TO_5_0b_ETC__q199,
	       CASE_guard42389_0b0_sfdin50609_BITS_56_TO_5_0b_ETC__q200,
	       CASE_guard51458_0b0_theResult___snd59394_BITS__ETC__q201,
	       CASE_guard51458_0b0_theResult___snd59394_BITS__ETC__q202,
	       CASE_guard72381_0b0_theResult___snd80293_BITS__ETC__q213,
	       CASE_guard72381_0b0_theResult___snd80293_BITS__ETC__q214,
	       CASE_guard81693_0b0_sfdin89913_BITS_56_TO_5_0b_ETC__q215,
	       CASE_guard81693_0b0_sfdin89913_BITS_56_TO_5_0b_ETC__q216,
	       CASE_guard90762_0b0_theResult___snd98698_BITS__ETC__q217,
	       CASE_guard90762_0b0_theResult___snd98698_BITS__ETC__q218,
	       CASE_guard94224_0b0_theResult___snd02136_BITS__ETC__q207,
	       CASE_guard94224_0b0_theResult___snd02136_BITS__ETC__q208,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10657,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10683,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10702,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9177,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9204,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9223,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9887,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9913,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9932;
  reg [31 : 0] SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_133_ETC___d1410,
	       SEL_ARR_mmio_dataRespQ_data_0_163_BITS_31_TO_0_ETC___d1460;
  reg [22 : 0] CASE_guard01158_0b0_theResult___snd09157_BITS__ETC__q74,
	       CASE_guard01158_0b0_theResult___snd09157_BITS__ETC__q75,
	       CASE_guard10088_0b0_sfdin18310_BITS_56_TO_34_0_ETC__q78,
	       CASE_guard10088_0b0_sfdin18310_BITS_56_TO_34_0_ETC__q79,
	       CASE_guard18924_0b0_theResult___snd26947_BITS__ETC__q80,
	       CASE_guard18924_0b0_theResult___snd26947_BITS__ETC__q81,
	       CASE_guard38146_0b0_sfdin46239_BITS_56_TO_34_0_ETC__q111,
	       CASE_guard38146_0b0_sfdin46239_BITS_56_TO_34_0_ETC__q112,
	       CASE_guard46752_0b0_sfdin54847_BITS_56_TO_34_0_ETC__q41,
	       CASE_guard46752_0b0_sfdin54847_BITS_56_TO_34_0_ETC__q42,
	       CASE_guard46853_0b0_theResult___snd54852_BITS__ETC__q109,
	       CASE_guard46853_0b0_theResult___snd54852_BITS__ETC__q110,
	       CASE_guard55461_0b0_theResult___snd63460_BITS__ETC__q39,
	       CASE_guard55461_0b0_theResult___snd63460_BITS__ETC__q40,
	       CASE_guard55783_0b0_sfdin64005_BITS_56_TO_34_0_ETC__q113,
	       CASE_guard55783_0b0_sfdin64005_BITS_56_TO_34_0_ETC__q114,
	       CASE_guard64391_0b0_sfdin72613_BITS_56_TO_34_0_ETC__q43,
	       CASE_guard64391_0b0_sfdin72613_BITS_56_TO_34_0_ETC__q44,
	       CASE_guard64619_0b0_theResult___snd72642_BITS__ETC__q116,
	       CASE_guard64619_0b0_theResult___snd72642_BITS__ETC__q117,
	       CASE_guard73227_0b0_theResult___snd81250_BITS__ETC__q45,
	       CASE_guard73227_0b0_theResult___snd81250_BITS__ETC__q46,
	       CASE_guard92451_0b0_sfdin00544_BITS_56_TO_34_0_ETC__q76,
	       CASE_guard92451_0b0_sfdin00544_BITS_56_TO_34_0_ETC__q77,
	       _theResult___fst_sfd__h346725,
	       _theResult___fst_sfd__h355448,
	       _theResult___fst_sfd__h364030,
	       _theResult___fst_sfd__h373214,
	       _theResult___fst_sfd__h381850,
	       _theResult___fst_sfd__h392424,
	       _theResult___fst_sfd__h401145,
	       _theResult___fst_sfd__h409727,
	       _theResult___fst_sfd__h418911,
	       _theResult___fst_sfd__h427547,
	       _theResult___fst_sfd__h438119,
	       _theResult___fst_sfd__h446840,
	       _theResult___fst_sfd__h455422,
	       _theResult___fst_sfd__h464606,
	       _theResult___fst_sfd__h473242;
  reg [20 : 0] CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_14_ETC__q271,
	       CASE_coreFix_aluExe_0_regToExeQfirst_BITS_404_ETC__q223,
	       CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q268,
	       CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_14_ETC__q277,
	       CASE_coreFix_aluExe_1_regToExeQfirst_BITS_404_ETC__q220,
	       CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q274,
	       CASE_coreFix_fpuMulDivExe_0_dispToRegQfirst_B_ETC__q284,
	       CASE_coreFix_fpuMulDivExe_0_rsFpuMulDivdispat_ETC__q280,
	       IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d12942,
	       IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d13658;
  reg [15 : 0] SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_133_ETC___d1421,
	       SEL_ARR_mmio_dataRespQ_data_0_163_BITS_15_TO_0_ETC___d1469;
  reg [11 : 0] CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_11_ETC__q272,
	       CASE_coreFix_aluExe_0_regToExeQfirst_BITS_382_ETC__q224,
	       CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q269,
	       CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_11_ETC__q278,
	       CASE_coreFix_aluExe_1_regToExeQfirst_BITS_382_ETC__q221,
	       CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q275,
	       CASE_fetchStagepipelines_1_first_BITS_172_TO__ETC__q227,
	       IF_fetchStage_pipelines_0_first__2816_BITS_172_ETC___d13032;
  reg [10 : 0] CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q10,
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q6,
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q8,
	       CASE_guard03536_0b0_theResult___fst_exp11762_0_ETC__q203,
	       CASE_guard03536_0b0_theResult___fst_exp11762_0_ETC__q204,
	       CASE_guard12605_0b0_theResult___fst_exp20595_0_ETC__q205,
	       CASE_guard12605_0b0_theResult___fst_exp20595_0_ETC__q206,
	       CASE_guard33077_0b0_theResult___fst_exp41038_0_ETC__q175,
	       CASE_guard33077_0b0_theResult___fst_exp41038_0_ETC__q176,
	       CASE_guard42389_0b0_theResult___fst_exp50615_0_ETC__q177,
	       CASE_guard42389_0b0_theResult___fst_exp50615_0_ETC__q178,
	       CASE_guard51458_0b0_theResult___fst_exp59448_0_ETC__q179,
	       CASE_guard51458_0b0_theResult___fst_exp59448_0_ETC__q180,
	       CASE_guard72381_0b0_theResult___fst_exp80342_0_ETC__q152,
	       CASE_guard72381_0b0_theResult___fst_exp80342_0_ETC__q153,
	       CASE_guard81693_0b0_theResult___fst_exp89919_0_ETC__q183,
	       CASE_guard81693_0b0_theResult___fst_exp89919_0_ETC__q184,
	       CASE_guard90762_0b0_theResult___fst_exp98752_0_ETC__q181,
	       CASE_guard90762_0b0_theResult___fst_exp98752_0_ETC__q182,
	       CASE_guard94224_0b0_theResult___fst_exp02185_0_ETC__q135,
	       CASE_guard94224_0b0_theResult___fst_exp02185_0_ETC__q136,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10562,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10600,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10631,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9077,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9120,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9151,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9792,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9830,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9861;
  reg [7 : 0] CASE_guard01158_0b0_theResult___fst_exp09206_0_ETC__q59,
	      CASE_guard01158_0b0_theResult___fst_exp09206_0_ETC__q60,
	      CASE_guard10088_0b0_theResult___fst_exp18316_0_ETC__q67,
	      CASE_guard10088_0b0_theResult___fst_exp18316_0_ETC__q68,
	      CASE_guard18924_0b0_theResult___fst_exp27001_0_ETC__q72,
	      CASE_guard18924_0b0_theResult___fst_exp27001_0_ETC__q73,
	      CASE_guard38146_0b0_theResult___fst_exp46245_0_ETC__q96,
	      CASE_guard38146_0b0_theResult___fst_exp46245_0_ETC__q97,
	      CASE_guard46752_0b0_theResult___fst_exp54853_0_ETC__q26,
	      CASE_guard46752_0b0_theResult___fst_exp54853_0_ETC__q27,
	      CASE_guard46853_0b0_theResult___fst_exp54901_0_ETC__q94,
	      CASE_guard46853_0b0_theResult___fst_exp54901_0_ETC__q95,
	      CASE_guard55461_0b0_theResult___fst_exp63509_0_ETC__q24,
	      CASE_guard55461_0b0_theResult___fst_exp63509_0_ETC__q25,
	      CASE_guard55783_0b0_theResult___fst_exp64011_0_ETC__q102,
	      CASE_guard55783_0b0_theResult___fst_exp64011_0_ETC__q103,
	      CASE_guard64391_0b0_theResult___fst_exp72619_0_ETC__q32,
	      CASE_guard64391_0b0_theResult___fst_exp72619_0_ETC__q33,
	      CASE_guard64619_0b0_theResult___fst_exp72696_0_ETC__q107,
	      CASE_guard64619_0b0_theResult___fst_exp72696_0_ETC__q108,
	      CASE_guard73227_0b0_theResult___fst_exp81304_0_ETC__q37,
	      CASE_guard73227_0b0_theResult___fst_exp81304_0_ETC__q38,
	      CASE_guard92451_0b0_theResult___fst_exp00550_0_ETC__q61,
	      CASE_guard92451_0b0_theResult___fst_exp00550_0_ETC__q62,
	      SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_133_ETC___d1435,
	      SEL_ARR_mmio_dataRespQ_data_0_163_BITS_7_TO_0__ETC___d1482,
	      _theResult___fst_exp__h346724,
	      _theResult___fst_exp__h355447,
	      _theResult___fst_exp__h364029,
	      _theResult___fst_exp__h373213,
	      _theResult___fst_exp__h381849,
	      _theResult___fst_exp__h392423,
	      _theResult___fst_exp__h401144,
	      _theResult___fst_exp__h409726,
	      _theResult___fst_exp__h418910,
	      _theResult___fst_exp__h427546,
	      _theResult___fst_exp__h438118,
	      _theResult___fst_exp__h446839,
	      _theResult___fst_exp__h455421,
	      _theResult___fst_exp__h464605,
	      _theResult___fst_exp__h473241;
  reg [5 : 0] CASE_mmioToPlatform_pRq_enq_x_BITS_37_TO_36_0__ETC__q266,
	      CASE_mmio_cRqQ_data_0_BITS_77_TO_76_0_mmio_cRq_ETC__q1,
	      CASE_mmio_dataReqQ_data_0_BITS_77_TO_76_0_mmio_ETC__q263,
	      IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794;
  reg [3 : 0] CASE_checkForException_3067_BITS_3_TO_0_0_chec_ETC__q226,
	      CASE_coreFix_memExe_dTlbprocResp_BITS_93_TO_9_ETC__q12,
	      CASE_coreFix_memExe_dTlbprocResp_BITS_97_TO_9_ETC__q13,
	      CASE_coreFix_memExe_lsqfirstLd_BITS_6_TO_3_0__ETC__q264,
	      CASE_coreFix_memExe_lsqfirstSt_BITS_3_TO_0_0__ETC__q265,
	      CASE_robdeqPort_0_deq_data_BITS_155_TO_152_0__ETC__q260,
	      CASE_robdeqPort_0_deq_data_BITS_155_TO_152_0__ETC__q261,
	      IF_fetchStage_pipelines_0_first__2816_BIT_68_2_ETC___d13189,
	      i__h703132,
	      i__h703292;
  reg [2 : 0] CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_12_ETC__q270,
	      CASE_coreFix_aluExe_0_regToExeQfirst_BITS_387_ETC__q222,
	      CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q267,
	      CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_12_ETC__q276,
	      CASE_coreFix_aluExe_1_regToExeQfirst_BITS_387_ETC__q219,
	      CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q273,
	      CASE_coreFix_fpuMulDivExe_0_dispToRegQfirst_B_ETC__q283,
	      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q243,
	      CASE_coreFix_fpuMulDivExe_0_rsFpuMulDivdispat_ETC__q279,
	      CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q255,
	      CASE_fetchStagepipelines_0_first_BITS_177_TO__ETC__q225,
	      CASE_fetchStagepipelines_1_first_BITS_177_TO__ETC__q228,
	      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10775,
	      IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d14205,
	      IF_fetchStage_pipelines_1_first__2825_BITS_191_ETC___d14336,
	      x__h286506,
	      x__h292275;
  reg [1 : 0] CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q251,
	      CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q285,
	      CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q253,
	      CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q257,
	      CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q249,
	      IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d14208,
	      IF_fetchStage_pipelines_1_first__2825_BITS_191_ETC___d14337;
  reg CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q138,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q140,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q142,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q155,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q157,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q159,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q161,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q163,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q165,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q186,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q188,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q190,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q192,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q194,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q196,
      CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q252,
      CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q258,
      CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q259,
      CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q254,
      CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q250,
      CASE_csrf_prv_reg_1_NOT_csrf_rg_dcsr_BIT_13_3__ETC__q235,
      CASE_csrf_prv_reg_1_csrf_rg_dcsr_BIT_13_3_csrf_ETC__q236,
      CASE_fetchStage_pipelines_0_canDeq__2814_AND_N_ETC__q233,
      CASE_fetchStagepipelines_0_first_BITS_191_TO__ETC__q232,
      CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q229,
      CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q230,
      CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q234,
      CASE_guard01158_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q85,
      CASE_guard01158_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q84,
      CASE_guard03536_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q139,
      CASE_guard10088_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q87,
      CASE_guard10088_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q86,
      CASE_guard12605_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q141,
      CASE_guard18924_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q89,
      CASE_guard18924_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q88,
      CASE_guard33077_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q195,
      CASE_guard33077_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q185,
      CASE_guard38146_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q118,
      CASE_guard38146_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q115,
      CASE_guard42389_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q191,
      CASE_guard42389_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q187,
      CASE_guard46752_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q48,
      CASE_guard46752_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q47,
      CASE_guard46853_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q120,
      CASE_guard46853_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q119,
      CASE_guard51458_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q193,
      CASE_guard51458_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q189,
      CASE_guard55461_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q50,
      CASE_guard55461_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q49,
      CASE_guard55783_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q122,
      CASE_guard55783_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q121,
      CASE_guard64391_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q52,
      CASE_guard64391_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q51,
      CASE_guard64619_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q124,
      CASE_guard64619_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q123,
      CASE_guard72381_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q164,
      CASE_guard72381_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q156,
      CASE_guard73227_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q54,
      CASE_guard73227_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q53,
      CASE_guard81693_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q160,
      CASE_guard81693_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q154,
      CASE_guard90762_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q162,
      CASE_guard90762_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q158,
      CASE_guard92451_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q83,
      CASE_guard92451_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q82,
      CASE_guard94224_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q137,
      CASE_k69550_0_coreFix_aluExe_0_rsAluRDY_enq_1_ETC__q231,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6504,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6517,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6521,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6534,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6547,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6560,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6567,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6570,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6577,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6584,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5112,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5125,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5129,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5142,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5155,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5168,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5175,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5178,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5185,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5192,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7896,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7909,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7913,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7926,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7939,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7952,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7959,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7962,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7969,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7976,
      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10912,
      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10948,
      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10996,
      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d11038,
      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d11080,
      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d8454,
      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d8467,
      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d8486,
      IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13536,
      IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13593,
      IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d14199,
      IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d14202,
      IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13541,
      IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13548,
      IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13598,
      IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13922,
      IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13944,
      IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13963,
      IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14019,
      IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14021,
      IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14035,
      IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14044,
      IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14119,
      IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14132,
      IF_fetchStage_pipelines_1_first__2825_BITS_191_ETC___d14334,
      IF_fetchStage_pipelines_1_first__2825_BITS_191_ETC___d14335,
      IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d13976,
      IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d14116,
      IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d14145,
      SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__351_ETC___d13521,
      SEL_ARR_NOT_fetchStage_pipelines_0_canDeq__281_ETC___d14077,
      SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3510_co_ETC___d13544,
      SEL_ARR_fetchStage_pipelines_0_canDeq__2814_AN_ETC___d13844;
  wire [581 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3305;
  wire [569 : 0] IF_NOT_coreFix_memExe_dMem_cache_m_banks_0_pip_ETC___d2568,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2579,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2581,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2580;
  wire [517 : 0] SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d3003;
  wire [511 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2266,
		 SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2996,
		 SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d15620;
  wire [447 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_process_ETC___d2066;
  wire [383 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2261,
		 SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2987,
		 SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d15611;
  wire [321 : 0] basicExec___d12002, basicExec___d12676;
  wire [319 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_process_ETC___d2061;
  wire [255 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2256,
		 SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2978,
		 SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d15602;
  wire [191 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_process_ETC___d2056;
  wire [171 : 0] fetchStage_pipelines_0_first__2816_BIT_173_294_ETC___d13469;
  wire [68 : 0] execFpuSimple___d11114;
  wire [67 : 0] IF_IF_mmio_pRsQ_enqReq_lat_1_whas__82_THEN_NOT_ETC___d681;
  wire [64 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2628;
  wire [63 : 0] IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9231,
		IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12507,
		IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12508,
		IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12519,
		IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12520,
		IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11833,
		IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11834,
		IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11845,
		IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11846,
		IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8394,
		IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8395,
		IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8405,
		IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8406,
		IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8416,
		IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8417,
		IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1709,
		IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1710,
		IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1720,
		IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1721,
		IF_coreFix_fpuMulDivExe_0_mulDivExec_mulQ_firs_ETC___d8128,
		IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10712,
		IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9232,
		IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9942,
		IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9998,
		IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2625,
		IF_coreFix_memExe_lsq_firstLd__339_BIT_94_414__ETC___d1439,
		IF_coreFix_memExe_lsq_firstLd__339_BIT_94_414__ETC___d1486,
		IF_coreFix_memExe_lsq_firstLd__339_BIT_96_404__ETC___d1440,
		IF_coreFix_memExe_lsq_firstLd__339_BIT_96_404__ETC___d1487,
		IF_csrf_minstret_ehr_data_lat_0_whas_THEN_csrf_ETC___d8,
		IF_rob_deqPort_0_canDeq__5016_THEN_IF_NOT_rob__ETC___d15124,
		_theResult___fst__h604027,
		_theResult___snd__h604028,
		a___1__h603746,
		a___1__h604032,
		a__h603605,
		amoExec___d934,
		b___1__h603747,
		b___1__h604077,
		b__h603606,
		base__h706074,
		base__h706094,
		data___1__h475665,
		data___1__h476473,
		data__h475939,
		fcsr_csr__read__h610032,
		fflags_csr__read__h610007,
		frm_csr__read__h610018,
		hartid__h1022,
		mcause_csr__read__h611674,
		mcounteren_csr__read__h611419,
		medeleg_csr__read__h611026,
		mideleg_csr__read__h611121,
		mie_csr__read__h611245,
		mip_csr__read__h611907,
		mstatus_csr__read__h610878,
		mtvec_csr__read__h611327,
		n___1__h199191,
		n__h195117,
		n__read__h612011,
		n__read__h612202,
		n__read__h6486,
		n__read__h714440,
		next_pc__h713755,
		q___1__h476538,
		rVal1__h482418,
		rVal2__h482419,
		r___1__h476564,
		res_data__h338526,
		res_data__h338531,
		res_data__h384228,
		res_data__h384233,
		res_data__h429923,
		res_data__h429928,
		resp_addr__h292630,
		rg_tdata1__read__h612862,
		robdeqPort_0_deq_data_BITS_85_TO_22__q262,
		satp_csr__read__h610735,
		scause_csr__read__h610532,
		scounteren_csr__read__h610394,
		shiftData__h183089,
		sie_csr__read__h610298,
		sip_csr__read__h610672,
		sstatus_csr__read__h610228,
		stvec_csr__read__h610341,
		upd__h3719,
		upd__h5036,
		upd__h6600,
		upd__h714551,
		v__h608591,
		v__h633478,
		vaddr__h183084,
		x__h155398,
		x__h158946,
		x__h161760,
		x__h163608,
		x__h18093,
		x__h182998,
		x__h182999,
		x__h20631,
		x__h287950,
		x__h289804,
		x__h46000,
		x__h482327,
		x__h482328,
		x__h482329,
		x__h48536,
		x__h617891,
		x__h617892,
		x__h640402,
		x__h640403,
		x__h698266,
		x_addr__h314731,
		x_quotient__h475853,
		x_reg_ifc__read__h610137,
		x_remainder__h475854,
		y__h716926,
		y_avValue__h182086,
		y_avValue__h182692,
		y_avValue__h479463,
		y_avValue__h480071,
		y_avValue__h480673,
		y_avValue__h609496,
		y_avValue__h615716,
		y_avValue__h634232,
		y_avValue__h638237,
		y_avValue_new_pc__h705853,
		y_avValue_new_pc__h706039,
		y_avValue_snd_snd_snd_snd_snd__h716412,
		y_avValue_snd_snd_snd_snd_snd__h716979,
		y_avValue_snd_snd_snd_snd_snd__h717008;
  wire [62 : 0] IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10710,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9940,
		r1__read__h613705,
		r1__read__h614109,
		r1__read__h614619,
		r1__read__h614624,
		r1__read__h614643,
		r1__read__h614876,
		r1__read__h615042,
		r1__read__h615135,
		r1__read__h615140,
		r1__read__h615159;
  wire [61 : 0] r1__read__h613707,
		r1__read__h614111,
		r1__read__h614626,
		r1__read__h614645,
		r1__read__h614878,
		r1__read__h615018,
		r1__read__h615044,
		r1__read__h615142,
		r1__read__h615161;
  wire [60 : 0] r1__read__h614880,
		r1__read__h615020,
		r1__read__h615046,
		r1__read__h615163;
  wire [59 : 0] r1__read__h613709,
		r1__read__h614113,
		r1__read__h614637,
		r1__read__h614647,
		r1__read__h614882,
		r1__read__h615048,
		r1__read__h615153,
		r1__read__h615165;
  wire [58 : 0] r1__read__h613711,
		r1__read__h614115,
		r1__read__h614649,
		r1__read__h614884,
		r1__read__h615050,
		r1__read__h615167;
  wire [57 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2608,
		IF_coreFix_memExe_dMem_cache_m_banks_0_linkAdd_ETC___d3070,
		IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2771,
		r1__read__h613713,
		r1__read__h614117,
		r1__read__h614651,
		r1__read__h614886,
		r1__read__h615022,
		r1__read__h615052,
		r1__read__h615169,
		y__h255465;
  wire [56 : 0] IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMu_ETC__q20,
		IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMu_ETC__q55,
		IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMu_ETC__q90,
		IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_f_ETC__q130,
		IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_f_ETC__q147,
		IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_f_ETC__q170,
		IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuM_ETC__q100,
		IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuM_ETC__q30,
		IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuM_ETC__q65,
		IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q126,
		IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q133,
		IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q143,
		IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q150,
		IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q166,
		IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q173,
		IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q105,
		IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q22,
		IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q35,
		IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q57,
		IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q70,
		IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q92,
		_0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d10196,
		_0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d8711,
		_0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d9426,
		_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d4616,
		_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d6008,
		_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d7400,
		_theResult____h346742,
		_theResult____h364381,
		_theResult____h392441,
		_theResult____h410078,
		_theResult____h438136,
		_theResult____h455773,
		_theResult____h503526,
		_theResult____h542379,
		_theResult____h581683,
		_theResult___snd__h354864,
		_theResult___snd__h354875,
		_theResult___snd__h354877,
		_theResult___snd__h354887,
		_theResult___snd__h354893,
		_theResult___snd__h354916,
		_theResult___snd__h363460,
		_theResult___snd__h363462,
		_theResult___snd__h363469,
		_theResult___snd__h363475,
		_theResult___snd__h363498,
		_theResult___snd__h372630,
		_theResult___snd__h372641,
		_theResult___snd__h372643,
		_theResult___snd__h372653,
		_theResult___snd__h372659,
		_theResult___snd__h372682,
		_theResult___snd__h381250,
		_theResult___snd__h381264,
		_theResult___snd__h381270,
		_theResult___snd__h381288,
		_theResult___snd__h400561,
		_theResult___snd__h400572,
		_theResult___snd__h400574,
		_theResult___snd__h400584,
		_theResult___snd__h400590,
		_theResult___snd__h400613,
		_theResult___snd__h409157,
		_theResult___snd__h409159,
		_theResult___snd__h409166,
		_theResult___snd__h409172,
		_theResult___snd__h409195,
		_theResult___snd__h418327,
		_theResult___snd__h418338,
		_theResult___snd__h418340,
		_theResult___snd__h418350,
		_theResult___snd__h418356,
		_theResult___snd__h418379,
		_theResult___snd__h426947,
		_theResult___snd__h426961,
		_theResult___snd__h426967,
		_theResult___snd__h426985,
		_theResult___snd__h446256,
		_theResult___snd__h446267,
		_theResult___snd__h446269,
		_theResult___snd__h446279,
		_theResult___snd__h446285,
		_theResult___snd__h446308,
		_theResult___snd__h454852,
		_theResult___snd__h454854,
		_theResult___snd__h454861,
		_theResult___snd__h454867,
		_theResult___snd__h454890,
		_theResult___snd__h464022,
		_theResult___snd__h464033,
		_theResult___snd__h464035,
		_theResult___snd__h464045,
		_theResult___snd__h464051,
		_theResult___snd__h464074,
		_theResult___snd__h472642,
		_theResult___snd__h472656,
		_theResult___snd__h472662,
		_theResult___snd__h472680,
		_theResult___snd__h502136,
		_theResult___snd__h502138,
		_theResult___snd__h502145,
		_theResult___snd__h502151,
		_theResult___snd__h502174,
		_theResult___snd__h511773,
		_theResult___snd__h511784,
		_theResult___snd__h511786,
		_theResult___snd__h511796,
		_theResult___snd__h511802,
		_theResult___snd__h511825,
		_theResult___snd__h520541,
		_theResult___snd__h520555,
		_theResult___snd__h520561,
		_theResult___snd__h520579,
		_theResult___snd__h540989,
		_theResult___snd__h540991,
		_theResult___snd__h540998,
		_theResult___snd__h541004,
		_theResult___snd__h541027,
		_theResult___snd__h550626,
		_theResult___snd__h550637,
		_theResult___snd__h550639,
		_theResult___snd__h550649,
		_theResult___snd__h550655,
		_theResult___snd__h550678,
		_theResult___snd__h559394,
		_theResult___snd__h559408,
		_theResult___snd__h559414,
		_theResult___snd__h559432,
		_theResult___snd__h580293,
		_theResult___snd__h580295,
		_theResult___snd__h580302,
		_theResult___snd__h580308,
		_theResult___snd__h580331,
		_theResult___snd__h589930,
		_theResult___snd__h589941,
		_theResult___snd__h589943,
		_theResult___snd__h589953,
		_theResult___snd__h589959,
		_theResult___snd__h589982,
		_theResult___snd__h598698,
		_theResult___snd__h598712,
		_theResult___snd__h598718,
		_theResult___snd__h598736,
		r1__read__h614888,
		r1__read__h615024,
		r1__read__h615054,
		r1__read__h615171,
		result__h364994,
		result__h410691,
		result__h456386,
		result__h504139,
		result__h542992,
		result__h582296,
		sfd__h339137,
		sfd__h384839,
		sfd__h430534,
		sfd__h483159,
		sfd__h522153,
		sfd__h561457,
		sfdin__h354847,
		sfdin__h372613,
		sfdin__h400544,
		sfdin__h418310,
		sfdin__h446239,
		sfdin__h464005,
		sfdin__h511756,
		sfdin__h550609,
		sfdin__h589913,
		x__h365091,
		x__h410788,
		x__h456483,
		x__h504234,
		x__h543087,
		x__h582391;
  wire [55 : 0] r1__read__h613715,
		r1__read__h614119,
		r1__read__h614653,
		r1__read__h614890,
		r1__read__h615056,
		r1__read__h615173;
  wire [54 : 0] r1__read__h613717,
		r1__read__h614121,
		r1__read__h614655,
		r1__read__h614892,
		r1__read__h615058,
		r1__read__h615175;
  wire [53 : 0] r1__read__h615001,
		r1__read__h615026,
		r1__read__h615060,
		r1__read__h615177,
		sfd__h502203,
		sfd__h511854,
		sfd__h520614,
		sfd__h541056,
		sfd__h550707,
		sfd__h559467,
		sfd__h580360,
		sfd__h590011,
		sfd__h598771,
		value__h347364,
		value__h393061,
		value__h438756;
  wire [52 : 0] r1__read__h614894,
		r1__read__h615003,
		r1__read__h615028,
		r1__read__h615062,
		r1__read__h615179;
  wire [51 : 0] IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10677,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10679,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9198,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9200,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9907,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9909,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10651,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10653,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10696,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10698,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9171,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9173,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9217,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9219,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9881,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9883,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9926,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9928,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10709,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9230,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9939,
		_theResult___fst_sfd__h487113,
		_theResult___fst_sfd__h502941,
		_theResult___fst_sfd__h502944,
		_theResult___fst_sfd__h512592,
		_theResult___fst_sfd__h512595,
		_theResult___fst_sfd__h521376,
		_theResult___fst_sfd__h521379,
		_theResult___fst_sfd__h521388,
		_theResult___fst_sfd__h521394,
		_theResult___fst_sfd__h525966,
		_theResult___fst_sfd__h541794,
		_theResult___fst_sfd__h541797,
		_theResult___fst_sfd__h551445,
		_theResult___fst_sfd__h551448,
		_theResult___fst_sfd__h560229,
		_theResult___fst_sfd__h560232,
		_theResult___fst_sfd__h560241,
		_theResult___fst_sfd__h560247,
		_theResult___fst_sfd__h565270,
		_theResult___fst_sfd__h581098,
		_theResult___fst_sfd__h581101,
		_theResult___fst_sfd__h590749,
		_theResult___fst_sfd__h590752,
		_theResult___fst_sfd__h599533,
		_theResult___fst_sfd__h599536,
		_theResult___fst_sfd__h599545,
		_theResult___fst_sfd__h599551,
		_theResult___sfd__h502841,
		_theResult___sfd__h512492,
		_theResult___sfd__h521276,
		_theResult___sfd__h541694,
		_theResult___sfd__h551345,
		_theResult___sfd__h560129,
		_theResult___sfd__h580998,
		_theResult___sfd__h590649,
		_theResult___sfd__h599433,
		_theResult___snd_fst_sfd__h483113,
		_theResult___snd_fst_sfd__h502947,
		_theResult___snd_fst_sfd__h521382,
		_theResult___snd_fst_sfd__h522107,
		_theResult___snd_fst_sfd__h541800,
		_theResult___snd_fst_sfd__h560235,
		_theResult___snd_fst_sfd__h561411,
		_theResult___snd_fst_sfd__h581104,
		_theResult___snd_fst_sfd__h599539,
		out___1_sfd__h482861,
		out___1_sfd__h521855,
		out___1_sfd__h561159,
		out_sfd__h502844,
		out_sfd__h512495,
		out_sfd__h521279,
		out_sfd__h541697,
		out_sfd__h551348,
		out_sfd__h560132,
		out_sfd__h581001,
		out_sfd__h590652,
		out_sfd__h599436;
  wire [50 : 0] r1__read__h613719, r1__read__h614896;
  wire [49 : 0] r1__read__h615005;
  wire [48 : 0] r1__read__h613721, r1__read__h614898, r1__read__h615007;
  wire [46 : 0] r1__read__h613723, r1__read__h614900;
  wire [45 : 0] r1__read__h613725, r1__read__h614902;
  wire [44 : 0] r1__read__h613727, r1__read__h614904;
  wire [43 : 0] r1__read__h613729, r1__read__h614906;
  wire [42 : 0] r1__read__h614908;
  wire [41 : 0] r1__read__h614910;
  wire [40 : 0] r1__read__h614912;
  wire [35 : 0] IF_fetchStage_pipelines_0_first__2816_BIT_160__ETC___d14211,
		IF_fetchStage_pipelines_1_first__2825_BIT_160__ETC___d14340;
  wire [31 : 0] IF_coreFix_fpuMulDivExe_0_mulDivExec_mulQ_firs_ETC__q125,
		coreFix_fpuMulDivExe_0_regToExeQfirst_BITS_16_ETC__q2,
		coreFix_fpuMulDivExe_0_regToExeQfirst_BITS_99_ETC__q3,
		coreFix_memExe_regToExeQfirst_BITS_177_TO_146__q4,
		data75939_BITS_31_TO_0__q5,
		imm__h655990,
		r1__read__h613731,
		r1__read__h614914,
		x__h194342,
		x__h338541,
		x__h384243,
		x__h429938,
		x__h77611,
		x_data__h67460,
		x_data_imm__h676582,
		x_data_imm__h691797;
  wire [29 : 0] r1__read__h613733, r1__read__h614916;
  wire [27 : 0] r1__read__h614918;
  wire [24 : 0] sfd__h354945,
		sfd__h363527,
		sfd__h372711,
		sfd__h381323,
		sfd__h400642,
		sfd__h409224,
		sfd__h418408,
		sfd__h427020,
		sfd__h446337,
		sfd__h454919,
		sfd__h464103,
		sfd__h472715,
		value__h487742,
		value__h526595,
		value__h565899;
  wire [22 : 0] IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5015,
		IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5017,
		IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6407,
		IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6409,
		IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7799,
		IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7801,
		IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5061,
		IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5063,
		IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6453,
		IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6455,
		IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7845,
		IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7847,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5034,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5036,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5080,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5082,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6426,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6428,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6472,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6474,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7818,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7820,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7864,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7866,
		_theResult___fst_sfd__h355451,
		_theResult___fst_sfd__h364033,
		_theResult___fst_sfd__h373217,
		_theResult___fst_sfd__h381853,
		_theResult___fst_sfd__h381862,
		_theResult___fst_sfd__h381868,
		_theResult___fst_sfd__h401148,
		_theResult___fst_sfd__h409730,
		_theResult___fst_sfd__h418914,
		_theResult___fst_sfd__h427550,
		_theResult___fst_sfd__h427559,
		_theResult___fst_sfd__h427565,
		_theResult___fst_sfd__h446843,
		_theResult___fst_sfd__h455425,
		_theResult___fst_sfd__h464609,
		_theResult___fst_sfd__h473245,
		_theResult___fst_sfd__h473254,
		_theResult___fst_sfd__h473260,
		_theResult___sfd__h355370,
		_theResult___sfd__h363952,
		_theResult___sfd__h373136,
		_theResult___sfd__h381772,
		_theResult___sfd__h381874,
		_theResult___sfd__h401067,
		_theResult___sfd__h409649,
		_theResult___sfd__h418833,
		_theResult___sfd__h427469,
		_theResult___sfd__h427571,
		_theResult___sfd__h446762,
		_theResult___sfd__h455344,
		_theResult___sfd__h464528,
		_theResult___sfd__h473164,
		_theResult___sfd__h473266,
		_theResult___snd_fst_sfd__h339087,
		_theResult___snd_fst_sfd__h364036,
		_theResult___snd_fst_sfd__h381856,
		_theResult___snd_fst_sfd__h384789,
		_theResult___snd_fst_sfd__h409733,
		_theResult___snd_fst_sfd__h427553,
		_theResult___snd_fst_sfd__h430484,
		_theResult___snd_fst_sfd__h455428,
		_theResult___snd_fst_sfd__h473248,
		f1_sfd__h482798,
		f2_sfd__h521792,
		f3_sfd__h561096,
		out_f_sfd__h382151,
		out_f_sfd__h427848,
		out_f_sfd__h473543,
		out_sfd__h355373,
		out_sfd__h363955,
		out_sfd__h373139,
		out_sfd__h381775,
		out_sfd__h401070,
		out_sfd__h409652,
		out_sfd__h418836,
		out_sfd__h427472,
		out_sfd__h446765,
		out_sfd__h455347,
		out_sfd__h464531,
		out_sfd__h473167;
  wire [19 : 0] r1__read__h614853;
  wire [15 : 0] IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883,
		_theResult____h651779,
		enabled_ints___1__h652304,
		enabled_ints__h652350,
		pend_ints__h651777,
		y__h652316;
  wire [14 : 0] NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d14243;
  wire [13 : 0] r1__read_BITS_13_TO_0___h652326;
  wire [12 : 0] fetchStage_pipelines_1_first__2825_BIT_173_365_ETC___d13750;
  wire [11 : 0] IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10489,
		IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9004,
		IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9719,
		SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10189,
		SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8704,
		SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9419,
		SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q129,
		SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q146,
		SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q169,
		SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6001,
		SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q64,
		SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4609,
		SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q29,
		SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7393,
		SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q99,
		_0_CONCAT_csrf_external_int_en_vec_3_read__1722_ETC___d12857,
		_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4069,
		_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5461,
		_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6853,
		_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d10192,
		_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d8707,
		_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d9422,
		_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10067,
		_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8567,
		_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9297,
		_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d4612,
		_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d6004,
		_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d7396,
		csr_addr__h655988,
		x__h365124,
		x__h410821,
		x__h456516,
		x__h504267,
		x__h543120,
		x__h582424;
  wire [10 : 0] IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10594,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10596,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9114,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9116,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9824,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9826,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10556,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10558,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10625,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10627,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9071,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9073,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9145,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9147,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9786,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9788,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9855,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9857,
		SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q132,
		SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q149,
		SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q172,
		_theResult___exp__h502840,
		_theResult___exp__h512491,
		_theResult___exp__h521275,
		_theResult___exp__h541693,
		_theResult___exp__h551344,
		_theResult___exp__h560128,
		_theResult___exp__h580997,
		_theResult___exp__h590648,
		_theResult___exp__h599432,
		_theResult___fst_exp__h487112,
		_theResult___fst_exp__h502176,
		_theResult___fst_exp__h502182,
		_theResult___fst_exp__h502185,
		_theResult___fst_exp__h502940,
		_theResult___fst_exp__h502943,
		_theResult___fst_exp__h511762,
		_theResult___fst_exp__h511827,
		_theResult___fst_exp__h511833,
		_theResult___fst_exp__h511836,
		_theResult___fst_exp__h512591,
		_theResult___fst_exp__h512594,
		_theResult___fst_exp__h520547,
		_theResult___fst_exp__h520586,
		_theResult___fst_exp__h520592,
		_theResult___fst_exp__h520595,
		_theResult___fst_exp__h521375,
		_theResult___fst_exp__h521378,
		_theResult___fst_exp__h521387,
		_theResult___fst_exp__h521390,
		_theResult___fst_exp__h525965,
		_theResult___fst_exp__h541029,
		_theResult___fst_exp__h541035,
		_theResult___fst_exp__h541038,
		_theResult___fst_exp__h541793,
		_theResult___fst_exp__h541796,
		_theResult___fst_exp__h550615,
		_theResult___fst_exp__h550680,
		_theResult___fst_exp__h550686,
		_theResult___fst_exp__h550689,
		_theResult___fst_exp__h551444,
		_theResult___fst_exp__h551447,
		_theResult___fst_exp__h559400,
		_theResult___fst_exp__h559439,
		_theResult___fst_exp__h559445,
		_theResult___fst_exp__h559448,
		_theResult___fst_exp__h560228,
		_theResult___fst_exp__h560231,
		_theResult___fst_exp__h560240,
		_theResult___fst_exp__h560243,
		_theResult___fst_exp__h565269,
		_theResult___fst_exp__h580333,
		_theResult___fst_exp__h580339,
		_theResult___fst_exp__h580342,
		_theResult___fst_exp__h581097,
		_theResult___fst_exp__h581100,
		_theResult___fst_exp__h589919,
		_theResult___fst_exp__h589984,
		_theResult___fst_exp__h589990,
		_theResult___fst_exp__h589993,
		_theResult___fst_exp__h590748,
		_theResult___fst_exp__h590751,
		_theResult___fst_exp__h598704,
		_theResult___fst_exp__h598743,
		_theResult___fst_exp__h598749,
		_theResult___fst_exp__h598752,
		_theResult___fst_exp__h599532,
		_theResult___fst_exp__h599535,
		_theResult___fst_exp__h599544,
		_theResult___fst_exp__h599547,
		_theResult___snd_fst_exp__h502946,
		_theResult___snd_fst_exp__h521381,
		_theResult___snd_fst_exp__h541799,
		_theResult___snd_fst_exp__h560234,
		_theResult___snd_fst_exp__h581103,
		_theResult___snd_fst_exp__h599538,
		coreFix_fpuMulDivExe_0_fpuExec_double_divresp_ETC__q63,
		coreFix_fpuMulDivExe_0_fpuExec_double_fmaresp_ETC__q28,
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrtres_ETC__q98,
		din_inc___2_exp__h521435,
		din_inc___2_exp__h521470,
		din_inc___2_exp__h521496,
		din_inc___2_exp__h560288,
		din_inc___2_exp__h560323,
		din_inc___2_exp__h560349,
		din_inc___2_exp__h599592,
		din_inc___2_exp__h599627,
		din_inc___2_exp__h599653,
		out_exp__h502843,
		out_exp__h512494,
		out_exp__h521278,
		out_exp__h541696,
		out_exp__h551347,
		out_exp__h560131,
		out_exp__h581000,
		out_exp__h590651,
		out_exp__h599435;
  wire [8 : 0] IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d4930,
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6322,
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7714;
  wire [7 : 0] IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d4368,
	       IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d4371,
	       IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5760,
	       IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5763,
	       IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7152,
	       IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7155,
	       IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d4915,
	       IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d4917,
	       IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6307,
	       IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6309,
	       IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7699,
	       IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7701,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4590,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4592,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4984,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4986,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5982,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5984,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6376,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6378,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7374,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7376,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7768,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7770,
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q69,
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q34,
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q104,
	       _theResult___exp__h355369,
	       _theResult___exp__h363951,
	       _theResult___exp__h373135,
	       _theResult___exp__h381771,
	       _theResult___exp__h381873,
	       _theResult___exp__h401066,
	       _theResult___exp__h409648,
	       _theResult___exp__h418832,
	       _theResult___exp__h427468,
	       _theResult___exp__h427570,
	       _theResult___exp__h446761,
	       _theResult___exp__h455343,
	       _theResult___exp__h464527,
	       _theResult___exp__h473163,
	       _theResult___exp__h473265,
	       _theResult___fst_exp__h354853,
	       _theResult___fst_exp__h354918,
	       _theResult___fst_exp__h354924,
	       _theResult___fst_exp__h354927,
	       _theResult___fst_exp__h355450,
	       _theResult___fst_exp__h363500,
	       _theResult___fst_exp__h363506,
	       _theResult___fst_exp__h363509,
	       _theResult___fst_exp__h364032,
	       _theResult___fst_exp__h372619,
	       _theResult___fst_exp__h372684,
	       _theResult___fst_exp__h372690,
	       _theResult___fst_exp__h372693,
	       _theResult___fst_exp__h373216,
	       _theResult___fst_exp__h381256,
	       _theResult___fst_exp__h381295,
	       _theResult___fst_exp__h381301,
	       _theResult___fst_exp__h381304,
	       _theResult___fst_exp__h381852,
	       _theResult___fst_exp__h381861,
	       _theResult___fst_exp__h381864,
	       _theResult___fst_exp__h400550,
	       _theResult___fst_exp__h400615,
	       _theResult___fst_exp__h400621,
	       _theResult___fst_exp__h400624,
	       _theResult___fst_exp__h401147,
	       _theResult___fst_exp__h409197,
	       _theResult___fst_exp__h409203,
	       _theResult___fst_exp__h409206,
	       _theResult___fst_exp__h409729,
	       _theResult___fst_exp__h418316,
	       _theResult___fst_exp__h418381,
	       _theResult___fst_exp__h418387,
	       _theResult___fst_exp__h418390,
	       _theResult___fst_exp__h418913,
	       _theResult___fst_exp__h426953,
	       _theResult___fst_exp__h426992,
	       _theResult___fst_exp__h426998,
	       _theResult___fst_exp__h427001,
	       _theResult___fst_exp__h427549,
	       _theResult___fst_exp__h427558,
	       _theResult___fst_exp__h427561,
	       _theResult___fst_exp__h446245,
	       _theResult___fst_exp__h446310,
	       _theResult___fst_exp__h446316,
	       _theResult___fst_exp__h446319,
	       _theResult___fst_exp__h446842,
	       _theResult___fst_exp__h454892,
	       _theResult___fst_exp__h454898,
	       _theResult___fst_exp__h454901,
	       _theResult___fst_exp__h455424,
	       _theResult___fst_exp__h464011,
	       _theResult___fst_exp__h464076,
	       _theResult___fst_exp__h464082,
	       _theResult___fst_exp__h464085,
	       _theResult___fst_exp__h464608,
	       _theResult___fst_exp__h472648,
	       _theResult___fst_exp__h472687,
	       _theResult___fst_exp__h472693,
	       _theResult___fst_exp__h472696,
	       _theResult___fst_exp__h473244,
	       _theResult___fst_exp__h473253,
	       _theResult___fst_exp__h473256,
	       _theResult___snd_fst_exp__h364035,
	       _theResult___snd_fst_exp__h381855,
	       _theResult___snd_fst_exp__h409732,
	       _theResult___snd_fst_exp__h427552,
	       _theResult___snd_fst_exp__h455427,
	       _theResult___snd_fst_exp__h473247,
	       din_inc___2_exp__h381886,
	       din_inc___2_exp__h381910,
	       din_inc___2_exp__h381940,
	       din_inc___2_exp__h381964,
	       din_inc___2_exp__h427583,
	       din_inc___2_exp__h427607,
	       din_inc___2_exp__h427637,
	       din_inc___2_exp__h427661,
	       din_inc___2_exp__h473278,
	       din_inc___2_exp__h473302,
	       din_inc___2_exp__h473332,
	       din_inc___2_exp__h473356,
	       f1_exp82797_MINUS_127__q128,
	       f1_exp__h482797,
	       f2_exp21791_MINUS_127__q168,
	       f2_exp__h521791,
	       f3_exp61095_MINUS_127__q145,
	       f3_exp__h561095,
	       out_exp__h355372,
	       out_exp__h363954,
	       out_exp__h373138,
	       out_exp__h381774,
	       out_exp__h401069,
	       out_exp__h409651,
	       out_exp__h418835,
	       out_exp__h427471,
	       out_exp__h446764,
	       out_exp__h455346,
	       out_exp__h464530,
	       out_exp__h473166,
	       out_f_exp__h382150,
	       out_f_exp__h427847,
	       out_f_exp__h473542,
	       x__h613690;
  wire [5 : 0] IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d4305,
	       IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d5697,
	       IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d7089,
	       IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d10438,
	       IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d8953,
	       IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d9668,
	       IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d4856,
	       IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d6248,
	       IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d7640,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10141,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8641,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9371,
	       IF_IF_mmio_cRqQ_enqReq_lat_1_whas__30_THEN_mmi_ETC___d463,
	       IF_IF_mmio_dataReqQ_enqReq_lat_1_whas__7_THEN__ETC___d172,
	       IF_IF_mmio_pRqQ_enqReq_lat_1_whas__87_THEN_mmi_ETC___d820,
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d5928,
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4536,
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7320,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2202,
	       SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rq_ETC___d15646,
	       x__h183221,
	       x__h706089;
  wire [4 : 0] IF_rob_deqPort_0_canDeq__5016_THEN_IF_NOT_rob__ETC___d15210,
	       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d5227,
	       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d6619,
	       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d8011,
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10816,
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10857,
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10901,
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d5256,
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6648,
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d8040,
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10799,
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10840,
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10884,
	       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5239,
	       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6631,
	       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d8023,
	       checkForException___d13067,
	       checkForException___d13772,
	       fflags__h716903,
	       r1__read__h615260,
	       res_fflags__h338527,
	       res_fflags__h384229,
	       res_fflags__h429924,
	       rs1__h655989,
	       y_avValue_snd_fst__h716396,
	       y_avValue_snd_fst__h716963,
	       y_avValue_snd_fst__h716992;
  wire [3 : 0] IF_IF_coreFix_memExe_dTlb_procResp__774_BIT_98_ETC___d1909,
	       IF_IF_coreFix_memExe_dTlb_procResp__774_BIT_98_ETC___d1911,
	       IF_IF_coreFix_memExe_dTlb_procResp__774_BIT_98_ETC___d1913,
	       IF_IF_coreFix_memExe_dTlb_procResp__774_BIT_98_ETC___d1915,
	       IF_IF_coreFix_memExe_dTlb_procResp__774_BIT_98_ETC___d1917,
	       IF_IF_coreFix_memExe_dTlb_procResp__774_BIT_98_ETC___d1919,
	       IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13257,
	       IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13258,
	       IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13259,
	       IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13260,
	       IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13261,
	       IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13262,
	       IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13263,
	       IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13264,
	       IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13265,
	       IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13266,
	       IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13267,
	       IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13268,
	       IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13269,
	       IF_NOT_IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3__ETC___d13302,
	       IF_NOT_coreFix_memExe_dTlb_procResp__774_BIT_9_ETC___d1853,
	       IF_NOT_renameStage_rg_m_halt_req_2843_BIT_4_28_ETC___d13342,
	       IF_checkForException_3067_BIT_4_3068_THEN_IF_c_ETC___d13218,
	       IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12757,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_rqFromC_ETC___d2894,
	       IF_coreFix_memExe_dTlb_procResp__774_BITS_93_T_ETC___d1854,
	       IF_coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1__ETC___d1317,
	       cause_code__h703117,
	       renaming_spec_bits__h684325,
	       result__h647356,
	       result__h647407,
	       spec_bits__h687484,
	       vm_mode_reg__read__h614859,
	       w__h647351,
	       x__h647355,
	       x__h647406,
	       y__h647385,
	       y__h687497,
	       y_avValue_snd_fst__h680927,
	       y_avValue_snd_fst__h680969,
	       y_avValue_snd_fst__h681011;
  wire [2 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2597,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_rqFromC_ETC___d2851,
	       IF_coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1__ETC___d1274,
	       IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d14381,
	       _theResult_____2__h297178,
	       dcsr_cause__h702636,
	       next_deqP___1__h297457,
	       v__h296598,
	       v__h296829,
	       x__h155392,
	       x__h158939,
	       x__h161756,
	       x__h287938,
	       x__h302808,
	       x_decodeInfo_frm__h655673;
  wire [1 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_rqFromC_ETC___d2847,
	       IF_coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1__ETC___d1270,
	       IF_rob_deqPort_0_canDeq__5016_THEN_IF_NOT_rob__ETC___d15232,
	       IF_sfdin00544_BIT_33_THEN_2_ELSE_0__q56,
	       IF_sfdin11756_BIT_4_THEN_2_ELSE_0__q131,
	       IF_sfdin18310_BIT_33_THEN_2_ELSE_0__q66,
	       IF_sfdin46239_BIT_33_THEN_2_ELSE_0__q91,
	       IF_sfdin50609_BIT_4_THEN_2_ELSE_0__q171,
	       IF_sfdin54847_BIT_33_THEN_2_ELSE_0__q21,
	       IF_sfdin64005_BIT_33_THEN_2_ELSE_0__q101,
	       IF_sfdin72613_BIT_33_THEN_2_ELSE_0__q31,
	       IF_sfdin89913_BIT_4_THEN_2_ELSE_0__q148,
	       IF_theResult___snd02136_BIT_4_THEN_2_ELSE_0__q127,
	       IF_theResult___snd09157_BIT_33_THEN_2_ELSE_0__q58,
	       IF_theResult___snd20541_BIT_4_THEN_2_ELSE_0__q134,
	       IF_theResult___snd26947_BIT_33_THEN_2_ELSE_0__q71,
	       IF_theResult___snd40989_BIT_4_THEN_2_ELSE_0__q167,
	       IF_theResult___snd54852_BIT_33_THEN_2_ELSE_0__q93,
	       IF_theResult___snd59394_BIT_4_THEN_2_ELSE_0__q174,
	       IF_theResult___snd63460_BIT_33_THEN_2_ELSE_0__q23,
	       IF_theResult___snd72642_BIT_33_THEN_2_ELSE_0__q106,
	       IF_theResult___snd80293_BIT_4_THEN_2_ELSE_0__q144,
	       IF_theResult___snd81250_BIT_33_THEN_2_ELSE_0__q36,
	       IF_theResult___snd98698_BIT_4_THEN_2_ELSE_0__q151,
	       guard__h346752,
	       guard__h355461,
	       guard__h364391,
	       guard__h373227,
	       guard__h392451,
	       guard__h401158,
	       guard__h410088,
	       guard__h418924,
	       guard__h438146,
	       guard__h446853,
	       guard__h455783,
	       guard__h464619,
	       guard__h494224,
	       guard__h503536,
	       guard__h512605,
	       guard__h533077,
	       guard__h542389,
	       guard__h551458,
	       guard__h572381,
	       guard__h581693,
	       guard__h590762,
	       prv__h718418,
	       prv__h718462,
	       r1__read_BITS_13_TO_12___h655858,
	       v__h604540,
	       v__h604550,
	       v__h605185,
	       x__h713815,
	       x__h717151,
	       y_avValue_snd_snd_snd_fst__h716406,
	       y_avValue_snd_snd_snd_fst__h716973,
	       y_avValue_snd_snd_snd_fst__h717002;
  wire IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d5127,
       IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d5177,
       IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d6519,
       IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d6569,
       IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d7911,
       IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d7961,
       IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d10482,
       IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d10749,
       IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d8997,
       IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d9712,
       IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d9980,
       IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10528,
       IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10734,
       IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10761,
       IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d9043,
       IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d9758,
       IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d9965,
       IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d9992,
       IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d13111,
       IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d13828,
       IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d13865,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10532,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10764,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10765,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10820,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10861,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10905,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10920,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10930,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10941,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10960,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10974,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10989,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11006,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11018,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11031,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11048,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11060,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11073,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9047,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9762,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9995,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9996,
       IF_IF_fetchStage_pipelines_0_first__2816_BITS__ETC___d13550,
       IF_IF_fetchStage_pipelines_0_first__2816_BITS__ETC___d14037,
       IF_NOT_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMu_ETC___d10187,
       IF_NOT_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMu_ETC___d8702,
       IF_NOT_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMu_ETC___d9417,
       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12296,
       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12297,
       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12298,
       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12321,
       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12322,
       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12323,
       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11435,
       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11436,
       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11437,
       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11460,
       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11461,
       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11462,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8299,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8300,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8301,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8323,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8324,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8325,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8347,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8348,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8349,
       IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1664,
       IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1665,
       IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1666,
       IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1688,
       IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1689,
       IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1690,
       IF_NOT_coreFix_memExe_dMem_cache_m_banks_0_pip_ETC___d2144,
       IF_NOT_coreFix_memExe_dMem_cache_m_banks_0_pip_ETC___d2161,
       IF_NOT_fetchStage_pipelines_0_canDeq__2814_281_ETC___d13982,
       IF_NOT_fetchStage_pipelines_0_canDeq__2814_281_ETC___d13990,
       IF_NOT_fetchStage_pipelines_1_first__2825_BITS_ETC___d13903,
       IF_NOT_fetchStage_pipelines_1_first__2825_BITS_ETC___d13989,
       IF_NOT_rob_deqPort_1_deq_data__5023_BIT_15_502_ETC___d15223,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10530,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10763,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10958,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10972,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10987,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11004,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11016,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11029,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11046,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11058,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11071,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9045,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9760,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9994,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5157,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5194,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5285,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5298,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5311,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6549,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6586,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6677,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6690,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6703,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7941,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7978,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8069,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8082,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8095,
       IF_coreFix_aluExe_0_dispToRegQ_RDY_first__2240_ETC___d12272,
       IF_coreFix_aluExe_0_dispToRegQ_RDY_first__2240_ETC___d12306,
       IF_coreFix_aluExe_1_dispToRegQ_RDY_first__1379_ETC___d11411,
       IF_coreFix_aluExe_1_dispToRegQ_RDY_first__1379_ETC___d11445,
       IF_coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first_ETC___d8275,
       IF_coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first_ETC___d8308,
       IF_coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first_ETC___d8332,
       IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6590,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6551,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6588,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6652,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6663,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6679,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6692,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6705,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5159,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5196,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5260,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5271,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5287,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5300,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5313,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7943,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7980,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8044,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8055,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8071,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8084,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8097,
       IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5198,
       IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7982,
       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10736,
       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d8488,
       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9967,
       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2142,
       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2162,
       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2165,
       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3089,
       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3104,
       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3116,
       IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3196,
       IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3211,
       IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3218,
       IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3238,
       IF_coreFix_memExe_dMem_cache_m_banks_0_linkAdd_ETC___d3062,
       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2105,
       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2107,
       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2108,
       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2116,
       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2164,
       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2166,
       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2762,
       IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3367,
       IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3382,
       IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3390,
       IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3463,
       IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3478,
       IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3486,
       IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3505,
       IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1802,
       IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1858,
       IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1862,
       IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1866,
       IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1870,
       IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1874,
       IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1878,
       IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1882,
       IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1886,
       IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1890,
       IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1894,
       IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1898,
       IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1902,
       IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1906,
       IF_coreFix_memExe_dispToRegQ_RDY_first__610_AN_ETC___d1640,
       IF_coreFix_memExe_dispToRegQ_RDY_first__610_AN_ETC___d1673,
       IF_coreFix_memExe_forwardQ_deqReq_dummy2_2_rea_ETC___d3808,
       IF_coreFix_memExe_forwardQ_deqReq_lat_1_whas___ETC___d3801,
       IF_coreFix_memExe_forwardQ_enqReq_lat_1_whas___ETC___d3786,
       IF_coreFix_memExe_memRespLdQ_deqReq_dummy2_2_r_ETC___d3714,
       IF_coreFix_memExe_memRespLdQ_deqReq_lat_1_whas_ETC___d3707,
       IF_coreFix_memExe_memRespLdQ_enqReq_lat_1_whas_ETC___d3692,
       IF_coreFix_memExe_respLrScAmoQ_enqReq_lat_1_wh_ETC___d3616,
       IF_fetchStage_RDY_pipelines_0_first__2813_AND__ETC___d13507,
       IF_fetchStage_RDY_pipelines_1_first__2824_AND__ETC___d13905,
       IF_fetchStage_RDY_pipelines_1_first__2824_AND__ETC___d13979,
       IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14028,
       IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d14161,
       IF_mmio_cRqQ_enqReq_lat_1_whas__30_THEN_mmio_c_ETC___d339,
       IF_mmio_cRsQ_enqReq_lat_1_whas__28_THEN_mmio_c_ETC___d837,
       IF_mmio_dataReqQ_enqReq_lat_1_whas__7_THEN_mmi_ETC___d46,
       IF_mmio_dataRespQ_enqReq_lat_1_whas__92_THEN_m_ETC___d201,
       IF_mmio_pRqQ_enqReq_lat_1_whas__87_THEN_mmio_p_ETC___d696,
       IF_mmio_pRsQ_enqReq_lat_1_whas__82_THEN_mmio_p_ETC___d491,
       IF_rob_deqPort_1_canDeq__5020_THEN_IF_NOT_rob__ETC___d15224,
       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d5279,
       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d5307,
       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d6671,
       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d6699,
       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d8063,
       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d8091,
       NOT_IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_284_ETC___d13402,
       NOT_IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_284_ETC___d13494,
       NOT_IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_284_ETC___d13799,
       NOT_IF_NOT_rob_deqPort_0_canDeq__5016_5017_OR__ETC___d15229,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10114,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10823,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10865,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10923,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10934,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10963,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10978,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11009,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11022,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11051,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11064,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d8614,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d9344,
       NOT_SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__ETC___d13523,
       NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14567,
       NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14574,
       NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14634,
       NOT_commitStage_rg_run_state_4404_4405_AND_NOT_ETC___d14815,
       NOT_coreFix_aluExe_0_bypassWire_0_whas__2261_2_ETC___d12288,
       NOT_coreFix_aluExe_0_bypassWire_0_whas__2261_2_ETC___d12316,
       NOT_coreFix_aluExe_1_bypassWire_0_whas__1400_1_ETC___d11427,
       NOT_coreFix_aluExe_1_bypassWire_0_whas__1400_1_ETC___d11455,
       NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d8291,
       NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d8318,
       NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d8342,
       NOT_coreFix_fpuMulDivExe_0_fpuExec_double_div__ETC___d5873,
       NOT_coreFix_fpuMulDivExe_0_fpuExec_double_fma__ETC___d4481,
       NOT_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt_ETC___d7265,
       NOT_coreFix_memExe_bypassWire_0_whas__629_635__ETC___d1656,
       NOT_coreFix_memExe_bypassWire_0_whas__629_635__ETC___d1683,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2584,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2724,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3115,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3136,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_ETC___d3185,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_ETC___d3241,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_linkAd_ETC___d2130,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2181,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2591,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2593,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2615,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2619,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2622,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2636,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2639,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2650,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2656,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2663,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2688,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2696,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2704,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2713,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2735,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_rqFrom_ETC___d1195,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_ETC___d3356,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_ETC___d3413,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_ETC___d3452,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_ETC___d3509,
       NOT_coreFix_memExe_dMem_perfReqQ_clearReq_dumm_ETC___d1941,
       NOT_coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_ETC___d1985,
       NOT_coreFix_memExe_dTlb_procResp__774_BITS_162_ETC___d1813,
       NOT_coreFix_memExe_forwardQ_clearReq_dummy2_1__ETC___d3775,
       NOT_coreFix_memExe_forwardQ_enqReq_dummy2_2_re_ETC___d3830,
       NOT_coreFix_memExe_memRespLdQ_clearReq_dummy2__ETC___d3681,
       NOT_coreFix_memExe_memRespLdQ_enqReq_dummy2_2__ETC___d3736,
       NOT_coreFix_memExe_reqLdQ_full_dummy2_0_read___ETC___d1535,
       NOT_coreFix_memExe_reqLrScAmoQ_full_dummy2_0_r_ETC___d1086,
       NOT_coreFix_memExe_respLrScAmoQ_clearReq_dummy_ETC___d3605,
       NOT_coreFix_memExe_respLrScAmoQ_enqReq_dummy2__ETC___d3647,
       NOT_coreFix_memExe_respLrScAmoQ_full_010_011_A_ETC___d2140,
       NOT_csrf_fs_reg_read__1604_EQ_0_3056_3057_OR_N_ETC___d13395,
       NOT_csrf_fs_reg_read__1604_EQ_0_3056_3057_OR_N_ETC___d13492,
       NOT_csrf_fs_reg_read__1604_EQ_0_3056_3057_OR_N_ETC___d13797,
       NOT_csrf_prv_reg_read__2846_ULE_1_4635_4677_OR_ETC___d14681,
       NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d13601,
       NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d13842,
       NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d13886,
       NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d13941,
       NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d13960,
       NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14111,
       NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14167,
       NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14265,
       NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14270,
       NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14272,
       NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14283,
       NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14327,
       NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14328,
       NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14358,
       NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d13389,
       NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d13551,
       NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d13818,
       NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d13824,
       NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d13947,
       NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d13966,
       NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d13987,
       NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d14174,
       NOT_fetchStage_pipelines_0_first__2816_BIT_68__ETC___d13562,
       NOT_fetchStage_pipelines_1_canDeq__2822_2823_O_ETC___d12831,
       NOT_fetchStage_pipelines_1_first__2825_BITS_19_ETC___d13811,
       NOT_fetchStage_pipelines_1_first__2825_BITS_19_ETC___d13928,
       NOT_fetchStage_pipelines_1_first__2825_BITS_19_ETC___d14280,
       NOT_fetchStage_pipelines_1_first__2825_BIT_68__ETC___d14277,
       NOT_mmio_cRqQ_clearReq_dummy2_1_read__26_27_OR_ETC___d431,
       NOT_mmio_cRqQ_enqReq_dummy2_2_read__32_47_OR_I_ETC___d452,
       NOT_mmio_cRsQ_clearReq_dummy2_1_read__72_73_OR_ETC___d877,
       NOT_mmio_cRsQ_enqReq_dummy2_2_read__78_93_OR_I_ETC___d898,
       NOT_mmio_dataPendQ_empty_23_152_AND_rob_RDY_se_ETC___d1153,
       NOT_mmio_dataPendQ_empty_23_152_AND_rob_RDY_se_ETC___d1452,
       NOT_mmio_dataPendQ_enqReq_dummy2_2_read__00_15_ETC___d325,
       NOT_mmio_dataReqQ_clearReq_dummy2_1_read__35_3_ETC___d140,
       NOT_mmio_dataReqQ_enqReq_dummy2_2_read__41_56__ETC___d161,
       NOT_mmio_dataRespQ_clearReq_dummy2_1_read__36__ETC___d241,
       NOT_mmio_dataRespQ_enqReq_dummy2_2_read__42_57_ETC___d262,
       NOT_mmio_pRqQ_clearReq_dummy2_1_read__83_84_OR_ETC___d788,
       NOT_mmio_pRqQ_enqReq_dummy2_2_read__89_04_OR_I_ETC___d809,
       NOT_mmio_pRsQ_clearReq_dummy2_1_read__34_35_OR_ETC___d639,
       NOT_mmio_pRsQ_enqReq_dummy2_2_read__40_55_OR_I_ETC___d660,
       NOT_regRenamingTable_rename_0_canRename__3475__ETC___d13833,
       NOT_regRenamingTable_rename_0_canRename__3475__ETC___d13909,
       NOT_regRenamingTable_rename_0_canRename__3475__ETC___d14260,
       NOT_regRenamingTable_rename_1_canRename__3604__ETC___d13873,
       NOT_renameStage_rg_m_halt_req_2843_BIT_4_2844__ETC___d13161,
       NOT_renameStage_rg_m_halt_req_2843_BIT_4_2844__ETC___d13499,
       NOT_renameStage_rg_m_halt_req_2843_BIT_4_2844__ETC___d13951,
       NOT_renameStage_rg_m_halt_req_2843_BIT_4_2844__ETC___d13970,
       NOT_rob_deqPort_0_canDeq__5016_5017_OR_regRena_ETC___d15055,
       NOT_rob_deqPort_0_canDeq__5016_5017_OR_rob_deq_ETC___d15203,
       NOT_rob_deqPort_0_deq_data__4399_BITS_247_TO_2_ETC___d14804,
       NOT_rob_deqPort_1_deq_data__5023_BIT_15_5024_5_ETC___d15052,
       NOT_specTagManager_canClaim__3473_3567_OR_NOT__ETC___d14082,
       NOT_specTagManager_canClaim__3473_3567_OR_NOT__ETC___d14151,
       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10190,
       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10191,
       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8705,
       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8706,
       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9420,
       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9421,
       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6002,
       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6003,
       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4610,
       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4611,
       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7394,
       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7395,
       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d4307,
       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d5699,
       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d7091,
       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10440,
       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d8955,
       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d9670,
       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d4858,
       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6250,
       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d7642,
       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10143,
       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10490,
       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d8643,
       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9005,
       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9373,
       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9720,
       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d4538,
       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d4931,
       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5930,
       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6323,
       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d7322,
       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d7715,
       _0_OR_NOT_fetchStage_pipelines_0_first__2816_BI_ETC___d14002,
       _0_OR_NOT_fetchStage_pipelines_1_first__2825_BI_ETC___d13901,
       _0_OR_NOT_fetchStage_pipelines_1_first__2825_BI_ETC___d14095,
       _0b0_CONCAT_csrf_medeleg_15_reg_read__1703_1704_ETC___d14655,
       _0b0_CONCAT_csrf_mideleg_11_reg_read__1711_1712_ETC___d14637,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4070,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4071,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5242,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5267,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5294,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5462,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5463,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6634,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6659,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6686,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6854,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6855,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d8026,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d8051,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d8078,
       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10068,
       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10070,
       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8568,
       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8570,
       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9298,
       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9300,
       _dfoo12,
       _dfoo16,
       _dfoo18,
       _dfoo2,
       _dfoo20,
       _dfoo24,
       _dfoo26,
       _dfoo32,
       _dfoo7,
       _dor1coreFix_aluExe_0_bypassWire_2$EN_wset,
       _dor1coreFix_aluExe_0_bypassWire_3$EN_wset,
       _dor1coreFix_aluExe_0_rsAlu$EN_setRegReady_3_put,
       _dor1coreFix_aluExe_1_bypassWire_2$EN_wset,
       _dor1coreFix_aluExe_1_bypassWire_3$EN_wset,
       _dor1coreFix_aluExe_1_rsAlu$EN_setRegReady_3_put,
       _dor1coreFix_fpuMulDivExe_0_bypassWire_2$EN_wset,
       _dor1coreFix_fpuMulDivExe_0_bypassWire_3$EN_wset,
       _dor1coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_3_put,
       _dor1coreFix_memExe_bypassWire_2$EN_wset,
       _dor1coreFix_memExe_bypassWire_3$EN_wset,
       _dor1coreFix_memExe_forwardQ_enqReq_dummy2_0$EN_write,
       _dor1coreFix_memExe_reqLdQ_data_0_dummy2_0$EN_write,
       _dor1coreFix_memExe_reqLdQ_empty_dummy2_0$EN_write,
       _dor1coreFix_memExe_reqLdQ_empty_lat_0$EN_wset,
       _dor1coreFix_memExe_reqLdQ_enqP_dummy2_0$EN_write,
       _dor1coreFix_memExe_reqLdQ_full_dummy2_0$EN_write,
       _dor1coreFix_memExe_reqLdQ_full_lat_0$EN_wset,
       _dor1coreFix_memExe_rsMem$EN_setRegReady_3_put,
       _dor1rf$EN_write_0_wr,
       _dor1rf$EN_write_1_wr,
       _dor1sbAggr$EN_setReady_3_put,
       _dor1sbCons$EN_setReady_0_put,
       _dor1sbCons$EN_setReady_1_put,
       _theResult_____2__h305174,
       _theResult_____2__h311168,
       _theResult_____2__h319022,
       _theResult_____2__h329366,
       _theResult_____2__h332591,
       commitStage_commitTrap_4406_BIT_36_4532_AND_co_ETC___d14597,
       commitStage_commitTrap_4406_BIT_36_4532_AND_co_ETC___d14598,
       coreFix_aluExe_0_bypassWire_0_wget__2262_BITS__ETC___d12264,
       coreFix_aluExe_0_bypassWire_0_wget__2262_BITS__ETC___d12303,
       coreFix_aluExe_0_bypassWire_1_wget__2275_BITS__ETC___d12277,
       coreFix_aluExe_0_bypassWire_1_wget__2275_BITS__ETC___d12309,
       coreFix_aluExe_0_bypassWire_2_wget__2283_BITS__ETC___d12285,
       coreFix_aluExe_0_bypassWire_2_wget__2283_BITS__ETC___d12313,
       coreFix_aluExe_0_dispToRegQ_first__2241_BIT_11_ETC___d12326,
       coreFix_aluExe_0_exeToFinQ_RDY_first__2700_AND_ETC___d12739,
       coreFix_aluExe_0_rsAlu_approximateCount__3515__ETC___d13517,
       coreFix_aluExe_1_bypassWire_0_wget__1401_BITS__ETC___d11403,
       coreFix_aluExe_1_bypassWire_0_wget__1401_BITS__ETC___d11442,
       coreFix_aluExe_1_bypassWire_1_wget__1414_BITS__ETC___d11416,
       coreFix_aluExe_1_bypassWire_1_wget__1414_BITS__ETC___d11448,
       coreFix_aluExe_1_bypassWire_2_wget__1422_BITS__ETC___d11424,
       coreFix_aluExe_1_bypassWire_2_wget__1422_BITS__ETC___d11452,
       coreFix_aluExe_1_dispToRegQ_first__1380_BIT_11_ETC___d11465,
       coreFix_aluExe_1_exeToFinQ_RDY_first__2026_AND_ETC___d12066,
       coreFix_fpuMulDivExe_0_bypassWire_0_wget__265__ETC___d8267,
       coreFix_fpuMulDivExe_0_bypassWire_0_wget__265__ETC___d8305,
       coreFix_fpuMulDivExe_0_bypassWire_0_wget__265__ETC___d8329,
       coreFix_fpuMulDivExe_0_bypassWire_1_wget__278__ETC___d8280,
       coreFix_fpuMulDivExe_0_bypassWire_1_wget__278__ETC___d8311,
       coreFix_fpuMulDivExe_0_bypassWire_1_wget__278__ETC___d8335,
       coreFix_fpuMulDivExe_0_bypassWire_2_wget__286__ETC___d8288,
       coreFix_fpuMulDivExe_0_bypassWire_2_wget__286__ETC___d8315,
       coreFix_fpuMulDivExe_0_bypassWire_2_wget__286__ETC___d8339,
       coreFix_fpuMulDivExe_0_fpuExec_divQ_RDY_first__ETC___d5330,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ_RDY_first__ETC___d3938,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_RDY_first_ETC___d6722,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divI_ETC___d8161,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ_RDY_fir_ETC___d8114,
       coreFix_fpuMulDivExe_0_regToExeQ_first__429_BI_ETC___d10910,
       coreFix_fpuMulDivExe_0_regToExeQ_first__429_BI_ETC___d10946,
       coreFix_fpuMulDivExe_0_regToExeQ_first__429_BI_ETC___d10994,
       coreFix_fpuMulDivExe_0_regToExeQ_first__429_BI_ETC___d11036,
       coreFix_fpuMulDivExe_0_regToExeQ_first__429_BI_ETC___d11078,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv_RDY_enq__40_ETC___d14102,
       coreFix_memExe_bypassWire_0_wget__630_BITS_70__ETC___d1632,
       coreFix_memExe_bypassWire_0_wget__630_BITS_70__ETC___d1670,
       coreFix_memExe_bypassWire_1_wget__643_BITS_70__ETC___d1645,
       coreFix_memExe_bypassWire_1_wget__643_BITS_70__ETC___d1676,
       coreFix_memExe_bypassWire_2_wget__651_BITS_70__ETC___d1653,
       coreFix_memExe_bypassWire_2_wget__651_BITS_70__ETC___d1680,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_pi_ETC___d2635,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIn_ETC___d3125,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enq_ETC___d3228,
       coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d2128,
       coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d2208,
       coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d2785,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2075,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2154,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2589,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2618,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2623,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2640,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2657,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2677,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2680,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2701,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2707,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2709,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2755,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2758,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2855,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2859,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2863,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2868,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2872,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2877,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2881,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2886,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2898,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2902,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2906,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enq_ETC___d3399,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enq_ETC___d3495,
       coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2_r_ETC___d1969,
       coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1784,
       coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1785,
       coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1789,
       coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1792,
       coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1793,
       coreFix_memExe_forwardQ_enqReq_dummy2_2_read___ETC___d3817,
       coreFix_memExe_memRespLdQ_enqReq_dummy2_2_read_ETC___d3723,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1278,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1282,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1286,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1291,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1295,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1300,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1304,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1309,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1321,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1325,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1329,
       coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2_re_ETC___d3632,
       coreFix_memExe_stb_isEmpty__071_AND_coreFix_me_ETC___d14809,
       csrf_fs_reg_read__1604_EQ_0_3056_AND_fetchStag_ETC___d13104,
       csrf_fs_reg_read__1604_EQ_0_3056_AND_fetchStag_ETC___d13576,
       csrf_fs_reg_read__1604_EQ_0_3056_AND_fetchStag_ETC___d13863,
       csrf_prv_reg_read__2846_ULE_1_4635_AND_IF_comm_ETC___d14657,
       csrf_prv_reg_read__2846_ULE_1___d14635,
       csrf_prv_reg_read__2846_ULT_IF_fetchStage_pipe_ETC___d13099,
       f_csr_rsps_i_notFull__5339_AND_f_csr_reqs_firs_ETC___d15442,
       fetchStage_RDY_pipelines_0_first__2813_AND_fet_ETC___d13573,
       fetchStage_RDY_pipelines_1_deq__2828_AND_NOT_f_ETC___d14155,
       fetchStage_pipelines_0_canDeq__2814_AND_NOT_fe_ETC___d14093,
       fetchStage_pipelines_0_canDeq__2814_AND_NOT_fe_ETC___d14177,
       fetchStage_pipelines_0_canDeq__2814_AND_NOT_fe_ETC___d14252,
       fetchStage_pipelines_0_canDeq__2814_AND_NOT_fe_ETC___d14392,
       fetchStage_pipelines_0_canDeq__2814_AND_fetchS_ETC___d14165,
       fetchStage_pipelines_0_canDeq__2814_AND_regRen_ETC___d14099,
       fetchStage_pipelines_0_canDeq__2814_AND_regRen_ETC___d14106,
       fetchStage_pipelines_0_canDeq__2814_AND_regRen_ETC___d14129,
       fetchStage_pipelines_0_canDeq__2814_AND_regRen_ETC___d14371,
       fetchStage_pipelines_0_canDeq__2814_AND_specTa_ETC___d14229,
       fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d13097,
       fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d13817,
       fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d13916,
       fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d14030,
       fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d14038,
       fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d14055,
       fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d14066,
       fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d14073,
       fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d14089,
       fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d14122,
       fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d14135,
       fetchStage_pipelines_0_first__2816_BITS_199_TO_ETC___d13583,
       fetchStage_pipelines_0_first__2816_BIT_68_2845_ETC___d13907,
       fetchStage_pipelines_1_first__2825_BITS_194_TO_ETC___d14049,
       fetchStage_pipelines_1_first__2825_BITS_199_TO_ETC___d14060,
       guard__h364989,
       guard__h410686,
       guard__h456381,
       guard__h504134,
       guard__h542987,
       guard__h582291,
       idx__h684456,
       k__h669550,
       mmio_cRqQ_enqReq_dummy2_2_read__32_AND_IF_mmio_ETC___d444,
       mmio_cRsQ_enqReq_dummy2_2_read__78_AND_IF_mmio_ETC___d890,
       mmio_dataPendQ_enqReq_dummy2_2_read__00_AND_IF_ETC___d312,
       mmio_dataReqQ_enqReq_dummy2_2_read__41_AND_IF__ETC___d153,
       mmio_dataRespQ_enqReq_dummy2_2_read__42_AND_IF_ETC___d254,
       mmio_pRqQ_empty_07_AND_epochManager_checkEpoch_ETC___d13114,
       mmio_pRqQ_empty_07_AND_epochManager_checkEpoch_ETC___d13405,
       mmio_pRqQ_empty_07_AND_epochManager_checkEpoch_ETC___d13423,
       mmio_pRqQ_empty_07_AND_epochManager_checkEpoch_ETC___d14169,
       mmio_pRqQ_empty_07_AND_epochManager_checkEpoch_ETC___d14171,
       mmio_pRqQ_enqReq_dummy2_2_read__89_AND_IF_mmio_ETC___d801,
       mmio_pRsQ_enqReq_dummy2_2_read__40_AND_IF_mmio_ETC___d652,
       next_deqP___1__h305453,
       next_deqP___1__h311734,
       next_deqP___1__h319588,
       next_deqP___1__h329645,
       next_deqP___1__h332870,
       r1__read_BIT_20___h656554,
       r__h613737,
       r__h615234,
       regRenamingTable_RDY_rename_0_claimRename__335_ETC___d13367,
       regRenamingTable_RDY_rename_0_getRename__3359__ETC___d14015,
       regRenamingTable_RDY_rename_1_getRename__4079__ETC___d14097,
       regRenamingTable_rename_0_canRename__3475_AND__ETC___d13501,
       regRenamingTable_rename_0_canRename__3475_AND__ETC___d13564,
       regRenamingTable_rename_0_canRename__3475_AND__ETC___d13568,
       regRenamingTable_rename_0_canRename__3475_AND__ETC___d13895,
       regRenamingTable_rename_0_canRename__3475_AND__ETC___d14046,
       regRenamingTable_rename_0_canRename__3475_AND__ETC___d14189,
       regRenamingTable_rename_0_canRename__3475_AND__ETC___d14195,
       regRenamingTable_rename_0_canRename__3475_AND__ETC___d14215,
       regRenamingTable_rename_0_canRename__3475_AND__ETC___d14223,
       regRenamingTable_rename_0_canRename__3475_AND__ETC___d14369,
       regRenamingTable_rename_1_canRename__3604_AND__ETC___d13810,
       regRenamingTable_rename_1_canRename__3604_AND__ETC___d13953,
       regRenamingTable_rename_1_canRename__3604_AND__ETC___d13972,
       regRenamingTable_rename_1_canRename__3604_AND__ETC___d14279,
       regRenamingTable_rename_1_canRename__3604_AND__ETC___d14323,
       renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_N_ETC___d13127,
       renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_N_ETC___d13357,
       renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_f_ETC___d13831,
       renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_f_ETC___d13871,
       renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_f_ETC___d13912,
       renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_f_ETC___d13994,
       rg_core_run_state_read__3117_EQ_2_3118_AND_NOT_ETC___d15278,
       rob_enqPort_1_canEnq__3802_AND_epochManager_ch_ETC___d13807,
       sbCons_lazyLookup_2_get_coreFix_fpuMulDivExe_0_ETC___d8352,
       sbCons_lazyLookup_2_get_coreFix_fpuMulDivExe_0_ETC___d8353,
       sbCons_lazyLookup_3_get_coreFix_memExe_dispToR_ETC___d1693,
       sbIdx__h158818,
       v__h299943,
       v__h300461,
       v__h310457,
       v__h310688,
       v__h314333,
       v__h314564,
       v__h328934,
       v__h329165,
       v__h332159,
       v__h332390,
       value_BIT_52___h401816,
       x__h604041;

  // action method coreReq_start
  assign RDY_coreReq_start = !renameStage_rg_m_halt_req[4] ;
  assign CAN_FIRE_coreReq_start = !renameStage_rg_m_halt_req[4] ;
  assign WILL_FIRE_coreReq_start = EN_coreReq_start ;

  // action method coreReq_perfReq
  assign RDY_coreReq_perfReq = perfReqQ$FULL_N ;
  assign CAN_FIRE_coreReq_perfReq = perfReqQ$FULL_N ;
  assign WILL_FIRE_coreReq_perfReq = EN_coreReq_perfReq ;

  // actionvalue method coreIndInv_perfResp
  assign coreIndInv_perfResp = { perfReqQ$D_OUT, 64'd0 } ;
  assign RDY_coreIndInv_perfResp = perfReqQ$EMPTY_N ;
  assign CAN_FIRE_coreIndInv_perfResp = perfReqQ$EMPTY_N ;
  assign WILL_FIRE_coreIndInv_perfResp = EN_coreIndInv_perfResp ;

  // action method coreIndInv_terminate
  assign RDY_coreIndInv_terminate = csrf_terminate_module_terminateQ$EMPTY_N ;
  assign CAN_FIRE_coreIndInv_terminate =
	     csrf_terminate_module_terminateQ$EMPTY_N ;
  assign WILL_FIRE_coreIndInv_terminate = EN_coreIndInv_terminate ;

  // value method dCacheToParent_rsToP_notEmpty
  assign dCacheToParent_rsToP_notEmpty =
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty ;
  assign RDY_dCacheToParent_rsToP_notEmpty = 1'd1 ;

  // action method dCacheToParent_rsToP_deq
  assign RDY_dCacheToParent_rsToP_deq =
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty ;
  assign CAN_FIRE_dCacheToParent_rsToP_deq =
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty ;
  assign WILL_FIRE_dCacheToParent_rsToP_deq = EN_dCacheToParent_rsToP_deq ;

  // value method dCacheToParent_rsToP_first
  assign dCacheToParent_rsToP_first =
	     { CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q248,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q249,
	       !CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q250,
	       SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d15620 } ;
  assign RDY_dCacheToParent_rsToP_first =
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty ;

  // value method dCacheToParent_rqToP_notEmpty
  assign dCacheToParent_rqToP_notEmpty =
	     !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty ;
  assign RDY_dCacheToParent_rqToP_notEmpty = 1'd1 ;

  // action method dCacheToParent_rqToP_deq
  assign RDY_dCacheToParent_rqToP_deq =
	     !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty ;
  assign CAN_FIRE_dCacheToParent_rqToP_deq =
	     !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty ;
  assign WILL_FIRE_dCacheToParent_rqToP_deq = EN_dCacheToParent_rqToP_deq ;

  // value method dCacheToParent_rqToP_first
  assign dCacheToParent_rqToP_first =
	     { CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q256,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q257,
	       SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rq_ETC___d15646 } ;
  assign RDY_dCacheToParent_rqToP_first =
	     !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty ;

  // value method dCacheToParent_fromP_notFull
  assign dCacheToParent_fromP_notFull =
	     !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full ;
  assign RDY_dCacheToParent_fromP_notFull = 1'd1 ;

  // action method dCacheToParent_fromP_enq
  assign RDY_dCacheToParent_fromP_enq =
	     !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full ;
  assign CAN_FIRE_dCacheToParent_fromP_enq =
	     !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full ;
  assign WILL_FIRE_dCacheToParent_fromP_enq = EN_dCacheToParent_fromP_enq ;

  // value method iCacheToParent_rsToP_notEmpty
  assign iCacheToParent_rsToP_notEmpty =
	     fetchStage$iMemIfc_to_parent_rsToP_notEmpty ;
  assign RDY_iCacheToParent_rsToP_notEmpty = 1'd1 ;

  // action method iCacheToParent_rsToP_deq
  assign RDY_iCacheToParent_rsToP_deq =
	     fetchStage$RDY_iMemIfc_to_parent_rsToP_deq ;
  assign CAN_FIRE_iCacheToParent_rsToP_deq =
	     fetchStage$RDY_iMemIfc_to_parent_rsToP_deq ;
  assign WILL_FIRE_iCacheToParent_rsToP_deq = EN_iCacheToParent_rsToP_deq ;

  // value method iCacheToParent_rsToP_first
  assign iCacheToParent_rsToP_first =
	     fetchStage$iMemIfc_to_parent_rsToP_first ;
  assign RDY_iCacheToParent_rsToP_first =
	     fetchStage$RDY_iMemIfc_to_parent_rsToP_first ;

  // value method iCacheToParent_rqToP_notEmpty
  assign iCacheToParent_rqToP_notEmpty =
	     fetchStage$iMemIfc_to_parent_rqToP_notEmpty ;
  assign RDY_iCacheToParent_rqToP_notEmpty = 1'd1 ;

  // action method iCacheToParent_rqToP_deq
  assign RDY_iCacheToParent_rqToP_deq =
	     fetchStage$RDY_iMemIfc_to_parent_rqToP_deq ;
  assign CAN_FIRE_iCacheToParent_rqToP_deq =
	     fetchStage$RDY_iMemIfc_to_parent_rqToP_deq ;
  assign WILL_FIRE_iCacheToParent_rqToP_deq = EN_iCacheToParent_rqToP_deq ;

  // value method iCacheToParent_rqToP_first
  assign iCacheToParent_rqToP_first =
	     fetchStage$iMemIfc_to_parent_rqToP_first ;
  assign RDY_iCacheToParent_rqToP_first =
	     fetchStage$RDY_iMemIfc_to_parent_rqToP_first ;

  // value method iCacheToParent_fromP_notFull
  assign iCacheToParent_fromP_notFull =
	     fetchStage$iMemIfc_to_parent_fromP_notFull ;
  assign RDY_iCacheToParent_fromP_notFull = 1'd1 ;

  // action method iCacheToParent_fromP_enq
  assign RDY_iCacheToParent_fromP_enq =
	     fetchStage$RDY_iMemIfc_to_parent_fromP_enq ;
  assign CAN_FIRE_iCacheToParent_fromP_enq =
	     fetchStage$RDY_iMemIfc_to_parent_fromP_enq ;
  assign WILL_FIRE_iCacheToParent_fromP_enq = EN_iCacheToParent_fromP_enq ;

  // value method tlbToMem_memReq_notEmpty
  assign tlbToMem_memReq_notEmpty = l2Tlb$toMem_memReq_notEmpty ;
  assign RDY_tlbToMem_memReq_notEmpty = 1'd1 ;

  // action method tlbToMem_memReq_deq
  assign RDY_tlbToMem_memReq_deq = l2Tlb$RDY_toMem_memReq_deq ;
  assign CAN_FIRE_tlbToMem_memReq_deq = l2Tlb$RDY_toMem_memReq_deq ;
  assign WILL_FIRE_tlbToMem_memReq_deq = EN_tlbToMem_memReq_deq ;

  // value method tlbToMem_memReq_first
  assign tlbToMem_memReq_first = l2Tlb$toMem_memReq_first ;
  assign RDY_tlbToMem_memReq_first = l2Tlb$RDY_toMem_memReq_first ;

  // value method tlbToMem_respLd_notFull
  assign tlbToMem_respLd_notFull = l2Tlb$toMem_respLd_notFull ;
  assign RDY_tlbToMem_respLd_notFull = 1'd1 ;

  // action method tlbToMem_respLd_enq
  assign RDY_tlbToMem_respLd_enq = l2Tlb$RDY_toMem_respLd_enq ;
  assign CAN_FIRE_tlbToMem_respLd_enq = l2Tlb$RDY_toMem_respLd_enq ;
  assign WILL_FIRE_tlbToMem_respLd_enq = EN_tlbToMem_respLd_enq ;

  // value method mmioToPlatform_cRq_notEmpty
  assign mmioToPlatform_cRq_notEmpty = !mmio_cRqQ_empty ;
  assign RDY_mmioToPlatform_cRq_notEmpty = 1'd1 ;

  // action method mmioToPlatform_cRq_deq
  assign RDY_mmioToPlatform_cRq_deq = !mmio_cRqQ_empty ;
  assign CAN_FIRE_mmioToPlatform_cRq_deq = !mmio_cRqQ_empty ;
  assign WILL_FIRE_mmioToPlatform_cRq_deq = EN_mmioToPlatform_cRq_deq ;

  // value method mmioToPlatform_cRq_first
  assign mmioToPlatform_cRq_first =
	     { mmio_cRqQ_data_0[141:78],
	       CASE_mmio_cRqQ_data_0_BITS_77_TO_76_0_mmio_cRq_ETC__q1,
	       mmio_cRqQ_data_0[71:0] } ;
  assign RDY_mmioToPlatform_cRq_first = !mmio_cRqQ_empty ;

  // value method mmioToPlatform_pRs_notFull
  assign mmioToPlatform_pRs_notFull = !mmio_pRsQ_full ;
  assign RDY_mmioToPlatform_pRs_notFull = 1'd1 ;

  // action method mmioToPlatform_pRs_enq
  assign RDY_mmioToPlatform_pRs_enq = !mmio_pRsQ_full ;
  assign CAN_FIRE_mmioToPlatform_pRs_enq = !mmio_pRsQ_full ;
  assign WILL_FIRE_mmioToPlatform_pRs_enq = EN_mmioToPlatform_pRs_enq ;

  // value method mmioToPlatform_pRq_notFull
  assign mmioToPlatform_pRq_notFull = !mmio_pRqQ_full ;
  assign RDY_mmioToPlatform_pRq_notFull = 1'd1 ;

  // action method mmioToPlatform_pRq_enq
  assign RDY_mmioToPlatform_pRq_enq = !mmio_pRqQ_full ;
  assign CAN_FIRE_mmioToPlatform_pRq_enq = !mmio_pRqQ_full ;
  assign WILL_FIRE_mmioToPlatform_pRq_enq = EN_mmioToPlatform_pRq_enq ;

  // value method mmioToPlatform_cRs_notEmpty
  assign mmioToPlatform_cRs_notEmpty = !mmio_cRsQ_empty ;
  assign RDY_mmioToPlatform_cRs_notEmpty = 1'd1 ;

  // action method mmioToPlatform_cRs_deq
  assign RDY_mmioToPlatform_cRs_deq = !mmio_cRsQ_empty ;
  assign CAN_FIRE_mmioToPlatform_cRs_deq = !mmio_cRsQ_empty ;
  assign WILL_FIRE_mmioToPlatform_cRs_deq = EN_mmioToPlatform_cRs_deq ;

  // value method mmioToPlatform_cRs_first
  assign mmioToPlatform_cRs_first = mmio_cRsQ_data_0 ;
  assign RDY_mmioToPlatform_cRs_first = !mmio_cRsQ_empty ;

  // action method mmioToPlatform_setTime
  assign RDY_mmioToPlatform_setTime = 1'd1 ;
  assign CAN_FIRE_mmioToPlatform_setTime = 1'd1 ;
  assign WILL_FIRE_mmioToPlatform_setTime = EN_mmioToPlatform_setTime ;

  // actionvalue method sendDoStats
  assign sendDoStats = csrf_stats_module_writeQ$D_OUT ;
  assign RDY_sendDoStats = csrf_stats_module_writeQ$EMPTY_N ;
  assign CAN_FIRE_sendDoStats = csrf_stats_module_writeQ$EMPTY_N ;
  assign WILL_FIRE_sendDoStats = EN_sendDoStats ;

  // action method recvDoStats
  assign RDY_recvDoStats = 1'd1 ;
  assign CAN_FIRE_recvDoStats = 1'd1 ;
  assign WILL_FIRE_recvDoStats = EN_recvDoStats ;

  // actionvalue method deadlock_dCacheCRqStuck_get
  assign deadlock_dCacheCRqStuck_get = 73'h0AAAAAAAAAAAAAAAAAA ;
  assign RDY_deadlock_dCacheCRqStuck_get = 1'd0 ;
  assign CAN_FIRE_deadlock_dCacheCRqStuck_get = 1'd0 ;
  assign WILL_FIRE_deadlock_dCacheCRqStuck_get =
	     EN_deadlock_dCacheCRqStuck_get ;

  // actionvalue method deadlock_dCachePRqStuck_get
  assign deadlock_dCachePRqStuck_get = 68'hAAAAAAAAAAAAAAAAA ;
  assign RDY_deadlock_dCachePRqStuck_get = 1'd0 ;
  assign CAN_FIRE_deadlock_dCachePRqStuck_get = 1'd0 ;
  assign WILL_FIRE_deadlock_dCachePRqStuck_get =
	     EN_deadlock_dCachePRqStuck_get ;

  // actionvalue method deadlock_iCacheCRqStuck_get
  assign deadlock_iCacheCRqStuck_get = fetchStage$iMemIfc_cRqStuck_get ;
  assign RDY_deadlock_iCacheCRqStuck_get =
	     fetchStage$RDY_iMemIfc_cRqStuck_get ;
  assign CAN_FIRE_deadlock_iCacheCRqStuck_get =
	     fetchStage$RDY_iMemIfc_cRqStuck_get ;
  assign WILL_FIRE_deadlock_iCacheCRqStuck_get =
	     EN_deadlock_iCacheCRqStuck_get ;

  // actionvalue method deadlock_iCachePRqStuck_get
  assign deadlock_iCachePRqStuck_get = fetchStage$iMemIfc_pRqStuck_get ;
  assign RDY_deadlock_iCachePRqStuck_get =
	     fetchStage$RDY_iMemIfc_pRqStuck_get ;
  assign CAN_FIRE_deadlock_iCachePRqStuck_get =
	     fetchStage$RDY_iMemIfc_pRqStuck_get ;
  assign WILL_FIRE_deadlock_iCachePRqStuck_get =
	     EN_deadlock_iCachePRqStuck_get ;

  // actionvalue method deadlock_renameInstStuck_get
  assign deadlock_renameInstStuck_get = 72'hAAAAAAAAAAAAAAAAAA ;
  assign RDY_deadlock_renameInstStuck_get = 1'd0 ;
  assign CAN_FIRE_deadlock_renameInstStuck_get = 1'd0 ;
  assign WILL_FIRE_deadlock_renameInstStuck_get =
	     EN_deadlock_renameInstStuck_get ;

  // actionvalue method deadlock_renameCorrectPathStuck_get
  assign deadlock_renameCorrectPathStuck_get = 72'hAAAAAAAAAAAAAAAAAA ;
  assign RDY_deadlock_renameCorrectPathStuck_get = 1'd0 ;
  assign CAN_FIRE_deadlock_renameCorrectPathStuck_get = 1'd0 ;
  assign WILL_FIRE_deadlock_renameCorrectPathStuck_get =
	     EN_deadlock_renameCorrectPathStuck_get ;

  // actionvalue method deadlock_commitInstStuck_get
  assign deadlock_commitInstStuck_get =
	     155'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA ;
  assign RDY_deadlock_commitInstStuck_get = 1'd0 ;
  assign CAN_FIRE_deadlock_commitInstStuck_get = 1'd0 ;
  assign WILL_FIRE_deadlock_commitInstStuck_get =
	     EN_deadlock_commitInstStuck_get ;

  // actionvalue method deadlock_commitUserInstStuck_get
  assign deadlock_commitUserInstStuck_get =
	     155'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA ;
  assign RDY_deadlock_commitUserInstStuck_get = 1'd0 ;
  assign CAN_FIRE_deadlock_commitUserInstStuck_get = 1'd0 ;
  assign WILL_FIRE_deadlock_commitUserInstStuck_get =
	     EN_deadlock_commitUserInstStuck_get ;

  // action method deadlock_checkStarted_get
  assign RDY_deadlock_checkStarted_get = 1'd0 ;
  assign CAN_FIRE_deadlock_checkStarted_get = 1'd0 ;
  assign WILL_FIRE_deadlock_checkStarted_get = EN_deadlock_checkStarted_get ;

  // actionvalue method renameDebug_renameErr_get
  assign renameDebug_renameErr_get = 81'h0AAAAAAAAAAAAAAAAAAAA ;
  assign RDY_renameDebug_renameErr_get = 1'd0 ;
  assign CAN_FIRE_renameDebug_renameErr_get = 1'd0 ;
  assign WILL_FIRE_renameDebug_renameErr_get = EN_renameDebug_renameErr_get ;

  // action method setMEIP
  assign RDY_setMEIP = 1'd1 ;
  assign CAN_FIRE_setMEIP = 1'd1 ;
  assign WILL_FIRE_setMEIP = EN_setMEIP ;

  // action method setSEIP
  assign RDY_setSEIP = 1'd1 ;
  assign CAN_FIRE_setSEIP = 1'd1 ;
  assign WILL_FIRE_setSEIP = EN_setSEIP ;

  // action method hart0_run_halt_server_request_put
  assign RDY_hart0_run_halt_server_request_put = f_run_halt_reqs$FULL_N ;
  assign CAN_FIRE_hart0_run_halt_server_request_put = f_run_halt_reqs$FULL_N ;
  assign WILL_FIRE_hart0_run_halt_server_request_put =
	     EN_hart0_run_halt_server_request_put ;

  // actionvalue method hart0_run_halt_server_response_get
  assign hart0_run_halt_server_response_get = f_run_halt_rsps$D_OUT ;
  assign RDY_hart0_run_halt_server_response_get = f_run_halt_rsps$EMPTY_N ;
  assign CAN_FIRE_hart0_run_halt_server_response_get =
	     f_run_halt_rsps$EMPTY_N ;
  assign WILL_FIRE_hart0_run_halt_server_response_get =
	     EN_hart0_run_halt_server_response_get ;

  // action method hart0_gpr_mem_server_request_put
  assign RDY_hart0_gpr_mem_server_request_put = f_gpr_reqs$FULL_N ;
  assign CAN_FIRE_hart0_gpr_mem_server_request_put = f_gpr_reqs$FULL_N ;
  assign WILL_FIRE_hart0_gpr_mem_server_request_put =
	     EN_hart0_gpr_mem_server_request_put ;

  // actionvalue method hart0_gpr_mem_server_response_get
  assign hart0_gpr_mem_server_response_get = f_gpr_rsps$D_OUT ;
  assign RDY_hart0_gpr_mem_server_response_get = f_gpr_rsps$EMPTY_N ;
  assign CAN_FIRE_hart0_gpr_mem_server_response_get = f_gpr_rsps$EMPTY_N ;
  assign WILL_FIRE_hart0_gpr_mem_server_response_get =
	     EN_hart0_gpr_mem_server_response_get ;

  // action method hart0_fpr_mem_server_request_put
  assign RDY_hart0_fpr_mem_server_request_put = f_fpr_reqs$FULL_N ;
  assign CAN_FIRE_hart0_fpr_mem_server_request_put = f_fpr_reqs$FULL_N ;
  assign WILL_FIRE_hart0_fpr_mem_server_request_put =
	     EN_hart0_fpr_mem_server_request_put ;

  // actionvalue method hart0_fpr_mem_server_response_get
  assign hart0_fpr_mem_server_response_get = f_fpr_rsps$D_OUT ;
  assign RDY_hart0_fpr_mem_server_response_get = f_fpr_rsps$EMPTY_N ;
  assign CAN_FIRE_hart0_fpr_mem_server_response_get = f_fpr_rsps$EMPTY_N ;
  assign WILL_FIRE_hart0_fpr_mem_server_response_get =
	     EN_hart0_fpr_mem_server_response_get ;

  // action method hart0_csr_mem_server_request_put
  assign RDY_hart0_csr_mem_server_request_put = f_csr_reqs$FULL_N ;
  assign CAN_FIRE_hart0_csr_mem_server_request_put = f_csr_reqs$FULL_N ;
  assign WILL_FIRE_hart0_csr_mem_server_request_put =
	     EN_hart0_csr_mem_server_request_put ;

  // actionvalue method hart0_csr_mem_server_response_get
  assign hart0_csr_mem_server_response_get = f_csr_rsps$D_OUT ;
  assign RDY_hart0_csr_mem_server_response_get = f_csr_rsps$EMPTY_N ;
  assign CAN_FIRE_hart0_csr_mem_server_response_get = f_csr_rsps$EMPTY_N ;
  assign WILL_FIRE_hart0_csr_mem_server_response_get =
	     EN_hart0_csr_mem_server_response_get ;

  // submodule coreFix_aluExe_0_dispToRegQ
  mkAluDispToRegFifo coreFix_aluExe_0_dispToRegQ(.CLK(CLK),
						 .RST_N(RST_N),
						 .enq_x(coreFix_aluExe_0_dispToRegQ$enq_x),
						 .specUpdate_correctSpeculation_mask(coreFix_aluExe_0_dispToRegQ$specUpdate_correctSpeculation_mask),
						 .specUpdate_incorrectSpeculation_kill_all(coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all),
						 .specUpdate_incorrectSpeculation_kill_tag(coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag),
						 .EN_enq(coreFix_aluExe_0_dispToRegQ$EN_enq),
						 .EN_deq(coreFix_aluExe_0_dispToRegQ$EN_deq),
						 .EN_specUpdate_incorrectSpeculation(coreFix_aluExe_0_dispToRegQ$EN_specUpdate_incorrectSpeculation),
						 .EN_specUpdate_correctSpeculation(coreFix_aluExe_0_dispToRegQ$EN_specUpdate_correctSpeculation),
						 .RDY_enq(coreFix_aluExe_0_dispToRegQ$RDY_enq),
						 .RDY_deq(coreFix_aluExe_0_dispToRegQ$RDY_deq),
						 .first(coreFix_aluExe_0_dispToRegQ$first),
						 .RDY_first(coreFix_aluExe_0_dispToRegQ$RDY_first),
						 .RDY_specUpdate_incorrectSpeculation(),
						 .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_aluExe_0_exeToFinQ
  mkAluExeToFinFifo coreFix_aluExe_0_exeToFinQ(.CLK(CLK),
					       .RST_N(RST_N),
					       .enq_x(coreFix_aluExe_0_exeToFinQ$enq_x),
					       .specUpdate_correctSpeculation_mask(coreFix_aluExe_0_exeToFinQ$specUpdate_correctSpeculation_mask),
					       .specUpdate_incorrectSpeculation_kill_all(coreFix_aluExe_0_exeToFinQ$specUpdate_incorrectSpeculation_kill_all),
					       .specUpdate_incorrectSpeculation_kill_tag(coreFix_aluExe_0_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag),
					       .EN_enq(coreFix_aluExe_0_exeToFinQ$EN_enq),
					       .EN_deq(coreFix_aluExe_0_exeToFinQ$EN_deq),
					       .EN_specUpdate_incorrectSpeculation(coreFix_aluExe_0_exeToFinQ$EN_specUpdate_incorrectSpeculation),
					       .EN_specUpdate_correctSpeculation(coreFix_aluExe_0_exeToFinQ$EN_specUpdate_correctSpeculation),
					       .RDY_enq(coreFix_aluExe_0_exeToFinQ$RDY_enq),
					       .RDY_deq(coreFix_aluExe_0_exeToFinQ$RDY_deq),
					       .first(coreFix_aluExe_0_exeToFinQ$first),
					       .RDY_first(coreFix_aluExe_0_exeToFinQ$RDY_first),
					       .RDY_specUpdate_incorrectSpeculation(),
					       .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_aluExe_0_regToExeQ
  mkAluRegToExeFifo coreFix_aluExe_0_regToExeQ(.CLK(CLK),
					       .RST_N(RST_N),
					       .enq_x(coreFix_aluExe_0_regToExeQ$enq_x),
					       .specUpdate_correctSpeculation_mask(coreFix_aluExe_0_regToExeQ$specUpdate_correctSpeculation_mask),
					       .specUpdate_incorrectSpeculation_kill_all(coreFix_aluExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_all),
					       .specUpdate_incorrectSpeculation_kill_tag(coreFix_aluExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag),
					       .EN_enq(coreFix_aluExe_0_regToExeQ$EN_enq),
					       .EN_deq(coreFix_aluExe_0_regToExeQ$EN_deq),
					       .EN_specUpdate_incorrectSpeculation(coreFix_aluExe_0_regToExeQ$EN_specUpdate_incorrectSpeculation),
					       .EN_specUpdate_correctSpeculation(coreFix_aluExe_0_regToExeQ$EN_specUpdate_correctSpeculation),
					       .RDY_enq(coreFix_aluExe_0_regToExeQ$RDY_enq),
					       .RDY_deq(coreFix_aluExe_0_regToExeQ$RDY_deq),
					       .first(coreFix_aluExe_0_regToExeQ$first),
					       .RDY_first(coreFix_aluExe_0_regToExeQ$RDY_first),
					       .RDY_specUpdate_incorrectSpeculation(),
					       .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_aluExe_0_rsAlu
  mkReservationStationAlu coreFix_aluExe_0_rsAlu(.CLK(CLK),
						 .RST_N(RST_N),
						 .enq_x(coreFix_aluExe_0_rsAlu$enq_x),
						 .setRegReady_0_put(coreFix_aluExe_0_rsAlu$setRegReady_0_put),
						 .setRegReady_1_put(coreFix_aluExe_0_rsAlu$setRegReady_1_put),
						 .setRegReady_2_put(coreFix_aluExe_0_rsAlu$setRegReady_2_put),
						 .setRegReady_3_put(coreFix_aluExe_0_rsAlu$setRegReady_3_put),
						 .setRegReady_4_put(coreFix_aluExe_0_rsAlu$setRegReady_4_put),
						 .setRobEnqTime_t(coreFix_aluExe_0_rsAlu$setRobEnqTime_t),
						 .specUpdate_correctSpeculation_mask(coreFix_aluExe_0_rsAlu$specUpdate_correctSpeculation_mask),
						 .specUpdate_incorrectSpeculation_kill_all(coreFix_aluExe_0_rsAlu$specUpdate_incorrectSpeculation_kill_all),
						 .specUpdate_incorrectSpeculation_kill_tag(coreFix_aluExe_0_rsAlu$specUpdate_incorrectSpeculation_kill_tag),
						 .EN_enq(coreFix_aluExe_0_rsAlu$EN_enq),
						 .EN_setRobEnqTime(coreFix_aluExe_0_rsAlu$EN_setRobEnqTime),
						 .EN_doDispatch(coreFix_aluExe_0_rsAlu$EN_doDispatch),
						 .EN_setRegReady_0_put(coreFix_aluExe_0_rsAlu$EN_setRegReady_0_put),
						 .EN_setRegReady_1_put(coreFix_aluExe_0_rsAlu$EN_setRegReady_1_put),
						 .EN_setRegReady_2_put(coreFix_aluExe_0_rsAlu$EN_setRegReady_2_put),
						 .EN_setRegReady_3_put(coreFix_aluExe_0_rsAlu$EN_setRegReady_3_put),
						 .EN_setRegReady_4_put(coreFix_aluExe_0_rsAlu$EN_setRegReady_4_put),
						 .EN_specUpdate_incorrectSpeculation(coreFix_aluExe_0_rsAlu$EN_specUpdate_incorrectSpeculation),
						 .EN_specUpdate_correctSpeculation(coreFix_aluExe_0_rsAlu$EN_specUpdate_correctSpeculation),
						 .RDY_enq(coreFix_aluExe_0_rsAlu$RDY_enq),
						 .canEnq(coreFix_aluExe_0_rsAlu$canEnq),
						 .RDY_canEnq(),
						 .RDY_setRobEnqTime(),
						 .dispatchData(coreFix_aluExe_0_rsAlu$dispatchData),
						 .RDY_dispatchData(coreFix_aluExe_0_rsAlu$RDY_dispatchData),
						 .RDY_doDispatch(coreFix_aluExe_0_rsAlu$RDY_doDispatch),
						 .RDY_setRegReady_0_put(),
						 .RDY_setRegReady_1_put(),
						 .RDY_setRegReady_2_put(),
						 .RDY_setRegReady_3_put(),
						 .RDY_setRegReady_4_put(),
						 .approximateCount(coreFix_aluExe_0_rsAlu$approximateCount),
						 .RDY_approximateCount(),
						 .isFull_ehrPort0(),
						 .RDY_isFull_ehrPort0(),
						 .RDY_specUpdate_incorrectSpeculation(),
						 .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_aluExe_1_dispToRegQ
  mkAluDispToRegFifo coreFix_aluExe_1_dispToRegQ(.CLK(CLK),
						 .RST_N(RST_N),
						 .enq_x(coreFix_aluExe_1_dispToRegQ$enq_x),
						 .specUpdate_correctSpeculation_mask(coreFix_aluExe_1_dispToRegQ$specUpdate_correctSpeculation_mask),
						 .specUpdate_incorrectSpeculation_kill_all(coreFix_aluExe_1_dispToRegQ$specUpdate_incorrectSpeculation_kill_all),
						 .specUpdate_incorrectSpeculation_kill_tag(coreFix_aluExe_1_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag),
						 .EN_enq(coreFix_aluExe_1_dispToRegQ$EN_enq),
						 .EN_deq(coreFix_aluExe_1_dispToRegQ$EN_deq),
						 .EN_specUpdate_incorrectSpeculation(coreFix_aluExe_1_dispToRegQ$EN_specUpdate_incorrectSpeculation),
						 .EN_specUpdate_correctSpeculation(coreFix_aluExe_1_dispToRegQ$EN_specUpdate_correctSpeculation),
						 .RDY_enq(coreFix_aluExe_1_dispToRegQ$RDY_enq),
						 .RDY_deq(coreFix_aluExe_1_dispToRegQ$RDY_deq),
						 .first(coreFix_aluExe_1_dispToRegQ$first),
						 .RDY_first(coreFix_aluExe_1_dispToRegQ$RDY_first),
						 .RDY_specUpdate_incorrectSpeculation(),
						 .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_aluExe_1_exeToFinQ
  mkAluExeToFinFifo coreFix_aluExe_1_exeToFinQ(.CLK(CLK),
					       .RST_N(RST_N),
					       .enq_x(coreFix_aluExe_1_exeToFinQ$enq_x),
					       .specUpdate_correctSpeculation_mask(coreFix_aluExe_1_exeToFinQ$specUpdate_correctSpeculation_mask),
					       .specUpdate_incorrectSpeculation_kill_all(coreFix_aluExe_1_exeToFinQ$specUpdate_incorrectSpeculation_kill_all),
					       .specUpdate_incorrectSpeculation_kill_tag(coreFix_aluExe_1_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag),
					       .EN_enq(coreFix_aluExe_1_exeToFinQ$EN_enq),
					       .EN_deq(coreFix_aluExe_1_exeToFinQ$EN_deq),
					       .EN_specUpdate_incorrectSpeculation(coreFix_aluExe_1_exeToFinQ$EN_specUpdate_incorrectSpeculation),
					       .EN_specUpdate_correctSpeculation(coreFix_aluExe_1_exeToFinQ$EN_specUpdate_correctSpeculation),
					       .RDY_enq(coreFix_aluExe_1_exeToFinQ$RDY_enq),
					       .RDY_deq(coreFix_aluExe_1_exeToFinQ$RDY_deq),
					       .first(coreFix_aluExe_1_exeToFinQ$first),
					       .RDY_first(coreFix_aluExe_1_exeToFinQ$RDY_first),
					       .RDY_specUpdate_incorrectSpeculation(),
					       .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_aluExe_1_regToExeQ
  mkAluRegToExeFifo coreFix_aluExe_1_regToExeQ(.CLK(CLK),
					       .RST_N(RST_N),
					       .enq_x(coreFix_aluExe_1_regToExeQ$enq_x),
					       .specUpdate_correctSpeculation_mask(coreFix_aluExe_1_regToExeQ$specUpdate_correctSpeculation_mask),
					       .specUpdate_incorrectSpeculation_kill_all(coreFix_aluExe_1_regToExeQ$specUpdate_incorrectSpeculation_kill_all),
					       .specUpdate_incorrectSpeculation_kill_tag(coreFix_aluExe_1_regToExeQ$specUpdate_incorrectSpeculation_kill_tag),
					       .EN_enq(coreFix_aluExe_1_regToExeQ$EN_enq),
					       .EN_deq(coreFix_aluExe_1_regToExeQ$EN_deq),
					       .EN_specUpdate_incorrectSpeculation(coreFix_aluExe_1_regToExeQ$EN_specUpdate_incorrectSpeculation),
					       .EN_specUpdate_correctSpeculation(coreFix_aluExe_1_regToExeQ$EN_specUpdate_correctSpeculation),
					       .RDY_enq(coreFix_aluExe_1_regToExeQ$RDY_enq),
					       .RDY_deq(coreFix_aluExe_1_regToExeQ$RDY_deq),
					       .first(coreFix_aluExe_1_regToExeQ$first),
					       .RDY_first(coreFix_aluExe_1_regToExeQ$RDY_first),
					       .RDY_specUpdate_incorrectSpeculation(),
					       .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_aluExe_1_rsAlu
  mkReservationStationAlu coreFix_aluExe_1_rsAlu(.CLK(CLK),
						 .RST_N(RST_N),
						 .enq_x(coreFix_aluExe_1_rsAlu$enq_x),
						 .setRegReady_0_put(coreFix_aluExe_1_rsAlu$setRegReady_0_put),
						 .setRegReady_1_put(coreFix_aluExe_1_rsAlu$setRegReady_1_put),
						 .setRegReady_2_put(coreFix_aluExe_1_rsAlu$setRegReady_2_put),
						 .setRegReady_3_put(coreFix_aluExe_1_rsAlu$setRegReady_3_put),
						 .setRegReady_4_put(coreFix_aluExe_1_rsAlu$setRegReady_4_put),
						 .setRobEnqTime_t(coreFix_aluExe_1_rsAlu$setRobEnqTime_t),
						 .specUpdate_correctSpeculation_mask(coreFix_aluExe_1_rsAlu$specUpdate_correctSpeculation_mask),
						 .specUpdate_incorrectSpeculation_kill_all(coreFix_aluExe_1_rsAlu$specUpdate_incorrectSpeculation_kill_all),
						 .specUpdate_incorrectSpeculation_kill_tag(coreFix_aluExe_1_rsAlu$specUpdate_incorrectSpeculation_kill_tag),
						 .EN_enq(coreFix_aluExe_1_rsAlu$EN_enq),
						 .EN_setRobEnqTime(coreFix_aluExe_1_rsAlu$EN_setRobEnqTime),
						 .EN_doDispatch(coreFix_aluExe_1_rsAlu$EN_doDispatch),
						 .EN_setRegReady_0_put(coreFix_aluExe_1_rsAlu$EN_setRegReady_0_put),
						 .EN_setRegReady_1_put(coreFix_aluExe_1_rsAlu$EN_setRegReady_1_put),
						 .EN_setRegReady_2_put(coreFix_aluExe_1_rsAlu$EN_setRegReady_2_put),
						 .EN_setRegReady_3_put(coreFix_aluExe_1_rsAlu$EN_setRegReady_3_put),
						 .EN_setRegReady_4_put(coreFix_aluExe_1_rsAlu$EN_setRegReady_4_put),
						 .EN_specUpdate_incorrectSpeculation(coreFix_aluExe_1_rsAlu$EN_specUpdate_incorrectSpeculation),
						 .EN_specUpdate_correctSpeculation(coreFix_aluExe_1_rsAlu$EN_specUpdate_correctSpeculation),
						 .RDY_enq(coreFix_aluExe_1_rsAlu$RDY_enq),
						 .canEnq(coreFix_aluExe_1_rsAlu$canEnq),
						 .RDY_canEnq(),
						 .RDY_setRobEnqTime(),
						 .dispatchData(coreFix_aluExe_1_rsAlu$dispatchData),
						 .RDY_dispatchData(coreFix_aluExe_1_rsAlu$RDY_dispatchData),
						 .RDY_doDispatch(coreFix_aluExe_1_rsAlu$RDY_doDispatch),
						 .RDY_setRegReady_0_put(),
						 .RDY_setRegReady_1_put(),
						 .RDY_setRegReady_2_put(),
						 .RDY_setRegReady_3_put(),
						 .RDY_setRegReady_4_put(),
						 .approximateCount(coreFix_aluExe_1_rsAlu$approximateCount),
						 .RDY_approximateCount(),
						 .isFull_ehrPort0(),
						 .RDY_isFull_ehrPort0(),
						 .RDY_specUpdate_incorrectSpeculation(),
						 .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_fpuMulDivExe_0_dispToRegQ
  mkFpuMulDivDispToRegFifo coreFix_fpuMulDivExe_0_dispToRegQ(.CLK(CLK),
							     .RST_N(RST_N),
							     .enq_x(coreFix_fpuMulDivExe_0_dispToRegQ$enq_x),
							     .specUpdate_correctSpeculation_mask(coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_correctSpeculation_mask),
							     .specUpdate_incorrectSpeculation_kill_all(coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all),
							     .specUpdate_incorrectSpeculation_kill_tag(coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag),
							     .EN_enq(coreFix_fpuMulDivExe_0_dispToRegQ$EN_enq),
							     .EN_deq(coreFix_fpuMulDivExe_0_dispToRegQ$EN_deq),
							     .EN_specUpdate_incorrectSpeculation(coreFix_fpuMulDivExe_0_dispToRegQ$EN_specUpdate_incorrectSpeculation),
							     .EN_specUpdate_correctSpeculation(coreFix_fpuMulDivExe_0_dispToRegQ$EN_specUpdate_correctSpeculation),
							     .RDY_enq(coreFix_fpuMulDivExe_0_dispToRegQ$RDY_enq),
							     .RDY_deq(coreFix_fpuMulDivExe_0_dispToRegQ$RDY_deq),
							     .first(coreFix_fpuMulDivExe_0_dispToRegQ$first),
							     .RDY_first(coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first),
							     .RDY_specUpdate_incorrectSpeculation(),
							     .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_fpuMulDivExe_0_fpuExec_divQ
  mkMinimumExecQ coreFix_fpuMulDivExe_0_fpuExec_divQ(.CLK(CLK),
						     .RST_N(RST_N),
						     .enq_x(coreFix_fpuMulDivExe_0_fpuExec_divQ$enq_x),
						     .specUpdate_correctSpeculation_mask(coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_correctSpeculation_mask),
						     .specUpdate_incorrectSpeculation_kill_all(coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_incorrectSpeculation_kill_all),
						     .specUpdate_incorrectSpeculation_kill_tag(coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_incorrectSpeculation_kill_tag),
						     .EN_enq(coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_enq),
						     .EN_deq(coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_deq),
						     .EN_specUpdate_incorrectSpeculation(coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_specUpdate_incorrectSpeculation),
						     .EN_specUpdate_correctSpeculation(coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_specUpdate_correctSpeculation),
						     .RDY_enq(coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_enq),
						     .RDY_deq(coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_deq),
						     .first_data(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data),
						     .RDY_first_data(coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_first_data),
						     .first_poisoned(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_poisoned),
						     .RDY_first_poisoned(coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_first_poisoned),
						     .RDY_specUpdate_incorrectSpeculation(),
						     .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_fpuMulDivExe_0_fpuExec_double_div
  mkDoubleDiv coreFix_fpuMulDivExe_0_fpuExec_double_div(.CLK(CLK),
							.RST_N(RST_N),
							.request_put(coreFix_fpuMulDivExe_0_fpuExec_double_div$request_put),
							.EN_request_put(coreFix_fpuMulDivExe_0_fpuExec_double_div$EN_request_put),
							.EN_response_get(coreFix_fpuMulDivExe_0_fpuExec_double_div$EN_response_get),
							.RDY_request_put(coreFix_fpuMulDivExe_0_fpuExec_double_div$RDY_request_put),
							.response_get(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get),
							.RDY_response_get(coreFix_fpuMulDivExe_0_fpuExec_double_div$RDY_response_get));

  // submodule coreFix_fpuMulDivExe_0_fpuExec_double_fma
  mkDoubleFMA coreFix_fpuMulDivExe_0_fpuExec_double_fma(.CLK(CLK),
							.RST_N(RST_N),
							.request_put(coreFix_fpuMulDivExe_0_fpuExec_double_fma$request_put),
							.EN_request_put(coreFix_fpuMulDivExe_0_fpuExec_double_fma$EN_request_put),
							.EN_response_get(coreFix_fpuMulDivExe_0_fpuExec_double_fma$EN_response_get),
							.RDY_request_put(coreFix_fpuMulDivExe_0_fpuExec_double_fma$RDY_request_put),
							.response_get(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get),
							.RDY_response_get(coreFix_fpuMulDivExe_0_fpuExec_double_fma$RDY_response_get));

  // submodule coreFix_fpuMulDivExe_0_fpuExec_double_sqrt
  mkDoubleSqrt coreFix_fpuMulDivExe_0_fpuExec_double_sqrt(.CLK(CLK),
							  .RST_N(RST_N),
							  .request_put(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$request_put),
							  .EN_request_put(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$EN_request_put),
							  .EN_response_get(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$EN_response_get),
							  .RDY_request_put(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$RDY_request_put),
							  .response_get(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get),
							  .RDY_response_get(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$RDY_response_get));

  // submodule coreFix_fpuMulDivExe_0_fpuExec_fmaQ
  mkFmaExecQ coreFix_fpuMulDivExe_0_fpuExec_fmaQ(.CLK(CLK),
						 .RST_N(RST_N),
						 .enq_x(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$enq_x),
						 .specUpdate_correctSpeculation_mask(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_correctSpeculation_mask),
						 .specUpdate_incorrectSpeculation_kill_all(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_incorrectSpeculation_kill_all),
						 .specUpdate_incorrectSpeculation_kill_tag(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_incorrectSpeculation_kill_tag),
						 .EN_enq(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_enq),
						 .EN_deq(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_deq),
						 .EN_specUpdate_incorrectSpeculation(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_specUpdate_incorrectSpeculation),
						 .EN_specUpdate_correctSpeculation(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_specUpdate_correctSpeculation),
						 .RDY_enq(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_enq),
						 .RDY_deq(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_deq),
						 .first_data(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data),
						 .RDY_first_data(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_first_data),
						 .first_poisoned(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_poisoned),
						 .RDY_first_poisoned(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_first_poisoned),
						 .RDY_specUpdate_incorrectSpeculation(),
						 .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_fpuMulDivExe_0_fpuExec_simpleQ
  mkSimpleRespQ coreFix_fpuMulDivExe_0_fpuExec_simpleQ(.CLK(CLK),
						       .RST_N(RST_N),
						       .enq_x(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$enq_x),
						       .specUpdate_correctSpeculation_mask(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_correctSpeculation_mask),
						       .specUpdate_incorrectSpeculation_kill_all(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_incorrectSpeculation_kill_all),
						       .specUpdate_incorrectSpeculation_kill_tag(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_incorrectSpeculation_kill_tag),
						       .EN_enq(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_enq),
						       .EN_deq(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_deq),
						       .EN_specUpdate_incorrectSpeculation(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_specUpdate_incorrectSpeculation),
						       .EN_specUpdate_correctSpeculation(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_specUpdate_correctSpeculation),
						       .RDY_enq(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_enq),
						       .RDY_deq(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_deq),
						       .first(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first),
						       .RDY_first(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_first),
						       .RDY_specUpdate_incorrectSpeculation(),
						       .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_fpuMulDivExe_0_fpuExec_sqrtQ
  mkMinimumExecQ coreFix_fpuMulDivExe_0_fpuExec_sqrtQ(.CLK(CLK),
						      .RST_N(RST_N),
						      .enq_x(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$enq_x),
						      .specUpdate_correctSpeculation_mask(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_correctSpeculation_mask),
						      .specUpdate_incorrectSpeculation_kill_all(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_incorrectSpeculation_kill_all),
						      .specUpdate_incorrectSpeculation_kill_tag(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_incorrectSpeculation_kill_tag),
						      .EN_enq(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_enq),
						      .EN_deq(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_deq),
						      .EN_specUpdate_incorrectSpeculation(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_specUpdate_incorrectSpeculation),
						      .EN_specUpdate_correctSpeculation(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_specUpdate_correctSpeculation),
						      .RDY_enq(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_enq),
						      .RDY_deq(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_deq),
						      .first_data(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data),
						      .RDY_first_data(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_first_data),
						      .first_poisoned(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_poisoned),
						      .RDY_first_poisoned(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_first_poisoned),
						      .RDY_specUpdate_incorrectSpeculation(),
						      .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_divQ
  mkDivExecQ coreFix_fpuMulDivExe_0_mulDivExec_divQ(.CLK(CLK),
						    .RST_N(RST_N),
						    .enq_x(coreFix_fpuMulDivExe_0_mulDivExec_divQ$enq_x),
						    .specUpdate_correctSpeculation_mask(coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_correctSpeculation_mask),
						    .specUpdate_incorrectSpeculation_kill_all(coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_incorrectSpeculation_kill_all),
						    .specUpdate_incorrectSpeculation_kill_tag(coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_incorrectSpeculation_kill_tag),
						    .EN_enq(coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_enq),
						    .EN_deq(coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_deq),
						    .EN_specUpdate_incorrectSpeculation(coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_specUpdate_incorrectSpeculation),
						    .EN_specUpdate_correctSpeculation(coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_specUpdate_correctSpeculation),
						    .RDY_enq(coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_enq),
						    .RDY_deq(coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_deq),
						    .first_data(coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data),
						    .RDY_first_data(coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_first_data),
						    .first_poisoned(coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_poisoned),
						    .RDY_first_poisoned(coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_first_poisoned),
						    .RDY_specUpdate_incorrectSpeculation(),
						    .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc
  int_div_unsigned coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc(.aclk(CLK),
								    .s_axis_dividend_tdata(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$s_axis_dividend_tdata),
								    .s_axis_dividend_tuser(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$s_axis_dividend_tuser),
								    .s_axis_divisor_tdata(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$s_axis_divisor_tdata),
								    .s_axis_dividend_tvalid(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$s_axis_dividend_tvalid),
								    .s_axis_divisor_tvalid(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$s_axis_divisor_tvalid),
								    .m_axis_dout_tready(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$m_axis_dout_tready),
								    .s_axis_dividend_tready(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$s_axis_dividend_tready),
								    .s_axis_divisor_tready(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$s_axis_divisor_tready),
								    .m_axis_dout_tvalid(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$m_axis_dout_tvalid),
								    .m_axis_dout_tdata(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$m_axis_dout_tdata),
								    .m_axis_dout_tuser(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$m_axis_dout_tuser));

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg
  reset_guard coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg(.CLK(CLK),
								.RST(RST_N),
								.IS_READY(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg$IS_READY));

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_mulQ
  mkMulExecQ coreFix_fpuMulDivExe_0_mulDivExec_mulQ(.CLK(CLK),
						    .RST_N(RST_N),
						    .enq_x(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$enq_x),
						    .specUpdate_correctSpeculation_mask(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_correctSpeculation_mask),
						    .specUpdate_incorrectSpeculation_kill_all(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_incorrectSpeculation_kill_all),
						    .specUpdate_incorrectSpeculation_kill_tag(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_incorrectSpeculation_kill_tag),
						    .EN_enq(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_enq),
						    .EN_deq(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_deq),
						    .EN_specUpdate_incorrectSpeculation(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_specUpdate_incorrectSpeculation),
						    .EN_specUpdate_correctSpeculation(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_specUpdate_correctSpeculation),
						    .RDY_enq(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_enq),
						    .RDY_deq(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_deq),
						    .first_data(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data),
						    .RDY_first_data(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_first_data),
						    .first_poisoned(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_poisoned),
						    .RDY_first_poisoned(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_first_poisoned),
						    .RDY_specUpdate_incorrectSpeculation(),
						    .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned
  int_mul_signed coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned(.CLK(CLK),
								     .A(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned$A),
								     .B(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned$B),
								     .P(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned$P));

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned
  int_mul_signed_unsigned coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned(.CLK(CLK),
										      .A(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned$A),
										      .B(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned$B),
										      .P(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned$P));

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned
  int_mul_unsigned coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned(.CLK(CLK),
									 .A(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned$A),
									 .B(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned$B),
									 .P(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned$P));

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ
  SizedFIFO #(.p1width(32'd128),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(32'd0)) coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ(.RST(RST_N),
									       .CLK(CLK),
									       .D_IN(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$D_IN),
									       .ENQ(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$ENQ),
									       .DEQ(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$DEQ),
									       .CLR(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$CLR),
									       .D_OUT(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$D_OUT),
									       .FULL_N(),
									       .EMPTY_N(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$EMPTY_N));

  // submodule coreFix_fpuMulDivExe_0_regToExeQ
  mkFpuMulDivRegToExeFifo coreFix_fpuMulDivExe_0_regToExeQ(.CLK(CLK),
							   .RST_N(RST_N),
							   .enq_x(coreFix_fpuMulDivExe_0_regToExeQ$enq_x),
							   .specUpdate_correctSpeculation_mask(coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_correctSpeculation_mask),
							   .specUpdate_incorrectSpeculation_kill_all(coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_all),
							   .specUpdate_incorrectSpeculation_kill_tag(coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag),
							   .EN_enq(coreFix_fpuMulDivExe_0_regToExeQ$EN_enq),
							   .EN_deq(coreFix_fpuMulDivExe_0_regToExeQ$EN_deq),
							   .EN_specUpdate_incorrectSpeculation(coreFix_fpuMulDivExe_0_regToExeQ$EN_specUpdate_incorrectSpeculation),
							   .EN_specUpdate_correctSpeculation(coreFix_fpuMulDivExe_0_regToExeQ$EN_specUpdate_correctSpeculation),
							   .RDY_enq(coreFix_fpuMulDivExe_0_regToExeQ$RDY_enq),
							   .RDY_deq(coreFix_fpuMulDivExe_0_regToExeQ$RDY_deq),
							   .first(coreFix_fpuMulDivExe_0_regToExeQ$first),
							   .RDY_first(coreFix_fpuMulDivExe_0_regToExeQ$RDY_first),
							   .RDY_specUpdate_incorrectSpeculation(),
							   .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_fpuMulDivExe_0_rsFpuMulDiv
  mkReservationStationFpuMulDiv coreFix_fpuMulDivExe_0_rsFpuMulDiv(.CLK(CLK),
								   .RST_N(RST_N),
								   .enq_x(coreFix_fpuMulDivExe_0_rsFpuMulDiv$enq_x),
								   .setRegReady_0_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_0_put),
								   .setRegReady_1_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_1_put),
								   .setRegReady_2_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_2_put),
								   .setRegReady_3_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_3_put),
								   .setRegReady_4_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put),
								   .setRobEnqTime_t(coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRobEnqTime_t),
								   .specUpdate_correctSpeculation_mask(coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_correctSpeculation_mask),
								   .specUpdate_incorrectSpeculation_kill_all(coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_incorrectSpeculation_kill_all),
								   .specUpdate_incorrectSpeculation_kill_tag(coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_incorrectSpeculation_kill_tag),
								   .EN_enq(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_enq),
								   .EN_setRobEnqTime(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRobEnqTime),
								   .EN_doDispatch(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_doDispatch),
								   .EN_setRegReady_0_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_0_put),
								   .EN_setRegReady_1_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_1_put),
								   .EN_setRegReady_2_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_2_put),
								   .EN_setRegReady_3_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_3_put),
								   .EN_setRegReady_4_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_4_put),
								   .EN_specUpdate_incorrectSpeculation(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_specUpdate_incorrectSpeculation),
								   .EN_specUpdate_correctSpeculation(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_specUpdate_correctSpeculation),
								   .RDY_enq(coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_enq),
								   .canEnq(coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq),
								   .RDY_canEnq(),
								   .RDY_setRobEnqTime(),
								   .dispatchData(coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData),
								   .RDY_dispatchData(coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_dispatchData),
								   .RDY_doDispatch(coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_doDispatch),
								   .RDY_setRegReady_0_put(),
								   .RDY_setRegReady_1_put(),
								   .RDY_setRegReady_2_put(),
								   .RDY_setRegReady_3_put(),
								   .RDY_setRegReady_4_put(),
								   .approximateCount(),
								   .RDY_approximateCount(),
								   .isFull_ehrPort0(),
								   .RDY_isFull_ehrPort0(),
								   .RDY_specUpdate_incorrectSpeculation(),
								   .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqMshr
  mkDCRqMshrWrapper coreFix_memExe_dMem_cache_m_banks_0_cRqMshr(.CLK(CLK),
								.RST_N(RST_N),
								.cRqTransfer_getEmptyEntryInit_r(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getEmptyEntryInit_r),
								.cRqTransfer_getRq_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getRq_n),
								.pipelineResp_getRq_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq_n),
								.pipelineResp_getSlot_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSlot_n),
								.pipelineResp_getState_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState_n),
								.pipelineResp_getSucc_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc_n),
								.pipelineResp_releaseEntry_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_n),
								.pipelineResp_searchEndOfChain_addr(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain_addr),
								.pipelineResp_setData_d(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setData_d),
								.pipelineResp_setData_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setData_n),
								.pipelineResp_setStateSlot_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_n),
								.pipelineResp_setStateSlot_slot(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_slot),
								.pipelineResp_setStateSlot_state(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_state),
								.pipelineResp_setSucc_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setSucc_n),
								.pipelineResp_setSucc_succ(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setSucc_succ),
								.sendRqToP_getRq_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getRq_n),
								.sendRqToP_getSlot_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getSlot_n),
								.sendRsToP_cRq_getData_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getData_n),
								.sendRsToP_cRq_getRq_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getRq_n),
								.sendRsToP_cRq_getSlot_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getSlot_n),
								.sendRsToP_cRq_getState_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getState_n),
								.sendRsToP_cRq_setWaitSt_setSlot_clearData_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_setWaitSt_setSlot_clearData_n),
								.sendRsToP_cRq_setWaitSt_setSlot_clearData_slot(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_setWaitSt_setSlot_clearData_slot),
								.EN_cRqTransfer_getEmptyEntryInit(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_cRqTransfer_getEmptyEntryInit),
								.EN_sendRsToP_cRq_setWaitSt_setSlot_clearData(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_sendRsToP_cRq_setWaitSt_setSlot_clearData),
								.EN_pipelineResp_releaseEntry(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_releaseEntry),
								.EN_pipelineResp_setData(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_setData),
								.EN_pipelineResp_setStateSlot(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_setStateSlot),
								.EN_pipelineResp_setSucc(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_setSucc),
								.EN_stuck_get(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_stuck_get),
								.cRqTransfer_getRq(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getRq),
								.RDY_cRqTransfer_getRq(),
								.cRqTransfer_getEmptyEntryInit(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getEmptyEntryInit),
								.RDY_cRqTransfer_getEmptyEntryInit(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$RDY_cRqTransfer_getEmptyEntryInit),
								.sendRsToP_cRq_getState(),
								.RDY_sendRsToP_cRq_getState(),
								.sendRsToP_cRq_getRq(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getRq),
								.RDY_sendRsToP_cRq_getRq(),
								.sendRsToP_cRq_getSlot(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getSlot),
								.RDY_sendRsToP_cRq_getSlot(),
								.sendRsToP_cRq_getData(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getData),
								.RDY_sendRsToP_cRq_getData(),
								.RDY_sendRsToP_cRq_setWaitSt_setSlot_clearData(),
								.sendRqToP_getRq(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getRq),
								.RDY_sendRqToP_getRq(),
								.sendRqToP_getSlot(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getSlot),
								.RDY_sendRqToP_getSlot(),
								.RDY_pipelineResp_releaseEntry(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$RDY_pipelineResp_releaseEntry),
								.pipelineResp_getState(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState),
								.RDY_pipelineResp_getState(),
								.pipelineResp_getRq(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq),
								.RDY_pipelineResp_getRq(),
								.pipelineResp_getSlot(),
								.RDY_pipelineResp_getSlot(),
								.RDY_pipelineResp_setData(),
								.RDY_pipelineResp_setStateSlot(),
								.pipelineResp_getSucc(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc),
								.RDY_pipelineResp_getSucc(),
								.RDY_pipelineResp_setSucc(),
								.pipelineResp_searchEndOfChain(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain),
								.RDY_pipelineResp_searchEndOfChain(),
								.emptyForFlush(),
								.RDY_emptyForFlush(),
								.stuck_get(),
								.RDY_stuck_get());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_0(.CLK(CLK),
												.D_IN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_0$D_IN),
												.EN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_0$EN),
												.Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1(.CLK(CLK),
												.D_IN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1$D_IN),
												.EN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1$EN),
												.Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_0(.CLK(CLK),
											      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_0$D_IN),
											      .EN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_0$EN),
											      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_1(.CLK(CLK),
											      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_1$D_IN),
											      .EN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_1$EN),
											      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2(.CLK(CLK),
											      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2$D_IN),
											      .EN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2$EN),
											      .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_0(.CLK(CLK),
											      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_0$D_IN),
											      .EN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_0$EN),
											      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_1(.CLK(CLK),
											      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_1$D_IN),
											      .EN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_1$EN),
											      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2(.CLK(CLK),
											      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$D_IN),
											      .EN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$EN),
											      .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_0(.CLK(CLK),
											.D_IN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_0$D_IN),
											.EN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_0$EN),
											.Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1(.CLK(CLK),
											.D_IN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1$D_IN),
											.EN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1$EN),
											.Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_0(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_0$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_0$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_1(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_1$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_1$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2$EN),
										      .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_0(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_0$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_0$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_1(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_1$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_1$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$EN),
										      .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0(.CLK(CLK),
										    .D_IN(coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$D_IN),
										    .EN(coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$EN),
										    .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1(.CLK(CLK),
										    .D_IN(coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1$D_IN),
										    .EN(coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1$EN),
										    .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_pRqMshr
  mkDPRqMshrWrapper coreFix_memExe_dMem_cache_m_banks_0_pRqMshr(.CLK(CLK),
								.RST_N(RST_N),
								.getEmptyEntryInit_r(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$getEmptyEntryInit_r),
								.pipelineResp_getRq_n(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq_n),
								.pipelineResp_getState_n(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getState_n),
								.pipelineResp_releaseEntry_n(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_releaseEntry_n),
								.pipelineResp_setDone_setData_d(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_setDone_setData_d),
								.pipelineResp_setDone_setData_n(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_setDone_setData_n),
								.sendRsToP_pRq_getData_n(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getData_n),
								.sendRsToP_pRq_getRq_n(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getRq_n),
								.sendRsToP_pRq_releaseEntry_n(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_releaseEntry_n),
								.EN_getEmptyEntryInit(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_getEmptyEntryInit),
								.EN_sendRsToP_pRq_releaseEntry(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_sendRsToP_pRq_releaseEntry),
								.EN_pipelineResp_releaseEntry(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_pipelineResp_releaseEntry),
								.EN_pipelineResp_setDone_setData(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_pipelineResp_setDone_setData),
								.EN_stuck_get(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_stuck_get),
								.getEmptyEntryInit(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$getEmptyEntryInit),
								.RDY_getEmptyEntryInit(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$RDY_getEmptyEntryInit),
								.sendRsToP_pRq_getRq(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getRq),
								.RDY_sendRsToP_pRq_getRq(),
								.sendRsToP_pRq_getData(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getData),
								.RDY_sendRsToP_pRq_getData(),
								.RDY_sendRsToP_pRq_releaseEntry(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$RDY_sendRsToP_pRq_releaseEntry),
								.pipelineResp_getRq(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq),
								.RDY_pipelineResp_getRq(),
								.pipelineResp_getState(),
								.RDY_pipelineResp_getState(),
								.RDY_pipelineResp_releaseEntry(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$RDY_pipelineResp_releaseEntry),
								.RDY_pipelineResp_setDone_setData(),
								.stuck_get(),
								.RDY_stuck_get());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_pipeline
  mkDPipeline coreFix_memExe_dMem_cache_m_banks_0_pipeline(.CLK(CLK),
							   .RST_N(RST_N),
							   .deqWrite_swapRq(coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_swapRq),
							   .deqWrite_updateRep(coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_updateRep),
							   .deqWrite_wrRam(coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_wrRam),
							   .send_r(coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_r),
							   .EN_send(coreFix_memExe_dMem_cache_m_banks_0_pipeline$EN_send),
							   .EN_deqWrite(coreFix_memExe_dMem_cache_m_banks_0_pipeline$EN_deqWrite),
							   .RDY_send(coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_send),
							   .first(coreFix_memExe_dMem_cache_m_banks_0_pipeline$first),
							   .RDY_first(coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first),
							   .RDY_deqWrite(coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_0(.CLK(CLK),
											.D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_0$D_IN),
											.EN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_0$EN),
											.Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1(.CLK(CLK),
											.D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$D_IN),
											.EN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$EN),
											.Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_0(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_0$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_0$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_1(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_1$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_1$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_0(.CLK(CLK),
										       .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_0$D_IN),
										       .EN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_0$EN),
										       .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_1(.CLK(CLK),
										       .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_1$D_IN),
										       .EN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_1$EN),
										       .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_2(.CLK(CLK),
										       .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_2$D_IN),
										       .EN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_2$EN),
										       .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_0(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_0$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_0$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_1(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_1$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_1$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_0(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_0$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_0$EN),
										      .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_0$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_1(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_1$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_1$EN),
										      .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_2(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_2$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_2$EN),
										      .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ
  SizedFIFO #(.p1width(32'd3),
	      .p2depth(32'd8),
	      .p3cntr_width(32'd3),
	      .guarded(32'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ(.RST(RST_N),
									       .CLK(CLK),
									       .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_IN),
									       .ENQ(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$ENQ),
									       .DEQ(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$DEQ),
									       .CLR(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$CLR),
									       .D_OUT(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT),
									       .FULL_N(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$FULL_N),
									       .EMPTY_N(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$EMPTY_N));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp
  FIFO2 #(.width(32'd3),
	  .guarded(32'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp(.RST(RST_N),
											.CLK(CLK),
											.D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$D_IN),
											.ENQ(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$ENQ),
											.DEQ(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$DEQ),
											.CLR(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$CLR),
											.D_OUT(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$D_OUT),
											.FULL_N(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$FULL_N),
											.EMPTY_N(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$EMPTY_N));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP
  FIFO2 #(.width(32'd3),
	  .guarded(32'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP(.RST(RST_N),
										     .CLK(CLK),
										     .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$D_IN),
										     .ENQ(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$ENQ),
										     .DEQ(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$DEQ),
										     .CLR(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$CLR),
										     .D_OUT(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$D_OUT),
										     .FULL_N(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$FULL_N),
										     .EMPTY_N(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$EMPTY_N));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_0(.CLK(CLK),
											.D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_0$D_IN),
											.EN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_0$EN),
											.Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1(.CLK(CLK),
											.D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1$D_IN),
											.EN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1$EN),
											.Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_0(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_0$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_0$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_1(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_1$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_1$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2$EN),
										      .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_0(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_0$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_0$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_1(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_1$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_1$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2$EN),
										      .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ
  SizedFIFO #(.p1width(32'd4),
	      .p2depth(32'd12),
	      .p3cntr_width(32'd4),
	      .guarded(32'd1)) coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ(.RST(RST_N),
									       .CLK(CLK),
									       .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_IN),
									       .ENQ(coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$ENQ),
									       .DEQ(coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$DEQ),
									       .CLR(coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$CLR),
									       .D_OUT(coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT),
									       .FULL_N(coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$FULL_N),
									       .EMPTY_N(coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$EMPTY_N));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_0(.CLK(CLK),
											.D_IN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_0$D_IN),
											.EN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_0$EN),
											.Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1(.CLK(CLK),
											.D_IN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1$D_IN),
											.EN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1$EN),
											.Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_0(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_0$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_0$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_1(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_1$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_1$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2$EN),
										      .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_0(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_0$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_0$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_1(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_1$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_1$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2$EN),
										      .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_0(.CLK(CLK),
									  .D_IN(coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_0$D_IN),
									  .EN(coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_0$EN),
									  .Q_OUT());

  // submodule coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1(.CLK(CLK),
									  .D_IN(coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1$D_IN),
									  .EN(coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1$EN),
									  .Q_OUT(coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_0(.CLK(CLK),
									.D_IN(coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_0$D_IN),
									.EN(coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_0$EN),
									.Q_OUT());

  // submodule coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_1(.CLK(CLK),
									.D_IN(coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_1$D_IN),
									.EN(coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_1$EN),
									.Q_OUT());

  // submodule coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2(.CLK(CLK),
									.D_IN(coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2$D_IN),
									.EN(coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2$EN),
									.Q_OUT(coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_0(.CLK(CLK),
									.D_IN(coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_0$D_IN),
									.EN(coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_0$EN),
									.Q_OUT());

  // submodule coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_1(.CLK(CLK),
									.D_IN(coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_1$D_IN),
									.EN(coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_1$EN),
									.Q_OUT());

  // submodule coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2(.CLK(CLK),
									.D_IN(coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2$D_IN),
									.EN(coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2$EN),
									.Q_OUT(coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_dTlb
  mkDTlbSynth coreFix_memExe_dTlb(.CLK(CLK),
				  .RST_N(RST_N),
				  .perf_req_r(coreFix_memExe_dTlb$perf_req_r),
				  .perf_setStatus_doStats(coreFix_memExe_dTlb$perf_setStatus_doStats),
				  .procReq_req(coreFix_memExe_dTlb$procReq_req),
				  .specUpdate_correctSpeculation_mask(coreFix_memExe_dTlb$specUpdate_correctSpeculation_mask),
				  .specUpdate_incorrectSpeculation_kill_all(coreFix_memExe_dTlb$specUpdate_incorrectSpeculation_kill_all),
				  .specUpdate_incorrectSpeculation_kill_tag(coreFix_memExe_dTlb$specUpdate_incorrectSpeculation_kill_tag),
				  .toParent_ldTransRsFromP_enq_x(coreFix_memExe_dTlb$toParent_ldTransRsFromP_enq_x),
				  .updateVMInfo_vm(coreFix_memExe_dTlb$updateVMInfo_vm),
				  .EN_flush(coreFix_memExe_dTlb$EN_flush),
				  .EN_updateVMInfo(coreFix_memExe_dTlb$EN_updateVMInfo),
				  .EN_procReq(coreFix_memExe_dTlb$EN_procReq),
				  .EN_deqProcResp(coreFix_memExe_dTlb$EN_deqProcResp),
				  .EN_toParent_rqToP_deq(coreFix_memExe_dTlb$EN_toParent_rqToP_deq),
				  .EN_toParent_ldTransRsFromP_enq(coreFix_memExe_dTlb$EN_toParent_ldTransRsFromP_enq),
				  .EN_toParent_flush_request_get(coreFix_memExe_dTlb$EN_toParent_flush_request_get),
				  .EN_toParent_flush_response_put(coreFix_memExe_dTlb$EN_toParent_flush_response_put),
				  .EN_specUpdate_incorrectSpeculation(coreFix_memExe_dTlb$EN_specUpdate_incorrectSpeculation),
				  .EN_specUpdate_correctSpeculation(coreFix_memExe_dTlb$EN_specUpdate_correctSpeculation),
				  .EN_perf_setStatus(coreFix_memExe_dTlb$EN_perf_setStatus),
				  .EN_perf_req(coreFix_memExe_dTlb$EN_perf_req),
				  .EN_perf_resp(coreFix_memExe_dTlb$EN_perf_resp),
				  .flush_done(coreFix_memExe_dTlb$flush_done),
				  .RDY_flush_done(),
				  .RDY_flush(coreFix_memExe_dTlb$RDY_flush),
				  .RDY_updateVMInfo(),
				  .noPendingReq(coreFix_memExe_dTlb$noPendingReq),
				  .RDY_noPendingReq(),
				  .RDY_procReq(coreFix_memExe_dTlb$RDY_procReq),
				  .procResp(coreFix_memExe_dTlb$procResp),
				  .RDY_procResp(coreFix_memExe_dTlb$RDY_procResp),
				  .RDY_deqProcResp(coreFix_memExe_dTlb$RDY_deqProcResp),
				  .toParent_rqToP_notEmpty(),
				  .RDY_toParent_rqToP_notEmpty(),
				  .RDY_toParent_rqToP_deq(coreFix_memExe_dTlb$RDY_toParent_rqToP_deq),
				  .toParent_rqToP_first(coreFix_memExe_dTlb$toParent_rqToP_first),
				  .RDY_toParent_rqToP_first(coreFix_memExe_dTlb$RDY_toParent_rqToP_first),
				  .toParent_ldTransRsFromP_notFull(),
				  .RDY_toParent_ldTransRsFromP_notFull(),
				  .RDY_toParent_ldTransRsFromP_enq(coreFix_memExe_dTlb$RDY_toParent_ldTransRsFromP_enq),
				  .RDY_toParent_flush_request_get(coreFix_memExe_dTlb$RDY_toParent_flush_request_get),
				  .RDY_toParent_flush_response_put(coreFix_memExe_dTlb$RDY_toParent_flush_response_put),
				  .RDY_specUpdate_incorrectSpeculation(),
				  .RDY_specUpdate_correctSpeculation(),
				  .RDY_perf_setStatus(),
				  .RDY_perf_req(),
				  .perf_resp(),
				  .RDY_perf_resp(),
				  .perf_respValid(),
				  .RDY_perf_respValid());

  // submodule coreFix_memExe_dispToRegQ
  mkMemDispToRegFifo coreFix_memExe_dispToRegQ(.CLK(CLK),
					       .RST_N(RST_N),
					       .enq_x(coreFix_memExe_dispToRegQ$enq_x),
					       .specUpdate_correctSpeculation_mask(coreFix_memExe_dispToRegQ$specUpdate_correctSpeculation_mask),
					       .specUpdate_incorrectSpeculation_kill_all(coreFix_memExe_dispToRegQ$specUpdate_incorrectSpeculation_kill_all),
					       .specUpdate_incorrectSpeculation_kill_tag(coreFix_memExe_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag),
					       .EN_enq(coreFix_memExe_dispToRegQ$EN_enq),
					       .EN_deq(coreFix_memExe_dispToRegQ$EN_deq),
					       .EN_specUpdate_incorrectSpeculation(coreFix_memExe_dispToRegQ$EN_specUpdate_incorrectSpeculation),
					       .EN_specUpdate_correctSpeculation(coreFix_memExe_dispToRegQ$EN_specUpdate_correctSpeculation),
					       .RDY_enq(coreFix_memExe_dispToRegQ$RDY_enq),
					       .RDY_deq(coreFix_memExe_dispToRegQ$RDY_deq),
					       .first(coreFix_memExe_dispToRegQ$first),
					       .RDY_first(coreFix_memExe_dispToRegQ$RDY_first),
					       .RDY_specUpdate_incorrectSpeculation(),
					       .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_memExe_forwardQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_forwardQ_clearReq_dummy2_0(.CLK(CLK),
								     .D_IN(coreFix_memExe_forwardQ_clearReq_dummy2_0$D_IN),
								     .EN(coreFix_memExe_forwardQ_clearReq_dummy2_0$EN),
								     .Q_OUT());

  // submodule coreFix_memExe_forwardQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_forwardQ_clearReq_dummy2_1(.CLK(CLK),
								     .D_IN(coreFix_memExe_forwardQ_clearReq_dummy2_1$D_IN),
								     .EN(coreFix_memExe_forwardQ_clearReq_dummy2_1$EN),
								     .Q_OUT(coreFix_memExe_forwardQ_clearReq_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_forwardQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_forwardQ_deqReq_dummy2_0(.CLK(CLK),
								   .D_IN(coreFix_memExe_forwardQ_deqReq_dummy2_0$D_IN),
								   .EN(coreFix_memExe_forwardQ_deqReq_dummy2_0$EN),
								   .Q_OUT());

  // submodule coreFix_memExe_forwardQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_forwardQ_deqReq_dummy2_1(.CLK(CLK),
								   .D_IN(coreFix_memExe_forwardQ_deqReq_dummy2_1$D_IN),
								   .EN(coreFix_memExe_forwardQ_deqReq_dummy2_1$EN),
								   .Q_OUT());

  // submodule coreFix_memExe_forwardQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_forwardQ_deqReq_dummy2_2(.CLK(CLK),
								   .D_IN(coreFix_memExe_forwardQ_deqReq_dummy2_2$D_IN),
								   .EN(coreFix_memExe_forwardQ_deqReq_dummy2_2$EN),
								   .Q_OUT(coreFix_memExe_forwardQ_deqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_forwardQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_forwardQ_enqReq_dummy2_0(.CLK(CLK),
								   .D_IN(coreFix_memExe_forwardQ_enqReq_dummy2_0$D_IN),
								   .EN(coreFix_memExe_forwardQ_enqReq_dummy2_0$EN),
								   .Q_OUT());

  // submodule coreFix_memExe_forwardQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_forwardQ_enqReq_dummy2_1(.CLK(CLK),
								   .D_IN(coreFix_memExe_forwardQ_enqReq_dummy2_1$D_IN),
								   .EN(coreFix_memExe_forwardQ_enqReq_dummy2_1$EN),
								   .Q_OUT());

  // submodule coreFix_memExe_forwardQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_forwardQ_enqReq_dummy2_2(.CLK(CLK),
								   .D_IN(coreFix_memExe_forwardQ_enqReq_dummy2_2$D_IN),
								   .EN(coreFix_memExe_forwardQ_enqReq_dummy2_2$EN),
								   .Q_OUT(coreFix_memExe_forwardQ_enqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_lsq
  mkSplitLSQ coreFix_memExe_lsq(.CLK(CLK),
				.RST_N(RST_N),
				.enqLd_dst(coreFix_memExe_lsq$enqLd_dst),
				.enqLd_inst_tag(coreFix_memExe_lsq$enqLd_inst_tag),
				.enqLd_mem_inst(coreFix_memExe_lsq$enqLd_mem_inst),
				.enqLd_spec_bits(coreFix_memExe_lsq$enqLd_spec_bits),
				.enqSt_dst(coreFix_memExe_lsq$enqSt_dst),
				.enqSt_inst_tag(coreFix_memExe_lsq$enqSt_inst_tag),
				.enqSt_mem_inst(coreFix_memExe_lsq$enqSt_mem_inst),
				.enqSt_spec_bits(coreFix_memExe_lsq$enqSt_spec_bits),
				.getHit_t(coreFix_memExe_lsq$getHit_t),
				.getOrigBE_t(coreFix_memExe_lsq$getOrigBE_t),
				.issueLd_lsqTag(coreFix_memExe_lsq$issueLd_lsqTag),
				.issueLd_paddr(coreFix_memExe_lsq$issueLd_paddr),
				.issueLd_sbRes(coreFix_memExe_lsq$issueLd_sbRes),
				.issueLd_shiftedBE(coreFix_memExe_lsq$issueLd_shiftedBE),
				.respLd_alignedData(coreFix_memExe_lsq$respLd_alignedData),
				.respLd_t(coreFix_memExe_lsq$respLd_t),
				.setAtCommit_0_put(coreFix_memExe_lsq$setAtCommit_0_put),
				.setAtCommit_1_put(coreFix_memExe_lsq$setAtCommit_1_put),
				.specUpdate_correctSpeculation_mask(coreFix_memExe_lsq$specUpdate_correctSpeculation_mask),
				.specUpdate_incorrectSpeculation_kill_all(coreFix_memExe_lsq$specUpdate_incorrectSpeculation_kill_all),
				.specUpdate_incorrectSpeculation_kill_tag(coreFix_memExe_lsq$specUpdate_incorrectSpeculation_kill_tag),
				.updateAddr_fault(coreFix_memExe_lsq$updateAddr_fault),
				.updateAddr_isMMIO(coreFix_memExe_lsq$updateAddr_isMMIO),
				.updateAddr_lsqTag(coreFix_memExe_lsq$updateAddr_lsqTag),
				.updateAddr_paddr(coreFix_memExe_lsq$updateAddr_paddr),
				.updateAddr_shiftedBE(coreFix_memExe_lsq$updateAddr_shiftedBE),
				.updateData_d(coreFix_memExe_lsq$updateData_d),
				.updateData_t(coreFix_memExe_lsq$updateData_t),
				.wakeupLdStalledBySB_sbIdx(coreFix_memExe_lsq$wakeupLdStalledBySB_sbIdx),
				.EN_enqLd(coreFix_memExe_lsq$EN_enqLd),
				.EN_enqSt(coreFix_memExe_lsq$EN_enqSt),
				.EN_getHit(coreFix_memExe_lsq$EN_getHit),
				.EN_updateData(coreFix_memExe_lsq$EN_updateData),
				.EN_updateAddr(coreFix_memExe_lsq$EN_updateAddr),
				.EN_issueLd(coreFix_memExe_lsq$EN_issueLd),
				.EN_getIssueLd(coreFix_memExe_lsq$EN_getIssueLd),
				.EN_respLd(coreFix_memExe_lsq$EN_respLd),
				.EN_deqLd(coreFix_memExe_lsq$EN_deqLd),
				.EN_deqSt(coreFix_memExe_lsq$EN_deqSt),
				.EN_wakeupLdStalledBySB(coreFix_memExe_lsq$EN_wakeupLdStalledBySB),
				.EN_setAtCommit_0_put(coreFix_memExe_lsq$EN_setAtCommit_0_put),
				.EN_setAtCommit_1_put(coreFix_memExe_lsq$EN_setAtCommit_1_put),
				.EN_specUpdate_incorrectSpeculation(coreFix_memExe_lsq$EN_specUpdate_incorrectSpeculation),
				.EN_specUpdate_correctSpeculation(coreFix_memExe_lsq$EN_specUpdate_correctSpeculation),
				.enqLdTag(coreFix_memExe_lsq$enqLdTag),
				.RDY_enqLdTag(),
				.enqStTag(coreFix_memExe_lsq$enqStTag),
				.RDY_enqStTag(),
				.RDY_enqLd(coreFix_memExe_lsq$RDY_enqLd),
				.RDY_enqSt(coreFix_memExe_lsq$RDY_enqSt),
				.getOrigBE(coreFix_memExe_lsq$getOrigBE),
				.RDY_getOrigBE(),
				.getHit(coreFix_memExe_lsq$getHit),
				.RDY_getHit(),
				.RDY_updateData(),
				.updateAddr(coreFix_memExe_lsq$updateAddr),
				.RDY_updateAddr(),
				.issueLd(coreFix_memExe_lsq$issueLd),
				.RDY_issueLd(),
				.getIssueLd(coreFix_memExe_lsq$getIssueLd),
				.RDY_getIssueLd(coreFix_memExe_lsq$RDY_getIssueLd),
				.respLd(coreFix_memExe_lsq$respLd),
				.RDY_respLd(),
				.firstLd(coreFix_memExe_lsq$firstLd),
				.RDY_firstLd(coreFix_memExe_lsq$RDY_firstLd),
				.RDY_deqLd(coreFix_memExe_lsq$RDY_deqLd),
				.firstSt(coreFix_memExe_lsq$firstSt),
				.RDY_firstSt(coreFix_memExe_lsq$RDY_firstSt),
				.RDY_deqSt(coreFix_memExe_lsq$RDY_deqSt),
				.RDY_wakeupLdStalledBySB(),
				.stqEmpty(coreFix_memExe_lsq$stqEmpty),
				.RDY_stqEmpty(),
				.RDY_setAtCommit_0_put(),
				.RDY_setAtCommit_1_put(),
				.RDY_specUpdate_incorrectSpeculation(),
				.RDY_specUpdate_correctSpeculation(),
				.stqFull_ehrPort0(),
				.RDY_stqFull_ehrPort0(),
				.ldqFull_ehrPort0(),
				.RDY_ldqFull_ehrPort0(),
				.noWrongPathLoads(coreFix_memExe_lsq$noWrongPathLoads),
				.RDY_noWrongPathLoads());

  // submodule coreFix_memExe_memRespLdQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_memRespLdQ_clearReq_dummy2_0(.CLK(CLK),
								       .D_IN(coreFix_memExe_memRespLdQ_clearReq_dummy2_0$D_IN),
								       .EN(coreFix_memExe_memRespLdQ_clearReq_dummy2_0$EN),
								       .Q_OUT());

  // submodule coreFix_memExe_memRespLdQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_memRespLdQ_clearReq_dummy2_1(.CLK(CLK),
								       .D_IN(coreFix_memExe_memRespLdQ_clearReq_dummy2_1$D_IN),
								       .EN(coreFix_memExe_memRespLdQ_clearReq_dummy2_1$EN),
								       .Q_OUT(coreFix_memExe_memRespLdQ_clearReq_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_memRespLdQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_memRespLdQ_deqReq_dummy2_0(.CLK(CLK),
								     .D_IN(coreFix_memExe_memRespLdQ_deqReq_dummy2_0$D_IN),
								     .EN(coreFix_memExe_memRespLdQ_deqReq_dummy2_0$EN),
								     .Q_OUT());

  // submodule coreFix_memExe_memRespLdQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_memRespLdQ_deqReq_dummy2_1(.CLK(CLK),
								     .D_IN(coreFix_memExe_memRespLdQ_deqReq_dummy2_1$D_IN),
								     .EN(coreFix_memExe_memRespLdQ_deqReq_dummy2_1$EN),
								     .Q_OUT());

  // submodule coreFix_memExe_memRespLdQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_memRespLdQ_deqReq_dummy2_2(.CLK(CLK),
								     .D_IN(coreFix_memExe_memRespLdQ_deqReq_dummy2_2$D_IN),
								     .EN(coreFix_memExe_memRespLdQ_deqReq_dummy2_2$EN),
								     .Q_OUT(coreFix_memExe_memRespLdQ_deqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_memRespLdQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_memRespLdQ_enqReq_dummy2_0(.CLK(CLK),
								     .D_IN(coreFix_memExe_memRespLdQ_enqReq_dummy2_0$D_IN),
								     .EN(coreFix_memExe_memRespLdQ_enqReq_dummy2_0$EN),
								     .Q_OUT());

  // submodule coreFix_memExe_memRespLdQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_memRespLdQ_enqReq_dummy2_1(.CLK(CLK),
								     .D_IN(coreFix_memExe_memRespLdQ_enqReq_dummy2_1$D_IN),
								     .EN(coreFix_memExe_memRespLdQ_enqReq_dummy2_1$EN),
								     .Q_OUT());

  // submodule coreFix_memExe_memRespLdQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_memRespLdQ_enqReq_dummy2_2(.CLK(CLK),
								     .D_IN(coreFix_memExe_memRespLdQ_enqReq_dummy2_2$D_IN),
								     .EN(coreFix_memExe_memRespLdQ_enqReq_dummy2_2$EN),
								     .Q_OUT(coreFix_memExe_memRespLdQ_enqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_regToExeQ
  mkMemRegToExeFifo coreFix_memExe_regToExeQ(.CLK(CLK),
					     .RST_N(RST_N),
					     .enq_x(coreFix_memExe_regToExeQ$enq_x),
					     .specUpdate_correctSpeculation_mask(coreFix_memExe_regToExeQ$specUpdate_correctSpeculation_mask),
					     .specUpdate_incorrectSpeculation_kill_all(coreFix_memExe_regToExeQ$specUpdate_incorrectSpeculation_kill_all),
					     .specUpdate_incorrectSpeculation_kill_tag(coreFix_memExe_regToExeQ$specUpdate_incorrectSpeculation_kill_tag),
					     .EN_enq(coreFix_memExe_regToExeQ$EN_enq),
					     .EN_deq(coreFix_memExe_regToExeQ$EN_deq),
					     .EN_specUpdate_incorrectSpeculation(coreFix_memExe_regToExeQ$EN_specUpdate_incorrectSpeculation),
					     .EN_specUpdate_correctSpeculation(coreFix_memExe_regToExeQ$EN_specUpdate_correctSpeculation),
					     .RDY_enq(coreFix_memExe_regToExeQ$RDY_enq),
					     .RDY_deq(coreFix_memExe_regToExeQ$RDY_deq),
					     .first(coreFix_memExe_regToExeQ$first),
					     .RDY_first(coreFix_memExe_regToExeQ$RDY_first),
					     .RDY_specUpdate_incorrectSpeculation(),
					     .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_memExe_reqLdQ_data_0_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLdQ_data_0_dummy2_0(.CLK(CLK),
								 .D_IN(coreFix_memExe_reqLdQ_data_0_dummy2_0$D_IN),
								 .EN(coreFix_memExe_reqLdQ_data_0_dummy2_0$EN),
								 .Q_OUT());

  // submodule coreFix_memExe_reqLdQ_data_0_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLdQ_data_0_dummy2_1(.CLK(CLK),
								 .D_IN(coreFix_memExe_reqLdQ_data_0_dummy2_1$D_IN),
								 .EN(coreFix_memExe_reqLdQ_data_0_dummy2_1$EN),
								 .Q_OUT(coreFix_memExe_reqLdQ_data_0_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_reqLdQ_deqP_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLdQ_deqP_dummy2_0(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqLdQ_deqP_dummy2_0$D_IN),
							       .EN(coreFix_memExe_reqLdQ_deqP_dummy2_0$EN),
							       .Q_OUT());

  // submodule coreFix_memExe_reqLdQ_deqP_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLdQ_deqP_dummy2_1(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqLdQ_deqP_dummy2_1$D_IN),
							       .EN(coreFix_memExe_reqLdQ_deqP_dummy2_1$EN),
							       .Q_OUT());

  // submodule coreFix_memExe_reqLdQ_empty_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLdQ_empty_dummy2_0(.CLK(CLK),
								.D_IN(coreFix_memExe_reqLdQ_empty_dummy2_0$D_IN),
								.EN(coreFix_memExe_reqLdQ_empty_dummy2_0$EN),
								.Q_OUT());

  // submodule coreFix_memExe_reqLdQ_empty_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLdQ_empty_dummy2_1(.CLK(CLK),
								.D_IN(coreFix_memExe_reqLdQ_empty_dummy2_1$D_IN),
								.EN(coreFix_memExe_reqLdQ_empty_dummy2_1$EN),
								.Q_OUT(coreFix_memExe_reqLdQ_empty_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_reqLdQ_empty_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLdQ_empty_dummy2_2(.CLK(CLK),
								.D_IN(coreFix_memExe_reqLdQ_empty_dummy2_2$D_IN),
								.EN(coreFix_memExe_reqLdQ_empty_dummy2_2$EN),
								.Q_OUT(coreFix_memExe_reqLdQ_empty_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_reqLdQ_enqP_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLdQ_enqP_dummy2_0(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqLdQ_enqP_dummy2_0$D_IN),
							       .EN(coreFix_memExe_reqLdQ_enqP_dummy2_0$EN),
							       .Q_OUT());

  // submodule coreFix_memExe_reqLdQ_enqP_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLdQ_enqP_dummy2_1(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqLdQ_enqP_dummy2_1$D_IN),
							       .EN(coreFix_memExe_reqLdQ_enqP_dummy2_1$EN),
							       .Q_OUT());

  // submodule coreFix_memExe_reqLdQ_full_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLdQ_full_dummy2_0(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqLdQ_full_dummy2_0$D_IN),
							       .EN(coreFix_memExe_reqLdQ_full_dummy2_0$EN),
							       .Q_OUT(coreFix_memExe_reqLdQ_full_dummy2_0$Q_OUT));

  // submodule coreFix_memExe_reqLdQ_full_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLdQ_full_dummy2_1(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqLdQ_full_dummy2_1$D_IN),
							       .EN(coreFix_memExe_reqLdQ_full_dummy2_1$EN),
							       .Q_OUT(coreFix_memExe_reqLdQ_full_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_reqLdQ_full_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLdQ_full_dummy2_2(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqLdQ_full_dummy2_2$D_IN),
							       .EN(coreFix_memExe_reqLdQ_full_dummy2_2$EN),
							       .Q_OUT(coreFix_memExe_reqLdQ_full_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_reqLrScAmoQ_data_0_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLrScAmoQ_data_0_dummy2_0(.CLK(CLK),
								      .D_IN(coreFix_memExe_reqLrScAmoQ_data_0_dummy2_0$D_IN),
								      .EN(coreFix_memExe_reqLrScAmoQ_data_0_dummy2_0$EN),
								      .Q_OUT());

  // submodule coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1(.CLK(CLK),
								      .D_IN(coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$D_IN),
								      .EN(coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$EN),
								      .Q_OUT(coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_reqLrScAmoQ_deqP_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLrScAmoQ_deqP_dummy2_0(.CLK(CLK),
								    .D_IN(coreFix_memExe_reqLrScAmoQ_deqP_dummy2_0$D_IN),
								    .EN(coreFix_memExe_reqLrScAmoQ_deqP_dummy2_0$EN),
								    .Q_OUT());

  // submodule coreFix_memExe_reqLrScAmoQ_deqP_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLrScAmoQ_deqP_dummy2_1(.CLK(CLK),
								    .D_IN(coreFix_memExe_reqLrScAmoQ_deqP_dummy2_1$D_IN),
								    .EN(coreFix_memExe_reqLrScAmoQ_deqP_dummy2_1$EN),
								    .Q_OUT());

  // submodule coreFix_memExe_reqLrScAmoQ_empty_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLrScAmoQ_empty_dummy2_0(.CLK(CLK),
								     .D_IN(coreFix_memExe_reqLrScAmoQ_empty_dummy2_0$D_IN),
								     .EN(coreFix_memExe_reqLrScAmoQ_empty_dummy2_0$EN),
								     .Q_OUT());

  // submodule coreFix_memExe_reqLrScAmoQ_empty_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLrScAmoQ_empty_dummy2_1(.CLK(CLK),
								     .D_IN(coreFix_memExe_reqLrScAmoQ_empty_dummy2_1$D_IN),
								     .EN(coreFix_memExe_reqLrScAmoQ_empty_dummy2_1$EN),
								     .Q_OUT(coreFix_memExe_reqLrScAmoQ_empty_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_reqLrScAmoQ_empty_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLrScAmoQ_empty_dummy2_2(.CLK(CLK),
								     .D_IN(coreFix_memExe_reqLrScAmoQ_empty_dummy2_2$D_IN),
								     .EN(coreFix_memExe_reqLrScAmoQ_empty_dummy2_2$EN),
								     .Q_OUT(coreFix_memExe_reqLrScAmoQ_empty_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_reqLrScAmoQ_enqP_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLrScAmoQ_enqP_dummy2_0(.CLK(CLK),
								    .D_IN(coreFix_memExe_reqLrScAmoQ_enqP_dummy2_0$D_IN),
								    .EN(coreFix_memExe_reqLrScAmoQ_enqP_dummy2_0$EN),
								    .Q_OUT());

  // submodule coreFix_memExe_reqLrScAmoQ_enqP_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLrScAmoQ_enqP_dummy2_1(.CLK(CLK),
								    .D_IN(coreFix_memExe_reqLrScAmoQ_enqP_dummy2_1$D_IN),
								    .EN(coreFix_memExe_reqLrScAmoQ_enqP_dummy2_1$EN),
								    .Q_OUT());

  // submodule coreFix_memExe_reqLrScAmoQ_full_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLrScAmoQ_full_dummy2_0(.CLK(CLK),
								    .D_IN(coreFix_memExe_reqLrScAmoQ_full_dummy2_0$D_IN),
								    .EN(coreFix_memExe_reqLrScAmoQ_full_dummy2_0$EN),
								    .Q_OUT(coreFix_memExe_reqLrScAmoQ_full_dummy2_0$Q_OUT));

  // submodule coreFix_memExe_reqLrScAmoQ_full_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLrScAmoQ_full_dummy2_1(.CLK(CLK),
								    .D_IN(coreFix_memExe_reqLrScAmoQ_full_dummy2_1$D_IN),
								    .EN(coreFix_memExe_reqLrScAmoQ_full_dummy2_1$EN),
								    .Q_OUT(coreFix_memExe_reqLrScAmoQ_full_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_reqLrScAmoQ_full_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLrScAmoQ_full_dummy2_2(.CLK(CLK),
								    .D_IN(coreFix_memExe_reqLrScAmoQ_full_dummy2_2$D_IN),
								    .EN(coreFix_memExe_reqLrScAmoQ_full_dummy2_2$EN),
								    .Q_OUT(coreFix_memExe_reqLrScAmoQ_full_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_reqStQ_data_0_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqStQ_data_0_dummy2_0(.CLK(CLK),
								 .D_IN(coreFix_memExe_reqStQ_data_0_dummy2_0$D_IN),
								 .EN(coreFix_memExe_reqStQ_data_0_dummy2_0$EN),
								 .Q_OUT());

  // submodule coreFix_memExe_reqStQ_data_0_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqStQ_data_0_dummy2_1(.CLK(CLK),
								 .D_IN(coreFix_memExe_reqStQ_data_0_dummy2_1$D_IN),
								 .EN(coreFix_memExe_reqStQ_data_0_dummy2_1$EN),
								 .Q_OUT(coreFix_memExe_reqStQ_data_0_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_reqStQ_deqP_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqStQ_deqP_dummy2_0(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqStQ_deqP_dummy2_0$D_IN),
							       .EN(coreFix_memExe_reqStQ_deqP_dummy2_0$EN),
							       .Q_OUT());

  // submodule coreFix_memExe_reqStQ_deqP_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqStQ_deqP_dummy2_1(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqStQ_deqP_dummy2_1$D_IN),
							       .EN(coreFix_memExe_reqStQ_deqP_dummy2_1$EN),
							       .Q_OUT());

  // submodule coreFix_memExe_reqStQ_empty_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqStQ_empty_dummy2_0(.CLK(CLK),
								.D_IN(coreFix_memExe_reqStQ_empty_dummy2_0$D_IN),
								.EN(coreFix_memExe_reqStQ_empty_dummy2_0$EN),
								.Q_OUT());

  // submodule coreFix_memExe_reqStQ_empty_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqStQ_empty_dummy2_1(.CLK(CLK),
								.D_IN(coreFix_memExe_reqStQ_empty_dummy2_1$D_IN),
								.EN(coreFix_memExe_reqStQ_empty_dummy2_1$EN),
								.Q_OUT(coreFix_memExe_reqStQ_empty_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_reqStQ_empty_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqStQ_empty_dummy2_2(.CLK(CLK),
								.D_IN(coreFix_memExe_reqStQ_empty_dummy2_2$D_IN),
								.EN(coreFix_memExe_reqStQ_empty_dummy2_2$EN),
								.Q_OUT(coreFix_memExe_reqStQ_empty_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_reqStQ_enqP_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqStQ_enqP_dummy2_0(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqStQ_enqP_dummy2_0$D_IN),
							       .EN(coreFix_memExe_reqStQ_enqP_dummy2_0$EN),
							       .Q_OUT());

  // submodule coreFix_memExe_reqStQ_enqP_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqStQ_enqP_dummy2_1(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqStQ_enqP_dummy2_1$D_IN),
							       .EN(coreFix_memExe_reqStQ_enqP_dummy2_1$EN),
							       .Q_OUT());

  // submodule coreFix_memExe_reqStQ_full_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqStQ_full_dummy2_0(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqStQ_full_dummy2_0$D_IN),
							       .EN(coreFix_memExe_reqStQ_full_dummy2_0$EN),
							       .Q_OUT(coreFix_memExe_reqStQ_full_dummy2_0$Q_OUT));

  // submodule coreFix_memExe_reqStQ_full_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqStQ_full_dummy2_1(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqStQ_full_dummy2_1$D_IN),
							       .EN(coreFix_memExe_reqStQ_full_dummy2_1$EN),
							       .Q_OUT(coreFix_memExe_reqStQ_full_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_reqStQ_full_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqStQ_full_dummy2_2(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqStQ_full_dummy2_2$D_IN),
							       .EN(coreFix_memExe_reqStQ_full_dummy2_2$EN),
							       .Q_OUT(coreFix_memExe_reqStQ_full_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_respLrScAmoQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_respLrScAmoQ_clearReq_dummy2_0(.CLK(CLK),
									 .D_IN(coreFix_memExe_respLrScAmoQ_clearReq_dummy2_0$D_IN),
									 .EN(coreFix_memExe_respLrScAmoQ_clearReq_dummy2_0$EN),
									 .Q_OUT());

  // submodule coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1(.CLK(CLK),
									 .D_IN(coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1$D_IN),
									 .EN(coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1$EN),
									 .Q_OUT(coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_respLrScAmoQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_respLrScAmoQ_deqReq_dummy2_0(.CLK(CLK),
								       .D_IN(coreFix_memExe_respLrScAmoQ_deqReq_dummy2_0$D_IN),
								       .EN(coreFix_memExe_respLrScAmoQ_deqReq_dummy2_0$EN),
								       .Q_OUT());

  // submodule coreFix_memExe_respLrScAmoQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_respLrScAmoQ_deqReq_dummy2_1(.CLK(CLK),
								       .D_IN(coreFix_memExe_respLrScAmoQ_deqReq_dummy2_1$D_IN),
								       .EN(coreFix_memExe_respLrScAmoQ_deqReq_dummy2_1$EN),
								       .Q_OUT());

  // submodule coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2(.CLK(CLK),
								       .D_IN(coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2$D_IN),
								       .EN(coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2$EN),
								       .Q_OUT(coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0(.CLK(CLK),
								       .D_IN(coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0$D_IN),
								       .EN(coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0$EN),
								       .Q_OUT());

  // submodule coreFix_memExe_respLrScAmoQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_respLrScAmoQ_enqReq_dummy2_1(.CLK(CLK),
								       .D_IN(coreFix_memExe_respLrScAmoQ_enqReq_dummy2_1$D_IN),
								       .EN(coreFix_memExe_respLrScAmoQ_enqReq_dummy2_1$EN),
								       .Q_OUT());

  // submodule coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2(.CLK(CLK),
								       .D_IN(coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2$D_IN),
								       .EN(coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2$EN),
								       .Q_OUT(coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_rsMem
  mkReservationStationMem coreFix_memExe_rsMem(.CLK(CLK),
					       .RST_N(RST_N),
					       .enq_x(coreFix_memExe_rsMem$enq_x),
					       .setRegReady_0_put(coreFix_memExe_rsMem$setRegReady_0_put),
					       .setRegReady_1_put(coreFix_memExe_rsMem$setRegReady_1_put),
					       .setRegReady_2_put(coreFix_memExe_rsMem$setRegReady_2_put),
					       .setRegReady_3_put(coreFix_memExe_rsMem$setRegReady_3_put),
					       .setRegReady_4_put(coreFix_memExe_rsMem$setRegReady_4_put),
					       .setRobEnqTime_t(coreFix_memExe_rsMem$setRobEnqTime_t),
					       .specUpdate_correctSpeculation_mask(coreFix_memExe_rsMem$specUpdate_correctSpeculation_mask),
					       .specUpdate_incorrectSpeculation_kill_all(coreFix_memExe_rsMem$specUpdate_incorrectSpeculation_kill_all),
					       .specUpdate_incorrectSpeculation_kill_tag(coreFix_memExe_rsMem$specUpdate_incorrectSpeculation_kill_tag),
					       .EN_enq(coreFix_memExe_rsMem$EN_enq),
					       .EN_setRobEnqTime(coreFix_memExe_rsMem$EN_setRobEnqTime),
					       .EN_doDispatch(coreFix_memExe_rsMem$EN_doDispatch),
					       .EN_setRegReady_0_put(coreFix_memExe_rsMem$EN_setRegReady_0_put),
					       .EN_setRegReady_1_put(coreFix_memExe_rsMem$EN_setRegReady_1_put),
					       .EN_setRegReady_2_put(coreFix_memExe_rsMem$EN_setRegReady_2_put),
					       .EN_setRegReady_3_put(coreFix_memExe_rsMem$EN_setRegReady_3_put),
					       .EN_setRegReady_4_put(coreFix_memExe_rsMem$EN_setRegReady_4_put),
					       .EN_specUpdate_incorrectSpeculation(coreFix_memExe_rsMem$EN_specUpdate_incorrectSpeculation),
					       .EN_specUpdate_correctSpeculation(coreFix_memExe_rsMem$EN_specUpdate_correctSpeculation),
					       .RDY_enq(coreFix_memExe_rsMem$RDY_enq),
					       .canEnq(coreFix_memExe_rsMem$canEnq),
					       .RDY_canEnq(),
					       .RDY_setRobEnqTime(),
					       .dispatchData(coreFix_memExe_rsMem$dispatchData),
					       .RDY_dispatchData(coreFix_memExe_rsMem$RDY_dispatchData),
					       .RDY_doDispatch(coreFix_memExe_rsMem$RDY_doDispatch),
					       .RDY_setRegReady_0_put(),
					       .RDY_setRegReady_1_put(),
					       .RDY_setRegReady_2_put(),
					       .RDY_setRegReady_3_put(),
					       .RDY_setRegReady_4_put(),
					       .approximateCount(),
					       .RDY_approximateCount(),
					       .isFull_ehrPort0(),
					       .RDY_isFull_ehrPort0(),
					       .RDY_specUpdate_incorrectSpeculation(),
					       .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_memExe_stb
  mkStoreBufferEhr coreFix_memExe_stb(.CLK(CLK),
				      .RST_N(RST_N),
				      .deq_idx(coreFix_memExe_stb$deq_idx),
				      .enq_be(coreFix_memExe_stb$enq_be),
				      .enq_data(coreFix_memExe_stb$enq_data),
				      .enq_idx(coreFix_memExe_stb$enq_idx),
				      .enq_paddr(coreFix_memExe_stb$enq_paddr),
				      .getEnqIndex_paddr(coreFix_memExe_stb$getEnqIndex_paddr),
				      .noMatchLdQ_be(coreFix_memExe_stb$noMatchLdQ_be),
				      .noMatchLdQ_paddr(coreFix_memExe_stb$noMatchLdQ_paddr),
				      .noMatchStQ_be(coreFix_memExe_stb$noMatchStQ_be),
				      .noMatchStQ_paddr(coreFix_memExe_stb$noMatchStQ_paddr),
				      .search_be(coreFix_memExe_stb$search_be),
				      .search_paddr(coreFix_memExe_stb$search_paddr),
				      .EN_enq(coreFix_memExe_stb$EN_enq),
				      .EN_deq(coreFix_memExe_stb$EN_deq),
				      .EN_issue(coreFix_memExe_stb$EN_issue),
				      .isEmpty(coreFix_memExe_stb$isEmpty),
				      .RDY_isEmpty(),
				      .getEnqIndex(coreFix_memExe_stb$getEnqIndex),
				      .RDY_getEnqIndex(),
				      .RDY_enq(coreFix_memExe_stb$RDY_enq),
				      .deq(coreFix_memExe_stb$deq),
				      .RDY_deq(coreFix_memExe_stb$RDY_deq),
				      .issue(coreFix_memExe_stb$issue),
				      .RDY_issue(coreFix_memExe_stb$RDY_issue),
				      .search(coreFix_memExe_stb$search),
				      .RDY_search(),
				      .noMatchLdQ(coreFix_memExe_stb$noMatchLdQ),
				      .RDY_noMatchLdQ(),
				      .noMatchStQ(coreFix_memExe_stb$noMatchStQ),
				      .RDY_noMatchStQ());

  // submodule coreFix_trainBPQ_0
  FIFO2 #(.width(32'd160), .guarded(32'd1)) coreFix_trainBPQ_0(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(coreFix_trainBPQ_0$D_IN),
							       .ENQ(coreFix_trainBPQ_0$ENQ),
							       .DEQ(coreFix_trainBPQ_0$DEQ),
							       .CLR(coreFix_trainBPQ_0$CLR),
							       .D_OUT(coreFix_trainBPQ_0$D_OUT),
							       .FULL_N(coreFix_trainBPQ_0$FULL_N),
							       .EMPTY_N(coreFix_trainBPQ_0$EMPTY_N));

  // submodule coreFix_trainBPQ_1
  FIFO2 #(.width(32'd160), .guarded(32'd1)) coreFix_trainBPQ_1(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(coreFix_trainBPQ_1$D_IN),
							       .ENQ(coreFix_trainBPQ_1$ENQ),
							       .DEQ(coreFix_trainBPQ_1$DEQ),
							       .CLR(coreFix_trainBPQ_1$CLR),
							       .D_OUT(coreFix_trainBPQ_1$D_OUT),
							       .FULL_N(coreFix_trainBPQ_1$FULL_N),
							       .EMPTY_N(coreFix_trainBPQ_1$EMPTY_N));

  // submodule csrInstOrInterruptInflight_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) csrInstOrInterruptInflight_dummy2_0(.CLK(CLK),
							       .D_IN(csrInstOrInterruptInflight_dummy2_0$D_IN),
							       .EN(csrInstOrInterruptInflight_dummy2_0$EN),
							       .Q_OUT(csrInstOrInterruptInflight_dummy2_0$Q_OUT));

  // submodule csrInstOrInterruptInflight_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) csrInstOrInterruptInflight_dummy2_1(.CLK(CLK),
							       .D_IN(csrInstOrInterruptInflight_dummy2_1$D_IN),
							       .EN(csrInstOrInterruptInflight_dummy2_1$EN),
							       .Q_OUT(csrInstOrInterruptInflight_dummy2_1$Q_OUT));

  // submodule csrf_mcycle_ehr_data_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) csrf_mcycle_ehr_data_dummy2_0(.CLK(CLK),
							 .D_IN(csrf_mcycle_ehr_data_dummy2_0$D_IN),
							 .EN(csrf_mcycle_ehr_data_dummy2_0$EN),
							 .Q_OUT(csrf_mcycle_ehr_data_dummy2_0$Q_OUT));

  // submodule csrf_mcycle_ehr_data_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) csrf_mcycle_ehr_data_dummy2_1(.CLK(CLK),
							 .D_IN(csrf_mcycle_ehr_data_dummy2_1$D_IN),
							 .EN(csrf_mcycle_ehr_data_dummy2_1$EN),
							 .Q_OUT(csrf_mcycle_ehr_data_dummy2_1$Q_OUT));

  // submodule csrf_minstret_ehr_data_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) csrf_minstret_ehr_data_dummy2_0(.CLK(CLK),
							   .D_IN(csrf_minstret_ehr_data_dummy2_0$D_IN),
							   .EN(csrf_minstret_ehr_data_dummy2_0$EN),
							   .Q_OUT(csrf_minstret_ehr_data_dummy2_0$Q_OUT));

  // submodule csrf_minstret_ehr_data_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) csrf_minstret_ehr_data_dummy2_1(.CLK(CLK),
							   .D_IN(csrf_minstret_ehr_data_dummy2_1$D_IN),
							   .EN(csrf_minstret_ehr_data_dummy2_1$EN),
							   .Q_OUT(csrf_minstret_ehr_data_dummy2_1$Q_OUT));

  // submodule csrf_stats_module_writeQ
  FIFO1 #(.width(32'd1),
	  .guarded(32'd1)) csrf_stats_module_writeQ(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(csrf_stats_module_writeQ$D_IN),
						    .ENQ(csrf_stats_module_writeQ$ENQ),
						    .DEQ(csrf_stats_module_writeQ$DEQ),
						    .CLR(csrf_stats_module_writeQ$CLR),
						    .D_OUT(csrf_stats_module_writeQ$D_OUT),
						    .FULL_N(csrf_stats_module_writeQ$FULL_N),
						    .EMPTY_N(csrf_stats_module_writeQ$EMPTY_N));

  // submodule csrf_terminate_module_terminateQ
  FIFO10 #(.guarded(32'd1)) csrf_terminate_module_terminateQ(.RST(RST_N),
							     .CLK(CLK),
							     .ENQ(csrf_terminate_module_terminateQ$ENQ),
							     .DEQ(csrf_terminate_module_terminateQ$DEQ),
							     .CLR(csrf_terminate_module_terminateQ$CLR),
							     .FULL_N(csrf_terminate_module_terminateQ$FULL_N),
							     .EMPTY_N(csrf_terminate_module_terminateQ$EMPTY_N));

  // submodule epochManager
  mkEpochManager epochManager(.CLK(CLK),
			      .RST_N(RST_N),
			      .checkEpoch_0_check_e(epochManager$checkEpoch_0_check_e),
			      .checkEpoch_1_check_e(epochManager$checkEpoch_1_check_e),
			      .updatePrevEpoch_0_update_e(epochManager$updatePrevEpoch_0_update_e),
			      .updatePrevEpoch_1_update_e(epochManager$updatePrevEpoch_1_update_e),
			      .EN_updatePrevEpoch_0_update(epochManager$EN_updatePrevEpoch_0_update),
			      .EN_updatePrevEpoch_1_update(epochManager$EN_updatePrevEpoch_1_update),
			      .EN_incrementEpoch(epochManager$EN_incrementEpoch),
			      .checkEpoch_0_check(epochManager$checkEpoch_0_check),
			      .RDY_checkEpoch_0_check(),
			      .checkEpoch_1_check(epochManager$checkEpoch_1_check),
			      .RDY_checkEpoch_1_check(),
			      .RDY_updatePrevEpoch_0_update(),
			      .RDY_updatePrevEpoch_1_update(),
			      .getEpoch(),
			      .RDY_getEpoch(),
			      .RDY_incrementEpoch(epochManager$RDY_incrementEpoch),
			      .getEpochState(),
			      .RDY_getEpochState(),
			      .isFull_ehrPort0(),
			      .RDY_isFull_ehrPort0());

  // submodule f_csr_reqs
  FIFO1 #(.width(32'd77), .guarded(32'd1)) f_csr_reqs(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(f_csr_reqs$D_IN),
						      .ENQ(f_csr_reqs$ENQ),
						      .DEQ(f_csr_reqs$DEQ),
						      .CLR(f_csr_reqs$CLR),
						      .D_OUT(f_csr_reqs$D_OUT),
						      .FULL_N(f_csr_reqs$FULL_N),
						      .EMPTY_N(f_csr_reqs$EMPTY_N));

  // submodule f_csr_rsps
  FIFO1 #(.width(32'd65), .guarded(32'd1)) f_csr_rsps(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(f_csr_rsps$D_IN),
						      .ENQ(f_csr_rsps$ENQ),
						      .DEQ(f_csr_rsps$DEQ),
						      .CLR(f_csr_rsps$CLR),
						      .D_OUT(f_csr_rsps$D_OUT),
						      .FULL_N(f_csr_rsps$FULL_N),
						      .EMPTY_N(f_csr_rsps$EMPTY_N));

  // submodule f_fpr_reqs
  FIFO1 #(.width(32'd70), .guarded(32'd1)) f_fpr_reqs(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(f_fpr_reqs$D_IN),
						      .ENQ(f_fpr_reqs$ENQ),
						      .DEQ(f_fpr_reqs$DEQ),
						      .CLR(f_fpr_reqs$CLR),
						      .D_OUT(f_fpr_reqs$D_OUT),
						      .FULL_N(f_fpr_reqs$FULL_N),
						      .EMPTY_N(f_fpr_reqs$EMPTY_N));

  // submodule f_fpr_rsps
  FIFO1 #(.width(32'd65), .guarded(32'd1)) f_fpr_rsps(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(f_fpr_rsps$D_IN),
						      .ENQ(f_fpr_rsps$ENQ),
						      .DEQ(f_fpr_rsps$DEQ),
						      .CLR(f_fpr_rsps$CLR),
						      .D_OUT(f_fpr_rsps$D_OUT),
						      .FULL_N(f_fpr_rsps$FULL_N),
						      .EMPTY_N(f_fpr_rsps$EMPTY_N));

  // submodule f_gpr_reqs
  FIFO1 #(.width(32'd70), .guarded(32'd1)) f_gpr_reqs(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(f_gpr_reqs$D_IN),
						      .ENQ(f_gpr_reqs$ENQ),
						      .DEQ(f_gpr_reqs$DEQ),
						      .CLR(f_gpr_reqs$CLR),
						      .D_OUT(f_gpr_reqs$D_OUT),
						      .FULL_N(f_gpr_reqs$FULL_N),
						      .EMPTY_N(f_gpr_reqs$EMPTY_N));

  // submodule f_gpr_rsps
  FIFO1 #(.width(32'd65), .guarded(32'd1)) f_gpr_rsps(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(f_gpr_rsps$D_IN),
						      .ENQ(f_gpr_rsps$ENQ),
						      .DEQ(f_gpr_rsps$DEQ),
						      .CLR(f_gpr_rsps$CLR),
						      .D_OUT(f_gpr_rsps$D_OUT),
						      .FULL_N(f_gpr_rsps$FULL_N),
						      .EMPTY_N(f_gpr_rsps$EMPTY_N));

  // submodule f_run_halt_reqs
  FIFO2 #(.width(32'd1), .guarded(32'd1)) f_run_halt_reqs(.RST(RST_N),
							  .CLK(CLK),
							  .D_IN(f_run_halt_reqs$D_IN),
							  .ENQ(f_run_halt_reqs$ENQ),
							  .DEQ(f_run_halt_reqs$DEQ),
							  .CLR(f_run_halt_reqs$CLR),
							  .D_OUT(f_run_halt_reqs$D_OUT),
							  .FULL_N(f_run_halt_reqs$FULL_N),
							  .EMPTY_N(f_run_halt_reqs$EMPTY_N));

  // submodule f_run_halt_rsps
  FIFO2 #(.width(32'd1), .guarded(32'd1)) f_run_halt_rsps(.RST(RST_N),
							  .CLK(CLK),
							  .D_IN(f_run_halt_rsps$D_IN),
							  .ENQ(f_run_halt_rsps$ENQ),
							  .DEQ(f_run_halt_rsps$DEQ),
							  .CLR(f_run_halt_rsps$CLR),
							  .D_OUT(f_run_halt_rsps$D_OUT),
							  .FULL_N(f_run_halt_rsps$FULL_N),
							  .EMPTY_N(f_run_halt_rsps$EMPTY_N));

  // submodule fetchStage
  mkFetchStage fetchStage(.CLK(CLK),
			  .RST_N(RST_N),
			  .iMemIfc_perf_req_r(fetchStage$iMemIfc_perf_req_r),
			  .iMemIfc_perf_setStatus_doStats(fetchStage$iMemIfc_perf_setStatus_doStats),
			  .iMemIfc_to_parent_fromP_enq_x(fetchStage$iMemIfc_to_parent_fromP_enq_x),
			  .iMemIfc_to_proc_request_put(fetchStage$iMemIfc_to_proc_request_put),
			  .iTlbIfc_perf_req_r(fetchStage$iTlbIfc_perf_req_r),
			  .iTlbIfc_perf_setStatus_doStats(fetchStage$iTlbIfc_perf_setStatus_doStats),
			  .iTlbIfc_toParent_rsFromP_enq_x(fetchStage$iTlbIfc_toParent_rsFromP_enq_x),
			  .iTlbIfc_to_proc_request_put(fetchStage$iTlbIfc_to_proc_request_put),
			  .iTlbIfc_updateVMInfo_vm(fetchStage$iTlbIfc_updateVMInfo_vm),
			  .mmioIfc_instResp_enq_x(fetchStage$mmioIfc_instResp_enq_x),
			  .mmioIfc_setHtifAddrs_fromHost(fetchStage$mmioIfc_setHtifAddrs_fromHost),
			  .mmioIfc_setHtifAddrs_toHost(fetchStage$mmioIfc_setHtifAddrs_toHost),
			  .perf_req_r(fetchStage$perf_req_r),
			  .perf_setStatus_doStats(fetchStage$perf_setStatus_doStats),
			  .redirect_pc(fetchStage$redirect_pc),
			  .start_pc(fetchStage$start_pc),
			  .train_predictors_dpTrain(fetchStage$train_predictors_dpTrain),
			  .train_predictors_iType(fetchStage$train_predictors_iType),
			  .train_predictors_isCompressed(fetchStage$train_predictors_isCompressed),
			  .train_predictors_mispred(fetchStage$train_predictors_mispred),
			  .train_predictors_next_pc(fetchStage$train_predictors_next_pc),
			  .train_predictors_pc(fetchStage$train_predictors_pc),
			  .train_predictors_taken(fetchStage$train_predictors_taken),
			  .EN_pipelines_0_deq(fetchStage$EN_pipelines_0_deq),
			  .EN_pipelines_1_deq(fetchStage$EN_pipelines_1_deq),
			  .EN_iTlbIfc_flush(fetchStage$EN_iTlbIfc_flush),
			  .EN_iTlbIfc_updateVMInfo(fetchStage$EN_iTlbIfc_updateVMInfo),
			  .EN_iTlbIfc_to_proc_request_put(fetchStage$EN_iTlbIfc_to_proc_request_put),
			  .EN_iTlbIfc_to_proc_response_get(fetchStage$EN_iTlbIfc_to_proc_response_get),
			  .EN_iTlbIfc_toParent_rqToP_deq(fetchStage$EN_iTlbIfc_toParent_rqToP_deq),
			  .EN_iTlbIfc_toParent_rsFromP_enq(fetchStage$EN_iTlbIfc_toParent_rsFromP_enq),
			  .EN_iTlbIfc_toParent_flush_request_get(fetchStage$EN_iTlbIfc_toParent_flush_request_get),
			  .EN_iTlbIfc_toParent_flush_response_put(fetchStage$EN_iTlbIfc_toParent_flush_response_put),
			  .EN_iTlbIfc_perf_setStatus(fetchStage$EN_iTlbIfc_perf_setStatus),
			  .EN_iTlbIfc_perf_req(fetchStage$EN_iTlbIfc_perf_req),
			  .EN_iTlbIfc_perf_resp(fetchStage$EN_iTlbIfc_perf_resp),
			  .EN_iMemIfc_to_proc_request_put(fetchStage$EN_iMemIfc_to_proc_request_put),
			  .EN_iMemIfc_to_proc_response_get(fetchStage$EN_iMemIfc_to_proc_response_get),
			  .EN_iMemIfc_flush(fetchStage$EN_iMemIfc_flush),
			  .EN_iMemIfc_perf_setStatus(fetchStage$EN_iMemIfc_perf_setStatus),
			  .EN_iMemIfc_perf_req(fetchStage$EN_iMemIfc_perf_req),
			  .EN_iMemIfc_perf_resp(fetchStage$EN_iMemIfc_perf_resp),
			  .EN_iMemIfc_to_parent_rsToP_deq(fetchStage$EN_iMemIfc_to_parent_rsToP_deq),
			  .EN_iMemIfc_to_parent_rqToP_deq(fetchStage$EN_iMemIfc_to_parent_rqToP_deq),
			  .EN_iMemIfc_to_parent_fromP_enq(fetchStage$EN_iMemIfc_to_parent_fromP_enq),
			  .EN_iMemIfc_cRqStuck_get(fetchStage$EN_iMemIfc_cRqStuck_get),
			  .EN_iMemIfc_pRqStuck_get(fetchStage$EN_iMemIfc_pRqStuck_get),
			  .EN_mmioIfc_instReq_deq(fetchStage$EN_mmioIfc_instReq_deq),
			  .EN_mmioIfc_instResp_enq(fetchStage$EN_mmioIfc_instResp_enq),
			  .EN_mmioIfc_setHtifAddrs(fetchStage$EN_mmioIfc_setHtifAddrs),
			  .EN_start(fetchStage$EN_start),
			  .EN_stop(fetchStage$EN_stop),
			  .EN_setWaitRedirect(fetchStage$EN_setWaitRedirect),
			  .EN_redirect(fetchStage$EN_redirect),
			  .EN_setWaitFlush(fetchStage$EN_setWaitFlush),
			  .EN_done_flushing(fetchStage$EN_done_flushing),
			  .EN_train_predictors(fetchStage$EN_train_predictors),
			  .EN_flush_predictors(fetchStage$EN_flush_predictors),
			  .EN_perf_setStatus(fetchStage$EN_perf_setStatus),
			  .EN_perf_req(fetchStage$EN_perf_req),
			  .EN_perf_resp(fetchStage$EN_perf_resp),
			  .pipelines_0_canDeq(fetchStage$pipelines_0_canDeq),
			  .RDY_pipelines_0_canDeq(),
			  .RDY_pipelines_0_deq(fetchStage$RDY_pipelines_0_deq),
			  .pipelines_0_first(fetchStage$pipelines_0_first),
			  .RDY_pipelines_0_first(fetchStage$RDY_pipelines_0_first),
			  .pipelines_1_canDeq(fetchStage$pipelines_1_canDeq),
			  .RDY_pipelines_1_canDeq(),
			  .RDY_pipelines_1_deq(fetchStage$RDY_pipelines_1_deq),
			  .pipelines_1_first(fetchStage$pipelines_1_first),
			  .RDY_pipelines_1_first(fetchStage$RDY_pipelines_1_first),
			  .iTlbIfc_flush_done(fetchStage$iTlbIfc_flush_done),
			  .RDY_iTlbIfc_flush_done(),
			  .RDY_iTlbIfc_flush(fetchStage$RDY_iTlbIfc_flush),
			  .RDY_iTlbIfc_updateVMInfo(),
			  .iTlbIfc_noPendingReq(fetchStage$iTlbIfc_noPendingReq),
			  .RDY_iTlbIfc_noPendingReq(),
			  .RDY_iTlbIfc_to_proc_request_put(),
			  .iTlbIfc_to_proc_response_get(),
			  .RDY_iTlbIfc_to_proc_response_get(),
			  .iTlbIfc_toParent_rqToP_notEmpty(),
			  .RDY_iTlbIfc_toParent_rqToP_notEmpty(),
			  .RDY_iTlbIfc_toParent_rqToP_deq(fetchStage$RDY_iTlbIfc_toParent_rqToP_deq),
			  .iTlbIfc_toParent_rqToP_first(fetchStage$iTlbIfc_toParent_rqToP_first),
			  .RDY_iTlbIfc_toParent_rqToP_first(fetchStage$RDY_iTlbIfc_toParent_rqToP_first),
			  .iTlbIfc_toParent_rsFromP_notFull(),
			  .RDY_iTlbIfc_toParent_rsFromP_notFull(),
			  .RDY_iTlbIfc_toParent_rsFromP_enq(fetchStage$RDY_iTlbIfc_toParent_rsFromP_enq),
			  .RDY_iTlbIfc_toParent_flush_request_get(fetchStage$RDY_iTlbIfc_toParent_flush_request_get),
			  .RDY_iTlbIfc_toParent_flush_response_put(fetchStage$RDY_iTlbIfc_toParent_flush_response_put),
			  .RDY_iTlbIfc_perf_setStatus(),
			  .RDY_iTlbIfc_perf_req(),
			  .iTlbIfc_perf_resp(),
			  .RDY_iTlbIfc_perf_resp(),
			  .iTlbIfc_perf_respValid(),
			  .RDY_iTlbIfc_perf_respValid(),
			  .RDY_iMemIfc_to_proc_request_put(),
			  .iMemIfc_to_proc_response_get(),
			  .RDY_iMemIfc_to_proc_response_get(),
			  .RDY_iMemIfc_flush(),
			  .iMemIfc_flush_done(fetchStage$iMemIfc_flush_done),
			  .RDY_iMemIfc_flush_done(),
			  .RDY_iMemIfc_perf_setStatus(),
			  .RDY_iMemIfc_perf_req(),
			  .iMemIfc_perf_resp(),
			  .RDY_iMemIfc_perf_resp(),
			  .iMemIfc_perf_respValid(),
			  .RDY_iMemIfc_perf_respValid(),
			  .iMemIfc_to_parent_rsToP_notEmpty(fetchStage$iMemIfc_to_parent_rsToP_notEmpty),
			  .RDY_iMemIfc_to_parent_rsToP_notEmpty(),
			  .RDY_iMemIfc_to_parent_rsToP_deq(fetchStage$RDY_iMemIfc_to_parent_rsToP_deq),
			  .iMemIfc_to_parent_rsToP_first(fetchStage$iMemIfc_to_parent_rsToP_first),
			  .RDY_iMemIfc_to_parent_rsToP_first(fetchStage$RDY_iMemIfc_to_parent_rsToP_first),
			  .iMemIfc_to_parent_rqToP_notEmpty(fetchStage$iMemIfc_to_parent_rqToP_notEmpty),
			  .RDY_iMemIfc_to_parent_rqToP_notEmpty(),
			  .RDY_iMemIfc_to_parent_rqToP_deq(fetchStage$RDY_iMemIfc_to_parent_rqToP_deq),
			  .iMemIfc_to_parent_rqToP_first(fetchStage$iMemIfc_to_parent_rqToP_first),
			  .RDY_iMemIfc_to_parent_rqToP_first(fetchStage$RDY_iMemIfc_to_parent_rqToP_first),
			  .iMemIfc_to_parent_fromP_notFull(fetchStage$iMemIfc_to_parent_fromP_notFull),
			  .RDY_iMemIfc_to_parent_fromP_notFull(),
			  .RDY_iMemIfc_to_parent_fromP_enq(fetchStage$RDY_iMemIfc_to_parent_fromP_enq),
			  .iMemIfc_cRqStuck_get(fetchStage$iMemIfc_cRqStuck_get),
			  .RDY_iMemIfc_cRqStuck_get(fetchStage$RDY_iMemIfc_cRqStuck_get),
			  .iMemIfc_pRqStuck_get(fetchStage$iMemIfc_pRqStuck_get),
			  .RDY_iMemIfc_pRqStuck_get(fetchStage$RDY_iMemIfc_pRqStuck_get),
			  .mmioIfc_instReq_notEmpty(),
			  .RDY_mmioIfc_instReq_notEmpty(),
			  .RDY_mmioIfc_instReq_deq(fetchStage$RDY_mmioIfc_instReq_deq),
			  .mmioIfc_instReq_first_fst(fetchStage$mmioIfc_instReq_first_fst),
			  .RDY_mmioIfc_instReq_first_fst(fetchStage$RDY_mmioIfc_instReq_first_fst),
			  .mmioIfc_instReq_first_snd(fetchStage$mmioIfc_instReq_first_snd),
			  .RDY_mmioIfc_instReq_first_snd(fetchStage$RDY_mmioIfc_instReq_first_snd),
			  .mmioIfc_instResp_notFull(),
			  .RDY_mmioIfc_instResp_notFull(),
			  .RDY_mmioIfc_instResp_enq(fetchStage$RDY_mmioIfc_instResp_enq),
			  .RDY_mmioIfc_setHtifAddrs(),
			  .RDY_start(),
			  .RDY_stop(),
			  .RDY_setWaitRedirect(),
			  .RDY_redirect(),
			  .RDY_setWaitFlush(),
			  .RDY_done_flushing(fetchStage$RDY_done_flushing),
			  .RDY_train_predictors(),
			  .emptyForFlush(fetchStage$emptyForFlush),
			  .RDY_emptyForFlush(),
			  .RDY_flush_predictors(),
			  .flush_predictors_done(fetchStage$flush_predictors_done),
			  .RDY_flush_predictors_done(),
			  .getFetchState(),
			  .RDY_getFetchState(),
			  .RDY_perf_setStatus(),
			  .RDY_perf_req(),
			  .perf_resp(),
			  .RDY_perf_resp(),
			  .perf_respValid(),
			  .RDY_perf_respValid());

  // submodule l2Tlb
  mkL2Tlb l2Tlb(.CLK(CLK),
		.RST_N(RST_N),
		.perf_req_r(l2Tlb$perf_req_r),
		.perf_setStatus_doStats(l2Tlb$perf_setStatus_doStats),
		.toChildren_rqFromC_put(l2Tlb$toChildren_rqFromC_put),
		.toMem_respLd_enq_x(l2Tlb$toMem_respLd_enq_x),
		.updateVMInfo_vmD(l2Tlb$updateVMInfo_vmD),
		.updateVMInfo_vmI(l2Tlb$updateVMInfo_vmI),
		.EN_updateVMInfo(l2Tlb$EN_updateVMInfo),
		.EN_toChildren_rqFromC_put(l2Tlb$EN_toChildren_rqFromC_put),
		.EN_toChildren_rsToC_deq(l2Tlb$EN_toChildren_rsToC_deq),
		.EN_toChildren_iTlbReqFlush_put(l2Tlb$EN_toChildren_iTlbReqFlush_put),
		.EN_toChildren_dTlbReqFlush_put(l2Tlb$EN_toChildren_dTlbReqFlush_put),
		.EN_toChildren_flushDone_get(l2Tlb$EN_toChildren_flushDone_get),
		.EN_toMem_memReq_deq(l2Tlb$EN_toMem_memReq_deq),
		.EN_toMem_respLd_enq(l2Tlb$EN_toMem_respLd_enq),
		.EN_perf_setStatus(l2Tlb$EN_perf_setStatus),
		.EN_perf_req(l2Tlb$EN_perf_req),
		.EN_perf_resp(l2Tlb$EN_perf_resp),
		.RDY_updateVMInfo(),
		.RDY_toChildren_rqFromC_put(l2Tlb$RDY_toChildren_rqFromC_put),
		.toChildren_rsToC_notEmpty(),
		.RDY_toChildren_rsToC_notEmpty(),
		.RDY_toChildren_rsToC_deq(l2Tlb$RDY_toChildren_rsToC_deq),
		.toChildren_rsToC_first(l2Tlb$toChildren_rsToC_first),
		.RDY_toChildren_rsToC_first(l2Tlb$RDY_toChildren_rsToC_first),
		.RDY_toChildren_iTlbReqFlush_put(l2Tlb$RDY_toChildren_iTlbReqFlush_put),
		.RDY_toChildren_dTlbReqFlush_put(l2Tlb$RDY_toChildren_dTlbReqFlush_put),
		.RDY_toChildren_flushDone_get(l2Tlb$RDY_toChildren_flushDone_get),
		.toMem_memReq_notEmpty(l2Tlb$toMem_memReq_notEmpty),
		.RDY_toMem_memReq_notEmpty(),
		.RDY_toMem_memReq_deq(l2Tlb$RDY_toMem_memReq_deq),
		.toMem_memReq_first(l2Tlb$toMem_memReq_first),
		.RDY_toMem_memReq_first(l2Tlb$RDY_toMem_memReq_first),
		.toMem_respLd_notFull(l2Tlb$toMem_respLd_notFull),
		.RDY_toMem_respLd_notFull(),
		.RDY_toMem_respLd_enq(l2Tlb$RDY_toMem_respLd_enq),
		.RDY_perf_setStatus(),
		.RDY_perf_req(),
		.perf_resp(),
		.RDY_perf_resp(),
		.perf_respValid(),
		.RDY_perf_respValid());

  // submodule mmio_cRqQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_cRqQ_clearReq_dummy2_0(.CLK(CLK),
						       .D_IN(mmio_cRqQ_clearReq_dummy2_0$D_IN),
						       .EN(mmio_cRqQ_clearReq_dummy2_0$EN),
						       .Q_OUT());

  // submodule mmio_cRqQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_cRqQ_clearReq_dummy2_1(.CLK(CLK),
						       .D_IN(mmio_cRqQ_clearReq_dummy2_1$D_IN),
						       .EN(mmio_cRqQ_clearReq_dummy2_1$EN),
						       .Q_OUT(mmio_cRqQ_clearReq_dummy2_1$Q_OUT));

  // submodule mmio_cRqQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_cRqQ_deqReq_dummy2_0(.CLK(CLK),
								    .D_IN(mmio_cRqQ_deqReq_dummy2_0$D_IN),
								    .EN(mmio_cRqQ_deqReq_dummy2_0$EN),
								    .Q_OUT());

  // submodule mmio_cRqQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_cRqQ_deqReq_dummy2_1(.CLK(CLK),
								    .D_IN(mmio_cRqQ_deqReq_dummy2_1$D_IN),
								    .EN(mmio_cRqQ_deqReq_dummy2_1$EN),
								    .Q_OUT());

  // submodule mmio_cRqQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_cRqQ_deqReq_dummy2_2(.CLK(CLK),
								    .D_IN(mmio_cRqQ_deqReq_dummy2_2$D_IN),
								    .EN(mmio_cRqQ_deqReq_dummy2_2$EN),
								    .Q_OUT(mmio_cRqQ_deqReq_dummy2_2$Q_OUT));

  // submodule mmio_cRqQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_cRqQ_enqReq_dummy2_0(.CLK(CLK),
								    .D_IN(mmio_cRqQ_enqReq_dummy2_0$D_IN),
								    .EN(mmio_cRqQ_enqReq_dummy2_0$EN),
								    .Q_OUT());

  // submodule mmio_cRqQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_cRqQ_enqReq_dummy2_1(.CLK(CLK),
								    .D_IN(mmio_cRqQ_enqReq_dummy2_1$D_IN),
								    .EN(mmio_cRqQ_enqReq_dummy2_1$EN),
								    .Q_OUT());

  // submodule mmio_cRqQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_cRqQ_enqReq_dummy2_2(.CLK(CLK),
								    .D_IN(mmio_cRqQ_enqReq_dummy2_2$D_IN),
								    .EN(mmio_cRqQ_enqReq_dummy2_2$EN),
								    .Q_OUT(mmio_cRqQ_enqReq_dummy2_2$Q_OUT));

  // submodule mmio_cRsQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_cRsQ_clearReq_dummy2_0(.CLK(CLK),
						       .D_IN(mmio_cRsQ_clearReq_dummy2_0$D_IN),
						       .EN(mmio_cRsQ_clearReq_dummy2_0$EN),
						       .Q_OUT());

  // submodule mmio_cRsQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_cRsQ_clearReq_dummy2_1(.CLK(CLK),
						       .D_IN(mmio_cRsQ_clearReq_dummy2_1$D_IN),
						       .EN(mmio_cRsQ_clearReq_dummy2_1$EN),
						       .Q_OUT(mmio_cRsQ_clearReq_dummy2_1$Q_OUT));

  // submodule mmio_cRsQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_cRsQ_deqReq_dummy2_0(.CLK(CLK),
								    .D_IN(mmio_cRsQ_deqReq_dummy2_0$D_IN),
								    .EN(mmio_cRsQ_deqReq_dummy2_0$EN),
								    .Q_OUT());

  // submodule mmio_cRsQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_cRsQ_deqReq_dummy2_1(.CLK(CLK),
								    .D_IN(mmio_cRsQ_deqReq_dummy2_1$D_IN),
								    .EN(mmio_cRsQ_deqReq_dummy2_1$EN),
								    .Q_OUT());

  // submodule mmio_cRsQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_cRsQ_deqReq_dummy2_2(.CLK(CLK),
								    .D_IN(mmio_cRsQ_deqReq_dummy2_2$D_IN),
								    .EN(mmio_cRsQ_deqReq_dummy2_2$EN),
								    .Q_OUT(mmio_cRsQ_deqReq_dummy2_2$Q_OUT));

  // submodule mmio_cRsQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_cRsQ_enqReq_dummy2_0(.CLK(CLK),
								    .D_IN(mmio_cRsQ_enqReq_dummy2_0$D_IN),
								    .EN(mmio_cRsQ_enqReq_dummy2_0$EN),
								    .Q_OUT());

  // submodule mmio_cRsQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_cRsQ_enqReq_dummy2_1(.CLK(CLK),
								    .D_IN(mmio_cRsQ_enqReq_dummy2_1$D_IN),
								    .EN(mmio_cRsQ_enqReq_dummy2_1$EN),
								    .Q_OUT());

  // submodule mmio_cRsQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_cRsQ_enqReq_dummy2_2(.CLK(CLK),
								    .D_IN(mmio_cRsQ_enqReq_dummy2_2$D_IN),
								    .EN(mmio_cRsQ_enqReq_dummy2_2$EN),
								    .Q_OUT(mmio_cRsQ_enqReq_dummy2_2$Q_OUT));

  // submodule mmio_dataPendQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataPendQ_clearReq_dummy2_0(.CLK(CLK),
							    .D_IN(mmio_dataPendQ_clearReq_dummy2_0$D_IN),
							    .EN(mmio_dataPendQ_clearReq_dummy2_0$EN),
							    .Q_OUT());

  // submodule mmio_dataPendQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataPendQ_clearReq_dummy2_1(.CLK(CLK),
							    .D_IN(mmio_dataPendQ_clearReq_dummy2_1$D_IN),
							    .EN(mmio_dataPendQ_clearReq_dummy2_1$EN),
							    .Q_OUT(mmio_dataPendQ_clearReq_dummy2_1$Q_OUT));

  // submodule mmio_dataPendQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataPendQ_deqReq_dummy2_0(.CLK(CLK),
							  .D_IN(mmio_dataPendQ_deqReq_dummy2_0$D_IN),
							  .EN(mmio_dataPendQ_deqReq_dummy2_0$EN),
							  .Q_OUT());

  // submodule mmio_dataPendQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataPendQ_deqReq_dummy2_1(.CLK(CLK),
							  .D_IN(mmio_dataPendQ_deqReq_dummy2_1$D_IN),
							  .EN(mmio_dataPendQ_deqReq_dummy2_1$EN),
							  .Q_OUT());

  // submodule mmio_dataPendQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataPendQ_deqReq_dummy2_2(.CLK(CLK),
							  .D_IN(mmio_dataPendQ_deqReq_dummy2_2$D_IN),
							  .EN(mmio_dataPendQ_deqReq_dummy2_2$EN),
							  .Q_OUT(mmio_dataPendQ_deqReq_dummy2_2$Q_OUT));

  // submodule mmio_dataPendQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataPendQ_enqReq_dummy2_0(.CLK(CLK),
							  .D_IN(mmio_dataPendQ_enqReq_dummy2_0$D_IN),
							  .EN(mmio_dataPendQ_enqReq_dummy2_0$EN),
							  .Q_OUT());

  // submodule mmio_dataPendQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataPendQ_enqReq_dummy2_1(.CLK(CLK),
							  .D_IN(mmio_dataPendQ_enqReq_dummy2_1$D_IN),
							  .EN(mmio_dataPendQ_enqReq_dummy2_1$EN),
							  .Q_OUT());

  // submodule mmio_dataPendQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataPendQ_enqReq_dummy2_2(.CLK(CLK),
							  .D_IN(mmio_dataPendQ_enqReq_dummy2_2$D_IN),
							  .EN(mmio_dataPendQ_enqReq_dummy2_2$EN),
							  .Q_OUT(mmio_dataPendQ_enqReq_dummy2_2$Q_OUT));

  // submodule mmio_dataReqQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataReqQ_clearReq_dummy2_0(.CLK(CLK),
							   .D_IN(mmio_dataReqQ_clearReq_dummy2_0$D_IN),
							   .EN(mmio_dataReqQ_clearReq_dummy2_0$EN),
							   .Q_OUT());

  // submodule mmio_dataReqQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataReqQ_clearReq_dummy2_1(.CLK(CLK),
							   .D_IN(mmio_dataReqQ_clearReq_dummy2_1$D_IN),
							   .EN(mmio_dataReqQ_clearReq_dummy2_1$EN),
							   .Q_OUT(mmio_dataReqQ_clearReq_dummy2_1$Q_OUT));

  // submodule mmio_dataReqQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataReqQ_deqReq_dummy2_0(.CLK(CLK),
							 .D_IN(mmio_dataReqQ_deqReq_dummy2_0$D_IN),
							 .EN(mmio_dataReqQ_deqReq_dummy2_0$EN),
							 .Q_OUT());

  // submodule mmio_dataReqQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataReqQ_deqReq_dummy2_1(.CLK(CLK),
							 .D_IN(mmio_dataReqQ_deqReq_dummy2_1$D_IN),
							 .EN(mmio_dataReqQ_deqReq_dummy2_1$EN),
							 .Q_OUT());

  // submodule mmio_dataReqQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataReqQ_deqReq_dummy2_2(.CLK(CLK),
							 .D_IN(mmio_dataReqQ_deqReq_dummy2_2$D_IN),
							 .EN(mmio_dataReqQ_deqReq_dummy2_2$EN),
							 .Q_OUT(mmio_dataReqQ_deqReq_dummy2_2$Q_OUT));

  // submodule mmio_dataReqQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataReqQ_enqReq_dummy2_0(.CLK(CLK),
							 .D_IN(mmio_dataReqQ_enqReq_dummy2_0$D_IN),
							 .EN(mmio_dataReqQ_enqReq_dummy2_0$EN),
							 .Q_OUT());

  // submodule mmio_dataReqQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataReqQ_enqReq_dummy2_1(.CLK(CLK),
							 .D_IN(mmio_dataReqQ_enqReq_dummy2_1$D_IN),
							 .EN(mmio_dataReqQ_enqReq_dummy2_1$EN),
							 .Q_OUT());

  // submodule mmio_dataReqQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataReqQ_enqReq_dummy2_2(.CLK(CLK),
							 .D_IN(mmio_dataReqQ_enqReq_dummy2_2$D_IN),
							 .EN(mmio_dataReqQ_enqReq_dummy2_2$EN),
							 .Q_OUT(mmio_dataReqQ_enqReq_dummy2_2$Q_OUT));

  // submodule mmio_dataRespQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataRespQ_clearReq_dummy2_0(.CLK(CLK),
							    .D_IN(mmio_dataRespQ_clearReq_dummy2_0$D_IN),
							    .EN(mmio_dataRespQ_clearReq_dummy2_0$EN),
							    .Q_OUT());

  // submodule mmio_dataRespQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataRespQ_clearReq_dummy2_1(.CLK(CLK),
							    .D_IN(mmio_dataRespQ_clearReq_dummy2_1$D_IN),
							    .EN(mmio_dataRespQ_clearReq_dummy2_1$EN),
							    .Q_OUT(mmio_dataRespQ_clearReq_dummy2_1$Q_OUT));

  // submodule mmio_dataRespQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataRespQ_deqReq_dummy2_0(.CLK(CLK),
							  .D_IN(mmio_dataRespQ_deqReq_dummy2_0$D_IN),
							  .EN(mmio_dataRespQ_deqReq_dummy2_0$EN),
							  .Q_OUT());

  // submodule mmio_dataRespQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataRespQ_deqReq_dummy2_1(.CLK(CLK),
							  .D_IN(mmio_dataRespQ_deqReq_dummy2_1$D_IN),
							  .EN(mmio_dataRespQ_deqReq_dummy2_1$EN),
							  .Q_OUT());

  // submodule mmio_dataRespQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataRespQ_deqReq_dummy2_2(.CLK(CLK),
							  .D_IN(mmio_dataRespQ_deqReq_dummy2_2$D_IN),
							  .EN(mmio_dataRespQ_deqReq_dummy2_2$EN),
							  .Q_OUT(mmio_dataRespQ_deqReq_dummy2_2$Q_OUT));

  // submodule mmio_dataRespQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataRespQ_enqReq_dummy2_0(.CLK(CLK),
							  .D_IN(mmio_dataRespQ_enqReq_dummy2_0$D_IN),
							  .EN(mmio_dataRespQ_enqReq_dummy2_0$EN),
							  .Q_OUT());

  // submodule mmio_dataRespQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataRespQ_enqReq_dummy2_1(.CLK(CLK),
							  .D_IN(mmio_dataRespQ_enqReq_dummy2_1$D_IN),
							  .EN(mmio_dataRespQ_enqReq_dummy2_1$EN),
							  .Q_OUT());

  // submodule mmio_dataRespQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataRespQ_enqReq_dummy2_2(.CLK(CLK),
							  .D_IN(mmio_dataRespQ_enqReq_dummy2_2$D_IN),
							  .EN(mmio_dataRespQ_enqReq_dummy2_2$EN),
							  .Q_OUT(mmio_dataRespQ_enqReq_dummy2_2$Q_OUT));

  // submodule mmio_pRqQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_pRqQ_clearReq_dummy2_0(.CLK(CLK),
						       .D_IN(mmio_pRqQ_clearReq_dummy2_0$D_IN),
						       .EN(mmio_pRqQ_clearReq_dummy2_0$EN),
						       .Q_OUT());

  // submodule mmio_pRqQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_pRqQ_clearReq_dummy2_1(.CLK(CLK),
						       .D_IN(mmio_pRqQ_clearReq_dummy2_1$D_IN),
						       .EN(mmio_pRqQ_clearReq_dummy2_1$EN),
						       .Q_OUT(mmio_pRqQ_clearReq_dummy2_1$Q_OUT));

  // submodule mmio_pRqQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_pRqQ_deqReq_dummy2_0(.CLK(CLK),
								    .D_IN(mmio_pRqQ_deqReq_dummy2_0$D_IN),
								    .EN(mmio_pRqQ_deqReq_dummy2_0$EN),
								    .Q_OUT());

  // submodule mmio_pRqQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_pRqQ_deqReq_dummy2_1(.CLK(CLK),
								    .D_IN(mmio_pRqQ_deqReq_dummy2_1$D_IN),
								    .EN(mmio_pRqQ_deqReq_dummy2_1$EN),
								    .Q_OUT());

  // submodule mmio_pRqQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_pRqQ_deqReq_dummy2_2(.CLK(CLK),
								    .D_IN(mmio_pRqQ_deqReq_dummy2_2$D_IN),
								    .EN(mmio_pRqQ_deqReq_dummy2_2$EN),
								    .Q_OUT(mmio_pRqQ_deqReq_dummy2_2$Q_OUT));

  // submodule mmio_pRqQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_pRqQ_enqReq_dummy2_0(.CLK(CLK),
								    .D_IN(mmio_pRqQ_enqReq_dummy2_0$D_IN),
								    .EN(mmio_pRqQ_enqReq_dummy2_0$EN),
								    .Q_OUT());

  // submodule mmio_pRqQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_pRqQ_enqReq_dummy2_1(.CLK(CLK),
								    .D_IN(mmio_pRqQ_enqReq_dummy2_1$D_IN),
								    .EN(mmio_pRqQ_enqReq_dummy2_1$EN),
								    .Q_OUT());

  // submodule mmio_pRqQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_pRqQ_enqReq_dummy2_2(.CLK(CLK),
								    .D_IN(mmio_pRqQ_enqReq_dummy2_2$D_IN),
								    .EN(mmio_pRqQ_enqReq_dummy2_2$EN),
								    .Q_OUT(mmio_pRqQ_enqReq_dummy2_2$Q_OUT));

  // submodule mmio_pRsQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_pRsQ_clearReq_dummy2_0(.CLK(CLK),
						       .D_IN(mmio_pRsQ_clearReq_dummy2_0$D_IN),
						       .EN(mmio_pRsQ_clearReq_dummy2_0$EN),
						       .Q_OUT());

  // submodule mmio_pRsQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_pRsQ_clearReq_dummy2_1(.CLK(CLK),
						       .D_IN(mmio_pRsQ_clearReq_dummy2_1$D_IN),
						       .EN(mmio_pRsQ_clearReq_dummy2_1$EN),
						       .Q_OUT(mmio_pRsQ_clearReq_dummy2_1$Q_OUT));

  // submodule mmio_pRsQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_pRsQ_deqReq_dummy2_0(.CLK(CLK),
								    .D_IN(mmio_pRsQ_deqReq_dummy2_0$D_IN),
								    .EN(mmio_pRsQ_deqReq_dummy2_0$EN),
								    .Q_OUT());

  // submodule mmio_pRsQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_pRsQ_deqReq_dummy2_1(.CLK(CLK),
								    .D_IN(mmio_pRsQ_deqReq_dummy2_1$D_IN),
								    .EN(mmio_pRsQ_deqReq_dummy2_1$EN),
								    .Q_OUT());

  // submodule mmio_pRsQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_pRsQ_deqReq_dummy2_2(.CLK(CLK),
								    .D_IN(mmio_pRsQ_deqReq_dummy2_2$D_IN),
								    .EN(mmio_pRsQ_deqReq_dummy2_2$EN),
								    .Q_OUT(mmio_pRsQ_deqReq_dummy2_2$Q_OUT));

  // submodule mmio_pRsQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_pRsQ_enqReq_dummy2_0(.CLK(CLK),
								    .D_IN(mmio_pRsQ_enqReq_dummy2_0$D_IN),
								    .EN(mmio_pRsQ_enqReq_dummy2_0$EN),
								    .Q_OUT());

  // submodule mmio_pRsQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_pRsQ_enqReq_dummy2_1(.CLK(CLK),
								    .D_IN(mmio_pRsQ_enqReq_dummy2_1$D_IN),
								    .EN(mmio_pRsQ_enqReq_dummy2_1$EN),
								    .Q_OUT());

  // submodule mmio_pRsQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_pRsQ_enqReq_dummy2_2(.CLK(CLK),
								    .D_IN(mmio_pRsQ_enqReq_dummy2_2$D_IN),
								    .EN(mmio_pRsQ_enqReq_dummy2_2$EN),
								    .Q_OUT(mmio_pRsQ_enqReq_dummy2_2$Q_OUT));

  // submodule perfReqQ
  FIFO1 #(.width(32'd9), .guarded(32'd1)) perfReqQ(.RST(RST_N),
						   .CLK(CLK),
						   .D_IN(perfReqQ$D_IN),
						   .ENQ(perfReqQ$ENQ),
						   .DEQ(perfReqQ$DEQ),
						   .CLR(perfReqQ$CLR),
						   .D_OUT(perfReqQ$D_OUT),
						   .FULL_N(perfReqQ$FULL_N),
						   .EMPTY_N(perfReqQ$EMPTY_N));

  // submodule regRenamingTable
  mkRegRenamingTable regRenamingTable(.CLK(CLK),
				      .RST_N(RST_N),
				      .rename_0_claimRename_r(regRenamingTable$rename_0_claimRename_r),
				      .rename_0_claimRename_sb(regRenamingTable$rename_0_claimRename_sb),
				      .rename_0_getRename_r(regRenamingTable$rename_0_getRename_r),
				      .rename_1_claimRename_r(regRenamingTable$rename_1_claimRename_r),
				      .rename_1_claimRename_sb(regRenamingTable$rename_1_claimRename_sb),
				      .rename_1_getRename_r(regRenamingTable$rename_1_getRename_r),
				      .specUpdate_correctSpeculation_mask(regRenamingTable$specUpdate_correctSpeculation_mask),
				      .specUpdate_incorrectSpeculation_kill_all(regRenamingTable$specUpdate_incorrectSpeculation_kill_all),
				      .specUpdate_incorrectSpeculation_kill_tag(regRenamingTable$specUpdate_incorrectSpeculation_kill_tag),
				      .EN_rename_0_claimRename(regRenamingTable$EN_rename_0_claimRename),
				      .EN_rename_1_claimRename(regRenamingTable$EN_rename_1_claimRename),
				      .EN_commit_0_commit(regRenamingTable$EN_commit_0_commit),
				      .EN_commit_1_commit(regRenamingTable$EN_commit_1_commit),
				      .EN_specUpdate_incorrectSpeculation(regRenamingTable$EN_specUpdate_incorrectSpeculation),
				      .EN_specUpdate_correctSpeculation(regRenamingTable$EN_specUpdate_correctSpeculation),
				      .rename_0_getRename(regRenamingTable$rename_0_getRename),
				      .RDY_rename_0_getRename(regRenamingTable$RDY_rename_0_getRename),
				      .RDY_rename_0_claimRename(regRenamingTable$RDY_rename_0_claimRename),
				      .rename_0_canRename(regRenamingTable$rename_0_canRename),
				      .RDY_rename_0_canRename(),
				      .rename_1_getRename(regRenamingTable$rename_1_getRename),
				      .RDY_rename_1_getRename(regRenamingTable$RDY_rename_1_getRename),
				      .RDY_rename_1_claimRename(regRenamingTable$RDY_rename_1_claimRename),
				      .rename_1_canRename(regRenamingTable$rename_1_canRename),
				      .RDY_rename_1_canRename(),
				      .RDY_commit_0_commit(regRenamingTable$RDY_commit_0_commit),
				      .commit_0_canCommit(),
				      .RDY_commit_0_canCommit(),
				      .RDY_commit_1_commit(regRenamingTable$RDY_commit_1_commit),
				      .commit_1_canCommit(),
				      .RDY_commit_1_canCommit(),
				      .RDY_specUpdate_incorrectSpeculation(),
				      .RDY_specUpdate_correctSpeculation());

  // submodule rf
  mkRFileSynth rf(.CLK(CLK),
		  .RST_N(RST_N),
		  .read_0_rd1_rindx(rf$read_0_rd1_rindx),
		  .read_0_rd2_rindx(rf$read_0_rd2_rindx),
		  .read_0_rd3_rindx(rf$read_0_rd3_rindx),
		  .read_1_rd1_rindx(rf$read_1_rd1_rindx),
		  .read_1_rd2_rindx(rf$read_1_rd2_rindx),
		  .read_1_rd3_rindx(rf$read_1_rd3_rindx),
		  .read_2_rd1_rindx(rf$read_2_rd1_rindx),
		  .read_2_rd2_rindx(rf$read_2_rd2_rindx),
		  .read_2_rd3_rindx(rf$read_2_rd3_rindx),
		  .read_3_rd1_rindx(rf$read_3_rd1_rindx),
		  .read_3_rd2_rindx(rf$read_3_rd2_rindx),
		  .read_3_rd3_rindx(rf$read_3_rd3_rindx),
		  .read_4_rd1_rindx(rf$read_4_rd1_rindx),
		  .read_4_rd2_rindx(rf$read_4_rd2_rindx),
		  .read_4_rd3_rindx(rf$read_4_rd3_rindx),
		  .write_0_wr_data(rf$write_0_wr_data),
		  .write_0_wr_rindx(rf$write_0_wr_rindx),
		  .write_1_wr_data(rf$write_1_wr_data),
		  .write_1_wr_rindx(rf$write_1_wr_rindx),
		  .write_2_wr_data(rf$write_2_wr_data),
		  .write_2_wr_rindx(rf$write_2_wr_rindx),
		  .write_3_wr_data(rf$write_3_wr_data),
		  .write_3_wr_rindx(rf$write_3_wr_rindx),
		  .write_4_wr_data(rf$write_4_wr_data),
		  .write_4_wr_rindx(rf$write_4_wr_rindx),
		  .EN_write_0_wr(rf$EN_write_0_wr),
		  .EN_write_1_wr(rf$EN_write_1_wr),
		  .EN_write_2_wr(rf$EN_write_2_wr),
		  .EN_write_3_wr(rf$EN_write_3_wr),
		  .EN_write_4_wr(rf$EN_write_4_wr),
		  .RDY_write_0_wr(),
		  .RDY_write_1_wr(),
		  .RDY_write_2_wr(),
		  .RDY_write_3_wr(),
		  .RDY_write_4_wr(),
		  .read_0_rd1(rf$read_0_rd1),
		  .RDY_read_0_rd1(),
		  .read_0_rd2(rf$read_0_rd2),
		  .RDY_read_0_rd2(),
		  .read_0_rd3(),
		  .RDY_read_0_rd3(),
		  .read_1_rd1(rf$read_1_rd1),
		  .RDY_read_1_rd1(),
		  .read_1_rd2(rf$read_1_rd2),
		  .RDY_read_1_rd2(),
		  .read_1_rd3(),
		  .RDY_read_1_rd3(),
		  .read_2_rd1(rf$read_2_rd1),
		  .RDY_read_2_rd1(),
		  .read_2_rd2(rf$read_2_rd2),
		  .RDY_read_2_rd2(),
		  .read_2_rd3(rf$read_2_rd3),
		  .RDY_read_2_rd3(),
		  .read_3_rd1(rf$read_3_rd1),
		  .RDY_read_3_rd1(),
		  .read_3_rd2(rf$read_3_rd2),
		  .RDY_read_3_rd2(),
		  .read_3_rd3(),
		  .RDY_read_3_rd3(),
		  .read_4_rd1(rf$read_4_rd1),
		  .RDY_read_4_rd1(),
		  .read_4_rd2(),
		  .RDY_read_4_rd2(),
		  .read_4_rd3(),
		  .RDY_read_4_rd3());

  // submodule rob
  mkReorderBufferSynth rob(.CLK(CLK),
			   .RST_N(RST_N),
			   .enqPort_0_enq_x(rob$enqPort_0_enq_x),
			   .enqPort_1_enq_x(rob$enqPort_1_enq_x),
			   .getOrigPC_0_get_x(rob$getOrigPC_0_get_x),
			   .getOrigPC_1_get_x(rob$getOrigPC_1_get_x),
			   .getOrigPC_2_get_x(rob$getOrigPC_2_get_x),
			   .getOrigPredPC_0_get_x(rob$getOrigPredPC_0_get_x),
			   .getOrigPredPC_1_get_x(rob$getOrigPredPC_1_get_x),
			   .getOrig_Inst_0_get_x(rob$getOrig_Inst_0_get_x),
			   .getOrig_Inst_1_get_x(rob$getOrig_Inst_1_get_x),
			   .setExecuted_deqLSQ_cause(rob$setExecuted_deqLSQ_cause),
			   .setExecuted_deqLSQ_ld_killed(rob$setExecuted_deqLSQ_ld_killed),
			   .setExecuted_deqLSQ_x(rob$setExecuted_deqLSQ_x),
			   .setExecuted_doFinishAlu_0_set_cf(rob$setExecuted_doFinishAlu_0_set_cf),
			   .setExecuted_doFinishAlu_0_set_csrData(rob$setExecuted_doFinishAlu_0_set_csrData),
			   .setExecuted_doFinishAlu_0_set_dst_data(rob$setExecuted_doFinishAlu_0_set_dst_data),
			   .setExecuted_doFinishAlu_0_set_x(rob$setExecuted_doFinishAlu_0_set_x),
			   .setExecuted_doFinishAlu_1_set_cf(rob$setExecuted_doFinishAlu_1_set_cf),
			   .setExecuted_doFinishAlu_1_set_csrData(rob$setExecuted_doFinishAlu_1_set_csrData),
			   .setExecuted_doFinishAlu_1_set_dst_data(rob$setExecuted_doFinishAlu_1_set_dst_data),
			   .setExecuted_doFinishAlu_1_set_x(rob$setExecuted_doFinishAlu_1_set_x),
			   .setExecuted_doFinishFpuMulDiv_0_set_dst_data(rob$setExecuted_doFinishFpuMulDiv_0_set_dst_data),
			   .setExecuted_doFinishFpuMulDiv_0_set_fflags(rob$setExecuted_doFinishFpuMulDiv_0_set_fflags),
			   .setExecuted_doFinishFpuMulDiv_0_set_x(rob$setExecuted_doFinishFpuMulDiv_0_set_x),
			   .setExecuted_doFinishMem_access_at_commit(rob$setExecuted_doFinishMem_access_at_commit),
			   .setExecuted_doFinishMem_non_mmio_st_done(rob$setExecuted_doFinishMem_non_mmio_st_done),
			   .setExecuted_doFinishMem_store_data(rob$setExecuted_doFinishMem_store_data),
			   .setExecuted_doFinishMem_store_data_BE(rob$setExecuted_doFinishMem_store_data_BE),
			   .setExecuted_doFinishMem_vaddr(rob$setExecuted_doFinishMem_vaddr),
			   .setExecuted_doFinishMem_x(rob$setExecuted_doFinishMem_x),
			   .setLSQAtCommitNotified_x(rob$setLSQAtCommitNotified_x),
			   .specUpdate_correctSpeculation_mask(rob$specUpdate_correctSpeculation_mask),
			   .specUpdate_incorrectSpeculation_inst_tag(rob$specUpdate_incorrectSpeculation_inst_tag),
			   .specUpdate_incorrectSpeculation_kill_all(rob$specUpdate_incorrectSpeculation_kill_all),
			   .specUpdate_incorrectSpeculation_spec_tag(rob$specUpdate_incorrectSpeculation_spec_tag),
			   .EN_enqPort_0_enq(rob$EN_enqPort_0_enq),
			   .EN_enqPort_1_enq(rob$EN_enqPort_1_enq),
			   .EN_deqPort_0_deq(rob$EN_deqPort_0_deq),
			   .EN_deqPort_1_deq(rob$EN_deqPort_1_deq),
			   .EN_setLSQAtCommitNotified(rob$EN_setLSQAtCommitNotified),
			   .EN_setExecuted_deqLSQ(rob$EN_setExecuted_deqLSQ),
			   .EN_setExecuted_doFinishAlu_0_set(rob$EN_setExecuted_doFinishAlu_0_set),
			   .EN_setExecuted_doFinishAlu_1_set(rob$EN_setExecuted_doFinishAlu_1_set),
			   .EN_setExecuted_doFinishFpuMulDiv_0_set(rob$EN_setExecuted_doFinishFpuMulDiv_0_set),
			   .EN_setExecuted_doFinishMem(rob$EN_setExecuted_doFinishMem),
			   .EN_specUpdate_incorrectSpeculation(rob$EN_specUpdate_incorrectSpeculation),
			   .EN_specUpdate_correctSpeculation(rob$EN_specUpdate_correctSpeculation),
			   .enqPort_0_canEnq(rob$enqPort_0_canEnq),
			   .RDY_enqPort_0_canEnq(),
			   .RDY_enqPort_0_enq(rob$RDY_enqPort_0_enq),
			   .enqPort_0_getEnqInstTag(rob$enqPort_0_getEnqInstTag),
			   .RDY_enqPort_0_getEnqInstTag(),
			   .enqPort_1_canEnq(rob$enqPort_1_canEnq),
			   .RDY_enqPort_1_canEnq(),
			   .RDY_enqPort_1_enq(rob$RDY_enqPort_1_enq),
			   .enqPort_1_getEnqInstTag(rob$enqPort_1_getEnqInstTag),
			   .RDY_enqPort_1_getEnqInstTag(),
			   .isEmpty(rob$isEmpty),
			   .RDY_isEmpty(),
			   .deqPort_0_canDeq(rob$deqPort_0_canDeq),
			   .RDY_deqPort_0_canDeq(),
			   .RDY_deqPort_0_deq(rob$RDY_deqPort_0_deq),
			   .deqPort_0_getDeqInstTag(rob$deqPort_0_getDeqInstTag),
			   .RDY_deqPort_0_getDeqInstTag(),
			   .deqPort_0_deq_data(rob$deqPort_0_deq_data),
			   .RDY_deqPort_0_deq_data(rob$RDY_deqPort_0_deq_data),
			   .deqPort_1_canDeq(rob$deqPort_1_canDeq),
			   .RDY_deqPort_1_canDeq(),
			   .RDY_deqPort_1_deq(rob$RDY_deqPort_1_deq),
			   .deqPort_1_getDeqInstTag(),
			   .RDY_deqPort_1_getDeqInstTag(),
			   .deqPort_1_deq_data(rob$deqPort_1_deq_data),
			   .RDY_deqPort_1_deq_data(rob$RDY_deqPort_1_deq_data),
			   .RDY_setLSQAtCommitNotified(rob$RDY_setLSQAtCommitNotified),
			   .RDY_setExecuted_deqLSQ(rob$RDY_setExecuted_deqLSQ),
			   .RDY_setExecuted_doFinishAlu_0_set(rob$RDY_setExecuted_doFinishAlu_0_set),
			   .RDY_setExecuted_doFinishAlu_1_set(rob$RDY_setExecuted_doFinishAlu_1_set),
			   .RDY_setExecuted_doFinishFpuMulDiv_0_set(rob$RDY_setExecuted_doFinishFpuMulDiv_0_set),
			   .RDY_setExecuted_doFinishMem(rob$RDY_setExecuted_doFinishMem),
			   .getOrigPC_0_get(rob$getOrigPC_0_get),
			   .RDY_getOrigPC_0_get(),
			   .getOrigPC_1_get(rob$getOrigPC_1_get),
			   .RDY_getOrigPC_1_get(),
			   .getOrigPC_2_get(),
			   .RDY_getOrigPC_2_get(),
			   .getOrigPredPC_0_get(rob$getOrigPredPC_0_get),
			   .RDY_getOrigPredPC_0_get(),
			   .getOrigPredPC_1_get(rob$getOrigPredPC_1_get),
			   .RDY_getOrigPredPC_1_get(),
			   .getOrig_Inst_0_get(rob$getOrig_Inst_0_get),
			   .RDY_getOrig_Inst_0_get(),
			   .getOrig_Inst_1_get(rob$getOrig_Inst_1_get),
			   .RDY_getOrig_Inst_1_get(),
			   .getEnqTime(rob$getEnqTime),
			   .RDY_getEnqTime(),
			   .isEmpty_ehrPort0(),
			   .RDY_isEmpty_ehrPort0(),
			   .isFull_ehrPort0(),
			   .RDY_isFull_ehrPort0(),
			   .RDY_specUpdate_incorrectSpeculation(),
			   .RDY_specUpdate_correctSpeculation());

  // submodule sbAggr
  mkScoreboardAggr sbAggr(.CLK(CLK),
			  .RST_N(RST_N),
			  .eagerLookup_0_get_r(sbAggr$eagerLookup_0_get_r),
			  .eagerLookup_1_get_r(sbAggr$eagerLookup_1_get_r),
			  .setBusy_0_set_dst(sbAggr$setBusy_0_set_dst),
			  .setBusy_1_set_dst(sbAggr$setBusy_1_set_dst),
			  .setReady_0_put(sbAggr$setReady_0_put),
			  .setReady_1_put(sbAggr$setReady_1_put),
			  .setReady_2_put(sbAggr$setReady_2_put),
			  .setReady_3_put(sbAggr$setReady_3_put),
			  .setReady_4_put(sbAggr$setReady_4_put),
			  .EN_setBusy_0_set(sbAggr$EN_setBusy_0_set),
			  .EN_setBusy_1_set(sbAggr$EN_setBusy_1_set),
			  .EN_setReady_0_put(sbAggr$EN_setReady_0_put),
			  .EN_setReady_1_put(sbAggr$EN_setReady_1_put),
			  .EN_setReady_2_put(sbAggr$EN_setReady_2_put),
			  .EN_setReady_3_put(sbAggr$EN_setReady_3_put),
			  .EN_setReady_4_put(sbAggr$EN_setReady_4_put),
			  .eagerLookup_0_get(sbAggr$eagerLookup_0_get),
			  .RDY_eagerLookup_0_get(),
			  .eagerLookup_1_get(sbAggr$eagerLookup_1_get),
			  .RDY_eagerLookup_1_get(),
			  .RDY_setBusy_0_set(),
			  .RDY_setBusy_1_set(),
			  .RDY_setReady_0_put(),
			  .RDY_setReady_1_put(),
			  .RDY_setReady_2_put(),
			  .RDY_setReady_3_put(),
			  .RDY_setReady_4_put());

  // submodule sbCons
  mkScoreboardCons sbCons(.CLK(CLK),
			  .RST_N(RST_N),
			  .eagerLookup_0_get_r(sbCons$eagerLookup_0_get_r),
			  .eagerLookup_1_get_r(sbCons$eagerLookup_1_get_r),
			  .lazyLookup_0_get_r(sbCons$lazyLookup_0_get_r),
			  .lazyLookup_1_get_r(sbCons$lazyLookup_1_get_r),
			  .lazyLookup_2_get_r(sbCons$lazyLookup_2_get_r),
			  .lazyLookup_3_get_r(sbCons$lazyLookup_3_get_r),
			  .lazyLookup_4_get_r(sbCons$lazyLookup_4_get_r),
			  .setBusy_0_set_dst(sbCons$setBusy_0_set_dst),
			  .setBusy_1_set_dst(sbCons$setBusy_1_set_dst),
			  .setReady_0_put(sbCons$setReady_0_put),
			  .setReady_1_put(sbCons$setReady_1_put),
			  .setReady_2_put(sbCons$setReady_2_put),
			  .setReady_3_put(sbCons$setReady_3_put),
			  .setReady_4_put(sbCons$setReady_4_put),
			  .EN_setBusy_0_set(sbCons$EN_setBusy_0_set),
			  .EN_setBusy_1_set(sbCons$EN_setBusy_1_set),
			  .EN_setReady_0_put(sbCons$EN_setReady_0_put),
			  .EN_setReady_1_put(sbCons$EN_setReady_1_put),
			  .EN_setReady_2_put(sbCons$EN_setReady_2_put),
			  .EN_setReady_3_put(sbCons$EN_setReady_3_put),
			  .EN_setReady_4_put(sbCons$EN_setReady_4_put),
			  .eagerLookup_0_get(),
			  .RDY_eagerLookup_0_get(),
			  .eagerLookup_1_get(),
			  .RDY_eagerLookup_1_get(),
			  .RDY_setBusy_0_set(),
			  .RDY_setBusy_1_set(),
			  .RDY_setReady_0_put(),
			  .RDY_setReady_1_put(),
			  .RDY_setReady_2_put(),
			  .RDY_setReady_3_put(),
			  .RDY_setReady_4_put(),
			  .lazyLookup_0_get(sbCons$lazyLookup_0_get),
			  .RDY_lazyLookup_0_get(),
			  .lazyLookup_1_get(sbCons$lazyLookup_1_get),
			  .RDY_lazyLookup_1_get(),
			  .lazyLookup_2_get(sbCons$lazyLookup_2_get),
			  .RDY_lazyLookup_2_get(),
			  .lazyLookup_3_get(sbCons$lazyLookup_3_get),
			  .RDY_lazyLookup_3_get(),
			  .lazyLookup_4_get(),
			  .RDY_lazyLookup_4_get());

  // submodule specTagManager
  mkSpecTagManager specTagManager(.CLK(CLK),
				  .RST_N(RST_N),
				  .specUpdate_correctSpeculation_mask(specTagManager$specUpdate_correctSpeculation_mask),
				  .specUpdate_incorrectSpeculation_kill_all(specTagManager$specUpdate_incorrectSpeculation_kill_all),
				  .specUpdate_incorrectSpeculation_kill_tag(specTagManager$specUpdate_incorrectSpeculation_kill_tag),
				  .EN_claimSpecTag(specTagManager$EN_claimSpecTag),
				  .EN_specUpdate_incorrectSpeculation(specTagManager$EN_specUpdate_incorrectSpeculation),
				  .EN_specUpdate_correctSpeculation(specTagManager$EN_specUpdate_correctSpeculation),
				  .currentSpecBits(specTagManager$currentSpecBits),
				  .RDY_currentSpecBits(),
				  .nextSpecTag(specTagManager$nextSpecTag),
				  .RDY_nextSpecTag(specTagManager$RDY_nextSpecTag),
				  .RDY_claimSpecTag(specTagManager$RDY_claimSpecTag),
				  .canClaim(specTagManager$canClaim),
				  .RDY_canClaim(),
				  .RDY_specUpdate_incorrectSpeculation(),
				  .RDY_specUpdate_correctSpeculation(),
				  .isFull_ehrPort0(),
				  .RDY_isFull_ehrPort0());

  // rule RL_rl_outOfReset
  assign CAN_FIRE_RL_rl_outOfReset = !outOfReset ;
  assign WILL_FIRE_RL_rl_outOfReset = CAN_FIRE_RL_rl_outOfReset ;

  // rule RL_sendDTlbReq
  assign CAN_FIRE_RL_sendDTlbReq =
	     coreFix_memExe_dTlb$RDY_toParent_rqToP_first &&
	     coreFix_memExe_dTlb$RDY_toParent_rqToP_deq &&
	     l2Tlb$RDY_toChildren_rqFromC_put ;
  assign WILL_FIRE_RL_sendDTlbReq = CAN_FIRE_RL_sendDTlbReq ;

  // rule RL_sendITlbReq
  assign CAN_FIRE_RL_sendITlbReq =
	     l2Tlb$RDY_toChildren_rqFromC_put &&
	     fetchStage$RDY_iTlbIfc_toParent_rqToP_first &&
	     fetchStage$RDY_iTlbIfc_toParent_rqToP_deq ;
  assign WILL_FIRE_RL_sendITlbReq =
	     CAN_FIRE_RL_sendITlbReq && !WILL_FIRE_RL_sendDTlbReq ;

  // rule RL_sendRsToDTlb
  assign CAN_FIRE_RL_sendRsToDTlb =
	     l2Tlb$RDY_toChildren_rsToC_first &&
	     l2Tlb$RDY_toChildren_rsToC_deq &&
	     coreFix_memExe_dTlb$RDY_toParent_ldTransRsFromP_enq &&
	     l2Tlb$toChildren_rsToC_first[83] ;
  assign WILL_FIRE_RL_sendRsToDTlb = CAN_FIRE_RL_sendRsToDTlb ;

  // rule RL_sendRsToITlb
  assign CAN_FIRE_RL_sendRsToITlb =
	     l2Tlb$RDY_toChildren_rsToC_first &&
	     l2Tlb$RDY_toChildren_rsToC_deq &&
	     fetchStage$RDY_iTlbIfc_toParent_rsFromP_enq &&
	     !l2Tlb$toChildren_rsToC_first[83] ;
  assign WILL_FIRE_RL_sendRsToITlb = CAN_FIRE_RL_sendRsToITlb ;

  // rule RL_mkConnectionGetPut
  assign CAN_FIRE_RL_mkConnectionGetPut =
	     coreFix_memExe_dTlb$RDY_toParent_flush_request_get &&
	     l2Tlb$RDY_toChildren_dTlbReqFlush_put ;
  assign WILL_FIRE_RL_mkConnectionGetPut = CAN_FIRE_RL_mkConnectionGetPut ;

  // rule RL_mkConnectionGetPut_1
  assign CAN_FIRE_RL_mkConnectionGetPut_1 =
	     l2Tlb$RDY_toChildren_iTlbReqFlush_put &&
	     fetchStage$RDY_iTlbIfc_toParent_flush_request_get ;
  assign WILL_FIRE_RL_mkConnectionGetPut_1 =
	     CAN_FIRE_RL_mkConnectionGetPut_1 ;

  // rule RL_sendFlushDone
  assign CAN_FIRE_RL_sendFlushDone =
	     coreFix_memExe_dTlb$RDY_toParent_flush_response_put &&
	     l2Tlb$RDY_toChildren_flushDone_get &&
	     fetchStage$RDY_iTlbIfc_toParent_flush_response_put ;
  assign WILL_FIRE_RL_sendFlushDone = CAN_FIRE_RL_sendFlushDone ;

  // rule RL_sendRobEnqTime
  assign CAN_FIRE_RL_sendRobEnqTime = 1'd1 ;
  assign WILL_FIRE_RL_sendRobEnqTime = 1'd1 ;

  // rule RL_setDoFlushCaches
  assign CAN_FIRE_RL_setDoFlushCaches =
	     flush_caches && fetchStage$emptyForFlush &&
	     coreFix_memExe_lsq$noWrongPathLoads ;
  assign WILL_FIRE_RL_setDoFlushCaches = CAN_FIRE_RL_setDoFlushCaches ;

  // rule RL_setDoFlushBrPred
  assign CAN_FIRE_RL_setDoFlushBrPred =
	     flush_brpred && fetchStage$emptyForFlush ;
  assign WILL_FIRE_RL_setDoFlushBrPred = CAN_FIRE_RL_setDoFlushBrPred ;

  // rule RL_readyToFetch
  assign CAN_FIRE_RL_readyToFetch =
	     fetchStage$RDY_done_flushing &&
	     rg_core_run_state_read__3117_EQ_2_3118_AND_NOT_ETC___d15278 &&
	     !flush_brpred &&
	     fetchStage$iMemIfc_flush_done &&
	     fetchStage$flush_predictors_done ;
  assign WILL_FIRE_RL_readyToFetch = CAN_FIRE_RL_readyToFetch ;

  // rule RL_flushCaches
  assign CAN_FIRE_RL_flushCaches = CAN_FIRE_RL_setDoFlushCaches ;
  assign WILL_FIRE_RL_flushCaches = CAN_FIRE_RL_setDoFlushCaches ;

  // rule RL_flushBrPred
  assign CAN_FIRE_RL_flushBrPred = CAN_FIRE_RL_setDoFlushBrPred ;
  assign WILL_FIRE_RL_flushBrPred = CAN_FIRE_RL_setDoFlushBrPred ;

  // rule RL_rl_debug_gpr_read
  assign CAN_FIRE_RL_rl_debug_gpr_read =
	     regRenamingTable$RDY_rename_0_getRename && f_gpr_reqs$EMPTY_N &&
	     f_gpr_rsps$FULL_N &&
	     rg_core_run_state == 2'd1 &&
	     !f_gpr_reqs$D_OUT[69] ;
  assign WILL_FIRE_RL_rl_debug_gpr_read = CAN_FIRE_RL_rl_debug_gpr_read ;

  // rule RL_rl_debug_gpr_access_busy
  assign CAN_FIRE_RL_rl_debug_gpr_access_busy =
	     f_gpr_reqs$EMPTY_N && f_gpr_rsps$FULL_N &&
	     rg_core_run_state == 2'd2 ;
  assign WILL_FIRE_RL_rl_debug_gpr_access_busy =
	     CAN_FIRE_RL_rl_debug_gpr_access_busy ;

  // rule RL_rl_debug_fpr_read
  assign CAN_FIRE_RL_rl_debug_fpr_read =
	     regRenamingTable$RDY_rename_0_getRename && f_fpr_reqs$EMPTY_N &&
	     f_fpr_rsps$FULL_N &&
	     rg_core_run_state == 2'd1 &&
	     !f_gpr_reqs$EMPTY_N &&
	     !f_fpr_reqs$D_OUT[69] ;
  assign WILL_FIRE_RL_rl_debug_fpr_read = CAN_FIRE_RL_rl_debug_fpr_read ;

  // rule RL_rl_debug_fpr_access_busy
  assign CAN_FIRE_RL_rl_debug_fpr_access_busy =
	     f_fpr_reqs$EMPTY_N && f_fpr_rsps$FULL_N &&
	     rg_core_run_state == 2'd2 ;
  assign WILL_FIRE_RL_rl_debug_fpr_access_busy =
	     CAN_FIRE_RL_rl_debug_fpr_access_busy ;

  // rule RL_rl_debug_csr_access_busy
  assign CAN_FIRE_RL_rl_debug_csr_access_busy =
	     f_csr_reqs$EMPTY_N && f_csr_rsps$FULL_N &&
	     rg_core_run_state == 2'd2 ;
  assign WILL_FIRE_RL_rl_debug_csr_access_busy =
	     CAN_FIRE_RL_rl_debug_csr_access_busy ;

  // rule RL_rl_debug_halt_req
  assign CAN_FIRE_RL_rl_debug_halt_req =
	     f_run_halt_reqs$EMPTY_N && !renameStage_rg_m_halt_req[4] &&
	     rg_core_run_state == 2'd2 &&
	     !f_run_halt_reqs$D_OUT ;
  assign WILL_FIRE_RL_rl_debug_halt_req =
	     CAN_FIRE_RL_rl_debug_halt_req && !EN_coreReq_start ;

  // rule RL_rl_debug_halt_req_already_halted
  assign CAN_FIRE_RL_rl_debug_halt_req_already_halted =
	     f_run_halt_reqs$EMPTY_N && f_run_halt_rsps$FULL_N &&
	     rg_core_run_state != 2'd2 &&
	     !f_run_halt_reqs$D_OUT ;
  assign WILL_FIRE_RL_rl_debug_halt_req_already_halted =
	     CAN_FIRE_RL_rl_debug_halt_req_already_halted ;

  // rule RL_rl_debug_halted
  assign CAN_FIRE_RL_rl_debug_halted =
	     f_run_halt_rsps$FULL_N && rg_core_run_state == 2'd0 ;
  assign WILL_FIRE_RL_rl_debug_halted =
	     CAN_FIRE_RL_rl_debug_halted &&
	     !WILL_FIRE_RL_rl_debug_halt_req_already_halted ;

  // rule RL_rl_debug_run_redundant
  assign CAN_FIRE_RL_rl_debug_run_redundant =
	     f_run_halt_reqs$EMPTY_N && f_run_halt_rsps$FULL_N &&
	     rg_core_run_state == 2'd2 &&
	     f_run_halt_reqs$D_OUT ;
  assign WILL_FIRE_RL_rl_debug_run_redundant =
	     CAN_FIRE_RL_rl_debug_run_redundant ;

  // rule RL_csrf_minstret_ehr_setRead
  assign CAN_FIRE_RL_csrf_minstret_ehr_setRead = 1'd1 ;
  assign WILL_FIRE_RL_csrf_minstret_ehr_setRead = 1'd1 ;

  // rule RL_csrf_mcycle_ehr_setRead
  assign CAN_FIRE_RL_csrf_mcycle_ehr_setRead = 1'd1 ;
  assign WILL_FIRE_RL_csrf_mcycle_ehr_setRead = 1'd1 ;

  // rule RL_rl_debug_csr_read
  assign CAN_FIRE_RL_rl_debug_csr_read =
	     f_csr_reqs$EMPTY_N && f_csr_rsps$FULL_N &&
	     rg_core_run_state == 2'd1 &&
	     !f_csr_reqs$D_OUT[76] ;
  assign WILL_FIRE_RL_rl_debug_csr_read = CAN_FIRE_RL_rl_debug_csr_read ;

  // rule RL_rl_debug_csr_write
  assign CAN_FIRE_RL_rl_debug_csr_write =
	     f_csr_reqs$EMPTY_N &&
	     f_csr_rsps_i_notFull__5339_AND_f_csr_reqs_firs_ETC___d15442 &&
	     rg_core_run_state == 2'd1 &&
	     f_csr_reqs$D_OUT[76] ;
  assign WILL_FIRE_RL_rl_debug_csr_write = CAN_FIRE_RL_rl_debug_csr_write ;

  // rule RL_mmio_handlePRq
  assign CAN_FIRE_RL_mmio_handlePRq =
	     !mmio_pRqQ_empty && !mmio_cRsQ_full &&
	     (!csrInstOrInterruptInflight_dummy2_0$Q_OUT ||
	      !csrInstOrInterruptInflight_dummy2_1$Q_OUT ||
	      !csrInstOrInterruptInflight_rl) ;
  assign WILL_FIRE_RL_mmio_handlePRq = CAN_FIRE_RL_mmio_handlePRq ;

  // rule RL_mmio_sendDataReq
  assign CAN_FIRE_RL_mmio_sendDataReq =
	     !mmio_dataReqQ_empty && !mmio_cRqQ_full ;
  assign WILL_FIRE_RL_mmio_sendDataReq = CAN_FIRE_RL_mmio_sendDataReq ;

  // rule RL_mmio_sendInstReq
  assign CAN_FIRE_RL_mmio_sendInstReq =
	     !mmio_cRqQ_full && fetchStage$RDY_mmioIfc_instReq_first_snd &&
	     fetchStage$RDY_mmioIfc_instReq_first_fst &&
	     fetchStage$RDY_mmioIfc_instReq_deq ;
  assign WILL_FIRE_RL_mmio_sendInstReq =
	     CAN_FIRE_RL_mmio_sendInstReq && !WILL_FIRE_RL_mmio_sendDataReq ;

  // rule RL_mmio_sendDataResp
  assign CAN_FIRE_RL_mmio_sendDataResp =
	     !mmio_dataRespQ_full && !mmio_pRsQ_empty &&
	     mmio_pRsQ_data_0[68] ;
  assign WILL_FIRE_RL_mmio_sendDataResp = CAN_FIRE_RL_mmio_sendDataResp ;

  // rule RL_mmio_sendInstResp
  assign CAN_FIRE_RL_mmio_sendInstResp =
	     !mmio_pRsQ_empty && fetchStage$RDY_mmioIfc_instResp_enq &&
	     !mmio_pRsQ_data_0[68] ;
  assign WILL_FIRE_RL_mmio_sendInstResp = CAN_FIRE_RL_mmio_sendInstResp ;

  // rule RL_mmio_cRqQ_canonicalize
  assign CAN_FIRE_RL_mmio_cRqQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_mmio_cRqQ_canonicalize = 1'd1 ;

  // rule RL_mmio_cRqQ_enqReq_canon
  assign CAN_FIRE_RL_mmio_cRqQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_cRqQ_enqReq_canon = 1'd1 ;

  // rule RL_mmio_cRqQ_deqReq_canon
  assign CAN_FIRE_RL_mmio_cRqQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_cRqQ_deqReq_canon = 1'd1 ;

  // rule RL_mmio_cRqQ_clearReq_canon
  assign CAN_FIRE_RL_mmio_cRqQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_cRqQ_clearReq_canon = 1'd1 ;

  // rule RL_mmio_pRsQ_canonicalize
  assign CAN_FIRE_RL_mmio_pRsQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_mmio_pRsQ_canonicalize = 1'd1 ;

  // rule RL_mmio_pRsQ_enqReq_canon
  assign CAN_FIRE_RL_mmio_pRsQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_pRsQ_enqReq_canon = 1'd1 ;

  // rule RL_mmio_pRsQ_deqReq_canon
  assign CAN_FIRE_RL_mmio_pRsQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_pRsQ_deqReq_canon = 1'd1 ;

  // rule RL_mmio_pRsQ_clearReq_canon
  assign CAN_FIRE_RL_mmio_pRsQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_pRsQ_clearReq_canon = 1'd1 ;

  // rule RL_mmio_cRsQ_canonicalize
  assign CAN_FIRE_RL_mmio_cRsQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_mmio_cRsQ_canonicalize = 1'd1 ;

  // rule RL_mmio_cRsQ_enqReq_canon
  assign CAN_FIRE_RL_mmio_cRsQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_cRsQ_enqReq_canon = 1'd1 ;

  // rule RL_mmio_cRsQ_deqReq_canon
  assign CAN_FIRE_RL_mmio_cRsQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_cRsQ_deqReq_canon = 1'd1 ;

  // rule RL_mmio_cRsQ_clearReq_canon
  assign CAN_FIRE_RL_mmio_cRsQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_cRsQ_clearReq_canon = 1'd1 ;

  // rule RL_coreFix_doFetchTrainBP
  assign CAN_FIRE_RL_coreFix_doFetchTrainBP = coreFix_trainBPQ_1$EMPTY_N ;
  assign WILL_FIRE_RL_coreFix_doFetchTrainBP = coreFix_trainBPQ_1$EMPTY_N ;

  // rule RL_coreFix_doFetchTrainBP_1
  assign CAN_FIRE_RL_coreFix_doFetchTrainBP_1 = coreFix_trainBPQ_0$EMPTY_N ;
  assign WILL_FIRE_RL_coreFix_doFetchTrainBP_1 =
	     coreFix_trainBPQ_0$EMPTY_N && !coreFix_trainBPQ_1$EMPTY_N ;

  // rule RL_coreFix_memExe_doIssueSB
  assign CAN_FIRE_RL_coreFix_memExe_doIssueSB =
	     (!coreFix_memExe_reqStQ_full_dummy2_0$Q_OUT ||
	      !coreFix_memExe_reqStQ_full_dummy2_1$Q_OUT ||
	      !coreFix_memExe_reqStQ_full_dummy2_2$Q_OUT ||
	      !coreFix_memExe_reqStQ_full_rl) &&
	     coreFix_memExe_stb$RDY_issue ;
  assign WILL_FIRE_RL_coreFix_memExe_doIssueSB =
	     CAN_FIRE_RL_coreFix_memExe_doIssueSB ;

  // rule RL_coreFix_memExe_doDeqLdQ_Lr_issue
  assign CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue =
	     NOT_coreFix_memExe_reqLrScAmoQ_full_dummy2_0_r_ETC___d1086 &&
	     coreFix_memExe_lsq$RDY_firstLd &&
	     !coreFix_memExe_lsq$firstLd[7] &&
	     !coreFix_memExe_lsq$firstLd[16] &&
	     coreFix_memExe_lsq$firstLd[101] &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] == 2'd0 &&
	     coreFix_memExe_stb$noMatchLdQ &&
	     (!coreFix_memExe_lsq$firstLd[90] || coreFix_memExe_stb$isEmpty) ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue =
	     CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue ;

  // rule RL_coreFix_memExe_doDeqLdQ_MMIO_issue
  assign CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue =
	     !mmio_dataReqQ_full && !mmio_dataPendQ_full &&
	     coreFix_memExe_lsq$RDY_firstLd &&
	     !coreFix_memExe_lsq$firstLd[7] &&
	     coreFix_memExe_lsq$firstLd[16] &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] == 2'd0 &&
	     (!coreFix_memExe_lsq$firstLd[90] || coreFix_memExe_stb$isEmpty) ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue =
	     CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue ;

  // rule RL_coreFix_memExe_dMem_perfReqQ_canonicalize
  assign CAN_FIRE_RL_coreFix_memExe_dMem_perfReqQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_perfReqQ_canonicalize = 1'd1 ;

  // rule RL_coreFix_memExe_dMem_perfReqQ_clearReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_perfReqQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_perfReqQ_clearReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_dMem_perfReqQ_deqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_perfReqQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_perfReqQ_deqReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_dMem_perfReqQ_enqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_perfReqQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_perfReqQ_enqReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$EMPTY_N &&
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$FULL_N ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromSendRsToP
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromSendRsToP =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$FULL_N &&
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$EMPTY_N ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromSendRsToP =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromSendRsToP &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq =
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full &&
	     coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$RDY_sendRsToP_pRq_releaseEntry &&
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$EMPTY_N &&
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[3] ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP =
	     !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full &&
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$EMPTY_N ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq =
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full &&
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$EMPTY_N &&
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$FULL_N &&
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[3] ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo =
	     !coreFix_memExe_respLrScAmoQ_full &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$RDY_pipelineResp_releaseEntry &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite &&
	     coreFix_memExe_dMem_cache_m_banks_0_processAmo[158] ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2762 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_processAmo[158] &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[578:577] ==
	     2'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_canonicalize
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_canonicalize =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_canonicalize =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_canonicalize
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_canonicalize =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_canonicalize =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_canon =
	     1'd1 ;

  // rule RL_coreFix_fpuMulDivExe_0_fpuExec_deqFmaPoisoned
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqFmaPoisoned =
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_fpuExec_double_fma$RDY_response_get &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_first_poisoned &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_poisoned ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqFmaPoisoned =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqFmaPoisoned ;

  // rule RL_coreFix_fpuMulDivExe_0_fpuExec_deqDivPoisoned
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqDivPoisoned =
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_fpuExec_double_div$RDY_response_get &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_first_poisoned &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_poisoned ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqDivPoisoned =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqDivPoisoned ;

  // rule RL_coreFix_fpuMulDivExe_0_fpuExec_deqSqrtPoisoned
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqSqrtPoisoned =
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$RDY_response_get &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_first_poisoned &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_poisoned ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqSqrtPoisoned =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqSqrtPoisoned ;

  // rule RL_coreFix_fpuMulDivExe_0_mulDivExec_deqMulPoisoned
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqMulPoisoned =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_first_poisoned &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$EMPTY_N &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_poisoned ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqMulPoisoned =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqMulPoisoned ;

  // rule RL_coreFix_fpuMulDivExe_0_mulDivExec_deqDivPoisoned
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqDivPoisoned =
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$m_axis_dout_tvalid &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_first_poisoned &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg$IS_READY &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_poisoned ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqDivPoisoned =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqDivPoisoned ;

  // rule RL_renameStage_doRenaming_wrongPath
  assign CAN_FIRE_RL_renameStage_doRenaming_wrongPath =
	     fetchStage$RDY_pipelines_0_first &&
	     (!fetchStage$pipelines_0_canDeq ||
	      epochManager$checkEpoch_0_check ||
	      fetchStage$RDY_pipelines_0_deq) &&
	     NOT_fetchStage_pipelines_1_canDeq__2822_2823_O_ETC___d12831 &&
	     !epochManager$checkEpoch_0_check ;
  assign WILL_FIRE_RL_renameStage_doRenaming_wrongPath =
	     CAN_FIRE_RL_renameStage_doRenaming_wrongPath ;

  // rule RL_commitStage_doCommitTrap_flush
  assign CAN_FIRE_RL_commitStage_doCommitTrap_flush =
	     rob$RDY_deqPort_0_deq_data && rob$RDY_deqPort_0_deq &&
	     (rob$deqPort_0_deq_data[4] || epochManager$RDY_incrementEpoch) &&
	     !commitStage_rg_run_state &&
	     !commitStage_commitTrap[165] &&
	     rob$deqPort_0_deq_data[157] ;
  assign WILL_FIRE_RL_commitStage_doCommitTrap_flush =
	     CAN_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_renameStage_doRenaming &&
	     !WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	     !WILL_FIRE_RL_renameStage_doRenaming_Trap &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     !WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doExeMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdForward &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_commitStage_doCommitTrap_handle
  assign CAN_FIRE_RL_commitStage_doCommitTrap_handle =
	     NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14574 &&
	     commitStage_commitTrap_4406_BIT_36_4532_AND_co_ETC___d14598 &&
	     commitStage_commitTrap[165] &&
	     !commitStage_rg_run_state ;
  assign WILL_FIRE_RL_commitStage_doCommitTrap_handle =
	     CAN_FIRE_RL_commitStage_doCommitTrap_handle &&
	     !WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	     !WILL_FIRE_RL_renameStage_doRenaming_Trap &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_prepareCachesAndTlbs ;

  // rule RL_commitStage_doCommitKilledLd
  assign CAN_FIRE_RL_commitStage_doCommitKilledLd =
	     epochManager$RDY_incrementEpoch && rob$RDY_deqPort_0_deq_data &&
	     rob$RDY_deqPort_0_deq &&
	     !commitStage_rg_run_state &&
	     !commitStage_commitTrap[165] &&
	     !rob$deqPort_0_deq_data[157] &&
	     rob$deqPort_0_deq_data[10] ;
  assign WILL_FIRE_RL_commitStage_doCommitKilledLd =
	     CAN_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_renameStage_doRenaming &&
	     !WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	     !WILL_FIRE_RL_renameStage_doRenaming_Trap &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     !WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doExeMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdForward &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_commitStage_doCommitSystemInst
  assign CAN_FIRE_RL_commitStage_doCommitSystemInst =
	     coreFix_memExe_stb_isEmpty__071_AND_coreFix_me_ETC___d14809 &&
	     NOT_commitStage_rg_run_state_4404_4405_AND_NOT_ETC___d14815 &&
	     (rob$deqPort_0_deq_data[247:243] == 5'd0 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd21 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd17 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd18 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd13 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd16 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd15 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd19 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd20) ;
  assign WILL_FIRE_RL_commitStage_doCommitSystemInst =
	     CAN_FIRE_RL_commitStage_doCommitSystemInst &&
	     !WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	     !WILL_FIRE_RL_renameStage_doRenaming_Trap &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_rl_debug_csr_write &&
	     !WILL_FIRE_RL_prepareCachesAndTlbs ;

  // rule RL_csrf_incCycle
  assign CAN_FIRE_RL_csrf_incCycle = 1'd1 ;
  assign WILL_FIRE_RL_csrf_incCycle = 1'd1 ;

  // rule RL_csrf_mcycle_ehr_data_canon
  assign CAN_FIRE_RL_csrf_mcycle_ehr_data_canon = 1'd1 ;
  assign WILL_FIRE_RL_csrf_mcycle_ehr_data_canon = 1'd1 ;

  // rule RL_commitStage_notifyLSQCommit
  assign CAN_FIRE_RL_commitStage_notifyLSQCommit =
	     rob$RDY_setLSQAtCommitNotified && rob$RDY_deqPort_0_deq_data &&
	     !commitStage_commitTrap[165] &&
	     !rob$deqPort_0_deq_data[157] &&
	     !rob$deqPort_0_deq_data[10] &&
	     !rob$deqPort_0_deq_data[15] &&
	     rob$deqPort_0_deq_data[7] &&
	     !rob$deqPort_0_deq_data[6] ;
  assign WILL_FIRE_RL_commitStage_notifyLSQCommit =
	     CAN_FIRE_RL_commitStage_notifyLSQCommit ;

  // rule RL_commitStage_doCommitNormalInst
  assign CAN_FIRE_RL_commitStage_doCommitNormalInst =
	     rob$RDY_deqPort_0_deq_data &&
	     NOT_rob_deqPort_0_canDeq__5016_5017_OR_regRena_ETC___d15055 &&
	     NOT_commitStage_rg_run_state_4404_4405_AND_NOT_ETC___d14815 &&
	     rob$deqPort_0_deq_data[247:243] != 5'd0 &&
	     rob$deqPort_0_deq_data[247:243] != 5'd21 &&
	     rob$deqPort_0_deq_data[247:243] != 5'd17 &&
	     rob$deqPort_0_deq_data[247:243] != 5'd18 &&
	     rob$deqPort_0_deq_data[247:243] != 5'd13 &&
	     rob$deqPort_0_deq_data[247:243] != 5'd16 &&
	     rob$deqPort_0_deq_data[247:243] != 5'd15 &&
	     rob$deqPort_0_deq_data[247:243] != 5'd19 &&
	     rob$deqPort_0_deq_data[247:243] != 5'd20 ;
  assign WILL_FIRE_RL_commitStage_doCommitNormalInst =
	     CAN_FIRE_RL_commitStage_doCommitNormalInst ;

  // rule RL_csrf_minstret_ehr_data_canon
  assign CAN_FIRE_RL_csrf_minstret_ehr_data_canon = 1'd1 ;
  assign WILL_FIRE_RL_csrf_minstret_ehr_data_canon = 1'd1 ;

  // rule RL_coreFix_aluExe_1_doFinishAlu_T
  assign CAN_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T =
	     coreFix_aluExe_1_exeToFinQ$first[7] &&
	     coreFix_aluExe_1_exeToFinQ$RDY_deq &&
	     coreFix_aluExe_1_exeToFinQ$RDY_first &&
	     rob$RDY_setExecuted_doFinishAlu_1_set &&
	     epochManager$RDY_incrementEpoch &&
	     coreFix_trainBPQ_1$FULL_N ;
  assign WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T =
	     CAN_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     !WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doExeMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdForward &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault &&
	     !WILL_FIRE_RL_rl_debug_resume ;

  // rule RL_coreFix_aluExe_0_doFinishAlu_T
  assign CAN_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T =
	     coreFix_aluExe_0_exeToFinQ$first[7] &&
	     coreFix_aluExe_0_exeToFinQ$RDY_deq &&
	     coreFix_aluExe_0_exeToFinQ$RDY_first &&
	     rob$RDY_setExecuted_doFinishAlu_0_set &&
	     epochManager$RDY_incrementEpoch &&
	     coreFix_trainBPQ_0$FULL_N ;
  assign WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T =
	     CAN_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     !WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doExeMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdForward &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault &&
	     !WILL_FIRE_RL_rl_debug_resume ;

  // rule RL_coreFix_aluExe_0_doFinishAlu_F
  assign CAN_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F =
	     !coreFix_aluExe_0_exeToFinQ$first[7] &&
	     coreFix_aluExe_0_exeToFinQ$RDY_deq &&
	     coreFix_aluExe_0_exeToFinQ_RDY_first__2700_AND_ETC___d12739 ;
  assign WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F =
	     CAN_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_aluExe_1_doFinishAlu_F
  assign CAN_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F =
	     !coreFix_aluExe_1_exeToFinQ$first[7] &&
	     coreFix_aluExe_1_exeToFinQ$RDY_deq &&
	     coreFix_aluExe_1_exeToFinQ_RDY_first__2026_AND_ETC___d12066 ;
  assign WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F =
	     CAN_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F ;

  // rule RL_coreFix_aluExe_1_doExeAlu
  assign CAN_FIRE_RL_coreFix_aluExe_1_doExeAlu =
	     coreFix_aluExe_1_regToExeQ$RDY_deq &&
	     coreFix_aluExe_1_exeToFinQ$RDY_enq &&
	     coreFix_aluExe_1_regToExeQ$RDY_first ;
  assign WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu =
	     CAN_FIRE_RL_coreFix_aluExe_1_doExeAlu &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_aluExe_0_doExeAlu
  assign CAN_FIRE_RL_coreFix_aluExe_0_doExeAlu =
	     coreFix_aluExe_0_regToExeQ$RDY_deq &&
	     coreFix_aluExe_0_exeToFinQ$RDY_enq &&
	     coreFix_aluExe_0_regToExeQ$RDY_first ;
  assign WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu =
	     CAN_FIRE_RL_coreFix_aluExe_0_doExeAlu &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_aluExe_1_doRegReadAlu
  assign CAN_FIRE_RL_coreFix_aluExe_1_doRegReadAlu =
	     coreFix_aluExe_1_dispToRegQ$RDY_deq &&
	     coreFix_aluExe_1_regToExeQ$RDY_enq &&
	     coreFix_aluExe_1_dispToRegQ$RDY_first &&
	     coreFix_aluExe_1_dispToRegQ_first__1380_BIT_11_ETC___d11465 ;
  assign WILL_FIRE_RL_coreFix_aluExe_1_doRegReadAlu =
	     CAN_FIRE_RL_coreFix_aluExe_1_doRegReadAlu &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_aluExe_0_doRegReadAlu
  assign CAN_FIRE_RL_coreFix_aluExe_0_doRegReadAlu =
	     coreFix_aluExe_0_dispToRegQ$RDY_deq &&
	     coreFix_aluExe_0_regToExeQ$RDY_enq &&
	     coreFix_aluExe_0_dispToRegQ$RDY_first &&
	     coreFix_aluExe_0_dispToRegQ_first__2241_BIT_11_ETC___d12326 ;
  assign WILL_FIRE_RL_coreFix_aluExe_0_doRegReadAlu =
	     CAN_FIRE_RL_coreFix_aluExe_0_doRegReadAlu &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_aluExe_0_doDispatchAlu
  assign CAN_FIRE_RL_coreFix_aluExe_0_doDispatchAlu =
	     coreFix_aluExe_0_dispToRegQ$RDY_enq &&
	     coreFix_aluExe_0_rsAlu$RDY_doDispatch &&
	     coreFix_aluExe_0_rsAlu$RDY_dispatchData ;
  assign WILL_FIRE_RL_coreFix_aluExe_0_doDispatchAlu =
	     CAN_FIRE_RL_coreFix_aluExe_0_doDispatchAlu &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_aluExe_1_doDispatchAlu
  assign CAN_FIRE_RL_coreFix_aluExe_1_doDispatchAlu =
	     coreFix_aluExe_1_dispToRegQ$RDY_enq &&
	     coreFix_aluExe_1_rsAlu$RDY_doDispatch &&
	     coreFix_aluExe_1_rsAlu$RDY_dispatchData ;
  assign WILL_FIRE_RL_coreFix_aluExe_1_doDispatchAlu =
	     CAN_FIRE_RL_coreFix_aluExe_1_doDispatchAlu &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_fpuMulDivExe_0_doFinishFpSimple
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple =
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_first &&
	     rob$RDY_setExecuted_doFinishFpuMulDiv_0_set ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple ;

  // rule RL_coreFix_fpuMulDivExe_0_doFinishFpFma
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma =
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ_RDY_first__ETC___d3938 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple ;

  // rule RL_coreFix_fpuMulDivExe_0_doFinishFpDiv
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv =
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ_RDY_first__ETC___d5330 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple ;

  // rule RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt =
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_RDY_first_ETC___d6722 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple ;

  // rule RL_coreFix_fpuMulDivExe_0_doFinishIntMul
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ_RDY_fir_ETC___d8114 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple ;

  // rule RL_coreFix_fpuMulDivExe_0_doFinishIntDiv
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv =
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divI_ETC___d8161 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple ;

  // rule RL_coreFix_memExe_doDeqLdQ_fault
  assign CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_fault =
	     rob$RDY_setExecuted_deqLSQ && coreFix_memExe_lsq$RDY_deqLd &&
	     coreFix_memExe_lsq$RDY_firstLd &&
	     coreFix_memExe_lsq$firstLd[7] ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault =
	     CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_memExe_doDeqLdQ_Ld_Mem
  assign CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem =
	     rob$RDY_setExecuted_deqLSQ && coreFix_memExe_lsq$RDY_deqLd &&
	     coreFix_memExe_lsq$RDY_firstLd &&
	     !coreFix_memExe_lsq$firstLd[7] &&
	     !coreFix_memExe_lsq$firstLd[101] &&
	     !coreFix_memExe_lsq$firstLd[16] ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem =
	     CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem ;

  // rule RL_coreFix_memExe_doDeqLdQ_Lr_deq
  assign CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq =
	     !coreFix_memExe_respLrScAmoQ_empty &&
	     rob$RDY_setExecuted_deqLSQ &&
	     coreFix_memExe_lsq$RDY_deqLd &&
	     coreFix_memExe_lsq$RDY_firstLd &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] == 2'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq =
	     CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_memExe_doDeqLdQ_MMIO_deq
  assign CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq =
	     !mmio_dataRespQ_empty &&
	     NOT_mmio_dataPendQ_empty_23_152_AND_rob_RDY_se_ETC___d1452 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] != 2'd0 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] != 2'd1 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] != 2'd2 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[0] &&
	     mmio_dataRespQ_data_0[64] ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq =
	     CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_memExe_doDeqLdQ_MMIO_fault
  assign CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault =
	     !mmio_dataRespQ_empty &&
	     NOT_mmio_dataPendQ_empty_23_152_AND_rob_RDY_se_ETC___d1452 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] != 2'd0 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] != 2'd1 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] != 2'd2 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[0] &&
	     !mmio_dataRespQ_data_0[64] ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault =
	     CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_memExe_doFinishMem
  assign CAN_FIRE_RL_coreFix_memExe_doFinishMem =
	     rob$RDY_setExecuted_doFinishMem &&
	     coreFix_memExe_dTlb$RDY_deqProcResp &&
	     coreFix_memExe_dTlb$RDY_procResp ;
  assign WILL_FIRE_RL_coreFix_memExe_doFinishMem =
	     CAN_FIRE_RL_coreFix_memExe_doFinishMem ;

  // rule RL_coreFix_memExe_doDeqStQ_ScAmo_issue
  assign CAN_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue =
	     NOT_coreFix_memExe_reqLrScAmoQ_full_dummy2_0_r_ETC___d1086 &&
	     coreFix_memExe_lsq$RDY_firstSt &&
	     !coreFix_memExe_lsq$firstSt[4] &&
	     !coreFix_memExe_lsq$firstSt[77] &&
	     (coreFix_memExe_lsq$firstSt[158:157] == 2'd1 ||
	      coreFix_memExe_lsq$firstSt[158:157] == 2'd2) &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] == 2'd0 &&
	     coreFix_memExe_stb$noMatchStQ &&
	     (!coreFix_memExe_lsq$firstSt[151] ||
	      coreFix_memExe_stb$isEmpty) ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue =
	     CAN_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue ;

  // rule RL_coreFix_memExe_doDeqStQ_MMIO_issue
  assign CAN_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue =
	     !mmio_dataReqQ_full && !mmio_dataPendQ_full &&
	     coreFix_memExe_lsq$RDY_firstSt &&
	     !coreFix_memExe_lsq$firstSt[4] &&
	     coreFix_memExe_lsq$firstSt[158:157] != 2'd3 &&
	     coreFix_memExe_lsq$firstSt[77] &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] == 2'd0 &&
	     (!coreFix_memExe_lsq$firstSt[151] ||
	      coreFix_memExe_stb$isEmpty) ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue =
	     CAN_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue ;

  // rule RL_mmio_dataReqQ_canonicalize
  assign CAN_FIRE_RL_mmio_dataReqQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataReqQ_canonicalize = 1'd1 ;

  // rule RL_mmio_dataReqQ_enqReq_canon
  assign CAN_FIRE_RL_mmio_dataReqQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataReqQ_enqReq_canon = 1'd1 ;

  // rule RL_mmio_dataReqQ_deqReq_canon
  assign CAN_FIRE_RL_mmio_dataReqQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataReqQ_deqReq_canon = 1'd1 ;

  // rule RL_mmio_dataReqQ_clearReq_canon
  assign CAN_FIRE_RL_mmio_dataReqQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataReqQ_clearReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_sendLrScAmoToMem
  assign CAN_FIRE_RL_coreFix_memExe_sendLrScAmoToMem =
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rqFrom_ETC___d1195 &&
	     (!coreFix_memExe_reqLrScAmoQ_empty_dummy2_1$Q_OUT ||
	      !coreFix_memExe_reqLrScAmoQ_empty_dummy2_2$Q_OUT ||
	      coreFix_memExe_reqLrScAmoQ_enqP_lat_0$whas ||
	      !coreFix_memExe_reqLrScAmoQ_empty_rl) ;
  assign WILL_FIRE_RL_coreFix_memExe_sendLrScAmoToMem =
	     CAN_FIRE_RL_coreFix_memExe_sendLrScAmoToMem ;

  // rule RL_coreFix_memExe_doIssueLdFromIssueQ
  assign CAN_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ =
	     coreFix_memExe_lsq$RDY_getIssueLd &&
	     !coreFix_memExe_forwardQ_full &&
	     NOT_coreFix_memExe_reqLdQ_full_dummy2_0_read___ETC___d1535 ;
  assign WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ =
	     CAN_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;

  // rule RL_coreFix_memExe_doIssueLdFromUpdate
  assign CAN_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate =
	     !coreFix_memExe_forwardQ_full &&
	     NOT_coreFix_memExe_reqLdQ_full_dummy2_0_read___ETC___d1535 &&
	     coreFix_memExe_issueLd$whas ;
  assign WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate =
	     CAN_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;

  // rule RL_coreFix_memExe_doDeqStQ_fault
  assign CAN_FIRE_RL_coreFix_memExe_doDeqStQ_fault =
	     rob$RDY_setExecuted_deqLSQ && coreFix_memExe_lsq$RDY_deqSt &&
	     coreFix_memExe_lsq$RDY_firstSt &&
	     coreFix_memExe_lsq$firstSt[4] ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqStQ_fault =
	     CAN_FIRE_RL_coreFix_memExe_doDeqStQ_fault &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_memExe_doDeqStQ_Fence
  assign CAN_FIRE_RL_coreFix_memExe_doDeqStQ_Fence =
	     rob$RDY_setExecuted_deqLSQ && coreFix_memExe_lsq$RDY_deqSt &&
	     coreFix_memExe_lsq$RDY_firstSt &&
	     !coreFix_memExe_lsq$firstSt[4] &&
	     coreFix_memExe_lsq$firstSt[158:157] == 2'd3 &&
	     (!coreFix_memExe_lsq$firstSt[151] ||
	      coreFix_memExe_stb$isEmpty) ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqStQ_Fence =
	     CAN_FIRE_RL_coreFix_memExe_doDeqStQ_Fence &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_memExe_doDeqStQ_ScAmo_deq
  assign CAN_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq =
	     !coreFix_memExe_respLrScAmoQ_empty &&
	     rob$RDY_setExecuted_deqLSQ &&
	     coreFix_memExe_lsq$RDY_deqSt &&
	     coreFix_memExe_lsq$RDY_firstSt &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] == 2'd2 ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq =
	     CAN_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqStQ_Fence &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqStQ_fault &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     !WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdForward &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_memExe_doDeqStQ_MMIO_deq
  assign CAN_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq =
	     !mmio_dataRespQ_empty &&
	     NOT_mmio_dataPendQ_empty_23_152_AND_rob_RDY_se_ETC___d1153 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] != 2'd0 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] != 2'd1 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] != 2'd2 &&
	     !coreFix_memExe_waitLrScAmoMMIOResp[0] &&
	     mmio_dataRespQ_data_0[64] ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq =
	     CAN_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqStQ_Fence &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqStQ_fault &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     !WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdForward &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_memExe_doDeqStQ_MMIO_fault
  assign CAN_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault =
	     !mmio_dataRespQ_empty &&
	     NOT_mmio_dataPendQ_empty_23_152_AND_rob_RDY_se_ETC___d1153 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] != 2'd0 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] != 2'd1 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] != 2'd2 &&
	     !coreFix_memExe_waitLrScAmoMMIOResp[0] &&
	     !mmio_dataRespQ_data_0[64] ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault =
	     CAN_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqStQ_Fence &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqStQ_fault &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_mmio_dataRespQ_canonicalize
  assign CAN_FIRE_RL_mmio_dataRespQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataRespQ_canonicalize = 1'd1 ;

  // rule RL_mmio_dataRespQ_enqReq_canon
  assign CAN_FIRE_RL_mmio_dataRespQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataRespQ_enqReq_canon = 1'd1 ;

  // rule RL_mmio_dataRespQ_deqReq_canon
  assign CAN_FIRE_RL_mmio_dataRespQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataRespQ_deqReq_canon = 1'd1 ;

  // rule RL_mmio_dataRespQ_clearReq_canon
  assign CAN_FIRE_RL_mmio_dataRespQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataRespQ_clearReq_canon = 1'd1 ;

  // rule RL_mmio_dataPendQ_canonicalize
  assign CAN_FIRE_RL_mmio_dataPendQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataPendQ_canonicalize = 1'd1 ;

  // rule RL_mmio_dataPendQ_enqReq_canon
  assign CAN_FIRE_RL_mmio_dataPendQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataPendQ_enqReq_canon = 1'd1 ;

  // rule RL_mmio_dataPendQ_deqReq_canon
  assign CAN_FIRE_RL_mmio_dataPendQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataPendQ_deqReq_canon = 1'd1 ;

  // rule RL_mmio_dataPendQ_clearReq_canon
  assign CAN_FIRE_RL_mmio_dataPendQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataPendQ_clearReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_sendLdToMem
  assign CAN_FIRE_RL_coreFix_memExe_sendLdToMem =
	     (!coreFix_memExe_reqLdQ_empty_dummy2_1$Q_OUT ||
	      !coreFix_memExe_reqLdQ_empty_dummy2_2$Q_OUT ||
	      coreFix_memExe_reqLdQ_empty_lat_0$whas ||
	      !coreFix_memExe_reqLdQ_empty_rl) &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rqFrom_ETC___d1195 ;
  assign WILL_FIRE_RL_coreFix_memExe_sendLdToMem =
	     CAN_FIRE_RL_coreFix_memExe_sendLdToMem &&
	     !WILL_FIRE_RL_coreFix_memExe_sendLrScAmoToMem ;

  // rule RL_coreFix_memExe_sendStToMem
  assign CAN_FIRE_RL_coreFix_memExe_sendStToMem =
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rqFrom_ETC___d1195 &&
	     (!coreFix_memExe_reqStQ_empty_dummy2_1$Q_OUT ||
	      !coreFix_memExe_reqStQ_empty_dummy2_2$Q_OUT ||
	      CAN_FIRE_RL_coreFix_memExe_doIssueSB ||
	      !coreFix_memExe_reqStQ_empty_rl) ;
  assign WILL_FIRE_RL_coreFix_memExe_sendStToMem =
	     CAN_FIRE_RL_coreFix_memExe_sendStToMem &&
	     !WILL_FIRE_RL_coreFix_memExe_sendLdToMem &&
	     !WILL_FIRE_RL_coreFix_memExe_sendLrScAmoToMem ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2166 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_processAmo[158] &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[578:577] ==
	     2'd0 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2735 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_processAmo[158] &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[578:577] !=
	     2'd0 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[578:577] !=
	     2'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;

  // rule RL_coreFix_memExe_doDeqStQ_St_Mem
  assign CAN_FIRE_RL_coreFix_memExe_doDeqStQ_St_Mem =
	     coreFix_memExe_stb$RDY_enq && coreFix_memExe_lsq$RDY_deqSt &&
	     coreFix_memExe_lsq$RDY_firstSt &&
	     !coreFix_memExe_lsq$firstSt[4] &&
	     coreFix_memExe_lsq$firstSt[158:157] == 2'd0 &&
	     !coreFix_memExe_lsq$firstSt[77] &&
	     coreFix_memExe_stb$getEnqIndex[1] ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqStQ_St_Mem =
	     CAN_FIRE_RL_coreFix_memExe_doDeqStQ_St_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_memExe_doRespLdMem
  assign CAN_FIRE_RL_coreFix_memExe_doRespLdMem =
	     !coreFix_memExe_memRespLdQ_empty ;
  assign WILL_FIRE_RL_coreFix_memExe_doRespLdMem =
	     CAN_FIRE_RL_coreFix_memExe_doRespLdMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;

  // rule RL_coreFix_memExe_doRespLdForward
  assign CAN_FIRE_RL_coreFix_memExe_doRespLdForward =
	     !coreFix_memExe_forwardQ_empty ;
  assign WILL_FIRE_RL_coreFix_memExe_doRespLdForward =
	     CAN_FIRE_RL_coreFix_memExe_doRespLdForward &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;

  // rule RL_rl_debug_gpr_write
  assign CAN_FIRE_RL_rl_debug_gpr_write =
	     regRenamingTable$RDY_rename_0_getRename && f_gpr_reqs$EMPTY_N &&
	     f_gpr_rsps$FULL_N &&
	     rg_core_run_state == 2'd1 &&
	     f_gpr_reqs$D_OUT[69] ;
  assign WILL_FIRE_RL_rl_debug_gpr_write = CAN_FIRE_RL_rl_debug_gpr_write ;

  // rule RL_rl_debug_fpr_write
  assign CAN_FIRE_RL_rl_debug_fpr_write =
	     regRenamingTable$RDY_rename_0_getRename && f_fpr_reqs$EMPTY_N &&
	     f_fpr_rsps$FULL_N &&
	     rg_core_run_state == 2'd1 &&
	     !f_gpr_reqs$EMPTY_N &&
	     f_fpr_reqs$D_OUT[69] ;
  assign WILL_FIRE_RL_rl_debug_fpr_write = CAN_FIRE_RL_rl_debug_fpr_write ;

  // rule RL_coreFix_memExe_doExeMem
  assign CAN_FIRE_RL_coreFix_memExe_doExeMem =
	     coreFix_memExe_regToExeQ$RDY_deq &&
	     coreFix_memExe_regToExeQ$RDY_first &&
	     coreFix_memExe_dTlb$RDY_procReq ;
  assign WILL_FIRE_RL_coreFix_memExe_doExeMem =
	     CAN_FIRE_RL_coreFix_memExe_doExeMem ;

  // rule RL_prepareCachesAndTlbs
  assign CAN_FIRE_RL_prepareCachesAndTlbs =
	     (!flush_tlbs ||
	      coreFix_memExe_dTlb$RDY_flush &&
	      fetchStage$RDY_iTlbIfc_flush) &&
	     (flush_reservation || flush_tlbs || update_vm_info) ;
  assign WILL_FIRE_RL_prepareCachesAndTlbs =
	     CAN_FIRE_RL_prepareCachesAndTlbs ;

  // rule RL_rl_debug_resume
  assign CAN_FIRE_RL_rl_debug_resume =
	     commitStage_rg_run_state && coreFix_memExe_dTlb$RDY_flush &&
	     fetchStage$RDY_iTlbIfc_flush &&
	     f_run_halt_reqs$EMPTY_N &&
	     f_run_halt_rsps$FULL_N &&
	     rg_core_run_state == 2'd1 &&
	     f_run_halt_reqs$D_OUT &&
	     !f_gpr_reqs$EMPTY_N &&
	     !f_fpr_reqs$EMPTY_N &&
	     !f_csr_reqs$EMPTY_N ;
  assign WILL_FIRE_RL_rl_debug_resume = MUX_started$write_1__SEL_1 ;

  // rule RL_coreFix_memExe_doRegReadMem
  assign CAN_FIRE_RL_coreFix_memExe_doRegReadMem =
	     coreFix_memExe_dispToRegQ$RDY_deq &&
	     coreFix_memExe_regToExeQ$RDY_enq &&
	     coreFix_memExe_dispToRegQ$RDY_first &&
	     sbCons_lazyLookup_3_get_coreFix_memExe_dispToR_ETC___d1693 ;
  assign WILL_FIRE_RL_coreFix_memExe_doRegReadMem =
	     CAN_FIRE_RL_coreFix_memExe_doRegReadMem &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_memExe_doDispatchMem
  assign CAN_FIRE_RL_coreFix_memExe_doDispatchMem =
	     coreFix_memExe_dispToRegQ$RDY_enq &&
	     coreFix_memExe_rsMem$RDY_doDispatch &&
	     coreFix_memExe_rsMem$RDY_dispatchData ;
  assign WILL_FIRE_RL_coreFix_memExe_doDispatchMem =
	     CAN_FIRE_RL_coreFix_memExe_doDispatchMem &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer =
	     !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_send &&
	     coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$RDY_getEmptyEntryInit &&
	     CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q258 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry =
	     !coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_send ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new =
	     (!coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_1$Q_OUT ||
	      !coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_2$Q_OUT ||
	      coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_lat_0$whas ||
	      !coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_send &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$RDY_cRqTransfer_getEmptyEntryInit &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer =
	     !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_send &&
	     CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q259 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_canonicalize
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_canonicalize =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_canonicalize =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_canonicalize
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_canonicalize =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_canonicalize =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_respLrScAmoQ_canonicalize
  assign CAN_FIRE_RL_coreFix_memExe_respLrScAmoQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_respLrScAmoQ_canonicalize = 1'd1 ;

  // rule RL_coreFix_memExe_respLrScAmoQ_clearReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_respLrScAmoQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_respLrScAmoQ_clearReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_respLrScAmoQ_deqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_respLrScAmoQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_respLrScAmoQ_deqReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_respLrScAmoQ_enqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_respLrScAmoQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_respLrScAmoQ_enqReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_memRespLdQ_canonicalize
  assign CAN_FIRE_RL_coreFix_memExe_memRespLdQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_memRespLdQ_canonicalize = 1'd1 ;

  // rule RL_coreFix_memExe_memRespLdQ_clearReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_memRespLdQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_memRespLdQ_clearReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_memRespLdQ_deqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_memRespLdQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_memRespLdQ_deqReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_memRespLdQ_enqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_memRespLdQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_memRespLdQ_enqReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_forwardQ_canonicalize
  assign CAN_FIRE_RL_coreFix_memExe_forwardQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_forwardQ_canonicalize = 1'd1 ;

  // rule RL_coreFix_memExe_forwardQ_clearReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_forwardQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_forwardQ_clearReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_forwardQ_deqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_forwardQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_forwardQ_deqReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_forwardQ_enqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_forwardQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_forwardQ_enqReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_reqStQ_full_canon
  assign CAN_FIRE_RL_coreFix_memExe_reqStQ_full_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_reqStQ_full_canon = 1'd1 ;

  // rule RL_coreFix_memExe_reqStQ_empty_canon
  assign CAN_FIRE_RL_coreFix_memExe_reqStQ_empty_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_reqStQ_empty_canon = 1'd1 ;

  // rule RL_coreFix_memExe_reqStQ_data_0_canon
  assign CAN_FIRE_RL_coreFix_memExe_reqStQ_data_0_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_reqStQ_data_0_canon = 1'd1 ;

  // rule RL_coreFix_memExe_reqLrScAmoQ_full_canon
  assign CAN_FIRE_RL_coreFix_memExe_reqLrScAmoQ_full_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_reqLrScAmoQ_full_canon = 1'd1 ;

  // rule RL_coreFix_memExe_reqLrScAmoQ_empty_canon
  assign CAN_FIRE_RL_coreFix_memExe_reqLrScAmoQ_empty_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_reqLrScAmoQ_empty_canon = 1'd1 ;

  // rule RL_coreFix_memExe_reqLrScAmoQ_data_0_canon
  assign CAN_FIRE_RL_coreFix_memExe_reqLrScAmoQ_data_0_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_reqLrScAmoQ_data_0_canon = 1'd1 ;

  // rule RL_coreFix_memExe_reqLdQ_full_canon
  assign CAN_FIRE_RL_coreFix_memExe_reqLdQ_full_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_reqLdQ_full_canon = 1'd1 ;

  // rule RL_coreFix_memExe_reqLdQ_empty_canon
  assign CAN_FIRE_RL_coreFix_memExe_reqLdQ_empty_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_reqLdQ_empty_canon = 1'd1 ;

  // rule RL_coreFix_memExe_reqLdQ_data_0_canon
  assign CAN_FIRE_RL_coreFix_memExe_reqLdQ_data_0_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_reqLdQ_data_0_canon = 1'd1 ;

  // rule RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv =
	     coreFix_fpuMulDivExe_0_regToExeQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_regToExeQ$RDY_first &&
	     IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d8488 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv =
	     coreFix_fpuMulDivExe_0_dispToRegQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_regToExeQ$RDY_enq &&
	     coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first &&
	     sbCons_lazyLookup_2_get_coreFix_fpuMulDivExe_0_ETC___d8353 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv =
	     coreFix_fpuMulDivExe_0_dispToRegQ$RDY_enq &&
	     coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_doDispatch &&
	     coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_dispatchData ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_doInit
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_doInit =
	     !coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_doInit =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_doInit ;

  // rule RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_canon
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_canon = 1'd1 ;

  // rule RL_renameStage_doRenaming_Trap
  assign CAN_FIRE_RL_renameStage_doRenaming_Trap =
	     epochManager$RDY_incrementEpoch && rob$RDY_enqPort_0_enq &&
	     fetchStage$RDY_pipelines_0_first &&
	     fetchStage$RDY_pipelines_0_deq &&
	     mmio_pRqQ_empty_07_AND_epochManager_checkEpoch_ETC___d13114 &&
	     rob$isEmpty &&
	     rg_core_run_state == 2'd2 ;
  assign WILL_FIRE_RL_renameStage_doRenaming_Trap =
	     CAN_FIRE_RL_renameStage_doRenaming_Trap &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_rl_debug_halt_req &&
	     !EN_coreReq_start ;

  // rule RL_renameStage_doRenaming_SystemInst
  assign CAN_FIRE_RL_renameStage_doRenaming_SystemInst =
	     epochManager$RDY_incrementEpoch &&
	     regRenamingTable_RDY_rename_0_claimRename__335_ETC___d13367 &&
	     mmio_pRqQ_empty_07_AND_epochManager_checkEpoch_ETC___d13423 &&
	     rg_core_run_state == 2'd2 ;
  assign WILL_FIRE_RL_renameStage_doRenaming_SystemInst =
	     CAN_FIRE_RL_renameStage_doRenaming_SystemInst &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_rl_debug_halt_req &&
	     !EN_coreReq_start ;

  // rule RL_csrInstOrInterruptInflight_canon
  assign CAN_FIRE_RL_csrInstOrInterruptInflight_canon = 1'd1 ;
  assign WILL_FIRE_RL_csrInstOrInterruptInflight_canon = 1'd1 ;

  // rule RL_commitStage_doSetLSQAtCommit
  assign CAN_FIRE_RL_commitStage_doSetLSQAtCommit =
	     MUX_commitStage_setLSQAtCommit_0$wset_1__SEL_1 ||
	     WILL_FIRE_RL_commitStage_notifyLSQCommit ;
  assign WILL_FIRE_RL_commitStage_doSetLSQAtCommit =
	     CAN_FIRE_RL_commitStage_doSetLSQAtCommit ;

  // rule RL_commitStage_doSetLSQAtCommit_1
  assign CAN_FIRE_RL_commitStage_doSetLSQAtCommit_1 =
	     WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	     rob$deqPort_1_canDeq &&
	     rob$deqPort_1_deq_data[15] &&
	     !rob$deqPort_1_deq_data[10] &&
	     !rob$deqPort_1_deq_data[157] &&
	     rob$deqPort_1_deq_data[247:243] != 5'd0 &&
	     rob$deqPort_1_deq_data[247:243] != 5'd21 &&
	     rob$deqPort_1_deq_data[247:243] != 5'd17 &&
	     rob$deqPort_1_deq_data[247:243] != 5'd18 &&
	     rob$deqPort_1_deq_data[247:243] != 5'd13 &&
	     rob$deqPort_1_deq_data[247:243] != 5'd16 &&
	     rob$deqPort_1_deq_data[247:243] != 5'd15 &&
	     rob$deqPort_1_deq_data[247:243] != 5'd19 &&
	     rob$deqPort_1_deq_data[247:243] != 5'd20 &&
	     rob$deqPort_1_deq_data[5] ;
  assign WILL_FIRE_RL_commitStage_doSetLSQAtCommit_1 =
	     CAN_FIRE_RL_commitStage_doSetLSQAtCommit_1 ;

  // rule RL_renameStage_doRenaming
  assign CAN_FIRE_RL_renameStage_doRenaming =
	     (!fetchStage$pipelines_0_canDeq ||
	      IF_fetchStage_RDY_pipelines_0_first__2813_AND__ETC___d13507) &&
	     IF_NOT_fetchStage_pipelines_0_canDeq__2814_281_ETC___d13982 &&
	     IF_NOT_fetchStage_pipelines_0_canDeq__2814_281_ETC___d13990 &&
	     NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14167 &&
	     mmio_pRqQ_empty_07_AND_epochManager_checkEpoch_ETC___d14171 ;
  assign WILL_FIRE_RL_renameStage_doRenaming =
	     CAN_FIRE_RL_renameStage_doRenaming &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_rl_debug_halt_req &&
	     !EN_coreReq_start ;

  // rule RL_mmio_pRqQ_canonicalize
  assign CAN_FIRE_RL_mmio_pRqQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_mmio_pRqQ_canonicalize = 1'd1 ;

  // rule RL_mmio_pRqQ_enqReq_canon
  assign CAN_FIRE_RL_mmio_pRqQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_pRqQ_enqReq_canon = 1'd1 ;

  // rule RL_mmio_pRqQ_deqReq_canon
  assign CAN_FIRE_RL_mmio_pRqQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_pRqQ_deqReq_canon = 1'd1 ;

  // rule RL_mmio_pRqQ_clearReq_canon
  assign CAN_FIRE_RL_mmio_pRqQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_pRqQ_clearReq_canon = 1'd1 ;

  // rule RL_coreFix_globalSpecUpdate_canon_correct_spec
  assign CAN_FIRE_RL_coreFix_globalSpecUpdate_canon_correct_spec = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_globalSpecUpdate_canon_correct_spec = 1'd1 ;

  // inputs to muxes for submodule ports
  assign MUX_regRenamingTable$rename_0_getRename_1__SEL_1 =
	     WILL_FIRE_RL_renameStage_doRenaming ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst ;
  assign MUX_regRenamingTable$rename_0_getRename_1__SEL_2 =
	     WILL_FIRE_RL_rl_debug_gpr_write ||
	     WILL_FIRE_RL_rl_debug_gpr_read ;
  assign MUX_regRenamingTable$rename_0_getRename_1__SEL_3 =
	     WILL_FIRE_RL_rl_debug_fpr_write ||
	     WILL_FIRE_RL_rl_debug_fpr_read ;
  assign MUX_commitStage_rg_run_state$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     commitStage_commitTrap_4406_BIT_36_4532_AND_co_ETC___d14597 ;
  assign MUX_commitStage_rg_serial_num$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14634 ;
  assign MUX_commitStage_setLSQAtCommit_0$wset_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	     rob$deqPort_0_canDeq &&
	     rob$deqPort_0_deq_data[5] ;
  assign MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3 =
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign MUX_coreFix_aluExe_0_rsAlu$enq_1__SEL_1 =
	     WILL_FIRE_RL_renameStage_doRenaming && _dfoo18 ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[22] ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2 =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[22] ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3 =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[22] ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4 =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[22] ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5 =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[22] ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6 =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[22] ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_1 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_1 &&
	     coreFix_memExe_lsq$firstSt[150] ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_2 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2680 ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 &&
	     coreFix_memExe_lsq$getHit[8] &&
	     !coreFix_memExe_lsq$getHit[9] ;
  assign MUX_coreFix_aluExe_1_rsAlu$setRegReady_4_put_1__SEL_1 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_1 &&
	     coreFix_memExe_lsq$firstSt[150] ;
  assign MUX_coreFix_aluExe_1_rsAlu$setRegReady_4_put_1__SEL_2 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign MUX_coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put_1__SEL_1 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_1 &&
	     coreFix_memExe_lsq$firstSt[150] ;
  assign MUX_coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put_1__SEL_2 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2657 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd4 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2589 ||
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2593) ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2640 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_2 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd2 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3) ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_3 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d2785 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq[1:0] ==
	     2'd0 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	      (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	       3'd4 ||
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 &&
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085 ||
	       !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2075) ||
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2181) ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2075 &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 ||
	       !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085) &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd4 ||
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2696) ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__SEL_2 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd4 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[570] &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2755 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2758 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__SEL_2 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2724 ;
  assign MUX_coreFix_memExe_dTlb$updateVMInfo_1__SEL_1 =
	     WILL_FIRE_RL_prepareCachesAndTlbs && update_vm_info ;
  assign MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd0 &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd1 ;
  assign MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__SEL_2 =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd0 &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd1 ;
  assign MUX_coreFix_memExe_lsq$getHit_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2075 &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 ||
	       !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085) &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd0 ||
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2663) ;
  assign MUX_coreFix_memExe_lsq$getHit_1__SEL_2 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 ;
  assign MUX_coreFix_memExe_lsq$wakeupLdStalledBySB_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2075 &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 ||
	       !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085) &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd1 ||
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2688) ;
  assign MUX_coreFix_memExe_reqLdQ_data_0_lat_0$wset_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd0 ;
  assign MUX_coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0$write_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2623 ;
  assign MUX_coreFix_memExe_rsMem$setRegReady_4_put_1__SEL_1 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_1 &&
	     coreFix_memExe_lsq$firstSt[150] ;
  assign MUX_coreFix_memExe_rsMem$setRegReady_4_put_1__SEL_2 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign MUX_coreFix_memExe_waitLrScAmoMMIOResp$write_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;
  assign MUX_coreFix_trainBPQ_0$enq_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F &&
	     (coreFix_aluExe_0_exeToFinQ$first[314:310] == 5'd9 ||
	      coreFix_aluExe_0_exeToFinQ$first[314:310] == 5'd10) ;
  assign MUX_coreFix_trainBPQ_1$enq_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F &&
	     (coreFix_aluExe_1_exeToFinQ$first[314:310] == 5'd9 ||
	      coreFix_aluExe_1_exeToFinQ$first[314:310] == 5'd10) ;
  assign MUX_csrInstOrInterruptInflight_dummy2_0$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 ;
  assign MUX_csrInstOrInterruptInflight_dummy2_0$write_1__SEL_2 =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     (commitStage_commitTrap[36] ||
	      commitStage_commitTrap[35:32] == 4'd3) ;
  assign MUX_csrf_external_int_en_vec_1$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     (IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd9 ||
	      IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd22) ;
  assign MUX_csrf_external_int_en_vec_3$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd772 ;
  assign MUX_csrf_external_int_pend_vec_1$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     (IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd16 ||
	      IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd29) ;
  assign MUX_csrf_external_int_pend_vec_1$write_1__SEL_2 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     (f_csr_reqs$D_OUT[75:64] == 12'd324 ||
	      f_csr_reqs$D_OUT[75:64] == 12'd836) ;
  assign MUX_csrf_fflags_reg$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	     NOT_IF_NOT_rob_deqPort_0_canDeq__5016_5017_OR__ETC___d15229 ;
  assign MUX_csrf_fflags_reg$write_1__SEL_2 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     (IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd0 ||
	      IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd2) ;
  assign MUX_csrf_fflags_reg$write_1__SEL_3 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     (f_csr_reqs$D_OUT[75:64] == 12'd1 ||
	      f_csr_reqs$D_OUT[75:64] == 12'd3) ;
  assign MUX_csrf_frm_reg$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     (IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd1 ||
	      IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd2) ;
  assign MUX_csrf_fs_reg$write_1__SEL_2 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     (IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd0 ||
	      IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd1 ||
	      IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd2 ||
	      IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd8 ||
	      IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd18) ;
  assign MUX_csrf_fs_reg$write_1__SEL_3 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     (f_csr_reqs$D_OUT[75:64] == 12'd1 ||
	      f_csr_reqs$D_OUT[75:64] == 12'd2 ||
	      f_csr_reqs$D_OUT[75:64] == 12'd3 ||
	      f_csr_reqs$D_OUT[75:64] == 12'd256 ||
	      f_csr_reqs$D_OUT[75:64] == 12'd768) ;
  assign MUX_csrf_ie_vec_0$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     (IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd8 ||
	      IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd18) ;
  assign MUX_csrf_ie_vec_0$write_1__SEL_2 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     (f_csr_reqs$D_OUT[75:64] == 12'd256 ||
	      f_csr_reqs$D_OUT[75:64] == 12'd768) ;
  assign MUX_csrf_ie_vec_1$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo32 ;
  assign MUX_csrf_ie_vec_1$write_1__SEL_2 =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14634 &&
	     csrf_prv_reg_read__2846_ULE_1_4635_AND_IF_comm_ETC___d14657 ;
  assign MUX_csrf_ie_vec_3$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo26 ;
  assign MUX_csrf_ie_vec_3$write_1__SEL_2 =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14634 &&
	     NOT_csrf_prv_reg_read__2846_ULE_1_4635_4677_OR_ETC___d14681 ;
  assign MUX_csrf_ie_vec_3$write_1__SEL_3 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd768 ;
  assign MUX_csrf_mcause_code_reg$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd27 ;
  assign MUX_csrf_mcause_code_reg$write_1__SEL_3 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd834 ;
  assign MUX_csrf_mcounteren_cy_reg$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd774 ;
  assign MUX_csrf_mcycle_ehr_data_dummy2_0$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd2816 ;
  assign MUX_csrf_mcycle_ehr_data_dummy2_0$write_1__SEL_2 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd30 ;
  assign MUX_csrf_medeleg_13_11_reg$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd770 ;
  assign MUX_csrf_mepc_csr$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd26 ;
  assign MUX_csrf_mepc_csr$write_1__SEL_3 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd833 ;
  assign MUX_csrf_mideleg_11_reg$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd771 ;
  assign MUX_csrf_minstret_ehr_data_dummy2_0$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd2818 ;
  assign MUX_csrf_minstret_ehr_data_dummy2_0$write_1__SEL_2 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd31 ;
  assign MUX_csrf_mpp_reg$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo26 ;
  assign MUX_csrf_mscratch_csr$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd832 ;
  assign MUX_csrf_mtval_csr$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd28 ;
  assign MUX_csrf_mtval_csr$write_1__SEL_3 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd835 ;
  assign MUX_csrf_mtvec_base_hi_reg$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd773 ;
  assign MUX_csrf_ppn_reg$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd384 ;
  assign MUX_csrf_prev_ie_vec_1$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo32 ;
  assign MUX_csrf_prev_ie_vec_3$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo26 ;
  assign MUX_csrf_prv_reg$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo24 ;
  assign MUX_csrf_prv_reg$write_1__SEL_3 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd1968 ;
  assign MUX_csrf_rg_dcsr$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd40 ;
  assign MUX_csrf_rg_dpc$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd41 ;
  assign MUX_csrf_rg_dpc$write_1__SEL_3 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd1969 ;
  assign MUX_csrf_rg_dscratch0$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd1970 ;
  assign MUX_csrf_rg_dscratch1$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd1971 ;
  assign MUX_csrf_rg_tdata1_data$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd1953 ;
  assign MUX_csrf_rg_tdata2$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd1954 ;
  assign MUX_csrf_rg_tdata3$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd1955 ;
  assign MUX_csrf_rg_tselect$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd1952 ;
  assign MUX_csrf_scause_code_reg$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd14 ;
  assign MUX_csrf_scause_code_reg$write_1__SEL_3 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd322 ;
  assign MUX_csrf_scounteren_cy_reg$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd262 ;
  assign MUX_csrf_sepc_csr$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd13 ;
  assign MUX_csrf_sepc_csr$write_1__SEL_3 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd321 ;
  assign MUX_csrf_spp_reg$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo32 ;
  assign MUX_csrf_sscratch_csr$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd320 ;
  assign MUX_csrf_stats_module_writeQ$enq_1__SEL_1 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd2049 ;
  assign MUX_csrf_stval_csr$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd15 ;
  assign MUX_csrf_stval_csr$write_1__SEL_3 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd323 ;
  assign MUX_csrf_stvec_base_hi_reg$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd261 ;
  assign MUX_epochManager$updatePrevEpoch_0_update_1__SEL_2 =
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d14174 &&
	     IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13541 ;
  assign MUX_epochManager$updatePrevEpoch_1_update_1__SEL_2 =
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14270 &&
	     NOT_fetchStage_pipelines_1_first__2825_BITS_19_ETC___d14280 &&
	     IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d13976 ;
  assign MUX_f_run_halt_rsps$enq_1__SEL_1 =
	     WILL_FIRE_RL_rl_debug_halted ||
	     WILL_FIRE_RL_rl_debug_halt_req_already_halted ;
  assign MUX_flush_reservation$write_1__SEL_2 =
	     WILL_FIRE_RL_prepareCachesAndTlbs && flush_reservation ;
  assign MUX_flush_tlbs$write_1__SEL_1 =
	     WILL_FIRE_RL_prepareCachesAndTlbs && flush_tlbs ;
  assign MUX_renameStage_rg_m_halt_req$write_1__SEL_1 =
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     fetchStage_pipelines_0_canDeq__2814_AND_NOT_fe_ETC___d14392 ;
  assign MUX_renameStage_rg_m_halt_req$write_1__SEL_2 =
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	     csrf_rg_dcsr[2] ;
  assign MUX_renameStage_rg_m_halt_req$write_1__SEL_3 =
	     WILL_FIRE_RL_renameStage_doRenaming_Trap && csrf_rg_dcsr[2] ;
  assign MUX_renameStage_rg_m_halt_req$write_1__SEL_6 =
	     EN_coreReq_start && !coreReq_start_running ;
  assign MUX_rf$write_3_wr_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq &&
	     coreFix_memExe_lsq$firstSt[150] ;
  assign MUX_rf$write_3_wr_1__SEL_2 =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq &&
	     coreFix_memExe_lsq$firstSt[150] ;
  assign MUX_rf$write_3_wr_1__SEL_3 =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign MUX_rf$write_3_wr_1__SEL_4 =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign MUX_rf$write_3_wr_1__PSEL_5 =
	     WILL_FIRE_RL_coreFix_memExe_doRespLdForward ||
	     WILL_FIRE_RL_coreFix_memExe_doRespLdMem ;
  assign MUX_rf$write_3_wr_1__SEL_5 =
	     MUX_rf$write_3_wr_1__PSEL_5 && coreFix_memExe_lsq$respLd[72] ;
  assign MUX_rf$write_3_wr_2__SEL_5 =
	     MUX_rf$write_3_wr_1__PSEL_5 && coreFix_memExe_lsq$respLd[72] ;
  assign MUX_rg_core_run_state$write_1__SEL_4 =
	     WILL_FIRE_RL_readyToFetch && commitStage_rg_run_state ;
  assign MUX_rob$setExecuted_deqLSQ_1__SEL_5 =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_Fence ;
  assign MUX_sbAggr$setReady_4_put_1__SEL_1 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_1 &&
	     coreFix_memExe_lsq$firstSt[150] ;
  assign MUX_sbAggr$setReady_4_put_1__SEL_2 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign MUX_sbCons$setReady_3_put_1__SEL_1 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_1 &&
	     coreFix_memExe_lsq$firstSt[150] ;
  assign MUX_sbCons$setReady_3_put_1__SEL_2 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign MUX_sbCons$setReady_3_put_1__SEL_3 =
	     MUX_rf$write_3_wr_1__PSEL_5 && coreFix_memExe_lsq$respLd[72] ;
  assign MUX_started$write_1__SEL_1 =
	     CAN_FIRE_RL_rl_debug_resume &&
	     !WILL_FIRE_RL_prepareCachesAndTlbs ;
  assign MUX_regRenamingTable$rename_0_getRename_1__VAL_2 =
	     { 2'd2, f_gpr_reqs$D_OUT[68:64], 20'd345386 } ;
  assign MUX_regRenamingTable$rename_0_getRename_1__VAL_3 =
	     { 2'd3, f_fpr_reqs$D_OUT[68:64], 20'd345386 } ;
  assign MUX_commitStage_commitTrap$write_1__VAL_2 =
	     { 1'd1,
	       rob$deqPort_0_deq_data[343:280],
	       x__h698266,
	       rob$deqPort_0_deq_data[156],
	       rob$deqPort_0_deq_data[156] ?
		 CASE_robdeqPort_0_deq_data_BITS_155_TO_152_0__ETC__q260 :
		 CASE_robdeqPort_0_deq_data_BITS_155_TO_152_0__ETC__q261,
	       rob$deqPort_0_deq_data[279:248] } ;
  assign MUX_commitStage_rg_serial_num$write_1__VAL_1 =
	     commitStage_rg_serial_num + 64'd1 ;
  assign MUX_commitStage_rg_serial_num$write_1__VAL_3 =
	     commitStage_rg_serial_num + y__h716926 ;
  assign MUX_coreFix_aluExe_0_rsAlu$enq_1__VAL_1 =
	     (k__h669550 == 1'd0 &&
	      fetchStage_pipelines_0_canDeq__2814_AND_NOT_fe_ETC___d14177) ?
	       { fetchStage$pipelines_0_first[199:195],
		 IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d12942,
		 fetchStage$pipelines_0_first[173],
		 IF_fetchStage_pipelines_0_first__2816_BITS_172_ETC___d13032,
		 fetchStage$pipelines_0_first[160:128],
		 fetchStage$pipelines_0_first[255:232],
		 regRenamingTable$rename_0_getRename,
		 rob$enqPort_0_getEnqInstTag,
		 specTagManager$currentSpecBits,
		 fetchStage$pipelines_0_first[194:192] == 3'd1,
		 specTagManager$nextSpecTag,
		 sbAggr$eagerLookup_0_get } :
	       { fetchStage$pipelines_1_first[199:195],
		 IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d13658,
		 fetchStage_pipelines_1_first__2825_BIT_173_365_ETC___d13750,
		 fetchStage$pipelines_1_first[160:128],
		 fetchStage$pipelines_1_first[255:232],
		 regRenamingTable$rename_1_getRename,
		 rob$enqPort_1_getEnqInstTag,
		 renaming_spec_bits__h684325,
		 fetchStage$pipelines_1_first[194:192] == 3'd1,
		 specTagManager$nextSpecTag,
		 sbAggr$eagerLookup_1_get } ;
  assign MUX_coreFix_aluExe_0_rsAlu$enq_1__VAL_2 =
	     { fetchStage$pipelines_0_first[199:195],
	       IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d12942,
	       fetchStage$pipelines_0_first[173],
	       IF_fetchStage_pipelines_0_first__2816_BITS_172_ETC___d13032,
	       fetchStage$pipelines_0_first[160:128],
	       fetchStage$pipelines_0_first[255:232],
	       regRenamingTable$rename_0_getRename,
	       rob$enqPort_0_getEnqInstTag,
	       specTagManager$currentSpecBits,
	       3'd2,
	       sbAggr$eagerLookup_0_get } ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1 =
	     { 1'd1, coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[21:15] } ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2 =
	     { 1'd1, coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[21:15] } ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3 =
	     { 1'd1, coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[21:15] } ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4 =
	     { 1'd1,
	       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[21:15] } ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5 =
	     { 1'd1,
	       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[21:15] } ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6 =
	     { 1'd1,
	       coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[21:15] } ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1 =
	     { 1'd1, coreFix_memExe_lsq$firstSt[149:143] } ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2 =
	     { 1'd1, coreFix_memExe_lsq$firstLd[88:82] } ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_4 =
	     { 1'd1, coreFix_memExe_lsq$getHit[7:1] } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_2__VAL_1 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
	       (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2075 ?
		  3'd3 :
		  3'd5) :
	       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2597 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_3__VAL_1 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
	       (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2075 ?
		  { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[573:571],
		    coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516],
		    53'h15555555555555 } :
		  58'h155555555555554) :
	       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2608 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_3__VAL_2 =
	     { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[573:571],
	       55'h15555555555555 } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__VAL_1 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
	       { (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 ||
		  !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085) &&
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
		 3'd2,
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:90] } :
	       { coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2154 &&
		 (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 ||
		  !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085) &&
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
		 3'd2,
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:90] } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__VAL_2 =
	     { coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	       3'd2,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:90] } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__VAL_1 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
	       { coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2075 &&
		 (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 ||
		  !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085) &&
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc[3],
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc[2:0] } :
	       { (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
		  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
		  3'd1) &&
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2154 &&
		 (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 ||
		  !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085) &&
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc[3],
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc[2:0] } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_1 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
	       (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2075 ?
		  IF_NOT_coreFix_memExe_dMem_cache_m_banks_0_pip_ETC___d2568 :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[569:0]) :
	       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2581 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_2 =
	     { coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:96],
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2202,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2558 } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_3 =
	     { coreFix_memExe_dMem_cache_m_banks_0_processAmo[151:100],
	       2'd3,
	       coreFix_memExe_dMem_cache_m_banks_0_processAmo[3:0],
	       IF_coreFix_memExe_dMem_cache_m_banks_0_process_ETC___d2066,
	       (coreFix_memExe_dMem_cache_m_banks_0_processAmo[93:91] ==
		3'd0) ?
		 n__h195117 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[63:0] } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_4 =
	     { IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2771,
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:0] } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_3__VAL_1 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2075 &&
	       (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 ||
		!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085) :
	       NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2584 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_1 =
	     { 517'h02AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getRq[147:84],
	       x__h286506 } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_2 =
	     { 517'h02AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA,
	       x__h287950,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getEmptyEntryInit } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_3 =
	     { 518'h1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA,
	       SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2933,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$getEmptyEntryInit } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_4 =
	     { 2'd2,
	       addr__h290726,
	       SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d3003 } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__VAL_1 =
	     { 1'd1,
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[576:574],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__VAL_2 =
	     { 1'd1,
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_1 =
	     { x__h155392, x__h155398, 84'h42AAAAAAAAAAAAAAAAAAA } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_2 =
	     { x__h158939, x__h158946, 84'hCAAAAAAAAAAAAAAAAAAAA } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_3 =
	     { x__h161756,
	       x__h161760,
	       IF_coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1__ETC___d1270,
	       IF_coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1__ETC___d1274,
	       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1278,
	       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1282,
	       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1286,
	       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1291,
	       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1295,
	       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1300,
	       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1304,
	       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1309,
	       x__h163608,
	       IF_coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1__ETC___d1317,
	       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1321,
	       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1325,
	       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1329 } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__VAL_1 =
	     { 1'd1,
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[576:574] } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__VAL_2 =
	     { 1'd0,
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[576:574] } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wset_1__VAL_1 =
	     { 1'd1,
	       resp_addr__h292630,
	       2'd0,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getData } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wset_1__VAL_2 =
	     { 1'd1,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getRq,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getData } ;
  assign MUX_coreFix_memExe_dTlb$updateVMInfo_1__VAL_1 =
	     { prv__h718462,
	       prv__h718462 != 2'd3 && csrf_vm_mode_sv39_reg,
	       csrf_mxr_reg,
	       csrf_sum_reg,
	       csrf_ppn_reg } ;
  assign MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__VAL_1 =
	     { 1'd1,
	       coreFix_memExe_lsq$getIssueLd[74:72],
	       coreFix_memExe_lsq$issueLd[63:0] } ;
  assign MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__VAL_2 =
	     { 1'd1,
	       coreFix_memExe_issueLd$wget[74:72],
	       coreFix_memExe_lsq$issueLd[63:0] } ;
  assign MUX_coreFix_memExe_lsq$getHit_1__VAL_1 =
	     { 1'd0,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[150:148] } ;
  assign MUX_coreFix_memExe_lsq$issueLd_4__VAL_1 =
	     { coreFix_memExe_stb$search[66],
	       coreFix_memExe_stb$search[66] && coreFix_memExe_stb$search[65],
	       coreFix_memExe_stb$search[64],
	       coreFix_memExe_stb$search[64] ?
		 coreFix_memExe_stb$search[63:0] :
		 64'hAAAAAAAAAAAAAAAA } ;
  always@(coreFix_memExe_memRespLdQ_deqP or
	  coreFix_memExe_memRespLdQ_data_0 or
	  coreFix_memExe_memRespLdQ_data_1)
  begin
    case (coreFix_memExe_memRespLdQ_deqP)
      1'd0:
	  MUX_coreFix_memExe_lsq$respLd_1__VAL_1 =
	      coreFix_memExe_memRespLdQ_data_0[66:64];
      1'd1:
	  MUX_coreFix_memExe_lsq$respLd_1__VAL_1 =
	      coreFix_memExe_memRespLdQ_data_1[66:64];
    endcase
  end
  always@(coreFix_memExe_forwardQ_deqP or
	  coreFix_memExe_forwardQ_data_0 or coreFix_memExe_forwardQ_data_1)
  begin
    case (coreFix_memExe_forwardQ_deqP)
      1'd0:
	  MUX_coreFix_memExe_lsq$respLd_1__VAL_2 =
	      coreFix_memExe_forwardQ_data_0[66:64];
      1'd1:
	  MUX_coreFix_memExe_lsq$respLd_1__VAL_2 =
	      coreFix_memExe_forwardQ_data_1[66:64];
    endcase
  end
  always@(coreFix_memExe_memRespLdQ_deqP or
	  coreFix_memExe_memRespLdQ_data_0 or
	  coreFix_memExe_memRespLdQ_data_1)
  begin
    case (coreFix_memExe_memRespLdQ_deqP)
      1'd0:
	  MUX_coreFix_memExe_lsq$respLd_2__VAL_1 =
	      coreFix_memExe_memRespLdQ_data_0[63:0];
      1'd1:
	  MUX_coreFix_memExe_lsq$respLd_2__VAL_1 =
	      coreFix_memExe_memRespLdQ_data_1[63:0];
    endcase
  end
  always@(coreFix_memExe_forwardQ_deqP or
	  coreFix_memExe_forwardQ_data_0 or coreFix_memExe_forwardQ_data_1)
  begin
    case (coreFix_memExe_forwardQ_deqP)
      1'd0:
	  MUX_coreFix_memExe_lsq$respLd_2__VAL_2 =
	      coreFix_memExe_forwardQ_data_0[63:0];
      1'd1:
	  MUX_coreFix_memExe_lsq$respLd_2__VAL_2 =
	      coreFix_memExe_forwardQ_data_1[63:0];
    endcase
  end
  assign MUX_coreFix_memExe_memRespLdQ_enqReq_lat_0$wset_1__VAL_1 =
	     { 1'd1,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[150:148],
	       x__h197788 } ;
  assign MUX_coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wset_1__VAL_1 =
	     { 3'd0,
	       coreFix_memExe_lsq$firstSt[141:78],
	       2'd3,
	       (coreFix_memExe_lsq$firstSt[158:157] == 2'd1) ? 3'd3 : 3'd4,
	       coreFix_memExe_lsq$firstSt[76:5],
	       coreFix_memExe_lsq$firstSt[156:153],
	       coreFix_memExe_lsq$firstSt[69] &&
	       coreFix_memExe_lsq$firstSt[70] &&
	       coreFix_memExe_lsq$firstSt[71] &&
	       coreFix_memExe_lsq$firstSt[72] &&
	       coreFix_memExe_lsq$firstSt[73] &&
	       coreFix_memExe_lsq$firstSt[74] &&
	       coreFix_memExe_lsq$firstSt[75] &&
	       coreFix_memExe_lsq$firstSt[76],
	       coreFix_memExe_lsq$firstSt[152:151] } ;
  assign MUX_coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wset_1__VAL_2 =
	     { 3'd0,
	       coreFix_memExe_lsq$firstLd[80:17],
	       84'h52AAAAAAAAAAAAAAAAAAA } ;
  assign MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_1 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
	       ((!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 ||
		 !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085) ?
		  { 1'd1,
		    IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2625 } :
		  65'h10000000000000001) :
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2628 ;
  assign MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_2 =
	     { 1'd1,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2625 } ;
  assign MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_3 =
	     { 1'd1,
	       coreFix_memExe_dMem_cache_m_banks_0_processAmo[6] ?
		 curData__h193579 :
		 { {32{x__h194342[31]}}, x__h194342 } } ;
  assign MUX_coreFix_trainBPQ_0$enq_1__VAL_1 =
	     { coreFix_aluExe_0_exeToFinQ$first[136:9],
	       coreFix_aluExe_0_exeToFinQ$first[314:310],
	       coreFix_aluExe_0_exeToFinQ$first[8],
	       coreFix_aluExe_0_exeToFinQ$first[290:267],
	       1'd0,
	       coreFix_aluExe_0_exeToFinQ$first[266] } ;
  assign MUX_coreFix_trainBPQ_0$enq_1__VAL_2 =
	     { coreFix_aluExe_0_exeToFinQ$first[136:9],
	       coreFix_aluExe_0_exeToFinQ$first[314:310],
	       coreFix_aluExe_0_exeToFinQ$first[8],
	       coreFix_aluExe_0_exeToFinQ$first[290:267],
	       1'd1,
	       coreFix_aluExe_0_exeToFinQ$first[266] } ;
  assign MUX_coreFix_trainBPQ_1$enq_1__VAL_1 =
	     { coreFix_aluExe_1_exeToFinQ$first[136:9],
	       coreFix_aluExe_1_exeToFinQ$first[314:310],
	       coreFix_aluExe_1_exeToFinQ$first[8],
	       coreFix_aluExe_1_exeToFinQ$first[290:267],
	       1'd0,
	       coreFix_aluExe_1_exeToFinQ$first[266] } ;
  assign MUX_coreFix_trainBPQ_1$enq_1__VAL_2 =
	     { coreFix_aluExe_1_exeToFinQ$first[136:9],
	       coreFix_aluExe_1_exeToFinQ$first[314:310],
	       coreFix_aluExe_1_exeToFinQ$first[8],
	       coreFix_aluExe_1_exeToFinQ$first[290:267],
	       1'd1,
	       coreFix_aluExe_1_exeToFinQ$first[266] } ;
  assign MUX_csrInstOrInterruptInflight_dummy_1_0$wset_1__VAL_1 =
	     MUX_csrInstOrInterruptInflight_dummy2_0$write_1__SEL_1 ||
	     MUX_csrInstOrInterruptInflight_dummy2_0$write_1__SEL_2 ;
  assign MUX_csrf_fflags_reg$write_1__VAL_1 =
	     csrf_fflags_reg | fflags__h716903 ;
  assign MUX_csrf_frm_reg$write_1__VAL_1 =
	     (IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd1) ?
	       robdeqPort_0_deq_data_BITS_85_TO_22__q262[2:0] :
	       robdeqPort_0_deq_data_BITS_85_TO_22__q262[7:5] ;
  assign MUX_csrf_frm_reg$write_1__VAL_2 =
	     (f_csr_reqs$D_OUT[75:64] == 12'd2) ?
	       f_csr_reqs$D_OUT[2:0] :
	       f_csr_reqs$D_OUT[7:5] ;
  always@(IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 or
	  robdeqPort_0_deq_data_BITS_85_TO_22__q262)
  begin
    case (IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794)
      6'd0, 6'd1, 6'd2: MUX_csrf_fs_reg$write_1__VAL_2 = 2'b11;
      default: MUX_csrf_fs_reg$write_1__VAL_2 =
		   robdeqPort_0_deq_data_BITS_85_TO_22__q262[14:13];
    endcase
  end
  always@(f_csr_reqs$D_OUT)
  begin
    case (f_csr_reqs$D_OUT[75:64])
      12'd1, 12'd2, 12'd3: MUX_csrf_fs_reg$write_1__VAL_3 = 2'b11;
      default: MUX_csrf_fs_reg$write_1__VAL_3 = f_csr_reqs$D_OUT[14:13];
    endcase
  end
  assign MUX_csrf_ie_vec_1$write_1__VAL_1 =
	     (rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	      (IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	       6'd8 ||
	       IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	       6'd18)) ?
	       robdeqPort_0_deq_data_BITS_85_TO_22__q262[1] :
	       csrf_prev_ie_vec_1 ;
  assign MUX_csrf_ie_vec_3$write_1__VAL_1 =
	     (rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	      IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd18) ?
	       robdeqPort_0_deq_data_BITS_85_TO_22__q262[3] :
	       csrf_prev_ie_vec_3 ;
  assign MUX_csrf_minstret_ehr_data_lat_0$wset_1__VAL_2 =
	     rob$deqPort_0_deq_data[85:22] ;
  assign MUX_csrf_minstret_ehr_data_lat_1$wset_1__VAL_1 =
	     n__read__h714440 + 64'd1 ;
  assign MUX_csrf_minstret_ehr_data_lat_1$wset_1__VAL_2 =
	     n__read__h714440 + { 62'd0, x__h717151 } ;
  assign MUX_csrf_mpp_reg$write_1__VAL_1 =
	     (rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	      IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd18) ?
	       MUX_csrf_minstret_ehr_data_lat_0$wset_1__VAL_2[12:11] :
	       2'd0 ;
  assign MUX_csrf_mtval_csr$write_1__VAL_1 = rob$deqPort_0_deq_data[85:22] ;
  assign MUX_csrf_mtval_csr$write_1__VAL_2 =
	     commitStage_commitTrap[36] ? 64'd0 : trap_val__h704156 ;
  assign MUX_csrf_prev_ie_vec_1$write_1__VAL_1 =
	     rob$deqPort_0_deq_data[247:243] != 5'd13 ||
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 !=
	     6'd8 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 !=
	     6'd18 ||
	     MUX_csrf_mtval_csr$write_1__VAL_1[5] ;
  assign MUX_csrf_prev_ie_vec_3$write_1__VAL_1 =
	     rob$deqPort_0_deq_data[247:243] != 5'd13 ||
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 !=
	     6'd18 ||
	     MUX_csrf_mtval_csr$write_1__VAL_1[7] ;
  assign MUX_csrf_prv_reg$write_1__VAL_1 =
	     (rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	      IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd40) ?
	       MUX_csrf_mtval_csr$write_1__VAL_1[1:0] :
	       ((rob$deqPort_0_deq_data[247:243] == 5'd19) ?
		  x__h713815 :
		  csrf_mpp_reg) ;
  assign MUX_csrf_prv_reg$write_1__VAL_2 =
	     csrf_prv_reg_read__2846_ULE_1_4635_AND_IF_comm_ETC___d14657 ?
	       2'd1 :
	       2'd3 ;
  assign MUX_csrf_rg_dcsr$write_1__VAL_2 =
	     { 32'b0,
	       csrf_rg_dcsr[31:9],
	       dcsr_cause__h702636,
	       csrf_rg_dcsr[5:2],
	       csrf_prv_reg } ;
  assign MUX_csrf_sepc_csr$write_1__VAL_1 = rob$deqPort_0_deq_data[85:22] ;
  assign MUX_csrf_spp_reg$write_1__VAL_1 =
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     (IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd8 ||
	      IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd18) &&
	     MUX_csrf_sepc_csr$write_1__VAL_1[8] ;
  assign MUX_csrf_stval_csr$write_1__VAL_1 = rob$deqPort_0_deq_data[85:22] ;
  assign MUX_f_csr_rsps$enq_1__VAL_3 = { 1'd1, data_out__h720863 } ;
  assign MUX_f_fpr_rsps$enq_1__VAL_3 = { 1'd1, rf$read_4_rd1 } ;
  assign MUX_fetchStage$iTlbIfc_updateVMInfo_1__VAL_1 =
	     { csrf_prv_reg,
	       csrf_prv_reg != 2'd3 && csrf_vm_mode_sv39_reg,
	       csrf_mxr_reg,
	       csrf_sum_reg,
	       csrf_ppn_reg } ;
  assign MUX_fetchStage$redirect_1__VAL_1 =
	     csrf_prv_reg_read__2846_ULE_1_4635_AND_IF_comm_ETC___d14657 ?
	       y_avValue_new_pc__h705853 :
	       y_avValue_new_pc__h706039 ;
  always@(rob$deqPort_0_deq_data or
	  next_pc__h713755 or csrf_sepc_csr or csrf_mepc_csr)
  begin
    case (rob$deqPort_0_deq_data[247:243])
      5'd19: MUX_fetchStage$redirect_1__VAL_6 = csrf_sepc_csr;
      5'd20: MUX_fetchStage$redirect_1__VAL_6 = csrf_mepc_csr;
      default: MUX_fetchStage$redirect_1__VAL_6 = next_pc__h713755;
    endcase
  end
  assign MUX_l2Tlb$toChildren_rqFromC_put_1__VAL_1 =
	     { 1'd1,
	       coreFix_memExe_dTlb$toParent_rqToP_first[1:0],
	       coreFix_memExe_dTlb$toParent_rqToP_first[28:2] } ;
  assign MUX_l2Tlb$toChildren_rqFromC_put_1__VAL_2 =
	     { 3'd2, fetchStage$iTlbIfc_toParent_rqToP_first } ;
  assign MUX_mmio_cRqQ_enqReq_lat_0$wset_1__VAL_1 =
	     { 1'd1,
	       mmio_dataReqQ_data_0[141:78],
	       CASE_mmio_dataReqQ_data_0_BITS_77_TO_76_0_mmio_ETC__q263,
	       mmio_dataReqQ_data_0[71:0] } ;
  assign MUX_mmio_cRqQ_enqReq_lat_0$wset_1__VAL_2 =
	     { 1'd1,
	       fetchStage$mmioIfc_instReq_first_fst,
	       4'd2,
	       fetchStage$mmioIfc_instReq_first_snd,
	       72'hAAAAAAAAAAAAAAAAAA } ;
  assign MUX_mmio_dataReqQ_enqReq_lat_0$wset_1__VAL_1 =
	     { 1'd1,
	       coreFix_memExe_lsq$firstSt[141:78],
	       (coreFix_memExe_lsq$firstSt[158:157] == 2'd0) ?
		 6'd42 :
		 { 2'd3, coreFix_memExe_lsq$firstSt[156:153] },
	       coreFix_memExe_lsq$firstSt[76:5] } ;
  assign MUX_mmio_dataReqQ_enqReq_lat_0$wset_1__VAL_2 =
	     { 1'd1,
	       coreFix_memExe_lsq$firstLd[80:17],
	       6'd26,
	       coreFix_memExe_lsq$firstLd[15:0],
	       56'hAAAAAAAAAAAAAA } ;
  assign MUX_rf$write_2_wr_2__VAL_2 =
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[29] ?
	       res_data__h338531 :
	       res_data__h338526 ;
  assign MUX_rf$write_2_wr_2__VAL_3 =
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[29] ?
	       res_data__h384233 :
	       res_data__h384228 ;
  assign MUX_rf$write_2_wr_2__VAL_4 =
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[29] ?
	       res_data__h429928 :
	       res_data__h429923 ;
  assign MUX_rf$write_2_wr_2__VAL_5 =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[23] ?
	       data___1__h475665 :
	       IF_coreFix_fpuMulDivExe_0_mulDivExec_mulQ_firs_ETC___d8128 ;
  assign MUX_rf$write_2_wr_2__VAL_6 =
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[23] ?
	       data___1__h476473 :
	       data__h475939 ;
  assign MUX_rf$write_3_wr_2__VAL_3 =
	     coreFix_memExe_lsq$firstLd[100] ?
	       coreFix_memExe_respLrScAmoQ_data_0 :
	       IF_coreFix_memExe_lsq_firstLd__339_BIT_96_404__ETC___d1440 ;
  assign MUX_rf$write_3_wr_2__VAL_4 =
	     coreFix_memExe_lsq$firstLd[100] ?
	       mmio_dataRespQ_data_0[63:0] :
	       IF_coreFix_memExe_lsq_firstLd__339_BIT_96_404__ETC___d1487 ;
  assign MUX_rob$enqPort_0_enq_1__VAL_1 =
	     { fetchStage$pipelines_0_first[385:322],
	       fetchStage$pipelines_0_first[127:96],
	       fetchStage$pipelines_0_first[199:195],
	       fetchStage$pipelines_0_first[75:69],
	       64'hAAAAAAAAAAAAAAAA,
	       fetchStage$pipelines_0_first[173],
	       IF_fetchStage_pipelines_0_first__2816_BITS_172_ETC___d13032,
	       73'h1280000000000000000,
	       fetchStage$pipelines_0_first[321:258],
	       5'd0,
	       fetchStage$pipelines_0_first[75] &&
	       fetchStage$pipelines_0_first[74],
	       fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	       fetchStage$pipelines_0_first[194:192] != 3'd1 &&
	       fetchStage$pipelines_0_first[194:192] != 3'd2 &&
	       fetchStage$pipelines_0_first[194:192] != 3'd3 &&
	       fetchStage$pipelines_0_first[194:192] != 3'd4,
	       NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d14243 } ;
  assign MUX_rob$enqPort_0_enq_1__VAL_2 =
	     { fetchStage$pipelines_0_first[385:322],
	       fetchStage$pipelines_0_first[127:96],
	       fetchStage$pipelines_0_first[199:195],
	       fetchStage$pipelines_0_first[75:69],
	       64'hAAAAAAAAAAAAAAAA,
	       fetchStage$pipelines_0_first[173],
	       IF_fetchStage_pipelines_0_first__2816_BITS_172_ETC___d13032,
	       2'd1,
	       renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_N_ETC___d13127,
	       IF_NOT_renameStage_rg_m_halt_req_2843_BIT_4_28_ETC___d13342,
	       fetchStage$pipelines_0_first[63:0],
	       2'd0,
	       fetchStage$pipelines_0_first[321:258],
	       18'd3361,
	       specTagManager$currentSpecBits } ;
  assign MUX_rob$enqPort_0_enq_1__VAL_3 =
	     { fetchStage$pipelines_0_first[385:322],
	       fetchStage$pipelines_0_first[127:96],
	       fetchStage$pipelines_0_first[199:195],
	       fetchStage$pipelines_0_first[75:69],
	       64'hAAAAAAAAAAAAAAAA,
	       fetchStage_pipelines_0_first__2816_BIT_173_294_ETC___d13469 } ;
  assign MUX_rob$setExecuted_deqLSQ_2__VAL_3 =
	     { 1'd1,
	       CASE_coreFix_memExe_lsqfirstLd_BITS_6_TO_3_0__ETC__q264 } ;
  assign MUX_rob$setExecuted_deqLSQ_2__VAL_6 =
	     { 1'd1,
	       CASE_coreFix_memExe_lsqfirstSt_BITS_3_TO_0_0__ETC__q265 } ;
  assign MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_2 =
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[29] ?
	       coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[4:0] :
	       res_fflags__h338527 ;
  assign MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_3 =
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[29] ?
	       coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[4:0] :
	       res_fflags__h384229 ;
  assign MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_4 =
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[29] ?
	       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[4:0] :
	       res_fflags__h429924 ;

  // inlined wires
  assign csrf_minstret_ehr_data_lat_0$whas =
	     MUX_csrf_minstret_ehr_data_dummy2_0$write_1__SEL_1 ||
	     MUX_csrf_minstret_ehr_data_dummy2_0$write_1__SEL_2 ;
  assign csrf_minstret_ehr_data_lat_1$whas =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ||
	     WILL_FIRE_RL_commitStage_doCommitNormalInst ;
  assign csrf_minstret_ehr_data_dummy_1_0$whas =
	     WILL_FIRE_RL_commitStage_doCommitNormalInst ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ;
  assign csrf_mcycle_ehr_data_lat_0$whas =
	     MUX_csrf_mcycle_ehr_data_dummy2_0$write_1__SEL_1 ||
	     MUX_csrf_mcycle_ehr_data_dummy2_0$write_1__SEL_2 ;
  assign csrInstOrInterruptInflight_lat_1$whas =
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	     fetchStage$pipelines_0_first[199:195] == 5'd13 ||
	     WILL_FIRE_RL_renameStage_doRenaming_Trap &&
	     renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_N_ETC___d13357 ;
  assign mmio_dataReqQ_enqReq_lat_0$wget =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue ?
	       MUX_mmio_dataReqQ_enqReq_lat_0$wset_1__VAL_1 :
	       MUX_mmio_dataReqQ_enqReq_lat_0$wset_1__VAL_2 ;
  assign mmio_dataReqQ_enqReq_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue ;
  assign mmio_dataRespQ_enqReq_lat_0$wget = { 1'd1, mmio_pRsQ_data_0[64:0] } ;
  assign mmio_dataRespQ_deqReq_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ;
  assign mmio_dataPendQ_enqReq_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue ;
  assign mmio_cRqQ_enqReq_lat_0$wget =
	     WILL_FIRE_RL_mmio_sendDataReq ?
	       MUX_mmio_cRqQ_enqReq_lat_0$wset_1__VAL_1 :
	       MUX_mmio_cRqQ_enqReq_lat_0$wset_1__VAL_2 ;
  assign mmio_cRqQ_enqReq_lat_0$whas =
	     WILL_FIRE_RL_mmio_sendDataReq || WILL_FIRE_RL_mmio_sendInstReq ;
  assign mmio_pRsQ_enqReq_lat_0$wget = { 1'd1, mmioToPlatform_pRs_enq_x } ;
  assign mmio_pRsQ_deqReq_lat_0$whas =
	     WILL_FIRE_RL_mmio_sendInstResp ||
	     WILL_FIRE_RL_mmio_sendDataResp ;
  assign mmio_pRqQ_enqReq_lat_0$wget =
	     { 1'd1,
	       mmioToPlatform_pRq_enq_x[38],
	       CASE_mmioToPlatform_pRq_enq_x_BITS_37_TO_36_0__ETC__q266,
	       mmioToPlatform_pRq_enq_x[31:0] } ;
  assign mmio_cRsQ_enqReq_lat_0$wget =
	     { 1'd1, csrf_software_int_pend_vec_3 } ;
  assign coreFix_globalSpecUpdate_correctSpecTag_0$whas =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F &&
	     coreFix_aluExe_0_exeToFinQ$first[6] ;
  assign coreFix_globalSpecUpdate_correctSpecTag_1$whas =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F &&
	     coreFix_aluExe_1_exeToFinQ$first[6] ;
  assign coreFix_aluExe_0_bypassWire_0$wget =
	     { coreFix_aluExe_0_regToExeQ$first[336:330],
	       basicExec___d12676[321:258] } ;
  assign coreFix_aluExe_0_bypassWire_0$whas =
	     WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu &&
	     coreFix_aluExe_0_regToExeQ$first[337] ;
  assign coreFix_aluExe_0_bypassWire_1$wget =
	     { coreFix_aluExe_1_regToExeQ$first[336:330],
	       basicExec___d12002[321:258] } ;
  assign coreFix_aluExe_0_bypassWire_1$whas =
	     WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu &&
	     coreFix_aluExe_1_regToExeQ$first[337] ;
  assign coreFix_aluExe_0_bypassWire_2$wget =
	     { coreFix_aluExe_0_exeToFinQ$first[308:302],
	       coreFix_aluExe_0_exeToFinQ$first[265:202] } ;
  assign coreFix_aluExe_0_bypassWire_2$whas =
	     _dor1coreFix_aluExe_0_bypassWire_2$EN_wset &&
	     coreFix_aluExe_0_exeToFinQ$first[309] ;
  assign coreFix_aluExe_0_bypassWire_3$wget =
	     { coreFix_aluExe_1_exeToFinQ$first[308:302],
	       coreFix_aluExe_1_exeToFinQ$first[265:202] } ;
  assign coreFix_aluExe_0_bypassWire_3$whas =
	     _dor1coreFix_aluExe_0_bypassWire_3$EN_wset &&
	     coreFix_aluExe_1_exeToFinQ$first[309] ;
  assign coreFix_aluExe_1_bypassWire_2$whas =
	     _dor1coreFix_aluExe_1_bypassWire_2$EN_wset &&
	     coreFix_aluExe_0_exeToFinQ$first[309] ;
  assign coreFix_aluExe_1_bypassWire_3$whas =
	     _dor1coreFix_aluExe_1_bypassWire_3$EN_wset &&
	     coreFix_aluExe_1_exeToFinQ$first[309] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_2$whas =
	     _dor1coreFix_fpuMulDivExe_0_bypassWire_2$EN_wset &&
	     coreFix_aluExe_0_exeToFinQ$first[309] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_3$whas =
	     _dor1coreFix_fpuMulDivExe_0_bypassWire_3$EN_wset &&
	     coreFix_aluExe_1_exeToFinQ$first[309] ;
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[216:215])
      2'd0, 2'd1:
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$wget =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[216:215];
      default: coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$wget = 2'd2;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$whas =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[235:233] == 3'd3 &&
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[219:218] == 2'd0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[219:218] == 2'd1) ;
  assign coreFix_memExe_bypassWire_2$whas =
	     _dor1coreFix_memExe_bypassWire_2$EN_wset &&
	     coreFix_aluExe_0_exeToFinQ$first[309] ;
  assign coreFix_memExe_bypassWire_3$whas =
	     _dor1coreFix_memExe_bypassWire_3$EN_wset &&
	     coreFix_aluExe_1_exeToFinQ$first[309] ;
  assign coreFix_memExe_issueLd$wget =
	     { coreFix_memExe_dTlb$procResp[79:77],
	       coreFix_memExe_dTlb$procResp[162:99],
	       coreFix_memExe_dTlb$procResp[76:69] } ;
  assign coreFix_memExe_issueLd$whas =
	     WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	     coreFix_memExe_dTlb$procResp[93:91] == 3'd0 &&
	     NOT_coreFix_memExe_dTlb_procResp__774_BITS_162_ETC___d1813 &&
	     IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1802 &&
	     !coreFix_memExe_lsq$updateAddr ;
  assign coreFix_memExe_reqLdQ_data_0_lat_0$wget =
	     MUX_coreFix_memExe_reqLdQ_data_0_lat_0$wset_1__SEL_1 ?
	       coreFix_memExe_issueLd$wget[74:8] :
	       coreFix_memExe_lsq$getIssueLd[74:8] ;
  assign coreFix_memExe_reqLdQ_data_0_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd0 ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd0 ;
  assign coreFix_memExe_reqLdQ_empty_lat_0$whas =
	     _dor1coreFix_memExe_reqLdQ_empty_lat_0$EN_wset &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd0 ;
  assign coreFix_memExe_reqLdQ_full_lat_0$whas =
	     _dor1coreFix_memExe_reqLdQ_full_lat_0$EN_wset &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd0 ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue ?
	       MUX_coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wset_1__VAL_1 :
	       MUX_coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wset_1__VAL_2 ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue ;
  assign coreFix_memExe_reqStQ_data_0_lat_0$wget =
	     { coreFix_memExe_stb$issue[634:576], 6'd0 } ;
  assign coreFix_memExe_forwardQ_enqReq_lat_0$wget =
	     MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__SEL_1 ?
	       MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__VAL_1 :
	       MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__VAL_2 ;
  assign coreFix_memExe_forwardQ_enqReq_lat_0$whas =
	     MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__SEL_1 ||
	     MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__SEL_2 ;
  assign coreFix_memExe_memRespLdQ_enqReq_lat_0$wget =
	     MUX_coreFix_memExe_lsq$getHit_1__SEL_1 ?
	       MUX_coreFix_memExe_memRespLdQ_enqReq_lat_0$wset_1__VAL_1 :
	       MUX_coreFix_memExe_memRespLdQ_enqReq_lat_0$wset_1__VAL_1 ;
  assign coreFix_memExe_memRespLdQ_enqReq_lat_0$whas =
	     MUX_coreFix_memExe_lsq$getHit_1__SEL_1 ||
	     MUX_coreFix_memExe_lsq$getHit_1__SEL_2 ;
  always@(MUX_coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0$write_1__SEL_1 or
	  MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_2 or
	  MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_2 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo or
	  MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0$write_1__SEL_1:
	  coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wget =
	      MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_1;
      MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_2:
	  coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wget =
	      MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_2;
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo:
	  coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wget =
	      MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_3;
      default: coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wget =
		   65'h0AAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_respLrScAmoQ_enqReq_lat_0$whas =
	     MUX_coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0$write_1__SEL_1 ||
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_2 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo ;
  assign coreFix_memExe_respLrScAmoQ_deqReq_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;
  always@(WILL_FIRE_RL_coreFix_memExe_sendLdToMem or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_1 or
	  WILL_FIRE_RL_coreFix_memExe_sendStToMem or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_2 or
	  WILL_FIRE_RL_coreFix_memExe_sendLrScAmoToMem or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_memExe_sendLdToMem:
	  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_1;
      WILL_FIRE_RL_coreFix_memExe_sendStToMem:
	  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_2;
      WILL_FIRE_RL_coreFix_memExe_sendLrScAmoToMem:
	  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_3;
      default: coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget =
		   151'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_sendLdToMem ||
	     WILL_FIRE_RL_coreFix_memExe_sendStToMem ||
	     WILL_FIRE_RL_coreFix_memExe_sendLrScAmoToMem ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wget =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq ?
	       MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wset_1__VAL_1 :
	       MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wset_1__VAL_2 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_lat_0$wget =
	     { 1'd1,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getRq[147:84],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getSlot[54:53],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getRq[83:82],
	       1'd1,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getSlot[57:55] } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget =
	     { 1'd1, dCacheToParent_fromP_enq_x } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$wget =
	     { 1'd1,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc[2:0] } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2707 ;
  always@(MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__VAL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_2 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__VAL_2 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_1:
	  coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wget =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__VAL_1;
      MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_2:
	  coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wget =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__VAL_2;
      MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_3:
	  coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wget =
	      59'h2AAAAAAAAAAAAAA;
      default: coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wget =
		   59'h2AAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$whas =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_1 ||
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_2 ||
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_3 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_deqEn$whas =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqMulPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul ;
  assign coreFix_memExe_reqLrScAmoQ_enqP_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_sendLrScAmoToMem ||
	     WILL_FIRE_RL_coreFix_memExe_sendStToMem ||
	     WILL_FIRE_RL_coreFix_memExe_sendLdToMem ;

  // register commitStage_commitTrap
  assign commitStage_commitTrap$D_IN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle ?
	       166'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       MUX_commitStage_commitTrap$write_1__VAL_2 ;
  assign commitStage_commitTrap$EN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;

  // register commitStage_rg_run_state
  assign commitStage_rg_run_state$D_IN =
	     MUX_commitStage_rg_run_state$write_1__SEL_1 ;
  assign commitStage_rg_run_state$EN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     commitStage_commitTrap_4406_BIT_36_4532_AND_co_ETC___d14597 ||
	     WILL_FIRE_RL_rl_debug_resume ;

  // register commitStage_rg_serial_num
  always@(MUX_commitStage_rg_serial_num$write_1__SEL_1 or
	  MUX_commitStage_rg_serial_num$write_1__VAL_1 or
	  WILL_FIRE_RL_commitStage_doCommitSystemInst or
	  WILL_FIRE_RL_commitStage_doCommitNormalInst or
	  MUX_commitStage_rg_serial_num$write_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_commitStage_rg_serial_num$write_1__SEL_1:
	  commitStage_rg_serial_num$D_IN =
	      MUX_commitStage_rg_serial_num$write_1__VAL_1;
      WILL_FIRE_RL_commitStage_doCommitSystemInst:
	  commitStage_rg_serial_num$D_IN =
	      MUX_commitStage_rg_serial_num$write_1__VAL_1;
      WILL_FIRE_RL_commitStage_doCommitNormalInst:
	  commitStage_rg_serial_num$D_IN =
	      MUX_commitStage_rg_serial_num$write_1__VAL_3;
      default: commitStage_rg_serial_num$D_IN =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign commitStage_rg_serial_num$EN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14634 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ||
	     WILL_FIRE_RL_commitStage_doCommitNormalInst ;

  // register coreFix_doStatsReg
  assign coreFix_doStatsReg$D_IN = 1'b0 ;
  assign coreFix_doStatsReg$EN = 1'b0 ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt$D_IN =
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt + 4'd1 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt$EN =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_doInit ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init$D_IN = 1'd1 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init$EN =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_doInit &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt == 4'd15 ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit$D_IN =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$whas ?
	       v__h605185 :
	       v__h604540 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit$EN = 1'd1 ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0$D_IN =
	     { coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$whas,
	       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$wget } ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0$EN = 1'd1 ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1$D_IN =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl$D_IN =
	     1'd0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl$EN =
	     1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$whas ?
	       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$wget[2:0] :
	       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl[2:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ==
	     3'd0 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3115 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3089 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$D_IN ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ==
	     3'd1 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3115 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3089 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$D_IN ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ==
	     3'd2 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3115 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3089 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$D_IN ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ==
	     3'd3 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3115 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3089 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$D_IN ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ==
	     3'd4 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3115 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3089 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$D_IN ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ==
	     3'd5 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3115 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3089 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$D_IN ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ==
	     3'd6 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3115 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3089 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$D_IN ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ==
	     3'd7 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3115 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3089 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP$D_IN =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1$Q_OUT &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl) ?
	       3'd0 :
	       _theResult_____2__h297178 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl$D_IN =
	     1'd0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl$EN =
	     1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1$Q_OUT &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl ||
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3116 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3136 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP$D_IN =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1$Q_OUT &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl) ?
	       3'd0 :
	       v__h296598 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl$D_IN =
	     4'b0010 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl$EN =
	     1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full$D_IN =
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3115 &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3116 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIn_ETC___d3125 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0$D_IN =
	     { !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$Q_OUT ||
	       IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3238 ||
	       (EN_dCacheToParent_fromP_enq ?
		  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget[582] :
		  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl[582]),
	       IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3305 } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP == 1'd0 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_ETC___d3185 &&
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3196 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0$D_IN ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP == 1'd1 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_ETC___d3185 &&
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3196 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP$D_IN =
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_ETC___d3185 &&
	     _theResult_____2__h305174 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1$Q_OUT &&
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl ||
	     IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3218 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_ETC___d3241 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP$D_IN =
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_ETC___d3185 &&
	     v__h299943 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl$D_IN =
	     584'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full$D_IN =
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_ETC___d3185 &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3218 &&
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enq_ETC___d3228 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl$D_IN =
	     { IF_coreFix_memExe_dMem_cache_m_banks_0_linkAdd_ETC___d3062,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_linkAdd_ETC___d3070 } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_processAmo
  always@(MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__SEL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__VAL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__SEL_2 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__VAL_2 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__SEL_1:
	  coreFix_memExe_dMem_cache_m_banks_0_processAmo$D_IN =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__VAL_1;
      MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__SEL_2:
	  coreFix_memExe_dMem_cache_m_banks_0_processAmo$D_IN =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__VAL_2;
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo:
	  coreFix_memExe_dMem_cache_m_banks_0_processAmo$D_IN =
	      159'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
      default: coreFix_memExe_dMem_cache_m_banks_0_processAmo$D_IN =
		   159'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_dMem_cache_m_banks_0_processAmo$EN =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__SEL_1 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd4 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget :
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl$D_IN =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new ||
	     !coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_lat_0$whas &&
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl$D_IN =
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_lat_0$whas ||
	      coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0$D_IN =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP ?
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_lat_0$wget[71:0] :
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl[71:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP == 1'd0 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_ETC___d3356 &&
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3367 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1$D_IN =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP ?
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_lat_0$wget[71:0] :
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl[71:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP == 1'd1 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_ETC___d3356 &&
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3367 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP$D_IN =
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_ETC___d3356 &&
	     _theResult_____2__h311168 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1$Q_OUT &&
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl ||
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3390 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_ETC___d3413 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP$D_IN =
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_ETC___d3356 &&
	     v__h310457 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl$D_IN =
	     73'h0AAAAAAAAAAAAAAAAAA ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full$D_IN =
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_ETC___d3356 &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3390 &&
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enq_ETC___d3399 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0$D_IN =
	     { x_addr__h314731,
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$whas ?
		 coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wget[514:513] :
		 coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl[514:513],
	       !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2$Q_OUT ||
	       IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3505 ||
	       (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$whas ?
		  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wget[512] :
		  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl[512]),
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$whas ?
		 coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wget[511:0] :
		 coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl[511:0] } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP == 1'd0 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_ETC___d3452 &&
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3463 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0$D_IN ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP == 1'd1 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_ETC___d3452 &&
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3463 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP$D_IN =
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_ETC___d3452 &&
	     _theResult_____2__h319022 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1$Q_OUT &&
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl ||
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3486 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_ETC___d3509 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP$D_IN =
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_ETC___d3452 &&
	     v__h314333 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl$D_IN =
	     580'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full$D_IN =
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_ETC___d3452 &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3486 &&
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enq_ETC___d3495 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full$EN = 1'd1 ;

  // register coreFix_memExe_dMem_perfReqQ_clearReq_rl
  assign coreFix_memExe_dMem_perfReqQ_clearReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_dMem_perfReqQ_clearReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_perfReqQ_data_0
  assign coreFix_memExe_dMem_perfReqQ_data_0$D_IN =
	     coreFix_memExe_dMem_perfReqQ_enqReq_rl[3:0] ;
  assign coreFix_memExe_dMem_perfReqQ_data_0$EN =
	     NOT_coreFix_memExe_dMem_perfReqQ_clearReq_dumm_ETC___d1941 &&
	     coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2$Q_OUT &&
	     coreFix_memExe_dMem_perfReqQ_enqReq_rl[4] ;

  // register coreFix_memExe_dMem_perfReqQ_deqReq_rl
  assign coreFix_memExe_dMem_perfReqQ_deqReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_dMem_perfReqQ_deqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_perfReqQ_empty
  assign coreFix_memExe_dMem_perfReqQ_empty$D_IN =
	     coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1$Q_OUT &&
	     coreFix_memExe_dMem_perfReqQ_clearReq_rl ||
	     NOT_coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_ETC___d1985 ;
  assign coreFix_memExe_dMem_perfReqQ_empty$EN = 1'd1 ;

  // register coreFix_memExe_dMem_perfReqQ_enqReq_rl
  assign coreFix_memExe_dMem_perfReqQ_enqReq_rl$D_IN = 5'b01010 ;
  assign coreFix_memExe_dMem_perfReqQ_enqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_perfReqQ_full
  assign coreFix_memExe_dMem_perfReqQ_full$D_IN =
	     NOT_coreFix_memExe_dMem_perfReqQ_clearReq_dumm_ETC___d1941 &&
	     coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2_r_ETC___d1969 ;
  assign coreFix_memExe_dMem_perfReqQ_full$EN = 1'd1 ;

  // register coreFix_memExe_forwardQ_clearReq_rl
  assign coreFix_memExe_forwardQ_clearReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_forwardQ_clearReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_forwardQ_data_0
  assign coreFix_memExe_forwardQ_data_0$D_IN =
	     coreFix_memExe_forwardQ_enqReq_lat_0$whas ?
	       coreFix_memExe_forwardQ_enqReq_lat_0$wget[66:0] :
	       coreFix_memExe_forwardQ_enqReq_rl[66:0] ;
  assign coreFix_memExe_forwardQ_data_0$EN =
	     coreFix_memExe_forwardQ_enqP == 1'd0 &&
	     NOT_coreFix_memExe_forwardQ_clearReq_dummy2_1__ETC___d3775 &&
	     coreFix_memExe_forwardQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_forwardQ_enqReq_lat_1_whas___ETC___d3786 ;

  // register coreFix_memExe_forwardQ_data_1
  assign coreFix_memExe_forwardQ_data_1$D_IN =
	     coreFix_memExe_forwardQ_enqReq_lat_0$whas ?
	       coreFix_memExe_forwardQ_enqReq_lat_0$wget[66:0] :
	       coreFix_memExe_forwardQ_enqReq_rl[66:0] ;
  assign coreFix_memExe_forwardQ_data_1$EN =
	     coreFix_memExe_forwardQ_enqP == 1'd1 &&
	     NOT_coreFix_memExe_forwardQ_clearReq_dummy2_1__ETC___d3775 &&
	     coreFix_memExe_forwardQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_forwardQ_enqReq_lat_1_whas___ETC___d3786 ;

  // register coreFix_memExe_forwardQ_deqP
  assign coreFix_memExe_forwardQ_deqP$D_IN =
	     NOT_coreFix_memExe_forwardQ_clearReq_dummy2_1__ETC___d3775 &&
	     _theResult_____2__h332591 ;
  assign coreFix_memExe_forwardQ_deqP$EN = 1'd1 ;

  // register coreFix_memExe_forwardQ_deqReq_rl
  assign coreFix_memExe_forwardQ_deqReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_forwardQ_deqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_forwardQ_empty
  assign coreFix_memExe_forwardQ_empty$D_IN =
	     coreFix_memExe_forwardQ_clearReq_dummy2_1$Q_OUT &&
	     coreFix_memExe_forwardQ_clearReq_rl ||
	     IF_coreFix_memExe_forwardQ_deqReq_dummy2_2_rea_ETC___d3808 &&
	     NOT_coreFix_memExe_forwardQ_enqReq_dummy2_2_re_ETC___d3830 ;
  assign coreFix_memExe_forwardQ_empty$EN = 1'd1 ;

  // register coreFix_memExe_forwardQ_enqP
  assign coreFix_memExe_forwardQ_enqP$D_IN =
	     NOT_coreFix_memExe_forwardQ_clearReq_dummy2_1__ETC___d3775 &&
	     v__h332159 ;
  assign coreFix_memExe_forwardQ_enqP$EN = 1'd1 ;

  // register coreFix_memExe_forwardQ_enqReq_rl
  assign coreFix_memExe_forwardQ_enqReq_rl$D_IN = 68'h2AAAAAAAAAAAAAAAA ;
  assign coreFix_memExe_forwardQ_enqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_forwardQ_full
  assign coreFix_memExe_forwardQ_full$D_IN =
	     NOT_coreFix_memExe_forwardQ_clearReq_dummy2_1__ETC___d3775 &&
	     IF_coreFix_memExe_forwardQ_deqReq_dummy2_2_rea_ETC___d3808 &&
	     coreFix_memExe_forwardQ_enqReq_dummy2_2_read___ETC___d3817 ;
  assign coreFix_memExe_forwardQ_full$EN = 1'd1 ;

  // register coreFix_memExe_memRespLdQ_clearReq_rl
  assign coreFix_memExe_memRespLdQ_clearReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_memRespLdQ_clearReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_memRespLdQ_data_0
  assign coreFix_memExe_memRespLdQ_data_0$D_IN =
	     coreFix_memExe_memRespLdQ_enqReq_lat_0$whas ?
	       coreFix_memExe_memRespLdQ_enqReq_lat_0$wget[66:0] :
	       coreFix_memExe_memRespLdQ_enqReq_rl[66:0] ;
  assign coreFix_memExe_memRespLdQ_data_0$EN =
	     coreFix_memExe_memRespLdQ_enqP == 1'd0 &&
	     NOT_coreFix_memExe_memRespLdQ_clearReq_dummy2__ETC___d3681 &&
	     coreFix_memExe_memRespLdQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_memRespLdQ_enqReq_lat_1_whas_ETC___d3692 ;

  // register coreFix_memExe_memRespLdQ_data_1
  assign coreFix_memExe_memRespLdQ_data_1$D_IN =
	     coreFix_memExe_memRespLdQ_enqReq_lat_0$whas ?
	       coreFix_memExe_memRespLdQ_enqReq_lat_0$wget[66:0] :
	       coreFix_memExe_memRespLdQ_enqReq_rl[66:0] ;
  assign coreFix_memExe_memRespLdQ_data_1$EN =
	     coreFix_memExe_memRespLdQ_enqP == 1'd1 &&
	     NOT_coreFix_memExe_memRespLdQ_clearReq_dummy2__ETC___d3681 &&
	     coreFix_memExe_memRespLdQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_memRespLdQ_enqReq_lat_1_whas_ETC___d3692 ;

  // register coreFix_memExe_memRespLdQ_deqP
  assign coreFix_memExe_memRespLdQ_deqP$D_IN =
	     NOT_coreFix_memExe_memRespLdQ_clearReq_dummy2__ETC___d3681 &&
	     _theResult_____2__h329366 ;
  assign coreFix_memExe_memRespLdQ_deqP$EN = 1'd1 ;

  // register coreFix_memExe_memRespLdQ_deqReq_rl
  assign coreFix_memExe_memRespLdQ_deqReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_memRespLdQ_deqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_memRespLdQ_empty
  assign coreFix_memExe_memRespLdQ_empty$D_IN =
	     coreFix_memExe_memRespLdQ_clearReq_dummy2_1$Q_OUT &&
	     coreFix_memExe_memRespLdQ_clearReq_rl ||
	     IF_coreFix_memExe_memRespLdQ_deqReq_dummy2_2_r_ETC___d3714 &&
	     NOT_coreFix_memExe_memRespLdQ_enqReq_dummy2_2__ETC___d3736 ;
  assign coreFix_memExe_memRespLdQ_empty$EN = 1'd1 ;

  // register coreFix_memExe_memRespLdQ_enqP
  assign coreFix_memExe_memRespLdQ_enqP$D_IN =
	     NOT_coreFix_memExe_memRespLdQ_clearReq_dummy2__ETC___d3681 &&
	     v__h328934 ;
  assign coreFix_memExe_memRespLdQ_enqP$EN = 1'd1 ;

  // register coreFix_memExe_memRespLdQ_enqReq_rl
  assign coreFix_memExe_memRespLdQ_enqReq_rl$D_IN = 68'h2AAAAAAAAAAAAAAAA ;
  assign coreFix_memExe_memRespLdQ_enqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_memRespLdQ_full
  assign coreFix_memExe_memRespLdQ_full$D_IN =
	     NOT_coreFix_memExe_memRespLdQ_clearReq_dummy2__ETC___d3681 &&
	     IF_coreFix_memExe_memRespLdQ_deqReq_dummy2_2_r_ETC___d3714 &&
	     coreFix_memExe_memRespLdQ_enqReq_dummy2_2_read_ETC___d3723 ;
  assign coreFix_memExe_memRespLdQ_full$EN = 1'd1 ;

  // register coreFix_memExe_reqLdQ_data_0_rl
  assign coreFix_memExe_reqLdQ_data_0_rl$D_IN =
	     coreFix_memExe_reqLdQ_data_0_lat_0$whas ?
	       coreFix_memExe_reqLdQ_data_0_lat_0$wget :
	       coreFix_memExe_reqLdQ_data_0_rl ;
  assign coreFix_memExe_reqLdQ_data_0_rl$EN = 1'd1 ;

  // register coreFix_memExe_reqLdQ_empty_rl
  assign coreFix_memExe_reqLdQ_empty_rl$D_IN =
	     WILL_FIRE_RL_coreFix_memExe_sendLdToMem ||
	     !coreFix_memExe_reqLdQ_empty_lat_0$whas &&
	     coreFix_memExe_reqLdQ_empty_rl ;
  assign coreFix_memExe_reqLdQ_empty_rl$EN = 1'd1 ;

  // register coreFix_memExe_reqLdQ_full_rl
  assign coreFix_memExe_reqLdQ_full_rl$D_IN =
	     !WILL_FIRE_RL_coreFix_memExe_sendLdToMem &&
	     (coreFix_memExe_reqLdQ_full_lat_0$whas ||
	      coreFix_memExe_reqLdQ_full_rl) ;
  assign coreFix_memExe_reqLdQ_full_rl$EN = 1'd1 ;

  // register coreFix_memExe_reqLrScAmoQ_data_0_rl
  assign coreFix_memExe_reqLrScAmoQ_data_0_rl$D_IN =
	     coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
	       coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget :
	       coreFix_memExe_reqLrScAmoQ_data_0_rl ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_rl$EN = 1'd1 ;

  // register coreFix_memExe_reqLrScAmoQ_empty_rl
  assign coreFix_memExe_reqLrScAmoQ_empty_rl$D_IN =
	     CAN_FIRE_RL_coreFix_memExe_sendLrScAmoToMem ||
	     !coreFix_memExe_reqLrScAmoQ_enqP_lat_0$whas &&
	     coreFix_memExe_reqLrScAmoQ_empty_rl ;
  assign coreFix_memExe_reqLrScAmoQ_empty_rl$EN = 1'd1 ;

  // register coreFix_memExe_reqLrScAmoQ_full_rl
  assign coreFix_memExe_reqLrScAmoQ_full_rl$D_IN =
	     !CAN_FIRE_RL_coreFix_memExe_sendLrScAmoToMem &&
	     (coreFix_memExe_reqLrScAmoQ_enqP_lat_0$whas ||
	      coreFix_memExe_reqLrScAmoQ_full_rl) ;
  assign coreFix_memExe_reqLrScAmoQ_full_rl$EN = 1'd1 ;

  // register coreFix_memExe_reqStQ_data_0_rl
  assign coreFix_memExe_reqStQ_data_0_rl$D_IN =
	     CAN_FIRE_RL_coreFix_memExe_doIssueSB ?
	       coreFix_memExe_reqStQ_data_0_lat_0$wget :
	       coreFix_memExe_reqStQ_data_0_rl ;
  assign coreFix_memExe_reqStQ_data_0_rl$EN = 1'd1 ;

  // register coreFix_memExe_reqStQ_empty_rl
  assign coreFix_memExe_reqStQ_empty_rl$D_IN =
	     WILL_FIRE_RL_coreFix_memExe_sendStToMem ||
	     !CAN_FIRE_RL_coreFix_memExe_doIssueSB &&
	     coreFix_memExe_reqStQ_empty_rl ;
  assign coreFix_memExe_reqStQ_empty_rl$EN = 1'd1 ;

  // register coreFix_memExe_reqStQ_full_rl
  assign coreFix_memExe_reqStQ_full_rl$D_IN =
	     !WILL_FIRE_RL_coreFix_memExe_sendStToMem &&
	     (CAN_FIRE_RL_coreFix_memExe_doIssueSB ||
	      coreFix_memExe_reqStQ_full_rl) ;
  assign coreFix_memExe_reqStQ_full_rl$EN = 1'd1 ;

  // register coreFix_memExe_respLrScAmoQ_clearReq_rl
  assign coreFix_memExe_respLrScAmoQ_clearReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_respLrScAmoQ_clearReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_respLrScAmoQ_data_0
  assign coreFix_memExe_respLrScAmoQ_data_0$D_IN =
	     coreFix_memExe_respLrScAmoQ_enqReq_lat_0$whas ?
	       coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wget[63:0] :
	       coreFix_memExe_respLrScAmoQ_enqReq_rl[63:0] ;
  assign coreFix_memExe_respLrScAmoQ_data_0$EN =
	     NOT_coreFix_memExe_respLrScAmoQ_clearReq_dummy_ETC___d3605 &&
	     coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_respLrScAmoQ_enqReq_lat_1_wh_ETC___d3616 ;

  // register coreFix_memExe_respLrScAmoQ_deqReq_rl
  assign coreFix_memExe_respLrScAmoQ_deqReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_respLrScAmoQ_deqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_respLrScAmoQ_empty
  assign coreFix_memExe_respLrScAmoQ_empty$D_IN =
	     coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1$Q_OUT &&
	     coreFix_memExe_respLrScAmoQ_clearReq_rl ||
	     NOT_coreFix_memExe_respLrScAmoQ_enqReq_dummy2__ETC___d3647 ;
  assign coreFix_memExe_respLrScAmoQ_empty$EN = 1'd1 ;

  // register coreFix_memExe_respLrScAmoQ_enqReq_rl
  assign coreFix_memExe_respLrScAmoQ_enqReq_rl$D_IN = 65'h0AAAAAAAAAAAAAAAA ;
  assign coreFix_memExe_respLrScAmoQ_enqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_respLrScAmoQ_full
  assign coreFix_memExe_respLrScAmoQ_full$D_IN =
	     NOT_coreFix_memExe_respLrScAmoQ_clearReq_dummy_ETC___d3605 &&
	     coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2_re_ETC___d3632 ;
  assign coreFix_memExe_respLrScAmoQ_full$EN = 1'd1 ;

  // register coreFix_memExe_waitLrScAmoMMIOResp
  always@(MUX_coreFix_memExe_waitLrScAmoMMIOResp$write_1__SEL_1 or
	  WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue or
	  WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue or
	  WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue or
	  WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_memExe_waitLrScAmoMMIOResp$write_1__SEL_1:
	  coreFix_memExe_waitLrScAmoMMIOResp$D_IN = 3'd0;
      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue:
	  coreFix_memExe_waitLrScAmoMMIOResp$D_IN = 3'd4;
      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue:
	  coreFix_memExe_waitLrScAmoMMIOResp$D_IN = 3'd2;
      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue:
	  coreFix_memExe_waitLrScAmoMMIOResp$D_IN = 3'd6;
      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue:
	  coreFix_memExe_waitLrScAmoMMIOResp$D_IN = 3'd7;
      default: coreFix_memExe_waitLrScAmoMMIOResp$D_IN =
		   3'b010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_waitLrScAmoMMIOResp$EN =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue ;

  // register csrInstOrInterruptInflight_rl
  assign csrInstOrInterruptInflight_rl$D_IN =
	     csrInstOrInterruptInflight_lat_1$whas ?
	       1'd1 :
	       (MUX_csrInstOrInterruptInflight_dummy_1_0$wset_1__VAL_1 ?
		  1'd0 :
		  csrInstOrInterruptInflight_rl) ;
  assign csrInstOrInterruptInflight_rl$EN = 1'd1 ;

  // register csrf_external_int_en_vec_0
  assign csrf_external_int_en_vec_0$D_IN = 1'b0 ;
  assign csrf_external_int_en_vec_0$EN = 1'b0 ;

  // register csrf_external_int_en_vec_1
  assign csrf_external_int_en_vec_1$D_IN =
	     MUX_csrf_external_int_en_vec_1$write_1__SEL_1 ?
	       MUX_csrf_stval_csr$write_1__VAL_1[9] :
	       f_csr_reqs$D_OUT[9] ;
  assign csrf_external_int_en_vec_1$EN =
	     MUX_csrf_external_int_en_vec_1$write_1__SEL_1 ||
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     (f_csr_reqs$D_OUT[75:64] == 12'd260 ||
	      f_csr_reqs$D_OUT[75:64] == 12'd772) ;

  // register csrf_external_int_en_vec_3
  assign csrf_external_int_en_vec_3$D_IN =
	     MUX_csrf_external_int_en_vec_3$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[11] :
	       MUX_csrf_stval_csr$write_1__VAL_1[11] ;
  assign csrf_external_int_en_vec_3$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd772 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd22 ;

  // register csrf_external_int_pend_vec_0
  assign csrf_external_int_pend_vec_0$D_IN = 1'b0 ;
  assign csrf_external_int_pend_vec_0$EN = 1'b0 ;

  // register csrf_external_int_pend_vec_1
  always@(MUX_csrf_external_int_pend_vec_1$write_1__SEL_1 or
	  MUX_csrf_stval_csr$write_1__VAL_1 or
	  MUX_csrf_external_int_pend_vec_1$write_1__SEL_2 or
	  f_csr_reqs$D_OUT or EN_setSEIP or setSEIP_v)
  case (1'b1)
    MUX_csrf_external_int_pend_vec_1$write_1__SEL_1:
	csrf_external_int_pend_vec_1$D_IN =
	    MUX_csrf_stval_csr$write_1__VAL_1[9];
    MUX_csrf_external_int_pend_vec_1$write_1__SEL_2:
	csrf_external_int_pend_vec_1$D_IN = f_csr_reqs$D_OUT[9];
    EN_setSEIP: csrf_external_int_pend_vec_1$D_IN = setSEIP_v;
    default: csrf_external_int_pend_vec_1$D_IN =
		 1'b0 /* unspecified value */ ;
  endcase
  assign csrf_external_int_pend_vec_1$EN =
	     MUX_csrf_external_int_pend_vec_1$write_1__SEL_1 ||
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     (f_csr_reqs$D_OUT[75:64] == 12'd324 ||
	      f_csr_reqs$D_OUT[75:64] == 12'd836) ||
	     EN_setSEIP ;

  // register csrf_external_int_pend_vec_3
  assign csrf_external_int_pend_vec_3$D_IN = setMEIP_v ;
  assign csrf_external_int_pend_vec_3$EN = EN_setMEIP ;

  // register csrf_fflags_reg
  always@(MUX_csrf_fflags_reg$write_1__SEL_1 or
	  MUX_csrf_fflags_reg$write_1__VAL_1 or
	  MUX_csrf_fflags_reg$write_1__SEL_2 or
	  MUX_csrf_stval_csr$write_1__VAL_1 or
	  MUX_csrf_fflags_reg$write_1__SEL_3 or f_csr_reqs$D_OUT)
  case (1'b1)
    MUX_csrf_fflags_reg$write_1__SEL_1:
	csrf_fflags_reg$D_IN = MUX_csrf_fflags_reg$write_1__VAL_1;
    MUX_csrf_fflags_reg$write_1__SEL_2:
	csrf_fflags_reg$D_IN = MUX_csrf_stval_csr$write_1__VAL_1[4:0];
    MUX_csrf_fflags_reg$write_1__SEL_3:
	csrf_fflags_reg$D_IN = f_csr_reqs$D_OUT[4:0];
    default: csrf_fflags_reg$D_IN = 5'b01010 /* unspecified value */ ;
  endcase
  assign csrf_fflags_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     (IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd0 ||
	      IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd2) ||
	     WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	     NOT_IF_NOT_rob_deqPort_0_canDeq__5016_5017_OR__ETC___d15229 ||
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     (f_csr_reqs$D_OUT[75:64] == 12'd1 ||
	      f_csr_reqs$D_OUT[75:64] == 12'd3) ;

  // register csrf_frm_reg
  assign csrf_frm_reg$D_IN =
	     MUX_csrf_frm_reg$write_1__SEL_1 ?
	       MUX_csrf_frm_reg$write_1__VAL_1 :
	       MUX_csrf_frm_reg$write_1__VAL_2 ;
  assign csrf_frm_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     (IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd1 ||
	      IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd2) ||
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     (f_csr_reqs$D_OUT[75:64] == 12'd2 ||
	      f_csr_reqs$D_OUT[75:64] == 12'd3) ;

  // register csrf_fs_reg
  always@(MUX_csrf_fflags_reg$write_1__SEL_1 or
	  MUX_csrf_fs_reg$write_1__SEL_2 or
	  MUX_csrf_fs_reg$write_1__VAL_2 or
	  MUX_csrf_fs_reg$write_1__SEL_3 or MUX_csrf_fs_reg$write_1__VAL_3)
  case (1'b1)
    MUX_csrf_fflags_reg$write_1__SEL_1: csrf_fs_reg$D_IN = 2'b11;
    MUX_csrf_fs_reg$write_1__SEL_2:
	csrf_fs_reg$D_IN = MUX_csrf_fs_reg$write_1__VAL_2;
    MUX_csrf_fs_reg$write_1__SEL_3:
	csrf_fs_reg$D_IN = MUX_csrf_fs_reg$write_1__VAL_3;
    default: csrf_fs_reg$D_IN = 2'b10 /* unspecified value */ ;
  endcase
  assign csrf_fs_reg$EN =
	     MUX_csrf_fs_reg$write_1__SEL_2 ||
	     WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	     NOT_IF_NOT_rob_deqPort_0_canDeq__5016_5017_OR__ETC___d15229 ||
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     (f_csr_reqs$D_OUT[75:64] == 12'd1 ||
	      f_csr_reqs$D_OUT[75:64] == 12'd2 ||
	      f_csr_reqs$D_OUT[75:64] == 12'd3 ||
	      f_csr_reqs$D_OUT[75:64] == 12'd256 ||
	      f_csr_reqs$D_OUT[75:64] == 12'd768) ;

  // register csrf_ie_vec_0
  assign csrf_ie_vec_0$D_IN =
	     MUX_csrf_ie_vec_0$write_1__SEL_1 ?
	       MUX_csrf_stval_csr$write_1__VAL_1[0] :
	       f_csr_reqs$D_OUT[0] ;
  assign csrf_ie_vec_0$EN =
	     MUX_csrf_ie_vec_0$write_1__SEL_1 ||
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     (f_csr_reqs$D_OUT[75:64] == 12'd256 ||
	      f_csr_reqs$D_OUT[75:64] == 12'd768) ;

  // register csrf_ie_vec_1
  always@(MUX_csrf_ie_vec_1$write_1__SEL_1 or
	  MUX_csrf_ie_vec_1$write_1__VAL_1 or
	  MUX_csrf_ie_vec_1$write_1__SEL_2 or
	  MUX_csrf_ie_vec_0$write_1__SEL_2 or f_csr_reqs$D_OUT)
  case (1'b1)
    MUX_csrf_ie_vec_1$write_1__SEL_1:
	csrf_ie_vec_1$D_IN = MUX_csrf_ie_vec_1$write_1__VAL_1;
    MUX_csrf_ie_vec_1$write_1__SEL_2: csrf_ie_vec_1$D_IN = 1'd0;
    MUX_csrf_ie_vec_0$write_1__SEL_2:
	csrf_ie_vec_1$D_IN = f_csr_reqs$D_OUT[1];
    default: csrf_ie_vec_1$D_IN = 1'b0 /* unspecified value */ ;
  endcase
  assign csrf_ie_vec_1$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo32 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14634 &&
	     csrf_prv_reg_read__2846_ULE_1_4635_AND_IF_comm_ETC___d14657 ||
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     (f_csr_reqs$D_OUT[75:64] == 12'd256 ||
	      f_csr_reqs$D_OUT[75:64] == 12'd768) ;

  // register csrf_ie_vec_3
  always@(MUX_csrf_ie_vec_3$write_1__SEL_1 or
	  MUX_csrf_ie_vec_3$write_1__VAL_1 or
	  MUX_csrf_ie_vec_3$write_1__SEL_2 or
	  MUX_csrf_ie_vec_3$write_1__SEL_3 or f_csr_reqs$D_OUT)
  case (1'b1)
    MUX_csrf_ie_vec_3$write_1__SEL_1:
	csrf_ie_vec_3$D_IN = MUX_csrf_ie_vec_3$write_1__VAL_1;
    MUX_csrf_ie_vec_3$write_1__SEL_2: csrf_ie_vec_3$D_IN = 1'd0;
    MUX_csrf_ie_vec_3$write_1__SEL_3:
	csrf_ie_vec_3$D_IN = f_csr_reqs$D_OUT[3];
    default: csrf_ie_vec_3$D_IN = 1'b0 /* unspecified value */ ;
  endcase
  assign csrf_ie_vec_3$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo26 ||
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd768 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14634 &&
	     NOT_csrf_prv_reg_read__2846_ULE_1_4635_4677_OR_ETC___d14681 ;

  // register csrf_mcause_code_reg
  always@(MUX_csrf_mcause_code_reg$write_1__SEL_1 or
	  MUX_csrf_stval_csr$write_1__VAL_1 or
	  MUX_csrf_ie_vec_3$write_1__SEL_2 or
	  cause_code__h703117 or
	  MUX_csrf_mcause_code_reg$write_1__SEL_3 or f_csr_reqs$D_OUT)
  case (1'b1)
    MUX_csrf_mcause_code_reg$write_1__SEL_1:
	csrf_mcause_code_reg$D_IN = MUX_csrf_stval_csr$write_1__VAL_1[3:0];
    MUX_csrf_ie_vec_3$write_1__SEL_2:
	csrf_mcause_code_reg$D_IN = cause_code__h703117;
    MUX_csrf_mcause_code_reg$write_1__SEL_3:
	csrf_mcause_code_reg$D_IN = f_csr_reqs$D_OUT[3:0];
    default: csrf_mcause_code_reg$D_IN = 4'b1010 /* unspecified value */ ;
  endcase
  assign csrf_mcause_code_reg$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd834 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14634 &&
	     NOT_csrf_prv_reg_read__2846_ULE_1_4635_4677_OR_ETC___d14681 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd27 ;

  // register csrf_mcause_interrupt_reg
  always@(MUX_csrf_mcause_code_reg$write_1__SEL_1 or
	  MUX_csrf_stval_csr$write_1__VAL_1 or
	  MUX_csrf_ie_vec_3$write_1__SEL_2 or
	  commitStage_commitTrap or
	  MUX_csrf_mcause_code_reg$write_1__SEL_3 or f_csr_reqs$D_OUT)
  case (1'b1)
    MUX_csrf_mcause_code_reg$write_1__SEL_1:
	csrf_mcause_interrupt_reg$D_IN =
	    MUX_csrf_stval_csr$write_1__VAL_1[63];
    MUX_csrf_ie_vec_3$write_1__SEL_2:
	csrf_mcause_interrupt_reg$D_IN = commitStage_commitTrap[36];
    MUX_csrf_mcause_code_reg$write_1__SEL_3:
	csrf_mcause_interrupt_reg$D_IN = f_csr_reqs$D_OUT[63];
    default: csrf_mcause_interrupt_reg$D_IN = 1'b0 /* unspecified value */ ;
  endcase
  assign csrf_mcause_interrupt_reg$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd834 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14634 &&
	     NOT_csrf_prv_reg_read__2846_ULE_1_4635_4677_OR_ETC___d14681 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd27 ;

  // register csrf_mcounteren_cy_reg
  assign csrf_mcounteren_cy_reg$D_IN =
	     MUX_csrf_mcounteren_cy_reg$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[0] :
	       MUX_csrf_stval_csr$write_1__VAL_1[0] ;
  assign csrf_mcounteren_cy_reg$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd774 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd24 ;

  // register csrf_mcounteren_ir_reg
  assign csrf_mcounteren_ir_reg$D_IN =
	     MUX_csrf_mcounteren_cy_reg$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[2] :
	       MUX_csrf_stval_csr$write_1__VAL_1[2] ;
  assign csrf_mcounteren_ir_reg$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd774 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd24 ;

  // register csrf_mcounteren_tm_reg
  assign csrf_mcounteren_tm_reg$D_IN =
	     MUX_csrf_mcounteren_cy_reg$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[1] :
	       MUX_csrf_stval_csr$write_1__VAL_1[1] ;
  assign csrf_mcounteren_tm_reg$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd774 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd24 ;

  // register csrf_mcycle_ehr_data_rl
  assign csrf_mcycle_ehr_data_rl$D_IN = upd__h5036 ;
  assign csrf_mcycle_ehr_data_rl$EN = 1'd1 ;

  // register csrf_medeleg_13_11_reg
  assign csrf_medeleg_13_11_reg$D_IN =
	     MUX_csrf_medeleg_13_11_reg$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[13:11] :
	       MUX_csrf_stval_csr$write_1__VAL_1[13:11] ;
  assign csrf_medeleg_13_11_reg$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd770 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd20 ;

  // register csrf_medeleg_15_reg
  assign csrf_medeleg_15_reg$D_IN =
	     MUX_csrf_medeleg_13_11_reg$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[15] :
	       MUX_csrf_stval_csr$write_1__VAL_1[15] ;
  assign csrf_medeleg_15_reg$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd770 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd20 ;

  // register csrf_medeleg_9_0_reg
  assign csrf_medeleg_9_0_reg$D_IN =
	     MUX_csrf_medeleg_13_11_reg$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[9:0] :
	       MUX_csrf_stval_csr$write_1__VAL_1[9:0] ;
  assign csrf_medeleg_9_0_reg$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd770 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd20 ;

  // register csrf_mepc_csr
  always@(MUX_csrf_mepc_csr$write_1__SEL_1 or
	  rob$deqPort_0_deq_data or
	  MUX_csrf_ie_vec_3$write_1__SEL_2 or
	  commitStage_commitTrap or
	  MUX_csrf_mepc_csr$write_1__SEL_3 or f_csr_reqs$D_OUT)
  case (1'b1)
    MUX_csrf_mepc_csr$write_1__SEL_1:
	csrf_mepc_csr$D_IN = rob$deqPort_0_deq_data[85:22];
    MUX_csrf_ie_vec_3$write_1__SEL_2:
	csrf_mepc_csr$D_IN = commitStage_commitTrap[164:101];
    MUX_csrf_mepc_csr$write_1__SEL_3:
	csrf_mepc_csr$D_IN = f_csr_reqs$D_OUT[63:0];
    default: csrf_mepc_csr$D_IN =
		 64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
  endcase
  assign csrf_mepc_csr$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd833 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14634 &&
	     NOT_csrf_prv_reg_read__2846_ULE_1_4635_4677_OR_ETC___d14681 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd26 ;

  // register csrf_mideleg_11_reg
  assign csrf_mideleg_11_reg$D_IN =
	     MUX_csrf_mideleg_11_reg$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[11] :
	       MUX_csrf_stval_csr$write_1__VAL_1[11] ;
  assign csrf_mideleg_11_reg$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd771 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd21 ;

  // register csrf_mideleg_1_0_reg
  assign csrf_mideleg_1_0_reg$D_IN =
	     MUX_csrf_mideleg_11_reg$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[1:0] :
	       MUX_csrf_stval_csr$write_1__VAL_1[1:0] ;
  assign csrf_mideleg_1_0_reg$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd771 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd21 ;

  // register csrf_mideleg_5_3_reg
  assign csrf_mideleg_5_3_reg$D_IN =
	     MUX_csrf_mideleg_11_reg$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[5:3] :
	       MUX_csrf_stval_csr$write_1__VAL_1[5:3] ;
  assign csrf_mideleg_5_3_reg$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd771 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd21 ;

  // register csrf_mideleg_9_7_reg
  assign csrf_mideleg_9_7_reg$D_IN =
	     MUX_csrf_mideleg_11_reg$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[9:7] :
	       MUX_csrf_stval_csr$write_1__VAL_1[9:7] ;
  assign csrf_mideleg_9_7_reg$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd771 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd21 ;

  // register csrf_minstret_ehr_data_rl
  assign csrf_minstret_ehr_data_rl$D_IN =
	     csrf_minstret_ehr_data_lat_1$whas ?
	       upd__h3719 :
	       IF_csrf_minstret_ehr_data_lat_0_whas_THEN_csrf_ETC___d8 ;
  assign csrf_minstret_ehr_data_rl$EN = 1'd1 ;

  // register csrf_mpp_reg
  always@(MUX_csrf_mpp_reg$write_1__SEL_1 or
	  MUX_csrf_mpp_reg$write_1__VAL_1 or
	  MUX_csrf_ie_vec_3$write_1__SEL_2 or
	  csrf_prv_reg or
	  MUX_csrf_ie_vec_3$write_1__SEL_3 or f_csr_reqs$D_OUT)
  case (1'b1)
    MUX_csrf_mpp_reg$write_1__SEL_1:
	csrf_mpp_reg$D_IN = MUX_csrf_mpp_reg$write_1__VAL_1;
    MUX_csrf_ie_vec_3$write_1__SEL_2: csrf_mpp_reg$D_IN = csrf_prv_reg;
    MUX_csrf_ie_vec_3$write_1__SEL_3:
	csrf_mpp_reg$D_IN = f_csr_reqs$D_OUT[12:11];
    default: csrf_mpp_reg$D_IN = 2'b10 /* unspecified value */ ;
  endcase
  assign csrf_mpp_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo26 ||
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd768 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14634 &&
	     NOT_csrf_prv_reg_read__2846_ULE_1_4635_4677_OR_ETC___d14681 ;

  // register csrf_mprv_reg
  assign csrf_mprv_reg$D_IN =
	     MUX_csrf_ie_vec_3$write_1__SEL_3 ?
	       f_csr_reqs$D_OUT[17] :
	       MUX_csrf_stval_csr$write_1__VAL_1[17] ;
  assign csrf_mprv_reg$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd768 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd18 ;

  // register csrf_mscratch_csr
  assign csrf_mscratch_csr$D_IN =
	     MUX_csrf_mscratch_csr$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[63:0] :
	       rob$deqPort_0_deq_data[85:22] ;
  assign csrf_mscratch_csr$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd832 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd25 ;

  // register csrf_mtval_csr
  always@(MUX_csrf_mtval_csr$write_1__SEL_1 or
	  rob$deqPort_0_deq_data or
	  MUX_csrf_ie_vec_3$write_1__SEL_2 or
	  MUX_csrf_mtval_csr$write_1__VAL_2 or
	  MUX_csrf_mtval_csr$write_1__SEL_3 or f_csr_reqs$D_OUT)
  case (1'b1)
    MUX_csrf_mtval_csr$write_1__SEL_1:
	csrf_mtval_csr$D_IN = rob$deqPort_0_deq_data[85:22];
    MUX_csrf_ie_vec_3$write_1__SEL_2:
	csrf_mtval_csr$D_IN = MUX_csrf_mtval_csr$write_1__VAL_2;
    MUX_csrf_mtval_csr$write_1__SEL_3:
	csrf_mtval_csr$D_IN = f_csr_reqs$D_OUT[63:0];
    default: csrf_mtval_csr$D_IN =
		 64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
  endcase
  assign csrf_mtval_csr$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd835 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14634 &&
	     NOT_csrf_prv_reg_read__2846_ULE_1_4635_4677_OR_ETC___d14681 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd28 ;

  // register csrf_mtvec_base_hi_reg
  assign csrf_mtvec_base_hi_reg$D_IN =
	     MUX_csrf_mtvec_base_hi_reg$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[63:2] :
	       MUX_csrf_stval_csr$write_1__VAL_1[63:2] ;
  assign csrf_mtvec_base_hi_reg$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd773 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd23 ;

  // register csrf_mtvec_mode_low_reg
  assign csrf_mtvec_mode_low_reg$D_IN =
	     MUX_csrf_mtvec_base_hi_reg$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[0] :
	       MUX_csrf_stval_csr$write_1__VAL_1[0] ;
  assign csrf_mtvec_mode_low_reg$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd773 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd23 ;

  // register csrf_mxr_reg
  assign csrf_mxr_reg$D_IN =
	     MUX_csrf_ie_vec_0$write_1__SEL_1 ?
	       MUX_csrf_stval_csr$write_1__VAL_1[19] :
	       f_csr_reqs$D_OUT[19] ;
  assign csrf_mxr_reg$EN =
	     MUX_csrf_ie_vec_0$write_1__SEL_1 ||
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     (f_csr_reqs$D_OUT[75:64] == 12'd256 ||
	      f_csr_reqs$D_OUT[75:64] == 12'd768) ;

  // register csrf_ppn_reg
  assign csrf_ppn_reg$D_IN =
	     MUX_csrf_ppn_reg$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[43:0] :
	       MUX_csrf_stval_csr$write_1__VAL_1[43:0] ;
  assign csrf_ppn_reg$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd384 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd17 ;

  // register csrf_prev_ie_vec_0
  assign csrf_prev_ie_vec_0$D_IN =
	     MUX_csrf_ie_vec_0$write_1__SEL_1 ?
	       MUX_csrf_stval_csr$write_1__VAL_1[4] :
	       f_csr_reqs$D_OUT[4] ;
  assign csrf_prev_ie_vec_0$EN =
	     MUX_csrf_ie_vec_0$write_1__SEL_1 ||
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     (f_csr_reqs$D_OUT[75:64] == 12'd256 ||
	      f_csr_reqs$D_OUT[75:64] == 12'd768) ;

  // register csrf_prev_ie_vec_1
  always@(MUX_csrf_prev_ie_vec_1$write_1__SEL_1 or
	  MUX_csrf_prev_ie_vec_1$write_1__VAL_1 or
	  MUX_csrf_ie_vec_1$write_1__SEL_2 or
	  csrf_ie_vec_1 or
	  MUX_csrf_ie_vec_0$write_1__SEL_2 or f_csr_reqs$D_OUT)
  case (1'b1)
    MUX_csrf_prev_ie_vec_1$write_1__SEL_1:
	csrf_prev_ie_vec_1$D_IN = MUX_csrf_prev_ie_vec_1$write_1__VAL_1;
    MUX_csrf_ie_vec_1$write_1__SEL_2: csrf_prev_ie_vec_1$D_IN = csrf_ie_vec_1;
    MUX_csrf_ie_vec_0$write_1__SEL_2:
	csrf_prev_ie_vec_1$D_IN = f_csr_reqs$D_OUT[5];
    default: csrf_prev_ie_vec_1$D_IN = 1'b0 /* unspecified value */ ;
  endcase
  assign csrf_prev_ie_vec_1$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo32 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14634 &&
	     csrf_prv_reg_read__2846_ULE_1_4635_AND_IF_comm_ETC___d14657 ||
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     (f_csr_reqs$D_OUT[75:64] == 12'd256 ||
	      f_csr_reqs$D_OUT[75:64] == 12'd768) ;

  // register csrf_prev_ie_vec_3
  always@(MUX_csrf_prev_ie_vec_3$write_1__SEL_1 or
	  MUX_csrf_prev_ie_vec_3$write_1__VAL_1 or
	  MUX_csrf_ie_vec_3$write_1__SEL_2 or
	  csrf_ie_vec_3 or
	  MUX_csrf_ie_vec_3$write_1__SEL_3 or f_csr_reqs$D_OUT)
  case (1'b1)
    MUX_csrf_prev_ie_vec_3$write_1__SEL_1:
	csrf_prev_ie_vec_3$D_IN = MUX_csrf_prev_ie_vec_3$write_1__VAL_1;
    MUX_csrf_ie_vec_3$write_1__SEL_2: csrf_prev_ie_vec_3$D_IN = csrf_ie_vec_3;
    MUX_csrf_ie_vec_3$write_1__SEL_3:
	csrf_prev_ie_vec_3$D_IN = f_csr_reqs$D_OUT[7];
    default: csrf_prev_ie_vec_3$D_IN = 1'b0 /* unspecified value */ ;
  endcase
  assign csrf_prev_ie_vec_3$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo26 ||
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd768 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14634 &&
	     NOT_csrf_prv_reg_read__2846_ULE_1_4635_4677_OR_ETC___d14681 ;

  // register csrf_prv_reg
  always@(MUX_csrf_prv_reg$write_1__SEL_1 or
	  MUX_csrf_prv_reg$write_1__VAL_1 or
	  MUX_commitStage_rg_serial_num$write_1__SEL_1 or
	  MUX_csrf_prv_reg$write_1__VAL_2 or
	  MUX_csrf_prv_reg$write_1__SEL_3 or f_csr_reqs$D_OUT)
  case (1'b1)
    MUX_csrf_prv_reg$write_1__SEL_1:
	csrf_prv_reg$D_IN = MUX_csrf_prv_reg$write_1__VAL_1;
    MUX_commitStage_rg_serial_num$write_1__SEL_1:
	csrf_prv_reg$D_IN = MUX_csrf_prv_reg$write_1__VAL_2;
    MUX_csrf_prv_reg$write_1__SEL_3:
	csrf_prv_reg$D_IN = f_csr_reqs$D_OUT[1:0];
    default: csrf_prv_reg$D_IN = 2'b10 /* unspecified value */ ;
  endcase
  assign csrf_prv_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo24 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14634 ||
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd1968 ;

  // register csrf_rg_dcsr
  always@(MUX_csrf_rg_dcsr$write_1__SEL_1 or
	  rob$deqPort_0_deq_data or
	  MUX_commitStage_rg_run_state$write_1__SEL_1 or
	  MUX_csrf_rg_dcsr$write_1__VAL_2 or
	  MUX_csrf_prv_reg$write_1__SEL_3 or f_csr_reqs$D_OUT)
  case (1'b1)
    MUX_csrf_rg_dcsr$write_1__SEL_1:
	csrf_rg_dcsr$D_IN = rob$deqPort_0_deq_data[85:22];
    MUX_commitStage_rg_run_state$write_1__SEL_1:
	csrf_rg_dcsr$D_IN = MUX_csrf_rg_dcsr$write_1__VAL_2;
    MUX_csrf_prv_reg$write_1__SEL_3:
	csrf_rg_dcsr$D_IN = f_csr_reqs$D_OUT[63:0];
    default: csrf_rg_dcsr$D_IN =
		 64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
  endcase
  assign csrf_rg_dcsr$EN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     commitStage_commitTrap_4406_BIT_36_4532_AND_co_ETC___d14597 ||
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd1968 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd40 ;

  // register csrf_rg_dpc
  always@(MUX_csrf_rg_dpc$write_1__SEL_1 or
	  rob$deqPort_0_deq_data or
	  MUX_commitStage_rg_run_state$write_1__SEL_1 or
	  commitStage_commitTrap or
	  MUX_csrf_rg_dpc$write_1__SEL_3 or f_csr_reqs$D_OUT)
  case (1'b1)
    MUX_csrf_rg_dpc$write_1__SEL_1:
	csrf_rg_dpc$D_IN = rob$deqPort_0_deq_data[85:22];
    MUX_commitStage_rg_run_state$write_1__SEL_1:
	csrf_rg_dpc$D_IN = commitStage_commitTrap[164:101];
    MUX_csrf_rg_dpc$write_1__SEL_3: csrf_rg_dpc$D_IN = f_csr_reqs$D_OUT[63:0];
    default: csrf_rg_dpc$D_IN = 64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
  endcase
  assign csrf_rg_dpc$EN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     commitStage_commitTrap_4406_BIT_36_4532_AND_co_ETC___d14597 ||
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd1969 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd41 ;

  // register csrf_rg_dscratch0
  assign csrf_rg_dscratch0$D_IN =
	     MUX_csrf_rg_dscratch0$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[63:0] :
	       rob$deqPort_0_deq_data[85:22] ;
  assign csrf_rg_dscratch0$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd1970 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd42 ;

  // register csrf_rg_dscratch1
  assign csrf_rg_dscratch1$D_IN =
	     MUX_csrf_rg_dscratch1$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[63:0] :
	       rob$deqPort_0_deq_data[85:22] ;
  assign csrf_rg_dscratch1$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd1971 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd43 ;

  // register csrf_rg_tdata1_data
  assign csrf_rg_tdata1_data$D_IN =
	     MUX_csrf_rg_tdata1_data$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[58:0] :
	       MUX_csrf_stval_csr$write_1__VAL_1[58:0] ;
  assign csrf_rg_tdata1_data$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd1953 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd37 ;

  // register csrf_rg_tdata1_dmode
  assign csrf_rg_tdata1_dmode$D_IN =
	     MUX_csrf_rg_tdata1_data$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[59] :
	       MUX_csrf_stval_csr$write_1__VAL_1[59] ;
  assign csrf_rg_tdata1_dmode$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd1953 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd37 ;

  // register csrf_rg_tdata2
  assign csrf_rg_tdata2$D_IN =
	     MUX_csrf_rg_tdata2$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[63:0] :
	       rob$deqPort_0_deq_data[85:22] ;
  assign csrf_rg_tdata2$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd1954 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd38 ;

  // register csrf_rg_tdata3
  assign csrf_rg_tdata3$D_IN =
	     MUX_csrf_rg_tdata3$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[63:0] :
	       rob$deqPort_0_deq_data[85:22] ;
  assign csrf_rg_tdata3$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd1955 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd39 ;

  // register csrf_rg_tselect
  assign csrf_rg_tselect$D_IN =
	     MUX_csrf_rg_tselect$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[63:0] :
	       rob$deqPort_0_deq_data[85:22] ;
  assign csrf_rg_tselect$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd1952 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd36 ;

  // register csrf_scause_code_reg
  always@(MUX_csrf_scause_code_reg$write_1__SEL_1 or
	  MUX_csrf_stval_csr$write_1__VAL_1 or
	  MUX_csrf_ie_vec_1$write_1__SEL_2 or
	  cause_code__h703117 or
	  MUX_csrf_scause_code_reg$write_1__SEL_3 or f_csr_reqs$D_OUT)
  case (1'b1)
    MUX_csrf_scause_code_reg$write_1__SEL_1:
	csrf_scause_code_reg$D_IN = MUX_csrf_stval_csr$write_1__VAL_1[3:0];
    MUX_csrf_ie_vec_1$write_1__SEL_2:
	csrf_scause_code_reg$D_IN = cause_code__h703117;
    MUX_csrf_scause_code_reg$write_1__SEL_3:
	csrf_scause_code_reg$D_IN = f_csr_reqs$D_OUT[3:0];
    default: csrf_scause_code_reg$D_IN = 4'b1010 /* unspecified value */ ;
  endcase
  assign csrf_scause_code_reg$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd322 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14634 &&
	     csrf_prv_reg_read__2846_ULE_1_4635_AND_IF_comm_ETC___d14657 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd14 ;

  // register csrf_scause_interrupt_reg
  always@(MUX_csrf_scause_code_reg$write_1__SEL_1 or
	  MUX_csrf_stval_csr$write_1__VAL_1 or
	  MUX_csrf_ie_vec_1$write_1__SEL_2 or
	  commitStage_commitTrap or
	  MUX_csrf_scause_code_reg$write_1__SEL_3 or f_csr_reqs$D_OUT)
  case (1'b1)
    MUX_csrf_scause_code_reg$write_1__SEL_1:
	csrf_scause_interrupt_reg$D_IN =
	    MUX_csrf_stval_csr$write_1__VAL_1[63];
    MUX_csrf_ie_vec_1$write_1__SEL_2:
	csrf_scause_interrupt_reg$D_IN = commitStage_commitTrap[36];
    MUX_csrf_scause_code_reg$write_1__SEL_3:
	csrf_scause_interrupt_reg$D_IN = f_csr_reqs$D_OUT[63];
    default: csrf_scause_interrupt_reg$D_IN = 1'b0 /* unspecified value */ ;
  endcase
  assign csrf_scause_interrupt_reg$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd322 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14634 &&
	     csrf_prv_reg_read__2846_ULE_1_4635_AND_IF_comm_ETC___d14657 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd14 ;

  // register csrf_scounteren_cy_reg
  assign csrf_scounteren_cy_reg$D_IN =
	     MUX_csrf_scounteren_cy_reg$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[0] :
	       MUX_csrf_stval_csr$write_1__VAL_1[0] ;
  assign csrf_scounteren_cy_reg$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd262 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd11 ;

  // register csrf_scounteren_ir_reg
  assign csrf_scounteren_ir_reg$D_IN =
	     MUX_csrf_scounteren_cy_reg$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[2] :
	       MUX_csrf_stval_csr$write_1__VAL_1[2] ;
  assign csrf_scounteren_ir_reg$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd262 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd11 ;

  // register csrf_scounteren_tm_reg
  assign csrf_scounteren_tm_reg$D_IN =
	     MUX_csrf_scounteren_cy_reg$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[1] :
	       MUX_csrf_stval_csr$write_1__VAL_1[1] ;
  assign csrf_scounteren_tm_reg$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd262 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd11 ;

  // register csrf_sepc_csr
  always@(MUX_csrf_sepc_csr$write_1__SEL_1 or
	  rob$deqPort_0_deq_data or
	  MUX_csrf_ie_vec_1$write_1__SEL_2 or
	  commitStage_commitTrap or
	  MUX_csrf_sepc_csr$write_1__SEL_3 or f_csr_reqs$D_OUT)
  case (1'b1)
    MUX_csrf_sepc_csr$write_1__SEL_1:
	csrf_sepc_csr$D_IN = rob$deqPort_0_deq_data[85:22];
    MUX_csrf_ie_vec_1$write_1__SEL_2:
	csrf_sepc_csr$D_IN = commitStage_commitTrap[164:101];
    MUX_csrf_sepc_csr$write_1__SEL_3:
	csrf_sepc_csr$D_IN = f_csr_reqs$D_OUT[63:0];
    default: csrf_sepc_csr$D_IN =
		 64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
  endcase
  assign csrf_sepc_csr$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd321 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14634 &&
	     csrf_prv_reg_read__2846_ULE_1_4635_AND_IF_comm_ETC___d14657 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd13 ;

  // register csrf_software_int_en_vec_0
  assign csrf_software_int_en_vec_0$D_IN = 1'b0 ;
  assign csrf_software_int_en_vec_0$EN = 1'b0 ;

  // register csrf_software_int_en_vec_1
  assign csrf_software_int_en_vec_1$D_IN =
	     MUX_csrf_external_int_en_vec_1$write_1__SEL_1 ?
	       MUX_csrf_stval_csr$write_1__VAL_1[1] :
	       f_csr_reqs$D_OUT[1] ;
  assign csrf_software_int_en_vec_1$EN =
	     MUX_csrf_external_int_en_vec_1$write_1__SEL_1 ||
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     (f_csr_reqs$D_OUT[75:64] == 12'd260 ||
	      f_csr_reqs$D_OUT[75:64] == 12'd772) ;

  // register csrf_software_int_en_vec_3
  assign csrf_software_int_en_vec_3$D_IN =
	     MUX_csrf_external_int_en_vec_3$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[3] :
	       MUX_csrf_stval_csr$write_1__VAL_1[3] ;
  assign csrf_software_int_en_vec_3$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd772 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd22 ;

  // register csrf_software_int_pend_vec_0
  assign csrf_software_int_pend_vec_0$D_IN = 1'b0 ;
  assign csrf_software_int_pend_vec_0$EN = 1'b0 ;

  // register csrf_software_int_pend_vec_1
  assign csrf_software_int_pend_vec_1$D_IN =
	     MUX_csrf_external_int_pend_vec_1$write_1__SEL_1 ?
	       MUX_csrf_stval_csr$write_1__VAL_1[1] :
	       f_csr_reqs$D_OUT[1] ;
  assign csrf_software_int_pend_vec_1$EN =
	     MUX_csrf_external_int_pend_vec_1$write_1__SEL_1 ||
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     (f_csr_reqs$D_OUT[75:64] == 12'd324 ||
	      f_csr_reqs$D_OUT[75:64] == 12'd836) ;

  // register csrf_software_int_pend_vec_3
  assign csrf_software_int_pend_vec_3$D_IN =
	     (mmio_pRqQ_data_0[37:36] == 2'd2) ?
	       mmio_pRqQ_data_0[0] :
	       amoExec___d934[0] ;
  assign csrf_software_int_pend_vec_3$EN =
	     WILL_FIRE_RL_mmio_handlePRq && !mmio_pRqQ_data_0[38] &&
	     mmio_pRqQ_data_0[37:36] != 2'd0 &&
	     mmio_pRqQ_data_0[37:36] != 2'd1 ;

  // register csrf_spp_reg
  always@(MUX_csrf_spp_reg$write_1__SEL_1 or
	  MUX_csrf_spp_reg$write_1__VAL_1 or
	  MUX_csrf_ie_vec_1$write_1__SEL_2 or
	  csrf_prv_reg or
	  MUX_csrf_ie_vec_0$write_1__SEL_2 or f_csr_reqs$D_OUT)
  case (1'b1)
    MUX_csrf_spp_reg$write_1__SEL_1:
	csrf_spp_reg$D_IN = MUX_csrf_spp_reg$write_1__VAL_1;
    MUX_csrf_ie_vec_1$write_1__SEL_2: csrf_spp_reg$D_IN = csrf_prv_reg[0];
    MUX_csrf_ie_vec_0$write_1__SEL_2: csrf_spp_reg$D_IN = f_csr_reqs$D_OUT[8];
    default: csrf_spp_reg$D_IN = 1'b0 /* unspecified value */ ;
  endcase
  assign csrf_spp_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo32 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14634 &&
	     csrf_prv_reg_read__2846_ULE_1_4635_AND_IF_comm_ETC___d14657 ||
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     (f_csr_reqs$D_OUT[75:64] == 12'd256 ||
	      f_csr_reqs$D_OUT[75:64] == 12'd768) ;

  // register csrf_sscratch_csr
  assign csrf_sscratch_csr$D_IN =
	     MUX_csrf_sscratch_csr$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[63:0] :
	       rob$deqPort_0_deq_data[85:22] ;
  assign csrf_sscratch_csr$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd320 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd12 ;

  // register csrf_stats_module_doStats
  assign csrf_stats_module_doStats$D_IN = recvDoStats_x ;
  assign csrf_stats_module_doStats$EN = EN_recvDoStats ;

  // register csrf_stval_csr
  always@(MUX_csrf_stval_csr$write_1__SEL_1 or
	  rob$deqPort_0_deq_data or
	  MUX_csrf_ie_vec_1$write_1__SEL_2 or
	  MUX_csrf_mtval_csr$write_1__VAL_2 or
	  MUX_csrf_stval_csr$write_1__SEL_3 or f_csr_reqs$D_OUT)
  case (1'b1)
    MUX_csrf_stval_csr$write_1__SEL_1:
	csrf_stval_csr$D_IN = rob$deqPort_0_deq_data[85:22];
    MUX_csrf_ie_vec_1$write_1__SEL_2:
	csrf_stval_csr$D_IN = MUX_csrf_mtval_csr$write_1__VAL_2;
    MUX_csrf_stval_csr$write_1__SEL_3:
	csrf_stval_csr$D_IN = f_csr_reqs$D_OUT[63:0];
    default: csrf_stval_csr$D_IN =
		 64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
  endcase
  assign csrf_stval_csr$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd323 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14634 &&
	     csrf_prv_reg_read__2846_ULE_1_4635_AND_IF_comm_ETC___d14657 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd15 ;

  // register csrf_stvec_base_hi_reg
  assign csrf_stvec_base_hi_reg$D_IN =
	     MUX_csrf_stvec_base_hi_reg$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[63:2] :
	       MUX_csrf_stval_csr$write_1__VAL_1[63:2] ;
  assign csrf_stvec_base_hi_reg$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd261 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd10 ;

  // register csrf_stvec_mode_low_reg
  assign csrf_stvec_mode_low_reg$D_IN =
	     MUX_csrf_stvec_base_hi_reg$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[0] :
	       MUX_csrf_stval_csr$write_1__VAL_1[0] ;
  assign csrf_stvec_mode_low_reg$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd261 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd10 ;

  // register csrf_sum_reg
  assign csrf_sum_reg$D_IN =
	     MUX_csrf_ie_vec_0$write_1__SEL_1 ?
	       MUX_csrf_stval_csr$write_1__VAL_1[18] :
	       f_csr_reqs$D_OUT[18] ;
  assign csrf_sum_reg$EN =
	     MUX_csrf_ie_vec_0$write_1__SEL_1 ||
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     (f_csr_reqs$D_OUT[75:64] == 12'd256 ||
	      f_csr_reqs$D_OUT[75:64] == 12'd768) ;

  // register csrf_time_reg
  assign csrf_time_reg$D_IN = mmioToPlatform_setTime_t ;
  assign csrf_time_reg$EN = EN_mmioToPlatform_setTime ;

  // register csrf_timer_int_en_vec_0
  assign csrf_timer_int_en_vec_0$D_IN = 1'b0 ;
  assign csrf_timer_int_en_vec_0$EN = 1'b0 ;

  // register csrf_timer_int_en_vec_1
  assign csrf_timer_int_en_vec_1$D_IN =
	     MUX_csrf_external_int_en_vec_1$write_1__SEL_1 ?
	       MUX_csrf_stval_csr$write_1__VAL_1[5] :
	       f_csr_reqs$D_OUT[5] ;
  assign csrf_timer_int_en_vec_1$EN =
	     MUX_csrf_external_int_en_vec_1$write_1__SEL_1 ||
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     (f_csr_reqs$D_OUT[75:64] == 12'd260 ||
	      f_csr_reqs$D_OUT[75:64] == 12'd772) ;

  // register csrf_timer_int_en_vec_3
  assign csrf_timer_int_en_vec_3$D_IN =
	     MUX_csrf_external_int_en_vec_3$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[7] :
	       MUX_csrf_stval_csr$write_1__VAL_1[7] ;
  assign csrf_timer_int_en_vec_3$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd772 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd22 ;

  // register csrf_timer_int_pend_vec_0
  assign csrf_timer_int_pend_vec_0$D_IN = 1'b0 ;
  assign csrf_timer_int_pend_vec_0$EN = 1'b0 ;

  // register csrf_timer_int_pend_vec_1
  assign csrf_timer_int_pend_vec_1$D_IN =
	     MUX_csrf_external_int_pend_vec_1$write_1__SEL_1 ?
	       MUX_csrf_stval_csr$write_1__VAL_1[5] :
	       f_csr_reqs$D_OUT[5] ;
  assign csrf_timer_int_pend_vec_1$EN =
	     MUX_csrf_external_int_pend_vec_1$write_1__SEL_1 ||
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     (f_csr_reqs$D_OUT[75:64] == 12'd324 ||
	      f_csr_reqs$D_OUT[75:64] == 12'd836) ;

  // register csrf_timer_int_pend_vec_3
  assign csrf_timer_int_pend_vec_3$D_IN = mmio_pRqQ_data_0[0] ;
  assign csrf_timer_int_pend_vec_3$EN =
	     WILL_FIRE_RL_mmio_handlePRq && mmio_pRqQ_data_0[38] &&
	     mmio_pRqQ_data_0[37:36] == 2'd2 ;

  // register csrf_tsr_reg
  assign csrf_tsr_reg$D_IN =
	     MUX_csrf_ie_vec_3$write_1__SEL_3 ?
	       f_csr_reqs$D_OUT[22] :
	       MUX_csrf_stval_csr$write_1__VAL_1[22] ;
  assign csrf_tsr_reg$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd768 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd18 ;

  // register csrf_tvm_reg
  assign csrf_tvm_reg$D_IN =
	     MUX_csrf_ie_vec_3$write_1__SEL_3 ?
	       f_csr_reqs$D_OUT[20] :
	       MUX_csrf_stval_csr$write_1__VAL_1[20] ;
  assign csrf_tvm_reg$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd768 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd18 ;

  // register csrf_tw_reg
  assign csrf_tw_reg$D_IN =
	     MUX_csrf_ie_vec_3$write_1__SEL_3 ?
	       f_csr_reqs$D_OUT[21] :
	       MUX_csrf_stval_csr$write_1__VAL_1[21] ;
  assign csrf_tw_reg$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd768 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd18 ;

  // register csrf_vm_mode_sv39_reg
  assign csrf_vm_mode_sv39_reg$D_IN =
	     MUX_csrf_ppn_reg$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[63] :
	       MUX_csrf_stval_csr$write_1__VAL_1[63] ;
  assign csrf_vm_mode_sv39_reg$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd384 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd17 ;

  // register flush_brpred
  assign flush_brpred$D_IN = MUX_commitStage_rg_run_state$write_1__SEL_1 ;
  assign flush_brpred$EN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     commitStage_commitTrap_4406_BIT_36_4532_AND_co_ETC___d14597 ||
	     WILL_FIRE_RL_flushBrPred ;

  // register flush_caches
  assign flush_caches$D_IN = MUX_commitStage_rg_run_state$write_1__SEL_1 ;
  assign flush_caches$EN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     commitStage_commitTrap_4406_BIT_36_4532_AND_co_ETC___d14597 ||
	     WILL_FIRE_RL_flushCaches ;

  // register flush_reservation
  assign flush_reservation$D_IN = !MUX_flush_reservation$write_1__SEL_2 ;
  assign flush_reservation$EN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle && _dfoo20 ||
	     WILL_FIRE_RL_prepareCachesAndTlbs && flush_reservation ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ;

  // register flush_tlbs
  assign flush_tlbs$D_IN = !MUX_flush_tlbs$write_1__SEL_1 ;
  assign flush_tlbs$EN =
	     WILL_FIRE_RL_prepareCachesAndTlbs && flush_tlbs ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     commitStage_commitTrap_4406_BIT_36_4532_AND_co_ETC___d14597 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     (rob$deqPort_0_deq_data[247:243] == 5'd16 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	      IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd17) ;

  // register mmio_cRqQ_clearReq_rl
  assign mmio_cRqQ_clearReq_rl$D_IN = 1'd0 ;
  assign mmio_cRqQ_clearReq_rl$EN = 1'd1 ;

  // register mmio_cRqQ_data_0
  assign mmio_cRqQ_data_0$D_IN =
	     { x__h46000,
	       (mmio_cRqQ_enqReq_lat_0$whas ?
		  mmio_cRqQ_enqReq_lat_0$wget[77:76] == 2'd0 :
		  mmio_cRqQ_enqReq_rl[77:76] == 2'd0) ?
		 { 4'd2,
		   mmio_cRqQ_enqReq_lat_0$whas ?
		     mmio_cRqQ_enqReq_lat_0$wget[73:72] :
		     mmio_cRqQ_enqReq_rl[73:72] } :
		 IF_IF_mmio_cRqQ_enqReq_lat_1_whas__30_THEN_mmi_ETC___d463,
	       mmio_cRqQ_enqReq_lat_0$whas ?
		 mmio_cRqQ_enqReq_lat_0$wget[71:64] :
		 mmio_cRqQ_enqReq_rl[71:64],
	       x__h48536 } ;
  assign mmio_cRqQ_data_0$EN =
	     NOT_mmio_cRqQ_clearReq_dummy2_1_read__26_27_OR_ETC___d431 &&
	     mmio_cRqQ_enqReq_dummy2_2$Q_OUT &&
	     IF_mmio_cRqQ_enqReq_lat_1_whas__30_THEN_mmio_c_ETC___d339 ;

  // register mmio_cRqQ_deqReq_rl
  assign mmio_cRqQ_deqReq_rl$D_IN = 1'd0 ;
  assign mmio_cRqQ_deqReq_rl$EN = 1'd1 ;

  // register mmio_cRqQ_empty
  assign mmio_cRqQ_empty$D_IN =
	     mmio_cRqQ_clearReq_dummy2_1$Q_OUT && mmio_cRqQ_clearReq_rl ||
	     NOT_mmio_cRqQ_enqReq_dummy2_2_read__32_47_OR_I_ETC___d452 ;
  assign mmio_cRqQ_empty$EN = 1'd1 ;

  // register mmio_cRqQ_enqReq_rl
  assign mmio_cRqQ_enqReq_rl$D_IN =
	     143'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA ;
  assign mmio_cRqQ_enqReq_rl$EN = 1'd1 ;

  // register mmio_cRqQ_full
  assign mmio_cRqQ_full$D_IN =
	     NOT_mmio_cRqQ_clearReq_dummy2_1_read__26_27_OR_ETC___d431 &&
	     mmio_cRqQ_enqReq_dummy2_2_read__32_AND_IF_mmio_ETC___d444 ;
  assign mmio_cRqQ_full$EN = 1'd1 ;

  // register mmio_cRsQ_clearReq_rl
  assign mmio_cRsQ_clearReq_rl$D_IN = 1'd0 ;
  assign mmio_cRsQ_clearReq_rl$EN = 1'd1 ;

  // register mmio_cRsQ_data_0
  assign mmio_cRsQ_data_0$D_IN =
	     CAN_FIRE_RL_mmio_handlePRq ?
	       mmio_cRsQ_enqReq_lat_0$wget[0] :
	       mmio_cRsQ_enqReq_rl[0] ;
  assign mmio_cRsQ_data_0$EN =
	     NOT_mmio_cRsQ_clearReq_dummy2_1_read__72_73_OR_ETC___d877 &&
	     mmio_cRsQ_enqReq_dummy2_2$Q_OUT &&
	     IF_mmio_cRsQ_enqReq_lat_1_whas__28_THEN_mmio_c_ETC___d837 ;

  // register mmio_cRsQ_deqReq_rl
  assign mmio_cRsQ_deqReq_rl$D_IN = 1'd0 ;
  assign mmio_cRsQ_deqReq_rl$EN = 1'd1 ;

  // register mmio_cRsQ_empty
  assign mmio_cRsQ_empty$D_IN =
	     mmio_cRsQ_clearReq_dummy2_1$Q_OUT && mmio_cRsQ_clearReq_rl ||
	     NOT_mmio_cRsQ_enqReq_dummy2_2_read__78_93_OR_I_ETC___d898 ;
  assign mmio_cRsQ_empty$EN = 1'd1 ;

  // register mmio_cRsQ_enqReq_rl
  assign mmio_cRsQ_enqReq_rl$D_IN = 2'b0 ;
  assign mmio_cRsQ_enqReq_rl$EN = 1'd1 ;

  // register mmio_cRsQ_full
  assign mmio_cRsQ_full$D_IN =
	     NOT_mmio_cRsQ_clearReq_dummy2_1_read__72_73_OR_ETC___d877 &&
	     mmio_cRsQ_enqReq_dummy2_2_read__78_AND_IF_mmio_ETC___d890 ;
  assign mmio_cRsQ_full$EN = 1'd1 ;

  // register mmio_dataPendQ_clearReq_rl
  assign mmio_dataPendQ_clearReq_rl$D_IN = 1'd0 ;
  assign mmio_dataPendQ_clearReq_rl$EN = 1'd1 ;

  // register mmio_dataPendQ_deqReq_rl
  assign mmio_dataPendQ_deqReq_rl$D_IN = 1'd0 ;
  assign mmio_dataPendQ_deqReq_rl$EN = 1'd1 ;

  // register mmio_dataPendQ_empty
  assign mmio_dataPendQ_empty$D_IN =
	     mmio_dataPendQ_clearReq_dummy2_1$Q_OUT &&
	     mmio_dataPendQ_clearReq_rl ||
	     NOT_mmio_dataPendQ_enqReq_dummy2_2_read__00_15_ETC___d325 ;
  assign mmio_dataPendQ_empty$EN = 1'd1 ;

  // register mmio_dataPendQ_enqReq_rl
  assign mmio_dataPendQ_enqReq_rl$D_IN = 1'd0 ;
  assign mmio_dataPendQ_enqReq_rl$EN = 1'd1 ;

  // register mmio_dataPendQ_full
  assign mmio_dataPendQ_full$D_IN =
	     (!mmio_dataPendQ_clearReq_dummy2_1$Q_OUT ||
	      !mmio_dataPendQ_clearReq_rl) &&
	     mmio_dataPendQ_enqReq_dummy2_2_read__00_AND_IF_ETC___d312 ;
  assign mmio_dataPendQ_full$EN = 1'd1 ;

  // register mmio_dataReqQ_clearReq_rl
  assign mmio_dataReqQ_clearReq_rl$D_IN = 1'd0 ;
  assign mmio_dataReqQ_clearReq_rl$EN = 1'd1 ;

  // register mmio_dataReqQ_data_0
  assign mmio_dataReqQ_data_0$D_IN =
	     { x__h18093,
	       (mmio_dataReqQ_enqReq_lat_0$whas ?
		  mmio_dataReqQ_enqReq_lat_0$wget[77:76] == 2'd0 :
		  mmio_dataReqQ_enqReq_rl[77:76] == 2'd0) ?
		 { 4'd2,
		   mmio_dataReqQ_enqReq_lat_0$whas ?
		     mmio_dataReqQ_enqReq_lat_0$wget[73:72] :
		     mmio_dataReqQ_enqReq_rl[73:72] } :
		 IF_IF_mmio_dataReqQ_enqReq_lat_1_whas__7_THEN__ETC___d172,
	       mmio_dataReqQ_enqReq_lat_0$whas ?
		 mmio_dataReqQ_enqReq_lat_0$wget[71:64] :
		 mmio_dataReqQ_enqReq_rl[71:64],
	       x__h20631 } ;
  assign mmio_dataReqQ_data_0$EN =
	     NOT_mmio_dataReqQ_clearReq_dummy2_1_read__35_3_ETC___d140 &&
	     mmio_dataReqQ_enqReq_dummy2_2$Q_OUT &&
	     IF_mmio_dataReqQ_enqReq_lat_1_whas__7_THEN_mmi_ETC___d46 ;

  // register mmio_dataReqQ_deqReq_rl
  assign mmio_dataReqQ_deqReq_rl$D_IN = 1'd0 ;
  assign mmio_dataReqQ_deqReq_rl$EN = 1'd1 ;

  // register mmio_dataReqQ_empty
  assign mmio_dataReqQ_empty$D_IN =
	     mmio_dataReqQ_clearReq_dummy2_1$Q_OUT &&
	     mmio_dataReqQ_clearReq_rl ||
	     NOT_mmio_dataReqQ_enqReq_dummy2_2_read__41_56__ETC___d161 ;
  assign mmio_dataReqQ_empty$EN = 1'd1 ;

  // register mmio_dataReqQ_enqReq_rl
  assign mmio_dataReqQ_enqReq_rl$D_IN =
	     143'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA ;
  assign mmio_dataReqQ_enqReq_rl$EN = 1'd1 ;

  // register mmio_dataReqQ_full
  assign mmio_dataReqQ_full$D_IN =
	     NOT_mmio_dataReqQ_clearReq_dummy2_1_read__35_3_ETC___d140 &&
	     mmio_dataReqQ_enqReq_dummy2_2_read__41_AND_IF__ETC___d153 ;
  assign mmio_dataReqQ_full$EN = 1'd1 ;

  // register mmio_dataRespQ_clearReq_rl
  assign mmio_dataRespQ_clearReq_rl$D_IN = 1'd0 ;
  assign mmio_dataRespQ_clearReq_rl$EN = 1'd1 ;

  // register mmio_dataRespQ_data_0
  assign mmio_dataRespQ_data_0$D_IN =
	     CAN_FIRE_RL_mmio_sendDataResp ?
	       mmio_dataRespQ_enqReq_lat_0$wget[64:0] :
	       mmio_dataRespQ_enqReq_rl[64:0] ;
  assign mmio_dataRespQ_data_0$EN =
	     NOT_mmio_dataRespQ_clearReq_dummy2_1_read__36__ETC___d241 &&
	     mmio_dataRespQ_enqReq_dummy2_2$Q_OUT &&
	     IF_mmio_dataRespQ_enqReq_lat_1_whas__92_THEN_m_ETC___d201 ;

  // register mmio_dataRespQ_deqReq_rl
  assign mmio_dataRespQ_deqReq_rl$D_IN = 1'd0 ;
  assign mmio_dataRespQ_deqReq_rl$EN = 1'd1 ;

  // register mmio_dataRespQ_empty
  assign mmio_dataRespQ_empty$D_IN =
	     mmio_dataRespQ_clearReq_dummy2_1$Q_OUT &&
	     mmio_dataRespQ_clearReq_rl ||
	     NOT_mmio_dataRespQ_enqReq_dummy2_2_read__42_57_ETC___d262 ;
  assign mmio_dataRespQ_empty$EN = 1'd1 ;

  // register mmio_dataRespQ_enqReq_rl
  assign mmio_dataRespQ_enqReq_rl$D_IN = 66'h0AAAAAAAAAAAAAAAA ;
  assign mmio_dataRespQ_enqReq_rl$EN = 1'd1 ;

  // register mmio_dataRespQ_full
  assign mmio_dataRespQ_full$D_IN =
	     NOT_mmio_dataRespQ_clearReq_dummy2_1_read__36__ETC___d241 &&
	     mmio_dataRespQ_enqReq_dummy2_2_read__42_AND_IF_ETC___d254 ;
  assign mmio_dataRespQ_full$EN = 1'd1 ;

  // register mmio_fromHostAddr
  assign mmio_fromHostAddr$D_IN = coreReq_start_fromHostAddr[63:3] ;
  assign mmio_fromHostAddr$EN = EN_coreReq_start ;

  // register mmio_pRqQ_clearReq_rl
  assign mmio_pRqQ_clearReq_rl$D_IN = 1'd0 ;
  assign mmio_pRqQ_clearReq_rl$EN = 1'd1 ;

  // register mmio_pRqQ_data_0
  assign mmio_pRqQ_data_0$D_IN =
	     { EN_mmioToPlatform_pRq_enq ?
		 mmio_pRqQ_enqReq_lat_0$wget[38] :
		 mmio_pRqQ_enqReq_rl[38],
	       (EN_mmioToPlatform_pRq_enq ?
		  mmio_pRqQ_enqReq_lat_0$wget[37:36] == 2'd0 :
		  mmio_pRqQ_enqReq_rl[37:36] == 2'd0) ?
		 { 4'd2,
		   EN_mmioToPlatform_pRq_enq ?
		     mmio_pRqQ_enqReq_lat_0$wget[33:32] :
		     mmio_pRqQ_enqReq_rl[33:32] } :
		 IF_IF_mmio_pRqQ_enqReq_lat_1_whas__87_THEN_mmi_ETC___d820,
	       x_data__h67460 } ;
  assign mmio_pRqQ_data_0$EN =
	     NOT_mmio_pRqQ_clearReq_dummy2_1_read__83_84_OR_ETC___d788 &&
	     mmio_pRqQ_enqReq_dummy2_2$Q_OUT &&
	     IF_mmio_pRqQ_enqReq_lat_1_whas__87_THEN_mmio_p_ETC___d696 ;

  // register mmio_pRqQ_deqReq_rl
  assign mmio_pRqQ_deqReq_rl$D_IN = 1'd0 ;
  assign mmio_pRqQ_deqReq_rl$EN = 1'd1 ;

  // register mmio_pRqQ_empty
  assign mmio_pRqQ_empty$D_IN =
	     mmio_pRqQ_clearReq_dummy2_1$Q_OUT && mmio_pRqQ_clearReq_rl ||
	     NOT_mmio_pRqQ_enqReq_dummy2_2_read__89_04_OR_I_ETC___d809 ;
  assign mmio_pRqQ_empty$EN = 1'd1 ;

  // register mmio_pRqQ_enqReq_rl
  assign mmio_pRqQ_enqReq_rl$D_IN = 40'h2AAAAAAAAA ;
  assign mmio_pRqQ_enqReq_rl$EN = 1'd1 ;

  // register mmio_pRqQ_full
  assign mmio_pRqQ_full$D_IN =
	     NOT_mmio_pRqQ_clearReq_dummy2_1_read__83_84_OR_ETC___d788 &&
	     mmio_pRqQ_enqReq_dummy2_2_read__89_AND_IF_mmio_ETC___d801 ;
  assign mmio_pRqQ_full$EN = 1'd1 ;

  // register mmio_pRsQ_clearReq_rl
  assign mmio_pRsQ_clearReq_rl$D_IN = 1'd0 ;
  assign mmio_pRsQ_clearReq_rl$EN = 1'd1 ;

  // register mmio_pRsQ_data_0
  assign mmio_pRsQ_data_0$D_IN =
	     { EN_mmioToPlatform_pRs_enq ?
		 mmio_pRsQ_enqReq_lat_0$wget[68] :
		 mmio_pRsQ_enqReq_rl[68],
	       IF_IF_mmio_pRsQ_enqReq_lat_1_whas__82_THEN_NOT_ETC___d681 } ;
  assign mmio_pRsQ_data_0$EN =
	     NOT_mmio_pRsQ_clearReq_dummy2_1_read__34_35_OR_ETC___d639 &&
	     mmio_pRsQ_enqReq_dummy2_2$Q_OUT &&
	     IF_mmio_pRsQ_enqReq_lat_1_whas__82_THEN_mmio_p_ETC___d491 ;

  // register mmio_pRsQ_deqReq_rl
  assign mmio_pRsQ_deqReq_rl$D_IN = 1'd0 ;
  assign mmio_pRsQ_deqReq_rl$EN = 1'd1 ;

  // register mmio_pRsQ_empty
  assign mmio_pRsQ_empty$D_IN =
	     mmio_pRsQ_clearReq_dummy2_1$Q_OUT && mmio_pRsQ_clearReq_rl ||
	     NOT_mmio_pRsQ_enqReq_dummy2_2_read__40_55_OR_I_ETC___d660 ;
  assign mmio_pRsQ_empty$EN = 1'd1 ;

  // register mmio_pRsQ_enqReq_rl
  assign mmio_pRsQ_enqReq_rl$D_IN = 70'h0AAAAAAAAAAAAAAAAA ;
  assign mmio_pRsQ_enqReq_rl$EN = 1'd1 ;

  // register mmio_pRsQ_full
  assign mmio_pRsQ_full$D_IN =
	     NOT_mmio_pRsQ_clearReq_dummy2_1_read__34_35_OR_ETC___d639 &&
	     mmio_pRsQ_enqReq_dummy2_2_read__40_AND_IF_mmio_ETC___d652 ;
  assign mmio_pRsQ_full$EN = 1'd1 ;

  // register mmio_toHostAddr
  assign mmio_toHostAddr$D_IN = coreReq_start_toHostAddr[63:3] ;
  assign mmio_toHostAddr$EN = EN_coreReq_start ;

  // register outOfReset
  assign outOfReset$D_IN = 1'd1 ;
  assign outOfReset$EN = CAN_FIRE_RL_rl_outOfReset ;

  // register renameStage_rg_m_halt_req
  always@(MUX_renameStage_rg_m_halt_req$write_1__SEL_1 or
	  MUX_renameStage_rg_m_halt_req$write_1__SEL_2 or
	  MUX_renameStage_rg_m_halt_req$write_1__SEL_3 or
	  WILL_FIRE_RL_rl_debug_resume or
	  WILL_FIRE_RL_rl_debug_halt_req or
	  MUX_renameStage_rg_m_halt_req$write_1__SEL_6)
  case (1'b1)
    MUX_renameStage_rg_m_halt_req$write_1__SEL_1 ||
    MUX_renameStage_rg_m_halt_req$write_1__SEL_2 ||
    MUX_renameStage_rg_m_halt_req$write_1__SEL_3:
	renameStage_rg_m_halt_req$D_IN = 5'd31;
    WILL_FIRE_RL_rl_debug_resume: renameStage_rg_m_halt_req$D_IN = 5'd10;
    WILL_FIRE_RL_rl_debug_halt_req ||
    MUX_renameStage_rg_m_halt_req$write_1__SEL_6:
	renameStage_rg_m_halt_req$D_IN = 5'd30;
    default: renameStage_rg_m_halt_req$D_IN =
		 5'b01010 /* unspecified value */ ;
  endcase
  assign renameStage_rg_m_halt_req$EN =
	     (WILL_FIRE_RL_renameStage_doRenaming_SystemInst ||
	      WILL_FIRE_RL_renameStage_doRenaming_Trap) &&
	     csrf_rg_dcsr[2] ||
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     fetchStage_pipelines_0_canDeq__2814_AND_NOT_fe_ETC___d14392 ||
	     EN_coreReq_start && !coreReq_start_running ||
	     WILL_FIRE_RL_rl_debug_resume ||
	     WILL_FIRE_RL_rl_debug_halt_req ;

  // register rg_core_run_state
  always@(WILL_FIRE_RL_rl_debug_resume or
	  WILL_FIRE_RL_rl_debug_halted or
	  EN_coreReq_start or MUX_rg_core_run_state$write_1__SEL_4)
  case (1'b1)
    WILL_FIRE_RL_rl_debug_resume: rg_core_run_state$D_IN = 2'd2;
    WILL_FIRE_RL_rl_debug_halted: rg_core_run_state$D_IN = 2'd1;
    EN_coreReq_start: rg_core_run_state$D_IN = 2'd2;
    MUX_rg_core_run_state$write_1__SEL_4: rg_core_run_state$D_IN = 2'd0;
    default: rg_core_run_state$D_IN = 2'b10 /* unspecified value */ ;
  endcase
  assign rg_core_run_state$EN =
	     WILL_FIRE_RL_readyToFetch && commitStage_rg_run_state ||
	     WILL_FIRE_RL_rl_debug_halted ||
	     WILL_FIRE_RL_rl_debug_resume ||
	     EN_coreReq_start ;

  // register started
  assign started$D_IN = WILL_FIRE_RL_rl_debug_resume || EN_coreReq_start ;
  assign started$EN =
	     WILL_FIRE_RL_readyToFetch && commitStage_rg_run_state ||
	     WILL_FIRE_RL_rl_debug_resume ||
	     EN_coreReq_start ;

  // register update_vm_info
  assign update_vm_info$D_IN =
	     !MUX_coreFix_memExe_dTlb$updateVMInfo_1__SEL_1 ;
  assign update_vm_info$EN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle && _dfoo20 ||
	     WILL_FIRE_RL_prepareCachesAndTlbs && update_vm_info ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ;

  // submodule coreFix_aluExe_0_dispToRegQ
  assign coreFix_aluExe_0_dispToRegQ$enq_x =
	     { coreFix_aluExe_0_rsAlu$dispatchData[149:145],
	       CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q268,
	       coreFix_aluExe_0_rsAlu$dispatchData[123],
	       CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q269,
	       coreFix_aluExe_0_rsAlu$dispatchData[110:78],
	       coreFix_aluExe_0_rsAlu$dispatchData[53:11],
	       coreFix_aluExe_0_rsAlu$dispatchData[77:54],
	       coreFix_aluExe_0_rsAlu$dispatchData[6:4],
	       coreFix_aluExe_0_rsAlu$dispatchData[10:7] } ;
  assign coreFix_aluExe_0_dispToRegQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12757 ;
  assign coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all =
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[5:4];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[5:4];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      2'b10 /* unspecified value */ ;
      default: coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_0_dispToRegQ$EN_enq =
	     WILL_FIRE_RL_coreFix_aluExe_0_doDispatchAlu ;
  assign coreFix_aluExe_0_dispToRegQ$EN_deq =
	     WILL_FIRE_RL_coreFix_aluExe_0_doRegReadAlu ;
  assign coreFix_aluExe_0_dispToRegQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_aluExe_0_dispToRegQ$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_aluExe_0_exeToFinQ
  assign coreFix_aluExe_0_exeToFinQ$enq_x =
	     { coreFix_aluExe_0_regToExeQ$first[409:405],
	       coreFix_aluExe_0_regToExeQ$first[337:295],
	       coreFix_aluExe_0_regToExeQ$first[8:7] != 2'b11,
	       basicExec___d12676[321:258],
	       coreFix_aluExe_0_regToExeQ$first[383],
	       basicExec___d12676[257:194],
	       basicExec___d12676[129:0],
	       coreFix_aluExe_0_regToExeQ$first[6:0] } ;
  assign coreFix_aluExe_0_exeToFinQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12757 ;
  assign coreFix_aluExe_0_exeToFinQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_aluExe_0_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[5:4];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_aluExe_0_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[5:4];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_aluExe_0_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag =
	      2'b10 /* unspecified value */ ;
      default: coreFix_aluExe_0_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_0_exeToFinQ$EN_enq =
	     WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu ;
  assign coreFix_aluExe_0_exeToFinQ$EN_deq =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  assign coreFix_aluExe_0_exeToFinQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_aluExe_0_exeToFinQ$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_aluExe_0_regToExeQ
  assign coreFix_aluExe_0_regToExeQ$enq_x =
	     { coreFix_aluExe_0_dispToRegQ$first[145:141],
	       CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_14_ETC__q271,
	       coreFix_aluExe_0_dispToRegQ$first[119],
	       CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_11_ETC__q272,
	       coreFix_aluExe_0_dispToRegQ$first[106:74],
	       coreFix_aluExe_0_dispToRegQ$first[49:7],
	       x__h640402,
	       x__h640403,
	       rob$getOrigPC_0_get,
	       rob$getOrigPredPC_0_get,
	       rob$getOrig_Inst_0_get,
	       coreFix_aluExe_0_dispToRegQ$first[6:0] } ;
  assign coreFix_aluExe_0_regToExeQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12757 ;
  assign coreFix_aluExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_aluExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[5:4];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_aluExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[5:4];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_aluExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      2'b10 /* unspecified value */ ;
      default: coreFix_aluExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_0_regToExeQ$EN_enq =
	     WILL_FIRE_RL_coreFix_aluExe_0_doRegReadAlu ;
  assign coreFix_aluExe_0_regToExeQ$EN_deq =
	     WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu ;
  assign coreFix_aluExe_0_regToExeQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_aluExe_0_regToExeQ$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_aluExe_0_rsAlu
  assign coreFix_aluExe_0_rsAlu$enq_x =
	     MUX_coreFix_aluExe_0_rsAlu$enq_1__SEL_1 ?
	       MUX_coreFix_aluExe_0_rsAlu$enq_1__VAL_1 :
	       MUX_coreFix_aluExe_0_rsAlu$enq_1__VAL_2 ;
  assign coreFix_aluExe_0_rsAlu$setRegReady_0_put =
	     { 1'd1, coreFix_aluExe_0_rsAlu$dispatchData[28:22] } ;
  assign coreFix_aluExe_0_rsAlu$setRegReady_1_put =
	     { 1'd1, coreFix_aluExe_1_rsAlu$dispatchData[28:22] } ;
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1:
	  coreFix_aluExe_0_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2:
	  coreFix_aluExe_0_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3:
	  coreFix_aluExe_0_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4:
	  coreFix_aluExe_0_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5:
	  coreFix_aluExe_0_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6:
	  coreFix_aluExe_0_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6;
      default: coreFix_aluExe_0_rsAlu$setRegReady_2_put =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_0_rsAlu$setRegReady_3_put =
	     { 1'd1, coreFix_memExe_lsq$issueLd[71:65] } ;
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_1:
	  coreFix_aluExe_0_rsAlu$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_2:
	  coreFix_aluExe_0_rsAlu$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3:
	  coreFix_aluExe_0_rsAlu$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_4;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4:
	  coreFix_aluExe_0_rsAlu$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_4;
      default: coreFix_aluExe_0_rsAlu$setRegReady_4_put =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_0_rsAlu$setRobEnqTime_t = rob$getEnqTime ;
  assign coreFix_aluExe_0_rsAlu$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12757 ;
  assign coreFix_aluExe_0_rsAlu$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_aluExe_0_rsAlu$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[5:4];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_aluExe_0_rsAlu$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[5:4];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_aluExe_0_rsAlu$specUpdate_incorrectSpeculation_kill_tag =
	      2'b10 /* unspecified value */ ;
      default: coreFix_aluExe_0_rsAlu$specUpdate_incorrectSpeculation_kill_tag =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_0_rsAlu$EN_enq =
	     WILL_FIRE_RL_renameStage_doRenaming && _dfoo18 ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	     fetchStage$pipelines_0_first[194:192] == 3'd0 ;
  assign coreFix_aluExe_0_rsAlu$EN_setRobEnqTime = 1'd1 ;
  assign coreFix_aluExe_0_rsAlu$EN_doDispatch =
	     WILL_FIRE_RL_coreFix_aluExe_0_doDispatchAlu ;
  assign coreFix_aluExe_0_rsAlu$EN_setRegReady_0_put =
	     WILL_FIRE_RL_coreFix_aluExe_0_doDispatchAlu &&
	     coreFix_aluExe_0_rsAlu$dispatchData[29] ;
  assign coreFix_aluExe_0_rsAlu$EN_setRegReady_1_put =
	     WILL_FIRE_RL_coreFix_aluExe_1_doDispatchAlu &&
	     coreFix_aluExe_1_rsAlu$dispatchData[29] ;
  assign coreFix_aluExe_0_rsAlu$EN_setRegReady_2_put =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[22] ;
  assign coreFix_aluExe_0_rsAlu$EN_setRegReady_3_put =
	     _dor1coreFix_aluExe_0_rsAlu$EN_setRegReady_3_put &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd0 &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd1 &&
	     coreFix_memExe_lsq$issueLd[72] ;
  assign coreFix_aluExe_0_rsAlu$EN_setRegReady_4_put =
	     (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq) &&
	     coreFix_memExe_lsq$firstSt[150] ||
	     (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq) &&
	     coreFix_memExe_lsq$firstLd[89] ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2680 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 &&
	     coreFix_memExe_lsq$getHit[8] &&
	     !coreFix_memExe_lsq$getHit[9] ;
  assign coreFix_aluExe_0_rsAlu$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_aluExe_0_rsAlu$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_aluExe_1_dispToRegQ
  assign coreFix_aluExe_1_dispToRegQ$enq_x =
	     { coreFix_aluExe_1_rsAlu$dispatchData[149:145],
	       CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q274,
	       coreFix_aluExe_1_rsAlu$dispatchData[123],
	       CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q275,
	       coreFix_aluExe_1_rsAlu$dispatchData[110:78],
	       coreFix_aluExe_1_rsAlu$dispatchData[53:11],
	       coreFix_aluExe_1_rsAlu$dispatchData[77:54],
	       coreFix_aluExe_1_rsAlu$dispatchData[6:4],
	       coreFix_aluExe_1_rsAlu$dispatchData[10:7] } ;
  assign coreFix_aluExe_1_dispToRegQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12757 ;
  assign coreFix_aluExe_1_dispToRegQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_aluExe_1_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[5:4];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_aluExe_1_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[5:4];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_aluExe_1_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      2'b10 /* unspecified value */ ;
      default: coreFix_aluExe_1_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_1_dispToRegQ$EN_enq =
	     WILL_FIRE_RL_coreFix_aluExe_1_doDispatchAlu ;
  assign coreFix_aluExe_1_dispToRegQ$EN_deq =
	     WILL_FIRE_RL_coreFix_aluExe_1_doRegReadAlu ;
  assign coreFix_aluExe_1_dispToRegQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_aluExe_1_dispToRegQ$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_aluExe_1_exeToFinQ
  assign coreFix_aluExe_1_exeToFinQ$enq_x =
	     { coreFix_aluExe_1_regToExeQ$first[409:405],
	       coreFix_aluExe_1_regToExeQ$first[337:295],
	       coreFix_aluExe_1_regToExeQ$first[8:7] != 2'b11,
	       basicExec___d12002[321:258],
	       coreFix_aluExe_1_regToExeQ$first[383],
	       basicExec___d12002[257:194],
	       basicExec___d12002[129:0],
	       coreFix_aluExe_1_regToExeQ$first[6:0] } ;
  assign coreFix_aluExe_1_exeToFinQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12757 ;
  assign coreFix_aluExe_1_exeToFinQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_aluExe_1_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[5:4];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_aluExe_1_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[5:4];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_aluExe_1_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag =
	      2'b10 /* unspecified value */ ;
      default: coreFix_aluExe_1_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_1_exeToFinQ$EN_enq =
	     WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu ;
  assign coreFix_aluExe_1_exeToFinQ$EN_deq =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;
  assign coreFix_aluExe_1_exeToFinQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_aluExe_1_exeToFinQ$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_aluExe_1_regToExeQ
  assign coreFix_aluExe_1_regToExeQ$enq_x =
	     { coreFix_aluExe_1_dispToRegQ$first[145:141],
	       CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_14_ETC__q277,
	       coreFix_aluExe_1_dispToRegQ$first[119],
	       CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_11_ETC__q278,
	       coreFix_aluExe_1_dispToRegQ$first[106:74],
	       coreFix_aluExe_1_dispToRegQ$first[49:7],
	       x__h617891,
	       x__h617892,
	       rob$getOrigPC_1_get,
	       rob$getOrigPredPC_1_get,
	       rob$getOrig_Inst_1_get,
	       coreFix_aluExe_1_dispToRegQ$first[6:0] } ;
  assign coreFix_aluExe_1_regToExeQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12757 ;
  assign coreFix_aluExe_1_regToExeQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_aluExe_1_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[5:4];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_aluExe_1_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[5:4];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_aluExe_1_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      2'b10 /* unspecified value */ ;
      default: coreFix_aluExe_1_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_1_regToExeQ$EN_enq =
	     WILL_FIRE_RL_coreFix_aluExe_1_doRegReadAlu ;
  assign coreFix_aluExe_1_regToExeQ$EN_deq =
	     WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu ;
  assign coreFix_aluExe_1_regToExeQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_aluExe_1_regToExeQ$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_aluExe_1_rsAlu
  assign coreFix_aluExe_1_rsAlu$enq_x =
	     (k__h669550 == 1'd1 &&
	      fetchStage_pipelines_0_canDeq__2814_AND_NOT_fe_ETC___d14177) ?
	       { fetchStage$pipelines_0_first[199:195],
		 IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d12942,
		 fetchStage$pipelines_0_first[173],
		 IF_fetchStage_pipelines_0_first__2816_BITS_172_ETC___d13032,
		 fetchStage$pipelines_0_first[160:128],
		 fetchStage$pipelines_0_first[255:232],
		 regRenamingTable$rename_0_getRename,
		 rob$enqPort_0_getEnqInstTag,
		 specTagManager$currentSpecBits,
		 fetchStage$pipelines_0_first[194:192] == 3'd1,
		 specTagManager$nextSpecTag,
		 sbAggr$eagerLookup_0_get } :
	       { fetchStage$pipelines_1_first[199:195],
		 IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d13658,
		 fetchStage_pipelines_1_first__2825_BIT_173_365_ETC___d13750,
		 fetchStage$pipelines_1_first[160:128],
		 fetchStage$pipelines_1_first[255:232],
		 regRenamingTable$rename_1_getRename,
		 rob$enqPort_1_getEnqInstTag,
		 renaming_spec_bits__h684325,
		 fetchStage$pipelines_1_first[194:192] == 3'd1,
		 specTagManager$nextSpecTag,
		 sbAggr$eagerLookup_1_get } ;
  assign coreFix_aluExe_1_rsAlu$setRegReady_0_put =
	     coreFix_aluExe_0_rsAlu$setRegReady_0_put ;
  assign coreFix_aluExe_1_rsAlu$setRegReady_1_put =
	     coreFix_aluExe_0_rsAlu$setRegReady_1_put ;
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1:
	  coreFix_aluExe_1_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2:
	  coreFix_aluExe_1_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3:
	  coreFix_aluExe_1_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4:
	  coreFix_aluExe_1_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5:
	  coreFix_aluExe_1_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6:
	  coreFix_aluExe_1_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6;
      default: coreFix_aluExe_1_rsAlu$setRegReady_2_put =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_1_rsAlu$setRegReady_3_put =
	     coreFix_aluExe_0_rsAlu$setRegReady_3_put ;
  always@(MUX_coreFix_aluExe_1_rsAlu$setRegReady_4_put_1__SEL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1 or
	  MUX_coreFix_aluExe_1_rsAlu$setRegReady_4_put_1__SEL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_1_rsAlu$setRegReady_4_put_1__SEL_1:
	  coreFix_aluExe_1_rsAlu$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1;
      MUX_coreFix_aluExe_1_rsAlu$setRegReady_4_put_1__SEL_2:
	  coreFix_aluExe_1_rsAlu$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3:
	  coreFix_aluExe_1_rsAlu$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_4;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4:
	  coreFix_aluExe_1_rsAlu$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_4;
      default: coreFix_aluExe_1_rsAlu$setRegReady_4_put =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_1_rsAlu$setRobEnqTime_t = rob$getEnqTime ;
  assign coreFix_aluExe_1_rsAlu$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12757 ;
  assign coreFix_aluExe_1_rsAlu$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_aluExe_1_rsAlu$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[5:4];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_aluExe_1_rsAlu$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[5:4];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_aluExe_1_rsAlu$specUpdate_incorrectSpeculation_kill_tag =
	      2'b10 /* unspecified value */ ;
      default: coreFix_aluExe_1_rsAlu$specUpdate_incorrectSpeculation_kill_tag =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_1_rsAlu$EN_enq =
	     WILL_FIRE_RL_renameStage_doRenaming && _dfoo16 ;
  assign coreFix_aluExe_1_rsAlu$EN_setRobEnqTime = 1'd1 ;
  assign coreFix_aluExe_1_rsAlu$EN_doDispatch =
	     WILL_FIRE_RL_coreFix_aluExe_1_doDispatchAlu ;
  assign coreFix_aluExe_1_rsAlu$EN_setRegReady_0_put =
	     WILL_FIRE_RL_coreFix_aluExe_0_doDispatchAlu &&
	     coreFix_aluExe_0_rsAlu$dispatchData[29] ;
  assign coreFix_aluExe_1_rsAlu$EN_setRegReady_1_put =
	     WILL_FIRE_RL_coreFix_aluExe_1_doDispatchAlu &&
	     coreFix_aluExe_1_rsAlu$dispatchData[29] ;
  assign coreFix_aluExe_1_rsAlu$EN_setRegReady_2_put =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[22] ;
  assign coreFix_aluExe_1_rsAlu$EN_setRegReady_3_put =
	     _dor1coreFix_aluExe_1_rsAlu$EN_setRegReady_3_put &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd0 &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd1 &&
	     coreFix_memExe_lsq$issueLd[72] ;
  assign coreFix_aluExe_1_rsAlu$EN_setRegReady_4_put =
	     (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq) &&
	     coreFix_memExe_lsq$firstSt[150] ||
	     (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq) &&
	     coreFix_memExe_lsq$firstLd[89] ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2680 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 &&
	     coreFix_memExe_lsq$getHit[8] &&
	     !coreFix_memExe_lsq$getHit[9] ;
  assign coreFix_aluExe_1_rsAlu$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_aluExe_1_rsAlu$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_fpuMulDivExe_0_dispToRegQ
  assign coreFix_fpuMulDivExe_0_dispToRegQ$enq_x =
	     { CASE_coreFix_fpuMulDivExe_0_rsFpuMulDivdispat_ETC__q280,
	       coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData[53:7] } ;
  assign coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12757 ;
  assign coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[5:4];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[5:4];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      2'b10 /* unspecified value */ ;
      default: coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_dispToRegQ$EN_enq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv ;
  assign coreFix_fpuMulDivExe_0_dispToRegQ$EN_deq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv ;
  assign coreFix_fpuMulDivExe_0_dispToRegQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_fpuMulDivExe_0_dispToRegQ$EN_specUpdate_correctSpeculation =
	     1'd1 ;

  // submodule coreFix_fpuMulDivExe_0_fpuExec_divQ
  assign coreFix_fpuMulDivExe_0_fpuExec_divQ$enq_x =
	     { IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10775,
	       coreFix_fpuMulDivExe_0_regToExeQ$first[215],
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[215] &&
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10912,
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[215] &&
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10948,
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[215] &&
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10996,
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[215] &&
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d11038,
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[215] &&
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d11080,
	       coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd27 ||
	       coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd28,
	       coreFix_fpuMulDivExe_0_regToExeQ$first[214:196],
	       coreFix_fpuMulDivExe_0_regToExeQ$first[3:0] } ;
  assign coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12757 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[5:4];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[5:4];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_incorrectSpeculation_kill_tag =
	      2'b10 /* unspecified value */ ;
      default: coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_incorrectSpeculation_kill_tag =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_enq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[235:233] == 3'd4 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd3 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_deq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqDivPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv ;
  assign coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_specUpdate_correctSpeculation =
	     1'd1 ;

  // submodule coreFix_fpuMulDivExe_0_fpuExec_double_div
  assign coreFix_fpuMulDivExe_0_fpuExec_double_div$request_put =
	     { IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9232,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10712,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10775 } ;
  assign coreFix_fpuMulDivExe_0_fpuExec_double_div$EN_request_put =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[235:233] == 3'd4 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd3 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_double_div$EN_response_get =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqDivPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv ;

  // submodule coreFix_fpuMulDivExe_0_fpuExec_double_fma
  assign coreFix_fpuMulDivExe_0_fpuExec_double_fma$request_put =
	     { coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] != 5'd2,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10002,
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q281,
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q282,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10775 } ;
  assign coreFix_fpuMulDivExe_0_fpuExec_double_fma$EN_request_put =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[235:233] == 3'd4 &&
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd1 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd2 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd25 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd26 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd27 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd28) ;
  assign coreFix_fpuMulDivExe_0_fpuExec_double_fma$EN_response_get =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqFmaPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma ;

  // submodule coreFix_fpuMulDivExe_0_fpuExec_double_sqrt
  assign coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$request_put =
	     { IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9232,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10775 } ;
  assign coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$EN_request_put =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[235:233] == 3'd4 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd4 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$EN_response_get =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqSqrtPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt ;

  // submodule coreFix_fpuMulDivExe_0_fpuExec_fmaQ
  assign coreFix_fpuMulDivExe_0_fpuExec_fmaQ$enq_x =
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$enq_x ;
  assign coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12757 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[5:4];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[5:4];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_incorrectSpeculation_kill_tag =
	      2'b10 /* unspecified value */ ;
      default: coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_incorrectSpeculation_kill_tag =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_enq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[235:233] == 3'd4 &&
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd1 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd2 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd25 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd26 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd27 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd28) ;
  assign coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_deq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqFmaPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma ;
  assign coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_specUpdate_correctSpeculation =
	     1'd1 ;

  // submodule coreFix_fpuMulDivExe_0_fpuExec_simpleQ
  assign coreFix_fpuMulDivExe_0_fpuExec_simpleQ$enq_x =
	     { execFpuSimple___d11114,
	       coreFix_fpuMulDivExe_0_regToExeQ$first[214:196],
	       coreFix_fpuMulDivExe_0_regToExeQ$first[3:0] } ;
  assign coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12757 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[5:4];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[5:4];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_incorrectSpeculation_kill_tag =
	      2'b10 /* unspecified value */ ;
      default: coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_incorrectSpeculation_kill_tag =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_enq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[235:233] == 3'd4 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] != 5'd0 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] != 5'd1 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] != 5'd2 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] != 5'd25 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] != 5'd26 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] != 5'd27 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] != 5'd28 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] != 5'd3 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] != 5'd4 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_deq =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple ;
  assign coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_specUpdate_correctSpeculation =
	     1'd1 ;

  // submodule coreFix_fpuMulDivExe_0_fpuExec_sqrtQ
  assign coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$enq_x =
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$enq_x ;
  assign coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12757 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[5:4];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[5:4];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_incorrectSpeculation_kill_tag =
	      2'b10 /* unspecified value */ ;
      default: coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_incorrectSpeculation_kill_tag =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_enq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[235:233] == 3'd4 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd4 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_deq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqSqrtPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt ;
  assign coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_specUpdate_correctSpeculation =
	     1'd1 ;

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_divQ
  assign coreFix_fpuMulDivExe_0_mulDivExec_divQ$enq_x =
	     { coreFix_fpuMulDivExe_0_regToExeQ$first[219:217],
	       coreFix_fpuMulDivExe_0_regToExeQ$first[214:196],
	       coreFix_fpuMulDivExe_0_regToExeQ$first[3:0] } ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12757 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[5:4];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[5:4];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_incorrectSpeculation_kill_tag =
	      2'b10 /* unspecified value */ ;
      default: coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_incorrectSpeculation_kill_tag =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_enq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[235:233] == 3'd3 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[219:218] != 2'd0 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[219:218] != 2'd1 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_deq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqDivPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_specUpdate_correctSpeculation =
	     1'd1 ;

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$s_axis_dividend_tdata =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[216:215] == 2'd0) ?
	       _theResult___fst__h604027 :
	       a__h603605 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$s_axis_dividend_tuser =
	     { b__h603606 == 64'd0,
	       a__h603605,
	       coreFix_fpuMulDivExe_0_regToExeQ$first[216:215] == 2'd0,
	       x__h604041,
	       a__h603605[63],
	       8'd0 } ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$s_axis_divisor_tdata =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[216:215] == 2'd0) ?
	       _theResult___snd__h604028 :
	       b__h603606 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$s_axis_dividend_tvalid =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[235:233] == 3'd3 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[219:218] != 2'd0 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[219:218] != 2'd1 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$s_axis_divisor_tvalid =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[235:233] == 3'd3 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[219:218] != 2'd0 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[219:218] != 2'd1 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$m_axis_dout_tready =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqDivPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv ;

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_mulQ
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulQ$enq_x =
	     { coreFix_fpuMulDivExe_0_regToExeQ$first[219:217],
	       coreFix_fpuMulDivExe_0_regToExeQ$first[214:196],
	       coreFix_fpuMulDivExe_0_regToExeQ$first[3:0] } ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12757 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[5:4];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[5:4];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_incorrectSpeculation_kill_tag =
	      2'b10 /* unspecified value */ ;
      default: coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_incorrectSpeculation_kill_tag =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_enq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[235:233] == 3'd3 &&
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[219:218] == 2'd0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[219:218] == 2'd1) ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_deq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqMulPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_specUpdate_correctSpeculation =
	     1'd1 ;

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned$A = a__h603605 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned$B = b__h603606 ;

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned$A =
	     a__h603605 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned$B =
	     b__h603606 ;

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned$A =
	     a__h603605 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned$B =
	     b__h603606 ;

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ
  always@(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1 or
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned$P or
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned$P or
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned$P)
  begin
    case (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1[1:0])
      2'd0:
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$D_IN =
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned$P;
      2'd1:
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$D_IN =
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned$P;
      default: coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$D_IN =
		   coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned$P;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$ENQ =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1[2] ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$DEQ =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_deqEn$whas ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$CLR = 1'b0 ;

  // submodule coreFix_fpuMulDivExe_0_regToExeQ
  assign coreFix_fpuMulDivExe_0_regToExeQ$enq_x =
	     { CASE_coreFix_fpuMulDivExe_0_dispToRegQfirst_B_ETC__q284,
	       coreFix_fpuMulDivExe_0_dispToRegQ$first[22:4],
	       x__h482327,
	       x__h482328,
	       x__h482329,
	       coreFix_fpuMulDivExe_0_dispToRegQ$first[3:0] } ;
  assign coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12757 ;
  assign coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[5:4];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[5:4];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      2'b10 /* unspecified value */ ;
      default: coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_regToExeQ$EN_enq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv ;
  assign coreFix_fpuMulDivExe_0_regToExeQ$EN_deq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv ;
  assign coreFix_fpuMulDivExe_0_regToExeQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_fpuMulDivExe_0_regToExeQ$EN_specUpdate_correctSpeculation =
	     1'd1 ;

  // submodule coreFix_fpuMulDivExe_0_rsFpuMulDiv
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$enq_x =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__3475_AND__ETC___d14189) ?
	       { IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d12942,
		 regRenamingTable$rename_0_getRename,
		 rob$enqPort_0_getEnqInstTag,
		 specTagManager$currentSpecBits,
		 fetchStage$pipelines_0_first[194:192] == 3'd1,
		 specTagManager$nextSpecTag,
		 sbAggr$eagerLookup_0_get } :
	       { IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d13658,
		 regRenamingTable$rename_1_getRename,
		 rob$enqPort_1_getEnqInstTag,
		 renaming_spec_bits__h684325,
		 fetchStage$pipelines_1_first[194:192] == 3'd1,
		 specTagManager$nextSpecTag,
		 sbAggr$eagerLookup_1_get } ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_0_put =
	     coreFix_aluExe_0_rsAlu$setRegReady_0_put ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_1_put =
	     coreFix_aluExe_0_rsAlu$setRegReady_1_put ;
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6;
      default: coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_2_put =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_3_put =
	     coreFix_aluExe_0_rsAlu$setRegReady_3_put ;
  always@(MUX_coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put_1__SEL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1 or
	  MUX_coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put_1__SEL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put_1__SEL_1:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1;
      MUX_coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put_1__SEL_2:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_4;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_4;
      default: coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRobEnqTime_t = rob$getEnqTime ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12757 ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[5:4];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[5:4];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_incorrectSpeculation_kill_tag =
	      2'b10 /* unspecified value */ ;
      default: coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_incorrectSpeculation_kill_tag =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_enq =
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__3475_AND__ETC___d14189 ||
	      NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14270 &&
	      regRenamingTable_rename_1_canRename__3604_AND__ETC___d14323) ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRobEnqTime = 1'd1 ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_doDispatch =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_0_put =
	     WILL_FIRE_RL_coreFix_aluExe_0_doDispatchAlu &&
	     coreFix_aluExe_0_rsAlu$dispatchData[29] ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_1_put =
	     WILL_FIRE_RL_coreFix_aluExe_1_doDispatchAlu &&
	     coreFix_aluExe_1_rsAlu$dispatchData[29] ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_2_put =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[22] ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_3_put =
	     _dor1coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_3_put &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd0 &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd1 &&
	     coreFix_memExe_lsq$issueLd[72] ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_4_put =
	     (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq) &&
	     coreFix_memExe_lsq$firstSt[150] ||
	     (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq) &&
	     coreFix_memExe_lsq$firstLd[89] ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2680 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 &&
	     coreFix_memExe_lsq$getHit[8] &&
	     !coreFix_memExe_lsq$getHit[9] ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_specUpdate_correctSpeculation =
	     1'd1 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqMshr
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getEmptyEntryInit_r =
	     { x__h287938,
	       x__h287950,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_rqFromC_ETC___d2847,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_rqFromC_ETC___d2851,
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2855,
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2859,
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2863,
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2868,
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2872,
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2877,
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2881,
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2886,
	       x__h289804,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_rqFromC_ETC___d2894,
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2898,
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2902,
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2906 } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getRq_n =
	     x__h286506 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq_n =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState_n ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSlot_n =
	     3'h0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState_n =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[578:577] ==
	      2'd0) ?
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[576:574] :
	       (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512] :
		  3'd0) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc_n =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState_n ;
  always@(MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_1 or
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo or
	  coreFix_memExe_dMem_cache_m_banks_0_processAmo)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_1:
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_n =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[576:574];
      MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2:
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_n =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512];
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo:
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_n =
	      coreFix_memExe_dMem_cache_m_banks_0_processAmo[157:155];
      default: coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_n =
		   3'b010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain_addr =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:84] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setData_d =
	     { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] ==
	       2'd3,
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:0] } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setData_n =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[576:574] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_n =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_1__SEL_1 ?
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[576:574] :
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_slot =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_1__SEL_1 ?
	       MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_3__VAL_1 :
	       MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_3__VAL_2 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_state =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_1__SEL_1 ?
	       MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_2__VAL_1 :
	       3'd3 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setSucc_n =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[2:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setSucc_succ =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__VAL_1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getRq_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getSlot_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getData_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[2:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getRq_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[2:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getSlot_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[2:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getState_n =
	     3'h0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_setWaitSt_setSlot_clearData_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[2:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_setWaitSt_setSlot_clearData_slot =
	     { coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getSlot[57:55],
	       55'h15555555555555 } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_cRqTransfer_getEmptyEntryInit =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_sendRsToP_cRq_setWaitSt_setSlot_clearData =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_releaseEntry =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2657 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd4 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_setData =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__SEL_2 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_setStateSlot =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_1__SEL_1 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[570] &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2755 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2758 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_setSucc =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2075 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState ==
	      3'd1) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_stuck_get = 1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_0$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_0$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1$EN =
	     1'd1 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_0$EN =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_1$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_1$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2$EN =
	     1'd1 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_0$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$whas ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_1$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_1$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$EN =
	     1'd1 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_0$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_0$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1$EN =
	     1'd1 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_0$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_lat_0$whas ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_1$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_1$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2$EN =
	     1'd1 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_0$EN =
	     EN_dCacheToParent_fromP_enq ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_1$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_1$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$EN =
	     1'd1 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$EN =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2640 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd2 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3) ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d2785 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq[1:0] ==
	     2'd0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1$EN =
	     MUX_flush_reservation$write_1__SEL_2 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_pRqMshr
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$getEmptyEntryInit_r =
	     { SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2933,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q285 } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq_n =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[575:574] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getState_n =
	     2'h0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_releaseEntry_n =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[575:574] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_setDone_setData_d =
	     { !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] ==
	       2'd3,
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:0] } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_setDone_setData_n =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[575:574] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getData_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[1:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getRq_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[1:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_releaseEntry_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[1:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_getEmptyEntryInit =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_sendRsToP_pRq_releaseEntry =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_pipelineResp_releaseEntry =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[570] ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2755 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2758) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_pipelineResp_setDone_setData =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__SEL_1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_stuck_get = 1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_pipeline
  always@(MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__SEL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__VAL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2 or
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo or
	  coreFix_memExe_dMem_cache_m_banks_0_processAmo or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__SEL_1:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_swapRq =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__VAL_1;
      MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_swapRq =
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc;
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_swapRq =
	      coreFix_memExe_dMem_cache_m_banks_0_processAmo[3:0];
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_swapRq = 4'd2;
      default: coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_swapRq =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  always@(MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__SEL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_3__VAL_1 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__SEL_1:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_updateRep =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_3__VAL_1;
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_updateRep =
	      1'd0;
      MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2 ||
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_updateRep =
	      1'd1;
      default: coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_updateRep =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  always@(MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__SEL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_2 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_3 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__SEL_1:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_wrRam =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_1;
      MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_wrRam =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_2;
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_wrRam =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_3;
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_wrRam =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_4;
      default: coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_wrRam =
		   570'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_1 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_2 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_3 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_r =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_1;
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_r =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_2;
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_r =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_3;
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_r =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_4;
      default: coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_r =
		   584'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline$EN_send =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline$EN_deqWrite =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__SEL_1 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd4 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_0$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_lat_0$whas ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_0$EN =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_1$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_1$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_0$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_lat_0$whas ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_1$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_1$EN =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_2
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_2$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_2$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_0$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_lat_0$whas ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_1$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_1$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_0$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_lat_0$whas ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_1$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_1$EN =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_2
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_2$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_2$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_IN =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp ?
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$D_OUT :
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$D_OUT ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$ENQ =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromSendRsToP ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$DEQ =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$CLR = 1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[576:574] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$ENQ =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2709 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	       3'd1) &&
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2713) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$DEQ =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$CLR =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[2:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$ENQ =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$DEQ =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromSendRsToP ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$CLR =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_0$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_0$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1$EN =
	     1'd1 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_0$EN =
	     EN_dCacheToParent_rqToP_deq ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_1$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_1$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2$EN =
	     1'd1 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_0$EN =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_1$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_1$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2$EN =
	     1'd1 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_IN =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__SEL_1 ?
	       MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__VAL_1 :
	       MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__VAL_2 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$ENQ =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[570] &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2755 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2758 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2724 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$DEQ =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$CLR = 1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_0$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_0$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1$EN =
	     1'd1 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_0$EN =
	     EN_dCacheToParent_rsToP_deq ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_1$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_1$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2$EN =
	     1'd1 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_0$EN =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_1$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_1$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2$EN =
	     1'd1 ;

  // submodule coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_0
  assign coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_0$D_IN = 1'b0 ;
  assign coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_0$EN = 1'b0 ;

  // submodule coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1
  assign coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1$D_IN = 1'd1 ;
  assign coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1$EN = 1'd1 ;

  // submodule coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_0
  assign coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_0$D_IN = 1'b0 ;
  assign coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_0$EN = 1'b0 ;

  // submodule coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_1
  assign coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2
  assign coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2$D_IN = 1'd1 ;
  assign coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2$EN = 1'd1 ;

  // submodule coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_0
  assign coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_0$D_IN = 1'b0 ;
  assign coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_0$EN = 1'b0 ;

  // submodule coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_1
  assign coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2
  assign coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2$D_IN = 1'd1 ;
  assign coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2$EN = 1'd1 ;

  // submodule coreFix_memExe_dTlb
  assign coreFix_memExe_dTlb$perf_req_r = 3'h0 ;
  assign coreFix_memExe_dTlb$perf_setStatus_doStats = 1'b0 ;
  assign coreFix_memExe_dTlb$procReq_req =
	     { coreFix_memExe_regToExeQ$first[180:178],
	       coreFix_memExe_regToExeQ$first[145:132],
	       coreFix_memExe_lsq$getOrigBE << vaddr__h183084[2:0],
	       vaddr__h183084,
	       coreFix_memExe_lsq$getOrigBE[7] ?
		 vaddr__h183084[2:0] != 3'd0 :
		 (coreFix_memExe_lsq$getOrigBE[3] ?
		    vaddr__h183084[1:0] != 2'd0 :
		    coreFix_memExe_lsq$getOrigBE[1] && vaddr__h183084[0]),
	       coreFix_memExe_regToExeQ$first[3:0] } ;
  assign coreFix_memExe_dTlb$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12757 ;
  assign coreFix_memExe_dTlb$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_memExe_dTlb$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[5:4];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_memExe_dTlb$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[5:4];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_memExe_dTlb$specUpdate_incorrectSpeculation_kill_tag =
	      2'b10 /* unspecified value */ ;
      default: coreFix_memExe_dTlb$specUpdate_incorrectSpeculation_kill_tag =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_dTlb$toParent_ldTransRsFromP_enq_x =
	     { l2Tlb$toChildren_rsToC_first[80:0],
	       l2Tlb$toChildren_rsToC_first[82:81] } ;
  assign coreFix_memExe_dTlb$updateVMInfo_vm =
	     MUX_coreFix_memExe_dTlb$updateVMInfo_1__SEL_1 ?
	       MUX_coreFix_memExe_dTlb$updateVMInfo_1__VAL_1 :
	       MUX_coreFix_memExe_dTlb$updateVMInfo_1__VAL_1 ;
  assign coreFix_memExe_dTlb$EN_flush =
	     WILL_FIRE_RL_prepareCachesAndTlbs && flush_tlbs ||
	     WILL_FIRE_RL_rl_debug_resume ;
  assign coreFix_memExe_dTlb$EN_updateVMInfo =
	     WILL_FIRE_RL_prepareCachesAndTlbs && update_vm_info ||
	     WILL_FIRE_RL_rl_debug_resume ;
  assign coreFix_memExe_dTlb$EN_procReq =
	     CAN_FIRE_RL_coreFix_memExe_doExeMem ;
  assign coreFix_memExe_dTlb$EN_deqProcResp =
	     CAN_FIRE_RL_coreFix_memExe_doFinishMem ;
  assign coreFix_memExe_dTlb$EN_toParent_rqToP_deq = CAN_FIRE_RL_sendDTlbReq ;
  assign coreFix_memExe_dTlb$EN_toParent_ldTransRsFromP_enq =
	     CAN_FIRE_RL_sendRsToDTlb ;
  assign coreFix_memExe_dTlb$EN_toParent_flush_request_get =
	     CAN_FIRE_RL_mkConnectionGetPut ;
  assign coreFix_memExe_dTlb$EN_toParent_flush_response_put =
	     CAN_FIRE_RL_sendFlushDone ;
  assign coreFix_memExe_dTlb$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_memExe_dTlb$EN_specUpdate_correctSpeculation = 1'd1 ;
  assign coreFix_memExe_dTlb$EN_perf_setStatus = 1'b0 ;
  assign coreFix_memExe_dTlb$EN_perf_req = 1'b0 ;
  assign coreFix_memExe_dTlb$EN_perf_resp = 1'b0 ;

  // submodule coreFix_memExe_dispToRegQ
  assign coreFix_memExe_dispToRegQ$enq_x =
	     { coreFix_memExe_rsMem$dispatchData[92:58],
	       coreFix_memExe_rsMem$dispatchData[53:11],
	       coreFix_memExe_rsMem$dispatchData[57:54],
	       coreFix_memExe_rsMem$dispatchData[10:7] } ;
  assign coreFix_memExe_dispToRegQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12757 ;
  assign coreFix_memExe_dispToRegQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_memExe_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[5:4];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_memExe_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[5:4];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_memExe_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      2'b10 /* unspecified value */ ;
      default: coreFix_memExe_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_dispToRegQ$EN_enq =
	     WILL_FIRE_RL_coreFix_memExe_doDispatchMem ;
  assign coreFix_memExe_dispToRegQ$EN_deq =
	     WILL_FIRE_RL_coreFix_memExe_doRegReadMem ;
  assign coreFix_memExe_dispToRegQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_memExe_dispToRegQ$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_memExe_forwardQ_clearReq_dummy2_0
  assign coreFix_memExe_forwardQ_clearReq_dummy2_0$D_IN = 1'b0 ;
  assign coreFix_memExe_forwardQ_clearReq_dummy2_0$EN = 1'b0 ;

  // submodule coreFix_memExe_forwardQ_clearReq_dummy2_1
  assign coreFix_memExe_forwardQ_clearReq_dummy2_1$D_IN = 1'd1 ;
  assign coreFix_memExe_forwardQ_clearReq_dummy2_1$EN = 1'd1 ;

  // submodule coreFix_memExe_forwardQ_deqReq_dummy2_0
  assign coreFix_memExe_forwardQ_deqReq_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_forwardQ_deqReq_dummy2_0$EN =
	     WILL_FIRE_RL_coreFix_memExe_doRespLdForward ;

  // submodule coreFix_memExe_forwardQ_deqReq_dummy2_1
  assign coreFix_memExe_forwardQ_deqReq_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_forwardQ_deqReq_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_forwardQ_deqReq_dummy2_2
  assign coreFix_memExe_forwardQ_deqReq_dummy2_2$D_IN = 1'd1 ;
  assign coreFix_memExe_forwardQ_deqReq_dummy2_2$EN = 1'd1 ;

  // submodule coreFix_memExe_forwardQ_enqReq_dummy2_0
  assign coreFix_memExe_forwardQ_enqReq_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_forwardQ_enqReq_dummy2_0$EN =
	     _dor1coreFix_memExe_forwardQ_enqReq_dummy2_0$EN_write &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd0 &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd1 ;

  // submodule coreFix_memExe_forwardQ_enqReq_dummy2_1
  assign coreFix_memExe_forwardQ_enqReq_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_forwardQ_enqReq_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_forwardQ_enqReq_dummy2_2
  assign coreFix_memExe_forwardQ_enqReq_dummy2_2$D_IN = 1'd1 ;
  assign coreFix_memExe_forwardQ_enqReq_dummy2_2$EN = 1'd1 ;

  // submodule coreFix_memExe_lsq
  assign coreFix_memExe_lsq$enqLd_dst =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__3475_AND__ETC___d14215) ?
	       regRenamingTable$rename_0_getRename[8:0] :
	       regRenamingTable$rename_1_getRename[8:0] ;
  assign coreFix_memExe_lsq$enqLd_inst_tag =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__3475_AND__ETC___d14215) ?
	       rob$enqPort_0_getEnqInstTag :
	       rob$enqPort_1_getEnqInstTag ;
  assign coreFix_memExe_lsq$enqLd_mem_inst =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__3475_AND__ETC___d14215) ?
	       fetchStage$pipelines_0_first[191:174] :
	       fetchStage$pipelines_1_first[191:174] ;
  assign coreFix_memExe_lsq$enqLd_spec_bits =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__3475_AND__ETC___d14215) ?
	       specTagManager$currentSpecBits :
	       renaming_spec_bits__h684325 ;
  assign coreFix_memExe_lsq$enqSt_dst =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__3475_AND__ETC___d14223) ?
	       regRenamingTable$rename_0_getRename[8:0] :
	       regRenamingTable$rename_1_getRename[8:0] ;
  assign coreFix_memExe_lsq$enqSt_inst_tag =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__3475_AND__ETC___d14223) ?
	       rob$enqPort_0_getEnqInstTag :
	       rob$enqPort_1_getEnqInstTag ;
  assign coreFix_memExe_lsq$enqSt_mem_inst =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__3475_AND__ETC___d14223) ?
	       fetchStage$pipelines_0_first[191:174] :
	       fetchStage$pipelines_1_first[191:174] ;
  assign coreFix_memExe_lsq$enqSt_spec_bits =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__3475_AND__ETC___d14223) ?
	       specTagManager$currentSpecBits :
	       renaming_spec_bits__h684325 ;
  assign coreFix_memExe_lsq$getHit_t =
	     MUX_coreFix_memExe_lsq$getHit_1__SEL_1 ?
	       MUX_coreFix_memExe_lsq$getHit_1__VAL_1 :
	       MUX_coreFix_memExe_lsq$getHit_1__VAL_1 ;
  assign coreFix_memExe_lsq$getOrigBE_t =
	     coreFix_memExe_regToExeQ$first[135:132] ;
  assign coreFix_memExe_lsq$issueLd_lsqTag =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ?
	       coreFix_memExe_lsq$getIssueLd[74:72] :
	       coreFix_memExe_issueLd$wget[74:72] ;
  assign coreFix_memExe_lsq$issueLd_paddr =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ?
	       coreFix_memExe_lsq$getIssueLd[71:8] :
	       coreFix_memExe_issueLd$wget[71:8] ;
  assign coreFix_memExe_lsq$issueLd_sbRes =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ?
	       MUX_coreFix_memExe_lsq$issueLd_4__VAL_1 :
	       coreFix_memExe_stb$search ;
  assign coreFix_memExe_lsq$issueLd_shiftedBE =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ?
	       coreFix_memExe_lsq$getIssueLd[7:0] :
	       coreFix_memExe_issueLd$wget[7:0] ;
  assign coreFix_memExe_lsq$respLd_alignedData =
	     WILL_FIRE_RL_coreFix_memExe_doRespLdMem ?
	       MUX_coreFix_memExe_lsq$respLd_2__VAL_1 :
	       MUX_coreFix_memExe_lsq$respLd_2__VAL_2 ;
  assign coreFix_memExe_lsq$respLd_t =
	     WILL_FIRE_RL_coreFix_memExe_doRespLdMem ?
	       MUX_coreFix_memExe_lsq$respLd_1__VAL_1 :
	       MUX_coreFix_memExe_lsq$respLd_1__VAL_2 ;
  assign coreFix_memExe_lsq$setAtCommit_0_put =
	     rob$deqPort_0_deq_data[14:11] ;
  assign coreFix_memExe_lsq$setAtCommit_1_put =
	     rob$deqPort_1_deq_data[14:11] ;
  assign coreFix_memExe_lsq$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12757 ;
  assign coreFix_memExe_lsq$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_memExe_lsq$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[5:4];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_memExe_lsq$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[5:4];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_memExe_lsq$specUpdate_incorrectSpeculation_kill_tag =
	      2'b10 /* unspecified value */ ;
      default: coreFix_memExe_lsq$specUpdate_incorrectSpeculation_kill_tag =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_lsq$updateAddr_fault =
	     { (!coreFix_memExe_dTlb$procResp[4] &&
		!coreFix_memExe_dTlb$procResp[98] &&
		coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1793) ?
		 coreFix_memExe_dTlb$procResp[93:91] == 3'd2 ||
		 coreFix_memExe_dTlb$procResp[93:91] == 3'd3 ||
		 coreFix_memExe_dTlb$procResp[4] :
		 coreFix_memExe_dTlb$procResp[4] ||
		 coreFix_memExe_dTlb$procResp[98],
	       IF_IF_coreFix_memExe_dTlb_procResp__774_BIT_98_ETC___d1919 } ;
  assign coreFix_memExe_lsq$updateAddr_isMMIO =
	     coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1793 ;
  assign coreFix_memExe_lsq$updateAddr_lsqTag =
	     coreFix_memExe_dTlb$procResp[80:77] ;
  assign coreFix_memExe_lsq$updateAddr_paddr =
	     coreFix_memExe_dTlb$procResp[162:99] ;
  assign coreFix_memExe_lsq$updateAddr_shiftedBE =
	     coreFix_memExe_dTlb$procResp[76:69] ;
  assign coreFix_memExe_lsq$updateData_d =
	     (coreFix_memExe_regToExeQ$first[180:178] == 3'd4) ?
	       coreFix_memExe_regToExeQ$first[67:4] :
	       shiftData__h183089 ;
  assign coreFix_memExe_lsq$updateData_t =
	     coreFix_memExe_regToExeQ$first[133:132] ;
  assign coreFix_memExe_lsq$wakeupLdStalledBySB_sbIdx =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[148] ;
  assign coreFix_memExe_lsq$EN_enqLd =
	     WILL_FIRE_RL_renameStage_doRenaming && _dfoo7 ;
  assign coreFix_memExe_lsq$EN_enqSt =
	     WILL_FIRE_RL_renameStage_doRenaming && _dfoo2 ;
  assign coreFix_memExe_lsq$EN_getHit =
	     MUX_coreFix_memExe_lsq$getHit_1__SEL_1 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 ;
  assign coreFix_memExe_lsq$EN_updateData =
	     WILL_FIRE_RL_coreFix_memExe_doExeMem &&
	     coreFix_memExe_regToExeQ$first[135] ;
  assign coreFix_memExe_lsq$EN_updateAddr =
	     CAN_FIRE_RL_coreFix_memExe_doFinishMem ;
  assign coreFix_memExe_lsq$EN_issueLd =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign coreFix_memExe_lsq$EN_getIssueLd =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ;
  assign coreFix_memExe_lsq$EN_respLd =
	     WILL_FIRE_RL_coreFix_memExe_doRespLdMem ||
	     WILL_FIRE_RL_coreFix_memExe_doRespLdForward ;
  assign coreFix_memExe_lsq$EN_deqLd =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;
  assign coreFix_memExe_lsq$EN_deqSt =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_Fence ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_St_Mem ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_fault ;
  assign coreFix_memExe_lsq$EN_wakeupLdStalledBySB =
	     MUX_coreFix_memExe_lsq$wakeupLdStalledBySB_1__SEL_1 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd1 ;
  assign coreFix_memExe_lsq$EN_setAtCommit_0_put =
	     CAN_FIRE_RL_commitStage_doSetLSQAtCommit ;
  assign coreFix_memExe_lsq$EN_setAtCommit_1_put =
	     CAN_FIRE_RL_commitStage_doSetLSQAtCommit_1 ;
  assign coreFix_memExe_lsq$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_memExe_lsq$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_memExe_memRespLdQ_clearReq_dummy2_0
  assign coreFix_memExe_memRespLdQ_clearReq_dummy2_0$D_IN = 1'b0 ;
  assign coreFix_memExe_memRespLdQ_clearReq_dummy2_0$EN = 1'b0 ;

  // submodule coreFix_memExe_memRespLdQ_clearReq_dummy2_1
  assign coreFix_memExe_memRespLdQ_clearReq_dummy2_1$D_IN = 1'd1 ;
  assign coreFix_memExe_memRespLdQ_clearReq_dummy2_1$EN = 1'd1 ;

  // submodule coreFix_memExe_memRespLdQ_deqReq_dummy2_0
  assign coreFix_memExe_memRespLdQ_deqReq_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_memRespLdQ_deqReq_dummy2_0$EN =
	     WILL_FIRE_RL_coreFix_memExe_doRespLdMem ;

  // submodule coreFix_memExe_memRespLdQ_deqReq_dummy2_1
  assign coreFix_memExe_memRespLdQ_deqReq_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_memRespLdQ_deqReq_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_memRespLdQ_deqReq_dummy2_2
  assign coreFix_memExe_memRespLdQ_deqReq_dummy2_2$D_IN = 1'd1 ;
  assign coreFix_memExe_memRespLdQ_deqReq_dummy2_2$EN = 1'd1 ;

  // submodule coreFix_memExe_memRespLdQ_enqReq_dummy2_0
  assign coreFix_memExe_memRespLdQ_enqReq_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_memRespLdQ_enqReq_dummy2_0$EN =
	     MUX_coreFix_memExe_lsq$getHit_1__SEL_1 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 ;

  // submodule coreFix_memExe_memRespLdQ_enqReq_dummy2_1
  assign coreFix_memExe_memRespLdQ_enqReq_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_memRespLdQ_enqReq_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_memRespLdQ_enqReq_dummy2_2
  assign coreFix_memExe_memRespLdQ_enqReq_dummy2_2$D_IN = 1'd1 ;
  assign coreFix_memExe_memRespLdQ_enqReq_dummy2_2$EN = 1'd1 ;

  // submodule coreFix_memExe_regToExeQ
  assign coreFix_memExe_regToExeQ$enq_x =
	     { coreFix_memExe_dispToRegQ$first[85:51],
	       coreFix_memExe_dispToRegQ$first[17:4],
	       x__h182998,
	       x__h182999,
	       coreFix_memExe_dispToRegQ$first[3:0] } ;
  assign coreFix_memExe_regToExeQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12757 ;
  assign coreFix_memExe_regToExeQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_memExe_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[5:4];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_memExe_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[5:4];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_memExe_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      2'b10 /* unspecified value */ ;
      default: coreFix_memExe_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_regToExeQ$EN_enq =
	     WILL_FIRE_RL_coreFix_memExe_doRegReadMem ;
  assign coreFix_memExe_regToExeQ$EN_deq =
	     CAN_FIRE_RL_coreFix_memExe_doExeMem ;
  assign coreFix_memExe_regToExeQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_memExe_regToExeQ$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_memExe_reqLdQ_data_0_dummy2_0
  assign coreFix_memExe_reqLdQ_data_0_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLdQ_data_0_dummy2_0$EN =
	     _dor1coreFix_memExe_reqLdQ_data_0_dummy2_0$EN_write &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd0 ;

  // submodule coreFix_memExe_reqLdQ_data_0_dummy2_1
  assign coreFix_memExe_reqLdQ_data_0_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_reqLdQ_data_0_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_reqLdQ_deqP_dummy2_0
  assign coreFix_memExe_reqLdQ_deqP_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLdQ_deqP_dummy2_0$EN =
	     WILL_FIRE_RL_coreFix_memExe_sendLdToMem ;

  // submodule coreFix_memExe_reqLdQ_deqP_dummy2_1
  assign coreFix_memExe_reqLdQ_deqP_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_reqLdQ_deqP_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_reqLdQ_empty_dummy2_0
  assign coreFix_memExe_reqLdQ_empty_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLdQ_empty_dummy2_0$EN =
	     _dor1coreFix_memExe_reqLdQ_empty_dummy2_0$EN_write &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd0 ;

  // submodule coreFix_memExe_reqLdQ_empty_dummy2_1
  assign coreFix_memExe_reqLdQ_empty_dummy2_1$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLdQ_empty_dummy2_1$EN =
	     WILL_FIRE_RL_coreFix_memExe_sendLdToMem ;

  // submodule coreFix_memExe_reqLdQ_empty_dummy2_2
  assign coreFix_memExe_reqLdQ_empty_dummy2_2$D_IN = 1'b0 ;
  assign coreFix_memExe_reqLdQ_empty_dummy2_2$EN = 1'b0 ;

  // submodule coreFix_memExe_reqLdQ_enqP_dummy2_0
  assign coreFix_memExe_reqLdQ_enqP_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLdQ_enqP_dummy2_0$EN =
	     _dor1coreFix_memExe_reqLdQ_enqP_dummy2_0$EN_write &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd0 ;

  // submodule coreFix_memExe_reqLdQ_enqP_dummy2_1
  assign coreFix_memExe_reqLdQ_enqP_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_reqLdQ_enqP_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_reqLdQ_full_dummy2_0
  assign coreFix_memExe_reqLdQ_full_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLdQ_full_dummy2_0$EN =
	     _dor1coreFix_memExe_reqLdQ_full_dummy2_0$EN_write &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd0 ;

  // submodule coreFix_memExe_reqLdQ_full_dummy2_1
  assign coreFix_memExe_reqLdQ_full_dummy2_1$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLdQ_full_dummy2_1$EN =
	     WILL_FIRE_RL_coreFix_memExe_sendLdToMem ;

  // submodule coreFix_memExe_reqLdQ_full_dummy2_2
  assign coreFix_memExe_reqLdQ_full_dummy2_2$D_IN = 1'b0 ;
  assign coreFix_memExe_reqLdQ_full_dummy2_2$EN = 1'b0 ;

  // submodule coreFix_memExe_reqLrScAmoQ_data_0_dummy2_0
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_0$EN =
	     coreFix_memExe_reqLrScAmoQ_enqP_lat_0$whas ;

  // submodule coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_reqLrScAmoQ_deqP_dummy2_0
  assign coreFix_memExe_reqLrScAmoQ_deqP_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLrScAmoQ_deqP_dummy2_0$EN =
	     CAN_FIRE_RL_coreFix_memExe_sendLrScAmoToMem ;

  // submodule coreFix_memExe_reqLrScAmoQ_deqP_dummy2_1
  assign coreFix_memExe_reqLrScAmoQ_deqP_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_reqLrScAmoQ_deqP_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_reqLrScAmoQ_empty_dummy2_0
  assign coreFix_memExe_reqLrScAmoQ_empty_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLrScAmoQ_empty_dummy2_0$EN =
	     coreFix_memExe_reqLrScAmoQ_enqP_lat_0$whas ;

  // submodule coreFix_memExe_reqLrScAmoQ_empty_dummy2_1
  assign coreFix_memExe_reqLrScAmoQ_empty_dummy2_1$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLrScAmoQ_empty_dummy2_1$EN =
	     CAN_FIRE_RL_coreFix_memExe_sendLrScAmoToMem ;

  // submodule coreFix_memExe_reqLrScAmoQ_empty_dummy2_2
  assign coreFix_memExe_reqLrScAmoQ_empty_dummy2_2$D_IN = 1'b0 ;
  assign coreFix_memExe_reqLrScAmoQ_empty_dummy2_2$EN = 1'b0 ;

  // submodule coreFix_memExe_reqLrScAmoQ_enqP_dummy2_0
  assign coreFix_memExe_reqLrScAmoQ_enqP_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLrScAmoQ_enqP_dummy2_0$EN =
	     coreFix_memExe_reqLrScAmoQ_enqP_lat_0$whas ;

  // submodule coreFix_memExe_reqLrScAmoQ_enqP_dummy2_1
  assign coreFix_memExe_reqLrScAmoQ_enqP_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_reqLrScAmoQ_enqP_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_reqLrScAmoQ_full_dummy2_0
  assign coreFix_memExe_reqLrScAmoQ_full_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLrScAmoQ_full_dummy2_0$EN =
	     coreFix_memExe_reqLrScAmoQ_enqP_lat_0$whas ;

  // submodule coreFix_memExe_reqLrScAmoQ_full_dummy2_1
  assign coreFix_memExe_reqLrScAmoQ_full_dummy2_1$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLrScAmoQ_full_dummy2_1$EN =
	     CAN_FIRE_RL_coreFix_memExe_sendLrScAmoToMem ;

  // submodule coreFix_memExe_reqLrScAmoQ_full_dummy2_2
  assign coreFix_memExe_reqLrScAmoQ_full_dummy2_2$D_IN = 1'b0 ;
  assign coreFix_memExe_reqLrScAmoQ_full_dummy2_2$EN = 1'b0 ;

  // submodule coreFix_memExe_reqStQ_data_0_dummy2_0
  assign coreFix_memExe_reqStQ_data_0_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqStQ_data_0_dummy2_0$EN =
	     CAN_FIRE_RL_coreFix_memExe_doIssueSB ;

  // submodule coreFix_memExe_reqStQ_data_0_dummy2_1
  assign coreFix_memExe_reqStQ_data_0_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_reqStQ_data_0_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_reqStQ_deqP_dummy2_0
  assign coreFix_memExe_reqStQ_deqP_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqStQ_deqP_dummy2_0$EN =
	     WILL_FIRE_RL_coreFix_memExe_sendStToMem ;

  // submodule coreFix_memExe_reqStQ_deqP_dummy2_1
  assign coreFix_memExe_reqStQ_deqP_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_reqStQ_deqP_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_reqStQ_empty_dummy2_0
  assign coreFix_memExe_reqStQ_empty_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqStQ_empty_dummy2_0$EN =
	     CAN_FIRE_RL_coreFix_memExe_doIssueSB ;

  // submodule coreFix_memExe_reqStQ_empty_dummy2_1
  assign coreFix_memExe_reqStQ_empty_dummy2_1$D_IN = 1'd1 ;
  assign coreFix_memExe_reqStQ_empty_dummy2_1$EN =
	     WILL_FIRE_RL_coreFix_memExe_sendStToMem ;

  // submodule coreFix_memExe_reqStQ_empty_dummy2_2
  assign coreFix_memExe_reqStQ_empty_dummy2_2$D_IN = 1'b0 ;
  assign coreFix_memExe_reqStQ_empty_dummy2_2$EN = 1'b0 ;

  // submodule coreFix_memExe_reqStQ_enqP_dummy2_0
  assign coreFix_memExe_reqStQ_enqP_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqStQ_enqP_dummy2_0$EN =
	     CAN_FIRE_RL_coreFix_memExe_doIssueSB ;

  // submodule coreFix_memExe_reqStQ_enqP_dummy2_1
  assign coreFix_memExe_reqStQ_enqP_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_reqStQ_enqP_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_reqStQ_full_dummy2_0
  assign coreFix_memExe_reqStQ_full_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqStQ_full_dummy2_0$EN =
	     CAN_FIRE_RL_coreFix_memExe_doIssueSB ;

  // submodule coreFix_memExe_reqStQ_full_dummy2_1
  assign coreFix_memExe_reqStQ_full_dummy2_1$D_IN = 1'd1 ;
  assign coreFix_memExe_reqStQ_full_dummy2_1$EN =
	     WILL_FIRE_RL_coreFix_memExe_sendStToMem ;

  // submodule coreFix_memExe_reqStQ_full_dummy2_2
  assign coreFix_memExe_reqStQ_full_dummy2_2$D_IN = 1'b0 ;
  assign coreFix_memExe_reqStQ_full_dummy2_2$EN = 1'b0 ;

  // submodule coreFix_memExe_respLrScAmoQ_clearReq_dummy2_0
  assign coreFix_memExe_respLrScAmoQ_clearReq_dummy2_0$D_IN = 1'b0 ;
  assign coreFix_memExe_respLrScAmoQ_clearReq_dummy2_0$EN = 1'b0 ;

  // submodule coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1
  assign coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1$D_IN = 1'd1 ;
  assign coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1$EN = 1'd1 ;

  // submodule coreFix_memExe_respLrScAmoQ_deqReq_dummy2_0
  assign coreFix_memExe_respLrScAmoQ_deqReq_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_respLrScAmoQ_deqReq_dummy2_0$EN =
	     coreFix_memExe_respLrScAmoQ_deqReq_lat_0$whas ;

  // submodule coreFix_memExe_respLrScAmoQ_deqReq_dummy2_1
  assign coreFix_memExe_respLrScAmoQ_deqReq_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_respLrScAmoQ_deqReq_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2
  assign coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2$D_IN = 1'd1 ;
  assign coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2$EN = 1'd1 ;

  // submodule coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0
  assign coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0$EN =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2623 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd2 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3) ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo ;

  // submodule coreFix_memExe_respLrScAmoQ_enqReq_dummy2_1
  assign coreFix_memExe_respLrScAmoQ_enqReq_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_respLrScAmoQ_enqReq_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2
  assign coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2$D_IN = 1'd1 ;
  assign coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2$EN = 1'd1 ;

  // submodule coreFix_memExe_rsMem
  assign coreFix_memExe_rsMem$enq_x =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__3475_AND__ETC___d14195) ?
	       { fetchStage$pipelines_0_first[191:189],
		 IF_fetchStage_pipelines_0_first__2816_BIT_160__ETC___d14211,
		 regRenamingTable$rename_0_getRename,
		 rob$enqPort_0_getEnqInstTag,
		 specTagManager$currentSpecBits,
		 fetchStage$pipelines_0_first[194:192] == 3'd1,
		 specTagManager$nextSpecTag,
		 sbAggr$eagerLookup_0_get } :
	       { fetchStage$pipelines_1_first[191:189],
		 IF_fetchStage_pipelines_1_first__2825_BIT_160__ETC___d14340,
		 regRenamingTable$rename_1_getRename,
		 rob$enqPort_1_getEnqInstTag,
		 renaming_spec_bits__h684325,
		 fetchStage$pipelines_1_first[194:192] == 3'd1,
		 specTagManager$nextSpecTag,
		 sbAggr$eagerLookup_1_get } ;
  assign coreFix_memExe_rsMem$setRegReady_0_put =
	     coreFix_aluExe_0_rsAlu$setRegReady_0_put ;
  assign coreFix_memExe_rsMem$setRegReady_1_put =
	     coreFix_aluExe_0_rsAlu$setRegReady_1_put ;
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1:
	  coreFix_memExe_rsMem$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2:
	  coreFix_memExe_rsMem$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3:
	  coreFix_memExe_rsMem$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4:
	  coreFix_memExe_rsMem$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5:
	  coreFix_memExe_rsMem$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6:
	  coreFix_memExe_rsMem$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6;
      default: coreFix_memExe_rsMem$setRegReady_2_put =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_rsMem$setRegReady_3_put =
	     coreFix_aluExe_0_rsAlu$setRegReady_3_put ;
  always@(MUX_coreFix_memExe_rsMem$setRegReady_4_put_1__SEL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1 or
	  MUX_coreFix_memExe_rsMem$setRegReady_4_put_1__SEL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_memExe_rsMem$setRegReady_4_put_1__SEL_1:
	  coreFix_memExe_rsMem$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1;
      MUX_coreFix_memExe_rsMem$setRegReady_4_put_1__SEL_2:
	  coreFix_memExe_rsMem$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3:
	  coreFix_memExe_rsMem$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_4;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4:
	  coreFix_memExe_rsMem$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_4;
      default: coreFix_memExe_rsMem$setRegReady_4_put =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_rsMem$setRobEnqTime_t = rob$getEnqTime ;
  assign coreFix_memExe_rsMem$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12757 ;
  assign coreFix_memExe_rsMem$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_memExe_rsMem$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[5:4];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_memExe_rsMem$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[5:4];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_memExe_rsMem$specUpdate_incorrectSpeculation_kill_tag =
	      2'b10 /* unspecified value */ ;
      default: coreFix_memExe_rsMem$specUpdate_incorrectSpeculation_kill_tag =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_rsMem$EN_enq =
	     WILL_FIRE_RL_renameStage_doRenaming && _dfoo12 ;
  assign coreFix_memExe_rsMem$EN_setRobEnqTime = 1'd1 ;
  assign coreFix_memExe_rsMem$EN_doDispatch =
	     WILL_FIRE_RL_coreFix_memExe_doDispatchMem ;
  assign coreFix_memExe_rsMem$EN_setRegReady_0_put =
	     WILL_FIRE_RL_coreFix_aluExe_0_doDispatchAlu &&
	     coreFix_aluExe_0_rsAlu$dispatchData[29] ;
  assign coreFix_memExe_rsMem$EN_setRegReady_1_put =
	     WILL_FIRE_RL_coreFix_aluExe_1_doDispatchAlu &&
	     coreFix_aluExe_1_rsAlu$dispatchData[29] ;
  assign coreFix_memExe_rsMem$EN_setRegReady_2_put =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[22] ;
  assign coreFix_memExe_rsMem$EN_setRegReady_3_put =
	     _dor1coreFix_memExe_rsMem$EN_setRegReady_3_put &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd0 &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd1 &&
	     coreFix_memExe_lsq$issueLd[72] ;
  assign coreFix_memExe_rsMem$EN_setRegReady_4_put =
	     (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq) &&
	     coreFix_memExe_lsq$firstSt[150] ||
	     (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq) &&
	     coreFix_memExe_lsq$firstLd[89] ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2680 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 &&
	     coreFix_memExe_lsq$getHit[8] &&
	     !coreFix_memExe_lsq$getHit[9] ;
  assign coreFix_memExe_rsMem$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_memExe_rsMem$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_memExe_stb
  assign coreFix_memExe_stb$deq_idx =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[148] ;
  assign coreFix_memExe_stb$enq_be = coreFix_memExe_lsq$firstSt[76:69] ;
  assign coreFix_memExe_stb$enq_data = coreFix_memExe_lsq$firstSt[68:5] ;
  assign coreFix_memExe_stb$enq_idx = coreFix_memExe_stb$getEnqIndex[0] ;
  assign coreFix_memExe_stb$enq_paddr = coreFix_memExe_lsq$firstSt[141:78] ;
  assign coreFix_memExe_stb$getEnqIndex_paddr =
	     coreFix_memExe_lsq$firstSt[141:78] ;
  assign coreFix_memExe_stb$noMatchLdQ_be = coreFix_memExe_lsq$firstLd[15:8] ;
  assign coreFix_memExe_stb$noMatchLdQ_paddr =
	     coreFix_memExe_lsq$firstLd[80:17] ;
  assign coreFix_memExe_stb$noMatchStQ_be =
	     coreFix_memExe_lsq$firstSt[76:69] ;
  assign coreFix_memExe_stb$noMatchStQ_paddr =
	     coreFix_memExe_lsq$firstSt[141:78] ;
  assign coreFix_memExe_stb$search_be =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ?
	       coreFix_memExe_lsq$getIssueLd[7:0] :
	       coreFix_memExe_issueLd$wget[7:0] ;
  assign coreFix_memExe_stb$search_paddr =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ?
	       coreFix_memExe_lsq$getIssueLd[71:8] :
	       coreFix_memExe_issueLd$wget[71:8] ;
  assign coreFix_memExe_stb$EN_enq =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_St_Mem ;
  assign coreFix_memExe_stb$EN_deq =
	     MUX_coreFix_memExe_lsq$wakeupLdStalledBySB_1__SEL_1 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd1 ;
  assign coreFix_memExe_stb$EN_issue = CAN_FIRE_RL_coreFix_memExe_doIssueSB ;

  // submodule coreFix_trainBPQ_0
  assign coreFix_trainBPQ_0$D_IN =
	     MUX_coreFix_trainBPQ_0$enq_1__SEL_1 ?
	       MUX_coreFix_trainBPQ_0$enq_1__VAL_1 :
	       MUX_coreFix_trainBPQ_0$enq_1__VAL_2 ;
  assign coreFix_trainBPQ_0$ENQ =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F &&
	     (coreFix_aluExe_0_exeToFinQ$first[314:310] == 5'd9 ||
	      coreFix_aluExe_0_exeToFinQ$first[314:310] == 5'd10) ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  assign coreFix_trainBPQ_0$DEQ = WILL_FIRE_RL_coreFix_doFetchTrainBP_1 ;
  assign coreFix_trainBPQ_0$CLR = 1'b0 ;

  // submodule coreFix_trainBPQ_1
  assign coreFix_trainBPQ_1$D_IN =
	     MUX_coreFix_trainBPQ_1$enq_1__SEL_1 ?
	       MUX_coreFix_trainBPQ_1$enq_1__VAL_1 :
	       MUX_coreFix_trainBPQ_1$enq_1__VAL_2 ;
  assign coreFix_trainBPQ_1$ENQ =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F &&
	     (coreFix_aluExe_1_exeToFinQ$first[314:310] == 5'd9 ||
	      coreFix_aluExe_1_exeToFinQ$first[314:310] == 5'd10) ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;
  assign coreFix_trainBPQ_1$DEQ = coreFix_trainBPQ_1$EMPTY_N ;
  assign coreFix_trainBPQ_1$CLR = 1'b0 ;

  // submodule csrInstOrInterruptInflight_dummy2_0
  assign csrInstOrInterruptInflight_dummy2_0$D_IN = 1'd1 ;
  assign csrInstOrInterruptInflight_dummy2_0$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     (commitStage_commitTrap[36] ||
	      commitStage_commitTrap[35:32] == 4'd3) ;

  // submodule csrInstOrInterruptInflight_dummy2_1
  assign csrInstOrInterruptInflight_dummy2_1$D_IN = 1'd1 ;
  assign csrInstOrInterruptInflight_dummy2_1$EN =
	     csrInstOrInterruptInflight_lat_1$whas ;

  // submodule csrf_mcycle_ehr_data_dummy2_0
  assign csrf_mcycle_ehr_data_dummy2_0$D_IN = 1'd1 ;
  assign csrf_mcycle_ehr_data_dummy2_0$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd2816 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd30 ;

  // submodule csrf_mcycle_ehr_data_dummy2_1
  assign csrf_mcycle_ehr_data_dummy2_1$D_IN = 1'd1 ;
  assign csrf_mcycle_ehr_data_dummy2_1$EN = 1'd1 ;

  // submodule csrf_minstret_ehr_data_dummy2_0
  assign csrf_minstret_ehr_data_dummy2_0$D_IN = 1'd1 ;
  assign csrf_minstret_ehr_data_dummy2_0$EN =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd2818 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd31 ;

  // submodule csrf_minstret_ehr_data_dummy2_1
  assign csrf_minstret_ehr_data_dummy2_1$D_IN = 1'd1 ;
  assign csrf_minstret_ehr_data_dummy2_1$EN =
	     csrf_minstret_ehr_data_dummy_1_0$whas ;

  // submodule csrf_stats_module_writeQ
  assign csrf_stats_module_writeQ$D_IN =
	     MUX_csrf_stats_module_writeQ$enq_1__SEL_1 ?
	       f_csr_reqs$D_OUT[0] :
	       MUX_csrf_stval_csr$write_1__VAL_1[0] ;
  assign csrf_stats_module_writeQ$ENQ =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd2049 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd7 ;
  assign csrf_stats_module_writeQ$DEQ = EN_sendDoStats ;
  assign csrf_stats_module_writeQ$CLR = 1'b0 ;

  // submodule csrf_terminate_module_terminateQ
  assign csrf_terminate_module_terminateQ$ENQ =
	     WILL_FIRE_RL_rl_debug_csr_write &&
	     f_csr_reqs$D_OUT[75:64] == 12'd2048 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd6 ;
  assign csrf_terminate_module_terminateQ$DEQ = EN_coreIndInv_terminate ;
  assign csrf_terminate_module_terminateQ$CLR = 1'b0 ;

  // submodule epochManager
  assign epochManager$checkEpoch_0_check_e =
	     fetchStage$pipelines_0_first[257:256] ;
  assign epochManager$checkEpoch_1_check_e =
	     fetchStage$pipelines_1_first[257:256] ;
  assign epochManager$updatePrevEpoch_0_update_e =
	     fetchStage$pipelines_0_first[257:256] ;
  assign epochManager$updatePrevEpoch_1_update_e =
	     fetchStage$pipelines_1_first[257:256] ;
  assign epochManager$EN_updatePrevEpoch_0_update =
	     WILL_FIRE_RL_renameStage_doRenaming_wrongPath &&
	     fetchStage$pipelines_0_canDeq ||
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d14174 &&
	     IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13541 ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst ||
	     WILL_FIRE_RL_renameStage_doRenaming_Trap ;
  assign epochManager$EN_updatePrevEpoch_1_update =
	     WILL_FIRE_RL_renameStage_doRenaming_wrongPath &&
	     fetchStage$pipelines_1_canDeq &&
	     !epochManager$checkEpoch_1_check ||
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14270 &&
	     NOT_fetchStage_pipelines_1_first__2825_BITS_19_ETC___d14280 &&
	     IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d13976 ;
  assign epochManager$EN_incrementEpoch =
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !rob$deqPort_0_deq_data[4] ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst ||
	     WILL_FIRE_RL_renameStage_doRenaming_Trap ;

  // submodule f_csr_reqs
  assign f_csr_reqs$D_IN = hart0_csr_mem_server_request_put ;
  assign f_csr_reqs$ENQ = EN_hart0_csr_mem_server_request_put ;
  assign f_csr_reqs$DEQ =
	     WILL_FIRE_RL_rl_debug_csr_access_busy ||
	     WILL_FIRE_RL_rl_debug_csr_write ||
	     WILL_FIRE_RL_rl_debug_csr_read ;
  assign f_csr_reqs$CLR = 1'b0 ;

  // submodule f_csr_rsps
  always@(WILL_FIRE_RL_rl_debug_csr_access_busy or
	  WILL_FIRE_RL_rl_debug_csr_write or
	  WILL_FIRE_RL_rl_debug_csr_read or MUX_f_csr_rsps$enq_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_rl_debug_csr_access_busy:
	  f_csr_rsps$D_IN = 65'h0AAAAAAAAAAAAAAAA;
      WILL_FIRE_RL_rl_debug_csr_write:
	  f_csr_rsps$D_IN = 65'h1AAAAAAAAAAAAAAAA;
      WILL_FIRE_RL_rl_debug_csr_read:
	  f_csr_rsps$D_IN = MUX_f_csr_rsps$enq_1__VAL_3;
      default: f_csr_rsps$D_IN =
		   65'h0AAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign f_csr_rsps$ENQ =
	     WILL_FIRE_RL_rl_debug_csr_access_busy ||
	     WILL_FIRE_RL_rl_debug_csr_write ||
	     WILL_FIRE_RL_rl_debug_csr_read ;
  assign f_csr_rsps$DEQ = EN_hart0_csr_mem_server_response_get ;
  assign f_csr_rsps$CLR = 1'b0 ;

  // submodule f_fpr_reqs
  assign f_fpr_reqs$D_IN = hart0_fpr_mem_server_request_put ;
  assign f_fpr_reqs$ENQ = EN_hart0_fpr_mem_server_request_put ;
  assign f_fpr_reqs$DEQ =
	     WILL_FIRE_RL_rl_debug_fpr_access_busy ||
	     WILL_FIRE_RL_rl_debug_fpr_write ||
	     WILL_FIRE_RL_rl_debug_fpr_read ;
  assign f_fpr_reqs$CLR = 1'b0 ;

  // submodule f_fpr_rsps
  always@(WILL_FIRE_RL_rl_debug_fpr_access_busy or
	  WILL_FIRE_RL_rl_debug_fpr_write or
	  WILL_FIRE_RL_rl_debug_fpr_read or MUX_f_fpr_rsps$enq_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_rl_debug_fpr_access_busy:
	  f_fpr_rsps$D_IN = 65'h0AAAAAAAAAAAAAAAA;
      WILL_FIRE_RL_rl_debug_fpr_write:
	  f_fpr_rsps$D_IN = 65'h1AAAAAAAAAAAAAAAA;
      WILL_FIRE_RL_rl_debug_fpr_read:
	  f_fpr_rsps$D_IN = MUX_f_fpr_rsps$enq_1__VAL_3;
      default: f_fpr_rsps$D_IN =
		   65'h0AAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign f_fpr_rsps$ENQ =
	     WILL_FIRE_RL_rl_debug_fpr_access_busy ||
	     WILL_FIRE_RL_rl_debug_fpr_write ||
	     WILL_FIRE_RL_rl_debug_fpr_read ;
  assign f_fpr_rsps$DEQ = EN_hart0_fpr_mem_server_response_get ;
  assign f_fpr_rsps$CLR = 1'b0 ;

  // submodule f_gpr_reqs
  assign f_gpr_reqs$D_IN = hart0_gpr_mem_server_request_put ;
  assign f_gpr_reqs$ENQ = EN_hart0_gpr_mem_server_request_put ;
  assign f_gpr_reqs$DEQ =
	     WILL_FIRE_RL_rl_debug_gpr_access_busy ||
	     WILL_FIRE_RL_rl_debug_gpr_write ||
	     WILL_FIRE_RL_rl_debug_gpr_read ;
  assign f_gpr_reqs$CLR = 1'b0 ;

  // submodule f_gpr_rsps
  always@(WILL_FIRE_RL_rl_debug_gpr_access_busy or
	  WILL_FIRE_RL_rl_debug_gpr_write or
	  WILL_FIRE_RL_rl_debug_gpr_read or MUX_f_fpr_rsps$enq_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_rl_debug_gpr_access_busy:
	  f_gpr_rsps$D_IN = 65'h0AAAAAAAAAAAAAAAA;
      WILL_FIRE_RL_rl_debug_gpr_write:
	  f_gpr_rsps$D_IN = 65'h1AAAAAAAAAAAAAAAA;
      WILL_FIRE_RL_rl_debug_gpr_read:
	  f_gpr_rsps$D_IN = MUX_f_fpr_rsps$enq_1__VAL_3;
      default: f_gpr_rsps$D_IN =
		   65'h0AAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign f_gpr_rsps$ENQ =
	     WILL_FIRE_RL_rl_debug_gpr_access_busy ||
	     WILL_FIRE_RL_rl_debug_gpr_write ||
	     WILL_FIRE_RL_rl_debug_gpr_read ;
  assign f_gpr_rsps$DEQ = EN_hart0_gpr_mem_server_response_get ;
  assign f_gpr_rsps$CLR = 1'b0 ;

  // submodule f_run_halt_reqs
  assign f_run_halt_reqs$D_IN = hart0_run_halt_server_request_put ;
  assign f_run_halt_reqs$ENQ = EN_hart0_run_halt_server_request_put ;
  assign f_run_halt_reqs$DEQ =
	     WILL_FIRE_RL_rl_debug_run_redundant ||
	     WILL_FIRE_RL_rl_debug_resume ||
	     WILL_FIRE_RL_rl_debug_halt_req_already_halted ||
	     WILL_FIRE_RL_rl_debug_halt_req ;
  assign f_run_halt_reqs$CLR = 1'b0 ;

  // submodule f_run_halt_rsps
  assign f_run_halt_rsps$D_IN = !MUX_f_run_halt_rsps$enq_1__SEL_1 ;
  assign f_run_halt_rsps$ENQ =
	     WILL_FIRE_RL_rl_debug_halted ||
	     WILL_FIRE_RL_rl_debug_halt_req_already_halted ||
	     WILL_FIRE_RL_rl_debug_run_redundant ||
	     WILL_FIRE_RL_rl_debug_resume ;
  assign f_run_halt_rsps$DEQ = EN_hart0_run_halt_server_response_get ;
  assign f_run_halt_rsps$CLR = 1'b0 ;

  // submodule fetchStage
  assign fetchStage$iMemIfc_perf_req_r = 2'h0 ;
  assign fetchStage$iMemIfc_perf_setStatus_doStats = 1'b0 ;
  assign fetchStage$iMemIfc_to_parent_fromP_enq_x =
	     iCacheToParent_fromP_enq_x ;
  assign fetchStage$iMemIfc_to_proc_request_put = 64'h0 ;
  assign fetchStage$iTlbIfc_perf_req_r = 3'h0 ;
  assign fetchStage$iTlbIfc_perf_setStatus_doStats = 1'b0 ;
  assign fetchStage$iTlbIfc_toParent_rsFromP_enq_x =
	     l2Tlb$toChildren_rsToC_first[80:0] ;
  assign fetchStage$iTlbIfc_to_proc_request_put = 64'h0 ;
  assign fetchStage$iTlbIfc_updateVMInfo_vm =
	     MUX_coreFix_memExe_dTlb$updateVMInfo_1__SEL_1 ?
	       MUX_fetchStage$iTlbIfc_updateVMInfo_1__VAL_1 :
	       MUX_fetchStage$iTlbIfc_updateVMInfo_1__VAL_1 ;
  assign fetchStage$mmioIfc_instResp_enq_x = mmio_pRsQ_data_0[67:0] ;
  assign fetchStage$mmioIfc_setHtifAddrs_fromHost =
	     coreReq_start_fromHostAddr ;
  assign fetchStage$mmioIfc_setHtifAddrs_toHost = coreReq_start_toHostAddr ;
  assign fetchStage$perf_req_r = 2'h0 ;
  assign fetchStage$perf_setStatus_doStats = 1'b0 ;
  always@(MUX_commitStage_rg_serial_num$write_1__SEL_1 or
	  MUX_fetchStage$redirect_1__VAL_1 or
	  WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  WILL_FIRE_RL_commitStage_doCommitKilledLd or
	  rob$deqPort_0_deq_data or
	  WILL_FIRE_RL_rl_debug_resume or
	  csrf_rg_dpc or
	  WILL_FIRE_RL_commitStage_doCommitSystemInst or
	  MUX_fetchStage$redirect_1__VAL_6)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_commitStage_rg_serial_num$write_1__SEL_1:
	  fetchStage$redirect_pc = MUX_fetchStage$redirect_1__VAL_1;
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  fetchStage$redirect_pc = coreFix_aluExe_1_exeToFinQ$first[72:9];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  fetchStage$redirect_pc = coreFix_aluExe_0_exeToFinQ$first[72:9];
      WILL_FIRE_RL_commitStage_doCommitKilledLd:
	  fetchStage$redirect_pc = rob$deqPort_0_deq_data[343:280];
      WILL_FIRE_RL_rl_debug_resume: fetchStage$redirect_pc = csrf_rg_dpc;
      WILL_FIRE_RL_commitStage_doCommitSystemInst:
	  fetchStage$redirect_pc = MUX_fetchStage$redirect_1__VAL_6;
      default: fetchStage$redirect_pc =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign fetchStage$start_pc = coreReq_start_startpc ;
  assign fetchStage$train_predictors_dpTrain =
	     coreFix_trainBPQ_1$EMPTY_N ?
	       coreFix_trainBPQ_1$D_OUT[25:2] :
	       coreFix_trainBPQ_0$D_OUT[25:2] ;
  assign fetchStage$train_predictors_iType =
	     coreFix_trainBPQ_1$EMPTY_N ?
	       coreFix_trainBPQ_1$D_OUT[31:27] :
	       coreFix_trainBPQ_0$D_OUT[31:27] ;
  assign fetchStage$train_predictors_isCompressed =
	     coreFix_trainBPQ_1$EMPTY_N ?
	       coreFix_trainBPQ_1$D_OUT[0] :
	       coreFix_trainBPQ_0$D_OUT[0] ;
  assign fetchStage$train_predictors_mispred =
	     coreFix_trainBPQ_1$EMPTY_N ?
	       coreFix_trainBPQ_1$D_OUT[1] :
	       coreFix_trainBPQ_0$D_OUT[1] ;
  assign fetchStage$train_predictors_next_pc =
	     coreFix_trainBPQ_1$EMPTY_N ?
	       coreFix_trainBPQ_1$D_OUT[95:32] :
	       coreFix_trainBPQ_0$D_OUT[95:32] ;
  assign fetchStage$train_predictors_pc =
	     coreFix_trainBPQ_1$EMPTY_N ?
	       coreFix_trainBPQ_1$D_OUT[159:96] :
	       coreFix_trainBPQ_0$D_OUT[159:96] ;
  assign fetchStage$train_predictors_taken =
	     coreFix_trainBPQ_1$EMPTY_N ?
	       coreFix_trainBPQ_1$D_OUT[26] :
	       coreFix_trainBPQ_0$D_OUT[26] ;
  assign fetchStage$EN_pipelines_0_deq =
	     WILL_FIRE_RL_renameStage_doRenaming_wrongPath &&
	     fetchStage$pipelines_0_canDeq ||
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d14174 &&
	     IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13541 ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst ||
	     WILL_FIRE_RL_renameStage_doRenaming_Trap ;
  assign fetchStage$EN_pipelines_1_deq =
	     WILL_FIRE_RL_renameStage_doRenaming_wrongPath &&
	     fetchStage$pipelines_1_canDeq &&
	     !epochManager$checkEpoch_1_check ||
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14270 &&
	     NOT_fetchStage_pipelines_1_first__2825_BITS_19_ETC___d14280 &&
	     IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d13976 ;
  assign fetchStage$EN_iTlbIfc_flush =
	     WILL_FIRE_RL_prepareCachesAndTlbs && flush_tlbs ||
	     WILL_FIRE_RL_rl_debug_resume ;
  assign fetchStage$EN_iTlbIfc_updateVMInfo =
	     WILL_FIRE_RL_prepareCachesAndTlbs && update_vm_info ||
	     WILL_FIRE_RL_rl_debug_resume ;
  assign fetchStage$EN_iTlbIfc_to_proc_request_put = 1'b0 ;
  assign fetchStage$EN_iTlbIfc_to_proc_response_get = 1'b0 ;
  assign fetchStage$EN_iTlbIfc_toParent_rqToP_deq = WILL_FIRE_RL_sendITlbReq ;
  assign fetchStage$EN_iTlbIfc_toParent_rsFromP_enq =
	     CAN_FIRE_RL_sendRsToITlb ;
  assign fetchStage$EN_iTlbIfc_toParent_flush_request_get =
	     CAN_FIRE_RL_mkConnectionGetPut_1 ;
  assign fetchStage$EN_iTlbIfc_toParent_flush_response_put =
	     CAN_FIRE_RL_sendFlushDone ;
  assign fetchStage$EN_iTlbIfc_perf_setStatus = 1'b0 ;
  assign fetchStage$EN_iTlbIfc_perf_req = 1'b0 ;
  assign fetchStage$EN_iTlbIfc_perf_resp = 1'b0 ;
  assign fetchStage$EN_iMemIfc_to_proc_request_put = 1'b0 ;
  assign fetchStage$EN_iMemIfc_to_proc_response_get = 1'b0 ;
  assign fetchStage$EN_iMemIfc_flush = CAN_FIRE_RL_setDoFlushCaches ;
  assign fetchStage$EN_iMemIfc_perf_setStatus = 1'b0 ;
  assign fetchStage$EN_iMemIfc_perf_req = 1'b0 ;
  assign fetchStage$EN_iMemIfc_perf_resp = 1'b0 ;
  assign fetchStage$EN_iMemIfc_to_parent_rsToP_deq =
	     EN_iCacheToParent_rsToP_deq ;
  assign fetchStage$EN_iMemIfc_to_parent_rqToP_deq =
	     EN_iCacheToParent_rqToP_deq ;
  assign fetchStage$EN_iMemIfc_to_parent_fromP_enq =
	     EN_iCacheToParent_fromP_enq ;
  assign fetchStage$EN_iMemIfc_cRqStuck_get = EN_deadlock_iCacheCRqStuck_get ;
  assign fetchStage$EN_iMemIfc_pRqStuck_get = EN_deadlock_iCachePRqStuck_get ;
  assign fetchStage$EN_mmioIfc_instReq_deq = WILL_FIRE_RL_mmio_sendInstReq ;
  assign fetchStage$EN_mmioIfc_instResp_enq = CAN_FIRE_RL_mmio_sendInstResp ;
  assign fetchStage$EN_mmioIfc_setHtifAddrs = EN_coreReq_start ;
  assign fetchStage$EN_start = EN_coreReq_start ;
  assign fetchStage$EN_stop = 1'b0 ;
  assign fetchStage$EN_setWaitRedirect =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     commitStage_commitTrap_4406_BIT_36_4532_AND_co_ETC___d14597 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !rob$deqPort_0_deq_data[4] ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst ||
	     WILL_FIRE_RL_renameStage_doRenaming_Trap ;
  assign fetchStage$EN_redirect =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14634 ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_rl_debug_resume ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ;
  assign fetchStage$EN_setWaitFlush =
	     MUX_commitStage_rg_run_state$write_1__SEL_1 ;
  assign fetchStage$EN_done_flushing = CAN_FIRE_RL_readyToFetch ;
  assign fetchStage$EN_train_predictors =
	     coreFix_trainBPQ_1$EMPTY_N ||
	     WILL_FIRE_RL_coreFix_doFetchTrainBP_1 ;
  assign fetchStage$EN_flush_predictors = CAN_FIRE_RL_setDoFlushBrPred ;
  assign fetchStage$EN_perf_setStatus = 1'b0 ;
  assign fetchStage$EN_perf_req = 1'b0 ;
  assign fetchStage$EN_perf_resp = 1'b0 ;

  // submodule l2Tlb
  assign l2Tlb$perf_req_r = 4'h0 ;
  assign l2Tlb$perf_setStatus_doStats = 1'b0 ;
  assign l2Tlb$toChildren_rqFromC_put =
	     WILL_FIRE_RL_sendDTlbReq ?
	       MUX_l2Tlb$toChildren_rqFromC_put_1__VAL_1 :
	       MUX_l2Tlb$toChildren_rqFromC_put_1__VAL_2 ;
  assign l2Tlb$toMem_respLd_enq_x = tlbToMem_respLd_enq_x ;
  assign l2Tlb$updateVMInfo_vmD =
	     MUX_coreFix_memExe_dTlb$updateVMInfo_1__SEL_1 ?
	       MUX_coreFix_memExe_dTlb$updateVMInfo_1__VAL_1 :
	       MUX_coreFix_memExe_dTlb$updateVMInfo_1__VAL_1 ;
  assign l2Tlb$updateVMInfo_vmI =
	     MUX_coreFix_memExe_dTlb$updateVMInfo_1__SEL_1 ?
	       MUX_fetchStage$iTlbIfc_updateVMInfo_1__VAL_1 :
	       MUX_fetchStage$iTlbIfc_updateVMInfo_1__VAL_1 ;
  assign l2Tlb$EN_updateVMInfo =
	     WILL_FIRE_RL_prepareCachesAndTlbs && update_vm_info ||
	     WILL_FIRE_RL_rl_debug_resume ;
  assign l2Tlb$EN_toChildren_rqFromC_put =
	     WILL_FIRE_RL_sendDTlbReq || WILL_FIRE_RL_sendITlbReq ;
  assign l2Tlb$EN_toChildren_rsToC_deq =
	     WILL_FIRE_RL_sendRsToITlb || WILL_FIRE_RL_sendRsToDTlb ;
  assign l2Tlb$EN_toChildren_iTlbReqFlush_put =
	     CAN_FIRE_RL_mkConnectionGetPut_1 ;
  assign l2Tlb$EN_toChildren_dTlbReqFlush_put =
	     CAN_FIRE_RL_mkConnectionGetPut ;
  assign l2Tlb$EN_toChildren_flushDone_get = CAN_FIRE_RL_sendFlushDone ;
  assign l2Tlb$EN_toMem_memReq_deq = EN_tlbToMem_memReq_deq ;
  assign l2Tlb$EN_toMem_respLd_enq = EN_tlbToMem_respLd_enq ;
  assign l2Tlb$EN_perf_setStatus = 1'b0 ;
  assign l2Tlb$EN_perf_req = 1'b0 ;
  assign l2Tlb$EN_perf_resp = 1'b0 ;

  // submodule mmio_cRqQ_clearReq_dummy2_0
  assign mmio_cRqQ_clearReq_dummy2_0$D_IN = 1'b0 ;
  assign mmio_cRqQ_clearReq_dummy2_0$EN = 1'b0 ;

  // submodule mmio_cRqQ_clearReq_dummy2_1
  assign mmio_cRqQ_clearReq_dummy2_1$D_IN = 1'd1 ;
  assign mmio_cRqQ_clearReq_dummy2_1$EN = 1'd1 ;

  // submodule mmio_cRqQ_deqReq_dummy2_0
  assign mmio_cRqQ_deqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_cRqQ_deqReq_dummy2_0$EN = EN_mmioToPlatform_cRq_deq ;

  // submodule mmio_cRqQ_deqReq_dummy2_1
  assign mmio_cRqQ_deqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_cRqQ_deqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_cRqQ_deqReq_dummy2_2
  assign mmio_cRqQ_deqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_cRqQ_deqReq_dummy2_2$EN = 1'd1 ;

  // submodule mmio_cRqQ_enqReq_dummy2_0
  assign mmio_cRqQ_enqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_cRqQ_enqReq_dummy2_0$EN =
	     WILL_FIRE_RL_mmio_sendInstReq || WILL_FIRE_RL_mmio_sendDataReq ;

  // submodule mmio_cRqQ_enqReq_dummy2_1
  assign mmio_cRqQ_enqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_cRqQ_enqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_cRqQ_enqReq_dummy2_2
  assign mmio_cRqQ_enqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_cRqQ_enqReq_dummy2_2$EN = 1'd1 ;

  // submodule mmio_cRsQ_clearReq_dummy2_0
  assign mmio_cRsQ_clearReq_dummy2_0$D_IN = 1'b0 ;
  assign mmio_cRsQ_clearReq_dummy2_0$EN = 1'b0 ;

  // submodule mmio_cRsQ_clearReq_dummy2_1
  assign mmio_cRsQ_clearReq_dummy2_1$D_IN = 1'd1 ;
  assign mmio_cRsQ_clearReq_dummy2_1$EN = 1'd1 ;

  // submodule mmio_cRsQ_deqReq_dummy2_0
  assign mmio_cRsQ_deqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_cRsQ_deqReq_dummy2_0$EN = EN_mmioToPlatform_cRs_deq ;

  // submodule mmio_cRsQ_deqReq_dummy2_1
  assign mmio_cRsQ_deqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_cRsQ_deqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_cRsQ_deqReq_dummy2_2
  assign mmio_cRsQ_deqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_cRsQ_deqReq_dummy2_2$EN = 1'd1 ;

  // submodule mmio_cRsQ_enqReq_dummy2_0
  assign mmio_cRsQ_enqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_cRsQ_enqReq_dummy2_0$EN = CAN_FIRE_RL_mmio_handlePRq ;

  // submodule mmio_cRsQ_enqReq_dummy2_1
  assign mmio_cRsQ_enqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_cRsQ_enqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_cRsQ_enqReq_dummy2_2
  assign mmio_cRsQ_enqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_cRsQ_enqReq_dummy2_2$EN = 1'd1 ;

  // submodule mmio_dataPendQ_clearReq_dummy2_0
  assign mmio_dataPendQ_clearReq_dummy2_0$D_IN = 1'b0 ;
  assign mmio_dataPendQ_clearReq_dummy2_0$EN = 1'b0 ;

  // submodule mmio_dataPendQ_clearReq_dummy2_1
  assign mmio_dataPendQ_clearReq_dummy2_1$D_IN = 1'd1 ;
  assign mmio_dataPendQ_clearReq_dummy2_1$EN = 1'd1 ;

  // submodule mmio_dataPendQ_deqReq_dummy2_0
  assign mmio_dataPendQ_deqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_dataPendQ_deqReq_dummy2_0$EN =
	     mmio_dataRespQ_deqReq_lat_0$whas ;

  // submodule mmio_dataPendQ_deqReq_dummy2_1
  assign mmio_dataPendQ_deqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_dataPendQ_deqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_dataPendQ_deqReq_dummy2_2
  assign mmio_dataPendQ_deqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_dataPendQ_deqReq_dummy2_2$EN = 1'd1 ;

  // submodule mmio_dataPendQ_enqReq_dummy2_0
  assign mmio_dataPendQ_enqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_dataPendQ_enqReq_dummy2_0$EN =
	     mmio_dataPendQ_enqReq_lat_0$whas ;

  // submodule mmio_dataPendQ_enqReq_dummy2_1
  assign mmio_dataPendQ_enqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_dataPendQ_enqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_dataPendQ_enqReq_dummy2_2
  assign mmio_dataPendQ_enqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_dataPendQ_enqReq_dummy2_2$EN = 1'd1 ;

  // submodule mmio_dataReqQ_clearReq_dummy2_0
  assign mmio_dataReqQ_clearReq_dummy2_0$D_IN = 1'b0 ;
  assign mmio_dataReqQ_clearReq_dummy2_0$EN = 1'b0 ;

  // submodule mmio_dataReqQ_clearReq_dummy2_1
  assign mmio_dataReqQ_clearReq_dummy2_1$D_IN = 1'd1 ;
  assign mmio_dataReqQ_clearReq_dummy2_1$EN = 1'd1 ;

  // submodule mmio_dataReqQ_deqReq_dummy2_0
  assign mmio_dataReqQ_deqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_dataReqQ_deqReq_dummy2_0$EN = CAN_FIRE_RL_mmio_sendDataReq ;

  // submodule mmio_dataReqQ_deqReq_dummy2_1
  assign mmio_dataReqQ_deqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_dataReqQ_deqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_dataReqQ_deqReq_dummy2_2
  assign mmio_dataReqQ_deqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_dataReqQ_deqReq_dummy2_2$EN = 1'd1 ;

  // submodule mmio_dataReqQ_enqReq_dummy2_0
  assign mmio_dataReqQ_enqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_dataReqQ_enqReq_dummy2_0$EN = mmio_dataPendQ_enqReq_lat_0$whas ;

  // submodule mmio_dataReqQ_enqReq_dummy2_1
  assign mmio_dataReqQ_enqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_dataReqQ_enqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_dataReqQ_enqReq_dummy2_2
  assign mmio_dataReqQ_enqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_dataReqQ_enqReq_dummy2_2$EN = 1'd1 ;

  // submodule mmio_dataRespQ_clearReq_dummy2_0
  assign mmio_dataRespQ_clearReq_dummy2_0$D_IN = 1'b0 ;
  assign mmio_dataRespQ_clearReq_dummy2_0$EN = 1'b0 ;

  // submodule mmio_dataRespQ_clearReq_dummy2_1
  assign mmio_dataRespQ_clearReq_dummy2_1$D_IN = 1'd1 ;
  assign mmio_dataRespQ_clearReq_dummy2_1$EN = 1'd1 ;

  // submodule mmio_dataRespQ_deqReq_dummy2_0
  assign mmio_dataRespQ_deqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_dataRespQ_deqReq_dummy2_0$EN =
	     mmio_dataRespQ_deqReq_lat_0$whas ;

  // submodule mmio_dataRespQ_deqReq_dummy2_1
  assign mmio_dataRespQ_deqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_dataRespQ_deqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_dataRespQ_deqReq_dummy2_2
  assign mmio_dataRespQ_deqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_dataRespQ_deqReq_dummy2_2$EN = 1'd1 ;

  // submodule mmio_dataRespQ_enqReq_dummy2_0
  assign mmio_dataRespQ_enqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_dataRespQ_enqReq_dummy2_0$EN = CAN_FIRE_RL_mmio_sendDataResp ;

  // submodule mmio_dataRespQ_enqReq_dummy2_1
  assign mmio_dataRespQ_enqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_dataRespQ_enqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_dataRespQ_enqReq_dummy2_2
  assign mmio_dataRespQ_enqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_dataRespQ_enqReq_dummy2_2$EN = 1'd1 ;

  // submodule mmio_pRqQ_clearReq_dummy2_0
  assign mmio_pRqQ_clearReq_dummy2_0$D_IN = 1'b0 ;
  assign mmio_pRqQ_clearReq_dummy2_0$EN = 1'b0 ;

  // submodule mmio_pRqQ_clearReq_dummy2_1
  assign mmio_pRqQ_clearReq_dummy2_1$D_IN = 1'd1 ;
  assign mmio_pRqQ_clearReq_dummy2_1$EN = 1'd1 ;

  // submodule mmio_pRqQ_deqReq_dummy2_0
  assign mmio_pRqQ_deqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_pRqQ_deqReq_dummy2_0$EN = CAN_FIRE_RL_mmio_handlePRq ;

  // submodule mmio_pRqQ_deqReq_dummy2_1
  assign mmio_pRqQ_deqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_pRqQ_deqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_pRqQ_deqReq_dummy2_2
  assign mmio_pRqQ_deqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_pRqQ_deqReq_dummy2_2$EN = 1'd1 ;

  // submodule mmio_pRqQ_enqReq_dummy2_0
  assign mmio_pRqQ_enqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_pRqQ_enqReq_dummy2_0$EN = EN_mmioToPlatform_pRq_enq ;

  // submodule mmio_pRqQ_enqReq_dummy2_1
  assign mmio_pRqQ_enqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_pRqQ_enqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_pRqQ_enqReq_dummy2_2
  assign mmio_pRqQ_enqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_pRqQ_enqReq_dummy2_2$EN = 1'd1 ;

  // submodule mmio_pRsQ_clearReq_dummy2_0
  assign mmio_pRsQ_clearReq_dummy2_0$D_IN = 1'b0 ;
  assign mmio_pRsQ_clearReq_dummy2_0$EN = 1'b0 ;

  // submodule mmio_pRsQ_clearReq_dummy2_1
  assign mmio_pRsQ_clearReq_dummy2_1$D_IN = 1'd1 ;
  assign mmio_pRsQ_clearReq_dummy2_1$EN = 1'd1 ;

  // submodule mmio_pRsQ_deqReq_dummy2_0
  assign mmio_pRsQ_deqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_pRsQ_deqReq_dummy2_0$EN = mmio_pRsQ_deqReq_lat_0$whas ;

  // submodule mmio_pRsQ_deqReq_dummy2_1
  assign mmio_pRsQ_deqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_pRsQ_deqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_pRsQ_deqReq_dummy2_2
  assign mmio_pRsQ_deqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_pRsQ_deqReq_dummy2_2$EN = 1'd1 ;

  // submodule mmio_pRsQ_enqReq_dummy2_0
  assign mmio_pRsQ_enqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_pRsQ_enqReq_dummy2_0$EN = EN_mmioToPlatform_pRs_enq ;

  // submodule mmio_pRsQ_enqReq_dummy2_1
  assign mmio_pRsQ_enqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_pRsQ_enqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_pRsQ_enqReq_dummy2_2
  assign mmio_pRsQ_enqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_pRsQ_enqReq_dummy2_2$EN = 1'd1 ;

  // submodule perfReqQ
  assign perfReqQ$D_IN = { coreReq_perfReq_loc, coreReq_perfReq_t } ;
  assign perfReqQ$ENQ = EN_coreReq_perfReq ;
  assign perfReqQ$DEQ = EN_coreIndInv_perfResp ;
  assign perfReqQ$CLR = 1'b0 ;

  // submodule regRenamingTable
  assign regRenamingTable$rename_0_claimRename_r =
	     fetchStage$pipelines_0_first[95:69] ;
  assign regRenamingTable$rename_0_claimRename_sb =
	     specTagManager$currentSpecBits ;
  always@(MUX_regRenamingTable$rename_0_getRename_1__SEL_1 or
	  fetchStage$pipelines_0_first or
	  MUX_regRenamingTable$rename_0_getRename_1__SEL_2 or
	  MUX_regRenamingTable$rename_0_getRename_1__VAL_2 or
	  MUX_regRenamingTable$rename_0_getRename_1__SEL_3 or
	  MUX_regRenamingTable$rename_0_getRename_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_regRenamingTable$rename_0_getRename_1__SEL_1:
	  regRenamingTable$rename_0_getRename_r =
	      fetchStage$pipelines_0_first[95:69];
      MUX_regRenamingTable$rename_0_getRename_1__SEL_2:
	  regRenamingTable$rename_0_getRename_r =
	      MUX_regRenamingTable$rename_0_getRename_1__VAL_2;
      MUX_regRenamingTable$rename_0_getRename_1__SEL_3:
	  regRenamingTable$rename_0_getRename_r =
	      MUX_regRenamingTable$rename_0_getRename_1__VAL_3;
      default: regRenamingTable$rename_0_getRename_r =
		   27'b010101010101010101010101010 /* unspecified value */ ;
    endcase
  end
  assign regRenamingTable$rename_1_claimRename_r =
	     fetchStage$pipelines_1_first[95:69] ;
  assign regRenamingTable$rename_1_claimRename_sb =
	     renaming_spec_bits__h684325 ;
  assign regRenamingTable$rename_1_getRename_r =
	     fetchStage$pipelines_1_first[95:69] ;
  assign regRenamingTable$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12757 ;
  assign regRenamingTable$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  regRenamingTable$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[5:4];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  regRenamingTable$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[5:4];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  regRenamingTable$specUpdate_incorrectSpeculation_kill_tag =
	      2'b10 /* unspecified value */ ;
      default: regRenamingTable$specUpdate_incorrectSpeculation_kill_tag =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign regRenamingTable$EN_rename_0_claimRename =
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d14174 &&
	     IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13541 ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst ;
  assign regRenamingTable$EN_rename_1_claimRename =
	     MUX_epochManager$updatePrevEpoch_1_update_1__SEL_2 ;
  assign regRenamingTable$EN_commit_0_commit =
	     WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	     rob$deqPort_0_canDeq ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ;
  assign regRenamingTable$EN_commit_1_commit =
	     WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	     rob$deqPort_1_canDeq &&
	     rob$deqPort_1_deq_data[15] &&
	     !rob$deqPort_1_deq_data[10] &&
	     !rob$deqPort_1_deq_data[157] &&
	     rob$deqPort_1_deq_data[247:243] != 5'd0 &&
	     rob$deqPort_1_deq_data[247:243] != 5'd21 &&
	     rob$deqPort_1_deq_data[247:243] != 5'd17 &&
	     rob$deqPort_1_deq_data[247:243] != 5'd18 &&
	     rob$deqPort_1_deq_data[247:243] != 5'd13 &&
	     rob$deqPort_1_deq_data[247:243] != 5'd16 &&
	     rob$deqPort_1_deq_data[247:243] != 5'd15 &&
	     rob$deqPort_1_deq_data[247:243] != 5'd19 &&
	     rob$deqPort_1_deq_data[247:243] != 5'd20 ;
  assign regRenamingTable$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign regRenamingTable$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule rf
  assign rf$read_0_rd1_rindx = coreFix_aluExe_0_dispToRegQ$first[72:66] ;
  assign rf$read_0_rd2_rindx = coreFix_aluExe_0_dispToRegQ$first[64:58] ;
  assign rf$read_0_rd3_rindx = 7'h0 ;
  assign rf$read_1_rd1_rindx = coreFix_aluExe_1_dispToRegQ$first[72:66] ;
  assign rf$read_1_rd2_rindx = coreFix_aluExe_1_dispToRegQ$first[64:58] ;
  assign rf$read_1_rd3_rindx = 7'h0 ;
  assign rf$read_2_rd1_rindx =
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[45:39] ;
  assign rf$read_2_rd2_rindx =
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[37:31] ;
  assign rf$read_2_rd3_rindx =
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[29:23] ;
  assign rf$read_3_rd1_rindx = coreFix_memExe_dispToRegQ$first[49:43] ;
  assign rf$read_3_rd2_rindx = coreFix_memExe_dispToRegQ$first[41:35] ;
  assign rf$read_3_rd3_rindx = 7'h0 ;
  assign rf$read_4_rd1_rindx = regRenamingTable$rename_0_getRename[31:25] ;
  assign rf$read_4_rd2_rindx = 7'h0 ;
  assign rf$read_4_rd3_rindx = 7'h0 ;
  assign rf$write_0_wr_data = coreFix_aluExe_0_exeToFinQ$first[265:202] ;
  assign rf$write_0_wr_rindx = coreFix_aluExe_0_exeToFinQ$first[308:302] ;
  assign rf$write_1_wr_data = coreFix_aluExe_1_exeToFinQ$first[265:202] ;
  assign rf$write_1_wr_rindx = coreFix_aluExe_1_exeToFinQ$first[308:302] ;
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1 or
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2 or
	  MUX_rf$write_2_wr_2__VAL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3 or
	  MUX_rf$write_2_wr_2__VAL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4 or
	  MUX_rf$write_2_wr_2__VAL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5 or
	  MUX_rf$write_2_wr_2__VAL_5 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6 or
	  MUX_rf$write_2_wr_2__VAL_6)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1:
	  rf$write_2_wr_data =
	      coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[91:28];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2:
	  rf$write_2_wr_data = MUX_rf$write_2_wr_2__VAL_2;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3:
	  rf$write_2_wr_data = MUX_rf$write_2_wr_2__VAL_3;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4:
	  rf$write_2_wr_data = MUX_rf$write_2_wr_2__VAL_4;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5:
	  rf$write_2_wr_data = MUX_rf$write_2_wr_2__VAL_5;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6:
	  rf$write_2_wr_data = MUX_rf$write_2_wr_2__VAL_6;
      default: rf$write_2_wr_data =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1 or
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2 or
	  coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3 or
	  coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4 or
	  coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5 or
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6 or
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1:
	  rf$write_2_wr_rindx =
	      coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[21:15];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2:
	  rf$write_2_wr_rindx =
	      coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[21:15];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3:
	  rf$write_2_wr_rindx =
	      coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[21:15];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4:
	  rf$write_2_wr_rindx =
	      coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[21:15];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5:
	  rf$write_2_wr_rindx =
	      coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[21:15];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6:
	  rf$write_2_wr_rindx =
	      coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[21:15];
      default: rf$write_2_wr_rindx = 7'b0101010 /* unspecified value */ ;
    endcase
  end
  always@(MUX_rf$write_3_wr_1__SEL_1 or
	  coreFix_memExe_respLrScAmoQ_data_0 or
	  MUX_rf$write_3_wr_1__SEL_2 or
	  mmio_dataRespQ_data_0 or
	  MUX_rf$write_3_wr_1__SEL_3 or
	  MUX_rf$write_3_wr_2__VAL_3 or
	  MUX_rf$write_3_wr_1__SEL_4 or
	  MUX_rf$write_3_wr_2__VAL_4 or
	  MUX_rf$write_3_wr_2__SEL_5 or coreFix_memExe_lsq$respLd)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_rf$write_3_wr_1__SEL_1:
	  rf$write_3_wr_data = coreFix_memExe_respLrScAmoQ_data_0;
      MUX_rf$write_3_wr_1__SEL_2:
	  rf$write_3_wr_data = mmio_dataRespQ_data_0[63:0];
      MUX_rf$write_3_wr_1__SEL_3:
	  rf$write_3_wr_data = MUX_rf$write_3_wr_2__VAL_3;
      MUX_rf$write_3_wr_1__SEL_4:
	  rf$write_3_wr_data = MUX_rf$write_3_wr_2__VAL_4;
      MUX_rf$write_3_wr_2__SEL_5:
	  rf$write_3_wr_data = coreFix_memExe_lsq$respLd[63:0];
      default: rf$write_3_wr_data =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(MUX_rf$write_3_wr_1__SEL_5 or
	  coreFix_memExe_lsq$respLd or
	  MUX_rf$write_3_wr_1__SEL_3 or
	  MUX_rf$write_3_wr_1__SEL_4 or
	  coreFix_memExe_lsq$firstLd or
	  MUX_rf$write_3_wr_1__SEL_1 or
	  MUX_rf$write_3_wr_1__SEL_2 or coreFix_memExe_lsq$firstSt)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_rf$write_3_wr_1__SEL_5:
	  rf$write_3_wr_rindx = coreFix_memExe_lsq$respLd[71:65];
      MUX_rf$write_3_wr_1__SEL_3 || MUX_rf$write_3_wr_1__SEL_4:
	  rf$write_3_wr_rindx = coreFix_memExe_lsq$firstLd[88:82];
      MUX_rf$write_3_wr_1__SEL_1 || MUX_rf$write_3_wr_1__SEL_2:
	  rf$write_3_wr_rindx = coreFix_memExe_lsq$firstSt[149:143];
      default: rf$write_3_wr_rindx = 7'b0101010 /* unspecified value */ ;
    endcase
  end
  assign rf$write_4_wr_data =
	     WILL_FIRE_RL_rl_debug_gpr_write ?
	       f_gpr_reqs$D_OUT[63:0] :
	       f_fpr_reqs$D_OUT[63:0] ;
  assign rf$write_4_wr_rindx = regRenamingTable$rename_0_getRename[31:25] ;
  assign rf$EN_write_0_wr =
	     _dor1rf$EN_write_0_wr && coreFix_aluExe_0_exeToFinQ$first[309] ;
  assign rf$EN_write_1_wr =
	     _dor1rf$EN_write_1_wr && coreFix_aluExe_1_exeToFinQ$first[309] ;
  assign rf$EN_write_2_wr =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[22] ;
  assign rf$EN_write_3_wr =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq &&
	     coreFix_memExe_lsq$firstSt[150] ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq &&
	     coreFix_memExe_lsq$firstSt[150] ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	     coreFix_memExe_lsq$firstLd[89] ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     coreFix_memExe_lsq$firstLd[89] ||
	     (WILL_FIRE_RL_coreFix_memExe_doRespLdForward ||
	      WILL_FIRE_RL_coreFix_memExe_doRespLdMem) &&
	     coreFix_memExe_lsq$respLd[72] ;
  assign rf$EN_write_4_wr =
	     WILL_FIRE_RL_rl_debug_gpr_write ||
	     WILL_FIRE_RL_rl_debug_fpr_write ;

  // submodule rob
  always@(MUX_epochManager$updatePrevEpoch_0_update_1__SEL_2 or
	  MUX_rob$enqPort_0_enq_1__VAL_1 or
	  WILL_FIRE_RL_renameStage_doRenaming_Trap or
	  MUX_rob$enqPort_0_enq_1__VAL_2 or
	  WILL_FIRE_RL_renameStage_doRenaming_SystemInst or
	  MUX_rob$enqPort_0_enq_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_epochManager$updatePrevEpoch_0_update_1__SEL_2:
	  rob$enqPort_0_enq_x = MUX_rob$enqPort_0_enq_1__VAL_1;
      WILL_FIRE_RL_renameStage_doRenaming_Trap:
	  rob$enqPort_0_enq_x = MUX_rob$enqPort_0_enq_1__VAL_2;
      WILL_FIRE_RL_renameStage_doRenaming_SystemInst:
	  rob$enqPort_0_enq_x = MUX_rob$enqPort_0_enq_1__VAL_3;
      default: rob$enqPort_0_enq_x =
		   344'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign rob$enqPort_1_enq_x =
	     { fetchStage$pipelines_1_first[385:322],
	       fetchStage$pipelines_1_first[127:96],
	       fetchStage$pipelines_1_first[199:195],
	       fetchStage$pipelines_1_first[75:69],
	       64'hAAAAAAAAAAAAAAAA,
	       fetchStage_pipelines_1_first__2825_BIT_173_365_ETC___d13750,
	       73'h1280000000000000000,
	       fetchStage$pipelines_1_first[321:258],
	       5'd0,
	       fetchStage$pipelines_1_first[75] &&
	       fetchStage$pipelines_1_first[74],
	       fetchStage$pipelines_1_first[194:192] != 3'd0 &&
	       fetchStage$pipelines_1_first[194:192] != 3'd1 &&
	       fetchStage$pipelines_1_first[194:192] != 3'd2 &&
	       fetchStage$pipelines_1_first[194:192] != 3'd3 &&
	       fetchStage$pipelines_1_first[194:192] != 3'd4,
	       fetchStage$pipelines_1_first[194:192] != 3'd2 ||
	       fetchStage_pipelines_0_canDeq__2814_AND_regRen_ETC___d14371 ||
	       IF_fetchStage_pipelines_1_first__2825_BITS_191_ETC___d14334,
	       IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d14381,
	       7'd32,
	       renaming_spec_bits__h684325 } ;
  assign rob$getOrigPC_0_get_x = coreFix_aluExe_0_dispToRegQ$first[40:31] ;
  assign rob$getOrigPC_1_get_x = coreFix_aluExe_1_dispToRegQ$first[40:31] ;
  assign rob$getOrigPC_2_get_x = 10'h0 ;
  assign rob$getOrigPredPC_0_get_x =
	     coreFix_aluExe_0_dispToRegQ$first[40:31] ;
  assign rob$getOrigPredPC_1_get_x =
	     coreFix_aluExe_1_dispToRegQ$first[40:31] ;
  assign rob$getOrig_Inst_0_get_x = coreFix_aluExe_0_dispToRegQ$first[40:31] ;
  assign rob$getOrig_Inst_1_get_x = coreFix_aluExe_1_dispToRegQ$first[40:31] ;
  always@(WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault or
	  MUX_rob$setExecuted_deqLSQ_2__VAL_3 or
	  WILL_FIRE_RL_coreFix_memExe_doDeqStQ_fault or
	  MUX_rob$setExecuted_deqLSQ_2__VAL_6 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 or
	  WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem or
	  MUX_rob$setExecuted_deqLSQ_1__SEL_5 or
	  WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault or
	  WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault:
	  rob$setExecuted_deqLSQ_cause = MUX_rob$setExecuted_deqLSQ_2__VAL_3;
      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_fault:
	  rob$setExecuted_deqLSQ_cause = MUX_rob$setExecuted_deqLSQ_2__VAL_6;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 ||
      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem ||
      MUX_rob$setExecuted_deqLSQ_1__SEL_5:
	  rob$setExecuted_deqLSQ_cause = 5'd10;
      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault:
	  rob$setExecuted_deqLSQ_cause = 5'd21;
      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault:
	  rob$setExecuted_deqLSQ_cause = 5'd23;
      default: rob$setExecuted_deqLSQ_cause =
		   5'b01010 /* unspecified value */ ;
    endcase
  end
  assign rob$setExecuted_deqLSQ_ld_killed =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem ?
	       coreFix_memExe_lsq$firstLd[2:0] :
	       3'd2 ;
  assign rob$setExecuted_deqLSQ_x =
	     (MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault) ?
	       coreFix_memExe_lsq$firstLd[111:102] :
	       coreFix_memExe_lsq$firstSt[168:159] ;
  assign rob$setExecuted_doFinishAlu_0_set_cf =
	     coreFix_aluExe_0_exeToFinQ$first[136:7] ;
  assign rob$setExecuted_doFinishAlu_0_set_csrData =
	     coreFix_aluExe_0_exeToFinQ$first[201:137] ;
  assign rob$setExecuted_doFinishAlu_0_set_dst_data =
	     coreFix_aluExe_0_exeToFinQ$first[265:202] ;
  assign rob$setExecuted_doFinishAlu_0_set_x =
	     coreFix_aluExe_0_exeToFinQ$first[300:291] ;
  assign rob$setExecuted_doFinishAlu_1_set_cf =
	     coreFix_aluExe_1_exeToFinQ$first[136:7] ;
  assign rob$setExecuted_doFinishAlu_1_set_csrData =
	     coreFix_aluExe_1_exeToFinQ$first[201:137] ;
  assign rob$setExecuted_doFinishAlu_1_set_dst_data =
	     coreFix_aluExe_1_exeToFinQ$first[265:202] ;
  assign rob$setExecuted_doFinishAlu_1_set_x =
	     coreFix_aluExe_1_exeToFinQ$first[300:291] ;
  always@(WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple or
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma or
	  MUX_rf$write_2_wr_2__VAL_2 or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv or
	  MUX_rf$write_2_wr_2__VAL_3 or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt or
	  MUX_rf$write_2_wr_2__VAL_4 or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul or
	  MUX_rf$write_2_wr_2__VAL_5 or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv or
	  MUX_rf$write_2_wr_2__VAL_6)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_dst_data =
	      coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[91:28];
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_dst_data =
	      MUX_rf$write_2_wr_2__VAL_2;
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_dst_data =
	      MUX_rf$write_2_wr_2__VAL_3;
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_dst_data =
	      MUX_rf$write_2_wr_2__VAL_4;
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_dst_data =
	      MUX_rf$write_2_wr_2__VAL_5;
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_dst_data =
	      MUX_rf$write_2_wr_2__VAL_6;
      default: rob$setExecuted_doFinishFpuMulDiv_0_set_dst_data =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple or
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma or
	  MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_2 or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv or
	  MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_3 or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt or
	  MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_4 or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_fflags =
	      coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[27:23];
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_fflags =
	      MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_2;
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_fflags =
	      MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_3;
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_fflags =
	      MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_4;
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul ||
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_fflags = 5'd0;
      default: rob$setExecuted_doFinishFpuMulDiv_0_set_fflags =
		   5'b01010 /* unspecified value */ ;
    endcase
  end
  always@(WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple or
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma or
	  coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv or
	  coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt or
	  coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul or
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv or
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_x =
	      coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[13:4];
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_x =
	      coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[13:4];
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_x =
	      coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[13:4];
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_x =
	      coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[13:4];
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_x =
	      coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[13:4];
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_x =
	      coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[13:4];
      default: rob$setExecuted_doFinishFpuMulDiv_0_set_x =
		   10'b1010101010 /* unspecified value */ ;
    endcase
  end
  assign rob$setExecuted_doFinishMem_access_at_commit =
	     IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1802 &&
	     (coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1793 ||
	      coreFix_memExe_dTlb$procResp[93:91] == 3'd2 ||
	      coreFix_memExe_dTlb$procResp[93:91] == 3'd3 ||
	      coreFix_memExe_dTlb$procResp[93:91] == 3'd4) ;
  assign rob$setExecuted_doFinishMem_non_mmio_st_done =
	     IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1802 &&
	     NOT_coreFix_memExe_dTlb_procResp__774_BITS_162_ETC___d1813 &&
	     coreFix_memExe_dTlb$procResp[93:91] == 3'd1 ;
  assign rob$setExecuted_doFinishMem_store_data =
	     64'hAAAAAAAAAAAAAAAA /* unspecified value */  ;
  assign rob$setExecuted_doFinishMem_store_data_BE =
	     8'b10101010 /* unspecified value */  ;
  assign rob$setExecuted_doFinishMem_vaddr =
	     coreFix_memExe_dTlb$procResp[68:5] ;
  assign rob$setExecuted_doFinishMem_x = coreFix_memExe_dTlb$procResp[90:81] ;
  assign rob$setLSQAtCommitNotified_x = rob$deqPort_0_getDeqInstTag ;
  assign rob$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12757 ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  rob$specUpdate_incorrectSpeculation_inst_tag =
	      coreFix_aluExe_1_exeToFinQ$first[300:291];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  rob$specUpdate_incorrectSpeculation_inst_tag =
	      coreFix_aluExe_0_exeToFinQ$first[300:291];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  rob$specUpdate_incorrectSpeculation_inst_tag =
	      10'b1010101010 /* unspecified value */ ;
      default: rob$specUpdate_incorrectSpeculation_inst_tag =
		   10'b1010101010 /* unspecified value */ ;
    endcase
  end
  assign rob$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  rob$specUpdate_incorrectSpeculation_spec_tag =
	      coreFix_aluExe_1_exeToFinQ$first[5:4];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  rob$specUpdate_incorrectSpeculation_spec_tag =
	      coreFix_aluExe_0_exeToFinQ$first[5:4];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  rob$specUpdate_incorrectSpeculation_spec_tag =
	      2'b10 /* unspecified value */ ;
      default: rob$specUpdate_incorrectSpeculation_spec_tag =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign rob$EN_enqPort_0_enq =
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d14174 &&
	     IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13541 ||
	     WILL_FIRE_RL_renameStage_doRenaming_Trap ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst ;
  assign rob$EN_enqPort_1_enq =
	     MUX_epochManager$updatePrevEpoch_1_update_1__SEL_2 ;
  assign rob$EN_deqPort_0_deq =
	     WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	     rob$deqPort_0_canDeq ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ;
  assign rob$EN_deqPort_1_deq =
	     WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	     rob$deqPort_1_canDeq &&
	     rob$deqPort_1_deq_data[15] &&
	     !rob$deqPort_1_deq_data[10] &&
	     !rob$deqPort_1_deq_data[157] &&
	     rob$deqPort_1_deq_data[247:243] != 5'd0 &&
	     rob$deqPort_1_deq_data[247:243] != 5'd21 &&
	     rob$deqPort_1_deq_data[247:243] != 5'd17 &&
	     rob$deqPort_1_deq_data[247:243] != 5'd18 &&
	     rob$deqPort_1_deq_data[247:243] != 5'd13 &&
	     rob$deqPort_1_deq_data[247:243] != 5'd16 &&
	     rob$deqPort_1_deq_data[247:243] != 5'd15 &&
	     rob$deqPort_1_deq_data[247:243] != 5'd19 &&
	     rob$deqPort_1_deq_data[247:243] != 5'd20 ;
  assign rob$EN_setLSQAtCommitNotified =
	     CAN_FIRE_RL_commitStage_notifyLSQCommit ;
  assign rob$EN_setExecuted_deqLSQ =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_Fence ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault ;
  assign rob$EN_setExecuted_doFinishAlu_0_set =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  assign rob$EN_setExecuted_doFinishAlu_1_set =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;
  assign rob$EN_setExecuted_doFinishFpuMulDiv_0_set =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv ;
  assign rob$EN_setExecuted_doFinishMem =
	     CAN_FIRE_RL_coreFix_memExe_doFinishMem ;
  assign rob$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign rob$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule sbAggr
  assign sbAggr$eagerLookup_0_get_r = regRenamingTable$rename_0_getRename ;
  assign sbAggr$eagerLookup_1_get_r = regRenamingTable$rename_1_getRename ;
  assign sbAggr$setBusy_0_set_dst = regRenamingTable$rename_0_getRename[8:0] ;
  assign sbAggr$setBusy_1_set_dst = regRenamingTable$rename_1_getRename[8:0] ;
  assign sbAggr$setReady_0_put = coreFix_aluExe_0_rsAlu$dispatchData[28:22] ;
  assign sbAggr$setReady_1_put = coreFix_aluExe_1_rsAlu$dispatchData[28:22] ;
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1 or
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2 or
	  coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3 or
	  coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4 or
	  coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5 or
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6 or
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1:
	  sbAggr$setReady_2_put =
	      coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[21:15];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2:
	  sbAggr$setReady_2_put =
	      coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[21:15];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3:
	  sbAggr$setReady_2_put =
	      coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[21:15];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4:
	  sbAggr$setReady_2_put =
	      coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[21:15];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5:
	  sbAggr$setReady_2_put =
	      coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[21:15];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6:
	  sbAggr$setReady_2_put =
	      coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[21:15];
      default: sbAggr$setReady_2_put = 7'b0101010 /* unspecified value */ ;
    endcase
  end
  assign sbAggr$setReady_3_put = coreFix_memExe_lsq$issueLd[71:65] ;
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4 or
	  coreFix_memExe_lsq$getHit or
	  MUX_sbAggr$setReady_4_put_1__SEL_2 or
	  coreFix_memExe_lsq$firstLd or
	  MUX_sbAggr$setReady_4_put_1__SEL_1 or coreFix_memExe_lsq$firstSt)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3 ||
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4:
	  sbAggr$setReady_4_put = coreFix_memExe_lsq$getHit[7:1];
      MUX_sbAggr$setReady_4_put_1__SEL_2:
	  sbAggr$setReady_4_put = coreFix_memExe_lsq$firstLd[88:82];
      MUX_sbAggr$setReady_4_put_1__SEL_1:
	  sbAggr$setReady_4_put = coreFix_memExe_lsq$firstSt[149:143];
      default: sbAggr$setReady_4_put = 7'b0101010 /* unspecified value */ ;
    endcase
  end
  assign sbAggr$EN_setBusy_0_set =
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d14174 &&
	     IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13541 ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst ;
  assign sbAggr$EN_setBusy_1_set =
	     MUX_epochManager$updatePrevEpoch_1_update_1__SEL_2 ;
  assign sbAggr$EN_setReady_0_put =
	     WILL_FIRE_RL_coreFix_aluExe_0_doDispatchAlu &&
	     coreFix_aluExe_0_rsAlu$dispatchData[29] ;
  assign sbAggr$EN_setReady_1_put =
	     WILL_FIRE_RL_coreFix_aluExe_1_doDispatchAlu &&
	     coreFix_aluExe_1_rsAlu$dispatchData[29] ;
  assign sbAggr$EN_setReady_2_put =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[22] ;
  assign sbAggr$EN_setReady_3_put =
	     _dor1sbAggr$EN_setReady_3_put &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd0 &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd1 &&
	     coreFix_memExe_lsq$issueLd[72] ;
  assign sbAggr$EN_setReady_4_put =
	     (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq) &&
	     coreFix_memExe_lsq$firstSt[150] ||
	     (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq) &&
	     coreFix_memExe_lsq$firstLd[89] ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2680 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 &&
	     coreFix_memExe_lsq$getHit[8] &&
	     !coreFix_memExe_lsq$getHit[9] ;

  // submodule sbCons
  assign sbCons$eagerLookup_0_get_r = 33'h0 ;
  assign sbCons$eagerLookup_1_get_r = 33'h0 ;
  assign sbCons$lazyLookup_0_get_r =
	     coreFix_aluExe_0_dispToRegQ$first[73:41] ;
  assign sbCons$lazyLookup_1_get_r =
	     coreFix_aluExe_1_dispToRegQ$first[73:41] ;
  assign sbCons$lazyLookup_2_get_r =
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[46:14] ;
  assign sbCons$lazyLookup_3_get_r = coreFix_memExe_dispToRegQ$first[50:18] ;
  assign sbCons$lazyLookup_4_get_r = 33'h0 ;
  assign sbCons$setBusy_0_set_dst = regRenamingTable$rename_0_getRename[8:0] ;
  assign sbCons$setBusy_1_set_dst = regRenamingTable$rename_1_getRename[8:0] ;
  assign sbCons$setReady_0_put = coreFix_aluExe_0_exeToFinQ$first[308:302] ;
  assign sbCons$setReady_1_put = coreFix_aluExe_1_exeToFinQ$first[308:302] ;
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1 or
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2 or
	  coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3 or
	  coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4 or
	  coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5 or
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6 or
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1:
	  sbCons$setReady_2_put =
	      coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[21:15];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2:
	  sbCons$setReady_2_put =
	      coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[21:15];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3:
	  sbCons$setReady_2_put =
	      coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[21:15];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4:
	  sbCons$setReady_2_put =
	      coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[21:15];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5:
	  sbCons$setReady_2_put =
	      coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[21:15];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6:
	  sbCons$setReady_2_put =
	      coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[21:15];
      default: sbCons$setReady_2_put = 7'b0101010 /* unspecified value */ ;
    endcase
  end
  always@(MUX_sbCons$setReady_3_put_1__SEL_1 or
	  coreFix_memExe_lsq$firstSt or
	  MUX_sbCons$setReady_3_put_1__SEL_2 or
	  coreFix_memExe_lsq$firstLd or
	  MUX_sbCons$setReady_3_put_1__SEL_3 or coreFix_memExe_lsq$respLd)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_sbCons$setReady_3_put_1__SEL_1:
	  sbCons$setReady_3_put = coreFix_memExe_lsq$firstSt[149:143];
      MUX_sbCons$setReady_3_put_1__SEL_2:
	  sbCons$setReady_3_put = coreFix_memExe_lsq$firstLd[88:82];
      MUX_sbCons$setReady_3_put_1__SEL_3:
	  sbCons$setReady_3_put = coreFix_memExe_lsq$respLd[71:65];
      default: sbCons$setReady_3_put = 7'b0101010 /* unspecified value */ ;
    endcase
  end
  assign sbCons$setReady_4_put = 7'h0 ;
  assign sbCons$EN_setBusy_0_set =
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d14174 &&
	     IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13541 ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst ;
  assign sbCons$EN_setBusy_1_set =
	     MUX_epochManager$updatePrevEpoch_1_update_1__SEL_2 ;
  assign sbCons$EN_setReady_0_put =
	     _dor1sbCons$EN_setReady_0_put &&
	     coreFix_aluExe_0_exeToFinQ$first[309] ;
  assign sbCons$EN_setReady_1_put =
	     _dor1sbCons$EN_setReady_1_put &&
	     coreFix_aluExe_1_exeToFinQ$first[309] ;
  assign sbCons$EN_setReady_2_put =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[22] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[22] ;
  assign sbCons$EN_setReady_3_put =
	     (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq) &&
	     coreFix_memExe_lsq$firstSt[150] ||
	     (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq) &&
	     coreFix_memExe_lsq$firstLd[89] ||
	     (WILL_FIRE_RL_coreFix_memExe_doRespLdForward ||
	      WILL_FIRE_RL_coreFix_memExe_doRespLdMem) &&
	     coreFix_memExe_lsq$respLd[72] ;
  assign sbCons$EN_setReady_4_put = 1'b0 ;

  // submodule specTagManager
  assign specTagManager$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12757 ;
  assign specTagManager$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  specTagManager$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[5:4];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  specTagManager$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[5:4];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  specTagManager$specUpdate_incorrectSpeculation_kill_tag =
	      2'b10 /* unspecified value */ ;
      default: specTagManager$specUpdate_incorrectSpeculation_kill_tag =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign specTagManager$EN_claimSpecTag =
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     (fetchStage_pipelines_0_canDeq__2814_AND_specTa_ETC___d14229 ||
	      NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14270 &&
	      NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14358) ;
  assign specTagManager$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign specTagManager$EN_specUpdate_correctSpeculation = 1'd1 ;

  // remaining internal signals
  module_amoExec instance_amoExec_2(.amoExec_amo_inst(coreFix_memExe_dMem_cache_m_banks_0_processAmo[10:4]),
				    .amoExec_current_data(curData__h193579),
				    .amoExec_in_data(coreFix_memExe_dMem_cache_m_banks_0_processAmo[74:11]),
				    .amoExec_upper_32_bits(coreFix_memExe_dMem_cache_m_banks_0_processAmo[90]),
				    .amoExec(n__h195117));
  module_amoExec instance_amoExec_3(.amoExec_amo_inst({ mmio_pRqQ_data_0[35:32],
							3'd0 }),
				    .amoExec_current_data({ 63'd0,
							    r__h615234 }),
				    .amoExec_in_data({ 32'd0, x__h77611 }),
				    .amoExec_upper_32_bits(1'd0),
				    .amoExec(amoExec___d934));
  module_basicExec instance_basicExec_6(.basicExec_dInst({ coreFix_aluExe_1_regToExeQ$first[409:405],
							   CASE_coreFix_aluExe_1_regToExeQfirst_BITS_404_ETC__q220,
							   { coreFix_aluExe_1_regToExeQ$first[383],
							     CASE_coreFix_aluExe_1_regToExeQfirst_BITS_382_ETC__q221,
							     coreFix_aluExe_1_regToExeQ$first[370],
							     coreFix_aluExe_1_regToExeQ$first[369:338] } }),
					.basicExec_rVal1(coreFix_aluExe_1_regToExeQ$first[294:231]),
					.basicExec_rVal2(coreFix_aluExe_1_regToExeQ$first[230:167]),
					.basicExec_pc(coreFix_aluExe_1_regToExeQ$first[166:103]),
					.basicExec_ppc(coreFix_aluExe_1_regToExeQ$first[102:39]),
					.basicExec_orig_inst(coreFix_aluExe_1_regToExeQ$first[38:7]),
					.basicExec(basicExec___d12002));
  module_basicExec instance_basicExec_5(.basicExec_dInst({ coreFix_aluExe_0_regToExeQ$first[409:405],
							   CASE_coreFix_aluExe_0_regToExeQfirst_BITS_404_ETC__q223,
							   { coreFix_aluExe_0_regToExeQ$first[383],
							     CASE_coreFix_aluExe_0_regToExeQfirst_BITS_382_ETC__q224,
							     coreFix_aluExe_0_regToExeQ$first[370],
							     coreFix_aluExe_0_regToExeQ$first[369:338] } }),
					.basicExec_rVal1(coreFix_aluExe_0_regToExeQ$first[294:231]),
					.basicExec_rVal2(coreFix_aluExe_0_regToExeQ$first[230:167]),
					.basicExec_pc(coreFix_aluExe_0_regToExeQ$first[166:103]),
					.basicExec_ppc(coreFix_aluExe_0_regToExeQ$first[102:39]),
					.basicExec_orig_inst(coreFix_aluExe_0_regToExeQ$first[38:7]),
					.basicExec(basicExec___d12676));
  module_checkForException instance_checkForException_0(.checkForException_dInst({ fetchStage$pipelines_0_first[199:195],
										   IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d12942,
										   { { fetchStage$pipelines_0_first[173],
										       IF_fetchStage_pipelines_0_first__2816_BITS_172_ETC___d13032 },
										     fetchStage$pipelines_0_first[160],
										     x_data_imm__h676582 } }),
							.checkForException_regs({ fetchStage$pipelines_0_first[95],
										  fetchStage$pipelines_0_first[94:89],
										  { fetchStage$pipelines_0_first[88],
										    fetchStage$pipelines_0_first[87:82] },
										  { fetchStage$pipelines_0_first[81],
										    fetchStage$pipelines_0_first[80:76],
										    { fetchStage$pipelines_0_first[75],
										      fetchStage$pipelines_0_first[74:69] } } }),
							.checkForException_csrState({ x_decodeInfo_frm__h655673,
										      r1__read_BITS_13_TO_12___h655858 !=
										      2'd0,
										      { prv__h718418,
											csrf_tvm_reg,
											{ r1__read_BIT_20___h656554,
											  csrf_tsr_reg,
											  { csrf_mcounteren_cy_reg,
											    csrf_mcounteren_cy_reg &&
											    csrf_scounteren_cy_reg,
											    { csrf_mcounteren_ir_reg,
											      csrf_mcounteren_ir_reg &&
											      csrf_scounteren_ir_reg,
											      { csrf_mcounteren_tm_reg,
												csrf_mcounteren_tm_reg &&
												csrf_scounteren_tm_reg } } } } } }),
							.checkForException(checkForException___d13067));
  module_checkForException instance_checkForException_1(.checkForException_dInst({ fetchStage$pipelines_1_first[199:195],
										   IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d13658,
										   { fetchStage_pipelines_1_first__2825_BIT_173_365_ETC___d13750,
										     fetchStage$pipelines_1_first[160],
										     x_data_imm__h691797 } }),
							.checkForException_regs({ fetchStage$pipelines_1_first[95],
										  fetchStage$pipelines_1_first[94:89],
										  { fetchStage$pipelines_1_first[88],
										    fetchStage$pipelines_1_first[87:82] },
										  { fetchStage$pipelines_1_first[81],
										    fetchStage$pipelines_1_first[80:76],
										    { fetchStage$pipelines_1_first[75],
										      fetchStage$pipelines_1_first[74:69] } } }),
							.checkForException_csrState({ x_decodeInfo_frm__h655673,
										      r1__read_BITS_13_TO_12___h655858 !=
										      2'd0,
										      { prv__h718418,
											csrf_tvm_reg,
											{ r1__read_BIT_20___h656554,
											  csrf_tsr_reg,
											  { csrf_mcounteren_cy_reg,
											    csrf_mcounteren_cy_reg &&
											    csrf_scounteren_cy_reg,
											    { csrf_mcounteren_ir_reg,
											      csrf_mcounteren_ir_reg &&
											      csrf_scounteren_ir_reg,
											      { csrf_mcounteren_tm_reg,
												csrf_mcounteren_tm_reg &&
												csrf_scounteren_tm_reg } } } } } }),
							.checkForException(checkForException___d13772));
  module_execFpuSimple instance_execFpuSimple_4(.execFpuSimple_fpu_inst({ coreFix_fpuMulDivExe_0_regToExeQ$first[223:219],
									  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q243,
									  coreFix_fpuMulDivExe_0_regToExeQ$first[215] }),
						.execFpuSimple_rVal1(rVal1__h482418),
						.execFpuSimple_rVal2(rVal2__h482419),
						.execFpuSimple(execFpuSimple___d11114));
  assign IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMu_ETC__q20 =
	     _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d4307 ?
	       _theResult___snd__h354916 :
	       _theResult____h346742 ;
  assign IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMu_ETC__q55 =
	     _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d5699 ?
	       _theResult___snd__h400613 :
	       _theResult____h392441 ;
  assign IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMu_ETC__q90 =
	     _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d7091 ?
	       _theResult___snd__h446308 :
	       _theResult____h438136 ;
  assign IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_f_ETC__q130 =
	     _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d8955 ?
	       _theResult___snd__h511825 :
	       _theResult____h503526 ;
  assign IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_f_ETC__q147 =
	     _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d9670 ?
	       _theResult___snd__h589982 :
	       _theResult____h581683 ;
  assign IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_f_ETC__q170 =
	     _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10440 ?
	       _theResult___snd__h550678 :
	       _theResult____h542379 ;
  assign IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuM_ETC__q100 =
	     _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d7642 ?
	       _theResult___snd__h464074 :
	       _theResult____h455773 ;
  assign IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuM_ETC__q30 =
	     _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d4858 ?
	       _theResult___snd__h372682 :
	       _theResult____h364381 ;
  assign IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuM_ETC__q65 =
	     _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6250 ?
	       _theResult___snd__h418379 :
	       _theResult____h410078 ;
  assign IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q126 =
	     _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d8643 ?
	       _theResult___snd__h502174 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q133 =
	     _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9005 ?
	       _theResult___snd__h502174 :
	       _theResult___snd__h520579 ;
  assign IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q143 =
	     _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9373 ?
	       _theResult___snd__h580331 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q150 =
	     _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9720 ?
	       _theResult___snd__h580331 :
	       _theResult___snd__h598736 ;
  assign IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q166 =
	     _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10143 ?
	       _theResult___snd__h541027 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q173 =
	     _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10490 ?
	       _theResult___snd__h541027 :
	       _theResult___snd__h559432 ;
  assign IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q105 =
	     _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d7715 ?
	       _theResult___snd__h454890 :
	       _theResult___snd__h472680 ;
  assign IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q22 =
	     _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d4538 ?
	       _theResult___snd__h363498 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q35 =
	     _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d4931 ?
	       _theResult___snd__h363498 :
	       _theResult___snd__h381288 ;
  assign IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q57 =
	     _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5930 ?
	       _theResult___snd__h409195 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q70 =
	     _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6323 ?
	       _theResult___snd__h409195 :
	       _theResult___snd__h426985 ;
  assign IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q92 =
	     _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d7322 ?
	       _theResult___snd__h454890 :
	       57'd0 ;
  assign IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d5127 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4071 ?
	       ((_theResult___fst_exp__h354853 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5112) :
	       ((_theResult___fst_exp__h363509 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5125) ;
  assign IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d5177 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4071 ?
	       ((_theResult___fst_exp__h354853 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5168) :
	       ((_theResult___fst_exp__h363509 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5175) ;
  assign IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d6519 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5463 ?
	       ((_theResult___fst_exp__h400550 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6504) :
	       ((_theResult___fst_exp__h409206 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6517) ;
  assign IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d6569 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5463 ?
	       ((_theResult___fst_exp__h400550 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6560) :
	       ((_theResult___fst_exp__h409206 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6567) ;
  assign IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d7911 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6855 ?
	       ((_theResult___fst_exp__h446245 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7896) :
	       ((_theResult___fst_exp__h454901 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7909) ;
  assign IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d7961 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6855 ?
	       ((_theResult___fst_exp__h446245 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7952) :
	       ((_theResult___fst_exp__h454901 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7959) ;
  assign IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d4305 =
	     (_theResult____h346742[56] ?
		6'd0 :
		(_theResult____h346742[55] ?
		   6'd1 :
		   (_theResult____h346742[54] ?
		      6'd2 :
		      (_theResult____h346742[53] ?
			 6'd3 :
			 (_theResult____h346742[52] ?
			    6'd4 :
			    (_theResult____h346742[51] ?
			       6'd5 :
			       (_theResult____h346742[50] ?
				  6'd6 :
				  (_theResult____h346742[49] ?
				     6'd7 :
				     (_theResult____h346742[48] ?
					6'd8 :
					(_theResult____h346742[47] ?
					   6'd9 :
					   (_theResult____h346742[46] ?
					      6'd10 :
					      (_theResult____h346742[45] ?
						 6'd11 :
						 (_theResult____h346742[44] ?
						    6'd12 :
						    (_theResult____h346742[43] ?
						       6'd13 :
						       (_theResult____h346742[42] ?
							  6'd14 :
							  (_theResult____h346742[41] ?
							     6'd15 :
							     (_theResult____h346742[40] ?
								6'd16 :
								(_theResult____h346742[39] ?
								   6'd17 :
								   (_theResult____h346742[38] ?
								      6'd18 :
								      (_theResult____h346742[37] ?
									 6'd19 :
									 (_theResult____h346742[36] ?
									    6'd20 :
									    (_theResult____h346742[35] ?
									       6'd21 :
									       (_theResult____h346742[34] ?
										  6'd22 :
										  (_theResult____h346742[33] ?
										     6'd23 :
										     (_theResult____h346742[32] ?
											6'd24 :
											(_theResult____h346742[31] ?
											   6'd25 :
											   (_theResult____h346742[30] ?
											      6'd26 :
											      (_theResult____h346742[29] ?
												 6'd27 :
												 (_theResult____h346742[28] ?
												    6'd28 :
												    (_theResult____h346742[27] ?
												       6'd29 :
												       (_theResult____h346742[26] ?
													  6'd30 :
													  (_theResult____h346742[25] ?
													     6'd31 :
													     (_theResult____h346742[24] ?
														6'd32 :
														(_theResult____h346742[23] ?
														   6'd33 :
														   (_theResult____h346742[22] ?
														      6'd34 :
														      (_theResult____h346742[21] ?
															 6'd35 :
															 (_theResult____h346742[20] ?
															    6'd36 :
															    (_theResult____h346742[19] ?
															       6'd37 :
															       (_theResult____h346742[18] ?
																  6'd38 :
																  (_theResult____h346742[17] ?
																     6'd39 :
																     (_theResult____h346742[16] ?
																	6'd40 :
																	(_theResult____h346742[15] ?
																	   6'd41 :
																	   (_theResult____h346742[14] ?
																	      6'd42 :
																	      (_theResult____h346742[13] ?
																		 6'd43 :
																		 (_theResult____h346742[12] ?
																		    6'd44 :
																		    (_theResult____h346742[11] ?
																		       6'd45 :
																		       (_theResult____h346742[10] ?
																			  6'd46 :
																			  (_theResult____h346742[9] ?
																			     6'd47 :
																			     (_theResult____h346742[8] ?
																				6'd48 :
																				(_theResult____h346742[7] ?
																				   6'd49 :
																				   (_theResult____h346742[6] ?
																				      6'd50 :
																				      (_theResult____h346742[5] ?
																					 6'd51 :
																					 (_theResult____h346742[4] ?
																					    6'd52 :
																					    (_theResult____h346742[3] ?
																					       6'd53 :
																					       (_theResult____h346742[2] ?
																						  6'd54 :
																						  (_theResult____h346742[1] ?
																						     6'd55 :
																						     (_theResult____h346742[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d5697 =
	     (_theResult____h392441[56] ?
		6'd0 :
		(_theResult____h392441[55] ?
		   6'd1 :
		   (_theResult____h392441[54] ?
		      6'd2 :
		      (_theResult____h392441[53] ?
			 6'd3 :
			 (_theResult____h392441[52] ?
			    6'd4 :
			    (_theResult____h392441[51] ?
			       6'd5 :
			       (_theResult____h392441[50] ?
				  6'd6 :
				  (_theResult____h392441[49] ?
				     6'd7 :
				     (_theResult____h392441[48] ?
					6'd8 :
					(_theResult____h392441[47] ?
					   6'd9 :
					   (_theResult____h392441[46] ?
					      6'd10 :
					      (_theResult____h392441[45] ?
						 6'd11 :
						 (_theResult____h392441[44] ?
						    6'd12 :
						    (_theResult____h392441[43] ?
						       6'd13 :
						       (_theResult____h392441[42] ?
							  6'd14 :
							  (_theResult____h392441[41] ?
							     6'd15 :
							     (_theResult____h392441[40] ?
								6'd16 :
								(_theResult____h392441[39] ?
								   6'd17 :
								   (_theResult____h392441[38] ?
								      6'd18 :
								      (_theResult____h392441[37] ?
									 6'd19 :
									 (_theResult____h392441[36] ?
									    6'd20 :
									    (_theResult____h392441[35] ?
									       6'd21 :
									       (_theResult____h392441[34] ?
										  6'd22 :
										  (_theResult____h392441[33] ?
										     6'd23 :
										     (_theResult____h392441[32] ?
											6'd24 :
											(_theResult____h392441[31] ?
											   6'd25 :
											   (_theResult____h392441[30] ?
											      6'd26 :
											      (_theResult____h392441[29] ?
												 6'd27 :
												 (_theResult____h392441[28] ?
												    6'd28 :
												    (_theResult____h392441[27] ?
												       6'd29 :
												       (_theResult____h392441[26] ?
													  6'd30 :
													  (_theResult____h392441[25] ?
													     6'd31 :
													     (_theResult____h392441[24] ?
														6'd32 :
														(_theResult____h392441[23] ?
														   6'd33 :
														   (_theResult____h392441[22] ?
														      6'd34 :
														      (_theResult____h392441[21] ?
															 6'd35 :
															 (_theResult____h392441[20] ?
															    6'd36 :
															    (_theResult____h392441[19] ?
															       6'd37 :
															       (_theResult____h392441[18] ?
																  6'd38 :
																  (_theResult____h392441[17] ?
																     6'd39 :
																     (_theResult____h392441[16] ?
																	6'd40 :
																	(_theResult____h392441[15] ?
																	   6'd41 :
																	   (_theResult____h392441[14] ?
																	      6'd42 :
																	      (_theResult____h392441[13] ?
																		 6'd43 :
																		 (_theResult____h392441[12] ?
																		    6'd44 :
																		    (_theResult____h392441[11] ?
																		       6'd45 :
																		       (_theResult____h392441[10] ?
																			  6'd46 :
																			  (_theResult____h392441[9] ?
																			     6'd47 :
																			     (_theResult____h392441[8] ?
																				6'd48 :
																				(_theResult____h392441[7] ?
																				   6'd49 :
																				   (_theResult____h392441[6] ?
																				      6'd50 :
																				      (_theResult____h392441[5] ?
																					 6'd51 :
																					 (_theResult____h392441[4] ?
																					    6'd52 :
																					    (_theResult____h392441[3] ?
																					       6'd53 :
																					       (_theResult____h392441[2] ?
																						  6'd54 :
																						  (_theResult____h392441[1] ?
																						     6'd55 :
																						     (_theResult____h392441[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d7089 =
	     (_theResult____h438136[56] ?
		6'd0 :
		(_theResult____h438136[55] ?
		   6'd1 :
		   (_theResult____h438136[54] ?
		      6'd2 :
		      (_theResult____h438136[53] ?
			 6'd3 :
			 (_theResult____h438136[52] ?
			    6'd4 :
			    (_theResult____h438136[51] ?
			       6'd5 :
			       (_theResult____h438136[50] ?
				  6'd6 :
				  (_theResult____h438136[49] ?
				     6'd7 :
				     (_theResult____h438136[48] ?
					6'd8 :
					(_theResult____h438136[47] ?
					   6'd9 :
					   (_theResult____h438136[46] ?
					      6'd10 :
					      (_theResult____h438136[45] ?
						 6'd11 :
						 (_theResult____h438136[44] ?
						    6'd12 :
						    (_theResult____h438136[43] ?
						       6'd13 :
						       (_theResult____h438136[42] ?
							  6'd14 :
							  (_theResult____h438136[41] ?
							     6'd15 :
							     (_theResult____h438136[40] ?
								6'd16 :
								(_theResult____h438136[39] ?
								   6'd17 :
								   (_theResult____h438136[38] ?
								      6'd18 :
								      (_theResult____h438136[37] ?
									 6'd19 :
									 (_theResult____h438136[36] ?
									    6'd20 :
									    (_theResult____h438136[35] ?
									       6'd21 :
									       (_theResult____h438136[34] ?
										  6'd22 :
										  (_theResult____h438136[33] ?
										     6'd23 :
										     (_theResult____h438136[32] ?
											6'd24 :
											(_theResult____h438136[31] ?
											   6'd25 :
											   (_theResult____h438136[30] ?
											      6'd26 :
											      (_theResult____h438136[29] ?
												 6'd27 :
												 (_theResult____h438136[28] ?
												    6'd28 :
												    (_theResult____h438136[27] ?
												       6'd29 :
												       (_theResult____h438136[26] ?
													  6'd30 :
													  (_theResult____h438136[25] ?
													     6'd31 :
													     (_theResult____h438136[24] ?
														6'd32 :
														(_theResult____h438136[23] ?
														   6'd33 :
														   (_theResult____h438136[22] ?
														      6'd34 :
														      (_theResult____h438136[21] ?
															 6'd35 :
															 (_theResult____h438136[20] ?
															    6'd36 :
															    (_theResult____h438136[19] ?
															       6'd37 :
															       (_theResult____h438136[18] ?
																  6'd38 :
																  (_theResult____h438136[17] ?
																     6'd39 :
																     (_theResult____h438136[16] ?
																	6'd40 :
																	(_theResult____h438136[15] ?
																	   6'd41 :
																	   (_theResult____h438136[14] ?
																	      6'd42 :
																	      (_theResult____h438136[13] ?
																		 6'd43 :
																		 (_theResult____h438136[12] ?
																		    6'd44 :
																		    (_theResult____h438136[11] ?
																		       6'd45 :
																		       (_theResult____h438136[10] ?
																			  6'd46 :
																			  (_theResult____h438136[9] ?
																			     6'd47 :
																			     (_theResult____h438136[8] ?
																				6'd48 :
																				(_theResult____h438136[7] ?
																				   6'd49 :
																				   (_theResult____h438136[6] ?
																				      6'd50 :
																				      (_theResult____h438136[5] ?
																					 6'd51 :
																					 (_theResult____h438136[4] ?
																					    6'd52 :
																					    (_theResult____h438136[3] ?
																					       6'd53 :
																					       (_theResult____h438136[2] ?
																						  6'd54 :
																						  (_theResult____h438136[1] ?
																						     6'd55 :
																						     (_theResult____h438136[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d10438 =
	     (_theResult____h542379[56] ?
		6'd0 :
		(_theResult____h542379[55] ?
		   6'd1 :
		   (_theResult____h542379[54] ?
		      6'd2 :
		      (_theResult____h542379[53] ?
			 6'd3 :
			 (_theResult____h542379[52] ?
			    6'd4 :
			    (_theResult____h542379[51] ?
			       6'd5 :
			       (_theResult____h542379[50] ?
				  6'd6 :
				  (_theResult____h542379[49] ?
				     6'd7 :
				     (_theResult____h542379[48] ?
					6'd8 :
					(_theResult____h542379[47] ?
					   6'd9 :
					   (_theResult____h542379[46] ?
					      6'd10 :
					      (_theResult____h542379[45] ?
						 6'd11 :
						 (_theResult____h542379[44] ?
						    6'd12 :
						    (_theResult____h542379[43] ?
						       6'd13 :
						       (_theResult____h542379[42] ?
							  6'd14 :
							  (_theResult____h542379[41] ?
							     6'd15 :
							     (_theResult____h542379[40] ?
								6'd16 :
								(_theResult____h542379[39] ?
								   6'd17 :
								   (_theResult____h542379[38] ?
								      6'd18 :
								      (_theResult____h542379[37] ?
									 6'd19 :
									 (_theResult____h542379[36] ?
									    6'd20 :
									    (_theResult____h542379[35] ?
									       6'd21 :
									       (_theResult____h542379[34] ?
										  6'd22 :
										  (_theResult____h542379[33] ?
										     6'd23 :
										     (_theResult____h542379[32] ?
											6'd24 :
											(_theResult____h542379[31] ?
											   6'd25 :
											   (_theResult____h542379[30] ?
											      6'd26 :
											      (_theResult____h542379[29] ?
												 6'd27 :
												 (_theResult____h542379[28] ?
												    6'd28 :
												    (_theResult____h542379[27] ?
												       6'd29 :
												       (_theResult____h542379[26] ?
													  6'd30 :
													  (_theResult____h542379[25] ?
													     6'd31 :
													     (_theResult____h542379[24] ?
														6'd32 :
														(_theResult____h542379[23] ?
														   6'd33 :
														   (_theResult____h542379[22] ?
														      6'd34 :
														      (_theResult____h542379[21] ?
															 6'd35 :
															 (_theResult____h542379[20] ?
															    6'd36 :
															    (_theResult____h542379[19] ?
															       6'd37 :
															       (_theResult____h542379[18] ?
																  6'd38 :
																  (_theResult____h542379[17] ?
																     6'd39 :
																     (_theResult____h542379[16] ?
																	6'd40 :
																	(_theResult____h542379[15] ?
																	   6'd41 :
																	   (_theResult____h542379[14] ?
																	      6'd42 :
																	      (_theResult____h542379[13] ?
																		 6'd43 :
																		 (_theResult____h542379[12] ?
																		    6'd44 :
																		    (_theResult____h542379[11] ?
																		       6'd45 :
																		       (_theResult____h542379[10] ?
																			  6'd46 :
																			  (_theResult____h542379[9] ?
																			     6'd47 :
																			     (_theResult____h542379[8] ?
																				6'd48 :
																				(_theResult____h542379[7] ?
																				   6'd49 :
																				   (_theResult____h542379[6] ?
																				      6'd50 :
																				      (_theResult____h542379[5] ?
																					 6'd51 :
																					 (_theResult____h542379[4] ?
																					    6'd52 :
																					    (_theResult____h542379[3] ?
																					       6'd53 :
																					       (_theResult____h542379[2] ?
																						  6'd54 :
																						  (_theResult____h542379[1] ?
																						     6'd55 :
																						     (_theResult____h542379[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d8953 =
	     (_theResult____h503526[56] ?
		6'd0 :
		(_theResult____h503526[55] ?
		   6'd1 :
		   (_theResult____h503526[54] ?
		      6'd2 :
		      (_theResult____h503526[53] ?
			 6'd3 :
			 (_theResult____h503526[52] ?
			    6'd4 :
			    (_theResult____h503526[51] ?
			       6'd5 :
			       (_theResult____h503526[50] ?
				  6'd6 :
				  (_theResult____h503526[49] ?
				     6'd7 :
				     (_theResult____h503526[48] ?
					6'd8 :
					(_theResult____h503526[47] ?
					   6'd9 :
					   (_theResult____h503526[46] ?
					      6'd10 :
					      (_theResult____h503526[45] ?
						 6'd11 :
						 (_theResult____h503526[44] ?
						    6'd12 :
						    (_theResult____h503526[43] ?
						       6'd13 :
						       (_theResult____h503526[42] ?
							  6'd14 :
							  (_theResult____h503526[41] ?
							     6'd15 :
							     (_theResult____h503526[40] ?
								6'd16 :
								(_theResult____h503526[39] ?
								   6'd17 :
								   (_theResult____h503526[38] ?
								      6'd18 :
								      (_theResult____h503526[37] ?
									 6'd19 :
									 (_theResult____h503526[36] ?
									    6'd20 :
									    (_theResult____h503526[35] ?
									       6'd21 :
									       (_theResult____h503526[34] ?
										  6'd22 :
										  (_theResult____h503526[33] ?
										     6'd23 :
										     (_theResult____h503526[32] ?
											6'd24 :
											(_theResult____h503526[31] ?
											   6'd25 :
											   (_theResult____h503526[30] ?
											      6'd26 :
											      (_theResult____h503526[29] ?
												 6'd27 :
												 (_theResult____h503526[28] ?
												    6'd28 :
												    (_theResult____h503526[27] ?
												       6'd29 :
												       (_theResult____h503526[26] ?
													  6'd30 :
													  (_theResult____h503526[25] ?
													     6'd31 :
													     (_theResult____h503526[24] ?
														6'd32 :
														(_theResult____h503526[23] ?
														   6'd33 :
														   (_theResult____h503526[22] ?
														      6'd34 :
														      (_theResult____h503526[21] ?
															 6'd35 :
															 (_theResult____h503526[20] ?
															    6'd36 :
															    (_theResult____h503526[19] ?
															       6'd37 :
															       (_theResult____h503526[18] ?
																  6'd38 :
																  (_theResult____h503526[17] ?
																     6'd39 :
																     (_theResult____h503526[16] ?
																	6'd40 :
																	(_theResult____h503526[15] ?
																	   6'd41 :
																	   (_theResult____h503526[14] ?
																	      6'd42 :
																	      (_theResult____h503526[13] ?
																		 6'd43 :
																		 (_theResult____h503526[12] ?
																		    6'd44 :
																		    (_theResult____h503526[11] ?
																		       6'd45 :
																		       (_theResult____h503526[10] ?
																			  6'd46 :
																			  (_theResult____h503526[9] ?
																			     6'd47 :
																			     (_theResult____h503526[8] ?
																				6'd48 :
																				(_theResult____h503526[7] ?
																				   6'd49 :
																				   (_theResult____h503526[6] ?
																				      6'd50 :
																				      (_theResult____h503526[5] ?
																					 6'd51 :
																					 (_theResult____h503526[4] ?
																					    6'd52 :
																					    (_theResult____h503526[3] ?
																					       6'd53 :
																					       (_theResult____h503526[2] ?
																						  6'd54 :
																						  (_theResult____h503526[1] ?
																						     6'd55 :
																						     (_theResult____h503526[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d9668 =
	     (_theResult____h581683[56] ?
		6'd0 :
		(_theResult____h581683[55] ?
		   6'd1 :
		   (_theResult____h581683[54] ?
		      6'd2 :
		      (_theResult____h581683[53] ?
			 6'd3 :
			 (_theResult____h581683[52] ?
			    6'd4 :
			    (_theResult____h581683[51] ?
			       6'd5 :
			       (_theResult____h581683[50] ?
				  6'd6 :
				  (_theResult____h581683[49] ?
				     6'd7 :
				     (_theResult____h581683[48] ?
					6'd8 :
					(_theResult____h581683[47] ?
					   6'd9 :
					   (_theResult____h581683[46] ?
					      6'd10 :
					      (_theResult____h581683[45] ?
						 6'd11 :
						 (_theResult____h581683[44] ?
						    6'd12 :
						    (_theResult____h581683[43] ?
						       6'd13 :
						       (_theResult____h581683[42] ?
							  6'd14 :
							  (_theResult____h581683[41] ?
							     6'd15 :
							     (_theResult____h581683[40] ?
								6'd16 :
								(_theResult____h581683[39] ?
								   6'd17 :
								   (_theResult____h581683[38] ?
								      6'd18 :
								      (_theResult____h581683[37] ?
									 6'd19 :
									 (_theResult____h581683[36] ?
									    6'd20 :
									    (_theResult____h581683[35] ?
									       6'd21 :
									       (_theResult____h581683[34] ?
										  6'd22 :
										  (_theResult____h581683[33] ?
										     6'd23 :
										     (_theResult____h581683[32] ?
											6'd24 :
											(_theResult____h581683[31] ?
											   6'd25 :
											   (_theResult____h581683[30] ?
											      6'd26 :
											      (_theResult____h581683[29] ?
												 6'd27 :
												 (_theResult____h581683[28] ?
												    6'd28 :
												    (_theResult____h581683[27] ?
												       6'd29 :
												       (_theResult____h581683[26] ?
													  6'd30 :
													  (_theResult____h581683[25] ?
													     6'd31 :
													     (_theResult____h581683[24] ?
														6'd32 :
														(_theResult____h581683[23] ?
														   6'd33 :
														   (_theResult____h581683[22] ?
														      6'd34 :
														      (_theResult____h581683[21] ?
															 6'd35 :
															 (_theResult____h581683[20] ?
															    6'd36 :
															    (_theResult____h581683[19] ?
															       6'd37 :
															       (_theResult____h581683[18] ?
																  6'd38 :
																  (_theResult____h581683[17] ?
																     6'd39 :
																     (_theResult____h581683[16] ?
																	6'd40 :
																	(_theResult____h581683[15] ?
																	   6'd41 :
																	   (_theResult____h581683[14] ?
																	      6'd42 :
																	      (_theResult____h581683[13] ?
																		 6'd43 :
																		 (_theResult____h581683[12] ?
																		    6'd44 :
																		    (_theResult____h581683[11] ?
																		       6'd45 :
																		       (_theResult____h581683[10] ?
																			  6'd46 :
																			  (_theResult____h581683[9] ?
																			     6'd47 :
																			     (_theResult____h581683[8] ?
																				6'd48 :
																				(_theResult____h581683[7] ?
																				   6'd49 :
																				   (_theResult____h581683[6] ?
																				      6'd50 :
																				      (_theResult____h581683[5] ?
																					 6'd51 :
																					 (_theResult____h581683[4] ?
																					    6'd52 :
																					    (_theResult____h581683[3] ?
																					       6'd53 :
																					       (_theResult____h581683[2] ?
																						  6'd54 :
																						  (_theResult____h581683[1] ?
																						     6'd55 :
																						     (_theResult____h581683[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d4856 =
	     (_theResult____h364381[56] ?
		6'd0 :
		(_theResult____h364381[55] ?
		   6'd1 :
		   (_theResult____h364381[54] ?
		      6'd2 :
		      (_theResult____h364381[53] ?
			 6'd3 :
			 (_theResult____h364381[52] ?
			    6'd4 :
			    (_theResult____h364381[51] ?
			       6'd5 :
			       (_theResult____h364381[50] ?
				  6'd6 :
				  (_theResult____h364381[49] ?
				     6'd7 :
				     (_theResult____h364381[48] ?
					6'd8 :
					(_theResult____h364381[47] ?
					   6'd9 :
					   (_theResult____h364381[46] ?
					      6'd10 :
					      (_theResult____h364381[45] ?
						 6'd11 :
						 (_theResult____h364381[44] ?
						    6'd12 :
						    (_theResult____h364381[43] ?
						       6'd13 :
						       (_theResult____h364381[42] ?
							  6'd14 :
							  (_theResult____h364381[41] ?
							     6'd15 :
							     (_theResult____h364381[40] ?
								6'd16 :
								(_theResult____h364381[39] ?
								   6'd17 :
								   (_theResult____h364381[38] ?
								      6'd18 :
								      (_theResult____h364381[37] ?
									 6'd19 :
									 (_theResult____h364381[36] ?
									    6'd20 :
									    (_theResult____h364381[35] ?
									       6'd21 :
									       (_theResult____h364381[34] ?
										  6'd22 :
										  (_theResult____h364381[33] ?
										     6'd23 :
										     (_theResult____h364381[32] ?
											6'd24 :
											(_theResult____h364381[31] ?
											   6'd25 :
											   (_theResult____h364381[30] ?
											      6'd26 :
											      (_theResult____h364381[29] ?
												 6'd27 :
												 (_theResult____h364381[28] ?
												    6'd28 :
												    (_theResult____h364381[27] ?
												       6'd29 :
												       (_theResult____h364381[26] ?
													  6'd30 :
													  (_theResult____h364381[25] ?
													     6'd31 :
													     (_theResult____h364381[24] ?
														6'd32 :
														(_theResult____h364381[23] ?
														   6'd33 :
														   (_theResult____h364381[22] ?
														      6'd34 :
														      (_theResult____h364381[21] ?
															 6'd35 :
															 (_theResult____h364381[20] ?
															    6'd36 :
															    (_theResult____h364381[19] ?
															       6'd37 :
															       (_theResult____h364381[18] ?
																  6'd38 :
																  (_theResult____h364381[17] ?
																     6'd39 :
																     (_theResult____h364381[16] ?
																	6'd40 :
																	(_theResult____h364381[15] ?
																	   6'd41 :
																	   (_theResult____h364381[14] ?
																	      6'd42 :
																	      (_theResult____h364381[13] ?
																		 6'd43 :
																		 (_theResult____h364381[12] ?
																		    6'd44 :
																		    (_theResult____h364381[11] ?
																		       6'd45 :
																		       (_theResult____h364381[10] ?
																			  6'd46 :
																			  (_theResult____h364381[9] ?
																			     6'd47 :
																			     (_theResult____h364381[8] ?
																				6'd48 :
																				(_theResult____h364381[7] ?
																				   6'd49 :
																				   (_theResult____h364381[6] ?
																				      6'd50 :
																				      (_theResult____h364381[5] ?
																					 6'd51 :
																					 (_theResult____h364381[4] ?
																					    6'd52 :
																					    (_theResult____h364381[3] ?
																					       6'd53 :
																					       (_theResult____h364381[2] ?
																						  6'd54 :
																						  (_theResult____h364381[1] ?
																						     6'd55 :
																						     (_theResult____h364381[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d6248 =
	     (_theResult____h410078[56] ?
		6'd0 :
		(_theResult____h410078[55] ?
		   6'd1 :
		   (_theResult____h410078[54] ?
		      6'd2 :
		      (_theResult____h410078[53] ?
			 6'd3 :
			 (_theResult____h410078[52] ?
			    6'd4 :
			    (_theResult____h410078[51] ?
			       6'd5 :
			       (_theResult____h410078[50] ?
				  6'd6 :
				  (_theResult____h410078[49] ?
				     6'd7 :
				     (_theResult____h410078[48] ?
					6'd8 :
					(_theResult____h410078[47] ?
					   6'd9 :
					   (_theResult____h410078[46] ?
					      6'd10 :
					      (_theResult____h410078[45] ?
						 6'd11 :
						 (_theResult____h410078[44] ?
						    6'd12 :
						    (_theResult____h410078[43] ?
						       6'd13 :
						       (_theResult____h410078[42] ?
							  6'd14 :
							  (_theResult____h410078[41] ?
							     6'd15 :
							     (_theResult____h410078[40] ?
								6'd16 :
								(_theResult____h410078[39] ?
								   6'd17 :
								   (_theResult____h410078[38] ?
								      6'd18 :
								      (_theResult____h410078[37] ?
									 6'd19 :
									 (_theResult____h410078[36] ?
									    6'd20 :
									    (_theResult____h410078[35] ?
									       6'd21 :
									       (_theResult____h410078[34] ?
										  6'd22 :
										  (_theResult____h410078[33] ?
										     6'd23 :
										     (_theResult____h410078[32] ?
											6'd24 :
											(_theResult____h410078[31] ?
											   6'd25 :
											   (_theResult____h410078[30] ?
											      6'd26 :
											      (_theResult____h410078[29] ?
												 6'd27 :
												 (_theResult____h410078[28] ?
												    6'd28 :
												    (_theResult____h410078[27] ?
												       6'd29 :
												       (_theResult____h410078[26] ?
													  6'd30 :
													  (_theResult____h410078[25] ?
													     6'd31 :
													     (_theResult____h410078[24] ?
														6'd32 :
														(_theResult____h410078[23] ?
														   6'd33 :
														   (_theResult____h410078[22] ?
														      6'd34 :
														      (_theResult____h410078[21] ?
															 6'd35 :
															 (_theResult____h410078[20] ?
															    6'd36 :
															    (_theResult____h410078[19] ?
															       6'd37 :
															       (_theResult____h410078[18] ?
																  6'd38 :
																  (_theResult____h410078[17] ?
																     6'd39 :
																     (_theResult____h410078[16] ?
																	6'd40 :
																	(_theResult____h410078[15] ?
																	   6'd41 :
																	   (_theResult____h410078[14] ?
																	      6'd42 :
																	      (_theResult____h410078[13] ?
																		 6'd43 :
																		 (_theResult____h410078[12] ?
																		    6'd44 :
																		    (_theResult____h410078[11] ?
																		       6'd45 :
																		       (_theResult____h410078[10] ?
																			  6'd46 :
																			  (_theResult____h410078[9] ?
																			     6'd47 :
																			     (_theResult____h410078[8] ?
																				6'd48 :
																				(_theResult____h410078[7] ?
																				   6'd49 :
																				   (_theResult____h410078[6] ?
																				      6'd50 :
																				      (_theResult____h410078[5] ?
																					 6'd51 :
																					 (_theResult____h410078[4] ?
																					    6'd52 :
																					    (_theResult____h410078[3] ?
																					       6'd53 :
																					       (_theResult____h410078[2] ?
																						  6'd54 :
																						  (_theResult____h410078[1] ?
																						     6'd55 :
																						     (_theResult____h410078[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d7640 =
	     (_theResult____h455773[56] ?
		6'd0 :
		(_theResult____h455773[55] ?
		   6'd1 :
		   (_theResult____h455773[54] ?
		      6'd2 :
		      (_theResult____h455773[53] ?
			 6'd3 :
			 (_theResult____h455773[52] ?
			    6'd4 :
			    (_theResult____h455773[51] ?
			       6'd5 :
			       (_theResult____h455773[50] ?
				  6'd6 :
				  (_theResult____h455773[49] ?
				     6'd7 :
				     (_theResult____h455773[48] ?
					6'd8 :
					(_theResult____h455773[47] ?
					   6'd9 :
					   (_theResult____h455773[46] ?
					      6'd10 :
					      (_theResult____h455773[45] ?
						 6'd11 :
						 (_theResult____h455773[44] ?
						    6'd12 :
						    (_theResult____h455773[43] ?
						       6'd13 :
						       (_theResult____h455773[42] ?
							  6'd14 :
							  (_theResult____h455773[41] ?
							     6'd15 :
							     (_theResult____h455773[40] ?
								6'd16 :
								(_theResult____h455773[39] ?
								   6'd17 :
								   (_theResult____h455773[38] ?
								      6'd18 :
								      (_theResult____h455773[37] ?
									 6'd19 :
									 (_theResult____h455773[36] ?
									    6'd20 :
									    (_theResult____h455773[35] ?
									       6'd21 :
									       (_theResult____h455773[34] ?
										  6'd22 :
										  (_theResult____h455773[33] ?
										     6'd23 :
										     (_theResult____h455773[32] ?
											6'd24 :
											(_theResult____h455773[31] ?
											   6'd25 :
											   (_theResult____h455773[30] ?
											      6'd26 :
											      (_theResult____h455773[29] ?
												 6'd27 :
												 (_theResult____h455773[28] ?
												    6'd28 :
												    (_theResult____h455773[27] ?
												       6'd29 :
												       (_theResult____h455773[26] ?
													  6'd30 :
													  (_theResult____h455773[25] ?
													     6'd31 :
													     (_theResult____h455773[24] ?
														6'd32 :
														(_theResult____h455773[23] ?
														   6'd33 :
														   (_theResult____h455773[22] ?
														      6'd34 :
														      (_theResult____h455773[21] ?
															 6'd35 :
															 (_theResult____h455773[20] ?
															    6'd36 :
															    (_theResult____h455773[19] ?
															       6'd37 :
															       (_theResult____h455773[18] ?
																  6'd38 :
																  (_theResult____h455773[17] ?
																     6'd39 :
																     (_theResult____h455773[16] ?
																	6'd40 :
																	(_theResult____h455773[15] ?
																	   6'd41 :
																	   (_theResult____h455773[14] ?
																	      6'd42 :
																	      (_theResult____h455773[13] ?
																		 6'd43 :
																		 (_theResult____h455773[12] ?
																		    6'd44 :
																		    (_theResult____h455773[11] ?
																		       6'd45 :
																		       (_theResult____h455773[10] ?
																			  6'd46 :
																			  (_theResult____h455773[9] ?
																			     6'd47 :
																			     (_theResult____h455773[8] ?
																				6'd48 :
																				(_theResult____h455773[7] ?
																				   6'd49 :
																				   (_theResult____h455773[6] ?
																				      6'd50 :
																				      (_theResult____h455773[5] ?
																					 6'd51 :
																					 (_theResult____h455773[4] ?
																					    6'd52 :
																					    (_theResult____h455773[3] ?
																					       6'd53 :
																					       (_theResult____h455773[2] ?
																						  6'd54 :
																						  (_theResult____h455773[1] ?
																						     6'd55 :
																						     (_theResult____h455773[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d10482 =
	     (_theResult___fst_exp__h550615 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[99] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
		  CASE_guard42389_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q187 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q188) ;
  assign IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d10749 =
	     (_theResult___fst_exp__h550615 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] !=
	       32'hFFFFFFFF ||
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[99] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
		  CASE_guard42389_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q191 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q192) ;
  assign IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d8997 =
	     (_theResult___fst_exp__h511762 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[163] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
		  CASE_guard03536_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q139 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q140) ;
  assign IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d9712 =
	     (_theResult___fst_exp__h589919 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[35] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
		  CASE_guard81693_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q154 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q155) ;
  assign IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d9980 =
	     (_theResult___fst_exp__h589919 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] !=
	       32'hFFFFFFFF ||
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[35] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
		  CASE_guard81693_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q160 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q161) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d4368 =
	     (guard__h346752 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68]) ?
	       _theResult___fst_exp__h354853 :
	       _theResult___exp__h355369 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d4371 =
	     (guard__h346752 == 2'b0) ?
	       _theResult___fst_exp__h354853 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		  _theResult___exp__h355369 :
		  _theResult___fst_exp__h354853) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5015 =
	     (guard__h346752 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68]) ?
	       sfdin__h354847[56:34] :
	       _theResult___sfd__h355370 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5017 =
	     (guard__h346752 == 2'b0) ?
	       sfdin__h354847[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		  _theResult___sfd__h355370 :
		  sfdin__h354847[56:34]) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5760 =
	     (guard__h392451 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68]) ?
	       _theResult___fst_exp__h400550 :
	       _theResult___exp__h401066 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5763 =
	     (guard__h392451 == 2'b0) ?
	       _theResult___fst_exp__h400550 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		  _theResult___exp__h401066 :
		  _theResult___fst_exp__h400550) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6407 =
	     (guard__h392451 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68]) ?
	       sfdin__h400544[56:34] :
	       _theResult___sfd__h401067 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6409 =
	     (guard__h392451 == 2'b0) ?
	       sfdin__h400544[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		  _theResult___sfd__h401067 :
		  sfdin__h400544[56:34]) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7152 =
	     (guard__h438146 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68]) ?
	       _theResult___fst_exp__h446245 :
	       _theResult___exp__h446761 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7155 =
	     (guard__h438146 == 2'b0) ?
	       _theResult___fst_exp__h446245 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		  _theResult___exp__h446761 :
		  _theResult___fst_exp__h446245) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7799 =
	     (guard__h438146 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68]) ?
	       sfdin__h446239[56:34] :
	       _theResult___sfd__h446762 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7801 =
	     (guard__h438146 == 2'b0) ?
	       sfdin__h446239[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		  _theResult___sfd__h446762 :
		  sfdin__h446239[56:34]) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10594 =
	     (guard__h542389 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[99]) ?
	       _theResult___fst_exp__h550615 :
	       _theResult___exp__h551344 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10596 =
	     (guard__h542389 == 2'b0) ?
	       _theResult___fst_exp__h550615 :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[99]) ?
		  _theResult___exp__h551344 :
		  _theResult___fst_exp__h550615) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10677 =
	     (guard__h542389 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[99]) ?
	       sfdin__h550609[56:5] :
	       _theResult___sfd__h551345 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10679 =
	     (guard__h542389 == 2'b0) ?
	       sfdin__h550609[56:5] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[99]) ?
		  _theResult___sfd__h551345 :
		  sfdin__h550609[56:5]) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9114 =
	     (guard__h503536 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[163]) ?
	       _theResult___fst_exp__h511762 :
	       _theResult___exp__h512491 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9116 =
	     (guard__h503536 == 2'b0) ?
	       _theResult___fst_exp__h511762 :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[163]) ?
		  _theResult___exp__h512491 :
		  _theResult___fst_exp__h511762) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9198 =
	     (guard__h503536 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[163]) ?
	       sfdin__h511756[56:5] :
	       _theResult___sfd__h512492 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9200 =
	     (guard__h503536 == 2'b0) ?
	       sfdin__h511756[56:5] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[163]) ?
		  _theResult___sfd__h512492 :
		  sfdin__h511756[56:5]) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9824 =
	     (guard__h581693 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[35]) ?
	       _theResult___fst_exp__h589919 :
	       _theResult___exp__h590648 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9826 =
	     (guard__h581693 == 2'b0) ?
	       _theResult___fst_exp__h589919 :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[35]) ?
		  _theResult___exp__h590648 :
		  _theResult___fst_exp__h589919) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9907 =
	     (guard__h581693 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[35]) ?
	       sfdin__h589913[56:5] :
	       _theResult___sfd__h590649 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9909 =
	     (guard__h581693 == 2'b0) ?
	       sfdin__h589913[56:5] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[35]) ?
		  _theResult___sfd__h590649 :
		  sfdin__h589913[56:5]) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d4915 =
	     (guard__h364391 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68]) ?
	       _theResult___fst_exp__h372619 :
	       _theResult___exp__h373135 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d4917 =
	     (guard__h364391 == 2'b0) ?
	       _theResult___fst_exp__h372619 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		  _theResult___exp__h373135 :
		  _theResult___fst_exp__h372619) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5061 =
	     (guard__h364391 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68]) ?
	       sfdin__h372613[56:34] :
	       _theResult___sfd__h373136 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5063 =
	     (guard__h364391 == 2'b0) ?
	       sfdin__h372613[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		  _theResult___sfd__h373136 :
		  sfdin__h372613[56:34]) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6307 =
	     (guard__h410088 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68]) ?
	       _theResult___fst_exp__h418316 :
	       _theResult___exp__h418832 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6309 =
	     (guard__h410088 == 2'b0) ?
	       _theResult___fst_exp__h418316 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		  _theResult___exp__h418832 :
		  _theResult___fst_exp__h418316) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6453 =
	     (guard__h410088 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68]) ?
	       sfdin__h418310[56:34] :
	       _theResult___sfd__h418833 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6455 =
	     (guard__h410088 == 2'b0) ?
	       sfdin__h418310[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		  _theResult___sfd__h418833 :
		  sfdin__h418310[56:34]) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7699 =
	     (guard__h455783 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68]) ?
	       _theResult___fst_exp__h464011 :
	       _theResult___exp__h464527 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7701 =
	     (guard__h455783 == 2'b0) ?
	       _theResult___fst_exp__h464011 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		  _theResult___exp__h464527 :
		  _theResult___fst_exp__h464011) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7845 =
	     (guard__h455783 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68]) ?
	       sfdin__h464005[56:34] :
	       _theResult___sfd__h464528 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7847 =
	     (guard__h455783 == 2'b0) ?
	       sfdin__h464005[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		  _theResult___sfd__h464528 :
		  sfdin__h464005[56:34]) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10556 =
	     (guard__h533077 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[99]) ?
	       _theResult___fst_exp__h541038 :
	       _theResult___exp__h541693 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10558 =
	     (guard__h533077 == 2'b0) ?
	       _theResult___fst_exp__h541038 :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[99]) ?
		  _theResult___exp__h541693 :
		  _theResult___fst_exp__h541038) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10625 =
	     (guard__h551458 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[99]) ?
	       _theResult___fst_exp__h559448 :
	       _theResult___exp__h560128 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10627 =
	     (guard__h551458 == 2'b0) ?
	       _theResult___fst_exp__h559448 :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[99]) ?
		  _theResult___exp__h560128 :
		  _theResult___fst_exp__h559448) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10651 =
	     (guard__h533077 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[99]) ?
	       _theResult___snd__h540989[56:5] :
	       _theResult___sfd__h541694 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10653 =
	     (guard__h533077 == 2'b0) ?
	       _theResult___snd__h540989[56:5] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[99]) ?
		  _theResult___sfd__h541694 :
		  _theResult___snd__h540989[56:5]) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10696 =
	     (guard__h551458 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[99]) ?
	       _theResult___snd__h559394[56:5] :
	       _theResult___sfd__h560129 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10698 =
	     (guard__h551458 == 2'b0) ?
	       _theResult___snd__h559394[56:5] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[99]) ?
		  _theResult___sfd__h560129 :
		  _theResult___snd__h559394[56:5]) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9071 =
	     (guard__h494224 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[163]) ?
	       _theResult___fst_exp__h502185 :
	       _theResult___exp__h502840 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9073 =
	     (guard__h494224 == 2'b0) ?
	       _theResult___fst_exp__h502185 :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[163]) ?
		  _theResult___exp__h502840 :
		  _theResult___fst_exp__h502185) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9145 =
	     (guard__h512605 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[163]) ?
	       _theResult___fst_exp__h520595 :
	       _theResult___exp__h521275 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9147 =
	     (guard__h512605 == 2'b0) ?
	       _theResult___fst_exp__h520595 :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[163]) ?
		  _theResult___exp__h521275 :
		  _theResult___fst_exp__h520595) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9171 =
	     (guard__h494224 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[163]) ?
	       _theResult___snd__h502136[56:5] :
	       _theResult___sfd__h502841 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9173 =
	     (guard__h494224 == 2'b0) ?
	       _theResult___snd__h502136[56:5] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[163]) ?
		  _theResult___sfd__h502841 :
		  _theResult___snd__h502136[56:5]) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9217 =
	     (guard__h512605 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[163]) ?
	       _theResult___snd__h520541[56:5] :
	       _theResult___sfd__h521276 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9219 =
	     (guard__h512605 == 2'b0) ?
	       _theResult___snd__h520541[56:5] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[163]) ?
		  _theResult___sfd__h521276 :
		  _theResult___snd__h520541[56:5]) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9786 =
	     (guard__h572381 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[35]) ?
	       _theResult___fst_exp__h580342 :
	       _theResult___exp__h580997 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9788 =
	     (guard__h572381 == 2'b0) ?
	       _theResult___fst_exp__h580342 :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[35]) ?
		  _theResult___exp__h580997 :
		  _theResult___fst_exp__h580342) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9855 =
	     (guard__h590762 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[35]) ?
	       _theResult___fst_exp__h598752 :
	       _theResult___exp__h599432 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9857 =
	     (guard__h590762 == 2'b0) ?
	       _theResult___fst_exp__h598752 :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[35]) ?
		  _theResult___exp__h599432 :
		  _theResult___fst_exp__h598752) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9881 =
	     (guard__h572381 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[35]) ?
	       _theResult___snd__h580293[56:5] :
	       _theResult___sfd__h580998 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9883 =
	     (guard__h572381 == 2'b0) ?
	       _theResult___snd__h580293[56:5] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[35]) ?
		  _theResult___sfd__h580998 :
		  _theResult___snd__h580293[56:5]) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9926 =
	     (guard__h590762 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[35]) ?
	       _theResult___snd__h598698[56:5] :
	       _theResult___sfd__h599433 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9928 =
	     (guard__h590762 == 2'b0) ?
	       _theResult___snd__h598698[56:5] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[35]) ?
		  _theResult___sfd__h599433 :
		  _theResult___snd__h598698[56:5]) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4590 =
	     (guard__h355461 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68]) ?
	       _theResult___fst_exp__h363509 :
	       _theResult___exp__h363951 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4592 =
	     (guard__h355461 == 2'b0) ?
	       _theResult___fst_exp__h363509 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		  _theResult___exp__h363951 :
		  _theResult___fst_exp__h363509) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4984 =
	     (guard__h373227 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68]) ?
	       _theResult___fst_exp__h381304 :
	       _theResult___exp__h381771 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4986 =
	     (guard__h373227 == 2'b0) ?
	       _theResult___fst_exp__h381304 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		  _theResult___exp__h381771 :
		  _theResult___fst_exp__h381304) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5034 =
	     (guard__h355461 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68]) ?
	       _theResult___snd__h363460[56:34] :
	       _theResult___sfd__h363952 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5036 =
	     (guard__h355461 == 2'b0) ?
	       _theResult___snd__h363460[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		  _theResult___sfd__h363952 :
		  _theResult___snd__h363460[56:34]) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5080 =
	     (guard__h373227 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68]) ?
	       _theResult___snd__h381250[56:34] :
	       _theResult___sfd__h381772 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5082 =
	     (guard__h373227 == 2'b0) ?
	       _theResult___snd__h381250[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		  _theResult___sfd__h381772 :
		  _theResult___snd__h381250[56:34]) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5982 =
	     (guard__h401158 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68]) ?
	       _theResult___fst_exp__h409206 :
	       _theResult___exp__h409648 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5984 =
	     (guard__h401158 == 2'b0) ?
	       _theResult___fst_exp__h409206 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		  _theResult___exp__h409648 :
		  _theResult___fst_exp__h409206) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6376 =
	     (guard__h418924 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68]) ?
	       _theResult___fst_exp__h427001 :
	       _theResult___exp__h427468 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6378 =
	     (guard__h418924 == 2'b0) ?
	       _theResult___fst_exp__h427001 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		  _theResult___exp__h427468 :
		  _theResult___fst_exp__h427001) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6426 =
	     (guard__h401158 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68]) ?
	       _theResult___snd__h409157[56:34] :
	       _theResult___sfd__h409649 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6428 =
	     (guard__h401158 == 2'b0) ?
	       _theResult___snd__h409157[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		  _theResult___sfd__h409649 :
		  _theResult___snd__h409157[56:34]) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6472 =
	     (guard__h418924 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68]) ?
	       _theResult___snd__h426947[56:34] :
	       _theResult___sfd__h427469 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6474 =
	     (guard__h418924 == 2'b0) ?
	       _theResult___snd__h426947[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		  _theResult___sfd__h427469 :
		  _theResult___snd__h426947[56:34]) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7374 =
	     (guard__h446853 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68]) ?
	       _theResult___fst_exp__h454901 :
	       _theResult___exp__h455343 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7376 =
	     (guard__h446853 == 2'b0) ?
	       _theResult___fst_exp__h454901 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		  _theResult___exp__h455343 :
		  _theResult___fst_exp__h454901) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7768 =
	     (guard__h464619 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68]) ?
	       _theResult___fst_exp__h472696 :
	       _theResult___exp__h473163 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7770 =
	     (guard__h464619 == 2'b0) ?
	       _theResult___fst_exp__h472696 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		  _theResult___exp__h473163 :
		  _theResult___fst_exp__h472696) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7818 =
	     (guard__h446853 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68]) ?
	       _theResult___snd__h454852[56:34] :
	       _theResult___sfd__h455344 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7820 =
	     (guard__h446853 == 2'b0) ?
	       _theResult___snd__h454852[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		  _theResult___sfd__h455344 :
		  _theResult___snd__h454852[56:34]) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7864 =
	     (guard__h464619 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68]) ?
	       _theResult___snd__h472642[56:34] :
	       _theResult___sfd__h473164 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7866 =
	     (guard__h464619 == 2'b0) ?
	       _theResult___snd__h472642[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		  _theResult___sfd__h473164 :
		  _theResult___snd__h472642[56:34]) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10528 =
	     (_theResult___fst_exp__h559448 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[99] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
		  CASE_guard51458_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q189 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q190) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10734 =
	     (_theResult___fst_exp__h541038 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] !=
	       32'hFFFFFFFF ||
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[99] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
		  CASE_guard33077_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q195 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q196) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10761 =
	     (_theResult___fst_exp__h559448 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] !=
	       32'hFFFFFFFF ||
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[99] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
		  CASE_guard51458_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q193 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q194) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d9043 =
	     (_theResult___fst_exp__h520595 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[163] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
		  CASE_guard12605_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q141 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q142) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d9758 =
	     (_theResult___fst_exp__h598752 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[35] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
		  CASE_guard90762_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q158 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q159) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d9965 =
	     (_theResult___fst_exp__h580342 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] !=
	       32'hFFFFFFFF ||
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[35] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
		  CASE_guard72381_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q164 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q165) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d9992 =
	     (_theResult___fst_exp__h598752 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] !=
	       32'hFFFFFFFF ||
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[35] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
		  CASE_guard90762_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q162 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q163) ;
  assign IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883 =
	     (_theResult____h651779 == 16'd0 &&
	      (csrf_prv_reg == 2'd0 ||
	       csrf_prv_reg == 2'd1 && csrf_ie_vec_1)) ?
	       enabled_ints__h652350 :
	       _theResult____h651779 ;
  assign IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d13111 =
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[0] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[1] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[2] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[3] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[4] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[5] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[6] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[7] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[8] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[9] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[10] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[11] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[12] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[13] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[14] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[15] ||
	     checkForException___d13067[4] ||
	     csrf_fs_reg_read__1604_EQ_0_3056_AND_fetchStag_ETC___d13104 ||
	     fetchStage$pipelines_0_first[231:200] == 32'h10500073 &&
	     csrf_tw_reg &&
	     csrf_prv_reg != 2'd3 ;
  assign IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d13828 =
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[0] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[1] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[2] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[3] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[4] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[5] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[6] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[7] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[8] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[9] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[10] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[11] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[12] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[13] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[14] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[15] ||
	     checkForException___d13067[4] ||
	     csrf_fs_reg_read__1604_EQ_0_3056_AND_fetchStag_ETC___d13576 ;
  assign IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d13865 =
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[0] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[1] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[2] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[3] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[4] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[5] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[6] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[7] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[8] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[9] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[10] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[11] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[12] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[13] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[14] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[15] ||
	     checkForException___d13772[4] ||
	     csrf_fs_reg_read__1604_EQ_0_3056_AND_fetchStag_ETC___d13863 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10141 =
	     ((f2_exp__h521791 == 8'd0) ?
		(f2_sfd__h521792[22] ?
		   6'd2 :
		   (f2_sfd__h521792[21] ?
		      6'd3 :
		      (f2_sfd__h521792[20] ?
			 6'd4 :
			 (f2_sfd__h521792[19] ?
			    6'd5 :
			    (f2_sfd__h521792[18] ?
			       6'd6 :
			       (f2_sfd__h521792[17] ?
				  6'd7 :
				  (f2_sfd__h521792[16] ?
				     6'd8 :
				     (f2_sfd__h521792[15] ?
					6'd9 :
					(f2_sfd__h521792[14] ?
					   6'd10 :
					   (f2_sfd__h521792[13] ?
					      6'd11 :
					      (f2_sfd__h521792[12] ?
						 6'd12 :
						 (f2_sfd__h521792[11] ?
						    6'd13 :
						    (f2_sfd__h521792[10] ?
						       6'd14 :
						       (f2_sfd__h521792[9] ?
							  6'd15 :
							  (f2_sfd__h521792[8] ?
							     6'd16 :
							     (f2_sfd__h521792[7] ?
								6'd17 :
								(f2_sfd__h521792[6] ?
								   6'd18 :
								   (f2_sfd__h521792[5] ?
								      6'd19 :
								      (f2_sfd__h521792[4] ?
									 6'd20 :
									 (f2_sfd__h521792[3] ?
									    6'd21 :
									    (f2_sfd__h521792[2] ?
									       6'd22 :
									       (f2_sfd__h521792[1] ?
										  6'd23 :
										  (f2_sfd__h521792[0] ?
										     6'd24 :
										     6'd57))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10532 =
	     (f2_exp__h521791 == 8'd255 && f2_sfd__h521792 != 23'd0 ||
	      (f2_exp__h521791 == 8'd255 || f2_exp__h521791 == 8'd0) &&
	      f2_sfd__h521792 == 23'd0) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[99] :
	       ((f2_exp__h521791 == 8'd0) ?
		  IF_NOT_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMu_ETC___d10187 :
		  IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10530) ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10709 =
	     (f2_exp__h521791 == 8'd255 && f2_sfd__h521792 != 23'd0) ?
	       _theResult___snd_fst_sfd__h522107 :
	       _theResult___fst_sfd__h560247 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10710 =
	     { (f2_exp__h521791 == 8'd255) ?
		 11'd2047 :
		 _theResult___fst_exp__h560243,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10709 } ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10764 =
	     (f2_exp__h521791 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10068 ?
		  (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10070 ?
		     coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] !=
		     32'hFFFFFFFF ||
		     !coreFix_fpuMulDivExe_0_regToExeQ$first[99] :
		     IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10734) :
		  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10736) :
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10763 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10765 =
	     (f2_exp__h521791 == 8'd255 && f2_sfd__h521792 != 23'd0 ||
	      (f2_exp__h521791 == 8'd255 || f2_exp__h521791 == 8'd0) &&
	      f2_sfd__h521792 == 23'd0) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] !=
	       32'hFFFFFFFF ||
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[99] :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10764 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10820 =
	     (f1_exp__h482797 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8568 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8570 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10799[4] :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8705 &&
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8706 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10816[4] ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10861 =
	     (f2_exp__h521791 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10068 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10070 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10840[4] :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10190 &&
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10191 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10857[4] ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10905 =
	     (f3_exp__h561095 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9298 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9300 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10884[4] :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9420 &&
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9421 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10901[4] ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10920 =
	     (f1_exp__h482797 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8568 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8570 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10799[3] :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8705 &&
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8706 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10816[3] ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10930 =
	     (f2_exp__h521791 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10068 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10070 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10840[3] :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10190 &&
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10191 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10857[3] ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10941 =
	     (f3_exp__h561095 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9298 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9300 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10884[3] :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9420 &&
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9421 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10901[3] ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10960 =
	     (f1_exp__h482797 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8568 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8570 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10799[2] :
	       !SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8705 ||
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10958 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10974 =
	     (f2_exp__h521791 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10068 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10070 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10840[2] :
	       !SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10190 ||
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10972 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10989 =
	     (f3_exp__h561095 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9298 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9300 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10884[2] :
	       !SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9420 ||
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10987 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11006 =
	     (f1_exp__h482797 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8568 &&
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8570 ||
		_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10799[1]) :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8705 &&
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11004 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11018 =
	     (f2_exp__h521791 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10068 &&
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10070 ||
		_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10840[1]) :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10190 &&
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11016 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11031 =
	     (f3_exp__h561095 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9298 &&
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9300 ||
		_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10884[1]) :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9420 &&
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11029 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11048 =
	     (f1_exp__h482797 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8568 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8570 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10799[0] :
	       !SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8705 ||
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11046 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11060 =
	     (f2_exp__h521791 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10068 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10070 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10840[0] :
	       !SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10190 ||
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11058 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11073 =
	     (f3_exp__h561095 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9298 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9300 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10884[0] :
	       !SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9420 ||
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11071 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8641 =
	     ((f1_exp__h482797 == 8'd0) ?
		(f1_sfd__h482798[22] ?
		   6'd2 :
		   (f1_sfd__h482798[21] ?
		      6'd3 :
		      (f1_sfd__h482798[20] ?
			 6'd4 :
			 (f1_sfd__h482798[19] ?
			    6'd5 :
			    (f1_sfd__h482798[18] ?
			       6'd6 :
			       (f1_sfd__h482798[17] ?
				  6'd7 :
				  (f1_sfd__h482798[16] ?
				     6'd8 :
				     (f1_sfd__h482798[15] ?
					6'd9 :
					(f1_sfd__h482798[14] ?
					   6'd10 :
					   (f1_sfd__h482798[13] ?
					      6'd11 :
					      (f1_sfd__h482798[12] ?
						 6'd12 :
						 (f1_sfd__h482798[11] ?
						    6'd13 :
						    (f1_sfd__h482798[10] ?
						       6'd14 :
						       (f1_sfd__h482798[9] ?
							  6'd15 :
							  (f1_sfd__h482798[8] ?
							     6'd16 :
							     (f1_sfd__h482798[7] ?
								6'd17 :
								(f1_sfd__h482798[6] ?
								   6'd18 :
								   (f1_sfd__h482798[5] ?
								      6'd19 :
								      (f1_sfd__h482798[4] ?
									 6'd20 :
									 (f1_sfd__h482798[3] ?
									    6'd21 :
									    (f1_sfd__h482798[2] ?
									       6'd22 :
									       (f1_sfd__h482798[1] ?
										  6'd23 :
										  (f1_sfd__h482798[0] ?
										     6'd24 :
										     6'd57))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9047 =
	     (f1_exp__h482797 == 8'd255 && f1_sfd__h482798 != 23'd0 ||
	      (f1_exp__h482797 == 8'd255 || f1_exp__h482797 == 8'd0) &&
	      f1_sfd__h482798 == 23'd0) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[163] :
	       ((f1_exp__h482797 == 8'd0) ?
		  IF_NOT_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMu_ETC___d8702 :
		  IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9045) ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9230 =
	     (f1_exp__h482797 == 8'd255 && f1_sfd__h482798 != 23'd0) ?
	       _theResult___snd_fst_sfd__h483113 :
	       _theResult___fst_sfd__h521394 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9231 =
	     { IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9047,
	       (f1_exp__h482797 == 8'd255) ?
		 11'd2047 :
		 _theResult___fst_exp__h521390,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9230 } ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9371 =
	     ((f3_exp__h561095 == 8'd0) ?
		(f3_sfd__h561096[22] ?
		   6'd2 :
		   (f3_sfd__h561096[21] ?
		      6'd3 :
		      (f3_sfd__h561096[20] ?
			 6'd4 :
			 (f3_sfd__h561096[19] ?
			    6'd5 :
			    (f3_sfd__h561096[18] ?
			       6'd6 :
			       (f3_sfd__h561096[17] ?
				  6'd7 :
				  (f3_sfd__h561096[16] ?
				     6'd8 :
				     (f3_sfd__h561096[15] ?
					6'd9 :
					(f3_sfd__h561096[14] ?
					   6'd10 :
					   (f3_sfd__h561096[13] ?
					      6'd11 :
					      (f3_sfd__h561096[12] ?
						 6'd12 :
						 (f3_sfd__h561096[11] ?
						    6'd13 :
						    (f3_sfd__h561096[10] ?
						       6'd14 :
						       (f3_sfd__h561096[9] ?
							  6'd15 :
							  (f3_sfd__h561096[8] ?
							     6'd16 :
							     (f3_sfd__h561096[7] ?
								6'd17 :
								(f3_sfd__h561096[6] ?
								   6'd18 :
								   (f3_sfd__h561096[5] ?
								      6'd19 :
								      (f3_sfd__h561096[4] ?
									 6'd20 :
									 (f3_sfd__h561096[3] ?
									    6'd21 :
									    (f3_sfd__h561096[2] ?
									       6'd22 :
									       (f3_sfd__h561096[1] ?
										  6'd23 :
										  (f3_sfd__h561096[0] ?
										     6'd24 :
										     6'd57))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9762 =
	     (f3_exp__h561095 == 8'd255 && f3_sfd__h561096 != 23'd0 ||
	      (f3_exp__h561095 == 8'd255 || f3_exp__h561095 == 8'd0) &&
	      f3_sfd__h561096 == 23'd0) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[35] :
	       ((f3_exp__h561095 == 8'd0) ?
		  IF_NOT_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMu_ETC___d9417 :
		  IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9760) ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9939 =
	     (f3_exp__h561095 == 8'd255 && f3_sfd__h561096 != 23'd0) ?
	       _theResult___snd_fst_sfd__h561411 :
	       _theResult___fst_sfd__h599551 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9940 =
	     { (f3_exp__h561095 == 8'd255) ?
		 11'd2047 :
		 _theResult___fst_exp__h599547,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9939 } ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9995 =
	     (f3_exp__h561095 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9298 ?
		  (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9300 ?
		     coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] !=
		     32'hFFFFFFFF ||
		     !coreFix_fpuMulDivExe_0_regToExeQ$first[35] :
		     IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d9965) :
		  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9967) :
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9994 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9996 =
	     (f3_exp__h561095 == 8'd255 && f3_sfd__h561096 != 23'd0 ||
	      (f3_exp__h561095 == 8'd255 || f3_exp__h561095 == 8'd0) &&
	      f3_sfd__h561096 == 23'd0) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] !=
	       32'hFFFFFFFF ||
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[35] :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9995 ;
  assign IF_IF_coreFix_memExe_dTlb_procResp__774_BIT_98_ETC___d1909 =
	     IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1898 ?
	       4'd11 :
	       (IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1902 ?
		  4'd12 :
		  (IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1906 ?
		     4'd13 :
		     4'd15)) ;
  assign IF_IF_coreFix_memExe_dTlb_procResp__774_BIT_98_ETC___d1911 =
	     IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1890 ?
	       4'd8 :
	       (IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1894 ?
		  4'd9 :
		  IF_IF_coreFix_memExe_dTlb_procResp__774_BIT_98_ETC___d1909) ;
  assign IF_IF_coreFix_memExe_dTlb_procResp__774_BIT_98_ETC___d1913 =
	     IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1882 ?
	       4'd6 :
	       (IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1886 ?
		  4'd7 :
		  IF_IF_coreFix_memExe_dTlb_procResp__774_BIT_98_ETC___d1911) ;
  assign IF_IF_coreFix_memExe_dTlb_procResp__774_BIT_98_ETC___d1915 =
	     IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1874 ?
	       4'd4 :
	       (IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1878 ?
		  4'd5 :
		  IF_IF_coreFix_memExe_dTlb_procResp__774_BIT_98_ETC___d1913) ;
  assign IF_IF_coreFix_memExe_dTlb_procResp__774_BIT_98_ETC___d1917 =
	     IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1866 ?
	       4'd2 :
	       (IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1870 ?
		  4'd3 :
		  IF_IF_coreFix_memExe_dTlb_procResp__774_BIT_98_ETC___d1915) ;
  assign IF_IF_coreFix_memExe_dTlb_procResp__774_BIT_98_ETC___d1919 =
	     IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1858 ?
	       4'd0 :
	       (IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1862 ?
		  4'd1 :
		  IF_IF_coreFix_memExe_dTlb_procResp__774_BIT_98_ETC___d1917) ;
  assign IF_IF_fetchStage_pipelines_0_first__2816_BITS__ETC___d13550 =
	     IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13541 ?
	       !csrf_rg_dcsr[2] &&
	       IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13548 :
	       IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13548 ;
  assign IF_IF_fetchStage_pipelines_0_first__2816_BITS__ETC___d14037 =
	     IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13541 ?
	       csrf_rg_dcsr[2] ||
	       IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14035 :
	       IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14035 ;
  assign IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13257 =
	     (fetchStage$pipelines_0_first[68] ?
		IF_fetchStage_pipelines_0_first__2816_BIT_68_2_ETC___d13189 ==
		4'd12 :
		IF_checkForException_3067_BIT_4_3068_THEN_IF_c_ETC___d13218 ==
		4'd12) ?
	       4'd13 :
	       4'd15 ;
  assign IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13258 =
	     (fetchStage$pipelines_0_first[68] ?
		IF_fetchStage_pipelines_0_first__2816_BIT_68_2_ETC___d13189 ==
		4'd11 :
		IF_checkForException_3067_BIT_4_3068_THEN_IF_c_ETC___d13218 ==
		4'd11) ?
	       4'd12 :
	       IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13257 ;
  assign IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13259 =
	     (fetchStage$pipelines_0_first[68] ?
		IF_fetchStage_pipelines_0_first__2816_BIT_68_2_ETC___d13189 ==
		4'd10 :
		IF_checkForException_3067_BIT_4_3068_THEN_IF_c_ETC___d13218 ==
		4'd10) ?
	       4'd11 :
	       IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13258 ;
  assign IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13260 =
	     (fetchStage$pipelines_0_first[68] ?
		IF_fetchStage_pipelines_0_first__2816_BIT_68_2_ETC___d13189 ==
		4'd9 :
		IF_checkForException_3067_BIT_4_3068_THEN_IF_c_ETC___d13218 ==
		4'd9) ?
	       4'd9 :
	       IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13259 ;
  assign IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13261 =
	     (fetchStage$pipelines_0_first[68] ?
		IF_fetchStage_pipelines_0_first__2816_BIT_68_2_ETC___d13189 ==
		4'd8 :
		IF_checkForException_3067_BIT_4_3068_THEN_IF_c_ETC___d13218 ==
		4'd8) ?
	       4'd8 :
	       IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13260 ;
  assign IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13262 =
	     (fetchStage$pipelines_0_first[68] ?
		IF_fetchStage_pipelines_0_first__2816_BIT_68_2_ETC___d13189 ==
		4'd7 :
		IF_checkForException_3067_BIT_4_3068_THEN_IF_c_ETC___d13218 ==
		4'd7) ?
	       4'd7 :
	       IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13261 ;
  assign IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13263 =
	     (fetchStage$pipelines_0_first[68] ?
		IF_fetchStage_pipelines_0_first__2816_BIT_68_2_ETC___d13189 ==
		4'd6 :
		IF_checkForException_3067_BIT_4_3068_THEN_IF_c_ETC___d13218 ==
		4'd6) ?
	       4'd6 :
	       IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13262 ;
  assign IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13264 =
	     (fetchStage$pipelines_0_first[68] ?
		IF_fetchStage_pipelines_0_first__2816_BIT_68_2_ETC___d13189 ==
		4'd5 :
		IF_checkForException_3067_BIT_4_3068_THEN_IF_c_ETC___d13218 ==
		4'd5) ?
	       4'd5 :
	       IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13263 ;
  assign IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13265 =
	     (fetchStage$pipelines_0_first[68] ?
		IF_fetchStage_pipelines_0_first__2816_BIT_68_2_ETC___d13189 ==
		4'd4 :
		IF_checkForException_3067_BIT_4_3068_THEN_IF_c_ETC___d13218 ==
		4'd4) ?
	       4'd4 :
	       IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13264 ;
  assign IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13266 =
	     (fetchStage$pipelines_0_first[68] ?
		IF_fetchStage_pipelines_0_first__2816_BIT_68_2_ETC___d13189 ==
		4'd3 :
		IF_checkForException_3067_BIT_4_3068_THEN_IF_c_ETC___d13218 ==
		4'd3) ?
	       4'd3 :
	       IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13265 ;
  assign IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13267 =
	     (fetchStage$pipelines_0_first[68] ?
		IF_fetchStage_pipelines_0_first__2816_BIT_68_2_ETC___d13189 ==
		4'd2 :
		IF_checkForException_3067_BIT_4_3068_THEN_IF_c_ETC___d13218 ==
		4'd2) ?
	       4'd2 :
	       IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13266 ;
  assign IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13268 =
	     (fetchStage$pipelines_0_first[68] ?
		IF_fetchStage_pipelines_0_first__2816_BIT_68_2_ETC___d13189 ==
		4'd1 :
		IF_checkForException_3067_BIT_4_3068_THEN_IF_c_ETC___d13218 ==
		4'd1) ?
	       4'd1 :
	       IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13267 ;
  assign IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13269 =
	     (fetchStage$pipelines_0_first[68] ?
		IF_fetchStage_pipelines_0_first__2816_BIT_68_2_ETC___d13189 ==
		4'd0 :
		IF_checkForException_3067_BIT_4_3068_THEN_IF_c_ETC___d13218 ==
		4'd0) ?
	       4'd0 :
	       IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13268 ;
  assign IF_IF_mmio_cRqQ_enqReq_lat_1_whas__30_THEN_mmi_ETC___d463 =
	     { (mmio_cRqQ_enqReq_lat_0$whas ?
		  mmio_cRqQ_enqReq_lat_0$wget[77:76] == 2'd1 :
		  mmio_cRqQ_enqReq_rl[77:76] == 2'd1) ?
		 2'd1 :
		 ((mmio_cRqQ_enqReq_lat_0$whas ?
		     mmio_cRqQ_enqReq_lat_0$wget[77:76] == 2'd2 :
		     mmio_cRqQ_enqReq_rl[77:76] == 2'd2) ?
		    2'd2 :
		    2'd3),
	       mmio_cRqQ_enqReq_lat_0$whas ?
		 mmio_cRqQ_enqReq_lat_0$wget[75:72] :
		 mmio_cRqQ_enqReq_rl[75:72] } ;
  assign IF_IF_mmio_dataReqQ_enqReq_lat_1_whas__7_THEN__ETC___d172 =
	     { (mmio_dataReqQ_enqReq_lat_0$whas ?
		  mmio_dataReqQ_enqReq_lat_0$wget[77:76] == 2'd1 :
		  mmio_dataReqQ_enqReq_rl[77:76] == 2'd1) ?
		 2'd1 :
		 ((mmio_dataReqQ_enqReq_lat_0$whas ?
		     mmio_dataReqQ_enqReq_lat_0$wget[77:76] == 2'd2 :
		     mmio_dataReqQ_enqReq_rl[77:76] == 2'd2) ?
		    2'd2 :
		    2'd3),
	       mmio_dataReqQ_enqReq_lat_0$whas ?
		 mmio_dataReqQ_enqReq_lat_0$wget[75:72] :
		 mmio_dataReqQ_enqReq_rl[75:72] } ;
  assign IF_IF_mmio_pRqQ_enqReq_lat_1_whas__87_THEN_mmi_ETC___d820 =
	     { (EN_mmioToPlatform_pRq_enq ?
		  mmio_pRqQ_enqReq_lat_0$wget[37:36] == 2'd1 :
		  mmio_pRqQ_enqReq_rl[37:36] == 2'd1) ?
		 2'd1 :
		 ((EN_mmioToPlatform_pRq_enq ?
		     mmio_pRqQ_enqReq_lat_0$wget[37:36] == 2'd2 :
		     mmio_pRqQ_enqReq_rl[37:36] == 2'd2) ?
		    2'd2 :
		    2'd3),
	       EN_mmioToPlatform_pRq_enq ?
		 mmio_pRqQ_enqReq_lat_0$wget[35:32] :
		 mmio_pRqQ_enqReq_rl[35:32] } ;
  assign IF_IF_mmio_pRsQ_enqReq_lat_1_whas__82_THEN_NOT_ETC___d681 =
	     (EN_mmioToPlatform_pRs_enq ?
		!mmio_pRsQ_enqReq_lat_0$wget[68] :
		!mmio_pRsQ_enqReq_rl[68]) ?
	       { EN_mmioToPlatform_pRs_enq ?
		   mmio_pRsQ_enqReq_lat_0$wget[67] :
		   mmio_pRsQ_enqReq_rl[67],
		 EN_mmioToPlatform_pRs_enq ?
		   mmio_pRsQ_enqReq_lat_0$wget[66:51] :
		   mmio_pRsQ_enqReq_rl[66:51],
		 EN_mmioToPlatform_pRs_enq ?
		   mmio_pRsQ_enqReq_lat_0$wget[50] :
		   mmio_pRsQ_enqReq_rl[50],
		 EN_mmioToPlatform_pRs_enq ?
		   mmio_pRsQ_enqReq_lat_0$wget[49:34] :
		   mmio_pRsQ_enqReq_rl[49:34],
		 EN_mmioToPlatform_pRs_enq ?
		   mmio_pRsQ_enqReq_lat_0$wget[33] :
		   mmio_pRsQ_enqReq_rl[33],
		 EN_mmioToPlatform_pRs_enq ?
		   mmio_pRsQ_enqReq_lat_0$wget[32:17] :
		   mmio_pRsQ_enqReq_rl[32:17],
		 EN_mmioToPlatform_pRs_enq ?
		   mmio_pRsQ_enqReq_lat_0$wget[16] :
		   mmio_pRsQ_enqReq_rl[16],
		 EN_mmioToPlatform_pRs_enq ?
		   mmio_pRsQ_enqReq_lat_0$wget[15:0] :
		   mmio_pRsQ_enqReq_rl[15:0] } :
	       { 3'h2,
		 EN_mmioToPlatform_pRs_enq ?
		   mmio_pRsQ_enqReq_lat_0$wget[64:0] :
		   mmio_pRsQ_enqReq_rl[64:0] } ;
  assign IF_NOT_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMu_ETC___d10187 =
	     (!_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10068 ||
	      _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10070 ||
	      _theResult___fst_exp__h541038 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[99] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
		  CASE_guard33077_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q185 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q186) ;
  assign IF_NOT_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMu_ETC___d8702 =
	     (!_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8568 ||
	      _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8570 ||
	      _theResult___fst_exp__h502185 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[163] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
		  CASE_guard94224_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q137 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q138) ;
  assign IF_NOT_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMu_ETC___d9417 =
	     (!_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9298 ||
	      _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9300 ||
	      _theResult___fst_exp__h580342 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[35] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
		  CASE_guard72381_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q156 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q157) ;
  assign IF_NOT_IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3__ETC___d13302 =
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[0] ?
	       4'd0 :
	       (IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[1] ?
		  4'd1 :
		  ((IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[3] &&
		    !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[2]) ?
		     4'd2 :
		     ((IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[4] &&
		       !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[2] &&
		       !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[3]) ?
			4'd3 :
			((IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[5] &&
			  !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[2] &&
			  !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[3] &&
			  !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[4]) ?
			   4'd4 :
			   ((IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[7] &&
			     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[2] &&
			     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[3] &&
			     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[4] &&
			     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[5] &&
			     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[6]) ?
			      4'd5 :
			      ((IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[8] &&
				!IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[2] &&
				!IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[3] &&
				!IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[4] &&
				!IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[5] &&
				!IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[6] &&
				!IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[7]) ?
				 4'd6 :
				 ((IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[9] &&
				   !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[2] &&
				   !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[3] &&
				   !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[4] &&
				   !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[5] &&
				   !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[6] &&
				   !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[7] &&
				   !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[8]) ?
				    4'd7 :
				    ((IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[11] &&
				      !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[2] &&
				      !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[3] &&
				      !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[4] &&
				      !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[5] &&
				      !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[6] &&
				      !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[7] &&
				      !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[8] &&
				      !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[9] &&
				      !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[10]) ?
				       4'd8 :
				       ((IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[14] &&
					 !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[2] &&
					 !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[3] &&
					 !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[4] &&
					 !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[5] &&
					 !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[6] &&
					 !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[7] &&
					 !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[8] &&
					 !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[9] &&
					 !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[10] &&
					 !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[11] &&
					 !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[12] &&
					 !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[13]) ?
					  4'd9 :
					  4'd10))))))))) ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12296 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_0_bypassWire_0_wget__2262_BITS__ETC___d12264) ?
	       coreFix_aluExe_0_bypassWire_1$whas &&
	       coreFix_aluExe_0_bypassWire_1_wget__2275_BITS__ETC___d12277 :
	       coreFix_aluExe_0_bypassWire_0$whas ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12297 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_aluExe_0_bypassWire_0_wget__2262_BITS__ETC___d12264) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_aluExe_0_bypassWire_1_wget__2275_BITS__ETC___d12277)) ?
	       coreFix_aluExe_0_bypassWire_2$whas &&
	       coreFix_aluExe_0_bypassWire_2_wget__2283_BITS__ETC___d12285 :
	       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12296 ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12298 =
	     NOT_coreFix_aluExe_0_bypassWire_0_whas__2261_2_ETC___d12288 ?
	       coreFix_aluExe_0_bypassWire_3$whas &&
	       coreFix_aluExe_0_bypassWire_3$wget[70:64] ==
	       coreFix_aluExe_0_dispToRegQ$first[72:66] :
	       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12297 ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12321 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_0_bypassWire_0_wget__2262_BITS__ETC___d12303) ?
	       coreFix_aluExe_0_bypassWire_1$whas &&
	       coreFix_aluExe_0_bypassWire_1_wget__2275_BITS__ETC___d12309 :
	       coreFix_aluExe_0_bypassWire_0$whas ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12322 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_aluExe_0_bypassWire_0_wget__2262_BITS__ETC___d12303) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_aluExe_0_bypassWire_1_wget__2275_BITS__ETC___d12309)) ?
	       coreFix_aluExe_0_bypassWire_2$whas &&
	       coreFix_aluExe_0_bypassWire_2_wget__2283_BITS__ETC___d12313 :
	       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12321 ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12323 =
	     NOT_coreFix_aluExe_0_bypassWire_0_whas__2261_2_ETC___d12316 ?
	       coreFix_aluExe_0_bypassWire_3$whas &&
	       coreFix_aluExe_0_bypassWire_3$wget[70:64] ==
	       coreFix_aluExe_0_dispToRegQ$first[64:58] :
	       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12322 ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12507 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_0_bypassWire_0_wget__2262_BITS__ETC___d12264) ?
	       coreFix_aluExe_0_bypassWire_1$wget[63:0] :
	       coreFix_aluExe_0_bypassWire_0$wget[63:0] ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12508 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_aluExe_0_bypassWire_0_wget__2262_BITS__ETC___d12264) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_aluExe_0_bypassWire_1_wget__2275_BITS__ETC___d12277)) ?
	       coreFix_aluExe_0_bypassWire_2$wget[63:0] :
	       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12507 ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12519 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_0_bypassWire_0_wget__2262_BITS__ETC___d12303) ?
	       coreFix_aluExe_0_bypassWire_1$wget[63:0] :
	       coreFix_aluExe_0_bypassWire_0$wget[63:0] ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12520 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_aluExe_0_bypassWire_0_wget__2262_BITS__ETC___d12303) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_aluExe_0_bypassWire_1_wget__2275_BITS__ETC___d12309)) ?
	       coreFix_aluExe_0_bypassWire_2$wget[63:0] :
	       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12519 ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11435 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_1_bypassWire_0_wget__1401_BITS__ETC___d11403) ?
	       coreFix_aluExe_0_bypassWire_1$whas &&
	       coreFix_aluExe_1_bypassWire_1_wget__1414_BITS__ETC___d11416 :
	       coreFix_aluExe_0_bypassWire_0$whas ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11436 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_aluExe_1_bypassWire_0_wget__1401_BITS__ETC___d11403) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_aluExe_1_bypassWire_1_wget__1414_BITS__ETC___d11416)) ?
	       coreFix_aluExe_1_bypassWire_2$whas &&
	       coreFix_aluExe_1_bypassWire_2_wget__1422_BITS__ETC___d11424 :
	       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11435 ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11437 =
	     NOT_coreFix_aluExe_1_bypassWire_0_whas__1400_1_ETC___d11427 ?
	       coreFix_aluExe_1_bypassWire_3$whas &&
	       coreFix_aluExe_0_bypassWire_3$wget[70:64] ==
	       coreFix_aluExe_1_dispToRegQ$first[72:66] :
	       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11436 ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11460 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_1_bypassWire_0_wget__1401_BITS__ETC___d11442) ?
	       coreFix_aluExe_0_bypassWire_1$whas &&
	       coreFix_aluExe_1_bypassWire_1_wget__1414_BITS__ETC___d11448 :
	       coreFix_aluExe_0_bypassWire_0$whas ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11461 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_aluExe_1_bypassWire_0_wget__1401_BITS__ETC___d11442) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_aluExe_1_bypassWire_1_wget__1414_BITS__ETC___d11448)) ?
	       coreFix_aluExe_1_bypassWire_2$whas &&
	       coreFix_aluExe_1_bypassWire_2_wget__1422_BITS__ETC___d11452 :
	       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11460 ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11462 =
	     NOT_coreFix_aluExe_1_bypassWire_0_whas__1400_1_ETC___d11455 ?
	       coreFix_aluExe_1_bypassWire_3$whas &&
	       coreFix_aluExe_0_bypassWire_3$wget[70:64] ==
	       coreFix_aluExe_1_dispToRegQ$first[64:58] :
	       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11461 ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11833 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_1_bypassWire_0_wget__1401_BITS__ETC___d11403) ?
	       coreFix_aluExe_0_bypassWire_1$wget[63:0] :
	       coreFix_aluExe_0_bypassWire_0$wget[63:0] ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11834 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_aluExe_1_bypassWire_0_wget__1401_BITS__ETC___d11403) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_aluExe_1_bypassWire_1_wget__1414_BITS__ETC___d11416)) ?
	       coreFix_aluExe_0_bypassWire_2$wget[63:0] :
	       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11833 ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11845 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_1_bypassWire_0_wget__1401_BITS__ETC___d11442) ?
	       coreFix_aluExe_0_bypassWire_1$wget[63:0] :
	       coreFix_aluExe_0_bypassWire_0$wget[63:0] ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11846 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_aluExe_1_bypassWire_0_wget__1401_BITS__ETC___d11442) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_aluExe_1_bypassWire_1_wget__1414_BITS__ETC___d11448)) ?
	       coreFix_aluExe_0_bypassWire_2$wget[63:0] :
	       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11845 ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8299 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_0_wget__265__ETC___d8267) ?
	       coreFix_aluExe_0_bypassWire_1$whas &&
	       coreFix_fpuMulDivExe_0_bypassWire_1_wget__278__ETC___d8280 :
	       coreFix_aluExe_0_bypassWire_0$whas ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8300 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_0_wget__265__ETC___d8267) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_1_wget__278__ETC___d8280)) ?
	       coreFix_fpuMulDivExe_0_bypassWire_2$whas &&
	       coreFix_fpuMulDivExe_0_bypassWire_2_wget__286__ETC___d8288 :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8299 ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8301 =
	     NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d8291 ?
	       coreFix_fpuMulDivExe_0_bypassWire_3$whas &&
	       coreFix_aluExe_0_bypassWire_3$wget[70:64] ==
	       coreFix_fpuMulDivExe_0_dispToRegQ$first[45:39] :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8300 ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8323 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_0_wget__265__ETC___d8305) ?
	       coreFix_aluExe_0_bypassWire_1$whas &&
	       coreFix_fpuMulDivExe_0_bypassWire_1_wget__278__ETC___d8311 :
	       coreFix_aluExe_0_bypassWire_0$whas ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8324 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_0_wget__265__ETC___d8305) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_1_wget__278__ETC___d8311)) ?
	       coreFix_fpuMulDivExe_0_bypassWire_2$whas &&
	       coreFix_fpuMulDivExe_0_bypassWire_2_wget__286__ETC___d8315 :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8323 ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8325 =
	     NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d8318 ?
	       coreFix_fpuMulDivExe_0_bypassWire_3$whas &&
	       coreFix_aluExe_0_bypassWire_3$wget[70:64] ==
	       coreFix_fpuMulDivExe_0_dispToRegQ$first[37:31] :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8324 ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8347 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_0_wget__265__ETC___d8329) ?
	       coreFix_aluExe_0_bypassWire_1$whas &&
	       coreFix_fpuMulDivExe_0_bypassWire_1_wget__278__ETC___d8335 :
	       coreFix_aluExe_0_bypassWire_0$whas ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8348 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_0_wget__265__ETC___d8329) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_1_wget__278__ETC___d8335)) ?
	       coreFix_fpuMulDivExe_0_bypassWire_2$whas &&
	       coreFix_fpuMulDivExe_0_bypassWire_2_wget__286__ETC___d8339 :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8347 ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8349 =
	     NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d8342 ?
	       coreFix_fpuMulDivExe_0_bypassWire_3$whas &&
	       coreFix_aluExe_0_bypassWire_3$wget[70:64] ==
	       coreFix_fpuMulDivExe_0_dispToRegQ$first[29:23] :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8348 ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8394 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_0_wget__265__ETC___d8267) ?
	       coreFix_aluExe_0_bypassWire_1$wget[63:0] :
	       coreFix_aluExe_0_bypassWire_0$wget[63:0] ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8395 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_0_wget__265__ETC___d8267) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_1_wget__278__ETC___d8280)) ?
	       coreFix_aluExe_0_bypassWire_2$wget[63:0] :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8394 ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8405 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_0_wget__265__ETC___d8305) ?
	       coreFix_aluExe_0_bypassWire_1$wget[63:0] :
	       coreFix_aluExe_0_bypassWire_0$wget[63:0] ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8406 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_0_wget__265__ETC___d8305) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_1_wget__278__ETC___d8311)) ?
	       coreFix_aluExe_0_bypassWire_2$wget[63:0] :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8405 ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8416 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_0_wget__265__ETC___d8329) ?
	       coreFix_aluExe_0_bypassWire_1$wget[63:0] :
	       coreFix_aluExe_0_bypassWire_0$wget[63:0] ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8417 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_0_wget__265__ETC___d8329) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_1_wget__278__ETC___d8335)) ?
	       coreFix_aluExe_0_bypassWire_2$wget[63:0] :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8416 ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1664 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_memExe_bypassWire_0_wget__630_BITS_70__ETC___d1632) ?
	       coreFix_aluExe_0_bypassWire_1$whas &&
	       coreFix_memExe_bypassWire_1_wget__643_BITS_70__ETC___d1645 :
	       coreFix_aluExe_0_bypassWire_0$whas ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1665 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_memExe_bypassWire_0_wget__630_BITS_70__ETC___d1632) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_memExe_bypassWire_1_wget__643_BITS_70__ETC___d1645)) ?
	       coreFix_memExe_bypassWire_2$whas &&
	       coreFix_memExe_bypassWire_2_wget__651_BITS_70__ETC___d1653 :
	       IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1664 ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1666 =
	     NOT_coreFix_memExe_bypassWire_0_whas__629_635__ETC___d1656 ?
	       coreFix_memExe_bypassWire_3$whas &&
	       coreFix_aluExe_0_bypassWire_3$wget[70:64] ==
	       coreFix_memExe_dispToRegQ$first[49:43] :
	       IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1665 ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1688 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_memExe_bypassWire_0_wget__630_BITS_70__ETC___d1670) ?
	       coreFix_aluExe_0_bypassWire_1$whas &&
	       coreFix_memExe_bypassWire_1_wget__643_BITS_70__ETC___d1676 :
	       coreFix_aluExe_0_bypassWire_0$whas ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1689 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_memExe_bypassWire_0_wget__630_BITS_70__ETC___d1670) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_memExe_bypassWire_1_wget__643_BITS_70__ETC___d1676)) ?
	       coreFix_memExe_bypassWire_2$whas &&
	       coreFix_memExe_bypassWire_2_wget__651_BITS_70__ETC___d1680 :
	       IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1688 ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1690 =
	     NOT_coreFix_memExe_bypassWire_0_whas__629_635__ETC___d1683 ?
	       coreFix_memExe_bypassWire_3$whas &&
	       coreFix_aluExe_0_bypassWire_3$wget[70:64] ==
	       coreFix_memExe_dispToRegQ$first[41:35] :
	       IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1689 ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1709 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_memExe_bypassWire_0_wget__630_BITS_70__ETC___d1632) ?
	       coreFix_aluExe_0_bypassWire_1$wget[63:0] :
	       coreFix_aluExe_0_bypassWire_0$wget[63:0] ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1710 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_memExe_bypassWire_0_wget__630_BITS_70__ETC___d1632) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_memExe_bypassWire_1_wget__643_BITS_70__ETC___d1645)) ?
	       coreFix_aluExe_0_bypassWire_2$wget[63:0] :
	       IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1709 ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1720 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_memExe_bypassWire_0_wget__630_BITS_70__ETC___d1670) ?
	       coreFix_aluExe_0_bypassWire_1$wget[63:0] :
	       coreFix_aluExe_0_bypassWire_0$wget[63:0] ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1721 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_memExe_bypassWire_0_wget__630_BITS_70__ETC___d1670) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_memExe_bypassWire_1_wget__643_BITS_70__ETC___d1676)) ?
	       coreFix_aluExe_0_bypassWire_2$wget[63:0] :
	       IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1720 ;
  assign IF_NOT_coreFix_memExe_dMem_cache_m_banks_0_pip_ETC___d2144 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085) ?
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2116 :
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite &&
	       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2142 ;
  assign IF_NOT_coreFix_memExe_dMem_cache_m_banks_0_pip_ETC___d2161 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] !=
	      2'd0 &&
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2154) ?
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$FULL_N :
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$FULL_N ;
  assign IF_NOT_coreFix_memExe_dMem_cache_m_banks_0_pip_ETC___d2568 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085) ?
	       { coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:96],
		 IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2202,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2558 } :
	       { (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
		  3'd3 &&
		  NOT_coreFix_memExe_dMem_cache_m_banks_0_linkAd_ETC___d2130) ?
		   { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[569:516],
		     4'd2 } :
		   { coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:96],
		     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516],
		     1'd1,
		     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[576:574] },
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:0] } ;
  assign IF_NOT_coreFix_memExe_dTlb_procResp__774_BIT_9_ETC___d1853 =
	     (!coreFix_memExe_dTlb$procResp[98] &&
	      coreFix_memExe_dTlb$procResp[4]) ?
	       CASE_coreFix_memExe_dTlbprocResp_BITS_93_TO_9_ETC__q12 :
	       CASE_coreFix_memExe_dTlbprocResp_BITS_97_TO_9_ETC__q13 ;
  assign IF_NOT_fetchStage_pipelines_0_canDeq__2814_281_ETC___d13982 =
	     ((!fetchStage$pipelines_0_canDeq ||
	       NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d13551) &&
	      fetchStage$pipelines_1_canDeq) ?
	       fetchStage$RDY_pipelines_1_first &&
	       (fetchStage$pipelines_1_first[194:192] != 3'd1 ||
		!fetchStage$pipelines_0_canDeq ||
		fetchStage$RDY_pipelines_0_first) &&
	       IF_fetchStage_RDY_pipelines_1_first__2824_AND__ETC___d13979 :
	       !fetchStage$pipelines_0_canDeq ||
	       fetchStage$RDY_pipelines_0_first ;
  assign IF_NOT_fetchStage_pipelines_0_canDeq__2814_281_ETC___d13990 =
	     ((!fetchStage$pipelines_0_canDeq ||
	       NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d13551) &&
	      fetchStage$pipelines_1_canDeq) ?
	       IF_NOT_fetchStage_pipelines_1_first__2825_BITS_ETC___d13989 :
	       fetchStage$pipelines_0_canDeq &&
	       NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d13987 ;
  assign IF_NOT_fetchStage_pipelines_1_first__2825_BITS_ETC___d13903 =
	     (fetchStage$pipelines_1_first[194:192] == 3'd3 ||
	      fetchStage$pipelines_1_first[194:192] == 3'd4) ?
	       NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d13886 :
	       ((fetchStage$pipelines_1_first[194:192] == 3'd2) ?
		  (!fetchStage$pipelines_0_canDeq ||
		   fetchStage$RDY_pipelines_0_first) &&
		  (regRenamingTable_rename_0_canRename__3475_AND__ETC___d13895 ||
		   NOT_regRenamingTable_rename_1_canRename__3604__ETC___d13873) :
		  _0_OR_NOT_fetchStage_pipelines_1_first__2825_BI_ETC___d13901) ;
  assign IF_NOT_fetchStage_pipelines_1_first__2825_BITS_ETC___d13989 =
	     NOT_fetchStage_pipelines_1_first__2825_BITS_19_ETC___d13811 ?
	       IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d13976 ||
	       fetchStage$pipelines_0_canDeq &&
	       (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
		specTagManager$canClaim) &&
	       regRenamingTable_rename_0_canRename__3475_AND__ETC___d13564 &&
	       IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13541 :
	       fetchStage$pipelines_0_canDeq &&
	       NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d13987 ;
  assign IF_NOT_renameStage_rg_m_halt_req_2843_BIT_4_28_ETC___d13342 =
	     NOT_renameStage_rg_m_halt_req_2843_BIT_4_2844__ETC___d13161 ?
	       IF_IF_fetchStage_pipelines_0_first__2816_BIT_6_ETC___d13269 :
	       ((renameStage_rg_m_halt_req[4] ?
		   renameStage_rg_m_halt_req[3:0] == 4'd0 :
		   IF_NOT_IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3__ETC___d13302 ==
		   4'd0) ?
		  4'd0 :
		  ((renameStage_rg_m_halt_req[4] ?
		      renameStage_rg_m_halt_req[3:0] == 4'd1 :
		      IF_NOT_IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3__ETC___d13302 ==
		      4'd1) ?
		     4'd1 :
		     ((renameStage_rg_m_halt_req[4] ?
			 renameStage_rg_m_halt_req[3:0] == 4'd3 :
			 IF_NOT_IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3__ETC___d13302 ==
			 4'd2) ?
			4'd3 :
			((renameStage_rg_m_halt_req[4] ?
			    renameStage_rg_m_halt_req[3:0] == 4'd4 :
			    IF_NOT_IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3__ETC___d13302 ==
			    4'd3) ?
			   4'd4 :
			   ((renameStage_rg_m_halt_req[4] ?
			       renameStage_rg_m_halt_req[3:0] == 4'd5 :
			       IF_NOT_IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3__ETC___d13302 ==
			       4'd4) ?
			      4'd5 :
			      ((renameStage_rg_m_halt_req[4] ?
				  renameStage_rg_m_halt_req[3:0] == 4'd7 :
				  IF_NOT_IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3__ETC___d13302 ==
				  4'd5) ?
				 4'd7 :
				 ((renameStage_rg_m_halt_req[4] ?
				     renameStage_rg_m_halt_req[3:0] == 4'd8 :
				     IF_NOT_IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3__ETC___d13302 ==
				     4'd6) ?
				    4'd8 :
				    ((renameStage_rg_m_halt_req[4] ?
					renameStage_rg_m_halt_req[3:0] ==
					4'd9 :
					IF_NOT_IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3__ETC___d13302 ==
					4'd7) ?
				       4'd9 :
				       ((renameStage_rg_m_halt_req[4] ?
					   renameStage_rg_m_halt_req[3:0] ==
					   4'd11 :
					   IF_NOT_IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3__ETC___d13302 ==
					   4'd8) ?
					  4'd11 :
					  ((renameStage_rg_m_halt_req[4] ?
					      renameStage_rg_m_halt_req[3:0] ==
					      4'd14 :
					      IF_NOT_IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3__ETC___d13302 ==
					      4'd9) ?
					     4'd14 :
					     4'd15)))))))))) ;
  assign IF_NOT_rob_deqPort_1_deq_data__5023_BIT_15_502_ETC___d15223 =
	     (!rob$deqPort_1_deq_data[15] || rob$deqPort_1_deq_data[10] ||
	      rob$deqPort_1_deq_data[157] ||
	      rob$deqPort_1_deq_data[247:243] == 5'd0 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd21 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd17 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd18 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd13 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd16 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd15 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd19 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd20) ?
	       rob$deqPort_0_canDeq && rob$deqPort_0_deq_data[16] :
	       rob$deqPort_0_canDeq && rob$deqPort_0_deq_data[16] ||
	       rob$deqPort_1_deq_data[16] ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10489 =
	     ((SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q169[10:0] ==
	       11'd0) ?
		12'd3074 :
		{ SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q172[10],
		  SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q172 }) -
	     12'd3074 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10530 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10190 ?
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10191 ?
		  IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d10482 :
		  IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10528) :
	       coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[99] ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10763 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10190 ?
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10191 ?
		  IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d10749 :
		  IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10761) :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10736 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10958 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8706 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10816[2] :
	       _theResult___fst_exp__h521378 == 11'd2047 &&
	       _theResult___fst_sfd__h521379 == 52'd0 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10972 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10191 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10857[2] :
	       _theResult___fst_exp__h560231 == 11'd2047 &&
	       _theResult___fst_sfd__h560232 == 52'd0 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10987 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9421 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10901[2] :
	       _theResult___fst_exp__h599535 == 11'd2047 &&
	       _theResult___fst_sfd__h599536 == 52'd0 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11004 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8706 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10816[1] :
	       _theResult___fst_exp__h520595 == 11'd0 &&
	       guard__h512605 != 2'b0 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11016 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10191 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10857[1] :
	       _theResult___fst_exp__h559448 == 11'd0 &&
	       guard__h551458 != 2'b0 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11029 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9421 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10901[1] :
	       _theResult___fst_exp__h598752 == 11'd0 &&
	       guard__h590762 != 2'b0 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11046 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8706 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10816[0] :
	       _theResult___fst_exp__h520595 != 11'd2047 &&
	       guard__h512605 != 2'b0 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11058 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10191 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10857[0] :
	       _theResult___fst_exp__h559448 != 11'd2047 &&
	       guard__h551458 != 2'b0 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11071 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9421 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10901[0] :
	       _theResult___fst_exp__h598752 != 11'd2047 &&
	       guard__h590762 != 2'b0 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9004 =
	     ((SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q129[10:0] ==
	       11'd0) ?
		12'd3074 :
		{ SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q132[10],
		  SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q132 }) -
	     12'd3074 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9045 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8705 ?
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8706 ?
		  IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d8997 :
		  IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d9043) :
	       coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[163] ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9719 =
	     ((SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q146[10:0] ==
	       11'd0) ?
		12'd3074 :
		{ SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q149[10],
		  SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q149 }) -
	     12'd3074 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9760 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9420 ?
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9421 ?
		  IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d9712 :
		  IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d9758) :
	       coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[35] ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9994 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9420 ?
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9421 ?
		  IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d9980 :
		  IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d9992) :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9967 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d4930 =
	     ((SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q29[7:0] ==
	       8'd0) ?
		9'd386 :
		{ SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q34[7],
		  SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q34 }) -
	     9'd386 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5157 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4611 ?
	       ((_theResult___fst_exp__h372619 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5142) :
	       ((_theResult___fst_exp__h381304 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5155) ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5194 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4611 ?
	       ((_theResult___fst_exp__h372619 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5185) :
	       ((_theResult___fst_exp__h381304 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5192) ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5285 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4611 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d5256[2] :
	       _theResult___fst_exp__h381852 == 8'd255 &&
	       _theResult___fst_sfd__h381853 == 23'd0 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5298 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4611 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d5256[1] :
	       _theResult___fst_exp__h381304 == 8'd0 &&
	       guard__h373227 != 2'b0 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5311 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4611 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d5256[0] :
	       _theResult___fst_exp__h381304 != 8'd255 &&
	       guard__h373227 != 2'b0 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6322 =
	     ((SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q64[7:0] ==
	       8'd0) ?
		9'd386 :
		{ SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q69[7],
		  SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q69 }) -
	     9'd386 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6549 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6003 ?
	       ((_theResult___fst_exp__h418316 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6534) :
	       ((_theResult___fst_exp__h427001 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6547) ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6586 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6003 ?
	       ((_theResult___fst_exp__h418316 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6577) :
	       ((_theResult___fst_exp__h427001 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6584) ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6677 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6003 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6648[2] :
	       _theResult___fst_exp__h427549 == 8'd255 &&
	       _theResult___fst_sfd__h427550 == 23'd0 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6690 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6003 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6648[1] :
	       _theResult___fst_exp__h427001 == 8'd0 &&
	       guard__h418924 != 2'b0 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6703 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6003 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6648[0] :
	       _theResult___fst_exp__h427001 != 8'd255 &&
	       guard__h418924 != 2'b0 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7714 =
	     ((SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q99[7:0] ==
	       8'd0) ?
		9'd386 :
		{ SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q104[7],
		  SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q104 }) -
	     9'd386 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7941 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7395 ?
	       ((_theResult___fst_exp__h464011 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7926) :
	       ((_theResult___fst_exp__h472696 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7939) ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7978 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7395 ?
	       ((_theResult___fst_exp__h464011 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7969) :
	       ((_theResult___fst_exp__h472696 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7976) ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8069 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7395 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d8040[2] :
	       _theResult___fst_exp__h473244 == 8'd255 &&
	       _theResult___fst_sfd__h473245 == 23'd0 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8082 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7395 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d8040[1] :
	       _theResult___fst_exp__h472696 == 8'd0 &&
	       guard__h464619 != 2'b0 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8095 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7395 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d8040[0] :
	       _theResult___fst_exp__h472696 != 8'd255 &&
	       guard__h464619 != 2'b0 ;
  assign IF_checkForException_3067_BIT_4_3068_THEN_IF_c_ETC___d13218 =
	     checkForException___d13067[4] ?
	       CASE_checkForException_3067_BITS_3_TO_0_0_chec_ETC__q226 :
	       4'd2 ;
  assign IF_coreFix_aluExe_0_dispToRegQ_RDY_first__2240_ETC___d12272 =
	     (coreFix_aluExe_0_dispToRegQ$RDY_first &&
	      coreFix_aluExe_0_bypassWire_0$whas &&
	      coreFix_aluExe_0_bypassWire_0_wget__2262_BITS__ETC___d12264) ?
	       !coreFix_aluExe_0_bypassWire_0$whas ||
	       coreFix_aluExe_0_dispToRegQ$RDY_first :
	       !coreFix_aluExe_0_bypassWire_1$whas ||
	       coreFix_aluExe_0_dispToRegQ$RDY_first ;
  assign IF_coreFix_aluExe_0_dispToRegQ_RDY_first__2240_ETC___d12306 =
	     (coreFix_aluExe_0_dispToRegQ$RDY_first &&
	      coreFix_aluExe_0_bypassWire_0$whas &&
	      coreFix_aluExe_0_bypassWire_0_wget__2262_BITS__ETC___d12303) ?
	       !coreFix_aluExe_0_bypassWire_0$whas ||
	       coreFix_aluExe_0_dispToRegQ$RDY_first :
	       !coreFix_aluExe_0_bypassWire_1$whas ||
	       coreFix_aluExe_0_dispToRegQ$RDY_first ;
  assign IF_coreFix_aluExe_1_dispToRegQ_RDY_first__1379_ETC___d11411 =
	     (coreFix_aluExe_1_dispToRegQ$RDY_first &&
	      coreFix_aluExe_0_bypassWire_0$whas &&
	      coreFix_aluExe_1_bypassWire_0_wget__1401_BITS__ETC___d11403) ?
	       !coreFix_aluExe_0_bypassWire_0$whas ||
	       coreFix_aluExe_1_dispToRegQ$RDY_first :
	       !coreFix_aluExe_0_bypassWire_1$whas ||
	       coreFix_aluExe_1_dispToRegQ$RDY_first ;
  assign IF_coreFix_aluExe_1_dispToRegQ_RDY_first__1379_ETC___d11445 =
	     (coreFix_aluExe_1_dispToRegQ$RDY_first &&
	      coreFix_aluExe_0_bypassWire_0$whas &&
	      coreFix_aluExe_1_bypassWire_0_wget__1401_BITS__ETC___d11442) ?
	       !coreFix_aluExe_0_bypassWire_0$whas ||
	       coreFix_aluExe_1_dispToRegQ$RDY_first :
	       !coreFix_aluExe_0_bypassWire_1$whas ||
	       coreFix_aluExe_1_dispToRegQ$RDY_first ;
  assign IF_coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first_ETC___d8275 =
	     (coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first &&
	      coreFix_aluExe_0_bypassWire_0$whas &&
	      coreFix_fpuMulDivExe_0_bypassWire_0_wget__265__ETC___d8267) ?
	       !coreFix_aluExe_0_bypassWire_0$whas ||
	       coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first :
	       !coreFix_aluExe_0_bypassWire_1$whas ||
	       coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first ;
  assign IF_coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first_ETC___d8308 =
	     (coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first &&
	      coreFix_aluExe_0_bypassWire_0$whas &&
	      coreFix_fpuMulDivExe_0_bypassWire_0_wget__265__ETC___d8305) ?
	       !coreFix_aluExe_0_bypassWire_0$whas ||
	       coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first :
	       !coreFix_aluExe_0_bypassWire_1$whas ||
	       coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first ;
  assign IF_coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first_ETC___d8332 =
	     (coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first &&
	      coreFix_aluExe_0_bypassWire_0$whas &&
	      coreFix_fpuMulDivExe_0_bypassWire_0_wget__265__ETC___d8329) ?
	       !coreFix_aluExe_0_bypassWire_0$whas ||
	       coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first :
	       !coreFix_aluExe_0_bypassWire_1$whas ||
	       coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6590 =
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[23] ?
	       ((coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
		 11'd2047 &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		 52'd0 ||
		 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
		  11'd2047 ||
		  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
		  11'd0) &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
		 52'd0) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6551) :
	       ((coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
		 11'd2047 &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		 52'd0 ||
		 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
		  11'd2047 ||
		  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
		  11'd0) &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
		 52'd0) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6588) ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d5928 =
	     ((coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	       11'd0) ?
		(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56] ?
		   6'd2 :
		   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[55] ?
		      6'd3 :
		      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[54] ?
			 6'd4 :
			 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[53] ?
			    6'd5 :
			    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[52] ?
			       6'd6 :
			       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[51] ?
				  6'd7 :
				  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[50] ?
				     6'd8 :
				     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[49] ?
					6'd9 :
					(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[48] ?
					   6'd10 :
					   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[47] ?
					      6'd11 :
					      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[46] ?
						 6'd12 :
						 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[45] ?
						    6'd13 :
						    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[44] ?
						       6'd14 :
						       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[43] ?
							  6'd15 :
							  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[42] ?
							     6'd16 :
							     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[41] ?
								6'd17 :
								(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[40] ?
								   6'd18 :
								   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[39] ?
								      6'd19 :
								      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[38] ?
									 6'd20 :
									 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[37] ?
									    6'd21 :
									    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[36] ?
									       6'd22 :
									       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[35] ?
										  6'd23 :
										  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[34] ?
										     6'd24 :
										     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[33] ?
											6'd25 :
											(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[32] ?
											   6'd26 :
											   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[31] ?
											      6'd27 :
											      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[30] ?
												 6'd28 :
												 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[29] ?
												    6'd29 :
												    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[28] ?
												       6'd30 :
												       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[27] ?
													  6'd31 :
													  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[26] ?
													     6'd32 :
													     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[25] ?
														6'd33 :
														(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[24] ?
														   6'd34 :
														   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[23] ?
														      6'd35 :
														      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[22] ?
															 6'd36 :
															 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[21] ?
															    6'd37 :
															    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[20] ?
															       6'd38 :
															       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[19] ?
																  6'd39 :
																  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[18] ?
																     6'd40 :
																     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[17] ?
																	6'd41 :
																	(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[16] ?
																	   6'd42 :
																	   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[15] ?
																	      6'd43 :
																	      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[14] ?
																		 6'd44 :
																		 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[13] ?
																		    6'd45 :
																		    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[12] ?
																		       6'd46 :
																		       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[11] ?
																			  6'd47 :
																			  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[10] ?
																			     6'd48 :
																			     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[9] ?
																				6'd49 :
																				(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[8] ?
																				   6'd50 :
																				   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[7] ?
																				      6'd51 :
																				      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[6] ?
																					 6'd52 :
																					 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[5] ?
																					    6'd53 :
																					    6'd57)))))))))))))))))))))))))))))))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6551 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5462 ?
		  IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d6519 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6521) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6002 ?
		  IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6549 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6521) ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6588 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5462 ?
		  IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d6569 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6570) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6002 ?
		  IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6586 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6570) ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6652 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6634 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6002 &&
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6003 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6648[4] ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6663 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6659 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6002 &&
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6003 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6648[3] ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6679 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d6671 :
	       !SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6002 ||
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6677 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6692 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6686 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6002 &&
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6690 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6705 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d6699 :
	       !SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6002 ||
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6703 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4536 =
	     ((coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	       11'd0) ?
		(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56] ?
		   6'd2 :
		   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[55] ?
		      6'd3 :
		      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[54] ?
			 6'd4 :
			 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[53] ?
			    6'd5 :
			    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[52] ?
			       6'd6 :
			       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[51] ?
				  6'd7 :
				  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[50] ?
				     6'd8 :
				     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[49] ?
					6'd9 :
					(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[48] ?
					   6'd10 :
					   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[47] ?
					      6'd11 :
					      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[46] ?
						 6'd12 :
						 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[45] ?
						    6'd13 :
						    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[44] ?
						       6'd14 :
						       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[43] ?
							  6'd15 :
							  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[42] ?
							     6'd16 :
							     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[41] ?
								6'd17 :
								(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[40] ?
								   6'd18 :
								   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[39] ?
								      6'd19 :
								      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[38] ?
									 6'd20 :
									 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[37] ?
									    6'd21 :
									    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[36] ?
									       6'd22 :
									       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[35] ?
										  6'd23 :
										  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[34] ?
										     6'd24 :
										     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[33] ?
											6'd25 :
											(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[32] ?
											   6'd26 :
											   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[31] ?
											      6'd27 :
											      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[30] ?
												 6'd28 :
												 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[29] ?
												    6'd29 :
												    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[28] ?
												       6'd30 :
												       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[27] ?
													  6'd31 :
													  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[26] ?
													     6'd32 :
													     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[25] ?
														6'd33 :
														(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[24] ?
														   6'd34 :
														   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[23] ?
														      6'd35 :
														      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[22] ?
															 6'd36 :
															 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[21] ?
															    6'd37 :
															    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[20] ?
															       6'd38 :
															       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[19] ?
																  6'd39 :
																  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[18] ?
																     6'd40 :
																     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[17] ?
																	6'd41 :
																	(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[16] ?
																	   6'd42 :
																	   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[15] ?
																	      6'd43 :
																	      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[14] ?
																		 6'd44 :
																		 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[13] ?
																		    6'd45 :
																		    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[12] ?
																		       6'd46 :
																		       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[11] ?
																			  6'd47 :
																			  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[10] ?
																			     6'd48 :
																			     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[9] ?
																				6'd49 :
																				(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[8] ?
																				   6'd50 :
																				   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[7] ?
																				      6'd51 :
																				      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[6] ?
																					 6'd52 :
																					 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[5] ?
																					    6'd53 :
																					    6'd57)))))))))))))))))))))))))))))))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5159 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4070 ?
		  IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d5127 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5129) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4610 ?
		  IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5157 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5129) ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5196 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4070 ?
		  IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d5177 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5178) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4610 ?
		  IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5194 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5178) ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5260 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5242 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4610 &&
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4611 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d5256[4] ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5271 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5267 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4610 &&
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4611 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d5256[3] ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5287 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d5279 :
	       !SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4610 ||
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5285 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5300 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5294 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4610 &&
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5298 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5313 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d5307 :
	       !SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4610 ||
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5311 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7320 =
	     ((coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	       11'd0) ?
		(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56] ?
		   6'd2 :
		   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[55] ?
		      6'd3 :
		      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[54] ?
			 6'd4 :
			 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[53] ?
			    6'd5 :
			    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[52] ?
			       6'd6 :
			       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[51] ?
				  6'd7 :
				  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[50] ?
				     6'd8 :
				     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[49] ?
					6'd9 :
					(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[48] ?
					   6'd10 :
					   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[47] ?
					      6'd11 :
					      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[46] ?
						 6'd12 :
						 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[45] ?
						    6'd13 :
						    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[44] ?
						       6'd14 :
						       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[43] ?
							  6'd15 :
							  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[42] ?
							     6'd16 :
							     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[41] ?
								6'd17 :
								(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[40] ?
								   6'd18 :
								   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[39] ?
								      6'd19 :
								      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[38] ?
									 6'd20 :
									 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[37] ?
									    6'd21 :
									    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[36] ?
									       6'd22 :
									       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[35] ?
										  6'd23 :
										  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[34] ?
										     6'd24 :
										     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[33] ?
											6'd25 :
											(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[32] ?
											   6'd26 :
											   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[31] ?
											      6'd27 :
											      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[30] ?
												 6'd28 :
												 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[29] ?
												    6'd29 :
												    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[28] ?
												       6'd30 :
												       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[27] ?
													  6'd31 :
													  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[26] ?
													     6'd32 :
													     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[25] ?
														6'd33 :
														(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[24] ?
														   6'd34 :
														   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[23] ?
														      6'd35 :
														      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[22] ?
															 6'd36 :
															 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[21] ?
															    6'd37 :
															    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[20] ?
															       6'd38 :
															       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[19] ?
																  6'd39 :
																  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[18] ?
																     6'd40 :
																     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[17] ?
																	6'd41 :
																	(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[16] ?
																	   6'd42 :
																	   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[15] ?
																	      6'd43 :
																	      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[14] ?
																		 6'd44 :
																		 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[13] ?
																		    6'd45 :
																		    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[12] ?
																		       6'd46 :
																		       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[11] ?
																			  6'd47 :
																			  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[10] ?
																			     6'd48 :
																			     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[9] ?
																				6'd49 :
																				(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[8] ?
																				   6'd50 :
																				   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[7] ?
																				      6'd51 :
																				      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[6] ?
																					 6'd52 :
																					 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[5] ?
																					    6'd53 :
																					    6'd57)))))))))))))))))))))))))))))))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7943 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6854 ?
		  IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d7911 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7913) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7394 ?
		  IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7941 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7913) ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7980 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6854 ?
		  IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d7961 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7962) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7394 ?
		  IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7978 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7962) ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8044 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d8026 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7394 &&
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7395 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d8040[4] ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8055 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d8051 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7394 &&
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7395 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d8040[3] ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8071 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d8063 :
	       !SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7394 ||
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8069 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8084 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d8078 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7394 &&
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8082 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8097 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d8091 :
	       !SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7394 ||
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8095 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5198 =
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[23] ?
	       ((coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
		 11'd2047 &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		 52'd0 ||
		 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
		  11'd2047 ||
		  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
		  11'd0) &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
		 52'd0) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5159) :
	       ((coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
		 11'd2047 &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		 52'd0 ||
		 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
		  11'd2047 ||
		  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
		  11'd0) &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
		 52'd0) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5196) ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7982 =
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[23] ?
	       ((coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
		 11'd2047 &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		 52'd0 ||
		 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
		  11'd2047 ||
		  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
		  11'd0) &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
		 52'd0) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7943) :
	       ((coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
		 11'd2047 &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		 52'd0 ||
		 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
		  11'd2047 ||
		  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
		  11'd0) &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
		 52'd0) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7980) ;
  assign IF_coreFix_fpuMulDivExe_0_mulDivExec_mulQ_firs_ETC___d8128 =
	     (coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[25:24] ==
	      2'd0) ?
	       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$D_OUT[63:0] :
	       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$D_OUT[127:64] ;
  assign IF_coreFix_fpuMulDivExe_0_mulDivExec_mulQ_firs_ETC__q125 =
	     IF_coreFix_fpuMulDivExe_0_mulDivExec_mulQ_firs_ETC___d8128[31:0] ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10712 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[215] ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[131:68] :
	       { IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10532,
		 IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10710 } ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10736 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] !=
	     32'hFFFFFFFF ||
	     !coreFix_fpuMulDivExe_0_regToExeQ$first[99] ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d8488 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[235:233] == 3'd4) ?
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d8454 &&
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d8467 :
	       coreFix_fpuMulDivExe_0_regToExeQ$first[235:233] != 3'd3 ||
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d8486 ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9232 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[215] ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[195:132] :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9231 ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9942 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[215] ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[67:4] :
	       { IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9762,
		 IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9940 } ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9967 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] != 32'hFFFFFFFF ||
	     !coreFix_fpuMulDivExe_0_regToExeQ$first[35] ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9998 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[215] ?
	       { !coreFix_fpuMulDivExe_0_regToExeQ$first[67],
		 coreFix_fpuMulDivExe_0_regToExeQ$first[66:4] } :
	       { IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9996,
		 IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9940 } ;
  assign IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12757 =
	     coreFix_globalSpecUpdate_correctSpecTag_1$whas ?
	       result__h647356 :
	       w__h647351 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2142 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3 &&
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_linkAd_ETC___d2130) ?
	       NOT_coreFix_memExe_respLrScAmoQ_full_010_011_A_ETC___d2140 :
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$FULL_N ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2162 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3 &&
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_linkAd_ETC___d2130) ?
	       NOT_coreFix_memExe_respLrScAmoQ_full_010_011_A_ETC___d2140 :
	       IF_NOT_coreFix_memExe_dMem_cache_m_banks_0_pip_ETC___d2161 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2165 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState ==
	      3'd1) ?
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite :
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2164 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2256 =
	     { (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[89:87] ==
		3'd7) ?
		 n___1__h199191 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:448],
	       (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[89:87] ==
		3'd6) ?
		 n___1__h199191 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[447:384],
	       (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[89:87] ==
		3'd5) ?
		 n___1__h199191 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[383:320],
	       (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[89:87] ==
		3'd4) ?
		 n___1__h199191 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[319:256] } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2261 =
	     { IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2256,
	       (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[89:87] ==
		3'd3) ?
		 n___1__h199191 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[255:192],
	       (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[89:87] ==
		3'd2) ?
		 n___1__h199191 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[191:128] } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2266 =
	     { IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2261,
	       (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[89:87] ==
		3'd1) ?
		 n___1__h199191 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[127:64],
	       (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[89:87] ==
		3'd0) ?
		 n___1__h199191 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[63:0] } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2579 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3 &&
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_linkAd_ETC___d2130) ?
	       { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[569:516],
		 4'd2,
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:0] } :
	       { coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:96],
		 (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] !=
		  2'd0 &&
		  !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2154) ?
		   { 3'd1,
		     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[576:574] } :
		   { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516],
		     1'd1,
		     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[576:574] },
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:0] } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2581 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState ==
	      3'd1) ?
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[569:0] :
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2580 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2597 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState ==
	      3'd1) ?
	       3'd5 :
	       ((coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] !=
		 2'd0 &&
		 !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2154) ?
		  3'd2 :
		  3'd3) ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2608 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState ==
	      3'd1) ?
	       58'h155555555555554 :
	       ((coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] !=
		 2'd0 &&
		 !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2154) ?
		  { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[573:571],
		    2'd0,
		    coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[569:518],
		    1'd0 } :
		  { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[573:571],
		    coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516],
		    53'h15555555555555 }) ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2625 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd2) ?
	       x__h197788 :
	       (coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d2208 ?
		  64'd0 :
		  64'd1) ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3089 =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$whas ?
	       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$wget[3] :
	       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl[3] ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3104 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry ||
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3116 =
	     _theResult_____2__h297178 == v__h296598 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3196 =
	     EN_dCacheToParent_fromP_enq ?
	       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget[583] :
	       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl[583] ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3211 =
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_lat_0$whas ||
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3218 =
	     _theResult_____2__h305174 == v__h299943 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3238 =
	     EN_dCacheToParent_fromP_enq ?
	       !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget[583] :
	       !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl[583] ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3305 =
	     (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3196 &&
	      (EN_dCacheToParent_fromP_enq ?
		 !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget[582] :
		 !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl[582])) ?
	       { 516'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA,
		 EN_dCacheToParent_fromP_enq ?
		   coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget[65:0] :
		   coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl[65:0] } :
	       { EN_dCacheToParent_fromP_enq ?
		   coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget[581:518] :
		   coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl[581:518],
		 EN_dCacheToParent_fromP_enq ?
		   coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget[517:516] :
		   coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl[517:516],
		 !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$Q_OUT ||
		 IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3238 ||
		 (EN_dCacheToParent_fromP_enq ?
		    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget[515] :
		    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl[515]),
		 EN_dCacheToParent_fromP_enq ?
		   coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget[514:3] :
		   coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl[514:3],
		 x__h302808 } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_linkAdd_ETC___d3062 =
	     !MUX_flush_reservation$write_1__SEL_2 &&
	     (coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wget[58] :
		coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58]) ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_linkAdd_ETC___d3070 =
	     MUX_flush_reservation$write_1__SEL_2 ?
	       58'h2AAAAAAAAAAAAAA :
	       (coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$whas ?
		  coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wget[57:0] :
		  coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[57:0]) ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2105 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3) ?
	       !coreFix_memExe_respLrScAmoQ_full :
	       !coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first ||
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	       3'd1 ||
	       coreFix_memExe_stb$RDY_deq ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2107 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd2) ?
	       !coreFix_memExe_respLrScAmoQ_full :
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first &&
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	       3'd4 ||
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2105 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2108 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd0) ?
	       !coreFix_memExe_memRespLdQ_full :
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2107 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2116 =
	     IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2108 &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd4 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$RDY_pipelineResp_releaseEntry &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite &&
	      (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	       3'd1 ||
	       coreFix_memExe_stb$RDY_deq)) ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2164 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2154 &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 ||
	       !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085)) ?
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2116 :
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite &&
	       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2162 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2166 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
	       (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2075 ?
		  IF_NOT_coreFix_memExe_dMem_cache_m_banks_0_pip_ETC___d2144 :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite) :
	       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2165 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2202 =
	     { (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] <=
		coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[83:82]) ?
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[83:82] :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2580 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2154 &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 ||
	       !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085)) ?
	       { coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:96],
		 IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2202,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2558 } :
	       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2579 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2628 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2154 &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 ||
	       !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085)) ?
	       { 1'd1,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2625 } :
	       65'h10000000000000001 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2762 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[570] ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2755 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2758) ?
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$RDY_pipelineResp_releaseEntry :
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$FULL_N ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2771 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[570] ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2755 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2758) ?
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[569:512] :
	       { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[569:518],
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
		   2'd0 :
		   coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq[1:0],
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515:512] } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_process_ETC___d2056 =
	     { (coreFix_memExe_dMem_cache_m_banks_0_processAmo[93:91] ==
		3'd7) ?
		 n__h195117 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:448],
	       (coreFix_memExe_dMem_cache_m_banks_0_processAmo[93:91] ==
		3'd6) ?
		 n__h195117 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[447:384],
	       (coreFix_memExe_dMem_cache_m_banks_0_processAmo[93:91] ==
		3'd5) ?
		 n__h195117 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[383:320] } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_process_ETC___d2061 =
	     { IF_coreFix_memExe_dMem_cache_m_banks_0_process_ETC___d2056,
	       (coreFix_memExe_dMem_cache_m_banks_0_processAmo[93:91] ==
		3'd4) ?
		 n__h195117 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[319:256],
	       (coreFix_memExe_dMem_cache_m_banks_0_processAmo[93:91] ==
		3'd3) ?
		 n__h195117 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[255:192] } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_process_ETC___d2066 =
	     { IF_coreFix_memExe_dMem_cache_m_banks_0_process_ETC___d2061,
	       (coreFix_memExe_dMem_cache_m_banks_0_processAmo[93:91] ==
		3'd2) ?
		 n__h195117 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[191:128],
	       (coreFix_memExe_dMem_cache_m_banks_0_processAmo[93:91] ==
		3'd1) ?
		 n__h195117 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[127:64] } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_rqFromC_ETC___d2847 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[83:82] :
		  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[83:82]) :
	       2'd0 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_rqFromC_ETC___d2851 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[81:79] :
		  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[81:79]) :
	       3'd0 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_rqFromC_ETC___d2894 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[6:3] :
		  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[6:3]) :
	       4'd0 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3367 =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP ?
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_lat_0$wget[72] :
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl[72] ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3382 =
	     EN_dCacheToParent_rqToP_deq ||
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3390 =
	     _theResult_____2__h311168 == v__h310457 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3463 =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$whas ?
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wget[579] :
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl[579] ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3478 =
	     EN_dCacheToParent_rsToP_deq ||
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3486 =
	     _theResult_____2__h319022 == v__h314333 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3505 =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$whas ?
	       !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wget[579] :
	       !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl[579] ;
  assign IF_coreFix_memExe_dTlb_procResp__774_BITS_93_T_ETC___d1854 =
	     (coreFix_memExe_dTlb$procResp[93:91] == 3'd3) ?
	       4'd7 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__774_BIT_9_ETC___d1853 ;
  assign IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1802 =
	     (!coreFix_memExe_dTlb$procResp[4] &&
	      !coreFix_memExe_dTlb$procResp[98] &&
	      coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1793) ?
	       coreFix_memExe_dTlb$procResp[93:91] != 3'd2 &&
	       coreFix_memExe_dTlb$procResp[93:91] != 3'd3 &&
	       !coreFix_memExe_dTlb$procResp[4] :
	       !coreFix_memExe_dTlb$procResp[4] &&
	       !coreFix_memExe_dTlb$procResp[98] ;
  assign IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1858 =
	     (!coreFix_memExe_dTlb$procResp[4] &&
	      !coreFix_memExe_dTlb$procResp[98] &&
	      coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1793) ?
	       coreFix_memExe_dTlb$procResp[93:91] != 3'd2 &&
	       IF_coreFix_memExe_dTlb_procResp__774_BITS_93_T_ETC___d1854 ==
	       4'd0 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__774_BIT_9_ETC___d1853 ==
	       4'd0 ;
  assign IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1862 =
	     (!coreFix_memExe_dTlb$procResp[4] &&
	      !coreFix_memExe_dTlb$procResp[98] &&
	      coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1793) ?
	       coreFix_memExe_dTlb$procResp[93:91] != 3'd2 &&
	       IF_coreFix_memExe_dTlb_procResp__774_BITS_93_T_ETC___d1854 ==
	       4'd1 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__774_BIT_9_ETC___d1853 ==
	       4'd1 ;
  assign IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1866 =
	     (!coreFix_memExe_dTlb$procResp[4] &&
	      !coreFix_memExe_dTlb$procResp[98] &&
	      coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1793) ?
	       coreFix_memExe_dTlb$procResp[93:91] != 3'd2 &&
	       IF_coreFix_memExe_dTlb_procResp__774_BITS_93_T_ETC___d1854 ==
	       4'd2 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__774_BIT_9_ETC___d1853 ==
	       4'd2 ;
  assign IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1870 =
	     (!coreFix_memExe_dTlb$procResp[4] &&
	      !coreFix_memExe_dTlb$procResp[98] &&
	      coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1793) ?
	       coreFix_memExe_dTlb$procResp[93:91] != 3'd2 &&
	       IF_coreFix_memExe_dTlb_procResp__774_BITS_93_T_ETC___d1854 ==
	       4'd3 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__774_BIT_9_ETC___d1853 ==
	       4'd3 ;
  assign IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1874 =
	     (!coreFix_memExe_dTlb$procResp[4] &&
	      !coreFix_memExe_dTlb$procResp[98] &&
	      coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1793) ?
	       coreFix_memExe_dTlb$procResp[93:91] != 3'd2 &&
	       IF_coreFix_memExe_dTlb_procResp__774_BITS_93_T_ETC___d1854 ==
	       4'd4 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__774_BIT_9_ETC___d1853 ==
	       4'd4 ;
  assign IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1878 =
	     (!coreFix_memExe_dTlb$procResp[4] &&
	      !coreFix_memExe_dTlb$procResp[98] &&
	      coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1793) ?
	       coreFix_memExe_dTlb$procResp[93:91] == 3'd2 ||
	       IF_coreFix_memExe_dTlb_procResp__774_BITS_93_T_ETC___d1854 ==
	       4'd5 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__774_BIT_9_ETC___d1853 ==
	       4'd5 ;
  assign IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1882 =
	     (!coreFix_memExe_dTlb$procResp[4] &&
	      !coreFix_memExe_dTlb$procResp[98] &&
	      coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1793) ?
	       coreFix_memExe_dTlb$procResp[93:91] != 3'd2 &&
	       IF_coreFix_memExe_dTlb_procResp__774_BITS_93_T_ETC___d1854 ==
	       4'd6 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__774_BIT_9_ETC___d1853 ==
	       4'd6 ;
  assign IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1886 =
	     (!coreFix_memExe_dTlb$procResp[4] &&
	      !coreFix_memExe_dTlb$procResp[98] &&
	      coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1793) ?
	       coreFix_memExe_dTlb$procResp[93:91] != 3'd2 &&
	       IF_coreFix_memExe_dTlb_procResp__774_BITS_93_T_ETC___d1854 ==
	       4'd7 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__774_BIT_9_ETC___d1853 ==
	       4'd7 ;
  assign IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1890 =
	     (!coreFix_memExe_dTlb$procResp[4] &&
	      !coreFix_memExe_dTlb$procResp[98] &&
	      coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1793) ?
	       coreFix_memExe_dTlb$procResp[93:91] != 3'd2 &&
	       IF_coreFix_memExe_dTlb_procResp__774_BITS_93_T_ETC___d1854 ==
	       4'd8 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__774_BIT_9_ETC___d1853 ==
	       4'd8 ;
  assign IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1894 =
	     (!coreFix_memExe_dTlb$procResp[4] &&
	      !coreFix_memExe_dTlb$procResp[98] &&
	      coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1793) ?
	       coreFix_memExe_dTlb$procResp[93:91] != 3'd2 &&
	       IF_coreFix_memExe_dTlb_procResp__774_BITS_93_T_ETC___d1854 ==
	       4'd9 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__774_BIT_9_ETC___d1853 ==
	       4'd9 ;
  assign IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1898 =
	     (!coreFix_memExe_dTlb$procResp[4] &&
	      !coreFix_memExe_dTlb$procResp[98] &&
	      coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1793) ?
	       coreFix_memExe_dTlb$procResp[93:91] != 3'd2 &&
	       IF_coreFix_memExe_dTlb_procResp__774_BITS_93_T_ETC___d1854 ==
	       4'd10 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__774_BIT_9_ETC___d1853 ==
	       4'd10 ;
  assign IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1902 =
	     (!coreFix_memExe_dTlb$procResp[4] &&
	      !coreFix_memExe_dTlb$procResp[98] &&
	      coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1793) ?
	       coreFix_memExe_dTlb$procResp[93:91] != 3'd2 &&
	       IF_coreFix_memExe_dTlb_procResp__774_BITS_93_T_ETC___d1854 ==
	       4'd11 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__774_BIT_9_ETC___d1853 ==
	       4'd11 ;
  assign IF_coreFix_memExe_dTlb_procResp__774_BIT_98_77_ETC___d1906 =
	     (!coreFix_memExe_dTlb$procResp[4] &&
	      !coreFix_memExe_dTlb$procResp[98] &&
	      coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1793) ?
	       coreFix_memExe_dTlb$procResp[93:91] != 3'd2 &&
	       IF_coreFix_memExe_dTlb_procResp__774_BITS_93_T_ETC___d1854 ==
	       4'd12 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__774_BIT_9_ETC___d1853 ==
	       4'd12 ;
  assign IF_coreFix_memExe_dispToRegQ_RDY_first__610_AN_ETC___d1640 =
	     (coreFix_memExe_dispToRegQ$RDY_first &&
	      coreFix_aluExe_0_bypassWire_0$whas &&
	      coreFix_memExe_bypassWire_0_wget__630_BITS_70__ETC___d1632) ?
	       !coreFix_aluExe_0_bypassWire_0$whas ||
	       coreFix_memExe_dispToRegQ$RDY_first :
	       !coreFix_aluExe_0_bypassWire_1$whas ||
	       coreFix_memExe_dispToRegQ$RDY_first ;
  assign IF_coreFix_memExe_dispToRegQ_RDY_first__610_AN_ETC___d1673 =
	     (coreFix_memExe_dispToRegQ$RDY_first &&
	      coreFix_aluExe_0_bypassWire_0$whas &&
	      coreFix_memExe_bypassWire_0_wget__630_BITS_70__ETC___d1670) ?
	       !coreFix_aluExe_0_bypassWire_0$whas ||
	       coreFix_memExe_dispToRegQ$RDY_first :
	       !coreFix_aluExe_0_bypassWire_1$whas ||
	       coreFix_memExe_dispToRegQ$RDY_first ;
  assign IF_coreFix_memExe_forwardQ_deqReq_dummy2_2_rea_ETC___d3808 =
	     _theResult_____2__h332591 == v__h332159 ;
  assign IF_coreFix_memExe_forwardQ_deqReq_lat_1_whas___ETC___d3801 =
	     WILL_FIRE_RL_coreFix_memExe_doRespLdForward ||
	     coreFix_memExe_forwardQ_deqReq_rl ;
  assign IF_coreFix_memExe_forwardQ_enqReq_lat_1_whas___ETC___d3786 =
	     coreFix_memExe_forwardQ_enqReq_lat_0$whas ?
	       coreFix_memExe_forwardQ_enqReq_lat_0$wget[67] :
	       coreFix_memExe_forwardQ_enqReq_rl[67] ;
  assign IF_coreFix_memExe_lsq_firstLd__339_BIT_94_414__ETC___d1439 =
	     coreFix_memExe_lsq$firstLd[94] ?
	       (coreFix_memExe_lsq$firstLd[92] ?
		  { 48'd0,
		    SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_133_ETC___d1421 } :
		  { {48{SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_133_ETC___d1421[15]}},
		    SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_133_ETC___d1421 }) :
	       (coreFix_memExe_lsq$firstLd[92] ?
		  { 56'd0,
		    SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_133_ETC___d1435 } :
		  { {56{SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_133_ETC___d1435[7]}},
		    SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_133_ETC___d1435 }) ;
  assign IF_coreFix_memExe_lsq_firstLd__339_BIT_94_414__ETC___d1486 =
	     coreFix_memExe_lsq$firstLd[94] ?
	       (coreFix_memExe_lsq$firstLd[92] ?
		  { 48'd0,
		    SEL_ARR_mmio_dataRespQ_data_0_163_BITS_15_TO_0_ETC___d1469 } :
		  { {48{SEL_ARR_mmio_dataRespQ_data_0_163_BITS_15_TO_0_ETC___d1469[15]}},
		    SEL_ARR_mmio_dataRespQ_data_0_163_BITS_15_TO_0_ETC___d1469 }) :
	       (coreFix_memExe_lsq$firstLd[92] ?
		  { 56'd0,
		    SEL_ARR_mmio_dataRespQ_data_0_163_BITS_7_TO_0__ETC___d1482 } :
		  { {56{SEL_ARR_mmio_dataRespQ_data_0_163_BITS_7_TO_0__ETC___d1482[7]}},
		    SEL_ARR_mmio_dataRespQ_data_0_163_BITS_7_TO_0__ETC___d1482 }) ;
  assign IF_coreFix_memExe_lsq_firstLd__339_BIT_96_404__ETC___d1440 =
	     coreFix_memExe_lsq$firstLd[96] ?
	       (coreFix_memExe_lsq$firstLd[92] ?
		  { 32'd0,
		    SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_133_ETC___d1410 } :
		  { {32{SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_133_ETC___d1410[31]}},
		    SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_133_ETC___d1410 }) :
	       IF_coreFix_memExe_lsq_firstLd__339_BIT_94_414__ETC___d1439 ;
  assign IF_coreFix_memExe_lsq_firstLd__339_BIT_96_404__ETC___d1487 =
	     coreFix_memExe_lsq$firstLd[96] ?
	       (coreFix_memExe_lsq$firstLd[92] ?
		  { 32'd0,
		    SEL_ARR_mmio_dataRespQ_data_0_163_BITS_31_TO_0_ETC___d1460 } :
		  { {32{SEL_ARR_mmio_dataRespQ_data_0_163_BITS_31_TO_0_ETC___d1460[31]}},
		    SEL_ARR_mmio_dataRespQ_data_0_163_BITS_31_TO_0_ETC___d1460 }) :
	       IF_coreFix_memExe_lsq_firstLd__339_BIT_94_414__ETC___d1486 ;
  assign IF_coreFix_memExe_memRespLdQ_deqReq_dummy2_2_r_ETC___d3714 =
	     _theResult_____2__h329366 == v__h328934 ;
  assign IF_coreFix_memExe_memRespLdQ_deqReq_lat_1_whas_ETC___d3707 =
	     WILL_FIRE_RL_coreFix_memExe_doRespLdMem ||
	     coreFix_memExe_memRespLdQ_deqReq_rl ;
  assign IF_coreFix_memExe_memRespLdQ_enqReq_lat_1_whas_ETC___d3692 =
	     coreFix_memExe_memRespLdQ_enqReq_lat_0$whas ?
	       coreFix_memExe_memRespLdQ_enqReq_lat_0$wget[67] :
	       coreFix_memExe_memRespLdQ_enqReq_rl[67] ;
  assign IF_coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1__ETC___d1270 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		  coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[83:82] :
		  coreFix_memExe_reqLrScAmoQ_data_0_rl[83:82]) :
	       2'd0 ;
  assign IF_coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1__ETC___d1274 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		  coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[81:79] :
		  coreFix_memExe_reqLrScAmoQ_data_0_rl[81:79]) :
	       3'd0 ;
  assign IF_coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1__ETC___d1317 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		  coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[6:3] :
		  coreFix_memExe_reqLrScAmoQ_data_0_rl[6:3]) :
	       4'd0 ;
  assign IF_coreFix_memExe_respLrScAmoQ_enqReq_lat_1_wh_ETC___d3616 =
	     coreFix_memExe_respLrScAmoQ_enqReq_lat_0$whas ?
	       coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wget[64] :
	       coreFix_memExe_respLrScAmoQ_enqReq_rl[64] ;
  assign IF_csrf_minstret_ehr_data_lat_0_whas_THEN_csrf_ETC___d8 =
	     csrf_minstret_ehr_data_lat_0$whas ?
	       upd__h714551 :
	       csrf_minstret_ehr_data_rl ;
  assign IF_fetchStage_RDY_pipelines_0_first__2813_AND__ETC___d13507 =
	     (fetchStage$RDY_pipelines_0_first &&
	      (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	       specTagManager$canClaim) &&
	      regRenamingTable_rename_0_canRename__3475_AND__ETC___d13501) ?
	       fetchStage$RDY_pipelines_0_first :
	       !regRenamingTable$rename_0_canRename ||
	       fetchStage$RDY_pipelines_0_first ;
  assign IF_fetchStage_RDY_pipelines_1_first__2824_AND__ETC___d13905 =
	     (fetchStage$RDY_pipelines_1_first &&
	      (fetchStage$pipelines_1_first[194:192] == 3'd0 ||
	       fetchStage$pipelines_1_first[194:192] == 3'd1)) ?
	       (!fetchStage$pipelines_0_canDeq ||
		fetchStage$RDY_pipelines_0_first) &&
	       (SEL_ARR_fetchStage_pipelines_0_canDeq__2814_AN_ETC___d13844 ||
		fetchStage$pipelines_1_first[194:192] == 3'd1 &&
		regRenamingTable_rename_0_canRename__3475_AND__ETC___d13568 ||
		NOT_regRenamingTable_rename_1_canRename__3604__ETC___d13873) :
	       fetchStage$RDY_pipelines_1_first &&
	       IF_NOT_fetchStage_pipelines_1_first__2825_BITS_ETC___d13903 ;
  assign IF_fetchStage_RDY_pipelines_1_first__2824_AND__ETC___d13979 =
	     (fetchStage$RDY_pipelines_1_first &&
	      (fetchStage$pipelines_1_first[194:192] != 3'd1 ||
	       !fetchStage$pipelines_0_canDeq ||
	       fetchStage$RDY_pipelines_0_first) &&
	      fetchStage_RDY_pipelines_0_first__2813_AND_fet_ETC___d13573 &&
	      NOT_fetchStage_pipelines_1_first__2825_BITS_19_ETC___d13811) ?
	       IF_fetchStage_RDY_pipelines_1_first__2824_AND__ETC___d13905 &&
	       (IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d13976 ||
		!fetchStage$pipelines_0_canDeq ||
		fetchStage$RDY_pipelines_0_first) :
	       !fetchStage$pipelines_0_canDeq ||
	       fetchStage$RDY_pipelines_0_first ;
  assign IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14028 =
	     IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14021 ||
	     regRenamingTable$RDY_rename_0_claimRename &&
	     regRenamingTable$RDY_rename_0_getRename &&
	     rob$RDY_enqPort_0_enq &&
	     fetchStage$RDY_pipelines_0_deq &&
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$RDY_claimSpecTag) ;
  assign IF_fetchStage_pipelines_0_first__2816_BIT_160__ETC___d14211 =
	     { fetchStage$pipelines_0_first[159:128],
	       IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d14199,
	       IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d14202 ?
		 IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d14205 :
		 { 1'h0,
		   IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d14208 } } ;
  assign IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d14161 =
	     IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d14116 &&
	     IF_fetchStage_RDY_pipelines_1_first__2824_AND__ETC___d13905 &&
	     (IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d14145 ||
	      regRenamingTable$RDY_rename_1_claimRename &&
	      regRenamingTable$RDY_rename_1_getRename &&
	      rob$RDY_enqPort_1_enq &&
	      fetchStage_RDY_pipelines_1_deq__2828_AND_NOT_f_ETC___d14155) ;
  assign IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d14381 =
	     (fetchStage$pipelines_1_first[194:192] == 3'd2 &&
	      NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14328 &&
	      IF_fetchStage_pipelines_1_first__2825_BITS_191_ETC___d14335) ?
	       IF_fetchStage_pipelines_1_first__2825_BITS_191_ETC___d14336 :
	       { 1'h0,
		 IF_fetchStage_pipelines_1_first__2825_BITS_191_ETC___d14337 } ;
  assign IF_fetchStage_pipelines_1_first__2825_BIT_160__ETC___d14340 =
	     { fetchStage$pipelines_1_first[159:128],
	       IF_fetchStage_pipelines_1_first__2825_BITS_191_ETC___d14334,
	       IF_fetchStage_pipelines_1_first__2825_BITS_191_ETC___d14335 ?
		 IF_fetchStage_pipelines_1_first__2825_BITS_191_ETC___d14336 :
		 { 1'h0,
		   IF_fetchStage_pipelines_1_first__2825_BITS_191_ETC___d14337 } } ;
  assign IF_mmio_cRqQ_enqReq_lat_1_whas__30_THEN_mmio_c_ETC___d339 =
	     mmio_cRqQ_enqReq_lat_0$whas ?
	       mmio_cRqQ_enqReq_lat_0$wget[142] :
	       mmio_cRqQ_enqReq_rl[142] ;
  assign IF_mmio_cRsQ_enqReq_lat_1_whas__28_THEN_mmio_c_ETC___d837 =
	     CAN_FIRE_RL_mmio_handlePRq ?
	       mmio_cRsQ_enqReq_lat_0$wget[1] :
	       mmio_cRsQ_enqReq_rl[1] ;
  assign IF_mmio_dataReqQ_enqReq_lat_1_whas__7_THEN_mmi_ETC___d46 =
	     mmio_dataReqQ_enqReq_lat_0$whas ?
	       mmio_dataReqQ_enqReq_lat_0$wget[142] :
	       mmio_dataReqQ_enqReq_rl[142] ;
  assign IF_mmio_dataRespQ_enqReq_lat_1_whas__92_THEN_m_ETC___d201 =
	     CAN_FIRE_RL_mmio_sendDataResp ?
	       mmio_dataRespQ_enqReq_lat_0$wget[65] :
	       mmio_dataRespQ_enqReq_rl[65] ;
  assign IF_mmio_pRqQ_enqReq_lat_1_whas__87_THEN_mmio_p_ETC___d696 =
	     EN_mmioToPlatform_pRq_enq ?
	       mmio_pRqQ_enqReq_lat_0$wget[39] :
	       mmio_pRqQ_enqReq_rl[39] ;
  assign IF_mmio_pRsQ_enqReq_lat_1_whas__82_THEN_mmio_p_ETC___d491 =
	     EN_mmioToPlatform_pRs_enq ?
	       mmio_pRsQ_enqReq_lat_0$wget[69] :
	       mmio_pRsQ_enqReq_rl[69] ;
  assign IF_rob_deqPort_0_canDeq__5016_THEN_IF_NOT_rob__ETC___d15124 =
	     rob$deqPort_0_canDeq ?
	       y_avValue_snd_snd_snd_snd_snd__h716412 :
	       64'd0 ;
  assign IF_rob_deqPort_0_canDeq__5016_THEN_IF_NOT_rob__ETC___d15210 =
	     rob$deqPort_0_canDeq ? y_avValue_snd_fst__h716396 : 5'd0 ;
  assign IF_rob_deqPort_0_canDeq__5016_THEN_IF_NOT_rob__ETC___d15232 =
	     rob$deqPort_0_canDeq ?
	       y_avValue_snd_snd_snd_fst__h716406 :
	       2'd0 ;
  assign IF_rob_deqPort_1_canDeq__5020_THEN_IF_NOT_rob__ETC___d15224 =
	     rob$deqPort_1_canDeq ?
	       IF_NOT_rob_deqPort_1_deq_data__5023_BIT_15_502_ETC___d15223 :
	       rob$deqPort_0_canDeq && rob$deqPort_0_deq_data[16] ;
  assign IF_sfdin00544_BIT_33_THEN_2_ELSE_0__q56 =
	     sfdin__h400544[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin11756_BIT_4_THEN_2_ELSE_0__q131 =
	     sfdin__h511756[4] ? 2'd2 : 2'd0 ;
  assign IF_sfdin18310_BIT_33_THEN_2_ELSE_0__q66 =
	     sfdin__h418310[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin46239_BIT_33_THEN_2_ELSE_0__q91 =
	     sfdin__h446239[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin50609_BIT_4_THEN_2_ELSE_0__q171 =
	     sfdin__h550609[4] ? 2'd2 : 2'd0 ;
  assign IF_sfdin54847_BIT_33_THEN_2_ELSE_0__q21 =
	     sfdin__h354847[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin64005_BIT_33_THEN_2_ELSE_0__q101 =
	     sfdin__h464005[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin72613_BIT_33_THEN_2_ELSE_0__q31 =
	     sfdin__h372613[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin89913_BIT_4_THEN_2_ELSE_0__q148 =
	     sfdin__h589913[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd02136_BIT_4_THEN_2_ELSE_0__q127 =
	     _theResult___snd__h502136[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd09157_BIT_33_THEN_2_ELSE_0__q58 =
	     _theResult___snd__h409157[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd20541_BIT_4_THEN_2_ELSE_0__q134 =
	     _theResult___snd__h520541[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd26947_BIT_33_THEN_2_ELSE_0__q71 =
	     _theResult___snd__h426947[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd40989_BIT_4_THEN_2_ELSE_0__q167 =
	     _theResult___snd__h540989[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd54852_BIT_33_THEN_2_ELSE_0__q93 =
	     _theResult___snd__h454852[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd59394_BIT_4_THEN_2_ELSE_0__q174 =
	     _theResult___snd__h559394[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd63460_BIT_33_THEN_2_ELSE_0__q23 =
	     _theResult___snd__h363460[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd72642_BIT_33_THEN_2_ELSE_0__q106 =
	     _theResult___snd__h472642[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd80293_BIT_4_THEN_2_ELSE_0__q144 =
	     _theResult___snd__h580293[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd81250_BIT_33_THEN_2_ELSE_0__q36 =
	     _theResult___snd__h381250[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd98698_BIT_4_THEN_2_ELSE_0__q151 =
	     _theResult___snd__h598698[4] ? 2'd2 : 2'd0 ;
  assign NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d5279 =
	     !_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4070 ||
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4071 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d5227[2] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5239[2]) ;
  assign NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d5307 =
	     !_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4070 ||
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4071 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d5227[0] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5239[0]) ;
  assign NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d6671 =
	     !_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5462 ||
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5463 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d6619[2] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6631[2]) ;
  assign NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d6699 =
	     !_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5462 ||
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5463 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d6619[0] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6631[0]) ;
  assign NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d8063 =
	     !_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6854 ||
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6855 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d8011[2] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d8023[2]) ;
  assign NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d8091 =
	     !_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6854 ||
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6855 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d8011[0] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d8023[0]) ;
  assign NOT_IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_284_ETC___d13402 =
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[0] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[1] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[2] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[3] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[4] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[5] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[6] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[7] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[8] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[9] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[10] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[11] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[12] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[13] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[14] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[15] &&
	     !checkForException___d13067[4] &&
	     NOT_csrf_fs_reg_read__1604_EQ_0_3056_3057_OR_N_ETC___d13395 &&
	     (fetchStage$pipelines_0_first[231:200] != 32'h10500073 ||
	      !csrf_tw_reg ||
	      csrf_prv_reg == 2'd3) ;
  assign NOT_IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_284_ETC___d13494 =
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[0] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[1] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[2] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[3] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[4] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[5] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[6] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[7] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[8] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[9] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[10] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[11] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[12] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[13] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[14] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[15] &&
	     !checkForException___d13067[4] &&
	     NOT_csrf_fs_reg_read__1604_EQ_0_3056_3057_OR_N_ETC___d13492 ;
  assign NOT_IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_284_ETC___d13799 =
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[0] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[1] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[2] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[3] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[4] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[5] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[6] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[7] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[8] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[9] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[10] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[11] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[12] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[13] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[14] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[15] &&
	     !checkForException___d13772[4] &&
	     NOT_csrf_fs_reg_read__1604_EQ_0_3056_3057_OR_N_ETC___d13797 ;
  assign NOT_IF_NOT_rob_deqPort_0_canDeq__5016_5017_OR__ETC___d15229 =
	     (fflags__h716903 & csrf_fflags_reg) != fflags__h716903 ||
	     !r__h613737 &&
	     (IF_rob_deqPort_1_canDeq__5020_THEN_IF_NOT_rob__ETC___d15224 ||
	      fflags__h716903 != 5'd0) ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10114 =
	     !f2_sfd__h521792[21] && !f2_sfd__h521792[20] &&
	     !f2_sfd__h521792[19] &&
	     !f2_sfd__h521792[18] &&
	     !f2_sfd__h521792[17] &&
	     !f2_sfd__h521792[16] &&
	     !f2_sfd__h521792[15] &&
	     !f2_sfd__h521792[14] &&
	     !f2_sfd__h521792[13] &&
	     !f2_sfd__h521792[12] &&
	     !f2_sfd__h521792[11] &&
	     !f2_sfd__h521792[10] &&
	     !f2_sfd__h521792[9] &&
	     !f2_sfd__h521792[8] &&
	     !f2_sfd__h521792[7] &&
	     !f2_sfd__h521792[6] &&
	     !f2_sfd__h521792[5] &&
	     !f2_sfd__h521792[4] &&
	     !f2_sfd__h521792[3] &&
	     !f2_sfd__h521792[2] &&
	     !f2_sfd__h521792[1] &&
	     !f2_sfd__h521792[0] ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10823 =
	     (f1_exp__h482797 != 8'd255 || f1_sfd__h482798 == 23'd0) &&
	     (f1_exp__h482797 != 8'd255 || f1_sfd__h482798 != 23'd0) &&
	     (f1_exp__h482797 != 8'd0 || f1_sfd__h482798 != 23'd0) &&
	     IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10820 ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10865 =
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10823 |
	     ((f2_exp__h521791 != 8'd255 || f2_sfd__h521792 == 23'd0) &&
	      (f2_exp__h521791 != 8'd255 || f2_sfd__h521792 != 23'd0) &&
	      (f2_exp__h521791 != 8'd0 || f2_sfd__h521792 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10861) ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10923 =
	     (f1_exp__h482797 != 8'd255 || f1_sfd__h482798 == 23'd0) &&
	     (f1_exp__h482797 != 8'd255 || f1_sfd__h482798 != 23'd0) &&
	     (f1_exp__h482797 != 8'd0 || f1_sfd__h482798 != 23'd0) &&
	     IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10920 ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10934 =
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10923 |
	     ((f2_exp__h521791 != 8'd255 || f2_sfd__h521792 == 23'd0) &&
	      (f2_exp__h521791 != 8'd255 || f2_sfd__h521792 != 23'd0) &&
	      (f2_exp__h521791 != 8'd0 || f2_sfd__h521792 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10930) ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10963 =
	     (f1_exp__h482797 != 8'd255 || f1_sfd__h482798 == 23'd0) &&
	     (f1_exp__h482797 != 8'd255 || f1_sfd__h482798 != 23'd0) &&
	     (f1_exp__h482797 != 8'd0 || f1_sfd__h482798 != 23'd0) &&
	     IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10960 ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10978 =
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10963 |
	     ((f2_exp__h521791 != 8'd255 || f2_sfd__h521792 == 23'd0) &&
	      (f2_exp__h521791 != 8'd255 || f2_sfd__h521792 != 23'd0) &&
	      (f2_exp__h521791 != 8'd0 || f2_sfd__h521792 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10974) ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11009 =
	     (f1_exp__h482797 != 8'd255 || f1_sfd__h482798 == 23'd0) &&
	     (f1_exp__h482797 != 8'd255 || f1_sfd__h482798 != 23'd0) &&
	     (f1_exp__h482797 != 8'd0 || f1_sfd__h482798 != 23'd0) &&
	     IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11006 ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11022 =
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11009 |
	     ((f2_exp__h521791 != 8'd255 || f2_sfd__h521792 == 23'd0) &&
	      (f2_exp__h521791 != 8'd255 || f2_sfd__h521792 != 23'd0) &&
	      (f2_exp__h521791 != 8'd0 || f2_sfd__h521792 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11018) ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11051 =
	     (f1_exp__h482797 != 8'd255 || f1_sfd__h482798 == 23'd0) &&
	     (f1_exp__h482797 != 8'd255 || f1_sfd__h482798 != 23'd0) &&
	     (f1_exp__h482797 != 8'd0 || f1_sfd__h482798 != 23'd0) &&
	     IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11048 ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11064 =
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11051 |
	     ((f2_exp__h521791 != 8'd255 || f2_sfd__h521792 == 23'd0) &&
	      (f2_exp__h521791 != 8'd255 || f2_sfd__h521792 != 23'd0) &&
	      (f2_exp__h521791 != 8'd0 || f2_sfd__h521792 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11060) ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d8614 =
	     !f1_sfd__h482798[21] && !f1_sfd__h482798[20] &&
	     !f1_sfd__h482798[19] &&
	     !f1_sfd__h482798[18] &&
	     !f1_sfd__h482798[17] &&
	     !f1_sfd__h482798[16] &&
	     !f1_sfd__h482798[15] &&
	     !f1_sfd__h482798[14] &&
	     !f1_sfd__h482798[13] &&
	     !f1_sfd__h482798[12] &&
	     !f1_sfd__h482798[11] &&
	     !f1_sfd__h482798[10] &&
	     !f1_sfd__h482798[9] &&
	     !f1_sfd__h482798[8] &&
	     !f1_sfd__h482798[7] &&
	     !f1_sfd__h482798[6] &&
	     !f1_sfd__h482798[5] &&
	     !f1_sfd__h482798[4] &&
	     !f1_sfd__h482798[3] &&
	     !f1_sfd__h482798[2] &&
	     !f1_sfd__h482798[1] &&
	     !f1_sfd__h482798[0] ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d9344 =
	     !f3_sfd__h561096[21] && !f3_sfd__h561096[20] &&
	     !f3_sfd__h561096[19] &&
	     !f3_sfd__h561096[18] &&
	     !f3_sfd__h561096[17] &&
	     !f3_sfd__h561096[16] &&
	     !f3_sfd__h561096[15] &&
	     !f3_sfd__h561096[14] &&
	     !f3_sfd__h561096[13] &&
	     !f3_sfd__h561096[12] &&
	     !f3_sfd__h561096[11] &&
	     !f3_sfd__h561096[10] &&
	     !f3_sfd__h561096[9] &&
	     !f3_sfd__h561096[8] &&
	     !f3_sfd__h561096[7] &&
	     !f3_sfd__h561096[6] &&
	     !f3_sfd__h561096[5] &&
	     !f3_sfd__h561096[4] &&
	     !f3_sfd__h561096[3] &&
	     !f3_sfd__h561096[2] &&
	     !f3_sfd__h561096[1] &&
	     !f3_sfd__h561096[0] ;
  assign NOT_SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__ETC___d13523 =
	     !SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__351_ETC___d13521 &&
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$canClaim) &&
	     regRenamingTable_rename_0_canRename__3475_AND__ETC___d13501 ;
  assign NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14567 =
	     (!commitStage_commitTrap[36] ||
	      commitStage_commitTrap[35:32] == 4'd0 ||
	      commitStage_commitTrap[35:32] == 4'd1 ||
	      commitStage_commitTrap[35:32] == 4'd3 ||
	      commitStage_commitTrap[35:32] == 4'd4 ||
	      commitStage_commitTrap[35:32] == 4'd5 ||
	      commitStage_commitTrap[35:32] == 4'd7 ||
	      commitStage_commitTrap[35:32] == 4'd8 ||
	      commitStage_commitTrap[35:32] == 4'd9 ||
	      commitStage_commitTrap[35:32] == 4'd11) &&
	     (commitStage_commitTrap[36] ||
	      commitStage_commitTrap[35:32] != 4'd3 ||
	      CASE_csrf_prv_reg_1_NOT_csrf_rg_dcsr_BIT_13_3__ETC__q235) ;
  assign NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14574 =
	     NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14567 ||
	     coreFix_memExe_stb$isEmpty && coreFix_memExe_lsq$stqEmpty &&
	     fetchStage$iTlbIfc_noPendingReq &&
	     coreFix_memExe_dTlb$noPendingReq ;
  assign NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14634 =
	     (!commitStage_commitTrap[36] ||
	      commitStage_commitTrap[35:32] != 4'd14) &&
	     (!commitStage_commitTrap[36] ||
	      commitStage_commitTrap[35:32] == 4'd0 ||
	      commitStage_commitTrap[35:32] == 4'd1 ||
	      commitStage_commitTrap[35:32] == 4'd3 ||
	      commitStage_commitTrap[35:32] == 4'd4 ||
	      commitStage_commitTrap[35:32] == 4'd5 ||
	      commitStage_commitTrap[35:32] == 4'd7 ||
	      commitStage_commitTrap[35:32] == 4'd8 ||
	      commitStage_commitTrap[35:32] == 4'd9 ||
	      commitStage_commitTrap[35:32] == 4'd11 ||
	      commitStage_commitTrap[35:32] == 4'd14) &&
	     (commitStage_commitTrap[36] ||
	      commitStage_commitTrap[35:32] != 4'd3 ||
	      CASE_csrf_prv_reg_1_NOT_csrf_rg_dcsr_BIT_13_3__ETC__q235) ;
  assign NOT_commitStage_rg_run_state_4404_4405_AND_NOT_ETC___d14815 =
	     !commitStage_rg_run_state && !commitStage_commitTrap[165] &&
	     !rob$deqPort_0_deq_data[157] &&
	     !rob$deqPort_0_deq_data[10] &&
	     rob$deqPort_0_deq_data[15] ;
  assign NOT_coreFix_aluExe_0_bypassWire_0_whas__2261_2_ETC___d12288 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_0_bypassWire_0_wget__2262_BITS__ETC___d12264) &&
	     (!coreFix_aluExe_0_bypassWire_1$whas ||
	      !coreFix_aluExe_0_bypassWire_1_wget__2275_BITS__ETC___d12277) &&
	     (!coreFix_aluExe_0_bypassWire_2$whas ||
	      !coreFix_aluExe_0_bypassWire_2_wget__2283_BITS__ETC___d12285) ;
  assign NOT_coreFix_aluExe_0_bypassWire_0_whas__2261_2_ETC___d12316 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_0_bypassWire_0_wget__2262_BITS__ETC___d12303) &&
	     (!coreFix_aluExe_0_bypassWire_1$whas ||
	      !coreFix_aluExe_0_bypassWire_1_wget__2275_BITS__ETC___d12309) &&
	     (!coreFix_aluExe_0_bypassWire_2$whas ||
	      !coreFix_aluExe_0_bypassWire_2_wget__2283_BITS__ETC___d12313) ;
  assign NOT_coreFix_aluExe_1_bypassWire_0_whas__1400_1_ETC___d11427 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_1_bypassWire_0_wget__1401_BITS__ETC___d11403) &&
	     (!coreFix_aluExe_0_bypassWire_1$whas ||
	      !coreFix_aluExe_1_bypassWire_1_wget__1414_BITS__ETC___d11416) &&
	     (!coreFix_aluExe_1_bypassWire_2$whas ||
	      !coreFix_aluExe_1_bypassWire_2_wget__1422_BITS__ETC___d11424) ;
  assign NOT_coreFix_aluExe_1_bypassWire_0_whas__1400_1_ETC___d11455 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_1_bypassWire_0_wget__1401_BITS__ETC___d11442) &&
	     (!coreFix_aluExe_0_bypassWire_1$whas ||
	      !coreFix_aluExe_1_bypassWire_1_wget__1414_BITS__ETC___d11448) &&
	     (!coreFix_aluExe_1_bypassWire_2$whas ||
	      !coreFix_aluExe_1_bypassWire_2_wget__1422_BITS__ETC___d11452) ;
  assign NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d8291 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_0_wget__265__ETC___d8267) &&
	     (!coreFix_aluExe_0_bypassWire_1$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_1_wget__278__ETC___d8280) &&
	     (!coreFix_fpuMulDivExe_0_bypassWire_2$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_2_wget__286__ETC___d8288) ;
  assign NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d8318 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_0_wget__265__ETC___d8305) &&
	     (!coreFix_aluExe_0_bypassWire_1$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_1_wget__278__ETC___d8311) &&
	     (!coreFix_fpuMulDivExe_0_bypassWire_2$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_2_wget__286__ETC___d8315) ;
  assign NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d8342 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_0_wget__265__ETC___d8329) &&
	     (!coreFix_aluExe_0_bypassWire_1$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_1_wget__278__ETC___d8335) &&
	     (!coreFix_fpuMulDivExe_0_bypassWire_2$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_2_wget__286__ETC___d8339) ;
  assign NOT_coreFix_fpuMulDivExe_0_fpuExec_double_div__ETC___d5873 =
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[55] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[54] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[53] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[52] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[51] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[50] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[49] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[48] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[47] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[46] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[45] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[44] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[43] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[42] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[41] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[40] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[39] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[38] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[37] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[36] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[35] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[34] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[33] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[32] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[31] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[30] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[29] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[28] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[27] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[26] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[25] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[24] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[23] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[22] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[21] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[20] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[19] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[18] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[17] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[16] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[15] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[14] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[13] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[12] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[11] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[10] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[9] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[8] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[7] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[6] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[5] ;
  assign NOT_coreFix_fpuMulDivExe_0_fpuExec_double_fma__ETC___d4481 =
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[55] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[54] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[53] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[52] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[51] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[50] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[49] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[48] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[47] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[46] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[45] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[44] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[43] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[42] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[41] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[40] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[39] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[38] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[37] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[36] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[35] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[34] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[33] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[32] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[31] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[30] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[29] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[28] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[27] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[26] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[25] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[24] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[23] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[22] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[21] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[20] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[19] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[18] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[17] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[16] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[15] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[14] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[13] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[12] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[11] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[10] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[9] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[8] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[7] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[6] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[5] ;
  assign NOT_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt_ETC___d7265 =
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[55] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[54] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[53] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[52] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[51] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[50] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[49] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[48] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[47] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[46] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[45] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[44] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[43] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[42] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[41] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[40] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[39] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[38] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[37] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[36] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[35] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[34] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[33] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[32] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[31] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[30] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[29] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[28] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[27] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[26] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[25] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[24] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[23] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[22] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[21] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[20] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[19] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[18] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[17] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[16] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[15] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[14] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[13] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[12] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[11] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[10] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[9] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[8] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[7] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[6] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[5] ;
  assign NOT_coreFix_memExe_bypassWire_0_whas__629_635__ETC___d1656 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_memExe_bypassWire_0_wget__630_BITS_70__ETC___d1632) &&
	     (!coreFix_aluExe_0_bypassWire_1$whas ||
	      !coreFix_memExe_bypassWire_1_wget__643_BITS_70__ETC___d1645) &&
	     (!coreFix_memExe_bypassWire_2$whas ||
	      !coreFix_memExe_bypassWire_2_wget__651_BITS_70__ETC___d1653) ;
  assign NOT_coreFix_memExe_bypassWire_0_whas__629_635__ETC___d1683 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_memExe_bypassWire_0_wget__630_BITS_70__ETC___d1670) &&
	     (!coreFix_aluExe_0_bypassWire_1$whas ||
	      !coreFix_memExe_bypassWire_1_wget__643_BITS_70__ETC___d1676) &&
	     (!coreFix_memExe_bypassWire_2$whas ||
	      !coreFix_memExe_bypassWire_2_wget__651_BITS_70__ETC___d1680) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2584 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2154 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2724 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	      3'd3 ||
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d2208) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] !=
	     2'd0 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2154 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3115 =
	     !coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1$Q_OUT ||
	     !coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3136 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$Q_OUT ||
	      (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$whas ?
		 !coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$wget[3] :
		 !coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl[3])) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3104 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_ETC___d3185 =
	     !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1$Q_OUT ||
	     !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_ETC___d3241 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$Q_OUT ||
	      IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3238) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3211 ||
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_linkAd_ETC___d2130 =
	     !coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$Q_OUT ||
	     !coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1$Q_OUT ||
	     !coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58] ||
	     !coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d2128 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2181 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState ==
	      3'd1 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	      3'd4 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2154 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2591 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2154 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	      3'd3 ||
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d2208) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2593 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState ==
	      3'd1 ||
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2591) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2615 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd2 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3) ||
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd3 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_linkAd_ETC___d2130 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2619 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2154 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd3 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_linkAd_ETC___d2130 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2622 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2618 ||
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2619) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2636 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2154 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_pi_ETC___d2635 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2639 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2618 ||
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2636) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2650 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd4 ||
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd3 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_linkAd_ETC___d2130 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2656 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2154 &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 ||
	       !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085) &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	      3'd4 ||
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2619) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2663 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2154 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2688 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2154 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd1 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2696 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2154 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd4 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2704 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2154 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd3 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_linkAd_ETC___d2130 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc[3] ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2713 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2154 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	      3'd3 ||
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d2208) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] ==
	      2'd0 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2154) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2735 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ||
	     IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2108 &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd4 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$RDY_pipelineResp_releaseEntry &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite &&
	      (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	       3'd1 ||
	       coreFix_memExe_stb$RDY_deq)) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_rqFrom_ETC___d1195 =
	     !coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_0$Q_OUT ||
	     !coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_1$Q_OUT ||
	     !coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_2$Q_OUT ||
	     !coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_ETC___d3356 =
	     !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1$Q_OUT ||
	     !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_ETC___d3413 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2$Q_OUT ||
	      (CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP ?
		 !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_lat_0$wget[72] :
		 !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl[72])) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3382 ||
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_ETC___d3452 =
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1$Q_OUT ||
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_ETC___d3509 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2$Q_OUT ||
	      IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3505) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3478 ||
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty) ;
  assign NOT_coreFix_memExe_dMem_perfReqQ_clearReq_dumm_ETC___d1941 =
	     !coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1$Q_OUT ||
	     !coreFix_memExe_dMem_perfReqQ_clearReq_rl ;
  assign NOT_coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_ETC___d1985 =
	     (!coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2$Q_OUT ||
	      !coreFix_memExe_dMem_perfReqQ_enqReq_rl[4]) &&
	     (coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2$Q_OUT &&
	      coreFix_memExe_dMem_perfReqQ_deqReq_rl ||
	      coreFix_memExe_dMem_perfReqQ_empty) ;
  assign NOT_coreFix_memExe_dTlb_procResp__774_BITS_162_ETC___d1813 =
	     !coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1784 &&
	     coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1785 &&
	     !coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1789 &&
	     !coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1792 ;
  assign NOT_coreFix_memExe_forwardQ_clearReq_dummy2_1__ETC___d3775 =
	     !coreFix_memExe_forwardQ_clearReq_dummy2_1$Q_OUT ||
	     !coreFix_memExe_forwardQ_clearReq_rl ;
  assign NOT_coreFix_memExe_forwardQ_enqReq_dummy2_2_re_ETC___d3830 =
	     (!coreFix_memExe_forwardQ_enqReq_dummy2_2$Q_OUT ||
	      (coreFix_memExe_forwardQ_enqReq_lat_0$whas ?
		 !coreFix_memExe_forwardQ_enqReq_lat_0$wget[67] :
		 !coreFix_memExe_forwardQ_enqReq_rl[67])) &&
	     (coreFix_memExe_forwardQ_deqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_forwardQ_deqReq_lat_1_whas___ETC___d3801 ||
	      coreFix_memExe_forwardQ_empty) ;
  assign NOT_coreFix_memExe_memRespLdQ_clearReq_dummy2__ETC___d3681 =
	     !coreFix_memExe_memRespLdQ_clearReq_dummy2_1$Q_OUT ||
	     !coreFix_memExe_memRespLdQ_clearReq_rl ;
  assign NOT_coreFix_memExe_memRespLdQ_enqReq_dummy2_2__ETC___d3736 =
	     (!coreFix_memExe_memRespLdQ_enqReq_dummy2_2$Q_OUT ||
	      (coreFix_memExe_memRespLdQ_enqReq_lat_0$whas ?
		 !coreFix_memExe_memRespLdQ_enqReq_lat_0$wget[67] :
		 !coreFix_memExe_memRespLdQ_enqReq_rl[67])) &&
	     (coreFix_memExe_memRespLdQ_deqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_memRespLdQ_deqReq_lat_1_whas_ETC___d3707 ||
	      coreFix_memExe_memRespLdQ_empty) ;
  assign NOT_coreFix_memExe_reqLdQ_full_dummy2_0_read___ETC___d1535 =
	     !coreFix_memExe_reqLdQ_full_dummy2_0$Q_OUT ||
	     !coreFix_memExe_reqLdQ_full_dummy2_1$Q_OUT ||
	     !coreFix_memExe_reqLdQ_full_dummy2_2$Q_OUT ||
	     !coreFix_memExe_reqLdQ_full_rl ;
  assign NOT_coreFix_memExe_reqLrScAmoQ_full_dummy2_0_r_ETC___d1086 =
	     !coreFix_memExe_reqLrScAmoQ_full_dummy2_0$Q_OUT ||
	     !coreFix_memExe_reqLrScAmoQ_full_dummy2_1$Q_OUT ||
	     !coreFix_memExe_reqLrScAmoQ_full_dummy2_2$Q_OUT ||
	     !coreFix_memExe_reqLrScAmoQ_full_rl ;
  assign NOT_coreFix_memExe_respLrScAmoQ_clearReq_dummy_ETC___d3605 =
	     !coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1$Q_OUT ||
	     !coreFix_memExe_respLrScAmoQ_clearReq_rl ;
  assign NOT_coreFix_memExe_respLrScAmoQ_enqReq_dummy2__ETC___d3647 =
	     (!coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2$Q_OUT ||
	      (coreFix_memExe_respLrScAmoQ_enqReq_lat_0$whas ?
		 !coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wget[64] :
		 !coreFix_memExe_respLrScAmoQ_enqReq_rl[64])) &&
	     (coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2$Q_OUT &&
	      (coreFix_memExe_respLrScAmoQ_deqReq_lat_0$whas ||
	       coreFix_memExe_respLrScAmoQ_deqReq_rl) ||
	      coreFix_memExe_respLrScAmoQ_empty) ;
  assign NOT_coreFix_memExe_respLrScAmoQ_full_010_011_A_ETC___d2140 =
	     !coreFix_memExe_respLrScAmoQ_full &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$RDY_pipelineResp_releaseEntry &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc[3] ||
	      !coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full) ;
  assign NOT_csrf_fs_reg_read__1604_EQ_0_3056_3057_OR_N_ETC___d13395 =
	     (csrf_fs_reg != 2'd0 ||
	      (!fetchStage$pipelines_0_first[95] ||
	       !fetchStage$pipelines_0_first[94]) &&
	      (!fetchStage$pipelines_0_first[88] ||
	       !fetchStage$pipelines_0_first[87]) &&
	      !fetchStage$pipelines_0_first[81] &&
	      (!fetchStage$pipelines_0_first[75] ||
	       !fetchStage$pipelines_0_first[74])) &&
	     (fetchStage$pipelines_0_first[199:195] != 5'd13 ||
	      NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d13389 &&
	      !csrf_prv_reg_read__2846_ULT_IF_fetchStage_pipe_ETC___d13099 &&
	      csr_addr__h655988 != 12'h8FF) ;
  assign NOT_csrf_fs_reg_read__1604_EQ_0_3056_3057_OR_N_ETC___d13492 =
	     (csrf_fs_reg != 2'd0 ||
	      (!fetchStage$pipelines_0_first[95] ||
	       !fetchStage$pipelines_0_first[94]) &&
	      (!fetchStage$pipelines_0_first[88] ||
	       !fetchStage$pipelines_0_first[87]) &&
	      !fetchStage$pipelines_0_first[81] &&
	      (!fetchStage$pipelines_0_first[75] ||
	       !fetchStage$pipelines_0_first[74])) &&
	     (fetchStage$pipelines_0_first[231:200] != 32'h10500073 ||
	      !csrf_tw_reg ||
	      csrf_prv_reg == 2'd3) ;
  assign NOT_csrf_fs_reg_read__1604_EQ_0_3056_3057_OR_N_ETC___d13797 =
	     (csrf_fs_reg != 2'd0 ||
	      (!fetchStage$pipelines_1_first[95] ||
	       !fetchStage$pipelines_1_first[94]) &&
	      (!fetchStage$pipelines_1_first[88] ||
	       !fetchStage$pipelines_1_first[87]) &&
	      !fetchStage$pipelines_1_first[81] &&
	      (!fetchStage$pipelines_1_first[75] ||
	       !fetchStage$pipelines_1_first[74])) &&
	     (fetchStage$pipelines_1_first[231:200] != 32'h10500073 ||
	      !csrf_tw_reg ||
	      csrf_prv_reg == 2'd3) ;
  assign NOT_csrf_prv_reg_read__2846_ULE_1_4635_4677_OR_ETC___d14681 =
	     !csrf_prv_reg_read__2846_ULE_1___d14635 ||
	     (commitStage_commitTrap[36] ?
		!_0b0_CONCAT_csrf_mideleg_11_reg_read__1711_1712_ETC___d14637 :
		!_0b0_CONCAT_csrf_medeleg_15_reg_read__1703_1704_ETC___d14655) ;
  assign NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d13601 =
	     !fetchStage$pipelines_0_canDeq ||
	     !regRenamingTable$rename_0_canRename ||
	     fetchStage_pipelines_0_first__2816_BITS_199_TO_ETC___d13583 ||
	     IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13598 ||
	     fetchStage$pipelines_0_first[194:192] != 3'd1 ;
  assign NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d13842 =
	     (!fetchStage$pipelines_0_canDeq ||
	      fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	      !specTagManager$canClaim ||
	      NOT_regRenamingTable_rename_0_canRename__3475__ETC___d13833 ||
	      fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	      fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      !SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3510_co_ETC___d13544) &&
	     coreFix_aluExe_1_rsAlu$canEnq &&
	     !coreFix_aluExe_0_rsAlu_approximateCount__3515__ETC___d13517 ;
  assign NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d13886 =
	     (!fetchStage$pipelines_0_canDeq ||
	      fetchStage$RDY_pipelines_0_first) &&
	     (regRenamingTable_rename_0_canRename__3475_AND__ETC___d13564 &&
	      (fetchStage$pipelines_0_first[194:192] == 3'd3 ||
	       fetchStage$pipelines_0_first[194:192] == 3'd4) ||
	      !coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq ||
	      NOT_regRenamingTable_rename_1_canRename__3604__ETC___d13873) ;
  assign NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d13941 =
	     !fetchStage$pipelines_0_canDeq ||
	     !regRenamingTable$rename_0_canRename ||
	     fetchStage_pipelines_0_first__2816_BITS_199_TO_ETC___d13583 ||
	     fetchStage$pipelines_0_first[194:192] != 3'd3 &&
	     fetchStage$pipelines_0_first[194:192] != 3'd4 ;
  assign NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d13960 =
	     (!fetchStage$pipelines_0_canDeq ||
	      NOT_regRenamingTable_rename_0_canRename__3475__ETC___d13909 ||
	      fetchStage$pipelines_0_first[194:192] != 3'd2 ||
	      IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13593) &&
	     coreFix_memExe_rsMem$canEnq &&
	     CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q230 ;
  assign NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14111 =
	     (!fetchStage$pipelines_0_canDeq ||
	      NOT_specTagManager_canClaim__3473_3567_OR_NOT__ETC___d14082) &&
	     CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q234 &&
	     (fetchStage$pipelines_1_first[199:195] == 5'd14 ||
	      coreFix_memExe_rsMem$RDY_enq) ;
  assign NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14167 =
	     (!fetchStage$pipelines_0_canDeq ||
	      fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d14030 &&
	      IF_fetchStage_RDY_pipelines_0_first__2813_AND__ETC___d13507) &&
	     fetchStage$RDY_pipelines_0_first &&
	     fetchStage_pipelines_0_canDeq__2814_AND_fetchS_ETC___d14165 ;
  assign NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14265 =
	     (!fetchStage$pipelines_0_canDeq ||
	      fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	      !specTagManager$canClaim ||
	      NOT_regRenamingTable_rename_0_canRename__3475__ETC___d14260 ||
	      fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	      fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      !SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3510_co_ETC___d13544) &&
	     coreFix_aluExe_1_rsAlu$canEnq &&
	     !coreFix_aluExe_0_rsAlu_approximateCount__3515__ETC___d13517 ;
  assign NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14270 =
	     (!fetchStage$pipelines_0_canDeq ||
	      NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d14174 &&
	      IF_IF_fetchStage_pipelines_0_first__2816_BITS__ETC___d13550) &&
	     fetchStage$pipelines_1_canDeq ;
  assign NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14272 =
	     !fetchStage$pipelines_0_canDeq ||
	     !regRenamingTable$rename_0_canRename ||
	     renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_f_ETC___d13994 ||
	     IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13598 ||
	     fetchStage$pipelines_0_first[194:192] != 3'd1 ;
  assign NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14283 =
	     NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14270 &&
	     NOT_fetchStage_pipelines_1_first__2825_BITS_19_ETC___d14280 &&
	     (fetchStage$pipelines_1_first[194:192] == 3'd0 ||
	      fetchStage$pipelines_1_first[194:192] == 3'd1) &&
	     SEL_ARR_NOT_fetchStage_pipelines_0_canDeq__281_ETC___d14077 ;
  assign NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14327 =
	     !fetchStage$pipelines_0_canDeq ||
	     !regRenamingTable$rename_0_canRename ||
	     renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_f_ETC___d13994 ||
	     fetchStage$pipelines_0_first[194:192] != 3'd2 ||
	     IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13593 ;
  assign NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14328 =
	     NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14327 &&
	     coreFix_memExe_rsMem$canEnq &&
	     CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q230 ;
  assign NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14358 =
	     NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14272 &&
	     specTagManager$canClaim &&
	     regRenamingTable_rename_1_canRename__3604_AND__ETC___d14279 &&
	     IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d13976 &&
	     fetchStage$pipelines_1_first[194:192] == 3'd1 ;
  assign NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d13389 =
	     (fetchStage$pipelines_0_first[194:192] != 3'd0 ||
	      fetchStage$pipelines_0_first[178:174] != 5'd15) &&
	     rs1__h655989 == 5'd0 &&
	     imm__h655990 == 32'd0 ||
	     csr_addr__h655988[11:10] != 2'b11 ;
  assign NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d13551 =
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$canClaim) &&
	     regRenamingTable_rename_0_canRename__3475_AND__ETC___d13501 &&
	     IF_IF_fetchStage_pipelines_0_first__2816_BITS__ETC___d13550 ;
  assign NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d13818 =
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$canClaim) &&
	     regRenamingTable_rename_0_canRename__3475_AND__ETC___d13501 &&
	     fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d13817 ;
  assign NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d13824 =
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$canClaim) &&
	     regRenamingTable_rename_0_canRename__3475_AND__ETC___d13501 &&
	     (fetchStage$pipelines_0_first[194:192] == 3'd0 ||
	      fetchStage$pipelines_0_first[194:192] == 3'd1) &&
	     SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3510_co_ETC___d13544 &&
	     (!coreFix_aluExe_0_rsAlu$canEnq ||
	      !coreFix_aluExe_0_rsAlu_approximateCount__3515__ETC___d13517) ;
  assign NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d13947 =
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$canClaim) &&
	     regRenamingTable_rename_0_canRename__3475_AND__ETC___d13564 &&
	     (IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13541 ?
		!csrf_rg_dcsr[2] &&
		IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13944 :
		IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13944) ;
  assign NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d13966 =
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$canClaim) &&
	     regRenamingTable_rename_0_canRename__3475_AND__ETC___d13564 &&
	     (IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13541 ?
		!csrf_rg_dcsr[2] &&
		IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13963 :
		IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13963) ;
  assign NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d13987 =
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$canClaim) &&
	     regRenamingTable_rename_0_canRename__3475_AND__ETC___d13501 &&
	     IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13541 ;
  assign NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d14174 =
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$canClaim) &&
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d13067[4] &&
	     rob$enqPort_0_canEnq ;
  assign NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d14243 =
	     { fetchStage$pipelines_0_first[194:192] != 3'd2 ||
	       !coreFix_memExe_rsMem$canEnq ||
	       IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13593 ||
	       IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d14199,
	       (fetchStage$pipelines_0_first[194:192] == 3'd2 &&
		coreFix_memExe_rsMem$canEnq &&
		IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13536 &&
		IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d14202) ?
		 IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d14205 :
		 { 1'h0,
		   IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d14208 },
	       7'd32,
	       specTagManager$currentSpecBits } ;
  assign NOT_fetchStage_pipelines_0_first__2816_BIT_68__ETC___d13562 =
	     !fetchStage$pipelines_0_first[68] &&
	     !checkForException___d13067[4] &&
	     NOT_csrf_fs_reg_read__1604_EQ_0_3056_3057_OR_N_ETC___d13492 &&
	     rob$enqPort_0_canEnq &&
	     epochManager$checkEpoch_0_check ;
  assign NOT_fetchStage_pipelines_1_canDeq__2822_2823_O_ETC___d12831 =
	     !fetchStage$pipelines_1_canDeq ||
	     fetchStage$RDY_pipelines_1_first &&
	     (epochManager$checkEpoch_1_check ||
	      fetchStage$RDY_pipelines_1_deq) ;
  assign NOT_fetchStage_pipelines_1_first__2825_BITS_19_ETC___d13811 =
	     (fetchStage$pipelines_1_first[194:192] != 3'd1 ||
	      NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d13601 &&
	      specTagManager$canClaim) &&
	     regRenamingTable_rename_1_canRename__3604_AND__ETC___d13810 ;
  assign NOT_fetchStage_pipelines_1_first__2825_BITS_19_ETC___d13928 =
	     (fetchStage$pipelines_1_first[194:192] != 3'd1 ||
	      (!fetchStage$pipelines_0_canDeq ||
	       NOT_regRenamingTable_rename_0_canRename__3475__ETC___d13909 ||
	       IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13922 ||
	       fetchStage$pipelines_0_first[194:192] != 3'd1) &&
	      specTagManager$canClaim) &&
	     regRenamingTable_rename_1_canRename__3604_AND__ETC___d13810 ;
  assign NOT_fetchStage_pipelines_1_first__2825_BITS_19_ETC___d14280 =
	     (fetchStage$pipelines_1_first[194:192] != 3'd1 ||
	      NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14272 &&
	      specTagManager$canClaim) &&
	     regRenamingTable_rename_1_canRename__3604_AND__ETC___d14279 ;
  assign NOT_fetchStage_pipelines_1_first__2825_BIT_68__ETC___d14277 =
	     !fetchStage$pipelines_1_first[68] &&
	     !checkForException___d13772[4] &&
	     NOT_csrf_fs_reg_read__1604_EQ_0_3056_3057_OR_N_ETC___d13797 &&
	     rob$enqPort_1_canEnq &&
	     epochManager$checkEpoch_1_check ;
  assign NOT_mmio_cRqQ_clearReq_dummy2_1_read__26_27_OR_ETC___d431 =
	     !mmio_cRqQ_clearReq_dummy2_1$Q_OUT || !mmio_cRqQ_clearReq_rl ;
  assign NOT_mmio_cRqQ_enqReq_dummy2_2_read__32_47_OR_I_ETC___d452 =
	     (!mmio_cRqQ_enqReq_dummy2_2$Q_OUT ||
	      (mmio_cRqQ_enqReq_lat_0$whas ?
		 !mmio_cRqQ_enqReq_lat_0$wget[142] :
		 !mmio_cRqQ_enqReq_rl[142])) &&
	     (mmio_cRqQ_deqReq_dummy2_2$Q_OUT &&
	      (EN_mmioToPlatform_cRq_deq || mmio_cRqQ_deqReq_rl) ||
	      mmio_cRqQ_empty) ;
  assign NOT_mmio_cRsQ_clearReq_dummy2_1_read__72_73_OR_ETC___d877 =
	     !mmio_cRsQ_clearReq_dummy2_1$Q_OUT || !mmio_cRsQ_clearReq_rl ;
  assign NOT_mmio_cRsQ_enqReq_dummy2_2_read__78_93_OR_I_ETC___d898 =
	     (!mmio_cRsQ_enqReq_dummy2_2$Q_OUT ||
	      (CAN_FIRE_RL_mmio_handlePRq ?
		 !mmio_cRsQ_enqReq_lat_0$wget[1] :
		 !mmio_cRsQ_enqReq_rl[1])) &&
	     (mmio_cRsQ_deqReq_dummy2_2$Q_OUT &&
	      (EN_mmioToPlatform_cRs_deq || mmio_cRsQ_deqReq_rl) ||
	      mmio_cRsQ_empty) ;
  assign NOT_mmio_dataPendQ_empty_23_152_AND_rob_RDY_se_ETC___d1153 =
	     !mmio_dataPendQ_empty && rob$RDY_setExecuted_deqLSQ &&
	     coreFix_memExe_lsq$RDY_deqSt &&
	     coreFix_memExe_lsq$RDY_firstSt ;
  assign NOT_mmio_dataPendQ_empty_23_152_AND_rob_RDY_se_ETC___d1452 =
	     !mmio_dataPendQ_empty && rob$RDY_setExecuted_deqLSQ &&
	     coreFix_memExe_lsq$RDY_deqLd &&
	     coreFix_memExe_lsq$RDY_firstLd ;
  assign NOT_mmio_dataPendQ_enqReq_dummy2_2_read__00_15_ETC___d325 =
	     (!mmio_dataPendQ_enqReq_dummy2_2$Q_OUT ||
	      !mmio_dataPendQ_enqReq_lat_0$whas &&
	      !mmio_dataPendQ_enqReq_rl) &&
	     (mmio_dataPendQ_deqReq_dummy2_2$Q_OUT &&
	      (mmio_dataRespQ_deqReq_lat_0$whas ||
	       mmio_dataPendQ_deqReq_rl) ||
	      mmio_dataPendQ_empty) ;
  assign NOT_mmio_dataReqQ_clearReq_dummy2_1_read__35_3_ETC___d140 =
	     !mmio_dataReqQ_clearReq_dummy2_1$Q_OUT ||
	     !mmio_dataReqQ_clearReq_rl ;
  assign NOT_mmio_dataReqQ_enqReq_dummy2_2_read__41_56__ETC___d161 =
	     (!mmio_dataReqQ_enqReq_dummy2_2$Q_OUT ||
	      (mmio_dataReqQ_enqReq_lat_0$whas ?
		 !mmio_dataReqQ_enqReq_lat_0$wget[142] :
		 !mmio_dataReqQ_enqReq_rl[142])) &&
	     (mmio_dataReqQ_deqReq_dummy2_2$Q_OUT &&
	      (CAN_FIRE_RL_mmio_sendDataReq || mmio_dataReqQ_deqReq_rl) ||
	      mmio_dataReqQ_empty) ;
  assign NOT_mmio_dataRespQ_clearReq_dummy2_1_read__36__ETC___d241 =
	     !mmio_dataRespQ_clearReq_dummy2_1$Q_OUT ||
	     !mmio_dataRespQ_clearReq_rl ;
  assign NOT_mmio_dataRespQ_enqReq_dummy2_2_read__42_57_ETC___d262 =
	     (!mmio_dataRespQ_enqReq_dummy2_2$Q_OUT ||
	      (CAN_FIRE_RL_mmio_sendDataResp ?
		 !mmio_dataRespQ_enqReq_lat_0$wget[65] :
		 !mmio_dataRespQ_enqReq_rl[65])) &&
	     (mmio_dataRespQ_deqReq_dummy2_2$Q_OUT &&
	      (mmio_dataRespQ_deqReq_lat_0$whas ||
	       mmio_dataRespQ_deqReq_rl) ||
	      mmio_dataRespQ_empty) ;
  assign NOT_mmio_pRqQ_clearReq_dummy2_1_read__83_84_OR_ETC___d788 =
	     !mmio_pRqQ_clearReq_dummy2_1$Q_OUT || !mmio_pRqQ_clearReq_rl ;
  assign NOT_mmio_pRqQ_enqReq_dummy2_2_read__89_04_OR_I_ETC___d809 =
	     (!mmio_pRqQ_enqReq_dummy2_2$Q_OUT ||
	      (EN_mmioToPlatform_pRq_enq ?
		 !mmio_pRqQ_enqReq_lat_0$wget[39] :
		 !mmio_pRqQ_enqReq_rl[39])) &&
	     (mmio_pRqQ_deqReq_dummy2_2$Q_OUT &&
	      (CAN_FIRE_RL_mmio_handlePRq || mmio_pRqQ_deqReq_rl) ||
	      mmio_pRqQ_empty) ;
  assign NOT_mmio_pRsQ_clearReq_dummy2_1_read__34_35_OR_ETC___d639 =
	     !mmio_pRsQ_clearReq_dummy2_1$Q_OUT || !mmio_pRsQ_clearReq_rl ;
  assign NOT_mmio_pRsQ_enqReq_dummy2_2_read__40_55_OR_I_ETC___d660 =
	     (!mmio_pRsQ_enqReq_dummy2_2$Q_OUT ||
	      (EN_mmioToPlatform_pRs_enq ?
		 !mmio_pRsQ_enqReq_lat_0$wget[69] :
		 !mmio_pRsQ_enqReq_rl[69])) &&
	     (mmio_pRsQ_deqReq_dummy2_2$Q_OUT &&
	      (mmio_pRsQ_deqReq_lat_0$whas || mmio_pRsQ_deqReq_rl) ||
	      mmio_pRsQ_empty) ;
  assign NOT_regRenamingTable_rename_0_canRename__3475__ETC___d13833 =
	     !regRenamingTable$rename_0_canRename ||
	     fetchStage$pipelines_0_first[199:195] == 5'd0 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd21 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd17 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd18 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd13 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd16 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd15 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd19 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd20 ||
	     renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_f_ETC___d13831 ;
  assign NOT_regRenamingTable_rename_0_canRename__3475__ETC___d13909 =
	     !regRenamingTable$rename_0_canRename ||
	     fetchStage$pipelines_0_first[199:195] == 5'd0 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd21 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd17 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd18 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd13 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd16 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd15 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd19 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd20 ||
	     fetchStage_pipelines_0_first__2816_BIT_68_2845_ETC___d13907 ;
  assign NOT_regRenamingTable_rename_0_canRename__3475__ETC___d14260 =
	     !regRenamingTable$rename_0_canRename ||
	     renameStage_rg_m_halt_req[4] ||
	     fetchStage$pipelines_0_first[68] ||
	     checkForException___d13067[4] ||
	     !rob$enqPort_0_canEnq ;
  assign NOT_regRenamingTable_rename_1_canRename__3604__ETC___d13873 =
	     !regRenamingTable$rename_1_canRename ||
	     fetchStage$pipelines_1_first[199:195] == 5'd0 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd21 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd17 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd18 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd13 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd16 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd15 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd19 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd20 ||
	     renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_f_ETC___d13871 ;
  assign NOT_renameStage_rg_m_halt_req_2843_BIT_4_2844__ETC___d13161 =
	     !renameStage_rg_m_halt_req[4] &&
	     (fetchStage$pipelines_0_first[68] ||
	      !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[0] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[1] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[2] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[3] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[4] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[5] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[6] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[7] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[8] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[9] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[10] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[11] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[12] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[13] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[14] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[15]) ;
  assign NOT_renameStage_rg_m_halt_req_2843_BIT_4_2844__ETC___d13499 =
	     !renameStage_rg_m_halt_req[4] &&
	     !fetchStage$pipelines_0_first[68] &&
	     NOT_IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_284_ETC___d13494 &&
	     rob$enqPort_0_canEnq &&
	     epochManager$checkEpoch_0_check ;
  assign NOT_renameStage_rg_m_halt_req_2843_BIT_4_2844__ETC___d13951 =
	     !renameStage_rg_m_halt_req[4] &&
	     !fetchStage$pipelines_1_first[68] &&
	     NOT_IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_284_ETC___d13799 &&
	     rob$enqPort_1_canEnq &&
	     epochManager$checkEpoch_1_check &&
	     (!fetchStage$pipelines_0_canDeq ||
	      NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d13947) ;
  assign NOT_renameStage_rg_m_halt_req_2843_BIT_4_2844__ETC___d13970 =
	     !renameStage_rg_m_halt_req[4] &&
	     !fetchStage$pipelines_1_first[68] &&
	     NOT_IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_284_ETC___d13799 &&
	     rob$enqPort_1_canEnq &&
	     epochManager$checkEpoch_1_check &&
	     (!fetchStage$pipelines_0_canDeq ||
	      NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d13966) ;
  assign NOT_rob_deqPort_0_canDeq__5016_5017_OR_regRena_ETC___d15055 =
	     (!rob$deqPort_0_canDeq ||
	      regRenamingTable$RDY_commit_0_commit &&
	      rob$RDY_deqPort_0_deq) &&
	     (!rob$deqPort_1_canDeq ||
	      rob$RDY_deqPort_1_deq_data &&
	      NOT_rob_deqPort_1_deq_data__5023_BIT_15_5024_5_ETC___d15052) ;
  assign NOT_rob_deqPort_0_canDeq__5016_5017_OR_rob_deq_ETC___d15203 =
	     (!rob$deqPort_0_canDeq ||
	      rob$deqPort_0_deq_data[15] && !rob$deqPort_0_deq_data[10] &&
	      !rob$deqPort_0_deq_data[157] &&
	      rob$deqPort_0_deq_data[247:243] != 5'd0 &&
	      rob$deqPort_0_deq_data[247:243] != 5'd21 &&
	      rob$deqPort_0_deq_data[247:243] != 5'd17 &&
	      rob$deqPort_0_deq_data[247:243] != 5'd18 &&
	      rob$deqPort_0_deq_data[247:243] != 5'd13 &&
	      rob$deqPort_0_deq_data[247:243] != 5'd16 &&
	      rob$deqPort_0_deq_data[247:243] != 5'd15 &&
	      rob$deqPort_0_deq_data[247:243] != 5'd19 &&
	      rob$deqPort_0_deq_data[247:243] != 5'd20) &&
	     rob$deqPort_1_canDeq ;
  assign NOT_rob_deqPort_0_deq_data__4399_BITS_247_TO_2_ETC___d14804 =
	     rob$deqPort_0_deq_data[247:243] != 5'd13 ||
	     (IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 !=
	      6'd7 ||
	      csrf_stats_module_writeQ$FULL_N) &&
	     (IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 !=
	      6'd6 ||
	      csrf_terminate_module_terminateQ$FULL_N) ;
  assign NOT_rob_deqPort_1_deq_data__5023_BIT_15_5024_5_ETC___d15052 =
	     !rob$deqPort_1_deq_data[15] || rob$deqPort_1_deq_data[10] ||
	     rob$deqPort_1_deq_data[157] ||
	     rob$deqPort_1_deq_data[247:243] == 5'd0 ||
	     rob$deqPort_1_deq_data[247:243] == 5'd21 ||
	     rob$deqPort_1_deq_data[247:243] == 5'd17 ||
	     rob$deqPort_1_deq_data[247:243] == 5'd18 ||
	     rob$deqPort_1_deq_data[247:243] == 5'd13 ||
	     rob$deqPort_1_deq_data[247:243] == 5'd16 ||
	     rob$deqPort_1_deq_data[247:243] == 5'd15 ||
	     rob$deqPort_1_deq_data[247:243] == 5'd19 ||
	     rob$deqPort_1_deq_data[247:243] == 5'd20 ||
	     regRenamingTable$RDY_commit_1_commit && rob$RDY_deqPort_1_deq ;
  assign NOT_specTagManager_canClaim__3473_3567_OR_NOT__ETC___d14082 =
	     !specTagManager$canClaim ||
	     !regRenamingTable$rename_0_canRename ||
	     fetchStage_pipelines_0_first__2816_BITS_199_TO_ETC___d13583 ||
	     IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14021 ||
	     fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	     specTagManager$RDY_nextSpecTag ;
  assign NOT_specTagManager_canClaim__3473_3567_OR_NOT__ETC___d14151 =
	     !specTagManager$canClaim ||
	     !regRenamingTable$rename_0_canRename ||
	     renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_f_ETC___d13994 ||
	     IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14021 ||
	     fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	     specTagManager$RDY_nextSpecTag ;
  assign SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2978 =
	     { CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q14,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q15,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q16,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q17 } ;
  assign SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2987 =
	     { SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2978,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q18,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q19 } ;
  assign SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2996 =
	     { SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2987,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q244,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q245 } ;
  assign SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d3003 =
	     { CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q251,
	       !CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q252,
	       SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2996,
	       x__h292275 } ;
  assign SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rq_ETC___d15646 =
	     { CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q253,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q254,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q255 } ;
  assign SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d15602 =
	     { CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q237,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q238,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q239,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q240 } ;
  assign SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d15611 =
	     { SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d15602,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q241,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q242 } ;
  assign SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d15620 =
	     { SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d15611,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q246,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q247 } ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10189 =
	     { {4{f2_exp21791_MINUS_127__q168[7]}},
	       f2_exp21791_MINUS_127__q168 } ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10190 =
	     (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10189 ^
	      12'h800) <=
	     12'd3071 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10191 =
	     (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10189 ^
	      12'h800) <
	     12'd1026 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8704 =
	     { {4{f1_exp82797_MINUS_127__q128[7]}},
	       f1_exp82797_MINUS_127__q128 } ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8705 =
	     (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8704 ^
	      12'h800) <=
	     12'd3071 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8706 =
	     (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8704 ^
	      12'h800) <
	     12'd1026 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9419 =
	     { {4{f3_exp61095_MINUS_127__q145[7]}},
	       f3_exp61095_MINUS_127__q145 } ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9420 =
	     (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9419 ^
	      12'h800) <=
	     12'd3071 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9421 =
	     (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9419 ^
	      12'h800) <
	     12'd1026 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q129 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8704 +
	     12'd1023 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q132 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q129[10:0] -
	     11'd1023 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q146 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9419 +
	     12'd1023 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q149 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q146[10:0] -
	     11'd1023 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q169 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10189 +
	     12'd1023 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q172 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q169[10:0] -
	     11'd1023 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6001 =
	     { coreFix_fpuMulDivExe_0_fpuExec_double_divresp_ETC__q63[10],
	       coreFix_fpuMulDivExe_0_fpuExec_double_divresp_ETC__q63 } ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6002 =
	     (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6001 ^
	      12'h800) <=
	     12'd2175 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6003 =
	     (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6001 ^
	      12'h800) <
	     12'd1922 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q64 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6001 +
	     12'd127 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q69 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q64[7:0] -
	     8'd127 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4609 =
	     { coreFix_fpuMulDivExe_0_fpuExec_double_fmaresp_ETC__q28[10],
	       coreFix_fpuMulDivExe_0_fpuExec_double_fmaresp_ETC__q28 } ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4610 =
	     (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4609 ^
	      12'h800) <=
	     12'd2175 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4611 =
	     (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4609 ^
	      12'h800) <
	     12'd1922 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q29 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4609 +
	     12'd127 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q34 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q29[7:0] -
	     8'd127 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7393 =
	     { coreFix_fpuMulDivExe_0_fpuExec_double_sqrtres_ETC__q98[10],
	       coreFix_fpuMulDivExe_0_fpuExec_double_sqrtres_ETC__q98 } ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7394 =
	     (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7393 ^
	      12'h800) <=
	     12'd2175 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7395 =
	     (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7393 ^
	      12'h800) <
	     12'd1922 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q104 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q99[7:0] -
	     8'd127 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q99 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7393 +
	     12'd127 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d4307 =
	     ({ 3'd0,
		IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d4305 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d5227 =
	     { 3'd0,
	       _theResult___fst_exp__h354853 == 8'd0 &&
	       (sfdin__h354847[56:34] == 23'd0 || guard__h346752 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h355450 == 8'd255 &&
	       _theResult___fst_sfd__h355451 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h354853 != 8'd255 &&
	       guard__h346752 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d5699 =
	     ({ 3'd0,
		IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d5697 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d6619 =
	     { 3'd0,
	       _theResult___fst_exp__h400550 == 8'd0 &&
	       (sfdin__h400544[56:34] == 23'd0 || guard__h392451 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h401147 == 8'd255 &&
	       _theResult___fst_sfd__h401148 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h400550 != 8'd255 &&
	       guard__h392451 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d7091 =
	     ({ 3'd0,
		IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d7089 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d8011 =
	     { 3'd0,
	       _theResult___fst_exp__h446245 == 8'd0 &&
	       (sfdin__h446239[56:34] == 23'd0 || guard__h438146 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h446842 == 8'd255 &&
	       _theResult___fst_sfd__h446843 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h446245 != 8'd255 &&
	       guard__h438146 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10440 =
	     ({ 6'd0,
		IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d10438 } ^
	      12'h800) <=
	     12'd2048 ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10816 =
	     { 3'd0,
	       _theResult___fst_exp__h511762 == 11'd0 &&
	       (sfdin__h511756[56:5] == 52'd0 || guard__h503536 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h512594 == 11'd2047 &&
	       _theResult___fst_sfd__h512595 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h511762 != 11'd2047 &&
	       guard__h503536 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10857 =
	     { 3'd0,
	       _theResult___fst_exp__h550615 == 11'd0 &&
	       (sfdin__h550609[56:5] == 52'd0 || guard__h542389 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h551447 == 11'd2047 &&
	       _theResult___fst_sfd__h551448 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h550615 != 11'd2047 &&
	       guard__h542389 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10901 =
	     { 3'd0,
	       _theResult___fst_exp__h589919 == 11'd0 &&
	       (sfdin__h589913[56:5] == 52'd0 || guard__h581693 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h590751 == 11'd2047 &&
	       _theResult___fst_sfd__h590752 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h589919 != 11'd2047 &&
	       guard__h581693 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d8955 =
	     ({ 6'd0,
		IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d8953 } ^
	      12'h800) <=
	     12'd2048 ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d9670 =
	     ({ 6'd0,
		IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d9668 } ^
	      12'h800) <=
	     12'd2048 ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d4858 =
	     ({ 3'd0,
		IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d4856 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d5256 =
	     { 3'd0,
	       _theResult___fst_exp__h372619 == 8'd0 &&
	       (sfdin__h372613[56:34] == 23'd0 || guard__h364391 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h373216 == 8'd255 &&
	       _theResult___fst_sfd__h373217 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h372619 != 8'd255 &&
	       guard__h364391 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6250 =
	     ({ 3'd0,
		IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d6248 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6648 =
	     { 3'd0,
	       _theResult___fst_exp__h418316 == 8'd0 &&
	       (sfdin__h418310[56:34] == 23'd0 || guard__h410088 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h418913 == 8'd255 &&
	       _theResult___fst_sfd__h418914 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h418316 != 8'd255 &&
	       guard__h410088 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d7642 =
	     ({ 3'd0,
		IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d7640 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d8040 =
	     { 3'd0,
	       _theResult___fst_exp__h464011 == 8'd0 &&
	       (sfdin__h464005[56:34] == 23'd0 || guard__h455783 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h464608 == 8'd255 &&
	       _theResult___fst_sfd__h464609 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h464011 != 8'd255 &&
	       guard__h455783 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10143 =
	     ({ 6'd0,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10141 } ^
	      12'h800) <=
	     12'd2944 ;
  assign _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10490 =
	     ({ 6'd0,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10141 } ^
	      12'h800) <=
	     (IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10489 ^
	      12'h800) ;
  assign _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10799 =
	     { 3'd0,
	       _theResult___fst_exp__h502185 == 11'd0 &&
	       guard__h494224 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h502943 == 11'd2047 &&
	       _theResult___fst_sfd__h502944 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h502185 != 11'd2047 &&
	       guard__h494224 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10840 =
	     { 3'd0,
	       _theResult___fst_exp__h541038 == 11'd0 &&
	       guard__h533077 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h541796 == 11'd2047 &&
	       _theResult___fst_sfd__h541797 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h541038 != 11'd2047 &&
	       guard__h533077 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10884 =
	     { 3'd0,
	       _theResult___fst_exp__h580342 == 11'd0 &&
	       guard__h572381 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h581100 == 11'd2047 &&
	       _theResult___fst_sfd__h581101 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h580342 != 11'd2047 &&
	       guard__h572381 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d8643 =
	     ({ 6'd0,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8641 } ^
	      12'h800) <=
	     12'd2944 ;
  assign _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9005 =
	     ({ 6'd0,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8641 } ^
	      12'h800) <=
	     (IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9004 ^
	      12'h800) ;
  assign _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9373 =
	     ({ 6'd0,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9371 } ^
	      12'h800) <=
	     12'd2944 ;
  assign _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9720 =
	     ({ 6'd0,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9371 } ^
	      12'h800) <=
	     (IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9719 ^
	      12'h800) ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d4538 =
	     ({ 3'd0,
		IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4536 } ^
	      9'h100) <=
	     9'd384 ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d4931 =
	     ({ 3'd0,
		IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4536 } ^
	      9'h100) <=
	     (IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d4930 ^
	      9'h100) ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5239 =
	     { 3'd0,
	       _theResult___fst_exp__h363509 == 8'd0 &&
	       guard__h355461 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h364032 == 8'd255 &&
	       _theResult___fst_sfd__h364033 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h363509 != 8'd255 &&
	       guard__h355461 != 2'b0 } ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5930 =
	     ({ 3'd0,
		IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d5928 } ^
	      9'h100) <=
	     9'd384 ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6323 =
	     ({ 3'd0,
		IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d5928 } ^
	      9'h100) <=
	     (IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6322 ^
	      9'h100) ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6631 =
	     { 3'd0,
	       _theResult___fst_exp__h409206 == 8'd0 &&
	       guard__h401158 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h409729 == 8'd255 &&
	       _theResult___fst_sfd__h409730 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h409206 != 8'd255 &&
	       guard__h401158 != 2'b0 } ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d7322 =
	     ({ 3'd0,
		IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7320 } ^
	      9'h100) <=
	     9'd384 ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d7715 =
	     ({ 3'd0,
		IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7320 } ^
	      9'h100) <=
	     (IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7714 ^
	      9'h100) ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d8023 =
	     { 3'd0,
	       _theResult___fst_exp__h454901 == 8'd0 &&
	       guard__h446853 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h455424 == 8'd255 &&
	       _theResult___fst_sfd__h455425 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h454901 != 8'd255 &&
	       guard__h446853 != 2'b0 } ;
  assign _0_CONCAT_csrf_external_int_en_vec_3_read__1722_ETC___d12857 =
	     { 4'd0,
	       csrf_external_int_en_vec_3 & csrf_external_int_pend_vec_3,
	       1'd0,
	       csrf_external_int_en_vec_1 & csrf_external_int_pend_vec_1,
	       1'd0,
	       csrf_timer_int_en_vec_3 & csrf_timer_int_pend_vec_3,
	       1'd0,
	       csrf_timer_int_en_vec_1 & csrf_timer_int_pend_vec_1,
	       1'd0 } ;
  assign _0_OR_NOT_fetchStage_pipelines_0_first__2816_BI_ETC___d14002 =
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$RDY_nextSpecTag) &&
	     CASE_k69550_0_coreFix_aluExe_0_rsAluRDY_enq_1_ETC__q231 ;
  assign _0_OR_NOT_fetchStage_pipelines_1_first__2825_BI_ETC___d13901 =
	     (fetchStage$pipelines_1_first[194:192] != 3'd1 ||
	      !fetchStage$pipelines_0_canDeq ||
	      fetchStage$RDY_pipelines_0_first) &&
	     (fetchStage$RDY_pipelines_0_first &&
	      fetchStage$pipelines_1_first[194:192] == 3'd1 &&
	      regRenamingTable_rename_0_canRename__3475_AND__ETC___d13568 ||
	      NOT_regRenamingTable_rename_1_canRename__3604__ETC___d13873) ;
  assign _0_OR_NOT_fetchStage_pipelines_1_first__2825_BI_ETC___d14095 =
	     (fetchStage$pipelines_1_first[194:192] != 3'd1 ||
	      specTagManager$RDY_nextSpecTag) &&
	     CASE_fetchStage_pipelines_0_canDeq__2814_AND_N_ETC__q233 ;
  assign _0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d10196 =
	     sfd__h522153 >>
	     _3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d10192 ;
  assign _0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d8711 =
	     sfd__h483159 >>
	     _3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d8707 ;
  assign _0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d9426 =
	     sfd__h561457 >>
	     _3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d9422 ;
  assign _0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d4616 =
	     sfd__h339137 >>
	     (_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d4612[11] ?
		12'hAAA :
		_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d4612) ;
  assign _0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d6008 =
	     sfd__h384839 >>
	     (_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d6004[11] ?
		12'hAAA :
		_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d6004) ;
  assign _0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d7400 =
	     sfd__h430534 >>
	     (_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d7396[11] ?
		12'hAAA :
		_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d7396) ;
  assign _0b0_CONCAT_csrf_medeleg_15_reg_read__1703_1704_ETC___d14655 =
	     medeleg_csr__read__h611026[i__h703132] ;
  assign _0b0_CONCAT_csrf_mideleg_11_reg_read__1711_1712_ETC___d14637 =
	     mideleg_csr__read__h611121[i__h703292] ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4069 =
	     12'd3074 -
	     { 6'd0,
	       coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56] ?
		 6'd0 :
		 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[55] ?
		    6'd1 :
		    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[54] ?
		       6'd2 :
		       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[53] ?
			  6'd3 :
			  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[52] ?
			     6'd4 :
			     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[51] ?
				6'd5 :
				(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[50] ?
				   6'd6 :
				   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[49] ?
				      6'd7 :
				      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[48] ?
					 6'd8 :
					 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[47] ?
					    6'd9 :
					    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[46] ?
					       6'd10 :
					       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[45] ?
						  6'd11 :
						  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[44] ?
						     6'd12 :
						     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[43] ?
							6'd13 :
							(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[42] ?
							   6'd14 :
							   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[41] ?
							      6'd15 :
							      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[40] ?
								 6'd16 :
								 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[39] ?
								    6'd17 :
								    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[38] ?
								       6'd18 :
								       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[37] ?
									  6'd19 :
									  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[36] ?
									     6'd20 :
									     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[35] ?
										6'd21 :
										(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[34] ?
										   6'd22 :
										   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[33] ?
										      6'd23 :
										      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[32] ?
											 6'd24 :
											 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[31] ?
											    6'd25 :
											    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[30] ?
											       6'd26 :
											       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[29] ?
												  6'd27 :
												  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[28] ?
												     6'd28 :
												     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[27] ?
													6'd29 :
													(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[26] ?
													   6'd30 :
													   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[25] ?
													      6'd31 :
													      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[24] ?
														 6'd32 :
														 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[23] ?
														    6'd33 :
														    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[22] ?
														       6'd34 :
														       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[21] ?
															  6'd35 :
															  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[20] ?
															     6'd36 :
															     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[19] ?
																6'd37 :
																(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[18] ?
																   6'd38 :
																   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[17] ?
																      6'd39 :
																      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[16] ?
																	 6'd40 :
																	 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[15] ?
																	    6'd41 :
																	    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[14] ?
																	       6'd42 :
																	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[13] ?
																		  6'd43 :
																		  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[12] ?
																		     6'd44 :
																		     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[11] ?
																			6'd45 :
																			(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[10] ?
																			   6'd46 :
																			   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[9] ?
																			      6'd47 :
																			      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[8] ?
																				 6'd48 :
																				 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[7] ?
																				    6'd49 :
																				    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[6] ?
																				       6'd50 :
																				       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[5] ?
																					  6'd51 :
																					  6'd52))))))))))))))))))))))))))))))))))))))))))))))))))) } ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4070 =
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4069 ^
	      12'h800) <=
	     12'd2175 ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4071 =
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4069 ^
	      12'h800) <
	     12'd1922 ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5242 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4070 &&
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4071 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d5227[4] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5239[4]) ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5267 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4070 &&
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4071 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d5227[3] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5239[3]) ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5294 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4070 &&
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4071 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d5227[1] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5239[1]) ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5461 =
	     12'd3074 -
	     { 6'd0,
	       coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56] ?
		 6'd0 :
		 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[55] ?
		    6'd1 :
		    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[54] ?
		       6'd2 :
		       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[53] ?
			  6'd3 :
			  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[52] ?
			     6'd4 :
			     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[51] ?
				6'd5 :
				(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[50] ?
				   6'd6 :
				   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[49] ?
				      6'd7 :
				      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[48] ?
					 6'd8 :
					 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[47] ?
					    6'd9 :
					    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[46] ?
					       6'd10 :
					       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[45] ?
						  6'd11 :
						  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[44] ?
						     6'd12 :
						     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[43] ?
							6'd13 :
							(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[42] ?
							   6'd14 :
							   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[41] ?
							      6'd15 :
							      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[40] ?
								 6'd16 :
								 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[39] ?
								    6'd17 :
								    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[38] ?
								       6'd18 :
								       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[37] ?
									  6'd19 :
									  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[36] ?
									     6'd20 :
									     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[35] ?
										6'd21 :
										(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[34] ?
										   6'd22 :
										   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[33] ?
										      6'd23 :
										      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[32] ?
											 6'd24 :
											 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[31] ?
											    6'd25 :
											    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[30] ?
											       6'd26 :
											       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[29] ?
												  6'd27 :
												  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[28] ?
												     6'd28 :
												     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[27] ?
													6'd29 :
													(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[26] ?
													   6'd30 :
													   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[25] ?
													      6'd31 :
													      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[24] ?
														 6'd32 :
														 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[23] ?
														    6'd33 :
														    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[22] ?
														       6'd34 :
														       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[21] ?
															  6'd35 :
															  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[20] ?
															     6'd36 :
															     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[19] ?
																6'd37 :
																(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[18] ?
																   6'd38 :
																   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[17] ?
																      6'd39 :
																      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[16] ?
																	 6'd40 :
																	 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[15] ?
																	    6'd41 :
																	    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[14] ?
																	       6'd42 :
																	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[13] ?
																		  6'd43 :
																		  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[12] ?
																		     6'd44 :
																		     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[11] ?
																			6'd45 :
																			(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[10] ?
																			   6'd46 :
																			   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[9] ?
																			      6'd47 :
																			      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[8] ?
																				 6'd48 :
																				 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[7] ?
																				    6'd49 :
																				    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[6] ?
																				       6'd50 :
																				       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[5] ?
																					  6'd51 :
																					  6'd52))))))))))))))))))))))))))))))))))))))))))))))))))) } ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5462 =
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5461 ^
	      12'h800) <=
	     12'd2175 ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5463 =
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5461 ^
	      12'h800) <
	     12'd1922 ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6634 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5462 &&
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5463 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d6619[4] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6631[4]) ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6659 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5462 &&
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5463 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d6619[3] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6631[3]) ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6686 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5462 &&
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5463 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d6619[1] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6631[1]) ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6853 =
	     12'd3074 -
	     { 6'd0,
	       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56] ?
		 6'd0 :
		 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[55] ?
		    6'd1 :
		    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[54] ?
		       6'd2 :
		       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[53] ?
			  6'd3 :
			  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[52] ?
			     6'd4 :
			     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[51] ?
				6'd5 :
				(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[50] ?
				   6'd6 :
				   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[49] ?
				      6'd7 :
				      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[48] ?
					 6'd8 :
					 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[47] ?
					    6'd9 :
					    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[46] ?
					       6'd10 :
					       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[45] ?
						  6'd11 :
						  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[44] ?
						     6'd12 :
						     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[43] ?
							6'd13 :
							(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[42] ?
							   6'd14 :
							   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[41] ?
							      6'd15 :
							      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[40] ?
								 6'd16 :
								 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[39] ?
								    6'd17 :
								    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[38] ?
								       6'd18 :
								       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[37] ?
									  6'd19 :
									  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[36] ?
									     6'd20 :
									     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[35] ?
										6'd21 :
										(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[34] ?
										   6'd22 :
										   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[33] ?
										      6'd23 :
										      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[32] ?
											 6'd24 :
											 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[31] ?
											    6'd25 :
											    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[30] ?
											       6'd26 :
											       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[29] ?
												  6'd27 :
												  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[28] ?
												     6'd28 :
												     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[27] ?
													6'd29 :
													(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[26] ?
													   6'd30 :
													   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[25] ?
													      6'd31 :
													      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[24] ?
														 6'd32 :
														 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[23] ?
														    6'd33 :
														    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[22] ?
														       6'd34 :
														       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[21] ?
															  6'd35 :
															  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[20] ?
															     6'd36 :
															     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[19] ?
																6'd37 :
																(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[18] ?
																   6'd38 :
																   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[17] ?
																      6'd39 :
																      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[16] ?
																	 6'd40 :
																	 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[15] ?
																	    6'd41 :
																	    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[14] ?
																	       6'd42 :
																	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[13] ?
																		  6'd43 :
																		  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[12] ?
																		     6'd44 :
																		     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[11] ?
																			6'd45 :
																			(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[10] ?
																			   6'd46 :
																			   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[9] ?
																			      6'd47 :
																			      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[8] ?
																				 6'd48 :
																				 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[7] ?
																				    6'd49 :
																				    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[6] ?
																				       6'd50 :
																				       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[5] ?
																					  6'd51 :
																					  6'd52))))))))))))))))))))))))))))))))))))))))))))))))))) } ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6854 =
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6853 ^
	      12'h800) <=
	     12'd2175 ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6855 =
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6853 ^
	      12'h800) <
	     12'd1922 ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d8026 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6854 &&
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6855 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d8011[4] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d8023[4]) ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d8051 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6854 &&
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6855 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d8011[3] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d8023[3]) ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d8078 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6854 &&
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6855 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d8011[1] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d8023[1]) ;
  assign _3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d10192 =
	     12'd3074 -
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10189 ;
  assign _3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d8707 =
	     12'd3074 -
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8704 ;
  assign _3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d9422 =
	     12'd3074 -
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9419 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10067 =
	     12'd3970 -
	     { 7'd0,
	       f2_sfd__h521792[22] ?
		 5'd0 :
		 (f2_sfd__h521792[21] ?
		    5'd1 :
		    (f2_sfd__h521792[20] ?
		       5'd2 :
		       (f2_sfd__h521792[19] ?
			  5'd3 :
			  (f2_sfd__h521792[18] ?
			     5'd4 :
			     (f2_sfd__h521792[17] ?
				5'd5 :
				(f2_sfd__h521792[16] ?
				   5'd6 :
				   (f2_sfd__h521792[15] ?
				      5'd7 :
				      (f2_sfd__h521792[14] ?
					 5'd8 :
					 (f2_sfd__h521792[13] ?
					    5'd9 :
					    (f2_sfd__h521792[12] ?
					       5'd10 :
					       (f2_sfd__h521792[11] ?
						  5'd11 :
						  (f2_sfd__h521792[10] ?
						     5'd12 :
						     (f2_sfd__h521792[9] ?
							5'd13 :
							(f2_sfd__h521792[8] ?
							   5'd14 :
							   (f2_sfd__h521792[7] ?
							      5'd15 :
							      (f2_sfd__h521792[6] ?
								 5'd16 :
								 (f2_sfd__h521792[5] ?
								    5'd17 :
								    (f2_sfd__h521792[4] ?
								       5'd18 :
								       (f2_sfd__h521792[3] ?
									  5'd19 :
									  (f2_sfd__h521792[2] ?
									     5'd20 :
									     (f2_sfd__h521792[1] ?
										5'd21 :
										(f2_sfd__h521792[0] ?
										   5'd22 :
										   5'd23)))))))))))))))))))))) } ;
  assign _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10068 =
	     (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10067 ^
	      12'h800) <=
	     12'd3071 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10070 =
	     (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10067 ^
	      12'h800) <
	     12'd1026 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8567 =
	     12'd3970 -
	     { 7'd0,
	       f1_sfd__h482798[22] ?
		 5'd0 :
		 (f1_sfd__h482798[21] ?
		    5'd1 :
		    (f1_sfd__h482798[20] ?
		       5'd2 :
		       (f1_sfd__h482798[19] ?
			  5'd3 :
			  (f1_sfd__h482798[18] ?
			     5'd4 :
			     (f1_sfd__h482798[17] ?
				5'd5 :
				(f1_sfd__h482798[16] ?
				   5'd6 :
				   (f1_sfd__h482798[15] ?
				      5'd7 :
				      (f1_sfd__h482798[14] ?
					 5'd8 :
					 (f1_sfd__h482798[13] ?
					    5'd9 :
					    (f1_sfd__h482798[12] ?
					       5'd10 :
					       (f1_sfd__h482798[11] ?
						  5'd11 :
						  (f1_sfd__h482798[10] ?
						     5'd12 :
						     (f1_sfd__h482798[9] ?
							5'd13 :
							(f1_sfd__h482798[8] ?
							   5'd14 :
							   (f1_sfd__h482798[7] ?
							      5'd15 :
							      (f1_sfd__h482798[6] ?
								 5'd16 :
								 (f1_sfd__h482798[5] ?
								    5'd17 :
								    (f1_sfd__h482798[4] ?
								       5'd18 :
								       (f1_sfd__h482798[3] ?
									  5'd19 :
									  (f1_sfd__h482798[2] ?
									     5'd20 :
									     (f1_sfd__h482798[1] ?
										5'd21 :
										(f1_sfd__h482798[0] ?
										   5'd22 :
										   5'd23)))))))))))))))))))))) } ;
  assign _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8568 =
	     (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8567 ^
	      12'h800) <=
	     12'd3071 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8570 =
	     (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8567 ^
	      12'h800) <
	     12'd1026 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9297 =
	     12'd3970 -
	     { 7'd0,
	       f3_sfd__h561096[22] ?
		 5'd0 :
		 (f3_sfd__h561096[21] ?
		    5'd1 :
		    (f3_sfd__h561096[20] ?
		       5'd2 :
		       (f3_sfd__h561096[19] ?
			  5'd3 :
			  (f3_sfd__h561096[18] ?
			     5'd4 :
			     (f3_sfd__h561096[17] ?
				5'd5 :
				(f3_sfd__h561096[16] ?
				   5'd6 :
				   (f3_sfd__h561096[15] ?
				      5'd7 :
				      (f3_sfd__h561096[14] ?
					 5'd8 :
					 (f3_sfd__h561096[13] ?
					    5'd9 :
					    (f3_sfd__h561096[12] ?
					       5'd10 :
					       (f3_sfd__h561096[11] ?
						  5'd11 :
						  (f3_sfd__h561096[10] ?
						     5'd12 :
						     (f3_sfd__h561096[9] ?
							5'd13 :
							(f3_sfd__h561096[8] ?
							   5'd14 :
							   (f3_sfd__h561096[7] ?
							      5'd15 :
							      (f3_sfd__h561096[6] ?
								 5'd16 :
								 (f3_sfd__h561096[5] ?
								    5'd17 :
								    (f3_sfd__h561096[4] ?
								       5'd18 :
								       (f3_sfd__h561096[3] ?
									  5'd19 :
									  (f3_sfd__h561096[2] ?
									     5'd20 :
									     (f3_sfd__h561096[1] ?
										5'd21 :
										(f3_sfd__h561096[0] ?
										   5'd22 :
										   5'd23)))))))))))))))))))))) } ;
  assign _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9298 =
	     (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9297 ^
	      12'h800) <=
	     12'd3071 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9300 =
	     (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9297 ^
	      12'h800) <
	     12'd1026 ;
  assign _3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d4612 =
	     12'd3970 -
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4609 ;
  assign _3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d6004 =
	     12'd3970 -
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6001 ;
  assign _3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d7396 =
	     12'd3970 -
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7393 ;
  assign _dfoo12 =
	     fetchStage$pipelines_0_canDeq &&
	     regRenamingTable_rename_0_canRename__3475_AND__ETC___d14195 ||
	     NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14270 &&
	     regRenamingTable_rename_1_canRename__3604_AND__ETC___d14279 &&
	     fetchStage$pipelines_1_first[194:192] == 3'd2 &&
	     NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14328 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd14 ;
  assign _dfoo16 =
	     k__h669550 == 1'd1 &&
	     fetchStage_pipelines_0_canDeq__2814_AND_NOT_fe_ETC___d14177 ||
	     (fetchStage_pipelines_0_canDeq__2814_AND_NOT_fe_ETC___d14252 ||
	      NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14265) ==
	     1'd1 &&
	     NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14283 ;
  assign _dfoo18 =
	     k__h669550 == 1'd0 &&
	     fetchStage_pipelines_0_canDeq__2814_AND_NOT_fe_ETC___d14177 ||
	     (fetchStage_pipelines_0_canDeq__2814_AND_NOT_fe_ETC___d14252 ||
	      NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14265) ==
	     1'd0 &&
	     NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14283 ;
  assign _dfoo2 =
	     fetchStage$pipelines_0_canDeq &&
	     regRenamingTable_rename_0_canRename__3475_AND__ETC___d14223 ||
	     NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14270 &&
	     regRenamingTable_rename_1_canRename__3604_AND__ETC___d14279 &&
	     fetchStage$pipelines_1_first[194:192] == 3'd2 &&
	     NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14328 &&
	     fetchStage$pipelines_1_first[191:189] != 3'd0 &&
	     fetchStage$pipelines_1_first[191:189] != 3'd2 ;
  assign _dfoo20 =
	     commitStage_commitTrap_4406_BIT_36_4532_AND_co_ETC___d14597 ||
	     NOT_commitStage_commitTrap_4406_BIT_36_4532_45_ETC___d14634 ;
  assign _dfoo24 =
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd40 ||
	     rob$deqPort_0_deq_data[247:243] == 5'd19 ||
	     rob$deqPort_0_deq_data[247:243] == 5'd20 ;
  assign _dfoo26 =
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	     6'd18 ||
	     rob$deqPort_0_deq_data[247:243] == 5'd20 ;
  assign _dfoo32 =
	     rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	     (IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd8 ||
	      IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 ==
	      6'd18) ||
	     rob$deqPort_0_deq_data[247:243] == 5'd19 ;
  assign _dfoo7 =
	     fetchStage$pipelines_0_canDeq &&
	     regRenamingTable_rename_0_canRename__3475_AND__ETC___d14215 ||
	     NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14270 &&
	     regRenamingTable_rename_1_canRename__3604_AND__ETC___d14279 &&
	     fetchStage$pipelines_1_first[194:192] == 3'd2 &&
	     NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14328 &&
	     (fetchStage$pipelines_1_first[191:189] == 3'd0 ||
	      fetchStage$pipelines_1_first[191:189] == 3'd2) ;
  assign _dor1coreFix_aluExe_0_bypassWire_2$EN_wset =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  assign _dor1coreFix_aluExe_0_bypassWire_3$EN_wset =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;
  assign _dor1coreFix_aluExe_0_rsAlu$EN_setRegReady_3_put =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1coreFix_aluExe_1_bypassWire_2$EN_wset =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  assign _dor1coreFix_aluExe_1_bypassWire_3$EN_wset =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;
  assign _dor1coreFix_aluExe_1_rsAlu$EN_setRegReady_3_put =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1coreFix_fpuMulDivExe_0_bypassWire_2$EN_wset =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  assign _dor1coreFix_fpuMulDivExe_0_bypassWire_3$EN_wset =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;
  assign _dor1coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_3_put =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1coreFix_memExe_bypassWire_2$EN_wset =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  assign _dor1coreFix_memExe_bypassWire_3$EN_wset =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;
  assign _dor1coreFix_memExe_forwardQ_enqReq_dummy2_0$EN_write =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1coreFix_memExe_reqLdQ_data_0_dummy2_0$EN_write =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1coreFix_memExe_reqLdQ_empty_dummy2_0$EN_write =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1coreFix_memExe_reqLdQ_empty_lat_0$EN_wset =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1coreFix_memExe_reqLdQ_enqP_dummy2_0$EN_write =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1coreFix_memExe_reqLdQ_full_dummy2_0$EN_write =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1coreFix_memExe_reqLdQ_full_lat_0$EN_wset =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1coreFix_memExe_rsMem$EN_setRegReady_3_put =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1rf$EN_write_0_wr =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  assign _dor1rf$EN_write_1_wr =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;
  assign _dor1sbAggr$EN_setReady_3_put =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1sbCons$EN_setReady_0_put =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  assign _dor1sbCons$EN_setReady_1_put =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;
  assign _theResult_____2__h297178 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3104) ?
	       next_deqP___1__h297457 :
	       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP ;
  assign _theResult_____2__h305174 =
	     (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3211) ?
	       next_deqP___1__h305453 :
	       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP ;
  assign _theResult_____2__h311168 =
	     (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3382) ?
	       next_deqP___1__h311734 :
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP ;
  assign _theResult_____2__h319022 =
	     (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3478) ?
	       next_deqP___1__h319588 :
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP ;
  assign _theResult_____2__h329366 =
	     (coreFix_memExe_memRespLdQ_deqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_memRespLdQ_deqReq_lat_1_whas_ETC___d3707) ?
	       next_deqP___1__h329645 :
	       coreFix_memExe_memRespLdQ_deqP ;
  assign _theResult_____2__h332591 =
	     (coreFix_memExe_forwardQ_deqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_forwardQ_deqReq_lat_1_whas___ETC___d3801) ?
	       next_deqP___1__h332870 :
	       coreFix_memExe_forwardQ_deqP ;
  assign _theResult____h346742 =
	     (value__h347364 == 54'd0) ? sfd__h339137 : 57'd1 ;
  assign _theResult____h364381 =
	     ((_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d4612 ^
	       12'h800) <
	      12'd2105) ?
	       result__h364994 :
	       _theResult____h346742 ;
  assign _theResult____h392441 =
	     (value__h393061 == 54'd0) ? sfd__h384839 : 57'd1 ;
  assign _theResult____h410078 =
	     ((_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d6004 ^
	       12'h800) <
	      12'd2105) ?
	       result__h410691 :
	       _theResult____h392441 ;
  assign _theResult____h438136 =
	     (value__h438756 == 54'd0) ? sfd__h430534 : 57'd1 ;
  assign _theResult____h455773 =
	     ((_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d7396 ^
	       12'h800) <
	      12'd2105) ?
	       result__h456386 :
	       _theResult____h438136 ;
  assign _theResult____h503526 =
	     ((_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d8707 ^
	       12'h800) <
	      12'd2105) ?
	       result__h504139 :
	       ((value__h487742 == 25'd0) ? sfd__h483159 : 57'd1) ;
  assign _theResult____h542379 =
	     ((_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d10192 ^
	       12'h800) <
	      12'd2105) ?
	       result__h542992 :
	       ((value__h526595 == 25'd0) ? sfd__h522153 : 57'd1) ;
  assign _theResult____h581683 =
	     ((_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d9422 ^
	       12'h800) <
	      12'd2105) ?
	       result__h582296 :
	       ((value__h565899 == 25'd0) ? sfd__h561457 : 57'd1) ;
  assign _theResult____h651779 =
	     (csrf_prv_reg != 2'd3 || csrf_ie_vec_3) ?
	       enabled_ints___1__h652304 :
	       16'd0 ;
  assign _theResult___exp__h355369 =
	     sfd__h354945[24] ?
	       ((_theResult___fst_exp__h354853 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h381886) :
	       ((_theResult___fst_exp__h354853 == 8'd0 &&
		 sfd__h354945[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h354853) ;
  assign _theResult___exp__h363951 =
	     sfd__h363527[24] ?
	       ((_theResult___fst_exp__h363509 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h381910) :
	       ((_theResult___fst_exp__h363509 == 8'd0 &&
		 sfd__h363527[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h363509) ;
  assign _theResult___exp__h373135 =
	     sfd__h372711[24] ?
	       ((_theResult___fst_exp__h372619 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h381940) :
	       ((_theResult___fst_exp__h372619 == 8'd0 &&
		 sfd__h372711[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h372619) ;
  assign _theResult___exp__h381771 =
	     sfd__h381323[24] ?
	       ((_theResult___fst_exp__h381304 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h381964) :
	       ((_theResult___fst_exp__h381304 == 8'd0 &&
		 sfd__h381323[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h381304) ;
  assign _theResult___exp__h381873 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd2047) ?
	       8'd255 :
	       _theResult___fst_exp__h381864 ;
  assign _theResult___exp__h401066 =
	     sfd__h400642[24] ?
	       ((_theResult___fst_exp__h400550 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h427583) :
	       ((_theResult___fst_exp__h400550 == 8'd0 &&
		 sfd__h400642[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h400550) ;
  assign _theResult___exp__h409648 =
	     sfd__h409224[24] ?
	       ((_theResult___fst_exp__h409206 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h427607) :
	       ((_theResult___fst_exp__h409206 == 8'd0 &&
		 sfd__h409224[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h409206) ;
  assign _theResult___exp__h418832 =
	     sfd__h418408[24] ?
	       ((_theResult___fst_exp__h418316 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h427637) :
	       ((_theResult___fst_exp__h418316 == 8'd0 &&
		 sfd__h418408[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h418316) ;
  assign _theResult___exp__h427468 =
	     sfd__h427020[24] ?
	       ((_theResult___fst_exp__h427001 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h427661) :
	       ((_theResult___fst_exp__h427001 == 8'd0 &&
		 sfd__h427020[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h427001) ;
  assign _theResult___exp__h427570 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd2047) ?
	       8'd255 :
	       _theResult___fst_exp__h427561 ;
  assign _theResult___exp__h446761 =
	     sfd__h446337[24] ?
	       ((_theResult___fst_exp__h446245 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h473278) :
	       ((_theResult___fst_exp__h446245 == 8'd0 &&
		 sfd__h446337[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h446245) ;
  assign _theResult___exp__h455343 =
	     sfd__h454919[24] ?
	       ((_theResult___fst_exp__h454901 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h473302) :
	       ((_theResult___fst_exp__h454901 == 8'd0 &&
		 sfd__h454919[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h454901) ;
  assign _theResult___exp__h464527 =
	     sfd__h464103[24] ?
	       ((_theResult___fst_exp__h464011 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h473332) :
	       ((_theResult___fst_exp__h464011 == 8'd0 &&
		 sfd__h464103[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h464011) ;
  assign _theResult___exp__h473163 =
	     sfd__h472715[24] ?
	       ((_theResult___fst_exp__h472696 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h473356) :
	       ((_theResult___fst_exp__h472696 == 8'd0 &&
		 sfd__h472715[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h472696) ;
  assign _theResult___exp__h473265 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd2047) ?
	       8'd255 :
	       _theResult___fst_exp__h473256 ;
  assign _theResult___exp__h502840 =
	     sfd__h502203[53] ?
	       ((_theResult___fst_exp__h502185 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h521435) :
	       ((_theResult___fst_exp__h502185 == 11'd0 &&
		 sfd__h502203[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h502185) ;
  assign _theResult___exp__h512491 =
	     sfd__h511854[53] ?
	       ((_theResult___fst_exp__h511762 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h521470) :
	       ((_theResult___fst_exp__h511762 == 11'd0 &&
		 sfd__h511854[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h511762) ;
  assign _theResult___exp__h521275 =
	     sfd__h520614[53] ?
	       ((_theResult___fst_exp__h520595 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h521496) :
	       ((_theResult___fst_exp__h520595 == 11'd0 &&
		 sfd__h520614[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h520595) ;
  assign _theResult___exp__h541693 =
	     sfd__h541056[53] ?
	       ((_theResult___fst_exp__h541038 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h560288) :
	       ((_theResult___fst_exp__h541038 == 11'd0 &&
		 sfd__h541056[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h541038) ;
  assign _theResult___exp__h551344 =
	     sfd__h550707[53] ?
	       ((_theResult___fst_exp__h550615 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h560323) :
	       ((_theResult___fst_exp__h550615 == 11'd0 &&
		 sfd__h550707[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h550615) ;
  assign _theResult___exp__h560128 =
	     sfd__h559467[53] ?
	       ((_theResult___fst_exp__h559448 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h560349) :
	       ((_theResult___fst_exp__h559448 == 11'd0 &&
		 sfd__h559467[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h559448) ;
  assign _theResult___exp__h580997 =
	     sfd__h580360[53] ?
	       ((_theResult___fst_exp__h580342 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h599592) :
	       ((_theResult___fst_exp__h580342 == 11'd0 &&
		 sfd__h580360[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h580342) ;
  assign _theResult___exp__h590648 =
	     sfd__h590011[53] ?
	       ((_theResult___fst_exp__h589919 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h599627) :
	       ((_theResult___fst_exp__h589919 == 11'd0 &&
		 sfd__h590011[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h589919) ;
  assign _theResult___exp__h599432 =
	     sfd__h598771[53] ?
	       ((_theResult___fst_exp__h598752 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h599653) :
	       ((_theResult___fst_exp__h598752 == 11'd0 &&
		 sfd__h598771[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h598752) ;
  assign _theResult___fst__h604027 =
	     a__h603605[63] ? a___1__h604032 : a__h603605 ;
  assign _theResult___fst_exp__h354853 =
	     _theResult____h346742[56] ?
	       8'd2 :
	       _theResult___fst_exp__h354927 ;
  assign _theResult___fst_exp__h354918 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d4305 } ;
  assign _theResult___fst_exp__h354924 =
	     (!_theResult____h346742[56] && !_theResult____h346742[55] &&
	      !_theResult____h346742[54] &&
	      !_theResult____h346742[53] &&
	      !_theResult____h346742[52] &&
	      !_theResult____h346742[51] &&
	      !_theResult____h346742[50] &&
	      !_theResult____h346742[49] &&
	      !_theResult____h346742[48] &&
	      !_theResult____h346742[47] &&
	      !_theResult____h346742[46] &&
	      !_theResult____h346742[45] &&
	      !_theResult____h346742[44] &&
	      !_theResult____h346742[43] &&
	      !_theResult____h346742[42] &&
	      !_theResult____h346742[41] &&
	      !_theResult____h346742[40] &&
	      !_theResult____h346742[39] &&
	      !_theResult____h346742[38] &&
	      !_theResult____h346742[37] &&
	      !_theResult____h346742[36] &&
	      !_theResult____h346742[35] &&
	      !_theResult____h346742[34] &&
	      !_theResult____h346742[33] &&
	      !_theResult____h346742[32] &&
	      !_theResult____h346742[31] &&
	      !_theResult____h346742[30] &&
	      !_theResult____h346742[29] &&
	      !_theResult____h346742[28] &&
	      !_theResult____h346742[27] &&
	      !_theResult____h346742[26] &&
	      !_theResult____h346742[25] &&
	      !_theResult____h346742[24] &&
	      !_theResult____h346742[23] &&
	      !_theResult____h346742[22] &&
	      !_theResult____h346742[21] &&
	      !_theResult____h346742[20] &&
	      !_theResult____h346742[19] &&
	      !_theResult____h346742[18] &&
	      !_theResult____h346742[17] &&
	      !_theResult____h346742[16] &&
	      !_theResult____h346742[15] &&
	      !_theResult____h346742[14] &&
	      !_theResult____h346742[13] &&
	      !_theResult____h346742[12] &&
	      !_theResult____h346742[11] &&
	      !_theResult____h346742[10] &&
	      !_theResult____h346742[9] &&
	      !_theResult____h346742[8] &&
	      !_theResult____h346742[7] &&
	      !_theResult____h346742[6] &&
	      !_theResult____h346742[5] &&
	      !_theResult____h346742[4] &&
	      !_theResult____h346742[3] &&
	      !_theResult____h346742[2] &&
	      !_theResult____h346742[1] &&
	      !_theResult____h346742[0] ||
	      !_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d4307) ?
	       8'd0 :
	       _theResult___fst_exp__h354918 ;
  assign _theResult___fst_exp__h354927 =
	     (!_theResult____h346742[56] && _theResult____h346742[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h354924 ;
  assign _theResult___fst_exp__h355450 =
	     (_theResult___fst_exp__h354853 == 8'd255) ?
	       _theResult___fst_exp__h354853 :
	       _theResult___fst_exp__h355447 ;
  assign _theResult___fst_exp__h363500 =
	     8'd129 -
	     { 2'd0,
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4536 } ;
  assign _theResult___fst_exp__h363506 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0 &&
	      NOT_coreFix_fpuMulDivExe_0_fpuExec_double_fma__ETC___d4481 ||
	      !_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d4538) ?
	       8'd0 :
	       _theResult___fst_exp__h363500 ;
  assign _theResult___fst_exp__h363509 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       _theResult___fst_exp__h363506 :
	       8'd129 ;
  assign _theResult___fst_exp__h364032 =
	     (_theResult___fst_exp__h363509 == 8'd255) ?
	       _theResult___fst_exp__h363509 :
	       _theResult___fst_exp__h364029 ;
  assign _theResult___fst_exp__h372619 =
	     _theResult____h364381[56] ?
	       8'd2 :
	       _theResult___fst_exp__h372693 ;
  assign _theResult___fst_exp__h372684 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d4856 } ;
  assign _theResult___fst_exp__h372690 =
	     (!_theResult____h364381[56] && !_theResult____h364381[55] &&
	      !_theResult____h364381[54] &&
	      !_theResult____h364381[53] &&
	      !_theResult____h364381[52] &&
	      !_theResult____h364381[51] &&
	      !_theResult____h364381[50] &&
	      !_theResult____h364381[49] &&
	      !_theResult____h364381[48] &&
	      !_theResult____h364381[47] &&
	      !_theResult____h364381[46] &&
	      !_theResult____h364381[45] &&
	      !_theResult____h364381[44] &&
	      !_theResult____h364381[43] &&
	      !_theResult____h364381[42] &&
	      !_theResult____h364381[41] &&
	      !_theResult____h364381[40] &&
	      !_theResult____h364381[39] &&
	      !_theResult____h364381[38] &&
	      !_theResult____h364381[37] &&
	      !_theResult____h364381[36] &&
	      !_theResult____h364381[35] &&
	      !_theResult____h364381[34] &&
	      !_theResult____h364381[33] &&
	      !_theResult____h364381[32] &&
	      !_theResult____h364381[31] &&
	      !_theResult____h364381[30] &&
	      !_theResult____h364381[29] &&
	      !_theResult____h364381[28] &&
	      !_theResult____h364381[27] &&
	      !_theResult____h364381[26] &&
	      !_theResult____h364381[25] &&
	      !_theResult____h364381[24] &&
	      !_theResult____h364381[23] &&
	      !_theResult____h364381[22] &&
	      !_theResult____h364381[21] &&
	      !_theResult____h364381[20] &&
	      !_theResult____h364381[19] &&
	      !_theResult____h364381[18] &&
	      !_theResult____h364381[17] &&
	      !_theResult____h364381[16] &&
	      !_theResult____h364381[15] &&
	      !_theResult____h364381[14] &&
	      !_theResult____h364381[13] &&
	      !_theResult____h364381[12] &&
	      !_theResult____h364381[11] &&
	      !_theResult____h364381[10] &&
	      !_theResult____h364381[9] &&
	      !_theResult____h364381[8] &&
	      !_theResult____h364381[7] &&
	      !_theResult____h364381[6] &&
	      !_theResult____h364381[5] &&
	      !_theResult____h364381[4] &&
	      !_theResult____h364381[3] &&
	      !_theResult____h364381[2] &&
	      !_theResult____h364381[1] &&
	      !_theResult____h364381[0] ||
	      !_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d4858) ?
	       8'd0 :
	       _theResult___fst_exp__h372684 ;
  assign _theResult___fst_exp__h372693 =
	     (!_theResult____h364381[56] && _theResult____h364381[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h372690 ;
  assign _theResult___fst_exp__h373216 =
	     (_theResult___fst_exp__h372619 == 8'd255) ?
	       _theResult___fst_exp__h372619 :
	       _theResult___fst_exp__h373213 ;
  assign _theResult___fst_exp__h381256 =
	     (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q29[7:0] ==
	      8'd0) ?
	       8'd1 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q29[7:0] ;
  assign _theResult___fst_exp__h381295 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q29[7:0] -
	     { 2'd0,
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4536 } ;
  assign _theResult___fst_exp__h381301 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0 &&
	      NOT_coreFix_fpuMulDivExe_0_fpuExec_double_fma__ETC___d4481 ||
	      !_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d4931) ?
	       8'd0 :
	       _theResult___fst_exp__h381295 ;
  assign _theResult___fst_exp__h381304 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       _theResult___fst_exp__h381301 :
	       _theResult___fst_exp__h381256 ;
  assign _theResult___fst_exp__h381852 =
	     (_theResult___fst_exp__h381304 == 8'd255) ?
	       _theResult___fst_exp__h381304 :
	       _theResult___fst_exp__h381849 ;
  assign _theResult___fst_exp__h381861 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4070 ?
		  _theResult___snd_fst_exp__h364035 :
		  _theResult___fst_exp__h346724) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4610 ?
		  _theResult___snd_fst_exp__h381855 :
		  _theResult___fst_exp__h346724) ;
  assign _theResult___fst_exp__h381864 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
	      52'd0) ?
	       8'd0 :
	       _theResult___fst_exp__h381861 ;
  assign _theResult___fst_exp__h400550 =
	     _theResult____h392441[56] ?
	       8'd2 :
	       _theResult___fst_exp__h400624 ;
  assign _theResult___fst_exp__h400615 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d5697 } ;
  assign _theResult___fst_exp__h400621 =
	     (!_theResult____h392441[56] && !_theResult____h392441[55] &&
	      !_theResult____h392441[54] &&
	      !_theResult____h392441[53] &&
	      !_theResult____h392441[52] &&
	      !_theResult____h392441[51] &&
	      !_theResult____h392441[50] &&
	      !_theResult____h392441[49] &&
	      !_theResult____h392441[48] &&
	      !_theResult____h392441[47] &&
	      !_theResult____h392441[46] &&
	      !_theResult____h392441[45] &&
	      !_theResult____h392441[44] &&
	      !_theResult____h392441[43] &&
	      !_theResult____h392441[42] &&
	      !_theResult____h392441[41] &&
	      !_theResult____h392441[40] &&
	      !_theResult____h392441[39] &&
	      !_theResult____h392441[38] &&
	      !_theResult____h392441[37] &&
	      !_theResult____h392441[36] &&
	      !_theResult____h392441[35] &&
	      !_theResult____h392441[34] &&
	      !_theResult____h392441[33] &&
	      !_theResult____h392441[32] &&
	      !_theResult____h392441[31] &&
	      !_theResult____h392441[30] &&
	      !_theResult____h392441[29] &&
	      !_theResult____h392441[28] &&
	      !_theResult____h392441[27] &&
	      !_theResult____h392441[26] &&
	      !_theResult____h392441[25] &&
	      !_theResult____h392441[24] &&
	      !_theResult____h392441[23] &&
	      !_theResult____h392441[22] &&
	      !_theResult____h392441[21] &&
	      !_theResult____h392441[20] &&
	      !_theResult____h392441[19] &&
	      !_theResult____h392441[18] &&
	      !_theResult____h392441[17] &&
	      !_theResult____h392441[16] &&
	      !_theResult____h392441[15] &&
	      !_theResult____h392441[14] &&
	      !_theResult____h392441[13] &&
	      !_theResult____h392441[12] &&
	      !_theResult____h392441[11] &&
	      !_theResult____h392441[10] &&
	      !_theResult____h392441[9] &&
	      !_theResult____h392441[8] &&
	      !_theResult____h392441[7] &&
	      !_theResult____h392441[6] &&
	      !_theResult____h392441[5] &&
	      !_theResult____h392441[4] &&
	      !_theResult____h392441[3] &&
	      !_theResult____h392441[2] &&
	      !_theResult____h392441[1] &&
	      !_theResult____h392441[0] ||
	      !_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d5699) ?
	       8'd0 :
	       _theResult___fst_exp__h400615 ;
  assign _theResult___fst_exp__h400624 =
	     (!_theResult____h392441[56] && _theResult____h392441[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h400621 ;
  assign _theResult___fst_exp__h401147 =
	     (_theResult___fst_exp__h400550 == 8'd255) ?
	       _theResult___fst_exp__h400550 :
	       _theResult___fst_exp__h401144 ;
  assign _theResult___fst_exp__h409197 =
	     8'd129 -
	     { 2'd0,
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d5928 } ;
  assign _theResult___fst_exp__h409203 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0 &&
	      NOT_coreFix_fpuMulDivExe_0_fpuExec_double_div__ETC___d5873 ||
	      !_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5930) ?
	       8'd0 :
	       _theResult___fst_exp__h409197 ;
  assign _theResult___fst_exp__h409206 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       _theResult___fst_exp__h409203 :
	       8'd129 ;
  assign _theResult___fst_exp__h409729 =
	     (_theResult___fst_exp__h409206 == 8'd255) ?
	       _theResult___fst_exp__h409206 :
	       _theResult___fst_exp__h409726 ;
  assign _theResult___fst_exp__h418316 =
	     _theResult____h410078[56] ?
	       8'd2 :
	       _theResult___fst_exp__h418390 ;
  assign _theResult___fst_exp__h418381 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d6248 } ;
  assign _theResult___fst_exp__h418387 =
	     (!_theResult____h410078[56] && !_theResult____h410078[55] &&
	      !_theResult____h410078[54] &&
	      !_theResult____h410078[53] &&
	      !_theResult____h410078[52] &&
	      !_theResult____h410078[51] &&
	      !_theResult____h410078[50] &&
	      !_theResult____h410078[49] &&
	      !_theResult____h410078[48] &&
	      !_theResult____h410078[47] &&
	      !_theResult____h410078[46] &&
	      !_theResult____h410078[45] &&
	      !_theResult____h410078[44] &&
	      !_theResult____h410078[43] &&
	      !_theResult____h410078[42] &&
	      !_theResult____h410078[41] &&
	      !_theResult____h410078[40] &&
	      !_theResult____h410078[39] &&
	      !_theResult____h410078[38] &&
	      !_theResult____h410078[37] &&
	      !_theResult____h410078[36] &&
	      !_theResult____h410078[35] &&
	      !_theResult____h410078[34] &&
	      !_theResult____h410078[33] &&
	      !_theResult____h410078[32] &&
	      !_theResult____h410078[31] &&
	      !_theResult____h410078[30] &&
	      !_theResult____h410078[29] &&
	      !_theResult____h410078[28] &&
	      !_theResult____h410078[27] &&
	      !_theResult____h410078[26] &&
	      !_theResult____h410078[25] &&
	      !_theResult____h410078[24] &&
	      !_theResult____h410078[23] &&
	      !_theResult____h410078[22] &&
	      !_theResult____h410078[21] &&
	      !_theResult____h410078[20] &&
	      !_theResult____h410078[19] &&
	      !_theResult____h410078[18] &&
	      !_theResult____h410078[17] &&
	      !_theResult____h410078[16] &&
	      !_theResult____h410078[15] &&
	      !_theResult____h410078[14] &&
	      !_theResult____h410078[13] &&
	      !_theResult____h410078[12] &&
	      !_theResult____h410078[11] &&
	      !_theResult____h410078[10] &&
	      !_theResult____h410078[9] &&
	      !_theResult____h410078[8] &&
	      !_theResult____h410078[7] &&
	      !_theResult____h410078[6] &&
	      !_theResult____h410078[5] &&
	      !_theResult____h410078[4] &&
	      !_theResult____h410078[3] &&
	      !_theResult____h410078[2] &&
	      !_theResult____h410078[1] &&
	      !_theResult____h410078[0] ||
	      !_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6250) ?
	       8'd0 :
	       _theResult___fst_exp__h418381 ;
  assign _theResult___fst_exp__h418390 =
	     (!_theResult____h410078[56] && _theResult____h410078[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h418387 ;
  assign _theResult___fst_exp__h418913 =
	     (_theResult___fst_exp__h418316 == 8'd255) ?
	       _theResult___fst_exp__h418316 :
	       _theResult___fst_exp__h418910 ;
  assign _theResult___fst_exp__h426953 =
	     (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q64[7:0] ==
	      8'd0) ?
	       8'd1 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q64[7:0] ;
  assign _theResult___fst_exp__h426992 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q64[7:0] -
	     { 2'd0,
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d5928 } ;
  assign _theResult___fst_exp__h426998 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0 &&
	      NOT_coreFix_fpuMulDivExe_0_fpuExec_double_div__ETC___d5873 ||
	      !_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6323) ?
	       8'd0 :
	       _theResult___fst_exp__h426992 ;
  assign _theResult___fst_exp__h427001 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       _theResult___fst_exp__h426998 :
	       _theResult___fst_exp__h426953 ;
  assign _theResult___fst_exp__h427549 =
	     (_theResult___fst_exp__h427001 == 8'd255) ?
	       _theResult___fst_exp__h427001 :
	       _theResult___fst_exp__h427546 ;
  assign _theResult___fst_exp__h427558 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5462 ?
		  _theResult___snd_fst_exp__h409732 :
		  _theResult___fst_exp__h392423) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6002 ?
		  _theResult___snd_fst_exp__h427552 :
		  _theResult___fst_exp__h392423) ;
  assign _theResult___fst_exp__h427561 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
	      52'd0) ?
	       8'd0 :
	       _theResult___fst_exp__h427558 ;
  assign _theResult___fst_exp__h446245 =
	     _theResult____h438136[56] ?
	       8'd2 :
	       _theResult___fst_exp__h446319 ;
  assign _theResult___fst_exp__h446310 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d7089 } ;
  assign _theResult___fst_exp__h446316 =
	     (!_theResult____h438136[56] && !_theResult____h438136[55] &&
	      !_theResult____h438136[54] &&
	      !_theResult____h438136[53] &&
	      !_theResult____h438136[52] &&
	      !_theResult____h438136[51] &&
	      !_theResult____h438136[50] &&
	      !_theResult____h438136[49] &&
	      !_theResult____h438136[48] &&
	      !_theResult____h438136[47] &&
	      !_theResult____h438136[46] &&
	      !_theResult____h438136[45] &&
	      !_theResult____h438136[44] &&
	      !_theResult____h438136[43] &&
	      !_theResult____h438136[42] &&
	      !_theResult____h438136[41] &&
	      !_theResult____h438136[40] &&
	      !_theResult____h438136[39] &&
	      !_theResult____h438136[38] &&
	      !_theResult____h438136[37] &&
	      !_theResult____h438136[36] &&
	      !_theResult____h438136[35] &&
	      !_theResult____h438136[34] &&
	      !_theResult____h438136[33] &&
	      !_theResult____h438136[32] &&
	      !_theResult____h438136[31] &&
	      !_theResult____h438136[30] &&
	      !_theResult____h438136[29] &&
	      !_theResult____h438136[28] &&
	      !_theResult____h438136[27] &&
	      !_theResult____h438136[26] &&
	      !_theResult____h438136[25] &&
	      !_theResult____h438136[24] &&
	      !_theResult____h438136[23] &&
	      !_theResult____h438136[22] &&
	      !_theResult____h438136[21] &&
	      !_theResult____h438136[20] &&
	      !_theResult____h438136[19] &&
	      !_theResult____h438136[18] &&
	      !_theResult____h438136[17] &&
	      !_theResult____h438136[16] &&
	      !_theResult____h438136[15] &&
	      !_theResult____h438136[14] &&
	      !_theResult____h438136[13] &&
	      !_theResult____h438136[12] &&
	      !_theResult____h438136[11] &&
	      !_theResult____h438136[10] &&
	      !_theResult____h438136[9] &&
	      !_theResult____h438136[8] &&
	      !_theResult____h438136[7] &&
	      !_theResult____h438136[6] &&
	      !_theResult____h438136[5] &&
	      !_theResult____h438136[4] &&
	      !_theResult____h438136[3] &&
	      !_theResult____h438136[2] &&
	      !_theResult____h438136[1] &&
	      !_theResult____h438136[0] ||
	      !_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d7091) ?
	       8'd0 :
	       _theResult___fst_exp__h446310 ;
  assign _theResult___fst_exp__h446319 =
	     (!_theResult____h438136[56] && _theResult____h438136[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h446316 ;
  assign _theResult___fst_exp__h446842 =
	     (_theResult___fst_exp__h446245 == 8'd255) ?
	       _theResult___fst_exp__h446245 :
	       _theResult___fst_exp__h446839 ;
  assign _theResult___fst_exp__h454892 =
	     8'd129 -
	     { 2'd0,
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7320 } ;
  assign _theResult___fst_exp__h454898 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0 &&
	      NOT_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt_ETC___d7265 ||
	      !_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d7322) ?
	       8'd0 :
	       _theResult___fst_exp__h454892 ;
  assign _theResult___fst_exp__h454901 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       _theResult___fst_exp__h454898 :
	       8'd129 ;
  assign _theResult___fst_exp__h455424 =
	     (_theResult___fst_exp__h454901 == 8'd255) ?
	       _theResult___fst_exp__h454901 :
	       _theResult___fst_exp__h455421 ;
  assign _theResult___fst_exp__h464011 =
	     _theResult____h455773[56] ?
	       8'd2 :
	       _theResult___fst_exp__h464085 ;
  assign _theResult___fst_exp__h464076 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d7640 } ;
  assign _theResult___fst_exp__h464082 =
	     (!_theResult____h455773[56] && !_theResult____h455773[55] &&
	      !_theResult____h455773[54] &&
	      !_theResult____h455773[53] &&
	      !_theResult____h455773[52] &&
	      !_theResult____h455773[51] &&
	      !_theResult____h455773[50] &&
	      !_theResult____h455773[49] &&
	      !_theResult____h455773[48] &&
	      !_theResult____h455773[47] &&
	      !_theResult____h455773[46] &&
	      !_theResult____h455773[45] &&
	      !_theResult____h455773[44] &&
	      !_theResult____h455773[43] &&
	      !_theResult____h455773[42] &&
	      !_theResult____h455773[41] &&
	      !_theResult____h455773[40] &&
	      !_theResult____h455773[39] &&
	      !_theResult____h455773[38] &&
	      !_theResult____h455773[37] &&
	      !_theResult____h455773[36] &&
	      !_theResult____h455773[35] &&
	      !_theResult____h455773[34] &&
	      !_theResult____h455773[33] &&
	      !_theResult____h455773[32] &&
	      !_theResult____h455773[31] &&
	      !_theResult____h455773[30] &&
	      !_theResult____h455773[29] &&
	      !_theResult____h455773[28] &&
	      !_theResult____h455773[27] &&
	      !_theResult____h455773[26] &&
	      !_theResult____h455773[25] &&
	      !_theResult____h455773[24] &&
	      !_theResult____h455773[23] &&
	      !_theResult____h455773[22] &&
	      !_theResult____h455773[21] &&
	      !_theResult____h455773[20] &&
	      !_theResult____h455773[19] &&
	      !_theResult____h455773[18] &&
	      !_theResult____h455773[17] &&
	      !_theResult____h455773[16] &&
	      !_theResult____h455773[15] &&
	      !_theResult____h455773[14] &&
	      !_theResult____h455773[13] &&
	      !_theResult____h455773[12] &&
	      !_theResult____h455773[11] &&
	      !_theResult____h455773[10] &&
	      !_theResult____h455773[9] &&
	      !_theResult____h455773[8] &&
	      !_theResult____h455773[7] &&
	      !_theResult____h455773[6] &&
	      !_theResult____h455773[5] &&
	      !_theResult____h455773[4] &&
	      !_theResult____h455773[3] &&
	      !_theResult____h455773[2] &&
	      !_theResult____h455773[1] &&
	      !_theResult____h455773[0] ||
	      !_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d7642) ?
	       8'd0 :
	       _theResult___fst_exp__h464076 ;
  assign _theResult___fst_exp__h464085 =
	     (!_theResult____h455773[56] && _theResult____h455773[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h464082 ;
  assign _theResult___fst_exp__h464608 =
	     (_theResult___fst_exp__h464011 == 8'd255) ?
	       _theResult___fst_exp__h464011 :
	       _theResult___fst_exp__h464605 ;
  assign _theResult___fst_exp__h472648 =
	     (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q99[7:0] ==
	      8'd0) ?
	       8'd1 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q99[7:0] ;
  assign _theResult___fst_exp__h472687 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q99[7:0] -
	     { 2'd0,
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7320 } ;
  assign _theResult___fst_exp__h472693 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0 &&
	      NOT_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt_ETC___d7265 ||
	      !_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d7715) ?
	       8'd0 :
	       _theResult___fst_exp__h472687 ;
  assign _theResult___fst_exp__h472696 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       _theResult___fst_exp__h472693 :
	       _theResult___fst_exp__h472648 ;
  assign _theResult___fst_exp__h473244 =
	     (_theResult___fst_exp__h472696 == 8'd255) ?
	       _theResult___fst_exp__h472696 :
	       _theResult___fst_exp__h473241 ;
  assign _theResult___fst_exp__h473253 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6854 ?
		  _theResult___snd_fst_exp__h455427 :
		  _theResult___fst_exp__h438118) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7394 ?
		  _theResult___snd_fst_exp__h473247 :
		  _theResult___fst_exp__h438118) ;
  assign _theResult___fst_exp__h473256 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
	      52'd0) ?
	       8'd0 :
	       _theResult___fst_exp__h473253 ;
  assign _theResult___fst_exp__h487112 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3) ?
	       11'd2047 :
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q6 ;
  assign _theResult___fst_exp__h502176 =
	     11'd897 -
	     { 5'd0,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8641 } ;
  assign _theResult___fst_exp__h502182 =
	     (f1_exp__h482797 == 8'd0 && !f1_sfd__h482798[22] &&
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d8614 ||
	      !_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d8643) ?
	       11'd0 :
	       _theResult___fst_exp__h502176 ;
  assign _theResult___fst_exp__h502185 =
	     (f1_exp__h482797 == 8'd0) ?
	       _theResult___fst_exp__h502182 :
	       11'd897 ;
  assign _theResult___fst_exp__h502940 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
	       CASE_guard94224_0b0_theResult___fst_exp02185_0_ETC__q136 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9077 ;
  assign _theResult___fst_exp__h502943 =
	     (_theResult___fst_exp__h502185 == 11'd2047) ?
	       _theResult___fst_exp__h502185 :
	       _theResult___fst_exp__h502940 ;
  assign _theResult___fst_exp__h511762 =
	     _theResult____h503526[56] ?
	       11'd2 :
	       _theResult___fst_exp__h511836 ;
  assign _theResult___fst_exp__h511827 =
	     11'd0 -
	     { 5'd0,
	       IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d8953 } ;
  assign _theResult___fst_exp__h511833 =
	     (!_theResult____h503526[56] && !_theResult____h503526[55] &&
	      !_theResult____h503526[54] &&
	      !_theResult____h503526[53] &&
	      !_theResult____h503526[52] &&
	      !_theResult____h503526[51] &&
	      !_theResult____h503526[50] &&
	      !_theResult____h503526[49] &&
	      !_theResult____h503526[48] &&
	      !_theResult____h503526[47] &&
	      !_theResult____h503526[46] &&
	      !_theResult____h503526[45] &&
	      !_theResult____h503526[44] &&
	      !_theResult____h503526[43] &&
	      !_theResult____h503526[42] &&
	      !_theResult____h503526[41] &&
	      !_theResult____h503526[40] &&
	      !_theResult____h503526[39] &&
	      !_theResult____h503526[38] &&
	      !_theResult____h503526[37] &&
	      !_theResult____h503526[36] &&
	      !_theResult____h503526[35] &&
	      !_theResult____h503526[34] &&
	      !_theResult____h503526[33] &&
	      !_theResult____h503526[32] &&
	      !_theResult____h503526[31] &&
	      !_theResult____h503526[30] &&
	      !_theResult____h503526[29] &&
	      !_theResult____h503526[28] &&
	      !_theResult____h503526[27] &&
	      !_theResult____h503526[26] &&
	      !_theResult____h503526[25] &&
	      !_theResult____h503526[24] &&
	      !_theResult____h503526[23] &&
	      !_theResult____h503526[22] &&
	      !_theResult____h503526[21] &&
	      !_theResult____h503526[20] &&
	      !_theResult____h503526[19] &&
	      !_theResult____h503526[18] &&
	      !_theResult____h503526[17] &&
	      !_theResult____h503526[16] &&
	      !_theResult____h503526[15] &&
	      !_theResult____h503526[14] &&
	      !_theResult____h503526[13] &&
	      !_theResult____h503526[12] &&
	      !_theResult____h503526[11] &&
	      !_theResult____h503526[10] &&
	      !_theResult____h503526[9] &&
	      !_theResult____h503526[8] &&
	      !_theResult____h503526[7] &&
	      !_theResult____h503526[6] &&
	      !_theResult____h503526[5] &&
	      !_theResult____h503526[4] &&
	      !_theResult____h503526[3] &&
	      !_theResult____h503526[2] &&
	      !_theResult____h503526[1] &&
	      !_theResult____h503526[0] ||
	      !_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d8955) ?
	       11'd0 :
	       _theResult___fst_exp__h511827 ;
  assign _theResult___fst_exp__h511836 =
	     (!_theResult____h503526[56] && _theResult____h503526[55]) ?
	       11'd1 :
	       _theResult___fst_exp__h511833 ;
  assign _theResult___fst_exp__h512591 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
	       CASE_guard03536_0b0_theResult___fst_exp11762_0_ETC__q204 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9120 ;
  assign _theResult___fst_exp__h512594 =
	     (_theResult___fst_exp__h511762 == 11'd2047) ?
	       _theResult___fst_exp__h511762 :
	       _theResult___fst_exp__h512591 ;
  assign _theResult___fst_exp__h520547 =
	     (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q129[10:0] ==
	      11'd0) ?
	       11'd1 :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q129[10:0] ;
  assign _theResult___fst_exp__h520586 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q129[10:0] -
	     { 5'd0,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8641 } ;
  assign _theResult___fst_exp__h520592 =
	     (f1_exp__h482797 == 8'd0 && !f1_sfd__h482798[22] &&
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d8614 ||
	      !_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9005) ?
	       11'd0 :
	       _theResult___fst_exp__h520586 ;
  assign _theResult___fst_exp__h520595 =
	     (f1_exp__h482797 == 8'd0) ?
	       _theResult___fst_exp__h520592 :
	       _theResult___fst_exp__h520547 ;
  assign _theResult___fst_exp__h521375 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
	       CASE_guard12605_0b0_theResult___fst_exp20595_0_ETC__q206 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9151 ;
  assign _theResult___fst_exp__h521378 =
	     (_theResult___fst_exp__h520595 == 11'd2047) ?
	       _theResult___fst_exp__h520595 :
	       _theResult___fst_exp__h521375 ;
  assign _theResult___fst_exp__h521387 =
	     (f1_exp__h482797 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8568 ?
		  _theResult___snd_fst_exp__h502946 :
		  _theResult___fst_exp__h487112) :
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8705 ?
		  _theResult___snd_fst_exp__h521381 :
		  _theResult___fst_exp__h487112) ;
  assign _theResult___fst_exp__h521390 =
	     (f1_exp__h482797 == 8'd0 && f1_sfd__h482798 == 23'd0) ?
	       11'd0 :
	       _theResult___fst_exp__h521387 ;
  assign _theResult___fst_exp__h525965 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3) ?
	       11'd2047 :
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q8 ;
  assign _theResult___fst_exp__h541029 =
	     11'd897 -
	     { 5'd0,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10141 } ;
  assign _theResult___fst_exp__h541035 =
	     (f2_exp__h521791 == 8'd0 && !f2_sfd__h521792[22] &&
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10114 ||
	      !_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10143) ?
	       11'd0 :
	       _theResult___fst_exp__h541029 ;
  assign _theResult___fst_exp__h541038 =
	     (f2_exp__h521791 == 8'd0) ?
	       _theResult___fst_exp__h541035 :
	       11'd897 ;
  assign _theResult___fst_exp__h541793 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
	       CASE_guard33077_0b0_theResult___fst_exp41038_0_ETC__q176 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10562 ;
  assign _theResult___fst_exp__h541796 =
	     (_theResult___fst_exp__h541038 == 11'd2047) ?
	       _theResult___fst_exp__h541038 :
	       _theResult___fst_exp__h541793 ;
  assign _theResult___fst_exp__h550615 =
	     _theResult____h542379[56] ?
	       11'd2 :
	       _theResult___fst_exp__h550689 ;
  assign _theResult___fst_exp__h550680 =
	     11'd0 -
	     { 5'd0,
	       IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d10438 } ;
  assign _theResult___fst_exp__h550686 =
	     (!_theResult____h542379[56] && !_theResult____h542379[55] &&
	      !_theResult____h542379[54] &&
	      !_theResult____h542379[53] &&
	      !_theResult____h542379[52] &&
	      !_theResult____h542379[51] &&
	      !_theResult____h542379[50] &&
	      !_theResult____h542379[49] &&
	      !_theResult____h542379[48] &&
	      !_theResult____h542379[47] &&
	      !_theResult____h542379[46] &&
	      !_theResult____h542379[45] &&
	      !_theResult____h542379[44] &&
	      !_theResult____h542379[43] &&
	      !_theResult____h542379[42] &&
	      !_theResult____h542379[41] &&
	      !_theResult____h542379[40] &&
	      !_theResult____h542379[39] &&
	      !_theResult____h542379[38] &&
	      !_theResult____h542379[37] &&
	      !_theResult____h542379[36] &&
	      !_theResult____h542379[35] &&
	      !_theResult____h542379[34] &&
	      !_theResult____h542379[33] &&
	      !_theResult____h542379[32] &&
	      !_theResult____h542379[31] &&
	      !_theResult____h542379[30] &&
	      !_theResult____h542379[29] &&
	      !_theResult____h542379[28] &&
	      !_theResult____h542379[27] &&
	      !_theResult____h542379[26] &&
	      !_theResult____h542379[25] &&
	      !_theResult____h542379[24] &&
	      !_theResult____h542379[23] &&
	      !_theResult____h542379[22] &&
	      !_theResult____h542379[21] &&
	      !_theResult____h542379[20] &&
	      !_theResult____h542379[19] &&
	      !_theResult____h542379[18] &&
	      !_theResult____h542379[17] &&
	      !_theResult____h542379[16] &&
	      !_theResult____h542379[15] &&
	      !_theResult____h542379[14] &&
	      !_theResult____h542379[13] &&
	      !_theResult____h542379[12] &&
	      !_theResult____h542379[11] &&
	      !_theResult____h542379[10] &&
	      !_theResult____h542379[9] &&
	      !_theResult____h542379[8] &&
	      !_theResult____h542379[7] &&
	      !_theResult____h542379[6] &&
	      !_theResult____h542379[5] &&
	      !_theResult____h542379[4] &&
	      !_theResult____h542379[3] &&
	      !_theResult____h542379[2] &&
	      !_theResult____h542379[1] &&
	      !_theResult____h542379[0] ||
	      !_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10440) ?
	       11'd0 :
	       _theResult___fst_exp__h550680 ;
  assign _theResult___fst_exp__h550689 =
	     (!_theResult____h542379[56] && _theResult____h542379[55]) ?
	       11'd1 :
	       _theResult___fst_exp__h550686 ;
  assign _theResult___fst_exp__h551444 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
	       CASE_guard42389_0b0_theResult___fst_exp50615_0_ETC__q178 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10600 ;
  assign _theResult___fst_exp__h551447 =
	     (_theResult___fst_exp__h550615 == 11'd2047) ?
	       _theResult___fst_exp__h550615 :
	       _theResult___fst_exp__h551444 ;
  assign _theResult___fst_exp__h559400 =
	     (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q169[10:0] ==
	      11'd0) ?
	       11'd1 :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q169[10:0] ;
  assign _theResult___fst_exp__h559439 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q169[10:0] -
	     { 5'd0,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10141 } ;
  assign _theResult___fst_exp__h559445 =
	     (f2_exp__h521791 == 8'd0 && !f2_sfd__h521792[22] &&
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10114 ||
	      !_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10490) ?
	       11'd0 :
	       _theResult___fst_exp__h559439 ;
  assign _theResult___fst_exp__h559448 =
	     (f2_exp__h521791 == 8'd0) ?
	       _theResult___fst_exp__h559445 :
	       _theResult___fst_exp__h559400 ;
  assign _theResult___fst_exp__h560228 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
	       CASE_guard51458_0b0_theResult___fst_exp59448_0_ETC__q180 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10631 ;
  assign _theResult___fst_exp__h560231 =
	     (_theResult___fst_exp__h559448 == 11'd2047) ?
	       _theResult___fst_exp__h559448 :
	       _theResult___fst_exp__h560228 ;
  assign _theResult___fst_exp__h560240 =
	     (f2_exp__h521791 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10068 ?
		  _theResult___snd_fst_exp__h541799 :
		  _theResult___fst_exp__h525965) :
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10190 ?
		  _theResult___snd_fst_exp__h560234 :
		  _theResult___fst_exp__h525965) ;
  assign _theResult___fst_exp__h560243 =
	     (f2_exp__h521791 == 8'd0 && f2_sfd__h521792 == 23'd0) ?
	       11'd0 :
	       _theResult___fst_exp__h560240 ;
  assign _theResult___fst_exp__h565269 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3) ?
	       11'd2047 :
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q10 ;
  assign _theResult___fst_exp__h580333 =
	     11'd897 -
	     { 5'd0,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9371 } ;
  assign _theResult___fst_exp__h580339 =
	     (f3_exp__h561095 == 8'd0 && !f3_sfd__h561096[22] &&
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d9344 ||
	      !_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9373) ?
	       11'd0 :
	       _theResult___fst_exp__h580333 ;
  assign _theResult___fst_exp__h580342 =
	     (f3_exp__h561095 == 8'd0) ?
	       _theResult___fst_exp__h580339 :
	       11'd897 ;
  assign _theResult___fst_exp__h581097 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
	       CASE_guard72381_0b0_theResult___fst_exp80342_0_ETC__q153 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9792 ;
  assign _theResult___fst_exp__h581100 =
	     (_theResult___fst_exp__h580342 == 11'd2047) ?
	       _theResult___fst_exp__h580342 :
	       _theResult___fst_exp__h581097 ;
  assign _theResult___fst_exp__h589919 =
	     _theResult____h581683[56] ?
	       11'd2 :
	       _theResult___fst_exp__h589993 ;
  assign _theResult___fst_exp__h589984 =
	     11'd0 -
	     { 5'd0,
	       IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d9668 } ;
  assign _theResult___fst_exp__h589990 =
	     (!_theResult____h581683[56] && !_theResult____h581683[55] &&
	      !_theResult____h581683[54] &&
	      !_theResult____h581683[53] &&
	      !_theResult____h581683[52] &&
	      !_theResult____h581683[51] &&
	      !_theResult____h581683[50] &&
	      !_theResult____h581683[49] &&
	      !_theResult____h581683[48] &&
	      !_theResult____h581683[47] &&
	      !_theResult____h581683[46] &&
	      !_theResult____h581683[45] &&
	      !_theResult____h581683[44] &&
	      !_theResult____h581683[43] &&
	      !_theResult____h581683[42] &&
	      !_theResult____h581683[41] &&
	      !_theResult____h581683[40] &&
	      !_theResult____h581683[39] &&
	      !_theResult____h581683[38] &&
	      !_theResult____h581683[37] &&
	      !_theResult____h581683[36] &&
	      !_theResult____h581683[35] &&
	      !_theResult____h581683[34] &&
	      !_theResult____h581683[33] &&
	      !_theResult____h581683[32] &&
	      !_theResult____h581683[31] &&
	      !_theResult____h581683[30] &&
	      !_theResult____h581683[29] &&
	      !_theResult____h581683[28] &&
	      !_theResult____h581683[27] &&
	      !_theResult____h581683[26] &&
	      !_theResult____h581683[25] &&
	      !_theResult____h581683[24] &&
	      !_theResult____h581683[23] &&
	      !_theResult____h581683[22] &&
	      !_theResult____h581683[21] &&
	      !_theResult____h581683[20] &&
	      !_theResult____h581683[19] &&
	      !_theResult____h581683[18] &&
	      !_theResult____h581683[17] &&
	      !_theResult____h581683[16] &&
	      !_theResult____h581683[15] &&
	      !_theResult____h581683[14] &&
	      !_theResult____h581683[13] &&
	      !_theResult____h581683[12] &&
	      !_theResult____h581683[11] &&
	      !_theResult____h581683[10] &&
	      !_theResult____h581683[9] &&
	      !_theResult____h581683[8] &&
	      !_theResult____h581683[7] &&
	      !_theResult____h581683[6] &&
	      !_theResult____h581683[5] &&
	      !_theResult____h581683[4] &&
	      !_theResult____h581683[3] &&
	      !_theResult____h581683[2] &&
	      !_theResult____h581683[1] &&
	      !_theResult____h581683[0] ||
	      !_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d9670) ?
	       11'd0 :
	       _theResult___fst_exp__h589984 ;
  assign _theResult___fst_exp__h589993 =
	     (!_theResult____h581683[56] && _theResult____h581683[55]) ?
	       11'd1 :
	       _theResult___fst_exp__h589990 ;
  assign _theResult___fst_exp__h590748 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
	       CASE_guard81693_0b0_theResult___fst_exp89919_0_ETC__q184 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9830 ;
  assign _theResult___fst_exp__h590751 =
	     (_theResult___fst_exp__h589919 == 11'd2047) ?
	       _theResult___fst_exp__h589919 :
	       _theResult___fst_exp__h590748 ;
  assign _theResult___fst_exp__h598704 =
	     (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q146[10:0] ==
	      11'd0) ?
	       11'd1 :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q146[10:0] ;
  assign _theResult___fst_exp__h598743 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q146[10:0] -
	     { 5'd0,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9371 } ;
  assign _theResult___fst_exp__h598749 =
	     (f3_exp__h561095 == 8'd0 && !f3_sfd__h561096[22] &&
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d9344 ||
	      !_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9720) ?
	       11'd0 :
	       _theResult___fst_exp__h598743 ;
  assign _theResult___fst_exp__h598752 =
	     (f3_exp__h561095 == 8'd0) ?
	       _theResult___fst_exp__h598749 :
	       _theResult___fst_exp__h598704 ;
  assign _theResult___fst_exp__h599532 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
	       CASE_guard90762_0b0_theResult___fst_exp98752_0_ETC__q182 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9861 ;
  assign _theResult___fst_exp__h599535 =
	     (_theResult___fst_exp__h598752 == 11'd2047) ?
	       _theResult___fst_exp__h598752 :
	       _theResult___fst_exp__h599532 ;
  assign _theResult___fst_exp__h599544 =
	     (f3_exp__h561095 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9298 ?
		  _theResult___snd_fst_exp__h581103 :
		  _theResult___fst_exp__h565269) :
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9420 ?
		  _theResult___snd_fst_exp__h599538 :
		  _theResult___fst_exp__h565269) ;
  assign _theResult___fst_exp__h599547 =
	     (f3_exp__h561095 == 8'd0 && f3_sfd__h561096 == 23'd0) ?
	       11'd0 :
	       _theResult___fst_exp__h599544 ;
  assign _theResult___fst_sfd__h355451 =
	     (_theResult___fst_exp__h354853 == 8'd255) ?
	       sfdin__h354847[56:34] :
	       _theResult___fst_sfd__h355448 ;
  assign _theResult___fst_sfd__h364033 =
	     (_theResult___fst_exp__h363509 == 8'd255) ?
	       _theResult___snd__h363460[56:34] :
	       _theResult___fst_sfd__h364030 ;
  assign _theResult___fst_sfd__h373217 =
	     (_theResult___fst_exp__h372619 == 8'd255) ?
	       sfdin__h372613[56:34] :
	       _theResult___fst_sfd__h373214 ;
  assign _theResult___fst_sfd__h381853 =
	     (_theResult___fst_exp__h381304 == 8'd255) ?
	       _theResult___snd__h381250[56:34] :
	       _theResult___fst_sfd__h381850 ;
  assign _theResult___fst_sfd__h381862 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4070 ?
		  _theResult___snd_fst_sfd__h364036 :
		  _theResult___fst_sfd__h346725) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4610 ?
		  _theResult___snd_fst_sfd__h381856 :
		  _theResult___fst_sfd__h346725) ;
  assign _theResult___fst_sfd__h381868 =
	     ((coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	       11'd2047 ||
	       coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	       11'd0) &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
	      52'd0) ?
	       23'd0 :
	       _theResult___fst_sfd__h381862 ;
  assign _theResult___fst_sfd__h401148 =
	     (_theResult___fst_exp__h400550 == 8'd255) ?
	       sfdin__h400544[56:34] :
	       _theResult___fst_sfd__h401145 ;
  assign _theResult___fst_sfd__h409730 =
	     (_theResult___fst_exp__h409206 == 8'd255) ?
	       _theResult___snd__h409157[56:34] :
	       _theResult___fst_sfd__h409727 ;
  assign _theResult___fst_sfd__h418914 =
	     (_theResult___fst_exp__h418316 == 8'd255) ?
	       sfdin__h418310[56:34] :
	       _theResult___fst_sfd__h418911 ;
  assign _theResult___fst_sfd__h427550 =
	     (_theResult___fst_exp__h427001 == 8'd255) ?
	       _theResult___snd__h426947[56:34] :
	       _theResult___fst_sfd__h427547 ;
  assign _theResult___fst_sfd__h427559 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5462 ?
		  _theResult___snd_fst_sfd__h409733 :
		  _theResult___fst_sfd__h392424) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6002 ?
		  _theResult___snd_fst_sfd__h427553 :
		  _theResult___fst_sfd__h392424) ;
  assign _theResult___fst_sfd__h427565 =
	     ((coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	       11'd2047 ||
	       coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	       11'd0) &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
	      52'd0) ?
	       23'd0 :
	       _theResult___fst_sfd__h427559 ;
  assign _theResult___fst_sfd__h446843 =
	     (_theResult___fst_exp__h446245 == 8'd255) ?
	       sfdin__h446239[56:34] :
	       _theResult___fst_sfd__h446840 ;
  assign _theResult___fst_sfd__h455425 =
	     (_theResult___fst_exp__h454901 == 8'd255) ?
	       _theResult___snd__h454852[56:34] :
	       _theResult___fst_sfd__h455422 ;
  assign _theResult___fst_sfd__h464609 =
	     (_theResult___fst_exp__h464011 == 8'd255) ?
	       sfdin__h464005[56:34] :
	       _theResult___fst_sfd__h464606 ;
  assign _theResult___fst_sfd__h473245 =
	     (_theResult___fst_exp__h472696 == 8'd255) ?
	       _theResult___snd__h472642[56:34] :
	       _theResult___fst_sfd__h473242 ;
  assign _theResult___fst_sfd__h473254 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6854 ?
		  _theResult___snd_fst_sfd__h455428 :
		  _theResult___fst_sfd__h438119) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7394 ?
		  _theResult___snd_fst_sfd__h473248 :
		  _theResult___fst_sfd__h438119) ;
  assign _theResult___fst_sfd__h473260 =
	     ((coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	       11'd2047 ||
	       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	       11'd0) &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
	      52'd0) ?
	       23'd0 :
	       _theResult___fst_sfd__h473254 ;
  assign _theResult___fst_sfd__h487113 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3) ?
	       52'd0 :
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q7 ;
  assign _theResult___fst_sfd__h502941 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
	       CASE_guard94224_0b0_theResult___snd02136_BITS__ETC__q208 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9177 ;
  assign _theResult___fst_sfd__h502944 =
	     (_theResult___fst_exp__h502185 == 11'd2047) ?
	       _theResult___snd__h502136[56:5] :
	       _theResult___fst_sfd__h502941 ;
  assign _theResult___fst_sfd__h512592 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
	       CASE_guard03536_0b0_sfdin11756_BITS_56_TO_5_0b_ETC__q210 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9204 ;
  assign _theResult___fst_sfd__h512595 =
	     (_theResult___fst_exp__h511762 == 11'd2047) ?
	       sfdin__h511756[56:5] :
	       _theResult___fst_sfd__h512592 ;
  assign _theResult___fst_sfd__h521376 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
	       CASE_guard12605_0b0_theResult___snd20541_BITS__ETC__q212 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9223 ;
  assign _theResult___fst_sfd__h521379 =
	     (_theResult___fst_exp__h520595 == 11'd2047) ?
	       _theResult___snd__h520541[56:5] :
	       _theResult___fst_sfd__h521376 ;
  assign _theResult___fst_sfd__h521388 =
	     (f1_exp__h482797 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8568 ?
		  _theResult___snd_fst_sfd__h502947 :
		  _theResult___fst_sfd__h487113) :
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8705 ?
		  _theResult___snd_fst_sfd__h521382 :
		  _theResult___fst_sfd__h487113) ;
  assign _theResult___fst_sfd__h521394 =
	     ((f1_exp__h482797 == 8'd255 || f1_exp__h482797 == 8'd0) &&
	      f1_sfd__h482798 == 23'd0) ?
	       52'd0 :
	       _theResult___fst_sfd__h521388 ;
  assign _theResult___fst_sfd__h525966 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3) ?
	       52'd0 :
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q9 ;
  assign _theResult___fst_sfd__h541794 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
	       CASE_guard33077_0b0_theResult___snd40989_BITS__ETC__q198 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10657 ;
  assign _theResult___fst_sfd__h541797 =
	     (_theResult___fst_exp__h541038 == 11'd2047) ?
	       _theResult___snd__h540989[56:5] :
	       _theResult___fst_sfd__h541794 ;
  assign _theResult___fst_sfd__h551445 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
	       CASE_guard42389_0b0_sfdin50609_BITS_56_TO_5_0b_ETC__q200 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10683 ;
  assign _theResult___fst_sfd__h551448 =
	     (_theResult___fst_exp__h550615 == 11'd2047) ?
	       sfdin__h550609[56:5] :
	       _theResult___fst_sfd__h551445 ;
  assign _theResult___fst_sfd__h560229 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
	       CASE_guard51458_0b0_theResult___snd59394_BITS__ETC__q202 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10702 ;
  assign _theResult___fst_sfd__h560232 =
	     (_theResult___fst_exp__h559448 == 11'd2047) ?
	       _theResult___snd__h559394[56:5] :
	       _theResult___fst_sfd__h560229 ;
  assign _theResult___fst_sfd__h560241 =
	     (f2_exp__h521791 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10068 ?
		  _theResult___snd_fst_sfd__h541800 :
		  _theResult___fst_sfd__h525966) :
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10190 ?
		  _theResult___snd_fst_sfd__h560235 :
		  _theResult___fst_sfd__h525966) ;
  assign _theResult___fst_sfd__h560247 =
	     ((f2_exp__h521791 == 8'd255 || f2_exp__h521791 == 8'd0) &&
	      f2_sfd__h521792 == 23'd0) ?
	       52'd0 :
	       _theResult___fst_sfd__h560241 ;
  assign _theResult___fst_sfd__h565270 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3) ?
	       52'd0 :
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q11 ;
  assign _theResult___fst_sfd__h581098 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
	       CASE_guard72381_0b0_theResult___snd80293_BITS__ETC__q214 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9887 ;
  assign _theResult___fst_sfd__h581101 =
	     (_theResult___fst_exp__h580342 == 11'd2047) ?
	       _theResult___snd__h580293[56:5] :
	       _theResult___fst_sfd__h581098 ;
  assign _theResult___fst_sfd__h590749 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
	       CASE_guard81693_0b0_sfdin89913_BITS_56_TO_5_0b_ETC__q216 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9913 ;
  assign _theResult___fst_sfd__h590752 =
	     (_theResult___fst_exp__h589919 == 11'd2047) ?
	       sfdin__h589913[56:5] :
	       _theResult___fst_sfd__h590749 ;
  assign _theResult___fst_sfd__h599533 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd4) ?
	       CASE_guard90762_0b0_theResult___snd98698_BITS__ETC__q218 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9932 ;
  assign _theResult___fst_sfd__h599536 =
	     (_theResult___fst_exp__h598752 == 11'd2047) ?
	       _theResult___snd__h598698[56:5] :
	       _theResult___fst_sfd__h599533 ;
  assign _theResult___fst_sfd__h599545 =
	     (f3_exp__h561095 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9298 ?
		  _theResult___snd_fst_sfd__h581104 :
		  _theResult___fst_sfd__h565270) :
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9420 ?
		  _theResult___snd_fst_sfd__h599539 :
		  _theResult___fst_sfd__h565270) ;
  assign _theResult___fst_sfd__h599551 =
	     ((f3_exp__h561095 == 8'd255 || f3_exp__h561095 == 8'd0) &&
	      f3_sfd__h561096 == 23'd0) ?
	       52'd0 :
	       _theResult___fst_sfd__h599545 ;
  assign _theResult___sfd__h355370 =
	     sfd__h354945[24] ?
	       ((_theResult___fst_exp__h354853 == 8'd254) ?
		  23'd0 :
		  sfd__h354945[23:1]) :
	       sfd__h354945[22:0] ;
  assign _theResult___sfd__h363952 =
	     sfd__h363527[24] ?
	       ((_theResult___fst_exp__h363509 == 8'd254) ?
		  23'd0 :
		  sfd__h363527[23:1]) :
	       sfd__h363527[22:0] ;
  assign _theResult___sfd__h373136 =
	     sfd__h372711[24] ?
	       ((_theResult___fst_exp__h372619 == 8'd254) ?
		  23'd0 :
		  sfd__h372711[23:1]) :
	       sfd__h372711[22:0] ;
  assign _theResult___sfd__h381772 =
	     sfd__h381323[24] ?
	       ((_theResult___fst_exp__h381304 == 8'd254) ?
		  23'd0 :
		  sfd__h381323[23:1]) :
	       sfd__h381323[22:0] ;
  assign _theResult___sfd__h381874 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd2047 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
	      52'd0) ?
	       _theResult___snd_fst_sfd__h339087 :
	       _theResult___fst_sfd__h381868 ;
  assign _theResult___sfd__h401067 =
	     sfd__h400642[24] ?
	       ((_theResult___fst_exp__h400550 == 8'd254) ?
		  23'd0 :
		  sfd__h400642[23:1]) :
	       sfd__h400642[22:0] ;
  assign _theResult___sfd__h409649 =
	     sfd__h409224[24] ?
	       ((_theResult___fst_exp__h409206 == 8'd254) ?
		  23'd0 :
		  sfd__h409224[23:1]) :
	       sfd__h409224[22:0] ;
  assign _theResult___sfd__h418833 =
	     sfd__h418408[24] ?
	       ((_theResult___fst_exp__h418316 == 8'd254) ?
		  23'd0 :
		  sfd__h418408[23:1]) :
	       sfd__h418408[22:0] ;
  assign _theResult___sfd__h427469 =
	     sfd__h427020[24] ?
	       ((_theResult___fst_exp__h427001 == 8'd254) ?
		  23'd0 :
		  sfd__h427020[23:1]) :
	       sfd__h427020[22:0] ;
  assign _theResult___sfd__h427571 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd2047 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
	      52'd0) ?
	       _theResult___snd_fst_sfd__h384789 :
	       _theResult___fst_sfd__h427565 ;
  assign _theResult___sfd__h446762 =
	     sfd__h446337[24] ?
	       ((_theResult___fst_exp__h446245 == 8'd254) ?
		  23'd0 :
		  sfd__h446337[23:1]) :
	       sfd__h446337[22:0] ;
  assign _theResult___sfd__h455344 =
	     sfd__h454919[24] ?
	       ((_theResult___fst_exp__h454901 == 8'd254) ?
		  23'd0 :
		  sfd__h454919[23:1]) :
	       sfd__h454919[22:0] ;
  assign _theResult___sfd__h464528 =
	     sfd__h464103[24] ?
	       ((_theResult___fst_exp__h464011 == 8'd254) ?
		  23'd0 :
		  sfd__h464103[23:1]) :
	       sfd__h464103[22:0] ;
  assign _theResult___sfd__h473164 =
	     sfd__h472715[24] ?
	       ((_theResult___fst_exp__h472696 == 8'd254) ?
		  23'd0 :
		  sfd__h472715[23:1]) :
	       sfd__h472715[22:0] ;
  assign _theResult___sfd__h473266 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd2047 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
	      52'd0) ?
	       _theResult___snd_fst_sfd__h430484 :
	       _theResult___fst_sfd__h473260 ;
  assign _theResult___sfd__h502841 =
	     sfd__h502203[53] ?
	       ((_theResult___fst_exp__h502185 == 11'd2046) ?
		  52'd0 :
		  sfd__h502203[52:1]) :
	       sfd__h502203[51:0] ;
  assign _theResult___sfd__h512492 =
	     sfd__h511854[53] ?
	       ((_theResult___fst_exp__h511762 == 11'd2046) ?
		  52'd0 :
		  sfd__h511854[52:1]) :
	       sfd__h511854[51:0] ;
  assign _theResult___sfd__h521276 =
	     sfd__h520614[53] ?
	       ((_theResult___fst_exp__h520595 == 11'd2046) ?
		  52'd0 :
		  sfd__h520614[52:1]) :
	       sfd__h520614[51:0] ;
  assign _theResult___sfd__h541694 =
	     sfd__h541056[53] ?
	       ((_theResult___fst_exp__h541038 == 11'd2046) ?
		  52'd0 :
		  sfd__h541056[52:1]) :
	       sfd__h541056[51:0] ;
  assign _theResult___sfd__h551345 =
	     sfd__h550707[53] ?
	       ((_theResult___fst_exp__h550615 == 11'd2046) ?
		  52'd0 :
		  sfd__h550707[52:1]) :
	       sfd__h550707[51:0] ;
  assign _theResult___sfd__h560129 =
	     sfd__h559467[53] ?
	       ((_theResult___fst_exp__h559448 == 11'd2046) ?
		  52'd0 :
		  sfd__h559467[52:1]) :
	       sfd__h559467[51:0] ;
  assign _theResult___sfd__h580998 =
	     sfd__h580360[53] ?
	       ((_theResult___fst_exp__h580342 == 11'd2046) ?
		  52'd0 :
		  sfd__h580360[52:1]) :
	       sfd__h580360[51:0] ;
  assign _theResult___sfd__h590649 =
	     sfd__h590011[53] ?
	       ((_theResult___fst_exp__h589919 == 11'd2046) ?
		  52'd0 :
		  sfd__h590011[52:1]) :
	       sfd__h590011[51:0] ;
  assign _theResult___sfd__h599433 =
	     sfd__h598771[53] ?
	       ((_theResult___fst_exp__h598752 == 11'd2046) ?
		  52'd0 :
		  sfd__h598771[52:1]) :
	       sfd__h598771[51:0] ;
  assign _theResult___snd__h354864 = { _theResult____h346742[55:0], 1'd0 } ;
  assign _theResult___snd__h354875 =
	     (!_theResult____h346742[56] && _theResult____h346742[55]) ?
	       _theResult___snd__h354877 :
	       _theResult___snd__h354887 ;
  assign _theResult___snd__h354877 = { _theResult____h346742[54:0], 2'd0 } ;
  assign _theResult___snd__h354887 =
	     (!_theResult____h346742[56] && !_theResult____h346742[55] &&
	      !_theResult____h346742[54] &&
	      !_theResult____h346742[53] &&
	      !_theResult____h346742[52] &&
	      !_theResult____h346742[51] &&
	      !_theResult____h346742[50] &&
	      !_theResult____h346742[49] &&
	      !_theResult____h346742[48] &&
	      !_theResult____h346742[47] &&
	      !_theResult____h346742[46] &&
	      !_theResult____h346742[45] &&
	      !_theResult____h346742[44] &&
	      !_theResult____h346742[43] &&
	      !_theResult____h346742[42] &&
	      !_theResult____h346742[41] &&
	      !_theResult____h346742[40] &&
	      !_theResult____h346742[39] &&
	      !_theResult____h346742[38] &&
	      !_theResult____h346742[37] &&
	      !_theResult____h346742[36] &&
	      !_theResult____h346742[35] &&
	      !_theResult____h346742[34] &&
	      !_theResult____h346742[33] &&
	      !_theResult____h346742[32] &&
	      !_theResult____h346742[31] &&
	      !_theResult____h346742[30] &&
	      !_theResult____h346742[29] &&
	      !_theResult____h346742[28] &&
	      !_theResult____h346742[27] &&
	      !_theResult____h346742[26] &&
	      !_theResult____h346742[25] &&
	      !_theResult____h346742[24] &&
	      !_theResult____h346742[23] &&
	      !_theResult____h346742[22] &&
	      !_theResult____h346742[21] &&
	      !_theResult____h346742[20] &&
	      !_theResult____h346742[19] &&
	      !_theResult____h346742[18] &&
	      !_theResult____h346742[17] &&
	      !_theResult____h346742[16] &&
	      !_theResult____h346742[15] &&
	      !_theResult____h346742[14] &&
	      !_theResult____h346742[13] &&
	      !_theResult____h346742[12] &&
	      !_theResult____h346742[11] &&
	      !_theResult____h346742[10] &&
	      !_theResult____h346742[9] &&
	      !_theResult____h346742[8] &&
	      !_theResult____h346742[7] &&
	      !_theResult____h346742[6] &&
	      !_theResult____h346742[5] &&
	      !_theResult____h346742[4] &&
	      !_theResult____h346742[3] &&
	      !_theResult____h346742[2] &&
	      !_theResult____h346742[1] &&
	      !_theResult____h346742[0]) ?
	       _theResult____h346742 :
	       _theResult___snd__h354893 ;
  assign _theResult___snd__h354893 =
	     { IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMu_ETC__q20[54:0],
	       2'd0 } ;
  assign _theResult___snd__h354916 =
	     _theResult____h346742 <<
	     IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d4305 ;
  assign _theResult___snd__h363460 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       _theResult___snd__h363469 :
	       _theResult___snd__h363462 ;
  assign _theResult___snd__h363462 =
	     { coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5],
	       5'd0 } ;
  assign _theResult___snd__h363469 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0 &&
	      NOT_coreFix_fpuMulDivExe_0_fpuExec_double_fma__ETC___d4481) ?
	       sfd__h339137 :
	       _theResult___snd__h363475 ;
  assign _theResult___snd__h363475 =
	     { IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q22[54:0],
	       2'd0 } ;
  assign _theResult___snd__h363498 =
	     sfd__h339137 <<
	     IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4536 ;
  assign _theResult___snd__h372630 = { _theResult____h364381[55:0], 1'd0 } ;
  assign _theResult___snd__h372641 =
	     (!_theResult____h364381[56] && _theResult____h364381[55]) ?
	       _theResult___snd__h372643 :
	       _theResult___snd__h372653 ;
  assign _theResult___snd__h372643 = { _theResult____h364381[54:0], 2'd0 } ;
  assign _theResult___snd__h372653 =
	     (!_theResult____h364381[56] && !_theResult____h364381[55] &&
	      !_theResult____h364381[54] &&
	      !_theResult____h364381[53] &&
	      !_theResult____h364381[52] &&
	      !_theResult____h364381[51] &&
	      !_theResult____h364381[50] &&
	      !_theResult____h364381[49] &&
	      !_theResult____h364381[48] &&
	      !_theResult____h364381[47] &&
	      !_theResult____h364381[46] &&
	      !_theResult____h364381[45] &&
	      !_theResult____h364381[44] &&
	      !_theResult____h364381[43] &&
	      !_theResult____h364381[42] &&
	      !_theResult____h364381[41] &&
	      !_theResult____h364381[40] &&
	      !_theResult____h364381[39] &&
	      !_theResult____h364381[38] &&
	      !_theResult____h364381[37] &&
	      !_theResult____h364381[36] &&
	      !_theResult____h364381[35] &&
	      !_theResult____h364381[34] &&
	      !_theResult____h364381[33] &&
	      !_theResult____h364381[32] &&
	      !_theResult____h364381[31] &&
	      !_theResult____h364381[30] &&
	      !_theResult____h364381[29] &&
	      !_theResult____h364381[28] &&
	      !_theResult____h364381[27] &&
	      !_theResult____h364381[26] &&
	      !_theResult____h364381[25] &&
	      !_theResult____h364381[24] &&
	      !_theResult____h364381[23] &&
	      !_theResult____h364381[22] &&
	      !_theResult____h364381[21] &&
	      !_theResult____h364381[20] &&
	      !_theResult____h364381[19] &&
	      !_theResult____h364381[18] &&
	      !_theResult____h364381[17] &&
	      !_theResult____h364381[16] &&
	      !_theResult____h364381[15] &&
	      !_theResult____h364381[14] &&
	      !_theResult____h364381[13] &&
	      !_theResult____h364381[12] &&
	      !_theResult____h364381[11] &&
	      !_theResult____h364381[10] &&
	      !_theResult____h364381[9] &&
	      !_theResult____h364381[8] &&
	      !_theResult____h364381[7] &&
	      !_theResult____h364381[6] &&
	      !_theResult____h364381[5] &&
	      !_theResult____h364381[4] &&
	      !_theResult____h364381[3] &&
	      !_theResult____h364381[2] &&
	      !_theResult____h364381[1] &&
	      !_theResult____h364381[0]) ?
	       _theResult____h364381 :
	       _theResult___snd__h372659 ;
  assign _theResult___snd__h372659 =
	     { IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuM_ETC__q30[54:0],
	       2'd0 } ;
  assign _theResult___snd__h372682 =
	     _theResult____h364381 <<
	     IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d4856 ;
  assign _theResult___snd__h381250 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       _theResult___snd__h381264 :
	       _theResult___snd__h363462 ;
  assign _theResult___snd__h381264 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0 &&
	      NOT_coreFix_fpuMulDivExe_0_fpuExec_double_fma__ETC___d4481) ?
	       sfd__h339137 :
	       _theResult___snd__h381270 ;
  assign _theResult___snd__h381270 =
	     { IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q35[54:0],
	       2'd0 } ;
  assign _theResult___snd__h381288 =
	     sfd__h339137 <<
	     (IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d4930[8] ?
		9'h0AA :
		IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d4930) ;
  assign _theResult___snd__h400561 = { _theResult____h392441[55:0], 1'd0 } ;
  assign _theResult___snd__h400572 =
	     (!_theResult____h392441[56] && _theResult____h392441[55]) ?
	       _theResult___snd__h400574 :
	       _theResult___snd__h400584 ;
  assign _theResult___snd__h400574 = { _theResult____h392441[54:0], 2'd0 } ;
  assign _theResult___snd__h400584 =
	     (!_theResult____h392441[56] && !_theResult____h392441[55] &&
	      !_theResult____h392441[54] &&
	      !_theResult____h392441[53] &&
	      !_theResult____h392441[52] &&
	      !_theResult____h392441[51] &&
	      !_theResult____h392441[50] &&
	      !_theResult____h392441[49] &&
	      !_theResult____h392441[48] &&
	      !_theResult____h392441[47] &&
	      !_theResult____h392441[46] &&
	      !_theResult____h392441[45] &&
	      !_theResult____h392441[44] &&
	      !_theResult____h392441[43] &&
	      !_theResult____h392441[42] &&
	      !_theResult____h392441[41] &&
	      !_theResult____h392441[40] &&
	      !_theResult____h392441[39] &&
	      !_theResult____h392441[38] &&
	      !_theResult____h392441[37] &&
	      !_theResult____h392441[36] &&
	      !_theResult____h392441[35] &&
	      !_theResult____h392441[34] &&
	      !_theResult____h392441[33] &&
	      !_theResult____h392441[32] &&
	      !_theResult____h392441[31] &&
	      !_theResult____h392441[30] &&
	      !_theResult____h392441[29] &&
	      !_theResult____h392441[28] &&
	      !_theResult____h392441[27] &&
	      !_theResult____h392441[26] &&
	      !_theResult____h392441[25] &&
	      !_theResult____h392441[24] &&
	      !_theResult____h392441[23] &&
	      !_theResult____h392441[22] &&
	      !_theResult____h392441[21] &&
	      !_theResult____h392441[20] &&
	      !_theResult____h392441[19] &&
	      !_theResult____h392441[18] &&
	      !_theResult____h392441[17] &&
	      !_theResult____h392441[16] &&
	      !_theResult____h392441[15] &&
	      !_theResult____h392441[14] &&
	      !_theResult____h392441[13] &&
	      !_theResult____h392441[12] &&
	      !_theResult____h392441[11] &&
	      !_theResult____h392441[10] &&
	      !_theResult____h392441[9] &&
	      !_theResult____h392441[8] &&
	      !_theResult____h392441[7] &&
	      !_theResult____h392441[6] &&
	      !_theResult____h392441[5] &&
	      !_theResult____h392441[4] &&
	      !_theResult____h392441[3] &&
	      !_theResult____h392441[2] &&
	      !_theResult____h392441[1] &&
	      !_theResult____h392441[0]) ?
	       _theResult____h392441 :
	       _theResult___snd__h400590 ;
  assign _theResult___snd__h400590 =
	     { IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMu_ETC__q55[54:0],
	       2'd0 } ;
  assign _theResult___snd__h400613 =
	     _theResult____h392441 <<
	     IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d5697 ;
  assign _theResult___snd__h409157 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       _theResult___snd__h409166 :
	       _theResult___snd__h409159 ;
  assign _theResult___snd__h409159 =
	     { coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5],
	       5'd0 } ;
  assign _theResult___snd__h409166 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0 &&
	      NOT_coreFix_fpuMulDivExe_0_fpuExec_double_div__ETC___d5873) ?
	       sfd__h384839 :
	       _theResult___snd__h409172 ;
  assign _theResult___snd__h409172 =
	     { IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q57[54:0],
	       2'd0 } ;
  assign _theResult___snd__h409195 =
	     sfd__h384839 <<
	     IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d5928 ;
  assign _theResult___snd__h418327 = { _theResult____h410078[55:0], 1'd0 } ;
  assign _theResult___snd__h418338 =
	     (!_theResult____h410078[56] && _theResult____h410078[55]) ?
	       _theResult___snd__h418340 :
	       _theResult___snd__h418350 ;
  assign _theResult___snd__h418340 = { _theResult____h410078[54:0], 2'd0 } ;
  assign _theResult___snd__h418350 =
	     (!_theResult____h410078[56] && !_theResult____h410078[55] &&
	      !_theResult____h410078[54] &&
	      !_theResult____h410078[53] &&
	      !_theResult____h410078[52] &&
	      !_theResult____h410078[51] &&
	      !_theResult____h410078[50] &&
	      !_theResult____h410078[49] &&
	      !_theResult____h410078[48] &&
	      !_theResult____h410078[47] &&
	      !_theResult____h410078[46] &&
	      !_theResult____h410078[45] &&
	      !_theResult____h410078[44] &&
	      !_theResult____h410078[43] &&
	      !_theResult____h410078[42] &&
	      !_theResult____h410078[41] &&
	      !_theResult____h410078[40] &&
	      !_theResult____h410078[39] &&
	      !_theResult____h410078[38] &&
	      !_theResult____h410078[37] &&
	      !_theResult____h410078[36] &&
	      !_theResult____h410078[35] &&
	      !_theResult____h410078[34] &&
	      !_theResult____h410078[33] &&
	      !_theResult____h410078[32] &&
	      !_theResult____h410078[31] &&
	      !_theResult____h410078[30] &&
	      !_theResult____h410078[29] &&
	      !_theResult____h410078[28] &&
	      !_theResult____h410078[27] &&
	      !_theResult____h410078[26] &&
	      !_theResult____h410078[25] &&
	      !_theResult____h410078[24] &&
	      !_theResult____h410078[23] &&
	      !_theResult____h410078[22] &&
	      !_theResult____h410078[21] &&
	      !_theResult____h410078[20] &&
	      !_theResult____h410078[19] &&
	      !_theResult____h410078[18] &&
	      !_theResult____h410078[17] &&
	      !_theResult____h410078[16] &&
	      !_theResult____h410078[15] &&
	      !_theResult____h410078[14] &&
	      !_theResult____h410078[13] &&
	      !_theResult____h410078[12] &&
	      !_theResult____h410078[11] &&
	      !_theResult____h410078[10] &&
	      !_theResult____h410078[9] &&
	      !_theResult____h410078[8] &&
	      !_theResult____h410078[7] &&
	      !_theResult____h410078[6] &&
	      !_theResult____h410078[5] &&
	      !_theResult____h410078[4] &&
	      !_theResult____h410078[3] &&
	      !_theResult____h410078[2] &&
	      !_theResult____h410078[1] &&
	      !_theResult____h410078[0]) ?
	       _theResult____h410078 :
	       _theResult___snd__h418356 ;
  assign _theResult___snd__h418356 =
	     { IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuM_ETC__q65[54:0],
	       2'd0 } ;
  assign _theResult___snd__h418379 =
	     _theResult____h410078 <<
	     IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d6248 ;
  assign _theResult___snd__h426947 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       _theResult___snd__h426961 :
	       _theResult___snd__h409159 ;
  assign _theResult___snd__h426961 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0 &&
	      NOT_coreFix_fpuMulDivExe_0_fpuExec_double_div__ETC___d5873) ?
	       sfd__h384839 :
	       _theResult___snd__h426967 ;
  assign _theResult___snd__h426967 =
	     { IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q70[54:0],
	       2'd0 } ;
  assign _theResult___snd__h426985 =
	     sfd__h384839 <<
	     (IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6322[8] ?
		9'h0AA :
		IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6322) ;
  assign _theResult___snd__h446256 = { _theResult____h438136[55:0], 1'd0 } ;
  assign _theResult___snd__h446267 =
	     (!_theResult____h438136[56] && _theResult____h438136[55]) ?
	       _theResult___snd__h446269 :
	       _theResult___snd__h446279 ;
  assign _theResult___snd__h446269 = { _theResult____h438136[54:0], 2'd0 } ;
  assign _theResult___snd__h446279 =
	     (!_theResult____h438136[56] && !_theResult____h438136[55] &&
	      !_theResult____h438136[54] &&
	      !_theResult____h438136[53] &&
	      !_theResult____h438136[52] &&
	      !_theResult____h438136[51] &&
	      !_theResult____h438136[50] &&
	      !_theResult____h438136[49] &&
	      !_theResult____h438136[48] &&
	      !_theResult____h438136[47] &&
	      !_theResult____h438136[46] &&
	      !_theResult____h438136[45] &&
	      !_theResult____h438136[44] &&
	      !_theResult____h438136[43] &&
	      !_theResult____h438136[42] &&
	      !_theResult____h438136[41] &&
	      !_theResult____h438136[40] &&
	      !_theResult____h438136[39] &&
	      !_theResult____h438136[38] &&
	      !_theResult____h438136[37] &&
	      !_theResult____h438136[36] &&
	      !_theResult____h438136[35] &&
	      !_theResult____h438136[34] &&
	      !_theResult____h438136[33] &&
	      !_theResult____h438136[32] &&
	      !_theResult____h438136[31] &&
	      !_theResult____h438136[30] &&
	      !_theResult____h438136[29] &&
	      !_theResult____h438136[28] &&
	      !_theResult____h438136[27] &&
	      !_theResult____h438136[26] &&
	      !_theResult____h438136[25] &&
	      !_theResult____h438136[24] &&
	      !_theResult____h438136[23] &&
	      !_theResult____h438136[22] &&
	      !_theResult____h438136[21] &&
	      !_theResult____h438136[20] &&
	      !_theResult____h438136[19] &&
	      !_theResult____h438136[18] &&
	      !_theResult____h438136[17] &&
	      !_theResult____h438136[16] &&
	      !_theResult____h438136[15] &&
	      !_theResult____h438136[14] &&
	      !_theResult____h438136[13] &&
	      !_theResult____h438136[12] &&
	      !_theResult____h438136[11] &&
	      !_theResult____h438136[10] &&
	      !_theResult____h438136[9] &&
	      !_theResult____h438136[8] &&
	      !_theResult____h438136[7] &&
	      !_theResult____h438136[6] &&
	      !_theResult____h438136[5] &&
	      !_theResult____h438136[4] &&
	      !_theResult____h438136[3] &&
	      !_theResult____h438136[2] &&
	      !_theResult____h438136[1] &&
	      !_theResult____h438136[0]) ?
	       _theResult____h438136 :
	       _theResult___snd__h446285 ;
  assign _theResult___snd__h446285 =
	     { IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMu_ETC__q90[54:0],
	       2'd0 } ;
  assign _theResult___snd__h446308 =
	     _theResult____h438136 <<
	     IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d7089 ;
  assign _theResult___snd__h454852 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       _theResult___snd__h454861 :
	       _theResult___snd__h454854 ;
  assign _theResult___snd__h454854 =
	     { coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5],
	       5'd0 } ;
  assign _theResult___snd__h454861 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0 &&
	      NOT_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt_ETC___d7265) ?
	       sfd__h430534 :
	       _theResult___snd__h454867 ;
  assign _theResult___snd__h454867 =
	     { IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q92[54:0],
	       2'd0 } ;
  assign _theResult___snd__h454890 =
	     sfd__h430534 <<
	     IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7320 ;
  assign _theResult___snd__h464022 = { _theResult____h455773[55:0], 1'd0 } ;
  assign _theResult___snd__h464033 =
	     (!_theResult____h455773[56] && _theResult____h455773[55]) ?
	       _theResult___snd__h464035 :
	       _theResult___snd__h464045 ;
  assign _theResult___snd__h464035 = { _theResult____h455773[54:0], 2'd0 } ;
  assign _theResult___snd__h464045 =
	     (!_theResult____h455773[56] && !_theResult____h455773[55] &&
	      !_theResult____h455773[54] &&
	      !_theResult____h455773[53] &&
	      !_theResult____h455773[52] &&
	      !_theResult____h455773[51] &&
	      !_theResult____h455773[50] &&
	      !_theResult____h455773[49] &&
	      !_theResult____h455773[48] &&
	      !_theResult____h455773[47] &&
	      !_theResult____h455773[46] &&
	      !_theResult____h455773[45] &&
	      !_theResult____h455773[44] &&
	      !_theResult____h455773[43] &&
	      !_theResult____h455773[42] &&
	      !_theResult____h455773[41] &&
	      !_theResult____h455773[40] &&
	      !_theResult____h455773[39] &&
	      !_theResult____h455773[38] &&
	      !_theResult____h455773[37] &&
	      !_theResult____h455773[36] &&
	      !_theResult____h455773[35] &&
	      !_theResult____h455773[34] &&
	      !_theResult____h455773[33] &&
	      !_theResult____h455773[32] &&
	      !_theResult____h455773[31] &&
	      !_theResult____h455773[30] &&
	      !_theResult____h455773[29] &&
	      !_theResult____h455773[28] &&
	      !_theResult____h455773[27] &&
	      !_theResult____h455773[26] &&
	      !_theResult____h455773[25] &&
	      !_theResult____h455773[24] &&
	      !_theResult____h455773[23] &&
	      !_theResult____h455773[22] &&
	      !_theResult____h455773[21] &&
	      !_theResult____h455773[20] &&
	      !_theResult____h455773[19] &&
	      !_theResult____h455773[18] &&
	      !_theResult____h455773[17] &&
	      !_theResult____h455773[16] &&
	      !_theResult____h455773[15] &&
	      !_theResult____h455773[14] &&
	      !_theResult____h455773[13] &&
	      !_theResult____h455773[12] &&
	      !_theResult____h455773[11] &&
	      !_theResult____h455773[10] &&
	      !_theResult____h455773[9] &&
	      !_theResult____h455773[8] &&
	      !_theResult____h455773[7] &&
	      !_theResult____h455773[6] &&
	      !_theResult____h455773[5] &&
	      !_theResult____h455773[4] &&
	      !_theResult____h455773[3] &&
	      !_theResult____h455773[2] &&
	      !_theResult____h455773[1] &&
	      !_theResult____h455773[0]) ?
	       _theResult____h455773 :
	       _theResult___snd__h464051 ;
  assign _theResult___snd__h464051 =
	     { IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuM_ETC__q100[54:0],
	       2'd0 } ;
  assign _theResult___snd__h464074 =
	     _theResult____h455773 <<
	     IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d7640 ;
  assign _theResult___snd__h472642 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       _theResult___snd__h472656 :
	       _theResult___snd__h454854 ;
  assign _theResult___snd__h472656 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0 &&
	      NOT_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt_ETC___d7265) ?
	       sfd__h430534 :
	       _theResult___snd__h472662 ;
  assign _theResult___snd__h472662 =
	     { IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q105[54:0],
	       2'd0 } ;
  assign _theResult___snd__h472680 =
	     sfd__h430534 <<
	     (IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7714[8] ?
		9'h0AA :
		IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7714) ;
  assign _theResult___snd__h502136 =
	     (f1_exp__h482797 == 8'd0) ?
	       _theResult___snd__h502145 :
	       _theResult___snd__h502138 ;
  assign _theResult___snd__h502138 = { f1_sfd__h482798, 34'd0 } ;
  assign _theResult___snd__h502145 =
	     (f1_exp__h482797 == 8'd0 && !f1_sfd__h482798[22] &&
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d8614) ?
	       sfd__h483159 :
	       _theResult___snd__h502151 ;
  assign _theResult___snd__h502151 =
	     { IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q126[54:0],
	       2'd0 } ;
  assign _theResult___snd__h502174 =
	     sfd__h483159 <<
	     IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8641 ;
  assign _theResult___snd__h511773 = { _theResult____h503526[55:0], 1'd0 } ;
  assign _theResult___snd__h511784 =
	     (!_theResult____h503526[56] && _theResult____h503526[55]) ?
	       _theResult___snd__h511786 :
	       _theResult___snd__h511796 ;
  assign _theResult___snd__h511786 = { _theResult____h503526[54:0], 2'd0 } ;
  assign _theResult___snd__h511796 =
	     (!_theResult____h503526[56] && !_theResult____h503526[55] &&
	      !_theResult____h503526[54] &&
	      !_theResult____h503526[53] &&
	      !_theResult____h503526[52] &&
	      !_theResult____h503526[51] &&
	      !_theResult____h503526[50] &&
	      !_theResult____h503526[49] &&
	      !_theResult____h503526[48] &&
	      !_theResult____h503526[47] &&
	      !_theResult____h503526[46] &&
	      !_theResult____h503526[45] &&
	      !_theResult____h503526[44] &&
	      !_theResult____h503526[43] &&
	      !_theResult____h503526[42] &&
	      !_theResult____h503526[41] &&
	      !_theResult____h503526[40] &&
	      !_theResult____h503526[39] &&
	      !_theResult____h503526[38] &&
	      !_theResult____h503526[37] &&
	      !_theResult____h503526[36] &&
	      !_theResult____h503526[35] &&
	      !_theResult____h503526[34] &&
	      !_theResult____h503526[33] &&
	      !_theResult____h503526[32] &&
	      !_theResult____h503526[31] &&
	      !_theResult____h503526[30] &&
	      !_theResult____h503526[29] &&
	      !_theResult____h503526[28] &&
	      !_theResult____h503526[27] &&
	      !_theResult____h503526[26] &&
	      !_theResult____h503526[25] &&
	      !_theResult____h503526[24] &&
	      !_theResult____h503526[23] &&
	      !_theResult____h503526[22] &&
	      !_theResult____h503526[21] &&
	      !_theResult____h503526[20] &&
	      !_theResult____h503526[19] &&
	      !_theResult____h503526[18] &&
	      !_theResult____h503526[17] &&
	      !_theResult____h503526[16] &&
	      !_theResult____h503526[15] &&
	      !_theResult____h503526[14] &&
	      !_theResult____h503526[13] &&
	      !_theResult____h503526[12] &&
	      !_theResult____h503526[11] &&
	      !_theResult____h503526[10] &&
	      !_theResult____h503526[9] &&
	      !_theResult____h503526[8] &&
	      !_theResult____h503526[7] &&
	      !_theResult____h503526[6] &&
	      !_theResult____h503526[5] &&
	      !_theResult____h503526[4] &&
	      !_theResult____h503526[3] &&
	      !_theResult____h503526[2] &&
	      !_theResult____h503526[1] &&
	      !_theResult____h503526[0]) ?
	       _theResult____h503526 :
	       _theResult___snd__h511802 ;
  assign _theResult___snd__h511802 =
	     { IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_f_ETC__q130[54:0],
	       2'd0 } ;
  assign _theResult___snd__h511825 =
	     _theResult____h503526 <<
	     IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d8953 ;
  assign _theResult___snd__h520541 =
	     (f1_exp__h482797 == 8'd0) ?
	       _theResult___snd__h520555 :
	       _theResult___snd__h502138 ;
  assign _theResult___snd__h520555 =
	     (f1_exp__h482797 == 8'd0 && !f1_sfd__h482798[22] &&
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d8614) ?
	       sfd__h483159 :
	       _theResult___snd__h520561 ;
  assign _theResult___snd__h520561 =
	     { IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q133[54:0],
	       2'd0 } ;
  assign _theResult___snd__h520579 =
	     sfd__h483159 <<
	     IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9004 ;
  assign _theResult___snd__h540989 =
	     (f2_exp__h521791 == 8'd0) ?
	       _theResult___snd__h540998 :
	       _theResult___snd__h540991 ;
  assign _theResult___snd__h540991 = { f2_sfd__h521792, 34'd0 } ;
  assign _theResult___snd__h540998 =
	     (f2_exp__h521791 == 8'd0 && !f2_sfd__h521792[22] &&
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10114) ?
	       sfd__h522153 :
	       _theResult___snd__h541004 ;
  assign _theResult___snd__h541004 =
	     { IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q166[54:0],
	       2'd0 } ;
  assign _theResult___snd__h541027 =
	     sfd__h522153 <<
	     IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10141 ;
  assign _theResult___snd__h550626 = { _theResult____h542379[55:0], 1'd0 } ;
  assign _theResult___snd__h550637 =
	     (!_theResult____h542379[56] && _theResult____h542379[55]) ?
	       _theResult___snd__h550639 :
	       _theResult___snd__h550649 ;
  assign _theResult___snd__h550639 = { _theResult____h542379[54:0], 2'd0 } ;
  assign _theResult___snd__h550649 =
	     (!_theResult____h542379[56] && !_theResult____h542379[55] &&
	      !_theResult____h542379[54] &&
	      !_theResult____h542379[53] &&
	      !_theResult____h542379[52] &&
	      !_theResult____h542379[51] &&
	      !_theResult____h542379[50] &&
	      !_theResult____h542379[49] &&
	      !_theResult____h542379[48] &&
	      !_theResult____h542379[47] &&
	      !_theResult____h542379[46] &&
	      !_theResult____h542379[45] &&
	      !_theResult____h542379[44] &&
	      !_theResult____h542379[43] &&
	      !_theResult____h542379[42] &&
	      !_theResult____h542379[41] &&
	      !_theResult____h542379[40] &&
	      !_theResult____h542379[39] &&
	      !_theResult____h542379[38] &&
	      !_theResult____h542379[37] &&
	      !_theResult____h542379[36] &&
	      !_theResult____h542379[35] &&
	      !_theResult____h542379[34] &&
	      !_theResult____h542379[33] &&
	      !_theResult____h542379[32] &&
	      !_theResult____h542379[31] &&
	      !_theResult____h542379[30] &&
	      !_theResult____h542379[29] &&
	      !_theResult____h542379[28] &&
	      !_theResult____h542379[27] &&
	      !_theResult____h542379[26] &&
	      !_theResult____h542379[25] &&
	      !_theResult____h542379[24] &&
	      !_theResult____h542379[23] &&
	      !_theResult____h542379[22] &&
	      !_theResult____h542379[21] &&
	      !_theResult____h542379[20] &&
	      !_theResult____h542379[19] &&
	      !_theResult____h542379[18] &&
	      !_theResult____h542379[17] &&
	      !_theResult____h542379[16] &&
	      !_theResult____h542379[15] &&
	      !_theResult____h542379[14] &&
	      !_theResult____h542379[13] &&
	      !_theResult____h542379[12] &&
	      !_theResult____h542379[11] &&
	      !_theResult____h542379[10] &&
	      !_theResult____h542379[9] &&
	      !_theResult____h542379[8] &&
	      !_theResult____h542379[7] &&
	      !_theResult____h542379[6] &&
	      !_theResult____h542379[5] &&
	      !_theResult____h542379[4] &&
	      !_theResult____h542379[3] &&
	      !_theResult____h542379[2] &&
	      !_theResult____h542379[1] &&
	      !_theResult____h542379[0]) ?
	       _theResult____h542379 :
	       _theResult___snd__h550655 ;
  assign _theResult___snd__h550655 =
	     { IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_f_ETC__q170[54:0],
	       2'd0 } ;
  assign _theResult___snd__h550678 =
	     _theResult____h542379 <<
	     IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d10438 ;
  assign _theResult___snd__h559394 =
	     (f2_exp__h521791 == 8'd0) ?
	       _theResult___snd__h559408 :
	       _theResult___snd__h540991 ;
  assign _theResult___snd__h559408 =
	     (f2_exp__h521791 == 8'd0 && !f2_sfd__h521792[22] &&
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10114) ?
	       sfd__h522153 :
	       _theResult___snd__h559414 ;
  assign _theResult___snd__h559414 =
	     { IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q173[54:0],
	       2'd0 } ;
  assign _theResult___snd__h559432 =
	     sfd__h522153 <<
	     IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10489 ;
  assign _theResult___snd__h580293 =
	     (f3_exp__h561095 == 8'd0) ?
	       _theResult___snd__h580302 :
	       _theResult___snd__h580295 ;
  assign _theResult___snd__h580295 = { f3_sfd__h561096, 34'd0 } ;
  assign _theResult___snd__h580302 =
	     (f3_exp__h561095 == 8'd0 && !f3_sfd__h561096[22] &&
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d9344) ?
	       sfd__h561457 :
	       _theResult___snd__h580308 ;
  assign _theResult___snd__h580308 =
	     { IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q143[54:0],
	       2'd0 } ;
  assign _theResult___snd__h580331 =
	     sfd__h561457 <<
	     IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9371 ;
  assign _theResult___snd__h589930 = { _theResult____h581683[55:0], 1'd0 } ;
  assign _theResult___snd__h589941 =
	     (!_theResult____h581683[56] && _theResult____h581683[55]) ?
	       _theResult___snd__h589943 :
	       _theResult___snd__h589953 ;
  assign _theResult___snd__h589943 = { _theResult____h581683[54:0], 2'd0 } ;
  assign _theResult___snd__h589953 =
	     (!_theResult____h581683[56] && !_theResult____h581683[55] &&
	      !_theResult____h581683[54] &&
	      !_theResult____h581683[53] &&
	      !_theResult____h581683[52] &&
	      !_theResult____h581683[51] &&
	      !_theResult____h581683[50] &&
	      !_theResult____h581683[49] &&
	      !_theResult____h581683[48] &&
	      !_theResult____h581683[47] &&
	      !_theResult____h581683[46] &&
	      !_theResult____h581683[45] &&
	      !_theResult____h581683[44] &&
	      !_theResult____h581683[43] &&
	      !_theResult____h581683[42] &&
	      !_theResult____h581683[41] &&
	      !_theResult____h581683[40] &&
	      !_theResult____h581683[39] &&
	      !_theResult____h581683[38] &&
	      !_theResult____h581683[37] &&
	      !_theResult____h581683[36] &&
	      !_theResult____h581683[35] &&
	      !_theResult____h581683[34] &&
	      !_theResult____h581683[33] &&
	      !_theResult____h581683[32] &&
	      !_theResult____h581683[31] &&
	      !_theResult____h581683[30] &&
	      !_theResult____h581683[29] &&
	      !_theResult____h581683[28] &&
	      !_theResult____h581683[27] &&
	      !_theResult____h581683[26] &&
	      !_theResult____h581683[25] &&
	      !_theResult____h581683[24] &&
	      !_theResult____h581683[23] &&
	      !_theResult____h581683[22] &&
	      !_theResult____h581683[21] &&
	      !_theResult____h581683[20] &&
	      !_theResult____h581683[19] &&
	      !_theResult____h581683[18] &&
	      !_theResult____h581683[17] &&
	      !_theResult____h581683[16] &&
	      !_theResult____h581683[15] &&
	      !_theResult____h581683[14] &&
	      !_theResult____h581683[13] &&
	      !_theResult____h581683[12] &&
	      !_theResult____h581683[11] &&
	      !_theResult____h581683[10] &&
	      !_theResult____h581683[9] &&
	      !_theResult____h581683[8] &&
	      !_theResult____h581683[7] &&
	      !_theResult____h581683[6] &&
	      !_theResult____h581683[5] &&
	      !_theResult____h581683[4] &&
	      !_theResult____h581683[3] &&
	      !_theResult____h581683[2] &&
	      !_theResult____h581683[1] &&
	      !_theResult____h581683[0]) ?
	       _theResult____h581683 :
	       _theResult___snd__h589959 ;
  assign _theResult___snd__h589959 =
	     { IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_f_ETC__q147[54:0],
	       2'd0 } ;
  assign _theResult___snd__h589982 =
	     _theResult____h581683 <<
	     IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d9668 ;
  assign _theResult___snd__h598698 =
	     (f3_exp__h561095 == 8'd0) ?
	       _theResult___snd__h598712 :
	       _theResult___snd__h580295 ;
  assign _theResult___snd__h598712 =
	     (f3_exp__h561095 == 8'd0 && !f3_sfd__h561096[22] &&
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d9344) ?
	       sfd__h561457 :
	       _theResult___snd__h598718 ;
  assign _theResult___snd__h598718 =
	     { IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q150[54:0],
	       2'd0 } ;
  assign _theResult___snd__h598736 =
	     sfd__h561457 <<
	     IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9719 ;
  assign _theResult___snd__h604028 =
	     b__h603606[63] ? b___1__h604077 : b__h603606 ;
  assign _theResult___snd_fst_exp__h364035 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4071 ?
	       _theResult___fst_exp__h355450 :
	       _theResult___fst_exp__h364032 ;
  assign _theResult___snd_fst_exp__h381855 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4611 ?
	       _theResult___fst_exp__h373216 :
	       _theResult___fst_exp__h381852 ;
  assign _theResult___snd_fst_exp__h409732 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5463 ?
	       _theResult___fst_exp__h401147 :
	       _theResult___fst_exp__h409729 ;
  assign _theResult___snd_fst_exp__h427552 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6003 ?
	       _theResult___fst_exp__h418913 :
	       _theResult___fst_exp__h427549 ;
  assign _theResult___snd_fst_exp__h455427 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6855 ?
	       _theResult___fst_exp__h446842 :
	       _theResult___fst_exp__h455424 ;
  assign _theResult___snd_fst_exp__h473247 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7395 ?
	       _theResult___fst_exp__h464608 :
	       _theResult___fst_exp__h473244 ;
  assign _theResult___snd_fst_exp__h502946 =
	     _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8570 ?
	       11'd0 :
	       _theResult___fst_exp__h502943 ;
  assign _theResult___snd_fst_exp__h521381 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8706 ?
	       _theResult___fst_exp__h512594 :
	       _theResult___fst_exp__h521378 ;
  assign _theResult___snd_fst_exp__h541799 =
	     _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10070 ?
	       11'd0 :
	       _theResult___fst_exp__h541796 ;
  assign _theResult___snd_fst_exp__h560234 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10191 ?
	       _theResult___fst_exp__h551447 :
	       _theResult___fst_exp__h560231 ;
  assign _theResult___snd_fst_exp__h581103 =
	     _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9300 ?
	       11'd0 :
	       _theResult___fst_exp__h581100 ;
  assign _theResult___snd_fst_exp__h599538 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9421 ?
	       _theResult___fst_exp__h590751 :
	       _theResult___fst_exp__h599535 ;
  assign _theResult___snd_fst_sfd__h339087 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:34] ==
	      23'd0) ?
	       23'd2097152 :
	       coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:34] ;
  assign _theResult___snd_fst_sfd__h364036 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4071 ?
	       _theResult___fst_sfd__h355451 :
	       _theResult___fst_sfd__h364033 ;
  assign _theResult___snd_fst_sfd__h381856 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4611 ?
	       _theResult___fst_sfd__h373217 :
	       _theResult___fst_sfd__h381853 ;
  assign _theResult___snd_fst_sfd__h384789 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:34] ==
	      23'd0) ?
	       23'd2097152 :
	       coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:34] ;
  assign _theResult___snd_fst_sfd__h409733 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5463 ?
	       _theResult___fst_sfd__h401148 :
	       _theResult___fst_sfd__h409730 ;
  assign _theResult___snd_fst_sfd__h427553 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6003 ?
	       _theResult___fst_sfd__h418914 :
	       _theResult___fst_sfd__h427550 ;
  assign _theResult___snd_fst_sfd__h430484 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:34] ==
	      23'd0) ?
	       23'd2097152 :
	       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:34] ;
  assign _theResult___snd_fst_sfd__h455428 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6855 ?
	       _theResult___fst_sfd__h446843 :
	       _theResult___fst_sfd__h455425 ;
  assign _theResult___snd_fst_sfd__h473248 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7395 ?
	       _theResult___fst_sfd__h464609 :
	       _theResult___fst_sfd__h473245 ;
  assign _theResult___snd_fst_sfd__h483113 =
	     (f1_sfd__h482798 == 23'd0) ?
	       52'h4000000000000 :
	       out___1_sfd__h482861 ;
  assign _theResult___snd_fst_sfd__h502947 =
	     _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8570 ?
	       52'd0 :
	       _theResult___fst_sfd__h502944 ;
  assign _theResult___snd_fst_sfd__h521382 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8706 ?
	       _theResult___fst_sfd__h512595 :
	       _theResult___fst_sfd__h521379 ;
  assign _theResult___snd_fst_sfd__h522107 =
	     (f2_sfd__h521792 == 23'd0) ?
	       52'h4000000000000 :
	       out___1_sfd__h521855 ;
  assign _theResult___snd_fst_sfd__h541800 =
	     _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10070 ?
	       52'd0 :
	       _theResult___fst_sfd__h541797 ;
  assign _theResult___snd_fst_sfd__h560235 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10191 ?
	       _theResult___fst_sfd__h551448 :
	       _theResult___fst_sfd__h560232 ;
  assign _theResult___snd_fst_sfd__h561411 =
	     (f3_sfd__h561096 == 23'd0) ?
	       52'h4000000000000 :
	       out___1_sfd__h561159 ;
  assign _theResult___snd_fst_sfd__h581104 =
	     _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9300 ?
	       52'd0 :
	       _theResult___fst_sfd__h581101 ;
  assign _theResult___snd_fst_sfd__h599539 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9421 ?
	       _theResult___fst_sfd__h590752 :
	       _theResult___fst_sfd__h599536 ;
  assign a___1__h603746 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[216:215] == 2'd1) ?
	       { 32'd0, coreFix_fpuMulDivExe_0_regToExeQ$first[163:132] } :
	       { {32{coreFix_fpuMulDivExe_0_regToExeQfirst_BITS_16_ETC__q2[31]}},
		 coreFix_fpuMulDivExe_0_regToExeQfirst_BITS_16_ETC__q2 } ;
  assign a___1__h604032 = 64'd0 - a__h603605 ;
  assign a__h603605 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[217] ?
	       a___1__h603746 :
	       coreFix_fpuMulDivExe_0_regToExeQ$first[195:132] ;
  assign b___1__h603747 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[216:215] == 2'd0) ?
	       { {32{coreFix_fpuMulDivExe_0_regToExeQfirst_BITS_99_ETC__q3[31]}},
		 coreFix_fpuMulDivExe_0_regToExeQfirst_BITS_99_ETC__q3 } :
	       { 32'd0, coreFix_fpuMulDivExe_0_regToExeQ$first[99:68] } ;
  assign b___1__h604077 = 64'd0 - b__h603606 ;
  assign b__h603606 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[217] ?
	       b___1__h603747 :
	       coreFix_fpuMulDivExe_0_regToExeQ$first[131:68] ;
  assign base__h706074 = { csrf_stvec_base_hi_reg, 2'b0 } ;
  assign base__h706094 = { csrf_mtvec_base_hi_reg, 2'b0 } ;
  assign cause_code__h703117 =
	     commitStage_commitTrap[36] ? i__h703292 : i__h703132 ;
  assign commitStage_commitTrap_4406_BIT_36_4532_AND_co_ETC___d14597 =
	     commitStage_commitTrap[36] &&
	     commitStage_commitTrap[35:32] != 4'd0 &&
	     commitStage_commitTrap[35:32] != 4'd1 &&
	     commitStage_commitTrap[35:32] != 4'd3 &&
	     commitStage_commitTrap[35:32] != 4'd4 &&
	     commitStage_commitTrap[35:32] != 4'd5 &&
	     commitStage_commitTrap[35:32] != 4'd7 &&
	     commitStage_commitTrap[35:32] != 4'd8 &&
	     commitStage_commitTrap[35:32] != 4'd9 &&
	     commitStage_commitTrap[35:32] != 4'd11 ||
	     !commitStage_commitTrap[36] &&
	     commitStage_commitTrap[35:32] == 4'd3 &&
	     CASE_csrf_prv_reg_1_csrf_rg_dcsr_BIT_13_3_csrf_ETC__q236 ;
  assign commitStage_commitTrap_4406_BIT_36_4532_AND_co_ETC___d14598 =
	     commitStage_commitTrap_4406_BIT_36_4532_AND_co_ETC___d14597 ||
	     coreFix_memExe_stb$isEmpty && coreFix_memExe_lsq$stqEmpty &&
	     fetchStage$iTlbIfc_noPendingReq &&
	     coreFix_memExe_dTlb$noPendingReq ;
  assign coreFix_aluExe_0_bypassWire_0_wget__2262_BITS__ETC___d12264 =
	     coreFix_aluExe_0_bypassWire_0$wget[70:64] ==
	     coreFix_aluExe_0_dispToRegQ$first[72:66] ;
  assign coreFix_aluExe_0_bypassWire_0_wget__2262_BITS__ETC___d12303 =
	     coreFix_aluExe_0_bypassWire_0$wget[70:64] ==
	     coreFix_aluExe_0_dispToRegQ$first[64:58] ;
  assign coreFix_aluExe_0_bypassWire_1_wget__2275_BITS__ETC___d12277 =
	     coreFix_aluExe_0_bypassWire_1$wget[70:64] ==
	     coreFix_aluExe_0_dispToRegQ$first[72:66] ;
  assign coreFix_aluExe_0_bypassWire_1_wget__2275_BITS__ETC___d12309 =
	     coreFix_aluExe_0_bypassWire_1$wget[70:64] ==
	     coreFix_aluExe_0_dispToRegQ$first[64:58] ;
  assign coreFix_aluExe_0_bypassWire_2_wget__2283_BITS__ETC___d12285 =
	     coreFix_aluExe_0_bypassWire_2$wget[70:64] ==
	     coreFix_aluExe_0_dispToRegQ$first[72:66] ;
  assign coreFix_aluExe_0_bypassWire_2_wget__2283_BITS__ETC___d12313 =
	     coreFix_aluExe_0_bypassWire_2$wget[70:64] ==
	     coreFix_aluExe_0_dispToRegQ$first[64:58] ;
  assign coreFix_aluExe_0_dispToRegQ_first__2241_BIT_11_ETC___d12326 =
	     (coreFix_aluExe_0_dispToRegQ$first[119] ||
	      sbCons$lazyLookup_0_get[3] ||
	      IF_coreFix_aluExe_0_dispToRegQ_RDY_first__2240_ETC___d12272 &&
	      IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12298) &&
	     (sbCons$lazyLookup_0_get[2] ||
	      IF_coreFix_aluExe_0_dispToRegQ_RDY_first__2240_ETC___d12306 &&
	      IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12323) ;
  assign coreFix_aluExe_0_exeToFinQ_RDY_first__2700_AND_ETC___d12739 =
	     coreFix_aluExe_0_exeToFinQ$RDY_first &&
	     rob$RDY_setExecuted_doFinishAlu_0_set &&
	     (coreFix_aluExe_0_exeToFinQ$first[314:310] != 5'd9 &&
	      coreFix_aluExe_0_exeToFinQ$first[314:310] != 5'd10 ||
	      coreFix_trainBPQ_0$FULL_N) ;
  assign coreFix_aluExe_0_rsAlu_approximateCount__3515__ETC___d13517 =
	     coreFix_aluExe_0_rsAlu$approximateCount <
	     coreFix_aluExe_1_rsAlu$approximateCount ;
  assign coreFix_aluExe_1_bypassWire_0_wget__1401_BITS__ETC___d11403 =
	     coreFix_aluExe_0_bypassWire_0$wget[70:64] ==
	     coreFix_aluExe_1_dispToRegQ$first[72:66] ;
  assign coreFix_aluExe_1_bypassWire_0_wget__1401_BITS__ETC___d11442 =
	     coreFix_aluExe_0_bypassWire_0$wget[70:64] ==
	     coreFix_aluExe_1_dispToRegQ$first[64:58] ;
  assign coreFix_aluExe_1_bypassWire_1_wget__1414_BITS__ETC___d11416 =
	     coreFix_aluExe_0_bypassWire_1$wget[70:64] ==
	     coreFix_aluExe_1_dispToRegQ$first[72:66] ;
  assign coreFix_aluExe_1_bypassWire_1_wget__1414_BITS__ETC___d11448 =
	     coreFix_aluExe_0_bypassWire_1$wget[70:64] ==
	     coreFix_aluExe_1_dispToRegQ$first[64:58] ;
  assign coreFix_aluExe_1_bypassWire_2_wget__1422_BITS__ETC___d11424 =
	     coreFix_aluExe_0_bypassWire_2$wget[70:64] ==
	     coreFix_aluExe_1_dispToRegQ$first[72:66] ;
  assign coreFix_aluExe_1_bypassWire_2_wget__1422_BITS__ETC___d11452 =
	     coreFix_aluExe_0_bypassWire_2$wget[70:64] ==
	     coreFix_aluExe_1_dispToRegQ$first[64:58] ;
  assign coreFix_aluExe_1_dispToRegQ_first__1380_BIT_11_ETC___d11465 =
	     (coreFix_aluExe_1_dispToRegQ$first[119] ||
	      sbCons$lazyLookup_1_get[3] ||
	      IF_coreFix_aluExe_1_dispToRegQ_RDY_first__1379_ETC___d11411 &&
	      IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11437) &&
	     (sbCons$lazyLookup_1_get[2] ||
	      IF_coreFix_aluExe_1_dispToRegQ_RDY_first__1379_ETC___d11445 &&
	      IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11462) ;
  assign coreFix_aluExe_1_exeToFinQ_RDY_first__2026_AND_ETC___d12066 =
	     coreFix_aluExe_1_exeToFinQ$RDY_first &&
	     rob$RDY_setExecuted_doFinishAlu_1_set &&
	     (coreFix_aluExe_1_exeToFinQ$first[314:310] != 5'd9 &&
	      coreFix_aluExe_1_exeToFinQ$first[314:310] != 5'd10 ||
	      coreFix_trainBPQ_1$FULL_N) ;
  assign coreFix_fpuMulDivExe_0_bypassWire_0_wget__265__ETC___d8267 =
	     coreFix_aluExe_0_bypassWire_0$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[45:39] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_0_wget__265__ETC___d8305 =
	     coreFix_aluExe_0_bypassWire_0$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[37:31] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_0_wget__265__ETC___d8329 =
	     coreFix_aluExe_0_bypassWire_0$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[29:23] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_1_wget__278__ETC___d8280 =
	     coreFix_aluExe_0_bypassWire_1$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[45:39] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_1_wget__278__ETC___d8311 =
	     coreFix_aluExe_0_bypassWire_1$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[37:31] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_1_wget__278__ETC___d8335 =
	     coreFix_aluExe_0_bypassWire_1$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[29:23] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_2_wget__286__ETC___d8288 =
	     coreFix_aluExe_0_bypassWire_2$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[45:39] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_2_wget__286__ETC___d8315 =
	     coreFix_aluExe_0_bypassWire_2$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[37:31] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_2_wget__286__ETC___d8339 =
	     coreFix_aluExe_0_bypassWire_2$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[29:23] ;
  assign coreFix_fpuMulDivExe_0_fpuExec_divQ_RDY_first__ETC___d5330 =
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_first_poisoned &&
	     !coreFix_fpuMulDivExe_0_fpuExec_divQ$first_poisoned &&
	     rob$RDY_setExecuted_doFinishFpuMulDiv_0_set &&
	     coreFix_fpuMulDivExe_0_fpuExec_double_div$RDY_response_get &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_first_data ;
  assign coreFix_fpuMulDivExe_0_fpuExec_double_divresp_ETC__q63 =
	     coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] -
	     11'd1023 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_double_fmaresp_ETC__q28 =
	     coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] -
	     11'd1023 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_double_sqrtres_ETC__q98 =
	     coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] -
	     11'd1023 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_fmaQ_RDY_first__ETC___d3938 =
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_first_poisoned &&
	     !coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_poisoned &&
	     rob$RDY_setExecuted_doFinishFpuMulDiv_0_set &&
	     coreFix_fpuMulDivExe_0_fpuExec_double_fma$RDY_response_get &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_first_data ;
  assign coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_RDY_first_ETC___d6722 =
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_first_poisoned &&
	     !coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_poisoned &&
	     rob$RDY_setExecuted_doFinishFpuMulDiv_0_set &&
	     coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$RDY_response_get &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_first_data ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divI_ETC___d8161 =
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$m_axis_dout_tvalid &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_first_poisoned &&
	     !coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_poisoned &&
	     rob$RDY_setExecuted_doFinishFpuMulDiv_0_set &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_first_data &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg$IS_READY &&
	     ((coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[25:24] ==
	       2'd2) ?
		coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$m_axis_dout_tvalid :
		coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[25:24] !=
		2'd3 ||
		coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$m_axis_dout_tvalid) ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulQ_RDY_fir_ETC___d8114 =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_first_poisoned &&
	     !coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_poisoned &&
	     rob$RDY_setExecuted_doFinishFpuMulDiv_0_set &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_first_data &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$EMPTY_N ;
  assign coreFix_fpuMulDivExe_0_regToExeQ_first__429_BI_ETC___d10910 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd25 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd26 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd27 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd28) &&
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10865 |
	     ((f3_exp__h561095 != 8'd255 || f3_sfd__h561096 == 23'd0) &&
	      (f3_exp__h561095 != 8'd255 || f3_sfd__h561096 != 23'd0) &&
	      (f3_exp__h561095 != 8'd0 || f3_sfd__h561096 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10905) ;
  assign coreFix_fpuMulDivExe_0_regToExeQ_first__429_BI_ETC___d10946 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd25 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd26 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd27 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd28) &&
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10934 |
	     ((f3_exp__h561095 != 8'd255 || f3_sfd__h561096 == 23'd0) &&
	      (f3_exp__h561095 != 8'd255 || f3_sfd__h561096 != 23'd0) &&
	      (f3_exp__h561095 != 8'd0 || f3_sfd__h561096 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10941) ;
  assign coreFix_fpuMulDivExe_0_regToExeQ_first__429_BI_ETC___d10994 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd25 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd26 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd27 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd28) &&
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10978 |
	     ((f3_exp__h561095 != 8'd255 || f3_sfd__h561096 == 23'd0) &&
	      (f3_exp__h561095 != 8'd255 || f3_sfd__h561096 != 23'd0) &&
	      (f3_exp__h561095 != 8'd0 || f3_sfd__h561096 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10989) ;
  assign coreFix_fpuMulDivExe_0_regToExeQ_first__429_BI_ETC___d11036 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd25 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd26 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd27 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd28) &&
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11022 |
	     ((f3_exp__h561095 != 8'd255 || f3_sfd__h561096 == 23'd0) &&
	      (f3_exp__h561095 != 8'd255 || f3_sfd__h561096 != 23'd0) &&
	      (f3_exp__h561095 != 8'd0 || f3_sfd__h561096 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11031) ;
  assign coreFix_fpuMulDivExe_0_regToExeQ_first__429_BI_ETC___d11078 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd25 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd26 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd27 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] == 5'd28) &&
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11064 |
	     ((f3_exp__h561095 != 8'd255 || f3_sfd__h561096 == 23'd0) &&
	      (f3_exp__h561095 != 8'd255 || f3_sfd__h561096 != 23'd0) &&
	      (f3_exp__h561095 != 8'd0 || f3_sfd__h561096 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11073) ;
  assign coreFix_fpuMulDivExe_0_regToExeQfirst_BITS_16_ETC__q2 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[163:132] ;
  assign coreFix_fpuMulDivExe_0_regToExeQfirst_BITS_99_ETC__q3 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[99:68] ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv_RDY_enq__40_ETC___d14102 =
	     coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_enq &&
	     regRenamingTable$RDY_rename_1_getRename &&
	     (!fetchStage$pipelines_0_canDeq ||
	      NOT_specTagManager_canClaim__3473_3567_OR_NOT__ETC___d14082) ;
  assign coreFix_memExe_bypassWire_0_wget__630_BITS_70__ETC___d1632 =
	     coreFix_aluExe_0_bypassWire_0$wget[70:64] ==
	     coreFix_memExe_dispToRegQ$first[49:43] ;
  assign coreFix_memExe_bypassWire_0_wget__630_BITS_70__ETC___d1670 =
	     coreFix_aluExe_0_bypassWire_0$wget[70:64] ==
	     coreFix_memExe_dispToRegQ$first[41:35] ;
  assign coreFix_memExe_bypassWire_1_wget__643_BITS_70__ETC___d1645 =
	     coreFix_aluExe_0_bypassWire_1$wget[70:64] ==
	     coreFix_memExe_dispToRegQ$first[49:43] ;
  assign coreFix_memExe_bypassWire_1_wget__643_BITS_70__ETC___d1676 =
	     coreFix_aluExe_0_bypassWire_1$wget[70:64] ==
	     coreFix_memExe_dispToRegQ$first[41:35] ;
  assign coreFix_memExe_bypassWire_2_wget__651_BITS_70__ETC___d1653 =
	     coreFix_aluExe_0_bypassWire_2$wget[70:64] ==
	     coreFix_memExe_dispToRegQ$first[49:43] ;
  assign coreFix_memExe_bypassWire_2_wget__651_BITS_70__ETC___d1680 =
	     coreFix_aluExe_0_bypassWire_2$wget[70:64] ==
	     coreFix_memExe_dispToRegQ$first[41:35] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_pi_ETC___d2635 =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd3 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_linkAd_ETC___d2130 ||
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] !=
	     2'd0 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2154 &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$Q_OUT &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1$Q_OUT &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58] &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[57:0] ==
	     y__h255465 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIn_ETC___d3125 =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3089 ||
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2$Q_OUT ||
	      !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry &&
	      !coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enq_ETC___d3228 =
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3196 ||
	     (!coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2$Q_OUT ||
	      !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_lat_0$whas &&
	      !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl) &&
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full ;
  assign coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d2128 =
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[57:0] ==
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:90] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d2208 =
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$Q_OUT &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1$Q_OUT &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58] &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d2128 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d2785 =
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$Q_OUT &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1$Q_OUT &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58] &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[57:0] ==
	     coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq[65:8] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2075 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512] ==
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[576:574] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] <
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[83:82] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] <
	     2'd2 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2154 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[569:518] ==
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:96] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2589 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085 &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	      3'd3 ||
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d2208) ||
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2075 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2618 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2154 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd2 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2623 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2075 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2615 ||
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2622 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2640 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2075 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2615 ||
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2639 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2657 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2075 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2650 ||
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2656 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2677 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2154 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 &&
	     coreFix_memExe_lsq$getHit[8] &&
	     !coreFix_memExe_lsq$getHit[9] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2680 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2075 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 &&
	     coreFix_memExe_lsq$getHit[8] &&
	     !coreFix_memExe_lsq$getHit[9] ||
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2677 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2701 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd3 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_linkAd_ETC___d2130 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc[3] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2707 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2075 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2701 ||
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2704 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2709 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2075 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2083 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2085 &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	      3'd3 ||
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d2208) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2755 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] <=
	     coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq[1:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2758 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[569:518] ==
	     coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq[65:14] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2855 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[78] :
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[78]) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2859 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[77] :
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[77]) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2863 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[76] :
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[76]) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2868 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[75] :
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[75]) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2872 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[74] :
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[74]) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2877 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[73] :
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[73]) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2881 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[72] :
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[72]) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2886 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[71] :
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[71]) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2898 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[2] :
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[2]) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2902 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[1] :
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[1]) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2906 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[0] :
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[0]) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enq_ETC___d3399 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3367 ||
	     (!coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2$Q_OUT ||
	      !EN_dCacheToParent_rqToP_deq &&
	      !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl) &&
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enq_ETC___d3495 =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3463 ||
	     (!coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2$Q_OUT ||
	      !EN_dCacheToParent_rsToP_deq &&
	      !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl) &&
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full ;
  assign coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2_r_ETC___d1969 =
	     coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2$Q_OUT &&
	     coreFix_memExe_dMem_perfReqQ_enqReq_rl[4] ||
	     (!coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2$Q_OUT ||
	      !coreFix_memExe_dMem_perfReqQ_deqReq_rl) &&
	     coreFix_memExe_dMem_perfReqQ_full ;
  assign coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1784 =
	     coreFix_memExe_dTlb$procResp[162:102] < 61'd402653184 ;
  assign coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1785 =
	     coreFix_memExe_dTlb$procResp[162:102] < 61'd536870912 ;
  assign coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1789 =
	     coreFix_memExe_dTlb$procResp[162:102] == mmio_toHostAddr ;
  assign coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1792 =
	     coreFix_memExe_dTlb$procResp[162:102] == mmio_fromHostAddr ;
  assign coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1793 =
	     coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1784 ||
	     !coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1785 ||
	     coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1789 ||
	     coreFix_memExe_dTlb_procResp__774_BITS_162_TO__ETC___d1792 ;
  assign coreFix_memExe_forwardQ_enqReq_dummy2_2_read___ETC___d3817 =
	     coreFix_memExe_forwardQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_forwardQ_enqReq_lat_1_whas___ETC___d3786 ||
	     (!coreFix_memExe_forwardQ_deqReq_dummy2_2$Q_OUT ||
	      !WILL_FIRE_RL_coreFix_memExe_doRespLdForward &&
	      !coreFix_memExe_forwardQ_deqReq_rl) &&
	     coreFix_memExe_forwardQ_full ;
  assign coreFix_memExe_memRespLdQ_enqReq_dummy2_2_read_ETC___d3723 =
	     coreFix_memExe_memRespLdQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_memRespLdQ_enqReq_lat_1_whas_ETC___d3692 ||
	     (!coreFix_memExe_memRespLdQ_deqReq_dummy2_2$Q_OUT ||
	      !WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	      !coreFix_memExe_memRespLdQ_deqReq_rl) &&
	     coreFix_memExe_memRespLdQ_full ;
  assign coreFix_memExe_regToExeQfirst_BITS_177_TO_146__q4 =
	     coreFix_memExe_regToExeQ$first[177:146] ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1278 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[78] :
		coreFix_memExe_reqLrScAmoQ_data_0_rl[78]) ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1282 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[77] :
		coreFix_memExe_reqLrScAmoQ_data_0_rl[77]) ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1286 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[76] :
		coreFix_memExe_reqLrScAmoQ_data_0_rl[76]) ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1291 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[75] :
		coreFix_memExe_reqLrScAmoQ_data_0_rl[75]) ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1295 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[74] :
		coreFix_memExe_reqLrScAmoQ_data_0_rl[74]) ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1300 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[73] :
		coreFix_memExe_reqLrScAmoQ_data_0_rl[73]) ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1304 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[72] :
		coreFix_memExe_reqLrScAmoQ_data_0_rl[72]) ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1309 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[71] :
		coreFix_memExe_reqLrScAmoQ_data_0_rl[71]) ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1321 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[2] :
		coreFix_memExe_reqLrScAmoQ_data_0_rl[2]) ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1325 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[1] :
		coreFix_memExe_reqLrScAmoQ_data_0_rl[1]) ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1329 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[0] :
		coreFix_memExe_reqLrScAmoQ_data_0_rl[0]) ;
  assign coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2_re_ETC___d3632 =
	     coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_respLrScAmoQ_enqReq_lat_1_wh_ETC___d3616 ||
	     (!coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2$Q_OUT ||
	      !coreFix_memExe_respLrScAmoQ_deqReq_lat_0$whas &&
	      !coreFix_memExe_respLrScAmoQ_deqReq_rl) &&
	     coreFix_memExe_respLrScAmoQ_full ;
  assign coreFix_memExe_stb_isEmpty__071_AND_coreFix_me_ETC___d14809 =
	     coreFix_memExe_stb$isEmpty && coreFix_memExe_lsq$stqEmpty &&
	     regRenamingTable$RDY_commit_0_commit &&
	     rob$RDY_deqPort_0_deq_data &&
	     rob$RDY_deqPort_0_deq &&
	     fetchStage$iTlbIfc_noPendingReq &&
	     coreFix_memExe_dTlb$noPendingReq &&
	     NOT_rob_deqPort_0_deq_data__4399_BITS_247_TO_2_ETC___d14804 ;
  assign csr_addr__h655988 =
	     fetchStage$pipelines_0_first[173] ?
	       IF_fetchStage_pipelines_0_first__2816_BITS_172_ETC___d13032 :
	       12'hCFF ;
  assign csrf_fs_reg_read__1604_EQ_0_3056_AND_fetchStag_ETC___d13104 =
	     csrf_fs_reg == 2'd0 &&
	     (fetchStage$pipelines_0_first[95] &&
	      fetchStage$pipelines_0_first[94] ||
	      fetchStage$pipelines_0_first[88] &&
	      fetchStage$pipelines_0_first[87] ||
	      fetchStage$pipelines_0_first[81] ||
	      fetchStage$pipelines_0_first[75] &&
	      fetchStage$pipelines_0_first[74]) ||
	     fetchStage$pipelines_0_first[199:195] == 5'd13 &&
	     (fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d13097 ||
	      csrf_prv_reg_read__2846_ULT_IF_fetchStage_pipe_ETC___d13099 ||
	      csr_addr__h655988 == 12'h8FF) ;
  assign csrf_fs_reg_read__1604_EQ_0_3056_AND_fetchStag_ETC___d13576 =
	     csrf_fs_reg == 2'd0 &&
	     (fetchStage$pipelines_0_first[95] &&
	      fetchStage$pipelines_0_first[94] ||
	      fetchStage$pipelines_0_first[88] &&
	      fetchStage$pipelines_0_first[87] ||
	      fetchStage$pipelines_0_first[81] ||
	      fetchStage$pipelines_0_first[75] &&
	      fetchStage$pipelines_0_first[74]) ||
	     fetchStage$pipelines_0_first[231:200] == 32'h10500073 &&
	     csrf_tw_reg &&
	     csrf_prv_reg != 2'd3 ;
  assign csrf_fs_reg_read__1604_EQ_0_3056_AND_fetchStag_ETC___d13863 =
	     csrf_fs_reg == 2'd0 &&
	     (fetchStage$pipelines_1_first[95] &&
	      fetchStage$pipelines_1_first[94] ||
	      fetchStage$pipelines_1_first[88] &&
	      fetchStage$pipelines_1_first[87] ||
	      fetchStage$pipelines_1_first[81] ||
	      fetchStage$pipelines_1_first[75] &&
	      fetchStage$pipelines_1_first[74]) ||
	     fetchStage$pipelines_1_first[231:200] == 32'h10500073 &&
	     csrf_tw_reg &&
	     csrf_prv_reg != 2'd3 ;
  assign csrf_prv_reg_read__2846_ULE_1_4635_AND_IF_comm_ETC___d14657 =
	     csrf_prv_reg_read__2846_ULE_1___d14635 &&
	     (commitStage_commitTrap[36] ?
		_0b0_CONCAT_csrf_mideleg_11_reg_read__1711_1712_ETC___d14637 :
		_0b0_CONCAT_csrf_medeleg_15_reg_read__1703_1704_ETC___d14655) ;
  assign csrf_prv_reg_read__2846_ULE_1___d14635 = csrf_prv_reg <= 2'd1 ;
  assign csrf_prv_reg_read__2846_ULT_IF_fetchStage_pipe_ETC___d13099 =
	     csrf_prv_reg < csr_addr__h655988[9:8] ;
  assign data75939_BITS_31_TO_0__q5 = data__h475939[31:0] ;
  assign data___1__h475665 =
	     { {32{IF_coreFix_fpuMulDivExe_0_mulDivExec_mulQ_firs_ETC__q125[31]}},
	       IF_coreFix_fpuMulDivExe_0_mulDivExec_mulQ_firs_ETC__q125 } ;
  assign data___1__h476473 =
	     { {32{data75939_BITS_31_TO_0__q5[31]}},
	       data75939_BITS_31_TO_0__q5 } ;
  assign data__h475939 =
	     (coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[25:24] ==
	      2'd2) ?
	       x_quotient__h475853 :
	       x_remainder__h475854 ;
  assign dcsr_cause__h702636 =
	     (commitStage_commitTrap[36] &&
	      commitStage_commitTrap[35:32] == 4'd14) ?
	       3'd3 :
	       ((commitStage_commitTrap[36] &&
		 commitStage_commitTrap[35:32] != 4'd0 &&
		 commitStage_commitTrap[35:32] != 4'd1 &&
		 commitStage_commitTrap[35:32] != 4'd3 &&
		 commitStage_commitTrap[35:32] != 4'd4 &&
		 commitStage_commitTrap[35:32] != 4'd5 &&
		 commitStage_commitTrap[35:32] != 4'd7 &&
		 commitStage_commitTrap[35:32] != 4'd8 &&
		 commitStage_commitTrap[35:32] != 4'd9 &&
		 commitStage_commitTrap[35:32] != 4'd11 &&
		 commitStage_commitTrap[35:32] != 4'd14) ?
		  3'd4 :
		  3'd1) ;
  assign din_inc___2_exp__h381886 = _theResult___fst_exp__h354853 + 8'd1 ;
  assign din_inc___2_exp__h381910 = _theResult___fst_exp__h363509 + 8'd1 ;
  assign din_inc___2_exp__h381940 = _theResult___fst_exp__h372619 + 8'd1 ;
  assign din_inc___2_exp__h381964 = _theResult___fst_exp__h381304 + 8'd1 ;
  assign din_inc___2_exp__h427583 = _theResult___fst_exp__h400550 + 8'd1 ;
  assign din_inc___2_exp__h427607 = _theResult___fst_exp__h409206 + 8'd1 ;
  assign din_inc___2_exp__h427637 = _theResult___fst_exp__h418316 + 8'd1 ;
  assign din_inc___2_exp__h427661 = _theResult___fst_exp__h427001 + 8'd1 ;
  assign din_inc___2_exp__h473278 = _theResult___fst_exp__h446245 + 8'd1 ;
  assign din_inc___2_exp__h473302 = _theResult___fst_exp__h454901 + 8'd1 ;
  assign din_inc___2_exp__h473332 = _theResult___fst_exp__h464011 + 8'd1 ;
  assign din_inc___2_exp__h473356 = _theResult___fst_exp__h472696 + 8'd1 ;
  assign din_inc___2_exp__h521435 = _theResult___fst_exp__h502185 + 11'd1 ;
  assign din_inc___2_exp__h521470 = _theResult___fst_exp__h511762 + 11'd1 ;
  assign din_inc___2_exp__h521496 = _theResult___fst_exp__h520595 + 11'd1 ;
  assign din_inc___2_exp__h560288 = _theResult___fst_exp__h541038 + 11'd1 ;
  assign din_inc___2_exp__h560323 = _theResult___fst_exp__h550615 + 11'd1 ;
  assign din_inc___2_exp__h560349 = _theResult___fst_exp__h559448 + 11'd1 ;
  assign din_inc___2_exp__h599592 = _theResult___fst_exp__h580342 + 11'd1 ;
  assign din_inc___2_exp__h599627 = _theResult___fst_exp__h589919 + 11'd1 ;
  assign din_inc___2_exp__h599653 = _theResult___fst_exp__h598752 + 11'd1 ;
  assign enabled_ints___1__h652304 = pend_ints__h651777 & y__h652316 ;
  assign enabled_ints__h652350 =
	     pend_ints__h651777 &
	     { r1__read_BITS_13_TO_0___h652326, csrf_mideleg_1_0_reg } ;
  assign f1_exp82797_MINUS_127__q128 = f1_exp__h482797 - 8'd127 ;
  assign f1_exp__h482797 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
	      32'hFFFFFFFF) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[162:155] :
	       8'd255 ;
  assign f1_sfd__h482798 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
	      32'hFFFFFFFF) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[154:132] :
	       23'd4194304 ;
  assign f2_exp21791_MINUS_127__q168 = f2_exp__h521791 - 8'd127 ;
  assign f2_exp__h521791 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
	      32'hFFFFFFFF) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[98:91] :
	       8'd255 ;
  assign f2_sfd__h521792 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
	      32'hFFFFFFFF) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[90:68] :
	       23'd4194304 ;
  assign f3_exp61095_MINUS_127__q145 = f3_exp__h561095 - 8'd127 ;
  assign f3_exp__h561095 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] == 32'hFFFFFFFF) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[34:27] :
	       8'd255 ;
  assign f3_sfd__h561096 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] == 32'hFFFFFFFF) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[26:4] :
	       23'd4194304 ;
  assign f_csr_rsps_i_notFull__5339_AND_f_csr_reqs_firs_ETC___d15442 =
	     f_csr_rsps$FULL_N &&
	     (f_csr_reqs$D_OUT[75:64] != 12'd2049 ||
	      csrf_stats_module_writeQ$FULL_N) &&
	     (f_csr_reqs$D_OUT[75:64] != 12'd2048 ||
	      csrf_terminate_module_terminateQ$FULL_N) ;
  assign fcsr_csr__read__h610032 = { 56'd0, x__h613690 } ;
  assign fetchStage_RDY_pipelines_0_first__2813_AND_fet_ETC___d13573 =
	     fetchStage$RDY_pipelines_0_first &&
	     fetchStage$pipelines_1_first[194:192] == 3'd1 &&
	     regRenamingTable_rename_0_canRename__3475_AND__ETC___d13568 ||
	     !fetchStage$pipelines_0_canDeq ||
	     fetchStage$RDY_pipelines_0_first &&
	     IF_fetchStage_RDY_pipelines_0_first__2813_AND__ETC___d13507 ;
  assign fetchStage_RDY_pipelines_1_deq__2828_AND_NOT_f_ETC___d14155 =
	     fetchStage$RDY_pipelines_1_deq &&
	     (!fetchStage$pipelines_0_canDeq ||
	      NOT_specTagManager_canClaim__3473_3567_OR_NOT__ETC___d14151) &&
	     (fetchStage$pipelines_1_first[194:192] != 3'd1 ||
	      specTagManager$RDY_claimSpecTag) ;
  assign fetchStage_pipelines_0_canDeq__2814_AND_NOT_fe_ETC___d14093 =
	     fetchStage$pipelines_0_canDeq &&
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$canClaim) &&
	     regRenamingTable_rename_0_canRename__3475_AND__ETC___d13564 &&
	     fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d13817 ||
	     !coreFix_aluExe_0_rsAlu$canEnq ||
	     (!fetchStage$pipelines_0_canDeq ||
	      fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d14089) &&
	     coreFix_aluExe_1_rsAlu$canEnq &&
	     !coreFix_aluExe_0_rsAlu_approximateCount__3515__ETC___d13517 ;
  assign fetchStage_pipelines_0_canDeq__2814_AND_NOT_fe_ETC___d14177 =
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d14174 &&
	     (fetchStage$pipelines_0_first[194:192] == 3'd0 ||
	      fetchStage$pipelines_0_first[194:192] == 3'd1) &&
	     SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3510_co_ETC___d13544 ;
  assign fetchStage_pipelines_0_canDeq__2814_AND_NOT_fe_ETC___d14252 =
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d14174 &&
	     fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d13817 ||
	     !coreFix_aluExe_0_rsAlu$canEnq ;
  assign fetchStage_pipelines_0_canDeq__2814_AND_NOT_fe_ETC___d14392 =
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d14174 &&
	     IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13541 &&
	     csrf_rg_dcsr[2] ;
  assign fetchStage_pipelines_0_canDeq__2814_AND_fetchS_ETC___d14165 =
	     fetchStage$pipelines_0_canDeq &&
	     fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d14038 ||
	     !fetchStage$pipelines_1_canDeq ||
	     fetchStage$RDY_pipelines_1_first &&
	     (fetchStage_pipelines_1_first__2825_BITS_194_TO_ETC___d14049 ||
	      !regRenamingTable$rename_1_canRename ||
	      fetchStage_pipelines_1_first__2825_BITS_199_TO_ETC___d14060 ||
	      IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d14161) &&
	     IF_fetchStage_RDY_pipelines_1_first__2824_AND__ETC___d13979 ;
  assign fetchStage_pipelines_0_canDeq__2814_AND_regRen_ETC___d14099 =
	     fetchStage$pipelines_0_canDeq &&
	     regRenamingTable_rename_0_canRename__3475_AND__ETC___d13564 &&
	     (fetchStage$pipelines_0_first[194:192] == 3'd3 ||
	      fetchStage$pipelines_0_first[194:192] == 3'd4) ;
  assign fetchStage_pipelines_0_canDeq__2814_AND_regRen_ETC___d14106 =
	     fetchStage$pipelines_0_canDeq &&
	     regRenamingTable_rename_0_canRename__3475_AND__ETC___d13564 &&
	     fetchStage$pipelines_0_first[194:192] == 3'd2 &&
	     IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13536 ||
	     !coreFix_memExe_rsMem$canEnq ||
	     CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q229 ;
  assign fetchStage_pipelines_0_canDeq__2814_AND_regRen_ETC___d14129 =
	     fetchStage_pipelines_0_canDeq__2814_AND_regRen_ETC___d14099 ||
	     !coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq ||
	     fetchStage$pipelines_0_canDeq &&
	     fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d14122 ;
  assign fetchStage_pipelines_0_canDeq__2814_AND_regRen_ETC___d14371 =
	     fetchStage$pipelines_0_canDeq &&
	     regRenamingTable_rename_0_canRename__3475_AND__ETC___d14369 ||
	     !coreFix_memExe_rsMem$canEnq ||
	     CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q229 ;
  assign fetchStage_pipelines_0_canDeq__2814_AND_specTa_ETC___d14229 =
	     fetchStage$pipelines_0_canDeq && specTagManager$canClaim &&
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d13067[4] &&
	     rob$enqPort_0_canEnq &&
	     IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13541 &&
	     fetchStage$pipelines_0_first[194:192] == 3'd1 ;
  assign fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d13097 =
	     (fetchStage$pipelines_0_first[194:192] == 3'd0 &&
	      fetchStage$pipelines_0_first[178:174] == 5'd15 ||
	      rs1__h655989 != 5'd0 ||
	      imm__h655990 != 32'd0) &&
	     csr_addr__h655988[11:10] == 2'b11 ;
  assign fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d13817 =
	     (fetchStage$pipelines_0_first[194:192] == 3'd0 ||
	      fetchStage$pipelines_0_first[194:192] == 3'd1) &&
	     SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3510_co_ETC___d13544 &&
	     (!coreFix_aluExe_1_rsAlu$canEnq ||
	      coreFix_aluExe_0_rsAlu_approximateCount__3515__ETC___d13517) ;
  assign fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d13916 =
	     fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	     !specTagManager$canClaim ||
	     renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_f_ETC___d13912 ;
  assign fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d14030 =
	     fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	     !specTagManager$canClaim ||
	     !regRenamingTable$rename_0_canRename ||
	     renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_f_ETC___d13994 ||
	     IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14019 &&
	     IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14028 ;
  assign fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d14038 =
	     fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	     !specTagManager$canClaim ||
	     !regRenamingTable$rename_0_canRename ||
	     renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_f_ETC___d13994 ||
	     IF_IF_fetchStage_pipelines_0_first__2816_BITS__ETC___d14037 ;
  assign fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d14055 =
	     fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	     !specTagManager$canClaim ||
	     !regRenamingTable$rename_0_canRename ||
	     fetchStage$pipelines_0_first[68] ||
	     checkForException___d13067[4] ||
	     !rob$enqPort_0_canEnq ||
	     IF_IF_fetchStage_pipelines_0_first__2816_BITS__ETC___d14037 ;
  assign fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d14066 =
	     fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	     !specTagManager$canClaim ||
	     NOT_regRenamingTable_rename_0_canRename__3475__ETC___d13833 ||
	     fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	     fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	     !SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3510_co_ETC___d13544 ||
	     coreFix_aluExe_1_rsAlu$canEnq &&
	     !coreFix_aluExe_0_rsAlu_approximateCount__3515__ETC___d13517 ;
  assign fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d14073 =
	     fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	     !specTagManager$canClaim ||
	     NOT_regRenamingTable_rename_0_canRename__3475__ETC___d13833 ||
	     fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	     fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	     !SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3510_co_ETC___d13544 ||
	     coreFix_aluExe_0_rsAlu$canEnq &&
	     coreFix_aluExe_0_rsAlu_approximateCount__3515__ETC___d13517 ;
  assign fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d14089 =
	     fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	     !specTagManager$canClaim ||
	     !regRenamingTable$rename_0_canRename ||
	     fetchStage_pipelines_0_first__2816_BITS_199_TO_ETC___d13583 ||
	     fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	     fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	     !SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3510_co_ETC___d13544 ;
  assign fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d14122 =
	     fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	     !specTagManager$canClaim ||
	     NOT_regRenamingTable_rename_0_canRename__3475__ETC___d13909 ||
	     (IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13541 ?
		csrf_rg_dcsr[2] ||
		IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14119 :
		IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14119) ;
  assign fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d14135 =
	     fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	     !specTagManager$canClaim ||
	     NOT_regRenamingTable_rename_0_canRename__3475__ETC___d13909 ||
	     (IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13541 ?
		csrf_rg_dcsr[2] ||
		IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14132 :
		IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14132) ;
  assign fetchStage_pipelines_0_first__2816_BITS_199_TO_ETC___d13583 =
	     fetchStage$pipelines_0_first[199:195] == 5'd0 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd21 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd17 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd18 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd13 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd16 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd15 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd19 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd20 ||
	     renameStage_rg_m_halt_req[4] ||
	     fetchStage$pipelines_0_first[68] ||
	     checkForException___d13067[4] ||
	     csrf_fs_reg_read__1604_EQ_0_3056_AND_fetchStag_ETC___d13576 ||
	     !rob$enqPort_0_canEnq ||
	     !epochManager$checkEpoch_0_check ;
  assign fetchStage_pipelines_0_first__2816_BIT_173_294_ETC___d13469 =
	     { fetchStage$pipelines_0_first[173],
	       IF_fetchStage_pipelines_0_first__2816_BITS_172_ETC___d13032,
	       73'h1280000000000000000,
	       fetchStage$pipelines_0_first[321:258],
	       5'd0,
	       (fetchStage$pipelines_0_first[173] &&
		fetchStage$pipelines_0_first[199:195] == 5'd13 &&
		(fetchStage$pipelines_0_first[172:161] == 12'd1 ||
		 fetchStage$pipelines_0_first[172:161] == 12'd2 ||
		 fetchStage$pipelines_0_first[172:161] == 12'd3)) ?
		 fetchStage$pipelines_0_first[194:192] == 3'd0 &&
		 fetchStage$pipelines_0_first[178:174] == 5'd15 ||
		 (!fetchStage$pipelines_0_first[88] ||
		  fetchStage$pipelines_0_first[87] ||
		  fetchStage$pipelines_0_first[86:82] != 5'd0) &&
		 (!fetchStage$pipelines_0_first[160] ||
		  fetchStage$pipelines_0_first[159:128] != 32'd0) :
		 fetchStage$pipelines_0_first[75] &&
		 fetchStage$pipelines_0_first[74],
	       fetchStage$pipelines_0_first[194:192] != 3'd0,
	       11'h521,
	       specTagManager$currentSpecBits } ;
  assign fetchStage_pipelines_0_first__2816_BIT_68_2845_ETC___d13907 =
	     fetchStage$pipelines_0_first[68] ||
	     checkForException___d13067[4] ||
	     csrf_fs_reg_read__1604_EQ_0_3056_AND_fetchStag_ETC___d13576 ||
	     !rob$enqPort_0_canEnq ||
	     !epochManager$checkEpoch_0_check ;
  assign fetchStage_pipelines_1_first__2825_BITS_194_TO_ETC___d14049 =
	     fetchStage$pipelines_1_first[194:192] == 3'd1 &&
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__3475_AND__ETC___d14046 ||
	      !specTagManager$canClaim) ;
  assign fetchStage_pipelines_1_first__2825_BITS_199_TO_ETC___d14060 =
	     fetchStage$pipelines_1_first[199:195] == 5'd0 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd21 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd17 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd18 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd13 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd16 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd15 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd19 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd20 ||
	     renameStage_rg_m_halt_req[4] ||
	     fetchStage$pipelines_1_first[68] ||
	     checkForException___d13772[4] ||
	     csrf_fs_reg_read__1604_EQ_0_3056_AND_fetchStag_ETC___d13863 ||
	     !rob$enqPort_1_canEnq ||
	     !epochManager$checkEpoch_1_check ||
	     fetchStage$pipelines_0_canDeq &&
	     fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d14055 ;
  assign fetchStage_pipelines_1_first__2825_BIT_173_365_ETC___d13750 =
	     { fetchStage$pipelines_1_first[173],
	       CASE_fetchStagepipelines_1_first_BITS_172_TO__ETC__q227 } ;
  assign fflags__h716903 =
	     NOT_rob_deqPort_0_canDeq__5016_5017_OR_rob_deq_ETC___d15203 ?
	       y_avValue_snd_fst__h716963 :
	       IF_rob_deqPort_0_canDeq__5016_THEN_IF_NOT_rob__ETC___d15210 ;
  assign fflags_csr__read__h610007 = { 59'd0, csrf_fflags_reg } ;
  assign frm_csr__read__h610018 = { 61'd0, csrf_frm_reg } ;
  assign guard__h346752 =
	     { IF_sfdin54847_BIT_33_THEN_2_ELSE_0__q21[1],
	       { sfdin__h354847[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h355461 =
	     { IF_theResult___snd63460_BIT_33_THEN_2_ELSE_0__q23[1],
	       { _theResult___snd__h363460[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h364391 =
	     { IF_sfdin72613_BIT_33_THEN_2_ELSE_0__q31[1],
	       { sfdin__h372613[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h364989 = x__h365091 != 57'd0 ;
  assign guard__h373227 =
	     { IF_theResult___snd81250_BIT_33_THEN_2_ELSE_0__q36[1],
	       { _theResult___snd__h381250[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h392451 =
	     { IF_sfdin00544_BIT_33_THEN_2_ELSE_0__q56[1],
	       { sfdin__h400544[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h401158 =
	     { IF_theResult___snd09157_BIT_33_THEN_2_ELSE_0__q58[1],
	       { _theResult___snd__h409157[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h410088 =
	     { IF_sfdin18310_BIT_33_THEN_2_ELSE_0__q66[1],
	       { sfdin__h418310[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h410686 = x__h410788 != 57'd0 ;
  assign guard__h418924 =
	     { IF_theResult___snd26947_BIT_33_THEN_2_ELSE_0__q71[1],
	       { _theResult___snd__h426947[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h438146 =
	     { IF_sfdin46239_BIT_33_THEN_2_ELSE_0__q91[1],
	       { sfdin__h446239[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h446853 =
	     { IF_theResult___snd54852_BIT_33_THEN_2_ELSE_0__q93[1],
	       { _theResult___snd__h454852[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h455783 =
	     { IF_sfdin64005_BIT_33_THEN_2_ELSE_0__q101[1],
	       { sfdin__h464005[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h456381 = x__h456483 != 57'd0 ;
  assign guard__h464619 =
	     { IF_theResult___snd72642_BIT_33_THEN_2_ELSE_0__q106[1],
	       { _theResult___snd__h472642[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h494224 =
	     { IF_theResult___snd02136_BIT_4_THEN_2_ELSE_0__q127[1],
	       { _theResult___snd__h502136[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h503536 =
	     { IF_sfdin11756_BIT_4_THEN_2_ELSE_0__q131[1],
	       { sfdin__h511756[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h504134 = x__h504234 != 57'd0 ;
  assign guard__h512605 =
	     { IF_theResult___snd20541_BIT_4_THEN_2_ELSE_0__q134[1],
	       { _theResult___snd__h520541[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h533077 =
	     { IF_theResult___snd40989_BIT_4_THEN_2_ELSE_0__q167[1],
	       { _theResult___snd__h540989[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h542389 =
	     { IF_sfdin50609_BIT_4_THEN_2_ELSE_0__q171[1],
	       { sfdin__h550609[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h542987 = x__h543087 != 57'd0 ;
  assign guard__h551458 =
	     { IF_theResult___snd59394_BIT_4_THEN_2_ELSE_0__q174[1],
	       { _theResult___snd__h559394[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h572381 =
	     { IF_theResult___snd80293_BIT_4_THEN_2_ELSE_0__q144[1],
	       { _theResult___snd__h580293[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h581693 =
	     { IF_sfdin89913_BIT_4_THEN_2_ELSE_0__q148[1],
	       { sfdin__h589913[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h582291 = x__h582391 != 57'd0 ;
  assign guard__h590762 =
	     { IF_theResult___snd98698_BIT_4_THEN_2_ELSE_0__q151[1],
	       { _theResult___snd__h598698[3:0], 52'd0 } != 56'd0 } ;
  assign hartid__h1022 = { 63'd0, coreId } ;
  assign idx__h684456 =
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d13818 ||
	     !coreFix_aluExe_0_rsAlu$canEnq ||
	     NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d13842 ;
  assign imm__h655990 =
	     fetchStage$pipelines_0_first[160] ?
	       fetchStage$pipelines_0_first[159:128] :
	       32'd0 ;
  assign k__h669550 =
	     !coreFix_aluExe_0_rsAlu$canEnq ||
	     coreFix_aluExe_1_rsAlu$canEnq &&
	     !coreFix_aluExe_0_rsAlu_approximateCount__3515__ETC___d13517 ;
  assign mcause_csr__read__h611674 =
	     { r1__read__h615153, csrf_mcause_code_reg } ;
  assign mcounteren_csr__read__h611419 =
	     { r1__read__h615140, csrf_mcounteren_cy_reg } ;
  assign medeleg_csr__read__h611026 =
	     { r1__read__h615001, csrf_medeleg_9_0_reg } ;
  assign mideleg_csr__read__h611121 =
	     { r1__read__h615018, csrf_mideleg_1_0_reg } ;
  assign mie_csr__read__h611245 = { r1__read__h615042, 1'b0 } ;
  assign mip_csr__read__h611907 = { r1__read__h615159, 1'b0 } ;
  assign mmio_cRqQ_enqReq_dummy2_2_read__32_AND_IF_mmio_ETC___d444 =
	     mmio_cRqQ_enqReq_dummy2_2$Q_OUT &&
	     IF_mmio_cRqQ_enqReq_lat_1_whas__30_THEN_mmio_c_ETC___d339 ||
	     (!mmio_cRqQ_deqReq_dummy2_2$Q_OUT ||
	      !EN_mmioToPlatform_cRq_deq && !mmio_cRqQ_deqReq_rl) &&
	     mmio_cRqQ_full ;
  assign mmio_cRsQ_enqReq_dummy2_2_read__78_AND_IF_mmio_ETC___d890 =
	     mmio_cRsQ_enqReq_dummy2_2$Q_OUT &&
	     IF_mmio_cRsQ_enqReq_lat_1_whas__28_THEN_mmio_c_ETC___d837 ||
	     (!mmio_cRsQ_deqReq_dummy2_2$Q_OUT ||
	      !EN_mmioToPlatform_cRs_deq && !mmio_cRsQ_deqReq_rl) &&
	     mmio_cRsQ_full ;
  assign mmio_dataPendQ_enqReq_dummy2_2_read__00_AND_IF_ETC___d312 =
	     mmio_dataPendQ_enqReq_dummy2_2$Q_OUT &&
	     (mmio_dataPendQ_enqReq_lat_0$whas || mmio_dataPendQ_enqReq_rl) ||
	     (!mmio_dataPendQ_deqReq_dummy2_2$Q_OUT ||
	      !mmio_dataRespQ_deqReq_lat_0$whas &&
	      !mmio_dataPendQ_deqReq_rl) &&
	     mmio_dataPendQ_full ;
  assign mmio_dataReqQ_enqReq_dummy2_2_read__41_AND_IF__ETC___d153 =
	     mmio_dataReqQ_enqReq_dummy2_2$Q_OUT &&
	     IF_mmio_dataReqQ_enqReq_lat_1_whas__7_THEN_mmi_ETC___d46 ||
	     (!mmio_dataReqQ_deqReq_dummy2_2$Q_OUT ||
	      !CAN_FIRE_RL_mmio_sendDataReq && !mmio_dataReqQ_deqReq_rl) &&
	     mmio_dataReqQ_full ;
  assign mmio_dataRespQ_enqReq_dummy2_2_read__42_AND_IF_ETC___d254 =
	     mmio_dataRespQ_enqReq_dummy2_2$Q_OUT &&
	     IF_mmio_dataRespQ_enqReq_lat_1_whas__92_THEN_m_ETC___d201 ||
	     (!mmio_dataRespQ_deqReq_dummy2_2$Q_OUT ||
	      !mmio_dataRespQ_deqReq_lat_0$whas &&
	      !mmio_dataRespQ_deqReq_rl) &&
	     mmio_dataRespQ_full ;
  assign mmio_pRqQ_empty_07_AND_epochManager_checkEpoch_ETC___d13114 =
	     mmio_pRqQ_empty && epochManager$checkEpoch_0_check &&
	     (renameStage_rg_m_halt_req[4] ||
	      fetchStage$pipelines_0_first[68] ||
	      IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d13111) ;
  assign mmio_pRqQ_empty_07_AND_epochManager_checkEpoch_ETC___d13405 =
	     mmio_pRqQ_empty && epochManager$checkEpoch_0_check &&
	     !renameStage_rg_m_halt_req[4] &&
	     !fetchStage$pipelines_0_first[68] &&
	     NOT_IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_284_ETC___d13402 ;
  assign mmio_pRqQ_empty_07_AND_epochManager_checkEpoch_ETC___d13423 =
	     mmio_pRqQ_empty_07_AND_epochManager_checkEpoch_ETC___d13405 &&
	     (fetchStage$pipelines_0_first[199:195] == 5'd0 ||
	      fetchStage$pipelines_0_first[199:195] == 5'd21 ||
	      fetchStage$pipelines_0_first[199:195] == 5'd17 ||
	      fetchStage$pipelines_0_first[199:195] == 5'd18 ||
	      fetchStage$pipelines_0_first[199:195] == 5'd13 ||
	      fetchStage$pipelines_0_first[199:195] == 5'd16 ||
	      fetchStage$pipelines_0_first[199:195] == 5'd15 ||
	      fetchStage$pipelines_0_first[199:195] == 5'd19 ||
	      fetchStage$pipelines_0_first[199:195] == 5'd20) &&
	     rob$isEmpty ;
  assign mmio_pRqQ_empty_07_AND_epochManager_checkEpoch_ETC___d14169 =
	     mmio_pRqQ_empty && epochManager$checkEpoch_0_check &&
	     !renameStage_rg_m_halt_req[4] &&
	     !fetchStage$pipelines_0_first[68] &&
	     NOT_IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_284_ETC___d13494 ;
  assign mmio_pRqQ_empty_07_AND_epochManager_checkEpoch_ETC___d14171 =
	     mmio_pRqQ_empty_07_AND_epochManager_checkEpoch_ETC___d14169 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd0 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd21 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd17 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd18 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd13 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd16 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd15 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd19 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd20 &&
	     rg_core_run_state == 2'd2 ;
  assign mmio_pRqQ_enqReq_dummy2_2_read__89_AND_IF_mmio_ETC___d801 =
	     mmio_pRqQ_enqReq_dummy2_2$Q_OUT &&
	     IF_mmio_pRqQ_enqReq_lat_1_whas__87_THEN_mmio_p_ETC___d696 ||
	     (!mmio_pRqQ_deqReq_dummy2_2$Q_OUT ||
	      !CAN_FIRE_RL_mmio_handlePRq && !mmio_pRqQ_deqReq_rl) &&
	     mmio_pRqQ_full ;
  assign mmio_pRsQ_enqReq_dummy2_2_read__40_AND_IF_mmio_ETC___d652 =
	     mmio_pRsQ_enqReq_dummy2_2$Q_OUT &&
	     IF_mmio_pRsQ_enqReq_lat_1_whas__82_THEN_mmio_p_ETC___d491 ||
	     (!mmio_pRsQ_deqReq_dummy2_2$Q_OUT ||
	      !mmio_pRsQ_deqReq_lat_0$whas && !mmio_pRsQ_deqReq_rl) &&
	     mmio_pRsQ_full ;
  assign mstatus_csr__read__h610878 = { r1__read__h614876, csrf_ie_vec_0 } ;
  assign mtvec_csr__read__h611327 =
	     { r1__read__h615135, csrf_mtvec_mode_low_reg } ;
  assign n___1__h199191 =
	     { coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[78] ?
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[70:63] :
		 x__h197788[63:56],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[77] ?
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[62:55] :
		 x__h197788[55:48],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[76] ?
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[54:47] :
		 x__h197788[47:40],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[75] ?
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[46:39] :
		 x__h197788[39:32],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[74] ?
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[38:31] :
		 x__h197788[31:24],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[73] ?
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[30:23] :
		 x__h197788[23:16],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[72] ?
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[22:15] :
		 x__h197788[15:8],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[71] ?
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[14:7] :
		 x__h197788[7:0] } ;
  assign n__read__h612011 =
	     (csrf_mcycle_ehr_data_dummy2_0$Q_OUT &&
	      csrf_mcycle_ehr_data_dummy2_1$Q_OUT) ?
	       csrf_mcycle_ehr_data_rl :
	       64'd0 ;
  assign n__read__h612202 =
	     (csrf_minstret_ehr_data_dummy2_0$Q_OUT &&
	      csrf_minstret_ehr_data_dummy2_1$Q_OUT) ?
	       csrf_minstret_ehr_data_rl :
	       64'd0 ;
  assign n__read__h6486 =
	     csrf_mcycle_ehr_data_dummy2_1$Q_OUT ?
	       (csrf_mcycle_ehr_data_lat_0$whas ?
		  upd__h6600 :
		  csrf_mcycle_ehr_data_rl) :
	       64'd0 ;
  assign n__read__h714440 =
	     csrf_minstret_ehr_data_dummy2_1$Q_OUT ?
	       IF_csrf_minstret_ehr_data_lat_0_whas_THEN_csrf_ETC___d8 :
	       64'd0 ;
  assign next_deqP___1__h297457 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP ==
	      3'd7) ?
	       3'd0 :
	       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP +
	       3'd1 ;
  assign next_deqP___1__h305453 =
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP + 1'd1 ;
  assign next_deqP___1__h311734 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP + 1'd1 ;
  assign next_deqP___1__h319588 =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP + 1'd1 ;
  assign next_deqP___1__h329645 = coreFix_memExe_memRespLdQ_deqP + 1'd1 ;
  assign next_deqP___1__h332870 = coreFix_memExe_forwardQ_deqP + 1'd1 ;
  assign next_pc__h713755 =
	     (rob$deqPort_0_deq_data[87:86] == 2'd0) ?
	       rob$deqPort_0_deq_data[85:22] :
	       rob$deqPort_0_deq_data[343:280] + 64'd4 ;
  assign out___1_sfd__h482861 = { f1_sfd__h482798, 29'd0 } ;
  assign out___1_sfd__h521855 = { f2_sfd__h521792, 29'd0 } ;
  assign out___1_sfd__h561159 = { f3_sfd__h561096, 29'd0 } ;
  assign out_exp__h355372 =
	     sfdin__h354847[34] ?
	       _theResult___exp__h355369 :
	       _theResult___fst_exp__h354853 ;
  assign out_exp__h363954 =
	     _theResult___snd__h363460[34] ?
	       _theResult___exp__h363951 :
	       _theResult___fst_exp__h363509 ;
  assign out_exp__h373138 =
	     sfdin__h372613[34] ?
	       _theResult___exp__h373135 :
	       _theResult___fst_exp__h372619 ;
  assign out_exp__h381774 =
	     _theResult___snd__h381250[34] ?
	       _theResult___exp__h381771 :
	       _theResult___fst_exp__h381304 ;
  assign out_exp__h401069 =
	     sfdin__h400544[34] ?
	       _theResult___exp__h401066 :
	       _theResult___fst_exp__h400550 ;
  assign out_exp__h409651 =
	     _theResult___snd__h409157[34] ?
	       _theResult___exp__h409648 :
	       _theResult___fst_exp__h409206 ;
  assign out_exp__h418835 =
	     sfdin__h418310[34] ?
	       _theResult___exp__h418832 :
	       _theResult___fst_exp__h418316 ;
  assign out_exp__h427471 =
	     _theResult___snd__h426947[34] ?
	       _theResult___exp__h427468 :
	       _theResult___fst_exp__h427001 ;
  assign out_exp__h446764 =
	     sfdin__h446239[34] ?
	       _theResult___exp__h446761 :
	       _theResult___fst_exp__h446245 ;
  assign out_exp__h455346 =
	     _theResult___snd__h454852[34] ?
	       _theResult___exp__h455343 :
	       _theResult___fst_exp__h454901 ;
  assign out_exp__h464530 =
	     sfdin__h464005[34] ?
	       _theResult___exp__h464527 :
	       _theResult___fst_exp__h464011 ;
  assign out_exp__h473166 =
	     _theResult___snd__h472642[34] ?
	       _theResult___exp__h473163 :
	       _theResult___fst_exp__h472696 ;
  assign out_exp__h502843 =
	     _theResult___snd__h502136[5] ?
	       _theResult___exp__h502840 :
	       _theResult___fst_exp__h502185 ;
  assign out_exp__h512494 =
	     sfdin__h511756[5] ?
	       _theResult___exp__h512491 :
	       _theResult___fst_exp__h511762 ;
  assign out_exp__h521278 =
	     _theResult___snd__h520541[5] ?
	       _theResult___exp__h521275 :
	       _theResult___fst_exp__h520595 ;
  assign out_exp__h541696 =
	     _theResult___snd__h540989[5] ?
	       _theResult___exp__h541693 :
	       _theResult___fst_exp__h541038 ;
  assign out_exp__h551347 =
	     sfdin__h550609[5] ?
	       _theResult___exp__h551344 :
	       _theResult___fst_exp__h550615 ;
  assign out_exp__h560131 =
	     _theResult___snd__h559394[5] ?
	       _theResult___exp__h560128 :
	       _theResult___fst_exp__h559448 ;
  assign out_exp__h581000 =
	     _theResult___snd__h580293[5] ?
	       _theResult___exp__h580997 :
	       _theResult___fst_exp__h580342 ;
  assign out_exp__h590651 =
	     sfdin__h589913[5] ?
	       _theResult___exp__h590648 :
	       _theResult___fst_exp__h589919 ;
  assign out_exp__h599435 =
	     _theResult___snd__h598698[5] ?
	       _theResult___exp__h599432 :
	       _theResult___fst_exp__h598752 ;
  assign out_f_exp__h382150 =
	     (_theResult___exp__h381873 == 8'd255 &&
	      _theResult___sfd__h381874 != 23'd0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd2047) ?
	       8'd255 :
	       _theResult___fst_exp__h381864 ;
  assign out_f_exp__h427847 =
	     (_theResult___exp__h427570 == 8'd255 &&
	      _theResult___sfd__h427571 != 23'd0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd2047) ?
	       8'd255 :
	       _theResult___fst_exp__h427561 ;
  assign out_f_exp__h473542 =
	     (_theResult___exp__h473265 == 8'd255 &&
	      _theResult___sfd__h473266 != 23'd0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd2047) ?
	       8'd255 :
	       _theResult___fst_exp__h473256 ;
  assign out_f_sfd__h382151 =
	     (_theResult___exp__h381873 == 8'd255 &&
	      _theResult___sfd__h381874 != 23'd0) ?
	       23'd4194304 :
	       _theResult___sfd__h381874 ;
  assign out_f_sfd__h427848 =
	     (_theResult___exp__h427570 == 8'd255 &&
	      _theResult___sfd__h427571 != 23'd0) ?
	       23'd4194304 :
	       _theResult___sfd__h427571 ;
  assign out_f_sfd__h473543 =
	     (_theResult___exp__h473265 == 8'd255 &&
	      _theResult___sfd__h473266 != 23'd0) ?
	       23'd4194304 :
	       _theResult___sfd__h473266 ;
  assign out_sfd__h355373 =
	     sfdin__h354847[34] ?
	       _theResult___sfd__h355370 :
	       sfdin__h354847[56:34] ;
  assign out_sfd__h363955 =
	     _theResult___snd__h363460[34] ?
	       _theResult___sfd__h363952 :
	       _theResult___snd__h363460[56:34] ;
  assign out_sfd__h373139 =
	     sfdin__h372613[34] ?
	       _theResult___sfd__h373136 :
	       sfdin__h372613[56:34] ;
  assign out_sfd__h381775 =
	     _theResult___snd__h381250[34] ?
	       _theResult___sfd__h381772 :
	       _theResult___snd__h381250[56:34] ;
  assign out_sfd__h401070 =
	     sfdin__h400544[34] ?
	       _theResult___sfd__h401067 :
	       sfdin__h400544[56:34] ;
  assign out_sfd__h409652 =
	     _theResult___snd__h409157[34] ?
	       _theResult___sfd__h409649 :
	       _theResult___snd__h409157[56:34] ;
  assign out_sfd__h418836 =
	     sfdin__h418310[34] ?
	       _theResult___sfd__h418833 :
	       sfdin__h418310[56:34] ;
  assign out_sfd__h427472 =
	     _theResult___snd__h426947[34] ?
	       _theResult___sfd__h427469 :
	       _theResult___snd__h426947[56:34] ;
  assign out_sfd__h446765 =
	     sfdin__h446239[34] ?
	       _theResult___sfd__h446762 :
	       sfdin__h446239[56:34] ;
  assign out_sfd__h455347 =
	     _theResult___snd__h454852[34] ?
	       _theResult___sfd__h455344 :
	       _theResult___snd__h454852[56:34] ;
  assign out_sfd__h464531 =
	     sfdin__h464005[34] ?
	       _theResult___sfd__h464528 :
	       sfdin__h464005[56:34] ;
  assign out_sfd__h473167 =
	     _theResult___snd__h472642[34] ?
	       _theResult___sfd__h473164 :
	       _theResult___snd__h472642[56:34] ;
  assign out_sfd__h502844 =
	     _theResult___snd__h502136[5] ?
	       _theResult___sfd__h502841 :
	       _theResult___snd__h502136[56:5] ;
  assign out_sfd__h512495 =
	     sfdin__h511756[5] ?
	       _theResult___sfd__h512492 :
	       sfdin__h511756[56:5] ;
  assign out_sfd__h521279 =
	     _theResult___snd__h520541[5] ?
	       _theResult___sfd__h521276 :
	       _theResult___snd__h520541[56:5] ;
  assign out_sfd__h541697 =
	     _theResult___snd__h540989[5] ?
	       _theResult___sfd__h541694 :
	       _theResult___snd__h540989[56:5] ;
  assign out_sfd__h551348 =
	     sfdin__h550609[5] ?
	       _theResult___sfd__h551345 :
	       sfdin__h550609[56:5] ;
  assign out_sfd__h560132 =
	     _theResult___snd__h559394[5] ?
	       _theResult___sfd__h560129 :
	       _theResult___snd__h559394[56:5] ;
  assign out_sfd__h581001 =
	     _theResult___snd__h580293[5] ?
	       _theResult___sfd__h580998 :
	       _theResult___snd__h580293[56:5] ;
  assign out_sfd__h590652 =
	     sfdin__h589913[5] ?
	       _theResult___sfd__h590649 :
	       sfdin__h589913[56:5] ;
  assign out_sfd__h599436 =
	     _theResult___snd__h598698[5] ?
	       _theResult___sfd__h599433 :
	       _theResult___snd__h598698[56:5] ;
  assign pend_ints__h651777 =
	     { _0_CONCAT_csrf_external_int_en_vec_3_read__1722_ETC___d12857,
	       csrf_software_int_en_vec_3 & csrf_software_int_pend_vec_3,
	       1'd0,
	       csrf_software_int_en_vec_1 & csrf_software_int_pend_vec_1,
	       1'd0 } ;
  assign prv__h718418 = csrf_prv_reg ;
  assign prv__h718462 = csrf_mprv_reg ? csrf_mpp_reg : csrf_prv_reg ;
  assign q___1__h476538 =
	     64'd0 -
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$m_axis_dout_tdata[127:64] ;
  assign r1__read_BITS_13_TO_0___h652326 =
	     { 4'd0,
	       csrf_mideleg_11_reg,
	       1'b0,
	       csrf_mideleg_9_7_reg,
	       1'b0,
	       csrf_mideleg_5_3_reg,
	       1'b0 } ;
  assign r1__read_BITS_13_TO_12___h655858 = csrf_fs_reg ;
  assign r1__read_BIT_20___h656554 = csrf_tw_reg ;
  assign r1__read__h613705 = { r1__read__h613707, csrf_ie_vec_1 } ;
  assign r1__read__h613707 = { r1__read__h613709, 2'b0 } ;
  assign r1__read__h613709 = { r1__read__h613711, csrf_prev_ie_vec_0 } ;
  assign r1__read__h613711 = { r1__read__h613713, csrf_prev_ie_vec_1 } ;
  assign r1__read__h613713 = { r1__read__h613715, 2'b0 } ;
  assign r1__read__h613715 = { r1__read__h613717, csrf_spp_reg } ;
  assign r1__read__h613717 = { r1__read__h613719, 4'b0 } ;
  assign r1__read__h613719 = { r1__read__h613721, csrf_fs_reg } ;
  assign r1__read__h613721 = { r1__read__h613723, 2'd0 } ;
  assign r1__read__h613723 = { r1__read__h613725, 1'b0 } ;
  assign r1__read__h613725 = { r1__read__h613727, csrf_sum_reg } ;
  assign r1__read__h613727 = { r1__read__h613729, csrf_mxr_reg } ;
  assign r1__read__h613729 = { r1__read__h613731, 12'b0 } ;
  assign r1__read__h613731 = { r1__read__h613733, 2'b10 } ;
  assign r1__read__h613733 = { r__h613737, 29'b0 } ;
  assign r1__read__h614109 =
	     { r1__read__h614111, csrf_software_int_en_vec_1 } ;
  assign r1__read__h614111 = { r1__read__h614113, 2'b0 } ;
  assign r1__read__h614113 = { r1__read__h614115, 1'b0 } ;
  assign r1__read__h614115 = { r1__read__h614117, csrf_timer_int_en_vec_1 } ;
  assign r1__read__h614117 = { r1__read__h614119, 2'b0 } ;
  assign r1__read__h614119 = { r1__read__h614121, 1'b0 } ;
  assign r1__read__h614121 = { 54'b0, csrf_external_int_en_vec_1 } ;
  assign r1__read__h614619 = { csrf_stvec_base_hi_reg, 1'b0 } ;
  assign r1__read__h614624 = { r1__read__h614626, csrf_scounteren_tm_reg } ;
  assign r1__read__h614626 = { 61'd0, csrf_scounteren_ir_reg } ;
  assign r1__read__h614637 = { csrf_scause_interrupt_reg, 59'b0 } ;
  assign r1__read__h614643 =
	     { r1__read__h614645, csrf_software_int_pend_vec_1 } ;
  assign r1__read__h614645 = { r1__read__h614647, 2'b0 } ;
  assign r1__read__h614647 = { r1__read__h614649, 1'b0 } ;
  assign r1__read__h614649 =
	     { r1__read__h614651, csrf_timer_int_pend_vec_1 } ;
  assign r1__read__h614651 = { r1__read__h614653, 2'b0 } ;
  assign r1__read__h614653 = { r1__read__h614655, 1'b0 } ;
  assign r1__read__h614655 = { 54'b0, csrf_external_int_pend_vec_1 } ;
  assign r1__read__h614853 = { vm_mode_reg__read__h614859, 16'd0 } ;
  assign r1__read__h614876 = { r1__read__h614878, csrf_ie_vec_1 } ;
  assign r1__read__h614878 = { r1__read__h614880, 1'b0 } ;
  assign r1__read__h614880 = { r1__read__h614882, csrf_ie_vec_3 } ;
  assign r1__read__h614882 = { r1__read__h614884, csrf_prev_ie_vec_0 } ;
  assign r1__read__h614884 = { r1__read__h614886, csrf_prev_ie_vec_1 } ;
  assign r1__read__h614886 = { r1__read__h614888, 1'b0 } ;
  assign r1__read__h614888 = { r1__read__h614890, csrf_prev_ie_vec_3 } ;
  assign r1__read__h614890 = { r1__read__h614892, csrf_spp_reg } ;
  assign r1__read__h614892 = { r1__read__h614894, 2'b0 } ;
  assign r1__read__h614894 = { r1__read__h614896, csrf_mpp_reg } ;
  assign r1__read__h614896 = { r1__read__h614898, csrf_fs_reg } ;
  assign r1__read__h614898 = { r1__read__h614900, 2'd0 } ;
  assign r1__read__h614900 = { r1__read__h614902, csrf_mprv_reg } ;
  assign r1__read__h614902 = { r1__read__h614904, csrf_sum_reg } ;
  assign r1__read__h614904 = { r1__read__h614906, csrf_mxr_reg } ;
  assign r1__read__h614906 = { r1__read__h614908, csrf_tvm_reg } ;
  assign r1__read__h614908 = { r1__read__h614910, csrf_tw_reg } ;
  assign r1__read__h614910 = { r1__read__h614912, csrf_tsr_reg } ;
  assign r1__read__h614912 = { r1__read__h614914, 9'b0 } ;
  assign r1__read__h614914 = { r1__read__h614916, 2'b10 } ;
  assign r1__read__h614916 = { r1__read__h614918, 2'b10 } ;
  assign r1__read__h614918 = { r__h613737, 27'b0 } ;
  assign r1__read__h615001 = { r1__read__h615003, 1'b0 } ;
  assign r1__read__h615003 = { r1__read__h615005, csrf_medeleg_13_11_reg } ;
  assign r1__read__h615005 = { r1__read__h615007, 1'b0 } ;
  assign r1__read__h615007 = { 48'b0, csrf_medeleg_15_reg } ;
  assign r1__read__h615018 = { r1__read__h615020, 1'b0 } ;
  assign r1__read__h615020 = { r1__read__h615022, csrf_mideleg_5_3_reg } ;
  assign r1__read__h615022 = { r1__read__h615024, 1'b0 } ;
  assign r1__read__h615024 = { r1__read__h615026, csrf_mideleg_9_7_reg } ;
  assign r1__read__h615026 = { r1__read__h615028, 1'b0 } ;
  assign r1__read__h615028 = { 52'b0, csrf_mideleg_11_reg } ;
  assign r1__read__h615042 =
	     { r1__read__h615044, csrf_software_int_en_vec_1 } ;
  assign r1__read__h615044 = { r1__read__h615046, 1'b0 } ;
  assign r1__read__h615046 =
	     { r1__read__h615048, csrf_software_int_en_vec_3 } ;
  assign r1__read__h615048 = { r1__read__h615050, 1'b0 } ;
  assign r1__read__h615050 = { r1__read__h615052, csrf_timer_int_en_vec_1 } ;
  assign r1__read__h615052 = { r1__read__h615054, 1'b0 } ;
  assign r1__read__h615054 = { r1__read__h615056, csrf_timer_int_en_vec_3 } ;
  assign r1__read__h615056 = { r1__read__h615058, 1'b0 } ;
  assign r1__read__h615058 =
	     { r1__read__h615060, csrf_external_int_en_vec_1 } ;
  assign r1__read__h615060 = { r1__read__h615062, 1'b0 } ;
  assign r1__read__h615062 = { 52'b0, csrf_external_int_en_vec_3 } ;
  assign r1__read__h615135 = { csrf_mtvec_base_hi_reg, 1'b0 } ;
  assign r1__read__h615140 = { r1__read__h615142, csrf_mcounteren_tm_reg } ;
  assign r1__read__h615142 = { 61'd0, csrf_mcounteren_ir_reg } ;
  assign r1__read__h615153 = { csrf_mcause_interrupt_reg, 59'b0 } ;
  assign r1__read__h615159 =
	     { r1__read__h615161, csrf_software_int_pend_vec_1 } ;
  assign r1__read__h615161 = { r1__read__h615163, 1'b0 } ;
  assign r1__read__h615163 =
	     { r1__read__h615165, csrf_software_int_pend_vec_3 } ;
  assign r1__read__h615165 = { r1__read__h615167, 1'b0 } ;
  assign r1__read__h615167 =
	     { r1__read__h615169, csrf_timer_int_pend_vec_1 } ;
  assign r1__read__h615169 = { r1__read__h615171, 1'b0 } ;
  assign r1__read__h615171 =
	     { r1__read__h615173, csrf_timer_int_pend_vec_3 } ;
  assign r1__read__h615173 = { r1__read__h615175, 1'b0 } ;
  assign r1__read__h615175 =
	     { r1__read__h615177, csrf_external_int_pend_vec_1 } ;
  assign r1__read__h615177 = { r1__read__h615179, 1'b0 } ;
  assign r1__read__h615179 = { 52'b0, csrf_external_int_pend_vec_3 } ;
  assign r1__read__h615260 = { 4'd0, csrf_rg_tdata1_dmode } ;
  assign rVal1__h482418 = coreFix_fpuMulDivExe_0_regToExeQ$first[195:132] ;
  assign rVal2__h482419 = coreFix_fpuMulDivExe_0_regToExeQ$first[131:68] ;
  assign r___1__h476564 =
	     64'd0 -
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$m_axis_dout_tdata[63:0] ;
  assign r__h613737 = csrf_fs_reg == 2'b11 ;
  assign r__h615234 = csrf_software_int_pend_vec_3 ;
  assign regRenamingTable_RDY_rename_0_claimRename__335_ETC___d13367 =
	     regRenamingTable$RDY_rename_0_claimRename &&
	     regRenamingTable$RDY_rename_0_getRename &&
	     rob$RDY_enqPort_0_enq &&
	     fetchStage$RDY_pipelines_0_first &&
	     fetchStage$RDY_pipelines_0_deq &&
	     (fetchStage$pipelines_0_first[194:192] != 3'd0 ||
	      coreFix_aluExe_0_rsAlu$RDY_enq) ;
  assign regRenamingTable_RDY_rename_0_getRename__3359__ETC___d14015 =
	     regRenamingTable$RDY_rename_0_getRename &&
	     CASE_fetchStagepipelines_0_first_BITS_191_TO__ETC__q232 &&
	     (fetchStage$pipelines_0_first[199:195] == 5'd14 ||
	      coreFix_memExe_rsMem$RDY_enq) ;
  assign regRenamingTable_RDY_rename_1_getRename__4079__ETC___d14097 =
	     regRenamingTable$RDY_rename_1_getRename &&
	     (!fetchStage$pipelines_0_canDeq ||
	      NOT_specTagManager_canClaim__3473_3567_OR_NOT__ETC___d14082) &&
	     _0_OR_NOT_fetchStage_pipelines_1_first__2825_BI_ETC___d14095 ;
  assign regRenamingTable_rename_0_canRename__3475_AND__ETC___d13501 =
	     regRenamingTable$rename_0_canRename &&
	     fetchStage$pipelines_0_first[199:195] != 5'd0 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd21 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd17 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd18 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd13 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd16 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd15 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd19 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd20 &&
	     NOT_renameStage_rg_m_halt_req_2843_BIT_4_2844__ETC___d13499 ;
  assign regRenamingTable_rename_0_canRename__3475_AND__ETC___d13564 =
	     regRenamingTable$rename_0_canRename &&
	     fetchStage$pipelines_0_first[199:195] != 5'd0 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd21 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd17 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd18 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd13 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd16 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd15 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd19 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd20 &&
	     NOT_fetchStage_pipelines_0_first__2816_BIT_68__ETC___d13562 ;
  assign regRenamingTable_rename_0_canRename__3475_AND__ETC___d13568 =
	     regRenamingTable_rename_0_canRename__3475_AND__ETC___d13564 &&
	     IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13541 &&
	     fetchStage$pipelines_0_first[194:192] == 3'd1 ||
	     !specTagManager$canClaim ;
  assign regRenamingTable_rename_0_canRename__3475_AND__ETC___d13895 =
	     regRenamingTable_rename_0_canRename__3475_AND__ETC___d13564 &&
	     fetchStage$pipelines_0_first[194:192] == 3'd2 &&
	     IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13536 ||
	     !coreFix_memExe_rsMem$canEnq ||
	     CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q229 ;
  assign regRenamingTable_rename_0_canRename__3475_AND__ETC___d14046 =
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d13067[4] &&
	     rob$enqPort_0_canEnq &&
	     IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14044 &&
	     fetchStage$pipelines_0_first[194:192] == 3'd1 ;
  assign regRenamingTable_rename_0_canRename__3475_AND__ETC___d14189 =
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d13067[4] &&
	     rob$enqPort_0_canEnq &&
	     (fetchStage$pipelines_0_first[194:192] == 3'd3 ||
	      fetchStage$pipelines_0_first[194:192] == 3'd4) &&
	     coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq ;
  assign regRenamingTable_rename_0_canRename__3475_AND__ETC___d14195 =
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d13067[4] &&
	     rob$enqPort_0_canEnq &&
	     fetchStage$pipelines_0_first[194:192] == 3'd2 &&
	     coreFix_memExe_rsMem$canEnq &&
	     IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13536 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd14 ;
  assign regRenamingTable_rename_0_canRename__3475_AND__ETC___d14215 =
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d13067[4] &&
	     rob$enqPort_0_canEnq &&
	     fetchStage$pipelines_0_first[194:192] == 3'd2 &&
	     coreFix_memExe_rsMem$canEnq &&
	     IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13536 &&
	     (fetchStage$pipelines_0_first[191:189] == 3'd0 ||
	      fetchStage$pipelines_0_first[191:189] == 3'd2) ;
  assign regRenamingTable_rename_0_canRename__3475_AND__ETC___d14223 =
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d13067[4] &&
	     rob$enqPort_0_canEnq &&
	     fetchStage$pipelines_0_first[194:192] == 3'd2 &&
	     coreFix_memExe_rsMem$canEnq &&
	     IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13536 &&
	     fetchStage$pipelines_0_first[191:189] != 3'd0 &&
	     fetchStage$pipelines_0_first[191:189] != 3'd2 ;
  assign regRenamingTable_rename_0_canRename__3475_AND__ETC___d14369 =
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d13067[4] &&
	     rob$enqPort_0_canEnq &&
	     fetchStage$pipelines_0_first[194:192] == 3'd2 &&
	     IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13536 ;
  assign regRenamingTable_rename_1_canRename__3604_AND__ETC___d13810 =
	     regRenamingTable$rename_1_canRename &&
	     fetchStage$pipelines_1_first[199:195] != 5'd0 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd21 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd17 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd18 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd13 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd16 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd15 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd19 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd20 &&
	     !renameStage_rg_m_halt_req[4] &&
	     !fetchStage$pipelines_1_first[68] &&
	     NOT_IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_284_ETC___d13799 &&
	     rob_enqPort_1_canEnq__3802_AND_epochManager_ch_ETC___d13807 ;
  assign regRenamingTable_rename_1_canRename__3604_AND__ETC___d13953 =
	     regRenamingTable$rename_1_canRename &&
	     fetchStage$pipelines_1_first[199:195] != 5'd0 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd21 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd17 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd18 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd13 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd16 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd15 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd19 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd20 &&
	     NOT_renameStage_rg_m_halt_req_2843_BIT_4_2844__ETC___d13951 ;
  assign regRenamingTable_rename_1_canRename__3604_AND__ETC___d13972 =
	     regRenamingTable$rename_1_canRename &&
	     fetchStage$pipelines_1_first[199:195] != 5'd0 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd21 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd17 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd18 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd13 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd16 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd15 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd19 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd20 &&
	     NOT_renameStage_rg_m_halt_req_2843_BIT_4_2844__ETC___d13970 ;
  assign regRenamingTable_rename_1_canRename__3604_AND__ETC___d14279 =
	     regRenamingTable$rename_1_canRename &&
	     fetchStage$pipelines_1_first[199:195] != 5'd0 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd21 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd17 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd18 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd13 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd16 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd15 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd19 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd20 &&
	     NOT_fetchStage_pipelines_1_first__2825_BIT_68__ETC___d14277 ;
  assign regRenamingTable_rename_1_canRename__3604_AND__ETC___d14323 =
	     regRenamingTable_rename_1_canRename__3604_AND__ETC___d14279 &&
	     (fetchStage$pipelines_1_first[194:192] == 3'd3 ||
	      fetchStage$pipelines_1_first[194:192] == 3'd4) &&
	     (!fetchStage$pipelines_0_canDeq ||
	      !regRenamingTable$rename_0_canRename ||
	      renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_f_ETC___d13994 ||
	      fetchStage$pipelines_0_first[194:192] != 3'd3 &&
	      fetchStage$pipelines_0_first[194:192] != 3'd4) &&
	     coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq ;
  assign renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_N_ETC___d13127 =
	     renameStage_rg_m_halt_req[4] ||
	     !fetchStage$pipelines_0_first[68] &&
	     (IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[0] ||
	      IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[1] ||
	      IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[2] ||
	      IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[3] ||
	      IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[4] ||
	      IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[5] ||
	      IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[6] ||
	      IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[7] ||
	      IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[8] ||
	      IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[9] ||
	      IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[10] ||
	      IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[11] ||
	      IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[12] ||
	      IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[13] ||
	      IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[14] ||
	      IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[15]) ;
  assign renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_N_ETC___d13357 =
	     renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_N_ETC___d13127 ||
	     (fetchStage$pipelines_0_first[68] ?
		IF_fetchStage_pipelines_0_first__2816_BIT_68_2_ETC___d13189 :
		IF_checkForException_3067_BIT_4_3068_THEN_IF_c_ETC___d13218) ==
	     4'd3 ;
  assign renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_f_ETC___d13831 =
	     renameStage_rg_m_halt_req[4] ||
	     fetchStage$pipelines_0_first[68] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d13828 ||
	     !rob$enqPort_0_canEnq ||
	     !epochManager$checkEpoch_0_check ;
  assign renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_f_ETC___d13871 =
	     renameStage_rg_m_halt_req[4] ||
	     fetchStage$pipelines_1_first[68] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d13865 ||
	     !rob$enqPort_1_canEnq ||
	     !epochManager$checkEpoch_1_check ||
	     !fetchStage$pipelines_0_canDeq ||
	     fetchStage$RDY_pipelines_0_first &&
	     IF_fetchStage_RDY_pipelines_0_first__2813_AND__ETC___d13507 ;
  assign renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_f_ETC___d13912 =
	     renameStage_rg_m_halt_req[4] ||
	     fetchStage$pipelines_0_first[68] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[0] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[1] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[2] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[3] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[4] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[5] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[6] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[7] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[8] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[9] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[10] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[11] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[12] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[13] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[14] ||
	     IF_IF_NOT_csrf_prv_reg_read__2846_EQ_3_2847_28_ETC___d12883[15] ;
  assign renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_f_ETC___d13994 =
	     renameStage_rg_m_halt_req[4] ||
	     fetchStage$pipelines_0_first[68] ||
	     checkForException___d13067[4] ||
	     !rob$enqPort_0_canEnq ;
  assign renaming_spec_bits__h684325 =
	     fetchStage$pipelines_0_canDeq ?
	       y_avValue_snd_fst__h680927 :
	       specTagManager$currentSpecBits ;
  assign res_data__h338526 = { 32'hFFFFFFFF, x__h338541 } ;
  assign res_data__h338531 =
	     { (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
		52'd0) &&
	       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[23] ^
	       coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68],
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
		11'd2047 &&
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) ?
		 63'h7FF8000000000000 :
		 coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:5] } ;
  assign res_data__h384228 = { 32'hFFFFFFFF, x__h384243 } ;
  assign res_data__h384233 =
	     { (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
		52'd0) &&
	       coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[23] ^
	       coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68],
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
		11'd2047 &&
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) ?
		 63'h7FF8000000000000 :
		 coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:5] } ;
  assign res_data__h429923 = { 32'hFFFFFFFF, x__h429938 } ;
  assign res_data__h429928 =
	     { (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
		52'd0) &&
	       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[23] ^
	       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68],
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
		11'd2047 &&
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) ?
		 63'h7FF8000000000000 :
		 coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:5] } ;
  assign res_fflags__h338527 =
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[28:24] |
	     coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[4:0] |
	     { (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5260,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5271,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5287,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5300,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5313 } ;
  assign res_fflags__h384229 =
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[28:24] |
	     coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[4:0] |
	     { (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       (value_BIT_52___h401816 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6652,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       (value_BIT_52___h401816 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6663,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       (value_BIT_52___h401816 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6679,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       (value_BIT_52___h401816 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6692,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       (value_BIT_52___h401816 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6705 } ;
  assign res_fflags__h429924 =
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[28:24] |
	     coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[4:0] |
	     { (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8044,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8055,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8071,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8084,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8097 } ;
  assign resp_addr__h292630 =
	     { coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getSlot[52:1],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getRq[95:84] } ;
  assign result__h364994 =
	     { _0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d4616[56:1],
	       _0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d4616[0] |
	       guard__h364989 } ;
  assign result__h410691 =
	     { _0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d6008[56:1],
	       _0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d6008[0] |
	       guard__h410686 } ;
  assign result__h456386 =
	     { _0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d7400[56:1],
	       _0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d7400[0] |
	       guard__h456381 } ;
  assign result__h504139 =
	     { _0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d8711[56:1],
	       _0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d8711[0] |
	       guard__h504134 } ;
  assign result__h542992 =
	     { _0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d10196[56:1],
	       _0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d10196[0] |
	       guard__h542987 } ;
  assign result__h582296 =
	     { _0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d9426[56:1],
	       _0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d9426[0] |
	       guard__h582291 } ;
  assign result__h647356 = w__h647351 & y__h647385 ;
  assign result__h647407 = ~x__h647406 ;
  assign rg_core_run_state_read__3117_EQ_2_3118_AND_NOT_ETC___d15278 =
	     rg_core_run_state == 2'd2 && !flush_reservation && !flush_tlbs &&
	     !update_vm_info &&
	     fetchStage$iTlbIfc_flush_done &&
	     coreFix_memExe_dTlb$flush_done &&
	     !flush_caches ;
  assign rg_tdata1__read__h612862 =
	     { r1__read__h615260, csrf_rg_tdata1_data } ;
  assign rob_enqPort_1_canEnq__3802_AND_epochManager_ch_ETC___d13807 =
	     rob$enqPort_1_canEnq && epochManager$checkEpoch_1_check &&
	     (!fetchStage$pipelines_0_canDeq ||
	      (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	       specTagManager$canClaim) &&
	      regRenamingTable_rename_0_canRename__3475_AND__ETC___d13564 &&
	      IF_IF_fetchStage_pipelines_0_first__2816_BITS__ETC___d13550) ;
  assign robdeqPort_0_deq_data_BITS_85_TO_22__q262 =
	     rob$deqPort_0_deq_data[85:22] ;
  assign rs1__h655989 =
	     (fetchStage$pipelines_0_first[88] &&
	      !fetchStage$pipelines_0_first[87]) ?
	       fetchStage$pipelines_0_first[86:82] :
	       5'd0 ;
  assign satp_csr__read__h610735 = { r1__read__h614853, csrf_ppn_reg } ;
  assign sbCons_lazyLookup_2_get_coreFix_fpuMulDivExe_0_ETC___d8352 =
	     (sbCons$lazyLookup_2_get[2] ||
	      IF_coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first_ETC___d8308 &&
	      IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8325) &&
	     (sbCons$lazyLookup_2_get[1] ||
	      IF_coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first_ETC___d8332 &&
	      IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8349) ;
  assign sbCons_lazyLookup_2_get_coreFix_fpuMulDivExe_0_ETC___d8353 =
	     (sbCons$lazyLookup_2_get[3] ||
	      IF_coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first_ETC___d8275 &&
	      IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8301) &&
	     sbCons_lazyLookup_2_get_coreFix_fpuMulDivExe_0_ETC___d8352 ;
  assign sbCons_lazyLookup_3_get_coreFix_memExe_dispToR_ETC___d1693 =
	     (sbCons$lazyLookup_3_get[3] ||
	      IF_coreFix_memExe_dispToRegQ_RDY_first__610_AN_ETC___d1640 &&
	      IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1666) &&
	     (sbCons$lazyLookup_3_get[2] ||
	      IF_coreFix_memExe_dispToRegQ_RDY_first__610_AN_ETC___d1673 &&
	      IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1690) ;
  assign sbIdx__h158818 =
	     coreFix_memExe_reqStQ_data_0_dummy2_1$Q_OUT &&
	     (CAN_FIRE_RL_coreFix_memExe_doIssueSB ?
		coreFix_memExe_reqStQ_data_0_lat_0$wget[64] :
		coreFix_memExe_reqStQ_data_0_rl[64]) ;
  assign scause_csr__read__h610532 =
	     { r1__read__h614637, csrf_scause_code_reg } ;
  assign scounteren_csr__read__h610394 =
	     { r1__read__h614624, csrf_scounteren_cy_reg } ;
  assign sfd__h339137 = { value__h347364, 3'd0 } ;
  assign sfd__h354945 =
	     { 1'b0,
	       _theResult___fst_exp__h354853 != 8'd0,
	       sfdin__h354847[56:34] } +
	     25'd1 ;
  assign sfd__h363527 =
	     { 1'b0,
	       _theResult___fst_exp__h363509 != 8'd0,
	       _theResult___snd__h363460[56:34] } +
	     25'd1 ;
  assign sfd__h372711 =
	     { 1'b0,
	       _theResult___fst_exp__h372619 != 8'd0,
	       sfdin__h372613[56:34] } +
	     25'd1 ;
  assign sfd__h381323 =
	     { 1'b0,
	       _theResult___fst_exp__h381304 != 8'd0,
	       _theResult___snd__h381250[56:34] } +
	     25'd1 ;
  assign sfd__h384839 = { value__h393061, 3'd0 } ;
  assign sfd__h400642 =
	     { 1'b0,
	       _theResult___fst_exp__h400550 != 8'd0,
	       sfdin__h400544[56:34] } +
	     25'd1 ;
  assign sfd__h409224 =
	     { 1'b0,
	       _theResult___fst_exp__h409206 != 8'd0,
	       _theResult___snd__h409157[56:34] } +
	     25'd1 ;
  assign sfd__h418408 =
	     { 1'b0,
	       _theResult___fst_exp__h418316 != 8'd0,
	       sfdin__h418310[56:34] } +
	     25'd1 ;
  assign sfd__h427020 =
	     { 1'b0,
	       _theResult___fst_exp__h427001 != 8'd0,
	       _theResult___snd__h426947[56:34] } +
	     25'd1 ;
  assign sfd__h430534 = { value__h438756, 3'd0 } ;
  assign sfd__h446337 =
	     { 1'b0,
	       _theResult___fst_exp__h446245 != 8'd0,
	       sfdin__h446239[56:34] } +
	     25'd1 ;
  assign sfd__h454919 =
	     { 1'b0,
	       _theResult___fst_exp__h454901 != 8'd0,
	       _theResult___snd__h454852[56:34] } +
	     25'd1 ;
  assign sfd__h464103 =
	     { 1'b0,
	       _theResult___fst_exp__h464011 != 8'd0,
	       sfdin__h464005[56:34] } +
	     25'd1 ;
  assign sfd__h472715 =
	     { 1'b0,
	       _theResult___fst_exp__h472696 != 8'd0,
	       _theResult___snd__h472642[56:34] } +
	     25'd1 ;
  assign sfd__h483159 = { value__h487742, 32'd0 } ;
  assign sfd__h502203 =
	     { 1'b0,
	       _theResult___fst_exp__h502185 != 11'd0,
	       _theResult___snd__h502136[56:5] } +
	     54'd1 ;
  assign sfd__h511854 =
	     { 1'b0,
	       _theResult___fst_exp__h511762 != 11'd0,
	       sfdin__h511756[56:5] } +
	     54'd1 ;
  assign sfd__h520614 =
	     { 1'b0,
	       _theResult___fst_exp__h520595 != 11'd0,
	       _theResult___snd__h520541[56:5] } +
	     54'd1 ;
  assign sfd__h522153 = { value__h526595, 32'd0 } ;
  assign sfd__h541056 =
	     { 1'b0,
	       _theResult___fst_exp__h541038 != 11'd0,
	       _theResult___snd__h540989[56:5] } +
	     54'd1 ;
  assign sfd__h550707 =
	     { 1'b0,
	       _theResult___fst_exp__h550615 != 11'd0,
	       sfdin__h550609[56:5] } +
	     54'd1 ;
  assign sfd__h559467 =
	     { 1'b0,
	       _theResult___fst_exp__h559448 != 11'd0,
	       _theResult___snd__h559394[56:5] } +
	     54'd1 ;
  assign sfd__h561457 = { value__h565899, 32'd0 } ;
  assign sfd__h580360 =
	     { 1'b0,
	       _theResult___fst_exp__h580342 != 11'd0,
	       _theResult___snd__h580293[56:5] } +
	     54'd1 ;
  assign sfd__h590011 =
	     { 1'b0,
	       _theResult___fst_exp__h589919 != 11'd0,
	       sfdin__h589913[56:5] } +
	     54'd1 ;
  assign sfd__h598771 =
	     { 1'b0,
	       _theResult___fst_exp__h598752 != 11'd0,
	       _theResult___snd__h598698[56:5] } +
	     54'd1 ;
  assign sfdin__h354847 =
	     _theResult____h346742[56] ?
	       _theResult___snd__h354864 :
	       _theResult___snd__h354875 ;
  assign sfdin__h372613 =
	     _theResult____h364381[56] ?
	       _theResult___snd__h372630 :
	       _theResult___snd__h372641 ;
  assign sfdin__h400544 =
	     _theResult____h392441[56] ?
	       _theResult___snd__h400561 :
	       _theResult___snd__h400572 ;
  assign sfdin__h418310 =
	     _theResult____h410078[56] ?
	       _theResult___snd__h418327 :
	       _theResult___snd__h418338 ;
  assign sfdin__h446239 =
	     _theResult____h438136[56] ?
	       _theResult___snd__h446256 :
	       _theResult___snd__h446267 ;
  assign sfdin__h464005 =
	     _theResult____h455773[56] ?
	       _theResult___snd__h464022 :
	       _theResult___snd__h464033 ;
  assign sfdin__h511756 =
	     _theResult____h503526[56] ?
	       _theResult___snd__h511773 :
	       _theResult___snd__h511784 ;
  assign sfdin__h550609 =
	     _theResult____h542379[56] ?
	       _theResult___snd__h550626 :
	       _theResult___snd__h550637 ;
  assign sfdin__h589913 =
	     _theResult____h581683[56] ?
	       _theResult___snd__h589930 :
	       _theResult___snd__h589941 ;
  assign shiftData__h183089 =
	     coreFix_memExe_regToExeQ$first[67:4] << x__h183221 ;
  assign sie_csr__read__h610298 = { r1__read__h614109, 1'b0 } ;
  assign sip_csr__read__h610672 = { r1__read__h614643, 1'b0 } ;
  assign spec_bits__h687484 = specTagManager$currentSpecBits | y__h687497 ;
  assign sstatus_csr__read__h610228 = { r1__read__h613705, csrf_ie_vec_0 } ;
  assign stvec_csr__read__h610341 =
	     { r1__read__h614619, csrf_stvec_mode_low_reg } ;
  assign upd__h3719 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ?
	       MUX_csrf_minstret_ehr_data_lat_1$wset_1__VAL_1 :
	       MUX_csrf_minstret_ehr_data_lat_1$wset_1__VAL_2 ;
  assign upd__h5036 = n__read__h6486 + 64'd1 ;
  assign upd__h6600 =
	     MUX_csrf_mcycle_ehr_data_dummy2_0$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[63:0] :
	       rob$deqPort_0_deq_data[85:22] ;
  assign upd__h714551 =
	     MUX_csrf_minstret_ehr_data_dummy2_0$write_1__SEL_1 ?
	       f_csr_reqs$D_OUT[63:0] :
	       rob$deqPort_0_deq_data[85:22] ;
  assign v__h296598 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3089) ?
	       v__h296829 :
	       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ;
  assign v__h296829 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ==
	      3'd7) ?
	       3'd0 :
	       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP +
	       3'd1 ;
  assign v__h299943 =
	     (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3196) ?
	       v__h300461 :
	       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP ;
  assign v__h300461 = coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP + 1'd1 ;
  assign v__h310457 =
	     (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3367) ?
	       v__h310688 :
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP ;
  assign v__h310688 = coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP + 1'd1 ;
  assign v__h314333 =
	     (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3463) ?
	       v__h314564 :
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP ;
  assign v__h314564 = coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP + 1'd1 ;
  assign v__h328934 =
	     (coreFix_memExe_memRespLdQ_enqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_memRespLdQ_enqReq_lat_1_whas_ETC___d3692) ?
	       v__h329165 :
	       coreFix_memExe_memRespLdQ_enqP ;
  assign v__h329165 = coreFix_memExe_memRespLdQ_enqP + 1'd1 ;
  assign v__h332159 =
	     (coreFix_memExe_forwardQ_enqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_forwardQ_enqReq_lat_1_whas___ETC___d3786) ?
	       v__h332390 :
	       coreFix_memExe_forwardQ_enqP ;
  assign v__h332390 = coreFix_memExe_forwardQ_enqP + 1'd1 ;
  assign v__h604540 =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_deqEn$whas ?
	       v__h604550 :
	       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit ;
  assign v__h604550 =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit + 2'd1 ;
  assign v__h605185 = v__h604540 - 2'd1 ;
  assign v__h608591 =
	     sbCons$lazyLookup_1_get[3] ? rf$read_1_rd1 : y_avValue__h609496 ;
  assign v__h633478 =
	     sbCons$lazyLookup_0_get[3] ? rf$read_0_rd1 : y_avValue__h634232 ;
  assign vaddr__h183084 =
	     coreFix_memExe_regToExeQ$first[131:68] +
	     { {32{coreFix_memExe_regToExeQfirst_BITS_177_TO_146__q4[31]}},
	       coreFix_memExe_regToExeQfirst_BITS_177_TO_146__q4 } ;
  assign value_BIT_52___h401816 =
	     coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
	     11'd0 ;
  assign value__h347364 =
	     { 1'b0,
	       coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
	       11'd0,
	       coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] } ;
  assign value__h393061 =
	     { 1'b0,
	       value_BIT_52___h401816,
	       coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] } ;
  assign value__h438756 =
	     { 1'b0,
	       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
	       11'd0,
	       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] } ;
  assign value__h487742 = { 1'b0, f1_exp__h482797 != 8'd0, f1_sfd__h482798 } ;
  assign value__h526595 = { 1'b0, f2_exp__h521791 != 8'd0, f2_sfd__h521792 } ;
  assign value__h565899 = { 1'b0, f3_exp__h561095 != 8'd0, f3_sfd__h561096 } ;
  assign vm_mode_reg__read__h614859 = { csrf_vm_mode_sv39_reg, 3'b0 } ;
  assign w__h647351 =
	     coreFix_globalSpecUpdate_correctSpecTag_0$whas ?
	       result__h647407 :
	       4'd15 ;
  assign x__h155392 =
	     coreFix_memExe_reqLdQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_reqLdQ_data_0_lat_0$whas ?
		  coreFix_memExe_reqLdQ_data_0_lat_0$wget[66:64] :
		  coreFix_memExe_reqLdQ_data_0_rl[66:64]) :
	       3'd0 ;
  assign x__h155398 =
	     coreFix_memExe_reqLdQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_reqLdQ_data_0_lat_0$whas ?
		  coreFix_memExe_reqLdQ_data_0_lat_0$wget[63:0] :
		  coreFix_memExe_reqLdQ_data_0_rl[63:0]) :
	       64'd0 ;
  assign x__h158939 = { 2'd0, sbIdx__h158818 } ;
  assign x__h158946 =
	     coreFix_memExe_reqStQ_data_0_dummy2_1$Q_OUT ?
	       (CAN_FIRE_RL_coreFix_memExe_doIssueSB ?
		  coreFix_memExe_reqStQ_data_0_lat_0$wget[63:0] :
		  coreFix_memExe_reqStQ_data_0_rl[63:0]) :
	       64'd0 ;
  assign x__h161756 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		  coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[150:148] :
		  coreFix_memExe_reqLrScAmoQ_data_0_rl[150:148]) :
	       3'd0 ;
  assign x__h161760 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		  coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[147:84] :
		  coreFix_memExe_reqLrScAmoQ_data_0_rl[147:84]) :
	       64'd0 ;
  assign x__h163608 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		  coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[70:7] :
		  coreFix_memExe_reqLrScAmoQ_data_0_rl[70:7]) :
	       64'd0 ;
  assign x__h18093 =
	     mmio_dataReqQ_enqReq_lat_0$whas ?
	       mmio_dataReqQ_enqReq_lat_0$wget[141:78] :
	       mmio_dataReqQ_enqReq_rl[141:78] ;
  assign x__h182998 =
	     sbCons$lazyLookup_3_get[3] ? rf$read_3_rd1 : y_avValue__h182086 ;
  assign x__h182999 =
	     sbCons$lazyLookup_3_get[2] ? rf$read_3_rd2 : y_avValue__h182692 ;
  assign x__h183221 = { vaddr__h183084[2:0], 3'b0 } ;
  assign x__h194342 =
	     coreFix_memExe_dMem_cache_m_banks_0_processAmo[90] ?
	       curData__h193579[63:32] :
	       curData__h193579[31:0] ;
  assign x__h20631 =
	     mmio_dataReqQ_enqReq_lat_0$whas ?
	       mmio_dataReqQ_enqReq_lat_0$wget[63:0] :
	       mmio_dataReqQ_enqReq_rl[63:0] ;
  assign x__h287938 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[150:148] :
		  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[150:148]) :
	       3'd0 ;
  assign x__h287950 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[147:84] :
		  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[147:84]) :
	       64'd0 ;
  assign x__h289804 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[70:7] :
		  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[70:7]) :
	       64'd0 ;
  assign x__h302808 =
	     EN_dCacheToParent_fromP_enq ?
	       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget[2:0] :
	       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl[2:0] ;
  assign x__h338541 =
	     { (_theResult___exp__h381873 != 8'd255 ||
		_theResult___sfd__h381874 == 23'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5198,
	       out_f_exp__h382150,
	       out_f_sfd__h382151 } ;
  assign x__h365091 =
	     sfd__h339137 << (x__h365124[11] ? 12'hAAA : x__h365124) ;
  assign x__h365124 =
	     12'd57 -
	     _3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d4612 ;
  assign x__h384243 =
	     { (_theResult___exp__h427570 != 8'd255 ||
		_theResult___sfd__h427571 == 23'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6590,
	       out_f_exp__h427847,
	       out_f_sfd__h427848 } ;
  assign x__h410788 =
	     sfd__h384839 << (x__h410821[11] ? 12'hAAA : x__h410821) ;
  assign x__h410821 =
	     12'd57 -
	     _3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d6004 ;
  assign x__h429938 =
	     { (_theResult___exp__h473265 != 8'd255 ||
		_theResult___sfd__h473266 == 23'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7982,
	       out_f_exp__h473542,
	       out_f_sfd__h473543 } ;
  assign x__h456483 =
	     sfd__h430534 << (x__h456516[11] ? 12'hAAA : x__h456516) ;
  assign x__h456516 =
	     12'd57 -
	     _3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d7396 ;
  assign x__h46000 =
	     mmio_cRqQ_enqReq_lat_0$whas ?
	       mmio_cRqQ_enqReq_lat_0$wget[141:78] :
	       mmio_cRqQ_enqReq_rl[141:78] ;
  assign x__h482327 =
	     sbCons$lazyLookup_2_get[3] ? rf$read_2_rd1 : y_avValue__h479463 ;
  assign x__h482328 =
	     sbCons$lazyLookup_2_get[2] ? rf$read_2_rd2 : y_avValue__h480071 ;
  assign x__h482329 =
	     sbCons$lazyLookup_2_get[1] ? rf$read_2_rd3 : y_avValue__h480673 ;
  assign x__h48536 =
	     mmio_cRqQ_enqReq_lat_0$whas ?
	       mmio_cRqQ_enqReq_lat_0$wget[63:0] :
	       mmio_cRqQ_enqReq_rl[63:0] ;
  assign x__h504234 = sfd__h483159 << x__h504267 ;
  assign x__h504267 =
	     12'd57 -
	     _3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d8707 ;
  assign x__h543087 = sfd__h522153 << x__h543120 ;
  assign x__h543120 =
	     12'd57 -
	     _3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d10192 ;
  assign x__h582391 = sfd__h561457 << x__h582424 ;
  assign x__h582424 =
	     12'd57 -
	     _3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d9422 ;
  assign x__h604041 = a__h603605[63] ^ b__h603606[63] ;
  assign x__h613690 = { csrf_frm_reg, csrf_fflags_reg } ;
  assign x__h617891 =
	     coreFix_aluExe_1_dispToRegQ$first[119] ?
	       rVal1__h609706 :
	       v__h608591 ;
  assign x__h617892 =
	     sbCons$lazyLookup_1_get[2] ? rf$read_1_rd2 : y_avValue__h615716 ;
  assign x__h640402 =
	     coreFix_aluExe_0_dispToRegQ$first[119] ?
	       rVal1__h634440 :
	       v__h633478 ;
  assign x__h640403 =
	     sbCons$lazyLookup_0_get[2] ? rf$read_0_rd2 : y_avValue__h638237 ;
  assign x__h647355 = 4'd1 << coreFix_aluExe_1_exeToFinQ$first[5:4] ;
  assign x__h647406 = 4'd1 << coreFix_aluExe_0_exeToFinQ$first[5:4] ;
  assign x__h698266 =
	     (!rob$deqPort_0_deq_data[156] &&
	      (rob$deqPort_0_deq_data[155:152] == 4'd1 ||
	       rob$deqPort_0_deq_data[155:152] == 4'd12)) ?
	       rob$deqPort_0_deq_data[151:88] :
	       rob$deqPort_0_deq_data[85:22] ;
  assign x__h706089 = { cause_code__h703117, 2'b0 } ;
  assign x__h713815 = { 1'b0, csrf_spp_reg } ;
  assign x__h717151 =
	     NOT_rob_deqPort_0_canDeq__5016_5017_OR_rob_deq_ETC___d15203 ?
	       y_avValue_snd_snd_snd_fst__h716973 :
	       IF_rob_deqPort_0_canDeq__5016_THEN_IF_NOT_rob__ETC___d15232 ;
  assign x__h77611 = mmio_pRqQ_data_0[31:0] ;
  assign x_addr__h314731 =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$whas ?
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wget[578:515] :
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl[578:515] ;
  assign x_data__h67460 =
	     EN_mmioToPlatform_pRq_enq ?
	       mmio_pRqQ_enqReq_lat_0$wget[31:0] :
	       mmio_pRqQ_enqReq_rl[31:0] ;
  assign x_data_imm__h676582 = fetchStage$pipelines_0_first[159:128] ;
  assign x_data_imm__h691797 = fetchStage$pipelines_1_first[159:128] ;
  assign x_decodeInfo_frm__h655673 = csrf_frm_reg ;
  assign x_quotient__h475853 =
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$m_axis_dout_tuser[75] ?
	       64'hFFFFFFFFFFFFFFFF :
	       ((coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$m_axis_dout_tuser[10] &&
		 coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$m_axis_dout_tuser[9]) ?
		  q___1__h476538 :
		  coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$m_axis_dout_tdata[127:64]) ;
  assign x_reg_ifc__read__h610137 = { 63'd0, csrf_stats_module_doStats } ;
  assign x_remainder__h475854 =
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$m_axis_dout_tuser[75] ?
	       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$m_axis_dout_tuser[74:11] :
	       ((coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$m_axis_dout_tuser[10] &&
		 coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$m_axis_dout_tuser[8]) ?
		  r___1__h476564 :
		  coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$m_axis_dout_tdata[63:0]) ;
  assign y__h255465 =
	     { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[569:518],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[95:90] } ;
  assign y__h647385 = ~x__h647355 ;
  assign y__h652316 =
	     { 4'd15,
	       ~csrf_mideleg_11_reg,
	       1'd1,
	       ~csrf_mideleg_9_7_reg,
	       1'd1,
	       ~csrf_mideleg_5_3_reg,
	       1'd1,
	       ~csrf_mideleg_1_0_reg } ;
  assign y__h687497 = 4'd1 << specTagManager$nextSpecTag ;
  assign y__h716926 =
	     NOT_rob_deqPort_0_canDeq__5016_5017_OR_rob_deq_ETC___d15203 ?
	       y_avValue_snd_snd_snd_snd_snd__h716979 :
	       IF_rob_deqPort_0_canDeq__5016_THEN_IF_NOT_rob__ETC___d15124 ;
  assign y_avValue__h182086 =
	     NOT_coreFix_memExe_bypassWire_0_whas__629_635__ETC___d1656 ?
	       coreFix_aluExe_0_bypassWire_3$wget[63:0] :
	       IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1710 ;
  assign y_avValue__h182692 =
	     NOT_coreFix_memExe_bypassWire_0_whas__629_635__ETC___d1683 ?
	       coreFix_aluExe_0_bypassWire_3$wget[63:0] :
	       IF_NOT_coreFix_memExe_bypassWire_0_whas__629_6_ETC___d1721 ;
  assign y_avValue__h479463 =
	     NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d8291 ?
	       coreFix_aluExe_0_bypassWire_3$wget[63:0] :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8395 ;
  assign y_avValue__h480071 =
	     NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d8318 ?
	       coreFix_aluExe_0_bypassWire_3$wget[63:0] :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8406 ;
  assign y_avValue__h480673 =
	     NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d8342 ?
	       coreFix_aluExe_0_bypassWire_3$wget[63:0] :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8417 ;
  assign y_avValue__h609496 =
	     NOT_coreFix_aluExe_1_bypassWire_0_whas__1400_1_ETC___d11427 ?
	       coreFix_aluExe_0_bypassWire_3$wget[63:0] :
	       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11834 ;
  assign y_avValue__h615716 =
	     NOT_coreFix_aluExe_1_bypassWire_0_whas__1400_1_ETC___d11455 ?
	       coreFix_aluExe_0_bypassWire_3$wget[63:0] :
	       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__140_ETC___d11846 ;
  assign y_avValue__h634232 =
	     NOT_coreFix_aluExe_0_bypassWire_0_whas__2261_2_ETC___d12288 ?
	       coreFix_aluExe_0_bypassWire_3$wget[63:0] :
	       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12508 ;
  assign y_avValue__h638237 =
	     NOT_coreFix_aluExe_0_bypassWire_0_whas__2261_2_ETC___d12316 ?
	       coreFix_aluExe_0_bypassWire_3$wget[63:0] :
	       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__226_ETC___d12520 ;
  assign y_avValue_new_pc__h705853 =
	     (csrf_stvec_mode_low_reg && commitStage_commitTrap[36]) ?
	       base__h706074 + { 58'd0, x__h706089 } :
	       base__h706074 ;
  assign y_avValue_new_pc__h706039 =
	     (csrf_mtvec_mode_low_reg && commitStage_commitTrap[36]) ?
	       base__h706094 + { 58'd0, x__h706089 } :
	       base__h706094 ;
  assign y_avValue_snd_fst__h680927 =
	     ((fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	       specTagManager$canClaim) &&
	      regRenamingTable_rename_0_canRename__3475_AND__ETC___d13501) ?
	       y_avValue_snd_fst__h680969 :
	       specTagManager$currentSpecBits ;
  assign y_avValue_snd_fst__h680969 =
	     IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13541 ?
	       y_avValue_snd_fst__h681011 :
	       specTagManager$currentSpecBits ;
  assign y_avValue_snd_fst__h681011 =
	     (fetchStage$pipelines_0_first[194:192] == 3'd1) ?
	       spec_bits__h687484 :
	       specTagManager$currentSpecBits ;
  assign y_avValue_snd_fst__h716396 =
	     (!rob$deqPort_0_deq_data[15] || rob$deqPort_0_deq_data[10] ||
	      rob$deqPort_0_deq_data[157] ||
	      rob$deqPort_0_deq_data[247:243] == 5'd0 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd21 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd17 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd18 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd13 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd16 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd15 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd19 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd20) ?
	       5'd0 :
	       rob$deqPort_0_deq_data[21:17] ;
  assign y_avValue_snd_fst__h716963 =
	     (!rob$deqPort_1_deq_data[15] || rob$deqPort_1_deq_data[10] ||
	      rob$deqPort_1_deq_data[157] ||
	      rob$deqPort_1_deq_data[247:243] == 5'd0 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd21 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd17 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd18 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd13 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd16 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd15 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd19 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd20) ?
	       IF_rob_deqPort_0_canDeq__5016_THEN_IF_NOT_rob__ETC___d15210 :
	       y_avValue_snd_fst__h716992 ;
  assign y_avValue_snd_fst__h716992 =
	     IF_rob_deqPort_0_canDeq__5016_THEN_IF_NOT_rob__ETC___d15210 |
	     rob$deqPort_1_deq_data[21:17] ;
  assign y_avValue_snd_snd_snd_fst__h716406 =
	     (!rob$deqPort_0_deq_data[15] || rob$deqPort_0_deq_data[10] ||
	      rob$deqPort_0_deq_data[157] ||
	      rob$deqPort_0_deq_data[247:243] == 5'd0 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd21 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd17 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd18 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd13 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd16 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd15 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd19 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd20) ?
	       2'd0 :
	       2'd1 ;
  assign y_avValue_snd_snd_snd_fst__h716973 =
	     (!rob$deqPort_1_deq_data[15] || rob$deqPort_1_deq_data[10] ||
	      rob$deqPort_1_deq_data[157] ||
	      rob$deqPort_1_deq_data[247:243] == 5'd0 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd21 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd17 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd18 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd13 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd16 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd15 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd19 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd20) ?
	       IF_rob_deqPort_0_canDeq__5016_THEN_IF_NOT_rob__ETC___d15232 :
	       y_avValue_snd_snd_snd_fst__h717002 ;
  assign y_avValue_snd_snd_snd_fst__h717002 =
	     IF_rob_deqPort_0_canDeq__5016_THEN_IF_NOT_rob__ETC___d15232 +
	     2'd1 ;
  assign y_avValue_snd_snd_snd_snd_snd__h716412 =
	     (!rob$deqPort_0_deq_data[15] || rob$deqPort_0_deq_data[10] ||
	      rob$deqPort_0_deq_data[157] ||
	      rob$deqPort_0_deq_data[247:243] == 5'd0 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd21 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd17 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd18 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd13 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd16 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd15 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd19 ||
	      rob$deqPort_0_deq_data[247:243] == 5'd20) ?
	       64'd0 :
	       64'd1 ;
  assign y_avValue_snd_snd_snd_snd_snd__h716979 =
	     (!rob$deqPort_1_deq_data[15] || rob$deqPort_1_deq_data[10] ||
	      rob$deqPort_1_deq_data[157] ||
	      rob$deqPort_1_deq_data[247:243] == 5'd0 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd21 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd17 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd18 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd13 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd16 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd15 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd19 ||
	      rob$deqPort_1_deq_data[247:243] == 5'd20) ?
	       IF_rob_deqPort_0_canDeq__5016_THEN_IF_NOT_rob__ETC___d15124 :
	       y_avValue_snd_snd_snd_snd_snd__h717008 ;
  assign y_avValue_snd_snd_snd_snd_snd__h717008 =
	     IF_rob_deqPort_0_canDeq__5016_THEN_IF_NOT_rob__ETC___d15124 +
	     64'd1 ;
  always@(mmio_cRqQ_data_0)
  begin
    case (mmio_cRqQ_data_0[77:76])
      2'd0, 2'd1, 2'd2:
	  CASE_mmio_cRqQ_data_0_BITS_77_TO_76_0_mmio_cRq_ETC__q1 =
	      mmio_cRqQ_data_0[77:72];
      2'd3:
	  CASE_mmio_cRqQ_data_0_BITS_77_TO_76_0_mmio_cRq_ETC__q1 =
	      { 2'd3, mmio_cRqQ_data_0[75:72] };
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq or
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[89:87])
      3'd0:
	  x__h197788 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[63:0];
      3'd1:
	  x__h197788 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[127:64];
      3'd2:
	  x__h197788 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[191:128];
      3'd3:
	  x__h197788 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[255:192];
      3'd4:
	  x__h197788 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[319:256];
      3'd5:
	  x__h197788 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[383:320];
      3'd6:
	  x__h197788 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[447:384];
      3'd7:
	  x__h197788 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:448];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1 or
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2 or
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3 or
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4 or
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5 or
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6 or
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP)
      3'd0:
	  x__h286506 =
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0;
      3'd1:
	  x__h286506 =
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1;
      3'd2:
	  x__h286506 =
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2;
      3'd3:
	  x__h286506 =
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3;
      3'd4:
	  x__h286506 =
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4;
      3'd5:
	  x__h286506 =
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5;
      3'd6:
	  x__h286506 =
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6;
      3'd7:
	  x__h286506 =
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7;
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  addr__h290726 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[581:518];
      1'd1:
	  addr__h290726 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[581:518];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_processAmo or
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_processAmo[93:91])
      3'd0:
	  curData__h193579 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[63:0];
      3'd1:
	  curData__h193579 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[127:64];
      3'd2:
	  curData__h193579 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[191:128];
      3'd3:
	  curData__h193579 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[255:192];
      3'd4:
	  curData__h193579 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[319:256];
      3'd5:
	  curData__h193579 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[383:320];
      3'd6:
	  curData__h193579 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[447:384];
      3'd7:
	  curData__h193579 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:448];
    endcase
  end
  always@(commitStage_commitTrap)
  begin
    case (commitStage_commitTrap[35:32])
      4'd0, 4'd3: trap_val__h704156 = commitStage_commitTrap[164:101];
      4'd2: trap_val__h704156 = { 32'd0, commitStage_commitTrap[31:0] };
      default: trap_val__h704156 =
		   (commitStage_commitTrap[35:32] != 4'd8 &&
		    commitStage_commitTrap[35:32] != 4'd9 &&
		    commitStage_commitTrap[35:32] != 4'd11) ?
		     commitStage_commitTrap[100:37] :
		     64'd0;
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  x__h292275 = coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[2:0];
      1'd1:
	  x__h292275 = coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[2:0];
    endcase
  end
  always@(f_csr_reqs$D_OUT or
	  fflags_csr__read__h610007 or
	  frm_csr__read__h610018 or
	  fcsr_csr__read__h610032 or
	  sstatus_csr__read__h610228 or
	  sie_csr__read__h610298 or
	  stvec_csr__read__h610341 or
	  scounteren_csr__read__h610394 or
	  csrf_sscratch_csr or
	  csrf_sepc_csr or
	  scause_csr__read__h610532 or
	  csrf_stval_csr or
	  sip_csr__read__h610672 or
	  satp_csr__read__h610735 or
	  mstatus_csr__read__h610878 or
	  medeleg_csr__read__h611026 or
	  mideleg_csr__read__h611121 or
	  mie_csr__read__h611245 or
	  mtvec_csr__read__h611327 or
	  mcounteren_csr__read__h611419 or
	  csrf_mscratch_csr or
	  csrf_mepc_csr or
	  mcause_csr__read__h611674 or
	  csrf_mtval_csr or
	  mip_csr__read__h611907 or
	  csrf_rg_tselect or
	  rg_tdata1__read__h612862 or
	  csrf_rg_tdata2 or
	  csrf_rg_tdata3 or
	  csrf_rg_dcsr or
	  csrf_rg_dpc or
	  csrf_rg_dscratch0 or
	  csrf_rg_dscratch1 or
	  x_reg_ifc__read__h610137 or
	  n__read__h612011 or
	  n__read__h612202 or csrf_time_reg or hartid__h1022)
  begin
    case (f_csr_reqs$D_OUT[75:64])
      12'd1: data_out__h720863 = fflags_csr__read__h610007;
      12'd2: data_out__h720863 = frm_csr__read__h610018;
      12'd3: data_out__h720863 = fcsr_csr__read__h610032;
      12'd256: data_out__h720863 = sstatus_csr__read__h610228;
      12'd260: data_out__h720863 = sie_csr__read__h610298;
      12'd261: data_out__h720863 = stvec_csr__read__h610341;
      12'd262: data_out__h720863 = scounteren_csr__read__h610394;
      12'd320: data_out__h720863 = csrf_sscratch_csr;
      12'd321: data_out__h720863 = csrf_sepc_csr;
      12'd322: data_out__h720863 = scause_csr__read__h610532;
      12'd323: data_out__h720863 = csrf_stval_csr;
      12'd324: data_out__h720863 = sip_csr__read__h610672;
      12'd384: data_out__h720863 = satp_csr__read__h610735;
      12'd768: data_out__h720863 = mstatus_csr__read__h610878;
      12'd769: data_out__h720863 = 64'h800000000014112D;
      12'd770: data_out__h720863 = medeleg_csr__read__h611026;
      12'd771: data_out__h720863 = mideleg_csr__read__h611121;
      12'd772: data_out__h720863 = mie_csr__read__h611245;
      12'd773: data_out__h720863 = mtvec_csr__read__h611327;
      12'd774: data_out__h720863 = mcounteren_csr__read__h611419;
      12'd832: data_out__h720863 = csrf_mscratch_csr;
      12'd833: data_out__h720863 = csrf_mepc_csr;
      12'd834: data_out__h720863 = mcause_csr__read__h611674;
      12'd835: data_out__h720863 = csrf_mtval_csr;
      12'd836: data_out__h720863 = mip_csr__read__h611907;
      12'd1952: data_out__h720863 = csrf_rg_tselect;
      12'd1953: data_out__h720863 = rg_tdata1__read__h612862;
      12'd1954: data_out__h720863 = csrf_rg_tdata2;
      12'd1955: data_out__h720863 = csrf_rg_tdata3;
      12'd1968: data_out__h720863 = csrf_rg_dcsr;
      12'd1969: data_out__h720863 = csrf_rg_dpc;
      12'd1970: data_out__h720863 = csrf_rg_dscratch0;
      12'd1971: data_out__h720863 = csrf_rg_dscratch1;
      12'd2048, 12'd3857, 12'd3858, 12'd3859: data_out__h720863 = 64'd0;
      12'd2049: data_out__h720863 = x_reg_ifc__read__h610137;
      12'd2816, 12'd3072: data_out__h720863 = n__read__h612011;
      12'd2818, 12'd3074: data_out__h720863 = n__read__h612202;
      12'd3073: data_out__h720863 = csrf_time_reg;
      12'd3860: data_out__h720863 = hartid__h1022;
      default: data_out__h720863 = 64'b0;
    endcase
  end
  always@(coreFix_aluExe_1_dispToRegQ$first or
	  fflags_csr__read__h610007 or
	  frm_csr__read__h610018 or
	  fcsr_csr__read__h610032 or
	  sstatus_csr__read__h610228 or
	  sie_csr__read__h610298 or
	  stvec_csr__read__h610341 or
	  scounteren_csr__read__h610394 or
	  csrf_sscratch_csr or
	  csrf_sepc_csr or
	  scause_csr__read__h610532 or
	  csrf_stval_csr or
	  sip_csr__read__h610672 or
	  satp_csr__read__h610735 or
	  mstatus_csr__read__h610878 or
	  medeleg_csr__read__h611026 or
	  mideleg_csr__read__h611121 or
	  mie_csr__read__h611245 or
	  mtvec_csr__read__h611327 or
	  mcounteren_csr__read__h611419 or
	  csrf_mscratch_csr or
	  csrf_mepc_csr or
	  mcause_csr__read__h611674 or
	  csrf_mtval_csr or
	  mip_csr__read__h611907 or
	  csrf_rg_tselect or
	  rg_tdata1__read__h612862 or
	  csrf_rg_tdata2 or
	  csrf_rg_tdata3 or
	  csrf_rg_dcsr or
	  csrf_rg_dpc or
	  csrf_rg_dscratch0 or
	  csrf_rg_dscratch1 or
	  x_reg_ifc__read__h610137 or
	  n__read__h612011 or
	  n__read__h612202 or csrf_time_reg or hartid__h1022)
  begin
    case (coreFix_aluExe_1_dispToRegQ$first[118:107])
      12'd1: rVal1__h609706 = fflags_csr__read__h610007;
      12'd2: rVal1__h609706 = frm_csr__read__h610018;
      12'd3: rVal1__h609706 = fcsr_csr__read__h610032;
      12'd256: rVal1__h609706 = sstatus_csr__read__h610228;
      12'd260: rVal1__h609706 = sie_csr__read__h610298;
      12'd261: rVal1__h609706 = stvec_csr__read__h610341;
      12'd262: rVal1__h609706 = scounteren_csr__read__h610394;
      12'd320: rVal1__h609706 = csrf_sscratch_csr;
      12'd321: rVal1__h609706 = csrf_sepc_csr;
      12'd322: rVal1__h609706 = scause_csr__read__h610532;
      12'd323: rVal1__h609706 = csrf_stval_csr;
      12'd324: rVal1__h609706 = sip_csr__read__h610672;
      12'd384: rVal1__h609706 = satp_csr__read__h610735;
      12'd768: rVal1__h609706 = mstatus_csr__read__h610878;
      12'd769: rVal1__h609706 = 64'h800000000014112D;
      12'd770: rVal1__h609706 = medeleg_csr__read__h611026;
      12'd771: rVal1__h609706 = mideleg_csr__read__h611121;
      12'd772: rVal1__h609706 = mie_csr__read__h611245;
      12'd773: rVal1__h609706 = mtvec_csr__read__h611327;
      12'd774: rVal1__h609706 = mcounteren_csr__read__h611419;
      12'd832: rVal1__h609706 = csrf_mscratch_csr;
      12'd833: rVal1__h609706 = csrf_mepc_csr;
      12'd834: rVal1__h609706 = mcause_csr__read__h611674;
      12'd835: rVal1__h609706 = csrf_mtval_csr;
      12'd836: rVal1__h609706 = mip_csr__read__h611907;
      12'd1952: rVal1__h609706 = csrf_rg_tselect;
      12'd1953: rVal1__h609706 = rg_tdata1__read__h612862;
      12'd1954: rVal1__h609706 = csrf_rg_tdata2;
      12'd1955: rVal1__h609706 = csrf_rg_tdata3;
      12'd1968: rVal1__h609706 = csrf_rg_dcsr;
      12'd1969: rVal1__h609706 = csrf_rg_dpc;
      12'd1970: rVal1__h609706 = csrf_rg_dscratch0;
      12'd1971: rVal1__h609706 = csrf_rg_dscratch1;
      12'd2048, 12'd3857, 12'd3858, 12'd3859: rVal1__h609706 = 64'd0;
      12'd2049: rVal1__h609706 = x_reg_ifc__read__h610137;
      12'd2816, 12'd3072: rVal1__h609706 = n__read__h612011;
      12'd2818, 12'd3074: rVal1__h609706 = n__read__h612202;
      12'd3073: rVal1__h609706 = csrf_time_reg;
      12'd3860: rVal1__h609706 = hartid__h1022;
      default: rVal1__h609706 = 64'b0;
    endcase
  end
  always@(coreFix_aluExe_0_dispToRegQ$first or
	  fflags_csr__read__h610007 or
	  frm_csr__read__h610018 or
	  fcsr_csr__read__h610032 or
	  sstatus_csr__read__h610228 or
	  sie_csr__read__h610298 or
	  stvec_csr__read__h610341 or
	  scounteren_csr__read__h610394 or
	  csrf_sscratch_csr or
	  csrf_sepc_csr or
	  scause_csr__read__h610532 or
	  csrf_stval_csr or
	  sip_csr__read__h610672 or
	  satp_csr__read__h610735 or
	  mstatus_csr__read__h610878 or
	  medeleg_csr__read__h611026 or
	  mideleg_csr__read__h611121 or
	  mie_csr__read__h611245 or
	  mtvec_csr__read__h611327 or
	  mcounteren_csr__read__h611419 or
	  csrf_mscratch_csr or
	  csrf_mepc_csr or
	  mcause_csr__read__h611674 or
	  csrf_mtval_csr or
	  mip_csr__read__h611907 or
	  csrf_rg_tselect or
	  rg_tdata1__read__h612862 or
	  csrf_rg_tdata2 or
	  csrf_rg_tdata3 or
	  csrf_rg_dcsr or
	  csrf_rg_dpc or
	  csrf_rg_dscratch0 or
	  csrf_rg_dscratch1 or
	  x_reg_ifc__read__h610137 or
	  n__read__h612011 or
	  n__read__h612202 or csrf_time_reg or hartid__h1022)
  begin
    case (coreFix_aluExe_0_dispToRegQ$first[118:107])
      12'd1: rVal1__h634440 = fflags_csr__read__h610007;
      12'd2: rVal1__h634440 = frm_csr__read__h610018;
      12'd3: rVal1__h634440 = fcsr_csr__read__h610032;
      12'd256: rVal1__h634440 = sstatus_csr__read__h610228;
      12'd260: rVal1__h634440 = sie_csr__read__h610298;
      12'd261: rVal1__h634440 = stvec_csr__read__h610341;
      12'd262: rVal1__h634440 = scounteren_csr__read__h610394;
      12'd320: rVal1__h634440 = csrf_sscratch_csr;
      12'd321: rVal1__h634440 = csrf_sepc_csr;
      12'd322: rVal1__h634440 = scause_csr__read__h610532;
      12'd323: rVal1__h634440 = csrf_stval_csr;
      12'd324: rVal1__h634440 = sip_csr__read__h610672;
      12'd384: rVal1__h634440 = satp_csr__read__h610735;
      12'd768: rVal1__h634440 = mstatus_csr__read__h610878;
      12'd769: rVal1__h634440 = 64'h800000000014112D;
      12'd770: rVal1__h634440 = medeleg_csr__read__h611026;
      12'd771: rVal1__h634440 = mideleg_csr__read__h611121;
      12'd772: rVal1__h634440 = mie_csr__read__h611245;
      12'd773: rVal1__h634440 = mtvec_csr__read__h611327;
      12'd774: rVal1__h634440 = mcounteren_csr__read__h611419;
      12'd832: rVal1__h634440 = csrf_mscratch_csr;
      12'd833: rVal1__h634440 = csrf_mepc_csr;
      12'd834: rVal1__h634440 = mcause_csr__read__h611674;
      12'd835: rVal1__h634440 = csrf_mtval_csr;
      12'd836: rVal1__h634440 = mip_csr__read__h611907;
      12'd1952: rVal1__h634440 = csrf_rg_tselect;
      12'd1953: rVal1__h634440 = rg_tdata1__read__h612862;
      12'd1954: rVal1__h634440 = csrf_rg_tdata2;
      12'd1955: rVal1__h634440 = csrf_rg_tdata3;
      12'd1968: rVal1__h634440 = csrf_rg_dcsr;
      12'd1969: rVal1__h634440 = csrf_rg_dpc;
      12'd1970: rVal1__h634440 = csrf_rg_dscratch0;
      12'd1971: rVal1__h634440 = csrf_rg_dscratch1;
      12'd2048, 12'd3857, 12'd3858, 12'd3859: rVal1__h634440 = 64'd0;
      12'd2049: rVal1__h634440 = x_reg_ifc__read__h610137;
      12'd2816, 12'd3072: rVal1__h634440 = n__read__h612011;
      12'd2818, 12'd3074: rVal1__h634440 = n__read__h612202;
      12'd3073: rVal1__h634440 = csrf_time_reg;
      12'd3860: rVal1__h634440 = hartid__h1022;
      default: rVal1__h634440 = 64'b0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30])
      3'd0, 3'd1: _theResult___fst_exp__h346724 = 8'd255;
      3'd2:
	  _theResult___fst_exp__h346724 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		8'd254 :
		8'd255;
      3'd3:
	  _theResult___fst_exp__h346724 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		8'd255 :
		8'd254;
      3'd4: _theResult___fst_exp__h346724 = 8'd254;
      default: _theResult___fst_exp__h346724 = 8'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30])
      3'd0, 3'd1: _theResult___fst_sfd__h346725 = 23'd0;
      3'd2:
	  _theResult___fst_sfd__h346725 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		23'd8388607 :
		23'd0;
      3'd3:
	  _theResult___fst_sfd__h346725 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		23'd0 :
		23'd8388607;
      3'd4: _theResult___fst_sfd__h346725 = 23'd8388607;
      default: _theResult___fst_sfd__h346725 = 23'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30])
      3'd0, 3'd1: _theResult___fst_sfd__h392424 = 23'd0;
      3'd2:
	  _theResult___fst_sfd__h392424 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		23'd8388607 :
		23'd0;
      3'd3:
	  _theResult___fst_sfd__h392424 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		23'd0 :
		23'd8388607;
      3'd4: _theResult___fst_sfd__h392424 = 23'd8388607;
      default: _theResult___fst_sfd__h392424 = 23'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30])
      3'd0, 3'd1: _theResult___fst_exp__h392423 = 8'd255;
      3'd2:
	  _theResult___fst_exp__h392423 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		8'd254 :
		8'd255;
      3'd3:
	  _theResult___fst_exp__h392423 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		8'd255 :
		8'd254;
      3'd4: _theResult___fst_exp__h392423 = 8'd254;
      default: _theResult___fst_exp__h392423 = 8'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30])
      3'd0, 3'd1: _theResult___fst_exp__h438118 = 8'd255;
      3'd2:
	  _theResult___fst_exp__h438118 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		8'd254 :
		8'd255;
      3'd3:
	  _theResult___fst_exp__h438118 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		8'd255 :
		8'd254;
      3'd4: _theResult___fst_exp__h438118 = 8'd254;
      default: _theResult___fst_exp__h438118 = 8'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30])
      3'd0, 3'd1: _theResult___fst_sfd__h438119 = 23'd0;
      3'd2:
	  _theResult___fst_sfd__h438119 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		23'd8388607 :
		23'd0;
      3'd3:
	  _theResult___fst_sfd__h438119 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		23'd0 :
		23'd8388607;
      3'd4: _theResult___fst_sfd__h438119 = 23'd8388607;
      default: _theResult___fst_sfd__h438119 = 23'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd1: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q6 = 11'd2046;
      3'd2:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q6 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[163]) ?
		11'd2047 :
		11'd2046;
      3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q6 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[163]) ?
		11'd2046 :
		11'd2047;
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q6 = 11'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd1:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q7 =
	      52'hFFFFFFFFFFFFF;
      3'd2:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q7 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[163]) ?
		52'd0 :
		52'hFFFFFFFFFFFFF;
      3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q7 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[163]) ?
		52'hFFFFFFFFFFFFF :
		52'd0;
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q7 = 52'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd1: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q8 = 11'd2046;
      3'd2:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q8 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[99]) ?
		11'd2047 :
		11'd2046;
      3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q8 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[99]) ?
		11'd2046 :
		11'd2047;
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q8 = 11'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd1:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q9 =
	      52'hFFFFFFFFFFFFF;
      3'd2:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q9 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[99]) ?
		52'd0 :
		52'hFFFFFFFFFFFFF;
      3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q9 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[99]) ?
		52'hFFFFFFFFFFFFF :
		52'd0;
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q9 = 52'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd1: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q10 = 11'd2046;
      3'd2:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q10 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[35]) ?
		11'd2047 :
		11'd2046;
      3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q10 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[35]) ?
		11'd2046 :
		11'd2047;
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q10 = 11'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd1:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q11 =
	      52'hFFFFFFFFFFFFF;
      3'd2:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q11 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[35]) ?
		52'd0 :
		52'hFFFFFFFFFFFFF;
      3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q11 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[35]) ?
		52'hFFFFFFFFFFFFF :
		52'd0;
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q11 = 52'd0;
    endcase
  end
  always@(commitStage_commitTrap)
  begin
    case (commitStage_commitTrap[35:32])
      4'd0,
      4'd1,
      4'd2,
      4'd3,
      4'd4,
      4'd5,
      4'd6,
      4'd7,
      4'd8,
      4'd9,
      4'd11,
      4'd12,
      4'd13:
	  i__h703132 = commitStage_commitTrap[35:32];
      default: i__h703132 = 4'd15;
    endcase
  end
  always@(commitStage_commitTrap)
  begin
    case (commitStage_commitTrap[35:32])
      4'd0, 4'd1, 4'd3, 4'd4, 4'd5, 4'd7, 4'd8, 4'd9, 4'd11, 4'd14:
	  i__h703292 = commitStage_commitTrap[35:32];
      default: i__h703292 = 4'd15;
    endcase
  end
  always@(coreFix_memExe_lsq$firstLd or coreFix_memExe_respLrScAmoQ_data_0)
  begin
    case (coreFix_memExe_lsq$firstLd[19])
      1'd0:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_133_ETC___d1410 =
	      coreFix_memExe_respLrScAmoQ_data_0[31:0];
      1'd1:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_133_ETC___d1410 =
	      coreFix_memExe_respLrScAmoQ_data_0[63:32];
    endcase
  end
  always@(coreFix_memExe_lsq$firstLd or coreFix_memExe_respLrScAmoQ_data_0)
  begin
    case (coreFix_memExe_lsq$firstLd[19:17])
      3'd0:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_133_ETC___d1435 =
	      coreFix_memExe_respLrScAmoQ_data_0[7:0];
      3'd1:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_133_ETC___d1435 =
	      coreFix_memExe_respLrScAmoQ_data_0[15:8];
      3'd2:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_133_ETC___d1435 =
	      coreFix_memExe_respLrScAmoQ_data_0[23:16];
      3'd3:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_133_ETC___d1435 =
	      coreFix_memExe_respLrScAmoQ_data_0[31:24];
      3'd4:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_133_ETC___d1435 =
	      coreFix_memExe_respLrScAmoQ_data_0[39:32];
      3'd5:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_133_ETC___d1435 =
	      coreFix_memExe_respLrScAmoQ_data_0[47:40];
      3'd6:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_133_ETC___d1435 =
	      coreFix_memExe_respLrScAmoQ_data_0[55:48];
      3'd7:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_133_ETC___d1435 =
	      coreFix_memExe_respLrScAmoQ_data_0[63:56];
    endcase
  end
  always@(coreFix_memExe_lsq$firstLd or coreFix_memExe_respLrScAmoQ_data_0)
  begin
    case (coreFix_memExe_lsq$firstLd[19:18])
      2'd0:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_133_ETC___d1421 =
	      coreFix_memExe_respLrScAmoQ_data_0[15:0];
      2'd1:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_133_ETC___d1421 =
	      coreFix_memExe_respLrScAmoQ_data_0[31:16];
      2'd2:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_133_ETC___d1421 =
	      coreFix_memExe_respLrScAmoQ_data_0[47:32];
      2'd3:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_133_ETC___d1421 =
	      coreFix_memExe_respLrScAmoQ_data_0[63:48];
    endcase
  end
  always@(coreFix_memExe_lsq$firstLd or mmio_dataRespQ_data_0)
  begin
    case (coreFix_memExe_lsq$firstLd[19])
      1'd0:
	  SEL_ARR_mmio_dataRespQ_data_0_163_BITS_31_TO_0_ETC___d1460 =
	      mmio_dataRespQ_data_0[31:0];
      1'd1:
	  SEL_ARR_mmio_dataRespQ_data_0_163_BITS_31_TO_0_ETC___d1460 =
	      mmio_dataRespQ_data_0[63:32];
    endcase
  end
  always@(coreFix_memExe_lsq$firstLd or mmio_dataRespQ_data_0)
  begin
    case (coreFix_memExe_lsq$firstLd[19:18])
      2'd0:
	  SEL_ARR_mmio_dataRespQ_data_0_163_BITS_15_TO_0_ETC___d1469 =
	      mmio_dataRespQ_data_0[15:0];
      2'd1:
	  SEL_ARR_mmio_dataRespQ_data_0_163_BITS_15_TO_0_ETC___d1469 =
	      mmio_dataRespQ_data_0[31:16];
      2'd2:
	  SEL_ARR_mmio_dataRespQ_data_0_163_BITS_15_TO_0_ETC___d1469 =
	      mmio_dataRespQ_data_0[47:32];
      2'd3:
	  SEL_ARR_mmio_dataRespQ_data_0_163_BITS_15_TO_0_ETC___d1469 =
	      mmio_dataRespQ_data_0[63:48];
    endcase
  end
  always@(coreFix_memExe_lsq$firstLd or mmio_dataRespQ_data_0)
  begin
    case (coreFix_memExe_lsq$firstLd[19:17])
      3'd0:
	  SEL_ARR_mmio_dataRespQ_data_0_163_BITS_7_TO_0__ETC___d1482 =
	      mmio_dataRespQ_data_0[7:0];
      3'd1:
	  SEL_ARR_mmio_dataRespQ_data_0_163_BITS_7_TO_0__ETC___d1482 =
	      mmio_dataRespQ_data_0[15:8];
      3'd2:
	  SEL_ARR_mmio_dataRespQ_data_0_163_BITS_7_TO_0__ETC___d1482 =
	      mmio_dataRespQ_data_0[23:16];
      3'd3:
	  SEL_ARR_mmio_dataRespQ_data_0_163_BITS_7_TO_0__ETC___d1482 =
	      mmio_dataRespQ_data_0[31:24];
      3'd4:
	  SEL_ARR_mmio_dataRespQ_data_0_163_BITS_7_TO_0__ETC___d1482 =
	      mmio_dataRespQ_data_0[39:32];
      3'd5:
	  SEL_ARR_mmio_dataRespQ_data_0_163_BITS_7_TO_0__ETC___d1482 =
	      mmio_dataRespQ_data_0[47:40];
      3'd6:
	  SEL_ARR_mmio_dataRespQ_data_0_163_BITS_7_TO_0__ETC___d1482 =
	      mmio_dataRespQ_data_0[55:48];
      3'd7:
	  SEL_ARR_mmio_dataRespQ_data_0_163_BITS_7_TO_0__ETC___d1482 =
	      mmio_dataRespQ_data_0[63:56];
    endcase
  end
  always@(coreFix_memExe_dTlb$procResp)
  begin
    case (coreFix_memExe_dTlb$procResp[93:91])
      3'd0, 3'd2:
	  CASE_coreFix_memExe_dTlbprocResp_BITS_93_TO_9_ETC__q12 = 4'd4;
      default: CASE_coreFix_memExe_dTlbprocResp_BITS_93_TO_9_ETC__q12 = 4'd6;
    endcase
  end
  always@(coreFix_memExe_dTlb$procResp)
  begin
    case (coreFix_memExe_dTlb$procResp[97:94])
      4'd0, 4'd1, 4'd2, 4'd3, 4'd4, 4'd5, 4'd6, 4'd7, 4'd8, 4'd9:
	  CASE_coreFix_memExe_dTlbprocResp_BITS_97_TO_9_ETC__q13 =
	      coreFix_memExe_dTlb$procResp[97:94];
      4'd11: CASE_coreFix_memExe_dTlbprocResp_BITS_97_TO_9_ETC__q13 = 4'd10;
      4'd12: CASE_coreFix_memExe_dTlbprocResp_BITS_97_TO_9_ETC__q13 = 4'd11;
      4'd13: CASE_coreFix_memExe_dTlbprocResp_BITS_97_TO_9_ETC__q13 = 4'd12;
      default: CASE_coreFix_memExe_dTlbprocResp_BITS_97_TO_9_ETC__q13 = 4'd13;
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2933 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[65:2];
      1'd1:
	  SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2933 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[65:2];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q14 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[514:451];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q14 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[514:451];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q15 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[450:387];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q15 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[450:387];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q16 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[386:323];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q16 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[386:323];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q17 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[322:259];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q17 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[322:259];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q18 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[258:195];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q18 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[258:195];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q19 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[194:131];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q19 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[194:131];
    endcase
  end
  always@(guard__h355461 or
	  _theResult___fst_exp__h363509 or
	  out_exp__h363954 or _theResult___exp__h363951)
  begin
    case (guard__h355461)
      2'b0, 2'b01:
	  CASE_guard55461_0b0_theResult___fst_exp63509_0_ETC__q24 =
	      _theResult___fst_exp__h363509;
      2'b10:
	  CASE_guard55461_0b0_theResult___fst_exp63509_0_ETC__q24 =
	      out_exp__h363954;
      2'b11:
	  CASE_guard55461_0b0_theResult___fst_exp63509_0_ETC__q24 =
	      _theResult___exp__h363951;
    endcase
  end
  always@(guard__h355461 or
	  _theResult___fst_exp__h363509 or _theResult___exp__h363951)
  begin
    case (guard__h355461)
      2'b0:
	  CASE_guard55461_0b0_theResult___fst_exp63509_0_ETC__q25 =
	      _theResult___fst_exp__h363509;
      2'b01, 2'b10, 2'b11:
	  CASE_guard55461_0b0_theResult___fst_exp63509_0_ETC__q25 =
	      _theResult___exp__h363951;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  CASE_guard55461_0b0_theResult___fst_exp63509_0_ETC__q24 or
	  CASE_guard55461_0b0_theResult___fst_exp63509_0_ETC__q25 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4590 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4592 or
	  _theResult___fst_exp__h363509)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30])
      3'd0:
	  _theResult___fst_exp__h364029 =
	      CASE_guard55461_0b0_theResult___fst_exp63509_0_ETC__q24;
      3'd1:
	  _theResult___fst_exp__h364029 =
	      CASE_guard55461_0b0_theResult___fst_exp63509_0_ETC__q25;
      3'd2:
	  _theResult___fst_exp__h364029 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4590;
      3'd3:
	  _theResult___fst_exp__h364029 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4592;
      3'd4: _theResult___fst_exp__h364029 = _theResult___fst_exp__h363509;
      default: _theResult___fst_exp__h364029 = 8'd0;
    endcase
  end
  always@(guard__h346752 or
	  _theResult___fst_exp__h354853 or
	  out_exp__h355372 or _theResult___exp__h355369)
  begin
    case (guard__h346752)
      2'b0, 2'b01:
	  CASE_guard46752_0b0_theResult___fst_exp54853_0_ETC__q26 =
	      _theResult___fst_exp__h354853;
      2'b10:
	  CASE_guard46752_0b0_theResult___fst_exp54853_0_ETC__q26 =
	      out_exp__h355372;
      2'b11:
	  CASE_guard46752_0b0_theResult___fst_exp54853_0_ETC__q26 =
	      _theResult___exp__h355369;
    endcase
  end
  always@(guard__h346752 or
	  _theResult___fst_exp__h354853 or _theResult___exp__h355369)
  begin
    case (guard__h346752)
      2'b0:
	  CASE_guard46752_0b0_theResult___fst_exp54853_0_ETC__q27 =
	      _theResult___fst_exp__h354853;
      2'b01, 2'b10, 2'b11:
	  CASE_guard46752_0b0_theResult___fst_exp54853_0_ETC__q27 =
	      _theResult___exp__h355369;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  CASE_guard46752_0b0_theResult___fst_exp54853_0_ETC__q26 or
	  CASE_guard46752_0b0_theResult___fst_exp54853_0_ETC__q27 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d4368 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d4371 or
	  _theResult___fst_exp__h354853)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30])
      3'd0:
	  _theResult___fst_exp__h355447 =
	      CASE_guard46752_0b0_theResult___fst_exp54853_0_ETC__q26;
      3'd1:
	  _theResult___fst_exp__h355447 =
	      CASE_guard46752_0b0_theResult___fst_exp54853_0_ETC__q27;
      3'd2:
	  _theResult___fst_exp__h355447 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d4368;
      3'd3:
	  _theResult___fst_exp__h355447 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d4371;
      3'd4: _theResult___fst_exp__h355447 = _theResult___fst_exp__h354853;
      default: _theResult___fst_exp__h355447 = 8'd0;
    endcase
  end
  always@(guard__h364391 or
	  _theResult___fst_exp__h372619 or
	  out_exp__h373138 or _theResult___exp__h373135)
  begin
    case (guard__h364391)
      2'b0, 2'b01:
	  CASE_guard64391_0b0_theResult___fst_exp72619_0_ETC__q32 =
	      _theResult___fst_exp__h372619;
      2'b10:
	  CASE_guard64391_0b0_theResult___fst_exp72619_0_ETC__q32 =
	      out_exp__h373138;
      2'b11:
	  CASE_guard64391_0b0_theResult___fst_exp72619_0_ETC__q32 =
	      _theResult___exp__h373135;
    endcase
  end
  always@(guard__h364391 or
	  _theResult___fst_exp__h372619 or _theResult___exp__h373135)
  begin
    case (guard__h364391)
      2'b0:
	  CASE_guard64391_0b0_theResult___fst_exp72619_0_ETC__q33 =
	      _theResult___fst_exp__h372619;
      2'b01, 2'b10, 2'b11:
	  CASE_guard64391_0b0_theResult___fst_exp72619_0_ETC__q33 =
	      _theResult___exp__h373135;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  CASE_guard64391_0b0_theResult___fst_exp72619_0_ETC__q32 or
	  CASE_guard64391_0b0_theResult___fst_exp72619_0_ETC__q33 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d4915 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d4917 or
	  _theResult___fst_exp__h372619)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30])
      3'd0:
	  _theResult___fst_exp__h373213 =
	      CASE_guard64391_0b0_theResult___fst_exp72619_0_ETC__q32;
      3'd1:
	  _theResult___fst_exp__h373213 =
	      CASE_guard64391_0b0_theResult___fst_exp72619_0_ETC__q33;
      3'd2:
	  _theResult___fst_exp__h373213 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d4915;
      3'd3:
	  _theResult___fst_exp__h373213 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d4917;
      3'd4: _theResult___fst_exp__h373213 = _theResult___fst_exp__h372619;
      default: _theResult___fst_exp__h373213 = 8'd0;
    endcase
  end
  always@(guard__h373227 or
	  _theResult___fst_exp__h381304 or
	  out_exp__h381774 or _theResult___exp__h381771)
  begin
    case (guard__h373227)
      2'b0, 2'b01:
	  CASE_guard73227_0b0_theResult___fst_exp81304_0_ETC__q37 =
	      _theResult___fst_exp__h381304;
      2'b10:
	  CASE_guard73227_0b0_theResult___fst_exp81304_0_ETC__q37 =
	      out_exp__h381774;
      2'b11:
	  CASE_guard73227_0b0_theResult___fst_exp81304_0_ETC__q37 =
	      _theResult___exp__h381771;
    endcase
  end
  always@(guard__h373227 or
	  _theResult___fst_exp__h381304 or _theResult___exp__h381771)
  begin
    case (guard__h373227)
      2'b0:
	  CASE_guard73227_0b0_theResult___fst_exp81304_0_ETC__q38 =
	      _theResult___fst_exp__h381304;
      2'b01, 2'b10, 2'b11:
	  CASE_guard73227_0b0_theResult___fst_exp81304_0_ETC__q38 =
	      _theResult___exp__h381771;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  CASE_guard73227_0b0_theResult___fst_exp81304_0_ETC__q37 or
	  CASE_guard73227_0b0_theResult___fst_exp81304_0_ETC__q38 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4984 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4986 or
	  _theResult___fst_exp__h381304)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30])
      3'd0:
	  _theResult___fst_exp__h381849 =
	      CASE_guard73227_0b0_theResult___fst_exp81304_0_ETC__q37;
      3'd1:
	  _theResult___fst_exp__h381849 =
	      CASE_guard73227_0b0_theResult___fst_exp81304_0_ETC__q38;
      3'd2:
	  _theResult___fst_exp__h381849 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4984;
      3'd3:
	  _theResult___fst_exp__h381849 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4986;
      3'd4: _theResult___fst_exp__h381849 = _theResult___fst_exp__h381304;
      default: _theResult___fst_exp__h381849 = 8'd0;
    endcase
  end
  always@(guard__h355461 or
	  _theResult___snd__h363460 or
	  out_sfd__h363955 or _theResult___sfd__h363952)
  begin
    case (guard__h355461)
      2'b0, 2'b01:
	  CASE_guard55461_0b0_theResult___snd63460_BITS__ETC__q39 =
	      _theResult___snd__h363460[56:34];
      2'b10:
	  CASE_guard55461_0b0_theResult___snd63460_BITS__ETC__q39 =
	      out_sfd__h363955;
      2'b11:
	  CASE_guard55461_0b0_theResult___snd63460_BITS__ETC__q39 =
	      _theResult___sfd__h363952;
    endcase
  end
  always@(guard__h355461 or
	  _theResult___snd__h363460 or _theResult___sfd__h363952)
  begin
    case (guard__h355461)
      2'b0:
	  CASE_guard55461_0b0_theResult___snd63460_BITS__ETC__q40 =
	      _theResult___snd__h363460[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard55461_0b0_theResult___snd63460_BITS__ETC__q40 =
	      _theResult___sfd__h363952;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  CASE_guard55461_0b0_theResult___snd63460_BITS__ETC__q39 or
	  CASE_guard55461_0b0_theResult___snd63460_BITS__ETC__q40 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5034 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5036 or
	  _theResult___snd__h363460)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30])
      3'd0:
	  _theResult___fst_sfd__h364030 =
	      CASE_guard55461_0b0_theResult___snd63460_BITS__ETC__q39;
      3'd1:
	  _theResult___fst_sfd__h364030 =
	      CASE_guard55461_0b0_theResult___snd63460_BITS__ETC__q40;
      3'd2:
	  _theResult___fst_sfd__h364030 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5034;
      3'd3:
	  _theResult___fst_sfd__h364030 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5036;
      3'd4: _theResult___fst_sfd__h364030 = _theResult___snd__h363460[56:34];
      default: _theResult___fst_sfd__h364030 = 23'd0;
    endcase
  end
  always@(guard__h346752 or
	  sfdin__h354847 or out_sfd__h355373 or _theResult___sfd__h355370)
  begin
    case (guard__h346752)
      2'b0, 2'b01:
	  CASE_guard46752_0b0_sfdin54847_BITS_56_TO_34_0_ETC__q41 =
	      sfdin__h354847[56:34];
      2'b10:
	  CASE_guard46752_0b0_sfdin54847_BITS_56_TO_34_0_ETC__q41 =
	      out_sfd__h355373;
      2'b11:
	  CASE_guard46752_0b0_sfdin54847_BITS_56_TO_34_0_ETC__q41 =
	      _theResult___sfd__h355370;
    endcase
  end
  always@(guard__h346752 or sfdin__h354847 or _theResult___sfd__h355370)
  begin
    case (guard__h346752)
      2'b0:
	  CASE_guard46752_0b0_sfdin54847_BITS_56_TO_34_0_ETC__q42 =
	      sfdin__h354847[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard46752_0b0_sfdin54847_BITS_56_TO_34_0_ETC__q42 =
	      _theResult___sfd__h355370;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  CASE_guard46752_0b0_sfdin54847_BITS_56_TO_34_0_ETC__q41 or
	  CASE_guard46752_0b0_sfdin54847_BITS_56_TO_34_0_ETC__q42 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5015 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5017 or
	  sfdin__h354847)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30])
      3'd0:
	  _theResult___fst_sfd__h355448 =
	      CASE_guard46752_0b0_sfdin54847_BITS_56_TO_34_0_ETC__q41;
      3'd1:
	  _theResult___fst_sfd__h355448 =
	      CASE_guard46752_0b0_sfdin54847_BITS_56_TO_34_0_ETC__q42;
      3'd2:
	  _theResult___fst_sfd__h355448 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5015;
      3'd3:
	  _theResult___fst_sfd__h355448 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5017;
      3'd4: _theResult___fst_sfd__h355448 = sfdin__h354847[56:34];
      default: _theResult___fst_sfd__h355448 = 23'd0;
    endcase
  end
  always@(guard__h364391 or
	  sfdin__h372613 or out_sfd__h373139 or _theResult___sfd__h373136)
  begin
    case (guard__h364391)
      2'b0, 2'b01:
	  CASE_guard64391_0b0_sfdin72613_BITS_56_TO_34_0_ETC__q43 =
	      sfdin__h372613[56:34];
      2'b10:
	  CASE_guard64391_0b0_sfdin72613_BITS_56_TO_34_0_ETC__q43 =
	      out_sfd__h373139;
      2'b11:
	  CASE_guard64391_0b0_sfdin72613_BITS_56_TO_34_0_ETC__q43 =
	      _theResult___sfd__h373136;
    endcase
  end
  always@(guard__h364391 or sfdin__h372613 or _theResult___sfd__h373136)
  begin
    case (guard__h364391)
      2'b0:
	  CASE_guard64391_0b0_sfdin72613_BITS_56_TO_34_0_ETC__q44 =
	      sfdin__h372613[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard64391_0b0_sfdin72613_BITS_56_TO_34_0_ETC__q44 =
	      _theResult___sfd__h373136;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  CASE_guard64391_0b0_sfdin72613_BITS_56_TO_34_0_ETC__q43 or
	  CASE_guard64391_0b0_sfdin72613_BITS_56_TO_34_0_ETC__q44 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5061 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5063 or
	  sfdin__h372613)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30])
      3'd0:
	  _theResult___fst_sfd__h373214 =
	      CASE_guard64391_0b0_sfdin72613_BITS_56_TO_34_0_ETC__q43;
      3'd1:
	  _theResult___fst_sfd__h373214 =
	      CASE_guard64391_0b0_sfdin72613_BITS_56_TO_34_0_ETC__q44;
      3'd2:
	  _theResult___fst_sfd__h373214 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5061;
      3'd3:
	  _theResult___fst_sfd__h373214 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5063;
      3'd4: _theResult___fst_sfd__h373214 = sfdin__h372613[56:34];
      default: _theResult___fst_sfd__h373214 = 23'd0;
    endcase
  end
  always@(guard__h373227 or
	  _theResult___snd__h381250 or
	  out_sfd__h381775 or _theResult___sfd__h381772)
  begin
    case (guard__h373227)
      2'b0, 2'b01:
	  CASE_guard73227_0b0_theResult___snd81250_BITS__ETC__q45 =
	      _theResult___snd__h381250[56:34];
      2'b10:
	  CASE_guard73227_0b0_theResult___snd81250_BITS__ETC__q45 =
	      out_sfd__h381775;
      2'b11:
	  CASE_guard73227_0b0_theResult___snd81250_BITS__ETC__q45 =
	      _theResult___sfd__h381772;
    endcase
  end
  always@(guard__h373227 or
	  _theResult___snd__h381250 or _theResult___sfd__h381772)
  begin
    case (guard__h373227)
      2'b0:
	  CASE_guard73227_0b0_theResult___snd81250_BITS__ETC__q46 =
	      _theResult___snd__h381250[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard73227_0b0_theResult___snd81250_BITS__ETC__q46 =
	      _theResult___sfd__h381772;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  CASE_guard73227_0b0_theResult___snd81250_BITS__ETC__q45 or
	  CASE_guard73227_0b0_theResult___snd81250_BITS__ETC__q46 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5080 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5082 or
	  _theResult___snd__h381250)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30])
      3'd0:
	  _theResult___fst_sfd__h381850 =
	      CASE_guard73227_0b0_theResult___snd81250_BITS__ETC__q45;
      3'd1:
	  _theResult___fst_sfd__h381850 =
	      CASE_guard73227_0b0_theResult___snd81250_BITS__ETC__q46;
      3'd2:
	  _theResult___fst_sfd__h381850 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5080;
      3'd3:
	  _theResult___fst_sfd__h381850 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5082;
      3'd4: _theResult___fst_sfd__h381850 = _theResult___snd__h381250[56:34];
      default: _theResult___fst_sfd__h381850 = 23'd0;
    endcase
  end
  always@(guard__h346752 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (guard__h346752)
      2'b0, 2'b01, 2'b10:
	  CASE_guard46752_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q47 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      2'd3:
	  CASE_guard46752_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q47 =
	      guard__h346752 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get or
	  CASE_guard46752_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q47 or
	  guard__h346752)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5168 =
	      CASE_guard46752_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q47;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5168 =
	      (guard__h346752 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		(guard__h346752 == 2'b01 || guard__h346752 == 2'b10 ||
		 guard__h346752 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5168 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5168 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(guard__h346752 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (guard__h346752)
      2'b0, 2'b01, 2'b10:
	  CASE_guard46752_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q48 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      2'd3:
	  CASE_guard46752_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q48 =
	      guard__h346752 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get or
	  CASE_guard46752_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q48 or
	  guard__h346752)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5112 =
	      CASE_guard46752_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q48;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5112 =
	      (guard__h346752 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		guard__h346752 != 2'b01 && guard__h346752 != 2'b10 &&
		guard__h346752 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5112 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5112 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(guard__h355461 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (guard__h355461)
      2'b0, 2'b01, 2'b10:
	  CASE_guard55461_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q49 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      2'd3:
	  CASE_guard55461_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q49 =
	      guard__h355461 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get or
	  CASE_guard55461_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q49 or
	  guard__h355461)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5175 =
	      CASE_guard55461_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q49;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5175 =
	      (guard__h355461 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		(guard__h355461 == 2'b01 || guard__h355461 == 2'b10 ||
		 guard__h355461 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5175 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5175 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(guard__h355461 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (guard__h355461)
      2'b0, 2'b01, 2'b10:
	  CASE_guard55461_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q50 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      2'd3:
	  CASE_guard55461_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q50 =
	      guard__h355461 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get or
	  CASE_guard55461_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q50 or
	  guard__h355461)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5125 =
	      CASE_guard55461_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q50;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5125 =
	      (guard__h355461 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		guard__h355461 != 2'b01 && guard__h355461 != 2'b10 &&
		guard__h355461 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5125 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5125 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(guard__h364391 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (guard__h364391)
      2'b0, 2'b01, 2'b10:
	  CASE_guard64391_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q51 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      2'd3:
	  CASE_guard64391_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q51 =
	      guard__h364391 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get or
	  CASE_guard64391_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q51 or
	  guard__h364391)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5185 =
	      CASE_guard64391_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q51;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5185 =
	      (guard__h364391 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		(guard__h364391 == 2'b01 || guard__h364391 == 2'b10 ||
		 guard__h364391 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5185 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5185 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(guard__h364391 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (guard__h364391)
      2'b0, 2'b01, 2'b10:
	  CASE_guard64391_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q52 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      2'd3:
	  CASE_guard64391_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q52 =
	      guard__h364391 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get or
	  CASE_guard64391_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q52 or
	  guard__h364391)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5142 =
	      CASE_guard64391_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q52;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5142 =
	      (guard__h364391 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		guard__h364391 != 2'b01 && guard__h364391 != 2'b10 &&
		guard__h364391 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5142 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5142 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(guard__h373227 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (guard__h373227)
      2'b0, 2'b01, 2'b10:
	  CASE_guard73227_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q53 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      2'd3:
	  CASE_guard73227_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q53 =
	      guard__h373227 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get or
	  CASE_guard73227_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q53 or
	  guard__h373227)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5192 =
	      CASE_guard73227_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q53;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5192 =
	      (guard__h373227 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		(guard__h373227 == 2'b01 || guard__h373227 == 2'b10 ||
		 guard__h373227 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5192 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5192 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(guard__h373227 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (guard__h373227)
      2'b0, 2'b01, 2'b10:
	  CASE_guard73227_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q54 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      2'd3:
	  CASE_guard73227_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q54 =
	      guard__h373227 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get or
	  CASE_guard73227_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q54 or
	  guard__h373227)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5155 =
	      CASE_guard73227_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q54;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5155 =
	      (guard__h373227 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		guard__h373227 != 2'b01 && guard__h373227 != 2'b10 &&
		guard__h373227 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5155 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5155 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30])
      3'd0, 3'd1, 3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5178 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5178 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30])
      3'd0, 3'd1, 3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5129 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5129 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32:30] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(guard__h401158 or
	  _theResult___fst_exp__h409206 or
	  out_exp__h409651 or _theResult___exp__h409648)
  begin
    case (guard__h401158)
      2'b0, 2'b01:
	  CASE_guard01158_0b0_theResult___fst_exp09206_0_ETC__q59 =
	      _theResult___fst_exp__h409206;
      2'b10:
	  CASE_guard01158_0b0_theResult___fst_exp09206_0_ETC__q59 =
	      out_exp__h409651;
      2'b11:
	  CASE_guard01158_0b0_theResult___fst_exp09206_0_ETC__q59 =
	      _theResult___exp__h409648;
    endcase
  end
  always@(guard__h401158 or
	  _theResult___fst_exp__h409206 or _theResult___exp__h409648)
  begin
    case (guard__h401158)
      2'b0:
	  CASE_guard01158_0b0_theResult___fst_exp09206_0_ETC__q60 =
	      _theResult___fst_exp__h409206;
      2'b01, 2'b10, 2'b11:
	  CASE_guard01158_0b0_theResult___fst_exp09206_0_ETC__q60 =
	      _theResult___exp__h409648;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  CASE_guard01158_0b0_theResult___fst_exp09206_0_ETC__q59 or
	  CASE_guard01158_0b0_theResult___fst_exp09206_0_ETC__q60 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5982 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5984 or
	  _theResult___fst_exp__h409206)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30])
      3'd0:
	  _theResult___fst_exp__h409726 =
	      CASE_guard01158_0b0_theResult___fst_exp09206_0_ETC__q59;
      3'd1:
	  _theResult___fst_exp__h409726 =
	      CASE_guard01158_0b0_theResult___fst_exp09206_0_ETC__q60;
      3'd2:
	  _theResult___fst_exp__h409726 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5982;
      3'd3:
	  _theResult___fst_exp__h409726 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5984;
      3'd4: _theResult___fst_exp__h409726 = _theResult___fst_exp__h409206;
      default: _theResult___fst_exp__h409726 = 8'd0;
    endcase
  end
  always@(guard__h392451 or
	  _theResult___fst_exp__h400550 or
	  out_exp__h401069 or _theResult___exp__h401066)
  begin
    case (guard__h392451)
      2'b0, 2'b01:
	  CASE_guard92451_0b0_theResult___fst_exp00550_0_ETC__q61 =
	      _theResult___fst_exp__h400550;
      2'b10:
	  CASE_guard92451_0b0_theResult___fst_exp00550_0_ETC__q61 =
	      out_exp__h401069;
      2'b11:
	  CASE_guard92451_0b0_theResult___fst_exp00550_0_ETC__q61 =
	      _theResult___exp__h401066;
    endcase
  end
  always@(guard__h392451 or
	  _theResult___fst_exp__h400550 or _theResult___exp__h401066)
  begin
    case (guard__h392451)
      2'b0:
	  CASE_guard92451_0b0_theResult___fst_exp00550_0_ETC__q62 =
	      _theResult___fst_exp__h400550;
      2'b01, 2'b10, 2'b11:
	  CASE_guard92451_0b0_theResult___fst_exp00550_0_ETC__q62 =
	      _theResult___exp__h401066;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  CASE_guard92451_0b0_theResult___fst_exp00550_0_ETC__q61 or
	  CASE_guard92451_0b0_theResult___fst_exp00550_0_ETC__q62 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5760 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5763 or
	  _theResult___fst_exp__h400550)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30])
      3'd0:
	  _theResult___fst_exp__h401144 =
	      CASE_guard92451_0b0_theResult___fst_exp00550_0_ETC__q61;
      3'd1:
	  _theResult___fst_exp__h401144 =
	      CASE_guard92451_0b0_theResult___fst_exp00550_0_ETC__q62;
      3'd2:
	  _theResult___fst_exp__h401144 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5760;
      3'd3:
	  _theResult___fst_exp__h401144 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5763;
      3'd4: _theResult___fst_exp__h401144 = _theResult___fst_exp__h400550;
      default: _theResult___fst_exp__h401144 = 8'd0;
    endcase
  end
  always@(guard__h410088 or
	  _theResult___fst_exp__h418316 or
	  out_exp__h418835 or _theResult___exp__h418832)
  begin
    case (guard__h410088)
      2'b0, 2'b01:
	  CASE_guard10088_0b0_theResult___fst_exp18316_0_ETC__q67 =
	      _theResult___fst_exp__h418316;
      2'b10:
	  CASE_guard10088_0b0_theResult___fst_exp18316_0_ETC__q67 =
	      out_exp__h418835;
      2'b11:
	  CASE_guard10088_0b0_theResult___fst_exp18316_0_ETC__q67 =
	      _theResult___exp__h418832;
    endcase
  end
  always@(guard__h410088 or
	  _theResult___fst_exp__h418316 or _theResult___exp__h418832)
  begin
    case (guard__h410088)
      2'b0:
	  CASE_guard10088_0b0_theResult___fst_exp18316_0_ETC__q68 =
	      _theResult___fst_exp__h418316;
      2'b01, 2'b10, 2'b11:
	  CASE_guard10088_0b0_theResult___fst_exp18316_0_ETC__q68 =
	      _theResult___exp__h418832;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  CASE_guard10088_0b0_theResult___fst_exp18316_0_ETC__q67 or
	  CASE_guard10088_0b0_theResult___fst_exp18316_0_ETC__q68 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6307 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6309 or
	  _theResult___fst_exp__h418316)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30])
      3'd0:
	  _theResult___fst_exp__h418910 =
	      CASE_guard10088_0b0_theResult___fst_exp18316_0_ETC__q67;
      3'd1:
	  _theResult___fst_exp__h418910 =
	      CASE_guard10088_0b0_theResult___fst_exp18316_0_ETC__q68;
      3'd2:
	  _theResult___fst_exp__h418910 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6307;
      3'd3:
	  _theResult___fst_exp__h418910 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6309;
      3'd4: _theResult___fst_exp__h418910 = _theResult___fst_exp__h418316;
      default: _theResult___fst_exp__h418910 = 8'd0;
    endcase
  end
  always@(guard__h418924 or
	  _theResult___fst_exp__h427001 or
	  out_exp__h427471 or _theResult___exp__h427468)
  begin
    case (guard__h418924)
      2'b0, 2'b01:
	  CASE_guard18924_0b0_theResult___fst_exp27001_0_ETC__q72 =
	      _theResult___fst_exp__h427001;
      2'b10:
	  CASE_guard18924_0b0_theResult___fst_exp27001_0_ETC__q72 =
	      out_exp__h427471;
      2'b11:
	  CASE_guard18924_0b0_theResult___fst_exp27001_0_ETC__q72 =
	      _theResult___exp__h427468;
    endcase
  end
  always@(guard__h418924 or
	  _theResult___fst_exp__h427001 or _theResult___exp__h427468)
  begin
    case (guard__h418924)
      2'b0:
	  CASE_guard18924_0b0_theResult___fst_exp27001_0_ETC__q73 =
	      _theResult___fst_exp__h427001;
      2'b01, 2'b10, 2'b11:
	  CASE_guard18924_0b0_theResult___fst_exp27001_0_ETC__q73 =
	      _theResult___exp__h427468;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  CASE_guard18924_0b0_theResult___fst_exp27001_0_ETC__q72 or
	  CASE_guard18924_0b0_theResult___fst_exp27001_0_ETC__q73 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6376 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6378 or
	  _theResult___fst_exp__h427001)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30])
      3'd0:
	  _theResult___fst_exp__h427546 =
	      CASE_guard18924_0b0_theResult___fst_exp27001_0_ETC__q72;
      3'd1:
	  _theResult___fst_exp__h427546 =
	      CASE_guard18924_0b0_theResult___fst_exp27001_0_ETC__q73;
      3'd2:
	  _theResult___fst_exp__h427546 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6376;
      3'd3:
	  _theResult___fst_exp__h427546 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6378;
      3'd4: _theResult___fst_exp__h427546 = _theResult___fst_exp__h427001;
      default: _theResult___fst_exp__h427546 = 8'd0;
    endcase
  end
  always@(guard__h401158 or
	  _theResult___snd__h409157 or
	  out_sfd__h409652 or _theResult___sfd__h409649)
  begin
    case (guard__h401158)
      2'b0, 2'b01:
	  CASE_guard01158_0b0_theResult___snd09157_BITS__ETC__q74 =
	      _theResult___snd__h409157[56:34];
      2'b10:
	  CASE_guard01158_0b0_theResult___snd09157_BITS__ETC__q74 =
	      out_sfd__h409652;
      2'b11:
	  CASE_guard01158_0b0_theResult___snd09157_BITS__ETC__q74 =
	      _theResult___sfd__h409649;
    endcase
  end
  always@(guard__h401158 or
	  _theResult___snd__h409157 or _theResult___sfd__h409649)
  begin
    case (guard__h401158)
      2'b0:
	  CASE_guard01158_0b0_theResult___snd09157_BITS__ETC__q75 =
	      _theResult___snd__h409157[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard01158_0b0_theResult___snd09157_BITS__ETC__q75 =
	      _theResult___sfd__h409649;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  CASE_guard01158_0b0_theResult___snd09157_BITS__ETC__q74 or
	  CASE_guard01158_0b0_theResult___snd09157_BITS__ETC__q75 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6426 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6428 or
	  _theResult___snd__h409157)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30])
      3'd0:
	  _theResult___fst_sfd__h409727 =
	      CASE_guard01158_0b0_theResult___snd09157_BITS__ETC__q74;
      3'd1:
	  _theResult___fst_sfd__h409727 =
	      CASE_guard01158_0b0_theResult___snd09157_BITS__ETC__q75;
      3'd2:
	  _theResult___fst_sfd__h409727 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6426;
      3'd3:
	  _theResult___fst_sfd__h409727 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6428;
      3'd4: _theResult___fst_sfd__h409727 = _theResult___snd__h409157[56:34];
      default: _theResult___fst_sfd__h409727 = 23'd0;
    endcase
  end
  always@(guard__h392451 or
	  sfdin__h400544 or out_sfd__h401070 or _theResult___sfd__h401067)
  begin
    case (guard__h392451)
      2'b0, 2'b01:
	  CASE_guard92451_0b0_sfdin00544_BITS_56_TO_34_0_ETC__q76 =
	      sfdin__h400544[56:34];
      2'b10:
	  CASE_guard92451_0b0_sfdin00544_BITS_56_TO_34_0_ETC__q76 =
	      out_sfd__h401070;
      2'b11:
	  CASE_guard92451_0b0_sfdin00544_BITS_56_TO_34_0_ETC__q76 =
	      _theResult___sfd__h401067;
    endcase
  end
  always@(guard__h392451 or sfdin__h400544 or _theResult___sfd__h401067)
  begin
    case (guard__h392451)
      2'b0:
	  CASE_guard92451_0b0_sfdin00544_BITS_56_TO_34_0_ETC__q77 =
	      sfdin__h400544[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard92451_0b0_sfdin00544_BITS_56_TO_34_0_ETC__q77 =
	      _theResult___sfd__h401067;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  CASE_guard92451_0b0_sfdin00544_BITS_56_TO_34_0_ETC__q76 or
	  CASE_guard92451_0b0_sfdin00544_BITS_56_TO_34_0_ETC__q77 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6407 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6409 or
	  sfdin__h400544)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30])
      3'd0:
	  _theResult___fst_sfd__h401145 =
	      CASE_guard92451_0b0_sfdin00544_BITS_56_TO_34_0_ETC__q76;
      3'd1:
	  _theResult___fst_sfd__h401145 =
	      CASE_guard92451_0b0_sfdin00544_BITS_56_TO_34_0_ETC__q77;
      3'd2:
	  _theResult___fst_sfd__h401145 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6407;
      3'd3:
	  _theResult___fst_sfd__h401145 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6409;
      3'd4: _theResult___fst_sfd__h401145 = sfdin__h400544[56:34];
      default: _theResult___fst_sfd__h401145 = 23'd0;
    endcase
  end
  always@(guard__h410088 or
	  sfdin__h418310 or out_sfd__h418836 or _theResult___sfd__h418833)
  begin
    case (guard__h410088)
      2'b0, 2'b01:
	  CASE_guard10088_0b0_sfdin18310_BITS_56_TO_34_0_ETC__q78 =
	      sfdin__h418310[56:34];
      2'b10:
	  CASE_guard10088_0b0_sfdin18310_BITS_56_TO_34_0_ETC__q78 =
	      out_sfd__h418836;
      2'b11:
	  CASE_guard10088_0b0_sfdin18310_BITS_56_TO_34_0_ETC__q78 =
	      _theResult___sfd__h418833;
    endcase
  end
  always@(guard__h410088 or sfdin__h418310 or _theResult___sfd__h418833)
  begin
    case (guard__h410088)
      2'b0:
	  CASE_guard10088_0b0_sfdin18310_BITS_56_TO_34_0_ETC__q79 =
	      sfdin__h418310[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard10088_0b0_sfdin18310_BITS_56_TO_34_0_ETC__q79 =
	      _theResult___sfd__h418833;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  CASE_guard10088_0b0_sfdin18310_BITS_56_TO_34_0_ETC__q78 or
	  CASE_guard10088_0b0_sfdin18310_BITS_56_TO_34_0_ETC__q79 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6453 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6455 or
	  sfdin__h418310)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30])
      3'd0:
	  _theResult___fst_sfd__h418911 =
	      CASE_guard10088_0b0_sfdin18310_BITS_56_TO_34_0_ETC__q78;
      3'd1:
	  _theResult___fst_sfd__h418911 =
	      CASE_guard10088_0b0_sfdin18310_BITS_56_TO_34_0_ETC__q79;
      3'd2:
	  _theResult___fst_sfd__h418911 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6453;
      3'd3:
	  _theResult___fst_sfd__h418911 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6455;
      3'd4: _theResult___fst_sfd__h418911 = sfdin__h418310[56:34];
      default: _theResult___fst_sfd__h418911 = 23'd0;
    endcase
  end
  always@(guard__h418924 or
	  _theResult___snd__h426947 or
	  out_sfd__h427472 or _theResult___sfd__h427469)
  begin
    case (guard__h418924)
      2'b0, 2'b01:
	  CASE_guard18924_0b0_theResult___snd26947_BITS__ETC__q80 =
	      _theResult___snd__h426947[56:34];
      2'b10:
	  CASE_guard18924_0b0_theResult___snd26947_BITS__ETC__q80 =
	      out_sfd__h427472;
      2'b11:
	  CASE_guard18924_0b0_theResult___snd26947_BITS__ETC__q80 =
	      _theResult___sfd__h427469;
    endcase
  end
  always@(guard__h418924 or
	  _theResult___snd__h426947 or _theResult___sfd__h427469)
  begin
    case (guard__h418924)
      2'b0:
	  CASE_guard18924_0b0_theResult___snd26947_BITS__ETC__q81 =
	      _theResult___snd__h426947[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard18924_0b0_theResult___snd26947_BITS__ETC__q81 =
	      _theResult___sfd__h427469;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  CASE_guard18924_0b0_theResult___snd26947_BITS__ETC__q80 or
	  CASE_guard18924_0b0_theResult___snd26947_BITS__ETC__q81 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6472 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6474 or
	  _theResult___snd__h426947)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30])
      3'd0:
	  _theResult___fst_sfd__h427547 =
	      CASE_guard18924_0b0_theResult___snd26947_BITS__ETC__q80;
      3'd1:
	  _theResult___fst_sfd__h427547 =
	      CASE_guard18924_0b0_theResult___snd26947_BITS__ETC__q81;
      3'd2:
	  _theResult___fst_sfd__h427547 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6472;
      3'd3:
	  _theResult___fst_sfd__h427547 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6474;
      3'd4: _theResult___fst_sfd__h427547 = _theResult___snd__h426947[56:34];
      default: _theResult___fst_sfd__h427547 = 23'd0;
    endcase
  end
  always@(guard__h392451 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (guard__h392451)
      2'b0, 2'b01, 2'b10:
	  CASE_guard92451_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q82 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      2'd3:
	  CASE_guard92451_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q82 =
	      guard__h392451 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get or
	  CASE_guard92451_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q82 or
	  guard__h392451)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6560 =
	      CASE_guard92451_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q82;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6560 =
	      (guard__h392451 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		(guard__h392451 == 2'b01 || guard__h392451 == 2'b10 ||
		 guard__h392451 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6560 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6560 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(guard__h392451 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (guard__h392451)
      2'b0, 2'b01, 2'b10:
	  CASE_guard92451_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q83 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      2'd3:
	  CASE_guard92451_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q83 =
	      guard__h392451 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get or
	  CASE_guard92451_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q83 or
	  guard__h392451)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6504 =
	      CASE_guard92451_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q83;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6504 =
	      (guard__h392451 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		guard__h392451 != 2'b01 && guard__h392451 != 2'b10 &&
		guard__h392451 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6504 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6504 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(guard__h401158 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (guard__h401158)
      2'b0, 2'b01, 2'b10:
	  CASE_guard01158_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q84 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      2'd3:
	  CASE_guard01158_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q84 =
	      guard__h401158 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get or
	  CASE_guard01158_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q84 or
	  guard__h401158)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6567 =
	      CASE_guard01158_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q84;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6567 =
	      (guard__h401158 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		(guard__h401158 == 2'b01 || guard__h401158 == 2'b10 ||
		 guard__h401158 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6567 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6567 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(guard__h401158 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (guard__h401158)
      2'b0, 2'b01, 2'b10:
	  CASE_guard01158_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q85 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      2'd3:
	  CASE_guard01158_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q85 =
	      guard__h401158 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get or
	  CASE_guard01158_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q85 or
	  guard__h401158)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6517 =
	      CASE_guard01158_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q85;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6517 =
	      (guard__h401158 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		guard__h401158 != 2'b01 && guard__h401158 != 2'b10 &&
		guard__h401158 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6517 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6517 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(guard__h410088 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (guard__h410088)
      2'b0, 2'b01, 2'b10:
	  CASE_guard10088_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q86 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      2'd3:
	  CASE_guard10088_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q86 =
	      guard__h410088 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get or
	  CASE_guard10088_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q86 or
	  guard__h410088)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6577 =
	      CASE_guard10088_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q86;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6577 =
	      (guard__h410088 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		(guard__h410088 == 2'b01 || guard__h410088 == 2'b10 ||
		 guard__h410088 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6577 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6577 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(guard__h410088 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (guard__h410088)
      2'b0, 2'b01, 2'b10:
	  CASE_guard10088_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q87 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      2'd3:
	  CASE_guard10088_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q87 =
	      guard__h410088 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get or
	  CASE_guard10088_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q87 or
	  guard__h410088)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6534 =
	      CASE_guard10088_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q87;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6534 =
	      (guard__h410088 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		guard__h410088 != 2'b01 && guard__h410088 != 2'b10 &&
		guard__h410088 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6534 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6534 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(guard__h418924 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (guard__h418924)
      2'b0, 2'b01, 2'b10:
	  CASE_guard18924_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q88 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      2'd3:
	  CASE_guard18924_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q88 =
	      guard__h418924 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get or
	  CASE_guard18924_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q88 or
	  guard__h418924)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6584 =
	      CASE_guard18924_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q88;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6584 =
	      (guard__h418924 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		(guard__h418924 == 2'b01 || guard__h418924 == 2'b10 ||
		 guard__h418924 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6584 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6584 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(guard__h418924 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (guard__h418924)
      2'b0, 2'b01, 2'b10:
	  CASE_guard18924_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q89 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      2'd3:
	  CASE_guard18924_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q89 =
	      guard__h418924 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get or
	  CASE_guard18924_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q89 or
	  guard__h418924)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6547 =
	      CASE_guard18924_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q89;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6547 =
	      (guard__h418924 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		guard__h418924 != 2'b01 && guard__h418924 != 2'b10 &&
		guard__h418924 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6547 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6547 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30])
      3'd0, 3'd1, 3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6570 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6570 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30])
      3'd0, 3'd1, 3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6521 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6521 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32:30] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(guard__h446853 or
	  _theResult___fst_exp__h454901 or
	  out_exp__h455346 or _theResult___exp__h455343)
  begin
    case (guard__h446853)
      2'b0, 2'b01:
	  CASE_guard46853_0b0_theResult___fst_exp54901_0_ETC__q94 =
	      _theResult___fst_exp__h454901;
      2'b10:
	  CASE_guard46853_0b0_theResult___fst_exp54901_0_ETC__q94 =
	      out_exp__h455346;
      2'b11:
	  CASE_guard46853_0b0_theResult___fst_exp54901_0_ETC__q94 =
	      _theResult___exp__h455343;
    endcase
  end
  always@(guard__h446853 or
	  _theResult___fst_exp__h454901 or _theResult___exp__h455343)
  begin
    case (guard__h446853)
      2'b0:
	  CASE_guard46853_0b0_theResult___fst_exp54901_0_ETC__q95 =
	      _theResult___fst_exp__h454901;
      2'b01, 2'b10, 2'b11:
	  CASE_guard46853_0b0_theResult___fst_exp54901_0_ETC__q95 =
	      _theResult___exp__h455343;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  CASE_guard46853_0b0_theResult___fst_exp54901_0_ETC__q94 or
	  CASE_guard46853_0b0_theResult___fst_exp54901_0_ETC__q95 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7374 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7376 or
	  _theResult___fst_exp__h454901)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30])
      3'd0:
	  _theResult___fst_exp__h455421 =
	      CASE_guard46853_0b0_theResult___fst_exp54901_0_ETC__q94;
      3'd1:
	  _theResult___fst_exp__h455421 =
	      CASE_guard46853_0b0_theResult___fst_exp54901_0_ETC__q95;
      3'd2:
	  _theResult___fst_exp__h455421 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7374;
      3'd3:
	  _theResult___fst_exp__h455421 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7376;
      3'd4: _theResult___fst_exp__h455421 = _theResult___fst_exp__h454901;
      default: _theResult___fst_exp__h455421 = 8'd0;
    endcase
  end
  always@(guard__h438146 or
	  _theResult___fst_exp__h446245 or
	  out_exp__h446764 or _theResult___exp__h446761)
  begin
    case (guard__h438146)
      2'b0, 2'b01:
	  CASE_guard38146_0b0_theResult___fst_exp46245_0_ETC__q96 =
	      _theResult___fst_exp__h446245;
      2'b10:
	  CASE_guard38146_0b0_theResult___fst_exp46245_0_ETC__q96 =
	      out_exp__h446764;
      2'b11:
	  CASE_guard38146_0b0_theResult___fst_exp46245_0_ETC__q96 =
	      _theResult___exp__h446761;
    endcase
  end
  always@(guard__h438146 or
	  _theResult___fst_exp__h446245 or _theResult___exp__h446761)
  begin
    case (guard__h438146)
      2'b0:
	  CASE_guard38146_0b0_theResult___fst_exp46245_0_ETC__q97 =
	      _theResult___fst_exp__h446245;
      2'b01, 2'b10, 2'b11:
	  CASE_guard38146_0b0_theResult___fst_exp46245_0_ETC__q97 =
	      _theResult___exp__h446761;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  CASE_guard38146_0b0_theResult___fst_exp46245_0_ETC__q96 or
	  CASE_guard38146_0b0_theResult___fst_exp46245_0_ETC__q97 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7152 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7155 or
	  _theResult___fst_exp__h446245)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30])
      3'd0:
	  _theResult___fst_exp__h446839 =
	      CASE_guard38146_0b0_theResult___fst_exp46245_0_ETC__q96;
      3'd1:
	  _theResult___fst_exp__h446839 =
	      CASE_guard38146_0b0_theResult___fst_exp46245_0_ETC__q97;
      3'd2:
	  _theResult___fst_exp__h446839 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7152;
      3'd3:
	  _theResult___fst_exp__h446839 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7155;
      3'd4: _theResult___fst_exp__h446839 = _theResult___fst_exp__h446245;
      default: _theResult___fst_exp__h446839 = 8'd0;
    endcase
  end
  always@(guard__h455783 or
	  _theResult___fst_exp__h464011 or
	  out_exp__h464530 or _theResult___exp__h464527)
  begin
    case (guard__h455783)
      2'b0, 2'b01:
	  CASE_guard55783_0b0_theResult___fst_exp64011_0_ETC__q102 =
	      _theResult___fst_exp__h464011;
      2'b10:
	  CASE_guard55783_0b0_theResult___fst_exp64011_0_ETC__q102 =
	      out_exp__h464530;
      2'b11:
	  CASE_guard55783_0b0_theResult___fst_exp64011_0_ETC__q102 =
	      _theResult___exp__h464527;
    endcase
  end
  always@(guard__h455783 or
	  _theResult___fst_exp__h464011 or _theResult___exp__h464527)
  begin
    case (guard__h455783)
      2'b0:
	  CASE_guard55783_0b0_theResult___fst_exp64011_0_ETC__q103 =
	      _theResult___fst_exp__h464011;
      2'b01, 2'b10, 2'b11:
	  CASE_guard55783_0b0_theResult___fst_exp64011_0_ETC__q103 =
	      _theResult___exp__h464527;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  CASE_guard55783_0b0_theResult___fst_exp64011_0_ETC__q102 or
	  CASE_guard55783_0b0_theResult___fst_exp64011_0_ETC__q103 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7699 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7701 or
	  _theResult___fst_exp__h464011)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30])
      3'd0:
	  _theResult___fst_exp__h464605 =
	      CASE_guard55783_0b0_theResult___fst_exp64011_0_ETC__q102;
      3'd1:
	  _theResult___fst_exp__h464605 =
	      CASE_guard55783_0b0_theResult___fst_exp64011_0_ETC__q103;
      3'd2:
	  _theResult___fst_exp__h464605 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7699;
      3'd3:
	  _theResult___fst_exp__h464605 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7701;
      3'd4: _theResult___fst_exp__h464605 = _theResult___fst_exp__h464011;
      default: _theResult___fst_exp__h464605 = 8'd0;
    endcase
  end
  always@(guard__h464619 or
	  _theResult___fst_exp__h472696 or
	  out_exp__h473166 or _theResult___exp__h473163)
  begin
    case (guard__h464619)
      2'b0, 2'b01:
	  CASE_guard64619_0b0_theResult___fst_exp72696_0_ETC__q107 =
	      _theResult___fst_exp__h472696;
      2'b10:
	  CASE_guard64619_0b0_theResult___fst_exp72696_0_ETC__q107 =
	      out_exp__h473166;
      2'b11:
	  CASE_guard64619_0b0_theResult___fst_exp72696_0_ETC__q107 =
	      _theResult___exp__h473163;
    endcase
  end
  always@(guard__h464619 or
	  _theResult___fst_exp__h472696 or _theResult___exp__h473163)
  begin
    case (guard__h464619)
      2'b0:
	  CASE_guard64619_0b0_theResult___fst_exp72696_0_ETC__q108 =
	      _theResult___fst_exp__h472696;
      2'b01, 2'b10, 2'b11:
	  CASE_guard64619_0b0_theResult___fst_exp72696_0_ETC__q108 =
	      _theResult___exp__h473163;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  CASE_guard64619_0b0_theResult___fst_exp72696_0_ETC__q107 or
	  CASE_guard64619_0b0_theResult___fst_exp72696_0_ETC__q108 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7768 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7770 or
	  _theResult___fst_exp__h472696)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30])
      3'd0:
	  _theResult___fst_exp__h473241 =
	      CASE_guard64619_0b0_theResult___fst_exp72696_0_ETC__q107;
      3'd1:
	  _theResult___fst_exp__h473241 =
	      CASE_guard64619_0b0_theResult___fst_exp72696_0_ETC__q108;
      3'd2:
	  _theResult___fst_exp__h473241 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7768;
      3'd3:
	  _theResult___fst_exp__h473241 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7770;
      3'd4: _theResult___fst_exp__h473241 = _theResult___fst_exp__h472696;
      default: _theResult___fst_exp__h473241 = 8'd0;
    endcase
  end
  always@(guard__h446853 or
	  _theResult___snd__h454852 or
	  out_sfd__h455347 or _theResult___sfd__h455344)
  begin
    case (guard__h446853)
      2'b0, 2'b01:
	  CASE_guard46853_0b0_theResult___snd54852_BITS__ETC__q109 =
	      _theResult___snd__h454852[56:34];
      2'b10:
	  CASE_guard46853_0b0_theResult___snd54852_BITS__ETC__q109 =
	      out_sfd__h455347;
      2'b11:
	  CASE_guard46853_0b0_theResult___snd54852_BITS__ETC__q109 =
	      _theResult___sfd__h455344;
    endcase
  end
  always@(guard__h446853 or
	  _theResult___snd__h454852 or _theResult___sfd__h455344)
  begin
    case (guard__h446853)
      2'b0:
	  CASE_guard46853_0b0_theResult___snd54852_BITS__ETC__q110 =
	      _theResult___snd__h454852[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard46853_0b0_theResult___snd54852_BITS__ETC__q110 =
	      _theResult___sfd__h455344;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  CASE_guard46853_0b0_theResult___snd54852_BITS__ETC__q109 or
	  CASE_guard46853_0b0_theResult___snd54852_BITS__ETC__q110 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7818 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7820 or
	  _theResult___snd__h454852)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30])
      3'd0:
	  _theResult___fst_sfd__h455422 =
	      CASE_guard46853_0b0_theResult___snd54852_BITS__ETC__q109;
      3'd1:
	  _theResult___fst_sfd__h455422 =
	      CASE_guard46853_0b0_theResult___snd54852_BITS__ETC__q110;
      3'd2:
	  _theResult___fst_sfd__h455422 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7818;
      3'd3:
	  _theResult___fst_sfd__h455422 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7820;
      3'd4: _theResult___fst_sfd__h455422 = _theResult___snd__h454852[56:34];
      default: _theResult___fst_sfd__h455422 = 23'd0;
    endcase
  end
  always@(guard__h438146 or
	  sfdin__h446239 or out_sfd__h446765 or _theResult___sfd__h446762)
  begin
    case (guard__h438146)
      2'b0, 2'b01:
	  CASE_guard38146_0b0_sfdin46239_BITS_56_TO_34_0_ETC__q111 =
	      sfdin__h446239[56:34];
      2'b10:
	  CASE_guard38146_0b0_sfdin46239_BITS_56_TO_34_0_ETC__q111 =
	      out_sfd__h446765;
      2'b11:
	  CASE_guard38146_0b0_sfdin46239_BITS_56_TO_34_0_ETC__q111 =
	      _theResult___sfd__h446762;
    endcase
  end
  always@(guard__h438146 or sfdin__h446239 or _theResult___sfd__h446762)
  begin
    case (guard__h438146)
      2'b0:
	  CASE_guard38146_0b0_sfdin46239_BITS_56_TO_34_0_ETC__q112 =
	      sfdin__h446239[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard38146_0b0_sfdin46239_BITS_56_TO_34_0_ETC__q112 =
	      _theResult___sfd__h446762;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  CASE_guard38146_0b0_sfdin46239_BITS_56_TO_34_0_ETC__q111 or
	  CASE_guard38146_0b0_sfdin46239_BITS_56_TO_34_0_ETC__q112 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7799 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7801 or
	  sfdin__h446239)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30])
      3'd0:
	  _theResult___fst_sfd__h446840 =
	      CASE_guard38146_0b0_sfdin46239_BITS_56_TO_34_0_ETC__q111;
      3'd1:
	  _theResult___fst_sfd__h446840 =
	      CASE_guard38146_0b0_sfdin46239_BITS_56_TO_34_0_ETC__q112;
      3'd2:
	  _theResult___fst_sfd__h446840 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7799;
      3'd3:
	  _theResult___fst_sfd__h446840 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7801;
      3'd4: _theResult___fst_sfd__h446840 = sfdin__h446239[56:34];
      default: _theResult___fst_sfd__h446840 = 23'd0;
    endcase
  end
  always@(guard__h455783 or
	  sfdin__h464005 or out_sfd__h464531 or _theResult___sfd__h464528)
  begin
    case (guard__h455783)
      2'b0, 2'b01:
	  CASE_guard55783_0b0_sfdin64005_BITS_56_TO_34_0_ETC__q113 =
	      sfdin__h464005[56:34];
      2'b10:
	  CASE_guard55783_0b0_sfdin64005_BITS_56_TO_34_0_ETC__q113 =
	      out_sfd__h464531;
      2'b11:
	  CASE_guard55783_0b0_sfdin64005_BITS_56_TO_34_0_ETC__q113 =
	      _theResult___sfd__h464528;
    endcase
  end
  always@(guard__h455783 or sfdin__h464005 or _theResult___sfd__h464528)
  begin
    case (guard__h455783)
      2'b0:
	  CASE_guard55783_0b0_sfdin64005_BITS_56_TO_34_0_ETC__q114 =
	      sfdin__h464005[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard55783_0b0_sfdin64005_BITS_56_TO_34_0_ETC__q114 =
	      _theResult___sfd__h464528;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  CASE_guard55783_0b0_sfdin64005_BITS_56_TO_34_0_ETC__q113 or
	  CASE_guard55783_0b0_sfdin64005_BITS_56_TO_34_0_ETC__q114 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7845 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7847 or
	  sfdin__h464005)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30])
      3'd0:
	  _theResult___fst_sfd__h464606 =
	      CASE_guard55783_0b0_sfdin64005_BITS_56_TO_34_0_ETC__q113;
      3'd1:
	  _theResult___fst_sfd__h464606 =
	      CASE_guard55783_0b0_sfdin64005_BITS_56_TO_34_0_ETC__q114;
      3'd2:
	  _theResult___fst_sfd__h464606 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7845;
      3'd3:
	  _theResult___fst_sfd__h464606 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7847;
      3'd4: _theResult___fst_sfd__h464606 = sfdin__h464005[56:34];
      default: _theResult___fst_sfd__h464606 = 23'd0;
    endcase
  end
  always@(guard__h438146 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (guard__h438146)
      2'b0, 2'b01, 2'b10:
	  CASE_guard38146_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q115 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      2'd3:
	  CASE_guard38146_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q115 =
	      guard__h438146 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get or
	  CASE_guard38146_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q115 or
	  guard__h438146)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7952 =
	      CASE_guard38146_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q115;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7952 =
	      (guard__h438146 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		(guard__h438146 == 2'b01 || guard__h438146 == 2'b10 ||
		 guard__h438146 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7952 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7952 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(guard__h464619 or
	  _theResult___snd__h472642 or
	  out_sfd__h473167 or _theResult___sfd__h473164)
  begin
    case (guard__h464619)
      2'b0, 2'b01:
	  CASE_guard64619_0b0_theResult___snd72642_BITS__ETC__q116 =
	      _theResult___snd__h472642[56:34];
      2'b10:
	  CASE_guard64619_0b0_theResult___snd72642_BITS__ETC__q116 =
	      out_sfd__h473167;
      2'b11:
	  CASE_guard64619_0b0_theResult___snd72642_BITS__ETC__q116 =
	      _theResult___sfd__h473164;
    endcase
  end
  always@(guard__h464619 or
	  _theResult___snd__h472642 or _theResult___sfd__h473164)
  begin
    case (guard__h464619)
      2'b0:
	  CASE_guard64619_0b0_theResult___snd72642_BITS__ETC__q117 =
	      _theResult___snd__h472642[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard64619_0b0_theResult___snd72642_BITS__ETC__q117 =
	      _theResult___sfd__h473164;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  CASE_guard64619_0b0_theResult___snd72642_BITS__ETC__q116 or
	  CASE_guard64619_0b0_theResult___snd72642_BITS__ETC__q117 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7864 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7866 or
	  _theResult___snd__h472642)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30])
      3'd0:
	  _theResult___fst_sfd__h473242 =
	      CASE_guard64619_0b0_theResult___snd72642_BITS__ETC__q116;
      3'd1:
	  _theResult___fst_sfd__h473242 =
	      CASE_guard64619_0b0_theResult___snd72642_BITS__ETC__q117;
      3'd2:
	  _theResult___fst_sfd__h473242 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7864;
      3'd3:
	  _theResult___fst_sfd__h473242 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7866;
      3'd4: _theResult___fst_sfd__h473242 = _theResult___snd__h472642[56:34];
      default: _theResult___fst_sfd__h473242 = 23'd0;
    endcase
  end
  always@(guard__h438146 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (guard__h438146)
      2'b0, 2'b01, 2'b10:
	  CASE_guard38146_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q118 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      2'd3:
	  CASE_guard38146_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q118 =
	      guard__h438146 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get or
	  CASE_guard38146_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q118 or
	  guard__h438146)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7896 =
	      CASE_guard38146_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q118;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7896 =
	      (guard__h438146 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		guard__h438146 != 2'b01 && guard__h438146 != 2'b10 &&
		guard__h438146 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7896 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7896 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(guard__h446853 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (guard__h446853)
      2'b0, 2'b01, 2'b10:
	  CASE_guard46853_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q119 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      2'd3:
	  CASE_guard46853_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q119 =
	      guard__h446853 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get or
	  CASE_guard46853_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q119 or
	  guard__h446853)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7959 =
	      CASE_guard46853_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q119;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7959 =
	      (guard__h446853 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		(guard__h446853 == 2'b01 || guard__h446853 == 2'b10 ||
		 guard__h446853 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7959 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7959 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(guard__h446853 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (guard__h446853)
      2'b0, 2'b01, 2'b10:
	  CASE_guard46853_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q120 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      2'd3:
	  CASE_guard46853_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q120 =
	      guard__h446853 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get or
	  CASE_guard46853_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q120 or
	  guard__h446853)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7909 =
	      CASE_guard46853_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q120;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7909 =
	      (guard__h446853 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		guard__h446853 != 2'b01 && guard__h446853 != 2'b10 &&
		guard__h446853 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7909 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7909 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(guard__h455783 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (guard__h455783)
      2'b0, 2'b01, 2'b10:
	  CASE_guard55783_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q121 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      2'd3:
	  CASE_guard55783_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q121 =
	      guard__h455783 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get or
	  CASE_guard55783_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q121 or
	  guard__h455783)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7969 =
	      CASE_guard55783_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q121;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7969 =
	      (guard__h455783 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		(guard__h455783 == 2'b01 || guard__h455783 == 2'b10 ||
		 guard__h455783 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7969 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7969 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(guard__h455783 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (guard__h455783)
      2'b0, 2'b01, 2'b10:
	  CASE_guard55783_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q122 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      2'd3:
	  CASE_guard55783_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q122 =
	      guard__h455783 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get or
	  CASE_guard55783_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q122 or
	  guard__h455783)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7926 =
	      CASE_guard55783_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q122;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7926 =
	      (guard__h455783 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		guard__h455783 != 2'b01 && guard__h455783 != 2'b10 &&
		guard__h455783 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7926 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7926 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(guard__h464619 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (guard__h464619)
      2'b0, 2'b01, 2'b10:
	  CASE_guard64619_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q123 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      2'd3:
	  CASE_guard64619_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q123 =
	      guard__h464619 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get or
	  CASE_guard64619_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q123 or
	  guard__h464619)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7976 =
	      CASE_guard64619_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q123;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7976 =
	      (guard__h464619 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		(guard__h464619 == 2'b01 || guard__h464619 == 2'b10 ||
		 guard__h464619 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7976 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7976 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(guard__h464619 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (guard__h464619)
      2'b0, 2'b01, 2'b10:
	  CASE_guard64619_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q124 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      2'd3:
	  CASE_guard64619_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q124 =
	      guard__h464619 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get or
	  CASE_guard64619_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q124 or
	  guard__h464619)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7939 =
	      CASE_guard64619_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q124;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7939 =
	      (guard__h464619 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		guard__h464619 != 2'b01 && guard__h464619 != 2'b10 &&
		guard__h464619 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7939 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7939 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30])
      3'd0, 3'd1, 3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7962 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7962 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30])
      3'd0, 3'd1, 3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7913 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7913 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32:30] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$RDY_request_put or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$RDY_request_put or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$RDY_request_put)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[223:219])
      5'd0, 5'd1, 5'd2, 5'd25, 5'd26, 5'd27:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d8454 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$RDY_request_put;
      5'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d8454 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$RDY_request_put;
      5'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d8454 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$RDY_request_put;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d8454 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[223:219] != 5'd28 ||
		   coreFix_fpuMulDivExe_0_fpuExec_double_fma$RDY_request_put;
    endcase
  end
  always@(guard__h494224 or
	  _theResult___fst_exp__h502185 or _theResult___exp__h502840)
  begin
    case (guard__h494224)
      2'b0:
	  CASE_guard94224_0b0_theResult___fst_exp02185_0_ETC__q135 =
	      _theResult___fst_exp__h502185;
      2'b01, 2'b10, 2'b11:
	  CASE_guard94224_0b0_theResult___fst_exp02185_0_ETC__q135 =
	      _theResult___exp__h502840;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___fst_exp__h502185 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9073 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9071 or
	  CASE_guard94224_0b0_theResult___fst_exp02185_0_ETC__q135)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9077 =
	      _theResult___fst_exp__h502185;
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9077 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9073;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9077 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9071;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9077 =
	      CASE_guard94224_0b0_theResult___fst_exp02185_0_ETC__q135;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9077 =
		   11'd0;
    endcase
  end
  always@(guard__h494224 or
	  _theResult___fst_exp__h502185 or
	  out_exp__h502843 or _theResult___exp__h502840)
  begin
    case (guard__h494224)
      2'b0, 2'b01:
	  CASE_guard94224_0b0_theResult___fst_exp02185_0_ETC__q136 =
	      _theResult___fst_exp__h502185;
      2'b10:
	  CASE_guard94224_0b0_theResult___fst_exp02185_0_ETC__q136 =
	      out_exp__h502843;
      2'b11:
	  CASE_guard94224_0b0_theResult___fst_exp02185_0_ETC__q136 =
	      _theResult___exp__h502840;
    endcase
  end
  always@(guard__h494224 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h494224)
      2'b0, 2'b01, 2'b10:
	  CASE_guard94224_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q137 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[163];
      2'd3:
	  CASE_guard94224_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q137 =
	      guard__h494224 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[163];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h494224)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q138 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[163];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q138 =
	      (guard__h494224 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[163] :
		(guard__h494224 == 2'b01 || guard__h494224 == 2'b10 ||
		 guard__h494224 == 2'b11) &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[163];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q138 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] == 3'd1 &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
		   32'hFFFFFFFF &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[163];
    endcase
  end
  always@(guard__h503536 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h503536)
      2'b0, 2'b01, 2'b10:
	  CASE_guard03536_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q139 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[163];
      2'd3:
	  CASE_guard03536_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q139 =
	      guard__h503536 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[163];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h503536)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q140 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[163];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q140 =
	      (guard__h503536 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[163] :
		(guard__h503536 == 2'b01 || guard__h503536 == 2'b10 ||
		 guard__h503536 == 2'b11) &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[163];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q140 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] == 3'd1 &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
		   32'hFFFFFFFF &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[163];
    endcase
  end
  always@(guard__h512605 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h512605)
      2'b0, 2'b01, 2'b10:
	  CASE_guard12605_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q141 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[163];
      2'd3:
	  CASE_guard12605_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q141 =
	      guard__h512605 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[163];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h512605)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q142 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[163];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q142 =
	      (guard__h512605 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[163] :
		(guard__h512605 == 2'b01 || guard__h512605 == 2'b10 ||
		 guard__h512605 == 2'b11) &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[163];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q142 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] == 3'd1 &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[195:164] ==
		   32'hFFFFFFFF &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[163];
    endcase
  end
  always@(guard__h572381 or
	  _theResult___fst_exp__h580342 or _theResult___exp__h580997)
  begin
    case (guard__h572381)
      2'b0:
	  CASE_guard72381_0b0_theResult___fst_exp80342_0_ETC__q152 =
	      _theResult___fst_exp__h580342;
      2'b01, 2'b10, 2'b11:
	  CASE_guard72381_0b0_theResult___fst_exp80342_0_ETC__q152 =
	      _theResult___exp__h580997;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___fst_exp__h580342 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9788 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9786 or
	  CASE_guard72381_0b0_theResult___fst_exp80342_0_ETC__q152)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9792 =
	      _theResult___fst_exp__h580342;
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9792 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9788;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9792 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9786;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9792 =
	      CASE_guard72381_0b0_theResult___fst_exp80342_0_ETC__q152;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9792 =
		   11'd0;
    endcase
  end
  always@(guard__h572381 or
	  _theResult___fst_exp__h580342 or
	  out_exp__h581000 or _theResult___exp__h580997)
  begin
    case (guard__h572381)
      2'b0, 2'b01:
	  CASE_guard72381_0b0_theResult___fst_exp80342_0_ETC__q153 =
	      _theResult___fst_exp__h580342;
      2'b10:
	  CASE_guard72381_0b0_theResult___fst_exp80342_0_ETC__q153 =
	      out_exp__h581000;
      2'b11:
	  CASE_guard72381_0b0_theResult___fst_exp80342_0_ETC__q153 =
	      _theResult___exp__h580997;
    endcase
  end
  always@(guard__h581693 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h581693)
      2'b0, 2'b01, 2'b10:
	  CASE_guard81693_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q154 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[35];
      2'd3:
	  CASE_guard81693_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q154 =
	      guard__h581693 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[35];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h581693)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q155 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[35];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q155 =
	      (guard__h581693 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[35] :
		(guard__h581693 == 2'b01 || guard__h581693 == 2'b10 ||
		 guard__h581693 == 2'b11) &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[35];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q155 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] == 3'd1 &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] ==
		   32'hFFFFFFFF &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[35];
    endcase
  end
  always@(guard__h572381 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h572381)
      2'b0, 2'b01, 2'b10:
	  CASE_guard72381_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q156 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[35];
      2'd3:
	  CASE_guard72381_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q156 =
	      guard__h572381 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[35];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h572381)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q157 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[35];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q157 =
	      (guard__h572381 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[35] :
		(guard__h572381 == 2'b01 || guard__h572381 == 2'b10 ||
		 guard__h572381 == 2'b11) &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[35];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q157 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] == 3'd1 &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] ==
		   32'hFFFFFFFF &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[35];
    endcase
  end
  always@(guard__h590762 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h590762)
      2'b0, 2'b01, 2'b10:
	  CASE_guard90762_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q158 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[35];
      2'd3:
	  CASE_guard90762_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q158 =
	      guard__h590762 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[35];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h590762)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q159 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[35];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q159 =
	      (guard__h590762 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[35] :
		(guard__h590762 == 2'b01 || guard__h590762 == 2'b10 ||
		 guard__h590762 == 2'b11) &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[35];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q159 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] == 3'd1 &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] ==
		   32'hFFFFFFFF &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[35];
    endcase
  end
  always@(guard__h581693 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h581693)
      2'b0, 2'b01, 2'b10:
	  CASE_guard81693_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q160 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] != 32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[35];
      2'd3:
	  CASE_guard81693_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q160 =
	      guard__h581693 != 2'b11 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] != 32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[35];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h581693)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q161 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] != 32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[35];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q161 =
	      (guard__h581693 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[35] :
		guard__h581693 != 2'b01 && guard__h581693 != 2'b10 &&
		guard__h581693 != 2'b11 ||
		coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[35];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q161 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 ||
		   coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] !=
		   32'hFFFFFFFF ||
		   !coreFix_fpuMulDivExe_0_regToExeQ$first[35];
    endcase
  end
  always@(guard__h590762 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h590762)
      2'b0, 2'b01, 2'b10:
	  CASE_guard90762_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q162 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] != 32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[35];
      2'd3:
	  CASE_guard90762_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q162 =
	      guard__h590762 != 2'b11 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] != 32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[35];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h590762)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q163 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] != 32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[35];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q163 =
	      (guard__h590762 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[35] :
		guard__h590762 != 2'b01 && guard__h590762 != 2'b10 &&
		guard__h590762 != 2'b11 ||
		coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[35];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q163 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 ||
		   coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] !=
		   32'hFFFFFFFF ||
		   !coreFix_fpuMulDivExe_0_regToExeQ$first[35];
    endcase
  end
  always@(guard__h572381 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h572381)
      2'b0, 2'b01, 2'b10:
	  CASE_guard72381_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q164 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] != 32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[35];
      2'd3:
	  CASE_guard72381_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q164 =
	      guard__h572381 != 2'b11 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] != 32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[35];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h572381)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q165 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] != 32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[35];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q165 =
	      (guard__h572381 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[35] :
		guard__h572381 != 2'b01 && guard__h572381 != 2'b10 &&
		guard__h572381 != 2'b11 ||
		coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[35];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q165 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 ||
		   coreFix_fpuMulDivExe_0_regToExeQ$first[67:36] !=
		   32'hFFFFFFFF ||
		   !coreFix_fpuMulDivExe_0_regToExeQ$first[35];
    endcase
  end
  always@(guard__h533077 or
	  _theResult___fst_exp__h541038 or _theResult___exp__h541693)
  begin
    case (guard__h533077)
      2'b0:
	  CASE_guard33077_0b0_theResult___fst_exp41038_0_ETC__q175 =
	      _theResult___fst_exp__h541038;
      2'b01, 2'b10, 2'b11:
	  CASE_guard33077_0b0_theResult___fst_exp41038_0_ETC__q175 =
	      _theResult___exp__h541693;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___fst_exp__h541038 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10558 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10556 or
	  CASE_guard33077_0b0_theResult___fst_exp41038_0_ETC__q175)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10562 =
	      _theResult___fst_exp__h541038;
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10562 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10558;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10562 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10556;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10562 =
	      CASE_guard33077_0b0_theResult___fst_exp41038_0_ETC__q175;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10562 =
		   11'd0;
    endcase
  end
  always@(guard__h533077 or
	  _theResult___fst_exp__h541038 or
	  out_exp__h541696 or _theResult___exp__h541693)
  begin
    case (guard__h533077)
      2'b0, 2'b01:
	  CASE_guard33077_0b0_theResult___fst_exp41038_0_ETC__q176 =
	      _theResult___fst_exp__h541038;
      2'b10:
	  CASE_guard33077_0b0_theResult___fst_exp41038_0_ETC__q176 =
	      out_exp__h541696;
      2'b11:
	  CASE_guard33077_0b0_theResult___fst_exp41038_0_ETC__q176 =
	      _theResult___exp__h541693;
    endcase
  end
  always@(guard__h542389 or
	  _theResult___fst_exp__h550615 or _theResult___exp__h551344)
  begin
    case (guard__h542389)
      2'b0:
	  CASE_guard42389_0b0_theResult___fst_exp50615_0_ETC__q177 =
	      _theResult___fst_exp__h550615;
      2'b01, 2'b10, 2'b11:
	  CASE_guard42389_0b0_theResult___fst_exp50615_0_ETC__q177 =
	      _theResult___exp__h551344;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___fst_exp__h550615 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10596 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10594 or
	  CASE_guard42389_0b0_theResult___fst_exp50615_0_ETC__q177)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10600 =
	      _theResult___fst_exp__h550615;
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10600 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10596;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10600 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10594;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10600 =
	      CASE_guard42389_0b0_theResult___fst_exp50615_0_ETC__q177;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10600 =
		   11'd0;
    endcase
  end
  always@(guard__h542389 or
	  _theResult___fst_exp__h550615 or
	  out_exp__h551347 or _theResult___exp__h551344)
  begin
    case (guard__h542389)
      2'b0, 2'b01:
	  CASE_guard42389_0b0_theResult___fst_exp50615_0_ETC__q178 =
	      _theResult___fst_exp__h550615;
      2'b10:
	  CASE_guard42389_0b0_theResult___fst_exp50615_0_ETC__q178 =
	      out_exp__h551347;
      2'b11:
	  CASE_guard42389_0b0_theResult___fst_exp50615_0_ETC__q178 =
	      _theResult___exp__h551344;
    endcase
  end
  always@(guard__h551458 or
	  _theResult___fst_exp__h559448 or _theResult___exp__h560128)
  begin
    case (guard__h551458)
      2'b0:
	  CASE_guard51458_0b0_theResult___fst_exp59448_0_ETC__q179 =
	      _theResult___fst_exp__h559448;
      2'b01, 2'b10, 2'b11:
	  CASE_guard51458_0b0_theResult___fst_exp59448_0_ETC__q179 =
	      _theResult___exp__h560128;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___fst_exp__h559448 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10627 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10625 or
	  CASE_guard51458_0b0_theResult___fst_exp59448_0_ETC__q179)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10631 =
	      _theResult___fst_exp__h559448;
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10631 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10627;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10631 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10625;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10631 =
	      CASE_guard51458_0b0_theResult___fst_exp59448_0_ETC__q179;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10631 =
		   11'd0;
    endcase
  end
  always@(guard__h551458 or
	  _theResult___fst_exp__h559448 or
	  out_exp__h560131 or _theResult___exp__h560128)
  begin
    case (guard__h551458)
      2'b0, 2'b01:
	  CASE_guard51458_0b0_theResult___fst_exp59448_0_ETC__q180 =
	      _theResult___fst_exp__h559448;
      2'b10:
	  CASE_guard51458_0b0_theResult___fst_exp59448_0_ETC__q180 =
	      out_exp__h560131;
      2'b11:
	  CASE_guard51458_0b0_theResult___fst_exp59448_0_ETC__q180 =
	      _theResult___exp__h560128;
    endcase
  end
  always@(guard__h590762 or
	  _theResult___fst_exp__h598752 or _theResult___exp__h599432)
  begin
    case (guard__h590762)
      2'b0:
	  CASE_guard90762_0b0_theResult___fst_exp98752_0_ETC__q181 =
	      _theResult___fst_exp__h598752;
      2'b01, 2'b10, 2'b11:
	  CASE_guard90762_0b0_theResult___fst_exp98752_0_ETC__q181 =
	      _theResult___exp__h599432;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___fst_exp__h598752 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9857 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9855 or
	  CASE_guard90762_0b0_theResult___fst_exp98752_0_ETC__q181)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9861 =
	      _theResult___fst_exp__h598752;
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9861 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9857;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9861 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9855;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9861 =
	      CASE_guard90762_0b0_theResult___fst_exp98752_0_ETC__q181;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9861 =
		   11'd0;
    endcase
  end
  always@(guard__h590762 or
	  _theResult___fst_exp__h598752 or
	  out_exp__h599435 or _theResult___exp__h599432)
  begin
    case (guard__h590762)
      2'b0, 2'b01:
	  CASE_guard90762_0b0_theResult___fst_exp98752_0_ETC__q182 =
	      _theResult___fst_exp__h598752;
      2'b10:
	  CASE_guard90762_0b0_theResult___fst_exp98752_0_ETC__q182 =
	      out_exp__h599435;
      2'b11:
	  CASE_guard90762_0b0_theResult___fst_exp98752_0_ETC__q182 =
	      _theResult___exp__h599432;
    endcase
  end
  always@(guard__h581693 or
	  _theResult___fst_exp__h589919 or _theResult___exp__h590648)
  begin
    case (guard__h581693)
      2'b0:
	  CASE_guard81693_0b0_theResult___fst_exp89919_0_ETC__q183 =
	      _theResult___fst_exp__h589919;
      2'b01, 2'b10, 2'b11:
	  CASE_guard81693_0b0_theResult___fst_exp89919_0_ETC__q183 =
	      _theResult___exp__h590648;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___fst_exp__h589919 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9826 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9824 or
	  CASE_guard81693_0b0_theResult___fst_exp89919_0_ETC__q183)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9830 =
	      _theResult___fst_exp__h589919;
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9830 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9826;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9830 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9824;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9830 =
	      CASE_guard81693_0b0_theResult___fst_exp89919_0_ETC__q183;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9830 =
		   11'd0;
    endcase
  end
  always@(guard__h581693 or
	  _theResult___fst_exp__h589919 or
	  out_exp__h590651 or _theResult___exp__h590648)
  begin
    case (guard__h581693)
      2'b0, 2'b01:
	  CASE_guard81693_0b0_theResult___fst_exp89919_0_ETC__q184 =
	      _theResult___fst_exp__h589919;
      2'b10:
	  CASE_guard81693_0b0_theResult___fst_exp89919_0_ETC__q184 =
	      out_exp__h590651;
      2'b11:
	  CASE_guard81693_0b0_theResult___fst_exp89919_0_ETC__q184 =
	      _theResult___exp__h590648;
    endcase
  end
  always@(guard__h533077 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h533077)
      2'b0, 2'b01, 2'b10:
	  CASE_guard33077_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q185 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[99];
      2'd3:
	  CASE_guard33077_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q185 =
	      guard__h533077 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[99];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h533077)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q186 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[99];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q186 =
	      (guard__h533077 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[99] :
		(guard__h533077 == 2'b01 || guard__h533077 == 2'b10 ||
		 guard__h533077 == 2'b11) &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[99];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q186 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] == 3'd1 &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
		   32'hFFFFFFFF &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[99];
    endcase
  end
  always@(guard__h542389 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h542389)
      2'b0, 2'b01, 2'b10:
	  CASE_guard42389_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q187 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[99];
      2'd3:
	  CASE_guard42389_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q187 =
	      guard__h542389 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[99];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h542389)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q188 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[99];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q188 =
	      (guard__h542389 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[99] :
		(guard__h542389 == 2'b01 || guard__h542389 == 2'b10 ||
		 guard__h542389 == 2'b11) &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[99];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q188 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] == 3'd1 &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
		   32'hFFFFFFFF &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[99];
    endcase
  end
  always@(guard__h551458 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h551458)
      2'b0, 2'b01, 2'b10:
	  CASE_guard51458_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q189 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[99];
      2'd3:
	  CASE_guard51458_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q189 =
	      guard__h551458 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[99];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h551458)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q190 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[99];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q190 =
	      (guard__h551458 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[99] :
		(guard__h551458 == 2'b01 || guard__h551458 == 2'b10 ||
		 guard__h551458 == 2'b11) &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[99];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q190 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] == 3'd1 &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] ==
		   32'hFFFFFFFF &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[99];
    endcase
  end
  always@(guard__h542389 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h542389)
      2'b0, 2'b01, 2'b10:
	  CASE_guard42389_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q191 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] !=
	      32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[99];
      2'd3:
	  CASE_guard42389_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q191 =
	      guard__h542389 != 2'b11 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] !=
	      32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[99];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h542389)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q192 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] !=
	      32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[99];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q192 =
	      (guard__h542389 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[99] :
		guard__h542389 != 2'b01 && guard__h542389 != 2'b10 &&
		guard__h542389 != 2'b11 ||
		coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[99];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q192 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 ||
		   coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] !=
		   32'hFFFFFFFF ||
		   !coreFix_fpuMulDivExe_0_regToExeQ$first[99];
    endcase
  end
  always@(guard__h551458 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h551458)
      2'b0, 2'b01, 2'b10:
	  CASE_guard51458_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q193 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] !=
	      32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[99];
      2'd3:
	  CASE_guard51458_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q193 =
	      guard__h551458 != 2'b11 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] !=
	      32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[99];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h551458)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q194 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] !=
	      32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[99];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q194 =
	      (guard__h551458 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[99] :
		guard__h551458 != 2'b01 && guard__h551458 != 2'b10 &&
		guard__h551458 != 2'b11 ||
		coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[99];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q194 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 ||
		   coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] !=
		   32'hFFFFFFFF ||
		   !coreFix_fpuMulDivExe_0_regToExeQ$first[99];
    endcase
  end
  always@(guard__h533077 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h533077)
      2'b0, 2'b01, 2'b10:
	  CASE_guard33077_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q195 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] !=
	      32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[99];
      2'd3:
	  CASE_guard33077_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q195 =
	      guard__h533077 != 2'b11 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] !=
	      32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[99];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h533077)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q196 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] !=
	      32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[99];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q196 =
	      (guard__h533077 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[99] :
		guard__h533077 != 2'b01 && guard__h533077 != 2'b10 &&
		guard__h533077 != 2'b11 ||
		coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[99];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q196 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[218:216] != 3'd1 ||
		   coreFix_fpuMulDivExe_0_regToExeQ$first[131:100] !=
		   32'hFFFFFFFF ||
		   !coreFix_fpuMulDivExe_0_regToExeQ$first[99];
    endcase
  end
  always@(guard__h533077 or
	  _theResult___snd__h540989 or _theResult___sfd__h541694)
  begin
    case (guard__h533077)
      2'b0:
	  CASE_guard33077_0b0_theResult___snd40989_BITS__ETC__q197 =
	      _theResult___snd__h540989[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard33077_0b0_theResult___snd40989_BITS__ETC__q197 =
	      _theResult___sfd__h541694;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___snd__h540989 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10653 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10651 or
	  CASE_guard33077_0b0_theResult___snd40989_BITS__ETC__q197)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10657 =
	      _theResult___snd__h540989[56:5];
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10657 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10653;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10657 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10651;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10657 =
	      CASE_guard33077_0b0_theResult___snd40989_BITS__ETC__q197;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10657 =
		   52'd0;
    endcase
  end
  always@(guard__h533077 or
	  _theResult___snd__h540989 or
	  out_sfd__h541697 or _theResult___sfd__h541694)
  begin
    case (guard__h533077)
      2'b0, 2'b01:
	  CASE_guard33077_0b0_theResult___snd40989_BITS__ETC__q198 =
	      _theResult___snd__h540989[56:5];
      2'b10:
	  CASE_guard33077_0b0_theResult___snd40989_BITS__ETC__q198 =
	      out_sfd__h541697;
      2'b11:
	  CASE_guard33077_0b0_theResult___snd40989_BITS__ETC__q198 =
	      _theResult___sfd__h541694;
    endcase
  end
  always@(guard__h542389 or sfdin__h550609 or _theResult___sfd__h551345)
  begin
    case (guard__h542389)
      2'b0:
	  CASE_guard42389_0b0_sfdin50609_BITS_56_TO_5_0b_ETC__q199 =
	      sfdin__h550609[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard42389_0b0_sfdin50609_BITS_56_TO_5_0b_ETC__q199 =
	      _theResult___sfd__h551345;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  sfdin__h550609 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10679 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10677 or
	  CASE_guard42389_0b0_sfdin50609_BITS_56_TO_5_0b_ETC__q199)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10683 =
	      sfdin__h550609[56:5];
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10683 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10679;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10683 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10677;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10683 =
	      CASE_guard42389_0b0_sfdin50609_BITS_56_TO_5_0b_ETC__q199;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10683 =
		   52'd0;
    endcase
  end
  always@(guard__h542389 or
	  sfdin__h550609 or out_sfd__h551348 or _theResult___sfd__h551345)
  begin
    case (guard__h542389)
      2'b0, 2'b01:
	  CASE_guard42389_0b0_sfdin50609_BITS_56_TO_5_0b_ETC__q200 =
	      sfdin__h550609[56:5];
      2'b10:
	  CASE_guard42389_0b0_sfdin50609_BITS_56_TO_5_0b_ETC__q200 =
	      out_sfd__h551348;
      2'b11:
	  CASE_guard42389_0b0_sfdin50609_BITS_56_TO_5_0b_ETC__q200 =
	      _theResult___sfd__h551345;
    endcase
  end
  always@(guard__h551458 or
	  _theResult___snd__h559394 or _theResult___sfd__h560129)
  begin
    case (guard__h551458)
      2'b0:
	  CASE_guard51458_0b0_theResult___snd59394_BITS__ETC__q201 =
	      _theResult___snd__h559394[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard51458_0b0_theResult___snd59394_BITS__ETC__q201 =
	      _theResult___sfd__h560129;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___snd__h559394 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10698 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10696 or
	  CASE_guard51458_0b0_theResult___snd59394_BITS__ETC__q201)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10702 =
	      _theResult___snd__h559394[56:5];
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10702 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10698;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10702 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10696;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10702 =
	      CASE_guard51458_0b0_theResult___snd59394_BITS__ETC__q201;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10702 =
		   52'd0;
    endcase
  end
  always@(guard__h551458 or
	  _theResult___snd__h559394 or
	  out_sfd__h560132 or _theResult___sfd__h560129)
  begin
    case (guard__h551458)
      2'b0, 2'b01:
	  CASE_guard51458_0b0_theResult___snd59394_BITS__ETC__q202 =
	      _theResult___snd__h559394[56:5];
      2'b10:
	  CASE_guard51458_0b0_theResult___snd59394_BITS__ETC__q202 =
	      out_sfd__h560132;
      2'b11:
	  CASE_guard51458_0b0_theResult___snd59394_BITS__ETC__q202 =
	      _theResult___sfd__h560129;
    endcase
  end
  always@(guard__h503536 or
	  _theResult___fst_exp__h511762 or _theResult___exp__h512491)
  begin
    case (guard__h503536)
      2'b0:
	  CASE_guard03536_0b0_theResult___fst_exp11762_0_ETC__q203 =
	      _theResult___fst_exp__h511762;
      2'b01, 2'b10, 2'b11:
	  CASE_guard03536_0b0_theResult___fst_exp11762_0_ETC__q203 =
	      _theResult___exp__h512491;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___fst_exp__h511762 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9116 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9114 or
	  CASE_guard03536_0b0_theResult___fst_exp11762_0_ETC__q203)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9120 =
	      _theResult___fst_exp__h511762;
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9120 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9116;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9120 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9114;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9120 =
	      CASE_guard03536_0b0_theResult___fst_exp11762_0_ETC__q203;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9120 =
		   11'd0;
    endcase
  end
  always@(guard__h503536 or
	  _theResult___fst_exp__h511762 or
	  out_exp__h512494 or _theResult___exp__h512491)
  begin
    case (guard__h503536)
      2'b0, 2'b01:
	  CASE_guard03536_0b0_theResult___fst_exp11762_0_ETC__q204 =
	      _theResult___fst_exp__h511762;
      2'b10:
	  CASE_guard03536_0b0_theResult___fst_exp11762_0_ETC__q204 =
	      out_exp__h512494;
      2'b11:
	  CASE_guard03536_0b0_theResult___fst_exp11762_0_ETC__q204 =
	      _theResult___exp__h512491;
    endcase
  end
  always@(guard__h512605 or
	  _theResult___fst_exp__h520595 or _theResult___exp__h521275)
  begin
    case (guard__h512605)
      2'b0:
	  CASE_guard12605_0b0_theResult___fst_exp20595_0_ETC__q205 =
	      _theResult___fst_exp__h520595;
      2'b01, 2'b10, 2'b11:
	  CASE_guard12605_0b0_theResult___fst_exp20595_0_ETC__q205 =
	      _theResult___exp__h521275;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___fst_exp__h520595 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9147 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9145 or
	  CASE_guard12605_0b0_theResult___fst_exp20595_0_ETC__q205)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9151 =
	      _theResult___fst_exp__h520595;
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9151 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9147;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9151 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9145;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9151 =
	      CASE_guard12605_0b0_theResult___fst_exp20595_0_ETC__q205;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9151 =
		   11'd0;
    endcase
  end
  always@(guard__h512605 or
	  _theResult___fst_exp__h520595 or
	  out_exp__h521278 or _theResult___exp__h521275)
  begin
    case (guard__h512605)
      2'b0, 2'b01:
	  CASE_guard12605_0b0_theResult___fst_exp20595_0_ETC__q206 =
	      _theResult___fst_exp__h520595;
      2'b10:
	  CASE_guard12605_0b0_theResult___fst_exp20595_0_ETC__q206 =
	      out_exp__h521278;
      2'b11:
	  CASE_guard12605_0b0_theResult___fst_exp20595_0_ETC__q206 =
	      _theResult___exp__h521275;
    endcase
  end
  always@(guard__h494224 or
	  _theResult___snd__h502136 or _theResult___sfd__h502841)
  begin
    case (guard__h494224)
      2'b0:
	  CASE_guard94224_0b0_theResult___snd02136_BITS__ETC__q207 =
	      _theResult___snd__h502136[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard94224_0b0_theResult___snd02136_BITS__ETC__q207 =
	      _theResult___sfd__h502841;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___snd__h502136 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9173 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9171 or
	  CASE_guard94224_0b0_theResult___snd02136_BITS__ETC__q207)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9177 =
	      _theResult___snd__h502136[56:5];
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9177 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9173;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9177 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9171;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9177 =
	      CASE_guard94224_0b0_theResult___snd02136_BITS__ETC__q207;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9177 =
		   52'd0;
    endcase
  end
  always@(guard__h494224 or
	  _theResult___snd__h502136 or
	  out_sfd__h502844 or _theResult___sfd__h502841)
  begin
    case (guard__h494224)
      2'b0, 2'b01:
	  CASE_guard94224_0b0_theResult___snd02136_BITS__ETC__q208 =
	      _theResult___snd__h502136[56:5];
      2'b10:
	  CASE_guard94224_0b0_theResult___snd02136_BITS__ETC__q208 =
	      out_sfd__h502844;
      2'b11:
	  CASE_guard94224_0b0_theResult___snd02136_BITS__ETC__q208 =
	      _theResult___sfd__h502841;
    endcase
  end
  always@(guard__h503536 or sfdin__h511756 or _theResult___sfd__h512492)
  begin
    case (guard__h503536)
      2'b0:
	  CASE_guard03536_0b0_sfdin11756_BITS_56_TO_5_0b_ETC__q209 =
	      sfdin__h511756[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard03536_0b0_sfdin11756_BITS_56_TO_5_0b_ETC__q209 =
	      _theResult___sfd__h512492;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  sfdin__h511756 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9200 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9198 or
	  CASE_guard03536_0b0_sfdin11756_BITS_56_TO_5_0b_ETC__q209)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9204 =
	      sfdin__h511756[56:5];
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9204 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9200;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9204 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9198;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9204 =
	      CASE_guard03536_0b0_sfdin11756_BITS_56_TO_5_0b_ETC__q209;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9204 =
		   52'd0;
    endcase
  end
  always@(guard__h503536 or
	  sfdin__h511756 or out_sfd__h512495 or _theResult___sfd__h512492)
  begin
    case (guard__h503536)
      2'b0, 2'b01:
	  CASE_guard03536_0b0_sfdin11756_BITS_56_TO_5_0b_ETC__q210 =
	      sfdin__h511756[56:5];
      2'b10:
	  CASE_guard03536_0b0_sfdin11756_BITS_56_TO_5_0b_ETC__q210 =
	      out_sfd__h512495;
      2'b11:
	  CASE_guard03536_0b0_sfdin11756_BITS_56_TO_5_0b_ETC__q210 =
	      _theResult___sfd__h512492;
    endcase
  end
  always@(guard__h512605 or
	  _theResult___snd__h520541 or _theResult___sfd__h521276)
  begin
    case (guard__h512605)
      2'b0:
	  CASE_guard12605_0b0_theResult___snd20541_BITS__ETC__q211 =
	      _theResult___snd__h520541[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard12605_0b0_theResult___snd20541_BITS__ETC__q211 =
	      _theResult___sfd__h521276;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___snd__h520541 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9219 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9217 or
	  CASE_guard12605_0b0_theResult___snd20541_BITS__ETC__q211)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9223 =
	      _theResult___snd__h520541[56:5];
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9223 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9219;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9223 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9217;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9223 =
	      CASE_guard12605_0b0_theResult___snd20541_BITS__ETC__q211;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9223 =
		   52'd0;
    endcase
  end
  always@(guard__h512605 or
	  _theResult___snd__h520541 or
	  out_sfd__h521279 or _theResult___sfd__h521276)
  begin
    case (guard__h512605)
      2'b0, 2'b01:
	  CASE_guard12605_0b0_theResult___snd20541_BITS__ETC__q212 =
	      _theResult___snd__h520541[56:5];
      2'b10:
	  CASE_guard12605_0b0_theResult___snd20541_BITS__ETC__q212 =
	      out_sfd__h521279;
      2'b11:
	  CASE_guard12605_0b0_theResult___snd20541_BITS__ETC__q212 =
	      _theResult___sfd__h521276;
    endcase
  end
  always@(guard__h572381 or
	  _theResult___snd__h580293 or _theResult___sfd__h580998)
  begin
    case (guard__h572381)
      2'b0:
	  CASE_guard72381_0b0_theResult___snd80293_BITS__ETC__q213 =
	      _theResult___snd__h580293[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard72381_0b0_theResult___snd80293_BITS__ETC__q213 =
	      _theResult___sfd__h580998;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___snd__h580293 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9883 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9881 or
	  CASE_guard72381_0b0_theResult___snd80293_BITS__ETC__q213)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9887 =
	      _theResult___snd__h580293[56:5];
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9887 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9883;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9887 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9881;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9887 =
	      CASE_guard72381_0b0_theResult___snd80293_BITS__ETC__q213;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9887 =
		   52'd0;
    endcase
  end
  always@(guard__h572381 or
	  _theResult___snd__h580293 or
	  out_sfd__h581001 or _theResult___sfd__h580998)
  begin
    case (guard__h572381)
      2'b0, 2'b01:
	  CASE_guard72381_0b0_theResult___snd80293_BITS__ETC__q214 =
	      _theResult___snd__h580293[56:5];
      2'b10:
	  CASE_guard72381_0b0_theResult___snd80293_BITS__ETC__q214 =
	      out_sfd__h581001;
      2'b11:
	  CASE_guard72381_0b0_theResult___snd80293_BITS__ETC__q214 =
	      _theResult___sfd__h580998;
    endcase
  end
  always@(guard__h581693 or sfdin__h589913 or _theResult___sfd__h590649)
  begin
    case (guard__h581693)
      2'b0:
	  CASE_guard81693_0b0_sfdin89913_BITS_56_TO_5_0b_ETC__q215 =
	      sfdin__h589913[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard81693_0b0_sfdin89913_BITS_56_TO_5_0b_ETC__q215 =
	      _theResult___sfd__h590649;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  sfdin__h589913 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9909 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9907 or
	  CASE_guard81693_0b0_sfdin89913_BITS_56_TO_5_0b_ETC__q215)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9913 =
	      sfdin__h589913[56:5];
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9913 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9909;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9913 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9907;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9913 =
	      CASE_guard81693_0b0_sfdin89913_BITS_56_TO_5_0b_ETC__q215;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9913 =
		   52'd0;
    endcase
  end
  always@(guard__h581693 or
	  sfdin__h589913 or out_sfd__h590652 or _theResult___sfd__h590649)
  begin
    case (guard__h581693)
      2'b0, 2'b01:
	  CASE_guard81693_0b0_sfdin89913_BITS_56_TO_5_0b_ETC__q216 =
	      sfdin__h589913[56:5];
      2'b10:
	  CASE_guard81693_0b0_sfdin89913_BITS_56_TO_5_0b_ETC__q216 =
	      out_sfd__h590652;
      2'b11:
	  CASE_guard81693_0b0_sfdin89913_BITS_56_TO_5_0b_ETC__q216 =
	      _theResult___sfd__h590649;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  coreFix_fpuMulDivExe_0_regToExeQ_first__429_BI_ETC___d10946 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10934 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10923)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[223:219])
      5'd0, 5'd1, 5'd2, 5'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10948 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10934;
      5'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10948 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10923;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10948 =
		   coreFix_fpuMulDivExe_0_regToExeQ_first__429_BI_ETC___d10946;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  coreFix_fpuMulDivExe_0_regToExeQ_first__429_BI_ETC___d10910 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10865 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10823)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[223:219])
      5'd0, 5'd1, 5'd2, 5'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10912 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10865;
      5'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10912 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10823;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10912 =
		   coreFix_fpuMulDivExe_0_regToExeQ_first__429_BI_ETC___d10910;
    endcase
  end
  always@(guard__h590762 or
	  _theResult___snd__h598698 or _theResult___sfd__h599433)
  begin
    case (guard__h590762)
      2'b0:
	  CASE_guard90762_0b0_theResult___snd98698_BITS__ETC__q217 =
	      _theResult___snd__h598698[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard90762_0b0_theResult___snd98698_BITS__ETC__q217 =
	      _theResult___sfd__h599433;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___snd__h598698 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9928 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9926 or
	  CASE_guard90762_0b0_theResult___snd98698_BITS__ETC__q217)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9932 =
	      _theResult___snd__h598698[56:5];
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9932 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9928;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9932 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9926;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9932 =
	      CASE_guard90762_0b0_theResult___snd98698_BITS__ETC__q217;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9932 =
		   52'd0;
    endcase
  end
  always@(guard__h590762 or
	  _theResult___snd__h598698 or
	  out_sfd__h599436 or _theResult___sfd__h599433)
  begin
    case (guard__h590762)
      2'b0, 2'b01:
	  CASE_guard90762_0b0_theResult___snd98698_BITS__ETC__q218 =
	      _theResult___snd__h598698[56:5];
      2'b10:
	  CASE_guard90762_0b0_theResult___snd98698_BITS__ETC__q218 =
	      out_sfd__h599436;
      2'b11:
	  CASE_guard90762_0b0_theResult___snd98698_BITS__ETC__q218 =
	      _theResult___sfd__h599433;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  coreFix_fpuMulDivExe_0_regToExeQ_first__429_BI_ETC___d10994 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10978 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10963)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[223:219])
      5'd0, 5'd1, 5'd2, 5'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10996 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10978;
      5'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10996 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10963;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10996 =
		   coreFix_fpuMulDivExe_0_regToExeQ_first__429_BI_ETC___d10994;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  coreFix_fpuMulDivExe_0_regToExeQ_first__429_BI_ETC___d11036 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11022 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11009)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[223:219])
      5'd0, 5'd1, 5'd2, 5'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d11038 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11022;
      5'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d11038 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11009;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d11038 =
		   coreFix_fpuMulDivExe_0_regToExeQ_first__429_BI_ETC___d11036;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  coreFix_fpuMulDivExe_0_regToExeQ_first__429_BI_ETC___d11078 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11064 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11051)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[223:219])
      5'd0, 5'd1, 5'd2, 5'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d11080 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11064;
      5'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d11080 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11051;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d11080 =
		   coreFix_fpuMulDivExe_0_regToExeQ_first__429_BI_ETC___d11078;
    endcase
  end
  always@(coreFix_aluExe_1_regToExeQ$first)
  begin
    case (coreFix_aluExe_1_regToExeQ$first[387:385])
      3'd0, 3'd1, 3'd2, 3'd3, 3'd4:
	  CASE_coreFix_aluExe_1_regToExeQfirst_BITS_387_ETC__q219 =
	      coreFix_aluExe_1_regToExeQ$first[387:385];
      default: CASE_coreFix_aluExe_1_regToExeQfirst_BITS_387_ETC__q219 = 3'd7;
    endcase
  end
  always@(coreFix_aluExe_1_regToExeQ$first or
	  CASE_coreFix_aluExe_1_regToExeQfirst_BITS_387_ETC__q219)
  begin
    case (coreFix_aluExe_1_regToExeQ$first[404:402])
      3'd3, 3'd2, 3'd1, 3'd0:
	  CASE_coreFix_aluExe_1_regToExeQfirst_BITS_404_ETC__q220 =
	      coreFix_aluExe_1_regToExeQ$first[404:384];
      3'd4:
	  CASE_coreFix_aluExe_1_regToExeQfirst_BITS_404_ETC__q220 =
	      { coreFix_aluExe_1_regToExeQ$first[404:402],
		9'h0AA,
		coreFix_aluExe_1_regToExeQ$first[392:388],
		CASE_coreFix_aluExe_1_regToExeQfirst_BITS_387_ETC__q219,
		coreFix_aluExe_1_regToExeQ$first[384] };
      default: CASE_coreFix_aluExe_1_regToExeQfirst_BITS_404_ETC__q220 =
		   { 3'd5, 18'h2AAAA };
    endcase
  end
  always@(coreFix_aluExe_1_regToExeQ$first)
  begin
    case (coreFix_aluExe_1_regToExeQ$first[382:371])
      12'd1971,
      12'd1970,
      12'd1969,
      12'd1968,
      12'd1955,
      12'd1954,
      12'd1953,
      12'd1952,
      12'd3860,
      12'd3859,
      12'd3858,
      12'd3857,
      12'd2818,
      12'd2816,
      12'd836,
      12'd835,
      12'd834,
      12'd833,
      12'd832,
      12'd774,
      12'd773,
      12'd772,
      12'd771,
      12'd770,
      12'd769,
      12'd768,
      12'd384,
      12'd324,
      12'd323,
      12'd322,
      12'd321,
      12'd320,
      12'd262,
      12'd261,
      12'd260,
      12'd256,
      12'd2049,
      12'd2048,
      12'd3074,
      12'd3073,
      12'd3072,
      12'd3,
      12'd2,
      12'd1:
	  CASE_coreFix_aluExe_1_regToExeQfirst_BITS_382_ETC__q221 =
	      coreFix_aluExe_1_regToExeQ$first[382:371];
      default: CASE_coreFix_aluExe_1_regToExeQfirst_BITS_382_ETC__q221 =
		   12'd2303;
    endcase
  end
  always@(coreFix_aluExe_0_regToExeQ$first)
  begin
    case (coreFix_aluExe_0_regToExeQ$first[387:385])
      3'd0, 3'd1, 3'd2, 3'd3, 3'd4:
	  CASE_coreFix_aluExe_0_regToExeQfirst_BITS_387_ETC__q222 =
	      coreFix_aluExe_0_regToExeQ$first[387:385];
      default: CASE_coreFix_aluExe_0_regToExeQfirst_BITS_387_ETC__q222 = 3'd7;
    endcase
  end
  always@(coreFix_aluExe_0_regToExeQ$first or
	  CASE_coreFix_aluExe_0_regToExeQfirst_BITS_387_ETC__q222)
  begin
    case (coreFix_aluExe_0_regToExeQ$first[404:402])
      3'd3, 3'd2, 3'd1, 3'd0:
	  CASE_coreFix_aluExe_0_regToExeQfirst_BITS_404_ETC__q223 =
	      coreFix_aluExe_0_regToExeQ$first[404:384];
      3'd4:
	  CASE_coreFix_aluExe_0_regToExeQfirst_BITS_404_ETC__q223 =
	      { coreFix_aluExe_0_regToExeQ$first[404:402],
		9'h0AA,
		coreFix_aluExe_0_regToExeQ$first[392:388],
		CASE_coreFix_aluExe_0_regToExeQfirst_BITS_387_ETC__q222,
		coreFix_aluExe_0_regToExeQ$first[384] };
      default: CASE_coreFix_aluExe_0_regToExeQfirst_BITS_404_ETC__q223 =
		   { 3'd5, 18'h2AAAA };
    endcase
  end
  always@(coreFix_aluExe_0_regToExeQ$first)
  begin
    case (coreFix_aluExe_0_regToExeQ$first[382:371])
      12'd1971,
      12'd1970,
      12'd1969,
      12'd1968,
      12'd1955,
      12'd1954,
      12'd1953,
      12'd1952,
      12'd3860,
      12'd3859,
      12'd3858,
      12'd3857,
      12'd2818,
      12'd2816,
      12'd836,
      12'd835,
      12'd834,
      12'd833,
      12'd832,
      12'd774,
      12'd773,
      12'd772,
      12'd771,
      12'd770,
      12'd769,
      12'd768,
      12'd384,
      12'd324,
      12'd323,
      12'd322,
      12'd321,
      12'd320,
      12'd262,
      12'd261,
      12'd260,
      12'd256,
      12'd2049,
      12'd2048,
      12'd3074,
      12'd3073,
      12'd3072,
      12'd3,
      12'd2,
      12'd1:
	  CASE_coreFix_aluExe_0_regToExeQfirst_BITS_382_ETC__q224 =
	      coreFix_aluExe_0_regToExeQ$first[382:371];
      default: CASE_coreFix_aluExe_0_regToExeQfirst_BITS_382_ETC__q224 =
		   12'd2303;
    endcase
  end
  always@(fetchStage$pipelines_0_first)
  begin
    case (fetchStage$pipelines_0_first[172:161])
      12'd1,
      12'd2,
      12'd3,
      12'd256,
      12'd260,
      12'd261,
      12'd262,
      12'd320,
      12'd321,
      12'd322,
      12'd323,
      12'd324,
      12'd384,
      12'd768,
      12'd769,
      12'd770,
      12'd771,
      12'd772,
      12'd773,
      12'd774,
      12'd832,
      12'd833,
      12'd834,
      12'd835,
      12'd836,
      12'd1952,
      12'd1953,
      12'd1954,
      12'd1955,
      12'd1968,
      12'd1969,
      12'd1970,
      12'd1971,
      12'd2048,
      12'd2049,
      12'd2816,
      12'd2818,
      12'd3072,
      12'd3073,
      12'd3074,
      12'd3857,
      12'd3858,
      12'd3859,
      12'd3860:
	  IF_fetchStage_pipelines_0_first__2816_BITS_172_ETC___d13032 =
	      fetchStage$pipelines_0_first[172:161];
      default: IF_fetchStage_pipelines_0_first__2816_BITS_172_ETC___d13032 =
		   12'd2303;
    endcase
  end
  always@(fetchStage$pipelines_0_first)
  begin
    case (fetchStage$pipelines_0_first[67:64])
      4'd0, 4'd1, 4'd2, 4'd3, 4'd4, 4'd5, 4'd6, 4'd7, 4'd8, 4'd9:
	  IF_fetchStage_pipelines_0_first__2816_BIT_68_2_ETC___d13189 =
	      fetchStage$pipelines_0_first[67:64];
      4'd11:
	  IF_fetchStage_pipelines_0_first__2816_BIT_68_2_ETC___d13189 = 4'd10;
      4'd12:
	  IF_fetchStage_pipelines_0_first__2816_BIT_68_2_ETC___d13189 = 4'd11;
      4'd13:
	  IF_fetchStage_pipelines_0_first__2816_BIT_68_2_ETC___d13189 = 4'd12;
      default: IF_fetchStage_pipelines_0_first__2816_BIT_68_2_ETC___d13189 =
		   4'd13;
    endcase
  end
  always@(fetchStage$pipelines_0_first)
  begin
    case (fetchStage$pipelines_0_first[177:175])
      3'd0, 3'd1, 3'd2, 3'd3, 3'd4:
	  CASE_fetchStagepipelines_0_first_BITS_177_TO__ETC__q225 =
	      fetchStage$pipelines_0_first[177:175];
      default: CASE_fetchStagepipelines_0_first_BITS_177_TO__ETC__q225 = 3'd7;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  CASE_fetchStagepipelines_0_first_BITS_177_TO__ETC__q225)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1, 3'd2, 3'd3:
	  IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d12942 =
	      fetchStage$pipelines_0_first[194:174];
      3'd4:
	  IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d12942 =
	      { fetchStage$pipelines_0_first[194:192],
		9'h0AA,
		fetchStage$pipelines_0_first[182:178],
		CASE_fetchStagepipelines_0_first_BITS_177_TO__ETC__q225,
		fetchStage$pipelines_0_first[174] };
      default: IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d12942 =
		   21'd1485482;
    endcase
  end
  always@(checkForException___d13067)
  begin
    case (checkForException___d13067[3:0])
      4'd0, 4'd1, 4'd2, 4'd3, 4'd4, 4'd5, 4'd6, 4'd7, 4'd8, 4'd9:
	  CASE_checkForException_3067_BITS_3_TO_0_0_chec_ETC__q226 =
	      checkForException___d13067[3:0];
      4'd11: CASE_checkForException_3067_BITS_3_TO_0_0_chec_ETC__q226 = 4'd10;
      4'd12: CASE_checkForException_3067_BITS_3_TO_0_0_chec_ETC__q226 = 4'd11;
      4'd13: CASE_checkForException_3067_BITS_3_TO_0_0_chec_ETC__q226 = 4'd12;
      default: CASE_checkForException_3067_BITS_3_TO_0_0_chec_ETC__q226 =
		   4'd13;
    endcase
  end
  always@(k__h669550 or
	  coreFix_aluExe_0_rsAlu$canEnq or coreFix_aluExe_1_rsAlu$canEnq)
  begin
    case (k__h669550)
      1'd0:
	  SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__351_ETC___d13521 =
	      !coreFix_aluExe_0_rsAlu$canEnq;
      1'd1:
	  SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__351_ETC___d13521 =
	      !coreFix_aluExe_1_rsAlu$canEnq;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_0_first[191:189])
      3'd0, 3'd2:
	  IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13536 =
	      coreFix_memExe_lsq$enqLdTag[4];
      default: IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13536 =
		   coreFix_memExe_lsq$enqStTag[4];
    endcase
  end
  always@(k__h669550 or
	  coreFix_aluExe_0_rsAlu$canEnq or coreFix_aluExe_1_rsAlu$canEnq)
  begin
    case (k__h669550)
      1'd0:
	  SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3510_co_ETC___d13544 =
	      coreFix_aluExe_0_rsAlu$canEnq;
      1'd1:
	  SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3510_co_ETC___d13544 =
	      coreFix_aluExe_1_rsAlu$canEnq;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  regRenamingTable_rename_0_canRename__3475_AND__ETC___d13501 or
	  NOT_SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__ETC___d13523 or
	  coreFix_memExe_rsMem$canEnq or
	  IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13536 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13541 =
	      NOT_SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__ETC___d13523;
      3'd2:
	  IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13541 =
	      coreFix_memExe_rsMem$canEnq &&
	      IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13536 &&
	      regRenamingTable_rename_0_canRename__3475_AND__ETC___d13501;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13541 =
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq &&
	      regRenamingTable_rename_0_canRename__3475_AND__ETC___d13501;
      default: IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13541 =
		   regRenamingTable_rename_0_canRename__3475_AND__ETC___d13501;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_rsMem$canEnq or
	  IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13536 or
	  SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3510_co_ETC___d13544 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13548 =
	      SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3510_co_ETC___d13544;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13548 =
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq;
      default: IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13548 =
		   fetchStage$pipelines_0_first[194:192] != 3'd2 ||
		   coreFix_memExe_rsMem$canEnq &&
		   IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13536;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_0_first[191:189])
      3'd0, 3'd2:
	  IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13593 =
	      !coreFix_memExe_lsq$enqLdTag[4];
      default: IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13593 =
		   !coreFix_memExe_lsq$enqStTag[4];
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_rsMem$canEnq or
	  IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13593 or
	  SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__351_ETC___d13521 or
	  specTagManager$canClaim or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13598 =
	      SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__351_ETC___d13521 ||
	      fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	      !specTagManager$canClaim;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13598 =
	      !coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq;
      default: IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13598 =
		   fetchStage$pipelines_0_first[194:192] == 3'd2 &&
		   (!coreFix_memExe_rsMem$canEnq ||
		    IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13593);
    endcase
  end
  always@(fetchStage$pipelines_1_first)
  begin
    case (fetchStage$pipelines_1_first[172:161])
      12'd1,
      12'd2,
      12'd3,
      12'd256,
      12'd260,
      12'd261,
      12'd262,
      12'd320,
      12'd321,
      12'd322,
      12'd323,
      12'd324,
      12'd384,
      12'd768,
      12'd769,
      12'd770,
      12'd771,
      12'd772,
      12'd773,
      12'd774,
      12'd832,
      12'd833,
      12'd834,
      12'd835,
      12'd836,
      12'd1952,
      12'd1953,
      12'd1954,
      12'd1955,
      12'd1968,
      12'd1969,
      12'd1970,
      12'd1971,
      12'd2048,
      12'd2049,
      12'd2816,
      12'd2818,
      12'd3072,
      12'd3073,
      12'd3074,
      12'd3857,
      12'd3858,
      12'd3859,
      12'd3860:
	  CASE_fetchStagepipelines_1_first_BITS_172_TO__ETC__q227 =
	      fetchStage$pipelines_1_first[172:161];
      default: CASE_fetchStagepipelines_1_first_BITS_172_TO__ETC__q227 =
		   12'd2303;
    endcase
  end
  always@(fetchStage$pipelines_1_first)
  begin
    case (fetchStage$pipelines_1_first[177:175])
      3'd0, 3'd1, 3'd2, 3'd3, 3'd4:
	  CASE_fetchStagepipelines_1_first_BITS_177_TO__ETC__q228 =
	      fetchStage$pipelines_1_first[177:175];
      default: CASE_fetchStagepipelines_1_first_BITS_177_TO__ETC__q228 = 3'd7;
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  CASE_fetchStagepipelines_1_first_BITS_177_TO__ETC__q228)
  begin
    case (fetchStage$pipelines_1_first[194:192])
      3'd0, 3'd1, 3'd2, 3'd3:
	  IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d13658 =
	      fetchStage$pipelines_1_first[194:174];
      3'd4:
	  IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d13658 =
	      { fetchStage$pipelines_1_first[194:192],
		9'h0AA,
		fetchStage$pipelines_1_first[182:178],
		CASE_fetchStagepipelines_1_first_BITS_177_TO__ETC__q228,
		fetchStage$pipelines_1_first[174] };
      default: IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d13658 =
		   21'd1485482;
    endcase
  end
  always@(idx__h684456 or
	  fetchStage$pipelines_0_canDeq or
	  NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d13818 or
	  coreFix_aluExe_0_rsAlu$canEnq or
	  NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d13824 or
	  coreFix_aluExe_1_rsAlu$canEnq)
  begin
    case (idx__h684456)
      1'd0:
	  SEL_ARR_fetchStage_pipelines_0_canDeq__2814_AN_ETC___d13844 =
	      fetchStage$pipelines_0_canDeq &&
	      NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d13818 ||
	      !coreFix_aluExe_0_rsAlu$canEnq;
      1'd1:
	  SEL_ARR_fetchStage_pipelines_0_canDeq__2814_AN_ETC___d13844 =
	      fetchStage$pipelines_0_canDeq &&
	      NOT_fetchStage_pipelines_0_first__2816_BITS_19_ETC___d13824 ||
	      !coreFix_aluExe_1_rsAlu$canEnq;
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_1_first[191:189])
      3'd0, 3'd2:
	  CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q229 =
	      !coreFix_memExe_lsq$enqLdTag[4];
      default: CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q229 =
		   !coreFix_memExe_lsq$enqStTag[4];
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_f_ETC___d13912 or
	  SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__351_ETC___d13521 or
	  fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d13916 or
	  coreFix_memExe_rsMem$canEnq or
	  IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13593 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13922 =
	      SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__351_ETC___d13521 ||
	      fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d13916;
      3'd2:
	  IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13922 =
	      !coreFix_memExe_rsMem$canEnq ||
	      IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13593 ||
	      renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_f_ETC___d13912;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13922 =
	      !coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq ||
	      renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_f_ETC___d13912;
      default: IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13922 =
		   renameStage_rg_m_halt_req_2843_BIT_4_2844_OR_f_ETC___d13912;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_rsMem$canEnq or
	  IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13536 or
	  SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3510_co_ETC___d13544 or
	  regRenamingTable$rename_0_canRename)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13944 =
	      SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3510_co_ETC___d13544;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13944 =
	      regRenamingTable$rename_0_canRename;
      default: IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13944 =
		   fetchStage$pipelines_0_first[194:192] != 3'd2 ||
		   coreFix_memExe_rsMem$canEnq &&
		   IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13536;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13536 or
	  SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3510_co_ETC___d13544 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13963 =
	      SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3510_co_ETC___d13544;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13963 =
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq;
      default: IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d13963 =
		   fetchStage$pipelines_0_first[194:192] != 3'd2 ||
		   IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13536;
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_1_first[191:189])
      3'd0, 3'd2:
	  CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q230 =
	      coreFix_memExe_lsq$enqLdTag[4];
      default: CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q230 =
		   coreFix_memExe_lsq$enqStTag[4];
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  regRenamingTable_rename_1_canRename__3604_AND__ETC___d13810 or
	  SEL_ARR_fetchStage_pipelines_0_canDeq__2814_AN_ETC___d13844 or
	  NOT_fetchStage_pipelines_1_first__2825_BITS_19_ETC___d13928 or
	  NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d13960 or
	  regRenamingTable_rename_1_canRename__3604_AND__ETC___d13972 or
	  NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d13941 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq or
	  regRenamingTable_rename_1_canRename__3604_AND__ETC___d13953)
  begin
    case (fetchStage$pipelines_1_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d13976 =
	      !SEL_ARR_fetchStage_pipelines_0_canDeq__2814_AN_ETC___d13844 &&
	      NOT_fetchStage_pipelines_1_first__2825_BITS_19_ETC___d13928;
      3'd2:
	  IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d13976 =
	      NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d13960 &&
	      regRenamingTable_rename_1_canRename__3604_AND__ETC___d13972;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d13976 =
	      NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d13941 &&
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq &&
	      regRenamingTable_rename_1_canRename__3604_AND__ETC___d13953;
      default: IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d13976 =
		   regRenamingTable_rename_1_canRename__3604_AND__ETC___d13810;
    endcase
  end
  always@(k__h669550 or
	  coreFix_aluExe_0_rsAlu$RDY_enq or coreFix_aluExe_1_rsAlu$RDY_enq)
  begin
    case (k__h669550)
      1'd0:
	  CASE_k69550_0_coreFix_aluExe_0_rsAluRDY_enq_1_ETC__q231 =
	      coreFix_aluExe_0_rsAlu$RDY_enq;
      1'd1:
	  CASE_k69550_0_coreFix_aluExe_0_rsAluRDY_enq_1_ETC__q231 =
	      coreFix_aluExe_1_rsAlu$RDY_enq;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_lsq$RDY_enqSt or coreFix_memExe_lsq$RDY_enqLd)
  begin
    case (fetchStage$pipelines_0_first[191:189])
      3'd0, 3'd2:
	  CASE_fetchStagepipelines_0_first_BITS_191_TO__ETC__q232 =
	      coreFix_memExe_lsq$RDY_enqLd;
      default: CASE_fetchStagepipelines_0_first_BITS_191_TO__ETC__q232 =
		   coreFix_memExe_lsq$RDY_enqSt;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_rsMem$canEnq or
	  IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13593 or
	  SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__351_ETC___d13521 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14021 =
	      SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__351_ETC___d13521;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14021 =
	      !coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq;
      default: IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14021 =
		   fetchStage$pipelines_0_first[194:192] == 3'd2 &&
		   (!coreFix_memExe_rsMem$canEnq ||
		    IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13593);
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_rsMem$canEnq or
	  IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13593 or
	  regRenamingTable_RDY_rename_0_getRename__3359__ETC___d14015 or
	  SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3510_co_ETC___d13544 or
	  regRenamingTable$RDY_rename_0_getRename or
	  _0_OR_NOT_fetchStage_pipelines_0_first__2816_BI_ETC___d14002 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_enq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14019 =
	      !SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3510_co_ETC___d13544 ||
	      regRenamingTable$RDY_rename_0_getRename &&
	      _0_OR_NOT_fetchStage_pipelines_0_first__2816_BI_ETC___d14002;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14019 =
	      !coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq ||
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_enq &&
	      regRenamingTable$RDY_rename_0_getRename;
      default: IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14019 =
		   fetchStage$pipelines_0_first[194:192] != 3'd2 ||
		   !coreFix_memExe_rsMem$canEnq ||
		   IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13593 ||
		   regRenamingTable_RDY_rename_0_getRename__3359__ETC___d14015;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_rsMem$canEnq or
	  IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13593 or
	  SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3510_co_ETC___d13544 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14035 =
	      !SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3510_co_ETC___d13544;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14035 =
	      !coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq;
      default: IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14035 =
		   fetchStage$pipelines_0_first[194:192] == 3'd2 &&
		   (!coreFix_memExe_rsMem$canEnq ||
		    IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13593);
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_rsMem$canEnq or
	  IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13536 or
	  SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__351_ETC___d13521 or
	  specTagManager$canClaim or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14044 =
	      !SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__351_ETC___d13521 &&
	      (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	       specTagManager$canClaim);
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14044 =
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq;
      default: IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14044 =
		   fetchStage$pipelines_0_first[194:192] != 3'd2 ||
		   coreFix_memExe_rsMem$canEnq &&
		   IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13536;
    endcase
  end
  always@(idx__h684456 or
	  fetchStage$pipelines_0_canDeq or
	  fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d14066 or
	  coreFix_aluExe_0_rsAlu$canEnq or
	  fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d14073 or
	  coreFix_aluExe_1_rsAlu$canEnq)
  begin
    case (idx__h684456)
      1'd0:
	  SEL_ARR_NOT_fetchStage_pipelines_0_canDeq__281_ETC___d14077 =
	      (!fetchStage$pipelines_0_canDeq ||
	       fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d14066) &&
	      coreFix_aluExe_0_rsAlu$canEnq;
      1'd1:
	  SEL_ARR_NOT_fetchStage_pipelines_0_canDeq__281_ETC___d14077 =
	      (!fetchStage$pipelines_0_canDeq ||
	       fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d14073) &&
	      coreFix_aluExe_1_rsAlu$canEnq;
    endcase
  end
  always@(fetchStage_pipelines_0_canDeq__2814_AND_NOT_fe_ETC___d14093 or
	  coreFix_aluExe_0_rsAlu$RDY_enq or coreFix_aluExe_1_rsAlu$RDY_enq)
  begin
    case (fetchStage_pipelines_0_canDeq__2814_AND_NOT_fe_ETC___d14093)
      1'd0:
	  CASE_fetchStage_pipelines_0_canDeq__2814_AND_N_ETC__q233 =
	      coreFix_aluExe_0_rsAlu$RDY_enq;
      1'd1:
	  CASE_fetchStage_pipelines_0_canDeq__2814_AND_N_ETC__q233 =
	      coreFix_aluExe_1_rsAlu$RDY_enq;
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  coreFix_memExe_lsq$RDY_enqSt or coreFix_memExe_lsq$RDY_enqLd)
  begin
    case (fetchStage$pipelines_1_first[191:189])
      3'd0, 3'd2:
	  CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q234 =
	      coreFix_memExe_lsq$RDY_enqLd;
      default: CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q234 =
		   coreFix_memExe_lsq$RDY_enqSt;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_rsMem$canEnq or
	  IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13593 or
	  SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3510_co_ETC___d13544)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14119 =
	      !SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3510_co_ETC___d13544;
      default: IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14119 =
		   fetchStage$pipelines_0_first[194:192] == 3'd2 &&
		   (!coreFix_memExe_rsMem$canEnq ||
		    IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13593);
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13593 or
	  SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3510_co_ETC___d13544 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14132 =
	      !SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3510_co_ETC___d13544;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14132 =
	      !coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq;
      default: IF_fetchStage_pipelines_0_first__2816_BITS_194_ETC___d14132 =
		   fetchStage$pipelines_0_first[194:192] == 3'd2 &&
		   IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d13593;
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  fetchStage_pipelines_0_canDeq__2814_AND_regRen_ETC___d14106 or
	  fetchStage$pipelines_0_canDeq or
	  fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d14135 or
	  SEL_ARR_fetchStage_pipelines_0_canDeq__2814_AN_ETC___d13844 or
	  fetchStage_pipelines_0_canDeq__2814_AND_regRen_ETC___d14129)
  begin
    case (fetchStage$pipelines_1_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d14145 =
	      SEL_ARR_fetchStage_pipelines_0_canDeq__2814_AN_ETC___d13844;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d14145 =
	      fetchStage_pipelines_0_canDeq__2814_AND_regRen_ETC___d14129;
      default: IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d14145 =
		   fetchStage$pipelines_1_first[194:192] == 3'd2 &&
		   (fetchStage_pipelines_0_canDeq__2814_AND_regRen_ETC___d14106 ||
		    fetchStage$pipelines_0_canDeq &&
		    fetchStage_pipelines_0_first__2816_BITS_194_TO_ETC___d14135);
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  fetchStage_pipelines_0_canDeq__2814_AND_regRen_ETC___d14106 or
	  regRenamingTable$RDY_rename_1_getRename or
	  NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14111 or
	  SEL_ARR_NOT_fetchStage_pipelines_0_canDeq__281_ETC___d14077 or
	  regRenamingTable_RDY_rename_1_getRename__4079__ETC___d14097 or
	  fetchStage_pipelines_0_canDeq__2814_AND_regRen_ETC___d14099 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv_RDY_enq__40_ETC___d14102)
  begin
    case (fetchStage$pipelines_1_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d14116 =
	      !SEL_ARR_NOT_fetchStage_pipelines_0_canDeq__281_ETC___d14077 ||
	      regRenamingTable_RDY_rename_1_getRename__4079__ETC___d14097;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d14116 =
	      fetchStage_pipelines_0_canDeq__2814_AND_regRen_ETC___d14099 ||
	      !coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq ||
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv_RDY_enq__40_ETC___d14102;
      default: IF_fetchStage_pipelines_1_first__2825_BITS_194_ETC___d14116 =
		   fetchStage$pipelines_1_first[194:192] != 3'd2 ||
		   fetchStage_pipelines_0_canDeq__2814_AND_regRen_ETC___d14106 ||
		   regRenamingTable$RDY_rename_1_getRename &&
		   NOT_fetchStage_pipelines_0_canDeq__2814_2815_O_ETC___d14111;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_0_first[191:189])
      3'd0, 3'd2:
	  IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d14202 =
	      !coreFix_memExe_lsq$enqLdTag[3];
      default: IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d14202 =
		   !coreFix_memExe_lsq$enqStTag[3];
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_0_first[191:189])
      3'd0, 3'd2:
	  IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d14199 =
	      coreFix_memExe_lsq$enqLdTag[3];
      default: IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d14199 =
		   coreFix_memExe_lsq$enqStTag[3];
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_0_first[191:189])
      3'd0, 3'd2:
	  IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d14208 =
	      coreFix_memExe_lsq$enqLdTag[1:0];
      default: IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d14208 =
		   coreFix_memExe_lsq$enqStTag[1:0];
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_0_first[191:189])
      3'd0, 3'd2:
	  IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d14205 =
	      coreFix_memExe_lsq$enqLdTag[2:0];
      default: IF_fetchStage_pipelines_0_first__2816_BITS_191_ETC___d14205 =
		   coreFix_memExe_lsq$enqStTag[2:0];
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_1_first[191:189])
      3'd0, 3'd2:
	  IF_fetchStage_pipelines_1_first__2825_BITS_191_ETC___d14337 =
	      coreFix_memExe_lsq$enqLdTag[1:0];
      default: IF_fetchStage_pipelines_1_first__2825_BITS_191_ETC___d14337 =
		   coreFix_memExe_lsq$enqStTag[1:0];
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_1_first[191:189])
      3'd0, 3'd2:
	  IF_fetchStage_pipelines_1_first__2825_BITS_191_ETC___d14335 =
	      !coreFix_memExe_lsq$enqLdTag[3];
      default: IF_fetchStage_pipelines_1_first__2825_BITS_191_ETC___d14335 =
		   !coreFix_memExe_lsq$enqStTag[3];
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_1_first[191:189])
      3'd0, 3'd2:
	  IF_fetchStage_pipelines_1_first__2825_BITS_191_ETC___d14334 =
	      coreFix_memExe_lsq$enqLdTag[3];
      default: IF_fetchStage_pipelines_1_first__2825_BITS_191_ETC___d14334 =
		   coreFix_memExe_lsq$enqStTag[3];
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_1_first[191:189])
      3'd0, 3'd2:
	  IF_fetchStage_pipelines_1_first__2825_BITS_191_ETC___d14336 =
	      coreFix_memExe_lsq$enqLdTag[2:0];
      default: IF_fetchStage_pipelines_1_first__2825_BITS_191_ETC___d14336 =
		   coreFix_memExe_lsq$enqStTag[2:0];
    endcase
  end
  always@(csrf_prv_reg or csrf_rg_dcsr)
  begin
    case (csrf_prv_reg)
      2'd1:
	  CASE_csrf_prv_reg_1_NOT_csrf_rg_dcsr_BIT_13_3__ETC__q235 =
	      !csrf_rg_dcsr[13];
      2'd3:
	  CASE_csrf_prv_reg_1_NOT_csrf_rg_dcsr_BIT_13_3__ETC__q235 =
	      !csrf_rg_dcsr[15];
      default: CASE_csrf_prv_reg_1_NOT_csrf_rg_dcsr_BIT_13_3__ETC__q235 =
		   !csrf_rg_dcsr[12];
    endcase
  end
  always@(csrf_prv_reg or csrf_rg_dcsr)
  begin
    case (csrf_prv_reg)
      2'd1:
	  CASE_csrf_prv_reg_1_csrf_rg_dcsr_BIT_13_3_csrf_ETC__q236 =
	      csrf_rg_dcsr[13];
      2'd3:
	  CASE_csrf_prv_reg_1_csrf_rg_dcsr_BIT_13_3_csrf_ETC__q236 =
	      csrf_rg_dcsr[15];
      default: CASE_csrf_prv_reg_1_csrf_rg_dcsr_BIT_13_3_csrf_ETC__q236 =
		   csrf_rg_dcsr[12];
    endcase
  end
  always@(rob$deqPort_0_deq_data)
  begin
    case (rob$deqPort_0_deq_data[170:159])
      12'd1:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd0;
      12'd2:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd1;
      12'd3:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd2;
      12'd256:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd8;
      12'd260:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd9;
      12'd261:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd10;
      12'd262:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd11;
      12'd320:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd12;
      12'd321:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd13;
      12'd322:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd14;
      12'd323:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd15;
      12'd324:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd16;
      12'd384:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd17;
      12'd768:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd18;
      12'd769:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd19;
      12'd770:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd20;
      12'd771:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd21;
      12'd772:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd22;
      12'd773:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd23;
      12'd774:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd24;
      12'd832:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd25;
      12'd833:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd26;
      12'd834:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd27;
      12'd835:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd28;
      12'd836:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd29;
      12'd1952:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd36;
      12'd1953:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd37;
      12'd1954:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd38;
      12'd1955:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd39;
      12'd1968:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd40;
      12'd1969:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd41;
      12'd1970:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd42;
      12'd1971:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd43;
      12'd2048:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd6;
      12'd2049:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd7;
      12'd2816:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd30;
      12'd2818:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd31;
      12'd3072:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd3;
      12'd3073:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd4;
      12'd3074:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd5;
      12'd3857:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd32;
      12'd3858:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd33;
      12'd3859:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd34;
      12'd3860:
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 = 6'd35;
      default: IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 =
		   6'd44;
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q237 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[511:448];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q237 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[511:448];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q238 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[447:384];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q238 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[447:384];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q239 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[383:320];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q239 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[383:320];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q240 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[319:256];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q240 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[319:256];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q241 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[255:192];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q241 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[255:192];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q242 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[191:128];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q242 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[191:128];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10775 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216];
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10775 = 3'd4;
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10775 = 3'd3;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10775 = 3'd2;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10775 = 3'd1;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10775 =
		   3'd0;
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq or
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first or
	  coreFix_memExe_stb$deq or
	  coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d2208 or
	  IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2266)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79])
      3'd0, 3'd2, 3'd4:
	  IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2558 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:0];
      3'd1:
	  IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2558 =
	      { coreFix_memExe_stb$deq[575] ?
		  coreFix_memExe_stb$deq[511:504] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:504],
		coreFix_memExe_stb$deq[574] ?
		  coreFix_memExe_stb$deq[503:496] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[503:496],
		coreFix_memExe_stb$deq[573] ?
		  coreFix_memExe_stb$deq[495:488] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[495:488],
		coreFix_memExe_stb$deq[572] ?
		  coreFix_memExe_stb$deq[487:480] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[487:480],
		coreFix_memExe_stb$deq[571] ?
		  coreFix_memExe_stb$deq[479:472] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[479:472],
		coreFix_memExe_stb$deq[570] ?
		  coreFix_memExe_stb$deq[471:464] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[471:464],
		coreFix_memExe_stb$deq[569] ?
		  coreFix_memExe_stb$deq[463:456] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[463:456],
		coreFix_memExe_stb$deq[568] ?
		  coreFix_memExe_stb$deq[455:448] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[455:448],
		coreFix_memExe_stb$deq[567] ?
		  coreFix_memExe_stb$deq[447:440] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[447:440],
		coreFix_memExe_stb$deq[566] ?
		  coreFix_memExe_stb$deq[439:432] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[439:432],
		coreFix_memExe_stb$deq[565] ?
		  coreFix_memExe_stb$deq[431:424] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[431:424],
		coreFix_memExe_stb$deq[564] ?
		  coreFix_memExe_stb$deq[423:416] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[423:416],
		coreFix_memExe_stb$deq[563] ?
		  coreFix_memExe_stb$deq[415:408] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[415:408],
		coreFix_memExe_stb$deq[562] ?
		  coreFix_memExe_stb$deq[407:400] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[407:400],
		coreFix_memExe_stb$deq[561] ?
		  coreFix_memExe_stb$deq[399:392] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[399:392],
		coreFix_memExe_stb$deq[560] ?
		  coreFix_memExe_stb$deq[391:384] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[391:384],
		coreFix_memExe_stb$deq[559] ?
		  coreFix_memExe_stb$deq[383:376] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[383:376],
		coreFix_memExe_stb$deq[558] ?
		  coreFix_memExe_stb$deq[375:368] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[375:368],
		coreFix_memExe_stb$deq[557] ?
		  coreFix_memExe_stb$deq[367:360] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[367:360],
		coreFix_memExe_stb$deq[556] ?
		  coreFix_memExe_stb$deq[359:352] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[359:352],
		coreFix_memExe_stb$deq[555] ?
		  coreFix_memExe_stb$deq[351:344] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[351:344],
		coreFix_memExe_stb$deq[554] ?
		  coreFix_memExe_stb$deq[343:336] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[343:336],
		coreFix_memExe_stb$deq[553] ?
		  coreFix_memExe_stb$deq[335:328] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[335:328],
		coreFix_memExe_stb$deq[552] ?
		  coreFix_memExe_stb$deq[327:320] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[327:320],
		coreFix_memExe_stb$deq[551] ?
		  coreFix_memExe_stb$deq[319:312] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[319:312],
		coreFix_memExe_stb$deq[550] ?
		  coreFix_memExe_stb$deq[311:304] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[311:304],
		coreFix_memExe_stb$deq[549] ?
		  coreFix_memExe_stb$deq[303:296] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[303:296],
		coreFix_memExe_stb$deq[548] ?
		  coreFix_memExe_stb$deq[295:288] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[295:288],
		coreFix_memExe_stb$deq[547] ?
		  coreFix_memExe_stb$deq[287:280] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[287:280],
		coreFix_memExe_stb$deq[546] ?
		  coreFix_memExe_stb$deq[279:272] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[279:272],
		coreFix_memExe_stb$deq[545] ?
		  coreFix_memExe_stb$deq[271:264] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[271:264],
		coreFix_memExe_stb$deq[544] ?
		  coreFix_memExe_stb$deq[263:256] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[263:256],
		coreFix_memExe_stb$deq[543] ?
		  coreFix_memExe_stb$deq[255:248] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[255:248],
		coreFix_memExe_stb$deq[542] ?
		  coreFix_memExe_stb$deq[247:240] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[247:240],
		coreFix_memExe_stb$deq[541] ?
		  coreFix_memExe_stb$deq[239:232] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[239:232],
		coreFix_memExe_stb$deq[540] ?
		  coreFix_memExe_stb$deq[231:224] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[231:224],
		coreFix_memExe_stb$deq[539] ?
		  coreFix_memExe_stb$deq[223:216] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[223:216],
		coreFix_memExe_stb$deq[538] ?
		  coreFix_memExe_stb$deq[215:208] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[215:208],
		coreFix_memExe_stb$deq[537] ?
		  coreFix_memExe_stb$deq[207:200] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[207:200],
		coreFix_memExe_stb$deq[536] ?
		  coreFix_memExe_stb$deq[199:192] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[199:192],
		coreFix_memExe_stb$deq[535] ?
		  coreFix_memExe_stb$deq[191:184] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[191:184],
		coreFix_memExe_stb$deq[534] ?
		  coreFix_memExe_stb$deq[183:176] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[183:176],
		coreFix_memExe_stb$deq[533] ?
		  coreFix_memExe_stb$deq[175:168] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[175:168],
		coreFix_memExe_stb$deq[532] ?
		  coreFix_memExe_stb$deq[167:160] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[167:160],
		coreFix_memExe_stb$deq[531] ?
		  coreFix_memExe_stb$deq[159:152] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[159:152],
		coreFix_memExe_stb$deq[530] ?
		  coreFix_memExe_stb$deq[151:144] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[151:144],
		coreFix_memExe_stb$deq[529] ?
		  coreFix_memExe_stb$deq[143:136] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[143:136],
		coreFix_memExe_stb$deq[528] ?
		  coreFix_memExe_stb$deq[135:128] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[135:128],
		coreFix_memExe_stb$deq[527] ?
		  coreFix_memExe_stb$deq[127:120] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[127:120],
		coreFix_memExe_stb$deq[526] ?
		  coreFix_memExe_stb$deq[119:112] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[119:112],
		coreFix_memExe_stb$deq[525] ?
		  coreFix_memExe_stb$deq[111:104] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[111:104],
		coreFix_memExe_stb$deq[524] ?
		  coreFix_memExe_stb$deq[103:96] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[103:96],
		coreFix_memExe_stb$deq[523] ?
		  coreFix_memExe_stb$deq[95:88] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[95:88],
		coreFix_memExe_stb$deq[522] ?
		  coreFix_memExe_stb$deq[87:80] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[87:80],
		coreFix_memExe_stb$deq[521] ?
		  coreFix_memExe_stb$deq[79:72] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[79:72],
		coreFix_memExe_stb$deq[520] ?
		  coreFix_memExe_stb$deq[71:64] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[71:64],
		coreFix_memExe_stb$deq[519] ?
		  coreFix_memExe_stb$deq[63:56] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[63:56],
		coreFix_memExe_stb$deq[518] ?
		  coreFix_memExe_stb$deq[55:48] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[55:48],
		coreFix_memExe_stb$deq[517] ?
		  coreFix_memExe_stb$deq[47:40] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[47:40],
		coreFix_memExe_stb$deq[516] ?
		  coreFix_memExe_stb$deq[39:32] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[39:32],
		coreFix_memExe_stb$deq[515] ?
		  coreFix_memExe_stb$deq[31:24] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[31:24],
		coreFix_memExe_stb$deq[514] ?
		  coreFix_memExe_stb$deq[23:16] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[23:16],
		coreFix_memExe_stb$deq[513] ?
		  coreFix_memExe_stb$deq[15:8] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[15:8],
		coreFix_memExe_stb$deq[512] ?
		  coreFix_memExe_stb$deq[7:0] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[7:0] };
      3'd3:
	  IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2558 =
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d2208 ?
		IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2266 :
		coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:0];
      default: IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2558 =
		   coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:0];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[218:216])
      3'd4, 3'd3, 3'd2, 3'd1, 3'd0:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q243 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[218:216];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q243 = 3'd7;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9942 or
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9232 or
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9998)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[223:219])
      5'd0, 5'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10002 =
	      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9232;
      5'd25:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10002 =
	      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9942;
      5'd26, 5'd27:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10002 =
	      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9998;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10002 =
		   IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9942;
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q244 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[130:67];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q244 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[130:67];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q245 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[66:3];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q245 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[66:3];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q246 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[127:64];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q246 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[127:64];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q247 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[63:0];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q247 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[63:0];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q248 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[578:515];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q248 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[578:515];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q249 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[514:513];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q249 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[514:513];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q250 =
	      !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[512];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q250 =
	      !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[512];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q251 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[517:516];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q251 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[517:516];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q252 =
	      !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[515];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q252 =
	      !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[515];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_enq or
	  coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_enq or
	  coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_enq or
	  coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_enq)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[223:219])
      5'd0, 5'd1, 5'd2, 5'd25, 5'd26, 5'd27, 5'd28:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d8467 =
	      coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_enq;
      5'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d8467 =
	      coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_enq;
      5'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d8467 =
	      coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_enq;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d8467 =
		   coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_enq;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$s_axis_dividend_tready or
	  coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$s_axis_divisor_tready or
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_enq or
	  coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init or
	  coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg$IS_READY or
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit or
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_enq)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[219:218])
      2'd0, 2'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d8486 =
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit != 2'd0 &&
	      coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_enq;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d8486 =
		   coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$s_axis_dividend_tready &&
		   coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc$s_axis_divisor_tready &&
		   coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_enq &&
		   coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init &&
		   coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg$IS_READY;
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q253 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0[5:4];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q253 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1[5:4];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q254 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0[3];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q254 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1[3];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q255 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0[2:0];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q255 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1[2:0];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q256 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0[71:8];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q256 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1[71:8];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q257 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0[7:6];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q257 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1[7:6];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q258 =
	      !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[582];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q258 =
	      !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[582];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q259 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[582];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q259 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[582];
    endcase
  end
  always@(rob$deqPort_0_deq_data)
  begin
    case (rob$deqPort_0_deq_data[155:152])
      4'd0, 4'd1, 4'd3, 4'd4, 4'd5, 4'd7, 4'd8, 4'd9, 4'd11, 4'd14:
	  CASE_robdeqPort_0_deq_data_BITS_155_TO_152_0__ETC__q260 =
	      rob$deqPort_0_deq_data[155:152];
      default: CASE_robdeqPort_0_deq_data_BITS_155_TO_152_0__ETC__q260 =
		   4'd15;
    endcase
  end
  always@(rob$deqPort_0_deq_data)
  begin
    case (rob$deqPort_0_deq_data[155:152])
      4'd0,
      4'd1,
      4'd2,
      4'd3,
      4'd4,
      4'd5,
      4'd6,
      4'd7,
      4'd8,
      4'd9,
      4'd11,
      4'd12,
      4'd13:
	  CASE_robdeqPort_0_deq_data_BITS_155_TO_152_0__ETC__q261 =
	      rob$deqPort_0_deq_data[155:152];
      default: CASE_robdeqPort_0_deq_data_BITS_155_TO_152_0__ETC__q261 =
		   4'd15;
    endcase
  end
  always@(mmio_dataReqQ_data_0)
  begin
    case (mmio_dataReqQ_data_0[77:76])
      2'd0, 2'd1, 2'd2:
	  CASE_mmio_dataReqQ_data_0_BITS_77_TO_76_0_mmio_ETC__q263 =
	      mmio_dataReqQ_data_0[77:72];
      2'd3:
	  CASE_mmio_dataReqQ_data_0_BITS_77_TO_76_0_mmio_ETC__q263 =
	      { 2'd3, mmio_dataReqQ_data_0[75:72] };
    endcase
  end
  always@(coreFix_memExe_lsq$firstLd)
  begin
    case (coreFix_memExe_lsq$firstLd[6:3])
      4'd0,
      4'd1,
      4'd2,
      4'd3,
      4'd4,
      4'd5,
      4'd6,
      4'd7,
      4'd8,
      4'd9,
      4'd11,
      4'd12,
      4'd13:
	  CASE_coreFix_memExe_lsqfirstLd_BITS_6_TO_3_0__ETC__q264 =
	      coreFix_memExe_lsq$firstLd[6:3];
      default: CASE_coreFix_memExe_lsqfirstLd_BITS_6_TO_3_0__ETC__q264 =
		   4'd15;
    endcase
  end
  always@(coreFix_memExe_lsq$firstSt)
  begin
    case (coreFix_memExe_lsq$firstSt[3:0])
      4'd0,
      4'd1,
      4'd2,
      4'd3,
      4'd4,
      4'd5,
      4'd6,
      4'd7,
      4'd8,
      4'd9,
      4'd11,
      4'd12,
      4'd13:
	  CASE_coreFix_memExe_lsqfirstSt_BITS_3_TO_0_0__ETC__q265 =
	      coreFix_memExe_lsq$firstSt[3:0];
      default: CASE_coreFix_memExe_lsqfirstSt_BITS_3_TO_0_0__ETC__q265 =
		   4'd15;
    endcase
  end
  always@(mmioToPlatform_pRq_enq_x)
  begin
    case (mmioToPlatform_pRq_enq_x[37:36])
      2'd0, 2'd1, 2'd2:
	  CASE_mmioToPlatform_pRq_enq_x_BITS_37_TO_36_0__ETC__q266 =
	      mmioToPlatform_pRq_enq_x[37:32];
      2'd3:
	  CASE_mmioToPlatform_pRq_enq_x_BITS_37_TO_36_0__ETC__q266 =
	      { 2'd3, mmioToPlatform_pRq_enq_x[35:32] };
    endcase
  end
  always@(coreFix_aluExe_0_rsAlu$dispatchData)
  begin
    case (coreFix_aluExe_0_rsAlu$dispatchData[127:125])
      3'd0, 3'd1, 3'd2, 3'd3, 3'd4:
	  CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q267 =
	      coreFix_aluExe_0_rsAlu$dispatchData[127:125];
      default: CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q267 = 3'd7;
    endcase
  end
  always@(coreFix_aluExe_0_rsAlu$dispatchData or
	  CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q267)
  begin
    case (coreFix_aluExe_0_rsAlu$dispatchData[144:142])
      3'd0, 3'd1, 3'd2, 3'd3:
	  CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q268 =
	      coreFix_aluExe_0_rsAlu$dispatchData[144:124];
      3'd4:
	  CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q268 =
	      { coreFix_aluExe_0_rsAlu$dispatchData[144:142],
		9'h0AA,
		coreFix_aluExe_0_rsAlu$dispatchData[132:128],
		CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q267,
		coreFix_aluExe_0_rsAlu$dispatchData[124] };
      default: CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q268 =
		   21'd1485482;
    endcase
  end
  always@(coreFix_aluExe_0_rsAlu$dispatchData)
  begin
    case (coreFix_aluExe_0_rsAlu$dispatchData[122:111])
      12'd1,
      12'd2,
      12'd3,
      12'd256,
      12'd260,
      12'd261,
      12'd262,
      12'd320,
      12'd321,
      12'd322,
      12'd323,
      12'd324,
      12'd384,
      12'd768,
      12'd769,
      12'd770,
      12'd771,
      12'd772,
      12'd773,
      12'd774,
      12'd832,
      12'd833,
      12'd834,
      12'd835,
      12'd836,
      12'd1952,
      12'd1953,
      12'd1954,
      12'd1955,
      12'd1968,
      12'd1969,
      12'd1970,
      12'd1971,
      12'd2048,
      12'd2049,
      12'd2816,
      12'd2818,
      12'd3072,
      12'd3073,
      12'd3074,
      12'd3857,
      12'd3858,
      12'd3859,
      12'd3860:
	  CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q269 =
	      coreFix_aluExe_0_rsAlu$dispatchData[122:111];
      default: CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q269 =
		   12'd2303;
    endcase
  end
  always@(coreFix_aluExe_0_dispToRegQ$first)
  begin
    case (coreFix_aluExe_0_dispToRegQ$first[123:121])
      3'd0, 3'd1, 3'd2, 3'd3, 3'd4:
	  CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_12_ETC__q270 =
	      coreFix_aluExe_0_dispToRegQ$first[123:121];
      default: CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_12_ETC__q270 = 3'd7;
    endcase
  end
  always@(coreFix_aluExe_0_dispToRegQ$first or
	  CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_12_ETC__q270)
  begin
    case (coreFix_aluExe_0_dispToRegQ$first[140:138])
      3'd0, 3'd1, 3'd2, 3'd3:
	  CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_14_ETC__q271 =
	      coreFix_aluExe_0_dispToRegQ$first[140:120];
      3'd4:
	  CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_14_ETC__q271 =
	      { coreFix_aluExe_0_dispToRegQ$first[140:138],
		9'h0AA,
		coreFix_aluExe_0_dispToRegQ$first[128:124],
		CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_12_ETC__q270,
		coreFix_aluExe_0_dispToRegQ$first[120] };
      default: CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_14_ETC__q271 =
		   21'd1485482;
    endcase
  end
  always@(coreFix_aluExe_0_dispToRegQ$first)
  begin
    case (coreFix_aluExe_0_dispToRegQ$first[118:107])
      12'd1,
      12'd2,
      12'd3,
      12'd256,
      12'd260,
      12'd261,
      12'd262,
      12'd320,
      12'd321,
      12'd322,
      12'd323,
      12'd324,
      12'd384,
      12'd768,
      12'd769,
      12'd770,
      12'd771,
      12'd772,
      12'd773,
      12'd774,
      12'd832,
      12'd833,
      12'd834,
      12'd835,
      12'd836,
      12'd1952,
      12'd1953,
      12'd1954,
      12'd1955,
      12'd1968,
      12'd1969,
      12'd1970,
      12'd1971,
      12'd2048,
      12'd2049,
      12'd2816,
      12'd2818,
      12'd3072,
      12'd3073,
      12'd3074,
      12'd3857,
      12'd3858,
      12'd3859,
      12'd3860:
	  CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_11_ETC__q272 =
	      coreFix_aluExe_0_dispToRegQ$first[118:107];
      default: CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_11_ETC__q272 =
		   12'd2303;
    endcase
  end
  always@(coreFix_aluExe_1_rsAlu$dispatchData)
  begin
    case (coreFix_aluExe_1_rsAlu$dispatchData[127:125])
      3'd0, 3'd1, 3'd2, 3'd3, 3'd4:
	  CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q273 =
	      coreFix_aluExe_1_rsAlu$dispatchData[127:125];
      default: CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q273 = 3'd7;
    endcase
  end
  always@(coreFix_aluExe_1_rsAlu$dispatchData or
	  CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q273)
  begin
    case (coreFix_aluExe_1_rsAlu$dispatchData[144:142])
      3'd0, 3'd1, 3'd2, 3'd3:
	  CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q274 =
	      coreFix_aluExe_1_rsAlu$dispatchData[144:124];
      3'd4:
	  CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q274 =
	      { coreFix_aluExe_1_rsAlu$dispatchData[144:142],
		9'h0AA,
		coreFix_aluExe_1_rsAlu$dispatchData[132:128],
		CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q273,
		coreFix_aluExe_1_rsAlu$dispatchData[124] };
      default: CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q274 =
		   21'd1485482;
    endcase
  end
  always@(coreFix_aluExe_1_rsAlu$dispatchData)
  begin
    case (coreFix_aluExe_1_rsAlu$dispatchData[122:111])
      12'd1,
      12'd2,
      12'd3,
      12'd256,
      12'd260,
      12'd261,
      12'd262,
      12'd320,
      12'd321,
      12'd322,
      12'd323,
      12'd324,
      12'd384,
      12'd768,
      12'd769,
      12'd770,
      12'd771,
      12'd772,
      12'd773,
      12'd774,
      12'd832,
      12'd833,
      12'd834,
      12'd835,
      12'd836,
      12'd1952,
      12'd1953,
      12'd1954,
      12'd1955,
      12'd1968,
      12'd1969,
      12'd1970,
      12'd1971,
      12'd2048,
      12'd2049,
      12'd2816,
      12'd2818,
      12'd3072,
      12'd3073,
      12'd3074,
      12'd3857,
      12'd3858,
      12'd3859,
      12'd3860:
	  CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q275 =
	      coreFix_aluExe_1_rsAlu$dispatchData[122:111];
      default: CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q275 =
		   12'd2303;
    endcase
  end
  always@(coreFix_aluExe_1_dispToRegQ$first)
  begin
    case (coreFix_aluExe_1_dispToRegQ$first[123:121])
      3'd0, 3'd1, 3'd2, 3'd3, 3'd4:
	  CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_12_ETC__q276 =
	      coreFix_aluExe_1_dispToRegQ$first[123:121];
      default: CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_12_ETC__q276 = 3'd7;
    endcase
  end
  always@(coreFix_aluExe_1_dispToRegQ$first or
	  CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_12_ETC__q276)
  begin
    case (coreFix_aluExe_1_dispToRegQ$first[140:138])
      3'd0, 3'd1, 3'd2, 3'd3:
	  CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_14_ETC__q277 =
	      coreFix_aluExe_1_dispToRegQ$first[140:120];
      3'd4:
	  CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_14_ETC__q277 =
	      { coreFix_aluExe_1_dispToRegQ$first[140:138],
		9'h0AA,
		coreFix_aluExe_1_dispToRegQ$first[128:124],
		CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_12_ETC__q276,
		coreFix_aluExe_1_dispToRegQ$first[120] };
      default: CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_14_ETC__q277 =
		   21'd1485482;
    endcase
  end
  always@(coreFix_aluExe_1_dispToRegQ$first)
  begin
    case (coreFix_aluExe_1_dispToRegQ$first[118:107])
      12'd1,
      12'd2,
      12'd3,
      12'd256,
      12'd260,
      12'd261,
      12'd262,
      12'd320,
      12'd321,
      12'd322,
      12'd323,
      12'd324,
      12'd384,
      12'd768,
      12'd769,
      12'd770,
      12'd771,
      12'd772,
      12'd773,
      12'd774,
      12'd832,
      12'd833,
      12'd834,
      12'd835,
      12'd836,
      12'd1952,
      12'd1953,
      12'd1954,
      12'd1955,
      12'd1968,
      12'd1969,
      12'd1970,
      12'd1971,
      12'd2048,
      12'd2049,
      12'd2816,
      12'd2818,
      12'd3072,
      12'd3073,
      12'd3074,
      12'd3857,
      12'd3858,
      12'd3859,
      12'd3860:
	  CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_11_ETC__q278 =
	      coreFix_aluExe_1_dispToRegQ$first[118:107];
      default: CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_11_ETC__q278 =
		   12'd2303;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData)
  begin
    case (coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData[57:55])
      3'd0, 3'd1, 3'd2, 3'd3, 3'd4:
	  CASE_coreFix_fpuMulDivExe_0_rsFpuMulDivdispat_ETC__q279 =
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData[57:55];
      default: CASE_coreFix_fpuMulDivExe_0_rsFpuMulDivdispat_ETC__q279 = 3'd7;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData or
	  CASE_coreFix_fpuMulDivExe_0_rsFpuMulDivdispat_ETC__q279)
  begin
    case (coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData[74:72])
      3'd0, 3'd1, 3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_rsFpuMulDivdispat_ETC__q280 =
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData[74:54];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_rsFpuMulDivdispat_ETC__q280 =
	      { coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData[74:72],
		9'h0AA,
		coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData[62:58],
		CASE_coreFix_fpuMulDivExe_0_rsFpuMulDivdispat_ETC__q279,
		coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData[54] };
      default: CASE_coreFix_fpuMulDivExe_0_rsFpuMulDivdispat_ETC__q280 =
		   21'd1485482;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9232 or
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10712 or
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10765 or
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10710)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[223:219])
      5'd0:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q281 =
	      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10712;
      5'd1:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q281 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[215] ?
		{ !coreFix_fpuMulDivExe_0_regToExeQ$first[131],
		  coreFix_fpuMulDivExe_0_regToExeQ$first[130:68] } :
		{ IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10765,
		  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10710 };
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q281 =
		   IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d9232;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10712)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[223:219])
      5'd0, 5'd1:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q282 =
	      64'h3FF0000000000000;
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q282 =
		   IF_coreFix_fpuMulDivExe_0_regToExeQ_first__429_ETC___d10712;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_dispToRegQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_dispToRegQ$first[50:48])
      3'd0, 3'd1, 3'd2, 3'd3, 3'd4:
	  CASE_coreFix_fpuMulDivExe_0_dispToRegQfirst_B_ETC__q283 =
	      coreFix_fpuMulDivExe_0_dispToRegQ$first[50:48];
      default: CASE_coreFix_fpuMulDivExe_0_dispToRegQfirst_B_ETC__q283 = 3'd7;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_dispToRegQ$first or
	  CASE_coreFix_fpuMulDivExe_0_dispToRegQfirst_B_ETC__q283)
  begin
    case (coreFix_fpuMulDivExe_0_dispToRegQ$first[67:65])
      3'd0, 3'd1, 3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_dispToRegQfirst_B_ETC__q284 =
	      coreFix_fpuMulDivExe_0_dispToRegQ$first[67:47];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_dispToRegQfirst_B_ETC__q284 =
	      { coreFix_fpuMulDivExe_0_dispToRegQ$first[67:65],
		9'h0AA,
		coreFix_fpuMulDivExe_0_dispToRegQ$first[55:51],
		CASE_coreFix_fpuMulDivExe_0_dispToRegQfirst_B_ETC__q283,
		coreFix_fpuMulDivExe_0_dispToRegQ$first[47] };
      default: CASE_coreFix_fpuMulDivExe_0_dispToRegQfirst_B_ETC__q284 =
		   21'd1485482;
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q285 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[1:0];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q285 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[1:0];
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        commitStage_commitTrap <= `BSV_ASSIGNMENT_DELAY
	    166'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	commitStage_rg_run_state <= `BSV_ASSIGNMENT_DELAY 1'd0;
	commitStage_rg_serial_num <= `BSV_ASSIGNMENT_DELAY 64'd0;
	coreFix_doStatsReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt <= `BSV_ASSIGNMENT_DELAY
	    4'd0;
	coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit <= `BSV_ASSIGNMENT_DELAY
	    2'd3;
	coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0 <= `BSV_ASSIGNMENT_DELAY
	    3'd2;
	coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1 <= `BSV_ASSIGNMENT_DELAY
	    3'd2;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2 <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3 <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4 <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5 <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6 <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7 <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    4'd2;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	    583'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA80000000000000000;
	coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	    583'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA80000000000000000;
	coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    584'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl <= `BSV_ASSIGNMENT_DELAY
	    59'h2AAAAAAAAAAAAAA;
	coreFix_memExe_dMem_cache_m_banks_0_processAmo <= `BSV_ASSIGNMENT_DELAY
	    159'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl <= `BSV_ASSIGNMENT_DELAY
	    151'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	    72'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	    72'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    73'h0AAAAAAAAAAAAAAAAAA;
	coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	    579'h00000000000000000AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	    579'h00000000000000000AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    580'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_perfReqQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_perfReqQ_data_0 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	coreFix_memExe_dMem_perfReqQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_dMem_perfReqQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	coreFix_memExe_dMem_perfReqQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY 5'd10;
	coreFix_memExe_dMem_perfReqQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_forwardQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_forwardQ_data_0 <= `BSV_ASSIGNMENT_DELAY 67'd0;
	coreFix_memExe_forwardQ_data_1 <= `BSV_ASSIGNMENT_DELAY 67'd0;
	coreFix_memExe_forwardQ_deqP <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_forwardQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_forwardQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	coreFix_memExe_forwardQ_enqP <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_forwardQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    68'h2AAAAAAAAAAAAAAAA;
	coreFix_memExe_forwardQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_memRespLdQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_memRespLdQ_data_0 <= `BSV_ASSIGNMENT_DELAY 67'd0;
	coreFix_memExe_memRespLdQ_data_1 <= `BSV_ASSIGNMENT_DELAY 67'd0;
	coreFix_memExe_memRespLdQ_deqP <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_memRespLdQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_memRespLdQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	coreFix_memExe_memRespLdQ_enqP <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_memRespLdQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    68'h2AAAAAAAAAAAAAAAA;
	coreFix_memExe_memRespLdQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_reqLdQ_data_0_rl <= `BSV_ASSIGNMENT_DELAY
	    67'h2AAAAAAAAAAAAAAAA;
	coreFix_memExe_reqLdQ_empty_rl <= `BSV_ASSIGNMENT_DELAY 1'd1;
	coreFix_memExe_reqLdQ_full_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_reqLrScAmoQ_data_0_rl <= `BSV_ASSIGNMENT_DELAY
	    151'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_memExe_reqLrScAmoQ_empty_rl <= `BSV_ASSIGNMENT_DELAY 1'd1;
	coreFix_memExe_reqLrScAmoQ_full_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_reqStQ_data_0_rl <= `BSV_ASSIGNMENT_DELAY
	    65'h0AAAAAAAAAAAAAAAA;
	coreFix_memExe_reqStQ_empty_rl <= `BSV_ASSIGNMENT_DELAY 1'd1;
	coreFix_memExe_reqStQ_full_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_respLrScAmoQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_respLrScAmoQ_data_0 <= `BSV_ASSIGNMENT_DELAY 64'd0;
	coreFix_memExe_respLrScAmoQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_respLrScAmoQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	coreFix_memExe_respLrScAmoQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    65'h0AAAAAAAAAAAAAAAA;
	coreFix_memExe_respLrScAmoQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_waitLrScAmoMMIOResp <= `BSV_ASSIGNMENT_DELAY 3'd0;
	csrInstOrInterruptInflight_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_external_int_en_vec_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_external_int_en_vec_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_external_int_en_vec_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_external_int_pend_vec_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_external_int_pend_vec_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_external_int_pend_vec_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_fflags_reg <= `BSV_ASSIGNMENT_DELAY 5'd0;
	csrf_frm_reg <= `BSV_ASSIGNMENT_DELAY 3'd0;
	csrf_fs_reg <= `BSV_ASSIGNMENT_DELAY 2'b01;
	csrf_ie_vec_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_ie_vec_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_ie_vec_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_mcause_code_reg <= `BSV_ASSIGNMENT_DELAY 4'd0;
	csrf_mcause_interrupt_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_mcounteren_cy_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_mcounteren_ir_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_mcounteren_tm_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_mcycle_ehr_data_rl <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_medeleg_13_11_reg <= `BSV_ASSIGNMENT_DELAY 3'd0;
	csrf_medeleg_15_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_medeleg_9_0_reg <= `BSV_ASSIGNMENT_DELAY 10'd0;
	csrf_mepc_csr <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_mideleg_11_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_mideleg_1_0_reg <= `BSV_ASSIGNMENT_DELAY 2'd0;
	csrf_mideleg_5_3_reg <= `BSV_ASSIGNMENT_DELAY 3'd0;
	csrf_mideleg_9_7_reg <= `BSV_ASSIGNMENT_DELAY 3'd0;
	csrf_minstret_ehr_data_rl <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_mpp_reg <= `BSV_ASSIGNMENT_DELAY 2'd0;
	csrf_mprv_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_mscratch_csr <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_mtval_csr <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_mtvec_base_hi_reg <= `BSV_ASSIGNMENT_DELAY 62'd0;
	csrf_mtvec_mode_low_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_mxr_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_ppn_reg <= `BSV_ASSIGNMENT_DELAY 44'd0;
	csrf_prev_ie_vec_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_prev_ie_vec_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_prev_ie_vec_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_prv_reg <= `BSV_ASSIGNMENT_DELAY 2'd3;
	csrf_rg_dcsr <= `BSV_ASSIGNMENT_DELAY 64'd1073741843;
	csrf_rg_dpc <= `BSV_ASSIGNMENT_DELAY 64'd1879048192;
	csrf_rg_tdata1_data <= `BSV_ASSIGNMENT_DELAY 59'd0;
	csrf_rg_tdata1_dmode <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_rg_tselect <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_scause_code_reg <= `BSV_ASSIGNMENT_DELAY 4'd0;
	csrf_scause_interrupt_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_scounteren_cy_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_scounteren_ir_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_scounteren_tm_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_sepc_csr <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_software_int_en_vec_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_software_int_en_vec_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_software_int_en_vec_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_software_int_pend_vec_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_software_int_pend_vec_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_software_int_pend_vec_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_spp_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_sscratch_csr <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_stats_module_doStats <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_stval_csr <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_stvec_base_hi_reg <= `BSV_ASSIGNMENT_DELAY 62'd0;
	csrf_stvec_mode_low_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_sum_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_time_reg <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_timer_int_en_vec_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_timer_int_en_vec_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_timer_int_en_vec_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_timer_int_pend_vec_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_timer_int_pend_vec_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_timer_int_pend_vec_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_tsr_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_tvm_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_tw_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_vm_mode_sv39_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	flush_brpred <= `BSV_ASSIGNMENT_DELAY 1'd0;
	flush_caches <= `BSV_ASSIGNMENT_DELAY 1'd0;
	flush_reservation <= `BSV_ASSIGNMENT_DELAY 1'd0;
	flush_tlbs <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_cRqQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_cRqQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	    142'h000000000000000008000000000000000000;
	mmio_cRqQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_cRqQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	mmio_cRqQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    143'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	mmio_cRqQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_cRsQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_cRsQ_data_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_cRsQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_cRsQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	mmio_cRsQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY 2'd0;
	mmio_cRsQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataPendQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataPendQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataPendQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	mmio_dataPendQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataPendQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataReqQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataReqQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	    142'h000000000000000008000000000000000000;
	mmio_dataReqQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataReqQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	mmio_dataReqQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    143'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	mmio_dataReqQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataRespQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataRespQ_data_0 <= `BSV_ASSIGNMENT_DELAY 65'd0;
	mmio_dataRespQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataRespQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	mmio_dataRespQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    66'h0AAAAAAAAAAAAAAAA;
	mmio_dataRespQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_fromHostAddr <= `BSV_ASSIGNMENT_DELAY 61'd0;
	mmio_pRqQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_pRqQ_data_0 <= `BSV_ASSIGNMENT_DELAY 39'h0800000000;
	mmio_pRqQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_pRqQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	mmio_pRqQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY 40'h2AAAAAAAAA;
	mmio_pRqQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_pRsQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_pRsQ_data_0 <= `BSV_ASSIGNMENT_DELAY 69'h055552AAA95554AAAA;
	mmio_pRsQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_pRsQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	mmio_pRsQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY 70'h0AAAAAAAAAAAAAAAAA;
	mmio_pRsQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_toHostAddr <= `BSV_ASSIGNMENT_DELAY 61'd0;
	outOfReset <= `BSV_ASSIGNMENT_DELAY 1'd0;
	renameStage_rg_m_halt_req <= `BSV_ASSIGNMENT_DELAY 5'd10;
	rg_core_run_state <= `BSV_ASSIGNMENT_DELAY 2'd2;
	started <= `BSV_ASSIGNMENT_DELAY 1'd0;
	update_vm_info <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (commitStage_commitTrap$EN)
	  commitStage_commitTrap <= `BSV_ASSIGNMENT_DELAY
	      commitStage_commitTrap$D_IN;
	if (commitStage_rg_run_state$EN)
	  commitStage_rg_run_state <= `BSV_ASSIGNMENT_DELAY
	      commitStage_rg_run_state$D_IN;
	if (commitStage_rg_serial_num$EN)
	  commitStage_rg_serial_num <= `BSV_ASSIGNMENT_DELAY
	      commitStage_rg_serial_num$D_IN;
	if (coreFix_doStatsReg$EN)
	  coreFix_doStatsReg <= `BSV_ASSIGNMENT_DELAY coreFix_doStatsReg$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_processAmo$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_processAmo <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_processAmo$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full$D_IN;
	if (coreFix_memExe_dMem_perfReqQ_clearReq_rl$EN)
	  coreFix_memExe_dMem_perfReqQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_perfReqQ_clearReq_rl$D_IN;
	if (coreFix_memExe_dMem_perfReqQ_data_0$EN)
	  coreFix_memExe_dMem_perfReqQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_perfReqQ_data_0$D_IN;
	if (coreFix_memExe_dMem_perfReqQ_deqReq_rl$EN)
	  coreFix_memExe_dMem_perfReqQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_perfReqQ_deqReq_rl$D_IN;
	if (coreFix_memExe_dMem_perfReqQ_empty$EN)
	  coreFix_memExe_dMem_perfReqQ_empty <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_perfReqQ_empty$D_IN;
	if (coreFix_memExe_dMem_perfReqQ_enqReq_rl$EN)
	  coreFix_memExe_dMem_perfReqQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_perfReqQ_enqReq_rl$D_IN;
	if (coreFix_memExe_dMem_perfReqQ_full$EN)
	  coreFix_memExe_dMem_perfReqQ_full <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_perfReqQ_full$D_IN;
	if (coreFix_memExe_forwardQ_clearReq_rl$EN)
	  coreFix_memExe_forwardQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_forwardQ_clearReq_rl$D_IN;
	if (coreFix_memExe_forwardQ_data_0$EN)
	  coreFix_memExe_forwardQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_forwardQ_data_0$D_IN;
	if (coreFix_memExe_forwardQ_data_1$EN)
	  coreFix_memExe_forwardQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_forwardQ_data_1$D_IN;
	if (coreFix_memExe_forwardQ_deqP$EN)
	  coreFix_memExe_forwardQ_deqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_forwardQ_deqP$D_IN;
	if (coreFix_memExe_forwardQ_deqReq_rl$EN)
	  coreFix_memExe_forwardQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_forwardQ_deqReq_rl$D_IN;
	if (coreFix_memExe_forwardQ_empty$EN)
	  coreFix_memExe_forwardQ_empty <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_forwardQ_empty$D_IN;
	if (coreFix_memExe_forwardQ_enqP$EN)
	  coreFix_memExe_forwardQ_enqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_forwardQ_enqP$D_IN;
	if (coreFix_memExe_forwardQ_enqReq_rl$EN)
	  coreFix_memExe_forwardQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_forwardQ_enqReq_rl$D_IN;
	if (coreFix_memExe_forwardQ_full$EN)
	  coreFix_memExe_forwardQ_full <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_forwardQ_full$D_IN;
	if (coreFix_memExe_memRespLdQ_clearReq_rl$EN)
	  coreFix_memExe_memRespLdQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_memRespLdQ_clearReq_rl$D_IN;
	if (coreFix_memExe_memRespLdQ_data_0$EN)
	  coreFix_memExe_memRespLdQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_memRespLdQ_data_0$D_IN;
	if (coreFix_memExe_memRespLdQ_data_1$EN)
	  coreFix_memExe_memRespLdQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_memRespLdQ_data_1$D_IN;
	if (coreFix_memExe_memRespLdQ_deqP$EN)
	  coreFix_memExe_memRespLdQ_deqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_memRespLdQ_deqP$D_IN;
	if (coreFix_memExe_memRespLdQ_deqReq_rl$EN)
	  coreFix_memExe_memRespLdQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_memRespLdQ_deqReq_rl$D_IN;
	if (coreFix_memExe_memRespLdQ_empty$EN)
	  coreFix_memExe_memRespLdQ_empty <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_memRespLdQ_empty$D_IN;
	if (coreFix_memExe_memRespLdQ_enqP$EN)
	  coreFix_memExe_memRespLdQ_enqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_memRespLdQ_enqP$D_IN;
	if (coreFix_memExe_memRespLdQ_enqReq_rl$EN)
	  coreFix_memExe_memRespLdQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_memRespLdQ_enqReq_rl$D_IN;
	if (coreFix_memExe_memRespLdQ_full$EN)
	  coreFix_memExe_memRespLdQ_full <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_memRespLdQ_full$D_IN;
	if (coreFix_memExe_reqLdQ_data_0_rl$EN)
	  coreFix_memExe_reqLdQ_data_0_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_reqLdQ_data_0_rl$D_IN;
	if (coreFix_memExe_reqLdQ_empty_rl$EN)
	  coreFix_memExe_reqLdQ_empty_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_reqLdQ_empty_rl$D_IN;
	if (coreFix_memExe_reqLdQ_full_rl$EN)
	  coreFix_memExe_reqLdQ_full_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_reqLdQ_full_rl$D_IN;
	if (coreFix_memExe_reqLrScAmoQ_data_0_rl$EN)
	  coreFix_memExe_reqLrScAmoQ_data_0_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_reqLrScAmoQ_data_0_rl$D_IN;
	if (coreFix_memExe_reqLrScAmoQ_empty_rl$EN)
	  coreFix_memExe_reqLrScAmoQ_empty_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_reqLrScAmoQ_empty_rl$D_IN;
	if (coreFix_memExe_reqLrScAmoQ_full_rl$EN)
	  coreFix_memExe_reqLrScAmoQ_full_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_reqLrScAmoQ_full_rl$D_IN;
	if (coreFix_memExe_reqStQ_data_0_rl$EN)
	  coreFix_memExe_reqStQ_data_0_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_reqStQ_data_0_rl$D_IN;
	if (coreFix_memExe_reqStQ_empty_rl$EN)
	  coreFix_memExe_reqStQ_empty_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_reqStQ_empty_rl$D_IN;
	if (coreFix_memExe_reqStQ_full_rl$EN)
	  coreFix_memExe_reqStQ_full_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_reqStQ_full_rl$D_IN;
	if (coreFix_memExe_respLrScAmoQ_clearReq_rl$EN)
	  coreFix_memExe_respLrScAmoQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_respLrScAmoQ_clearReq_rl$D_IN;
	if (coreFix_memExe_respLrScAmoQ_data_0$EN)
	  coreFix_memExe_respLrScAmoQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_respLrScAmoQ_data_0$D_IN;
	if (coreFix_memExe_respLrScAmoQ_deqReq_rl$EN)
	  coreFix_memExe_respLrScAmoQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_respLrScAmoQ_deqReq_rl$D_IN;
	if (coreFix_memExe_respLrScAmoQ_empty$EN)
	  coreFix_memExe_respLrScAmoQ_empty <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_respLrScAmoQ_empty$D_IN;
	if (coreFix_memExe_respLrScAmoQ_enqReq_rl$EN)
	  coreFix_memExe_respLrScAmoQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_respLrScAmoQ_enqReq_rl$D_IN;
	if (coreFix_memExe_respLrScAmoQ_full$EN)
	  coreFix_memExe_respLrScAmoQ_full <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_respLrScAmoQ_full$D_IN;
	if (coreFix_memExe_waitLrScAmoMMIOResp$EN)
	  coreFix_memExe_waitLrScAmoMMIOResp <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_waitLrScAmoMMIOResp$D_IN;
	if (csrInstOrInterruptInflight_rl$EN)
	  csrInstOrInterruptInflight_rl <= `BSV_ASSIGNMENT_DELAY
	      csrInstOrInterruptInflight_rl$D_IN;
	if (csrf_external_int_en_vec_0$EN)
	  csrf_external_int_en_vec_0 <= `BSV_ASSIGNMENT_DELAY
	      csrf_external_int_en_vec_0$D_IN;
	if (csrf_external_int_en_vec_1$EN)
	  csrf_external_int_en_vec_1 <= `BSV_ASSIGNMENT_DELAY
	      csrf_external_int_en_vec_1$D_IN;
	if (csrf_external_int_en_vec_3$EN)
	  csrf_external_int_en_vec_3 <= `BSV_ASSIGNMENT_DELAY
	      csrf_external_int_en_vec_3$D_IN;
	if (csrf_external_int_pend_vec_0$EN)
	  csrf_external_int_pend_vec_0 <= `BSV_ASSIGNMENT_DELAY
	      csrf_external_int_pend_vec_0$D_IN;
	if (csrf_external_int_pend_vec_1$EN)
	  csrf_external_int_pend_vec_1 <= `BSV_ASSIGNMENT_DELAY
	      csrf_external_int_pend_vec_1$D_IN;
	if (csrf_external_int_pend_vec_3$EN)
	  csrf_external_int_pend_vec_3 <= `BSV_ASSIGNMENT_DELAY
	      csrf_external_int_pend_vec_3$D_IN;
	if (csrf_fflags_reg$EN)
	  csrf_fflags_reg <= `BSV_ASSIGNMENT_DELAY csrf_fflags_reg$D_IN;
	if (csrf_frm_reg$EN)
	  csrf_frm_reg <= `BSV_ASSIGNMENT_DELAY csrf_frm_reg$D_IN;
	if (csrf_fs_reg$EN)
	  csrf_fs_reg <= `BSV_ASSIGNMENT_DELAY csrf_fs_reg$D_IN;
	if (csrf_ie_vec_0$EN)
	  csrf_ie_vec_0 <= `BSV_ASSIGNMENT_DELAY csrf_ie_vec_0$D_IN;
	if (csrf_ie_vec_1$EN)
	  csrf_ie_vec_1 <= `BSV_ASSIGNMENT_DELAY csrf_ie_vec_1$D_IN;
	if (csrf_ie_vec_3$EN)
	  csrf_ie_vec_3 <= `BSV_ASSIGNMENT_DELAY csrf_ie_vec_3$D_IN;
	if (csrf_mcause_code_reg$EN)
	  csrf_mcause_code_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mcause_code_reg$D_IN;
	if (csrf_mcause_interrupt_reg$EN)
	  csrf_mcause_interrupt_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mcause_interrupt_reg$D_IN;
	if (csrf_mcounteren_cy_reg$EN)
	  csrf_mcounteren_cy_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mcounteren_cy_reg$D_IN;
	if (csrf_mcounteren_ir_reg$EN)
	  csrf_mcounteren_ir_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mcounteren_ir_reg$D_IN;
	if (csrf_mcounteren_tm_reg$EN)
	  csrf_mcounteren_tm_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mcounteren_tm_reg$D_IN;
	if (csrf_mcycle_ehr_data_rl$EN)
	  csrf_mcycle_ehr_data_rl <= `BSV_ASSIGNMENT_DELAY
	      csrf_mcycle_ehr_data_rl$D_IN;
	if (csrf_medeleg_13_11_reg$EN)
	  csrf_medeleg_13_11_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_medeleg_13_11_reg$D_IN;
	if (csrf_medeleg_15_reg$EN)
	  csrf_medeleg_15_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_medeleg_15_reg$D_IN;
	if (csrf_medeleg_9_0_reg$EN)
	  csrf_medeleg_9_0_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_medeleg_9_0_reg$D_IN;
	if (csrf_mepc_csr$EN)
	  csrf_mepc_csr <= `BSV_ASSIGNMENT_DELAY csrf_mepc_csr$D_IN;
	if (csrf_mideleg_11_reg$EN)
	  csrf_mideleg_11_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mideleg_11_reg$D_IN;
	if (csrf_mideleg_1_0_reg$EN)
	  csrf_mideleg_1_0_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mideleg_1_0_reg$D_IN;
	if (csrf_mideleg_5_3_reg$EN)
	  csrf_mideleg_5_3_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mideleg_5_3_reg$D_IN;
	if (csrf_mideleg_9_7_reg$EN)
	  csrf_mideleg_9_7_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mideleg_9_7_reg$D_IN;
	if (csrf_minstret_ehr_data_rl$EN)
	  csrf_minstret_ehr_data_rl <= `BSV_ASSIGNMENT_DELAY
	      csrf_minstret_ehr_data_rl$D_IN;
	if (csrf_mpp_reg$EN)
	  csrf_mpp_reg <= `BSV_ASSIGNMENT_DELAY csrf_mpp_reg$D_IN;
	if (csrf_mprv_reg$EN)
	  csrf_mprv_reg <= `BSV_ASSIGNMENT_DELAY csrf_mprv_reg$D_IN;
	if (csrf_mscratch_csr$EN)
	  csrf_mscratch_csr <= `BSV_ASSIGNMENT_DELAY csrf_mscratch_csr$D_IN;
	if (csrf_mtval_csr$EN)
	  csrf_mtval_csr <= `BSV_ASSIGNMENT_DELAY csrf_mtval_csr$D_IN;
	if (csrf_mtvec_base_hi_reg$EN)
	  csrf_mtvec_base_hi_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mtvec_base_hi_reg$D_IN;
	if (csrf_mtvec_mode_low_reg$EN)
	  csrf_mtvec_mode_low_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mtvec_mode_low_reg$D_IN;
	if (csrf_mxr_reg$EN)
	  csrf_mxr_reg <= `BSV_ASSIGNMENT_DELAY csrf_mxr_reg$D_IN;
	if (csrf_ppn_reg$EN)
	  csrf_ppn_reg <= `BSV_ASSIGNMENT_DELAY csrf_ppn_reg$D_IN;
	if (csrf_prev_ie_vec_0$EN)
	  csrf_prev_ie_vec_0 <= `BSV_ASSIGNMENT_DELAY csrf_prev_ie_vec_0$D_IN;
	if (csrf_prev_ie_vec_1$EN)
	  csrf_prev_ie_vec_1 <= `BSV_ASSIGNMENT_DELAY csrf_prev_ie_vec_1$D_IN;
	if (csrf_prev_ie_vec_3$EN)
	  csrf_prev_ie_vec_3 <= `BSV_ASSIGNMENT_DELAY csrf_prev_ie_vec_3$D_IN;
	if (csrf_prv_reg$EN)
	  csrf_prv_reg <= `BSV_ASSIGNMENT_DELAY csrf_prv_reg$D_IN;
	if (csrf_rg_dcsr$EN)
	  csrf_rg_dcsr <= `BSV_ASSIGNMENT_DELAY csrf_rg_dcsr$D_IN;
	if (csrf_rg_dpc$EN)
	  csrf_rg_dpc <= `BSV_ASSIGNMENT_DELAY csrf_rg_dpc$D_IN;
	if (csrf_rg_tdata1_data$EN)
	  csrf_rg_tdata1_data <= `BSV_ASSIGNMENT_DELAY
	      csrf_rg_tdata1_data$D_IN;
	if (csrf_rg_tdata1_dmode$EN)
	  csrf_rg_tdata1_dmode <= `BSV_ASSIGNMENT_DELAY
	      csrf_rg_tdata1_dmode$D_IN;
	if (csrf_rg_tselect$EN)
	  csrf_rg_tselect <= `BSV_ASSIGNMENT_DELAY csrf_rg_tselect$D_IN;
	if (csrf_scause_code_reg$EN)
	  csrf_scause_code_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_scause_code_reg$D_IN;
	if (csrf_scause_interrupt_reg$EN)
	  csrf_scause_interrupt_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_scause_interrupt_reg$D_IN;
	if (csrf_scounteren_cy_reg$EN)
	  csrf_scounteren_cy_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_scounteren_cy_reg$D_IN;
	if (csrf_scounteren_ir_reg$EN)
	  csrf_scounteren_ir_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_scounteren_ir_reg$D_IN;
	if (csrf_scounteren_tm_reg$EN)
	  csrf_scounteren_tm_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_scounteren_tm_reg$D_IN;
	if (csrf_sepc_csr$EN)
	  csrf_sepc_csr <= `BSV_ASSIGNMENT_DELAY csrf_sepc_csr$D_IN;
	if (csrf_software_int_en_vec_0$EN)
	  csrf_software_int_en_vec_0 <= `BSV_ASSIGNMENT_DELAY
	      csrf_software_int_en_vec_0$D_IN;
	if (csrf_software_int_en_vec_1$EN)
	  csrf_software_int_en_vec_1 <= `BSV_ASSIGNMENT_DELAY
	      csrf_software_int_en_vec_1$D_IN;
	if (csrf_software_int_en_vec_3$EN)
	  csrf_software_int_en_vec_3 <= `BSV_ASSIGNMENT_DELAY
	      csrf_software_int_en_vec_3$D_IN;
	if (csrf_software_int_pend_vec_0$EN)
	  csrf_software_int_pend_vec_0 <= `BSV_ASSIGNMENT_DELAY
	      csrf_software_int_pend_vec_0$D_IN;
	if (csrf_software_int_pend_vec_1$EN)
	  csrf_software_int_pend_vec_1 <= `BSV_ASSIGNMENT_DELAY
	      csrf_software_int_pend_vec_1$D_IN;
	if (csrf_software_int_pend_vec_3$EN)
	  csrf_software_int_pend_vec_3 <= `BSV_ASSIGNMENT_DELAY
	      csrf_software_int_pend_vec_3$D_IN;
	if (csrf_spp_reg$EN)
	  csrf_spp_reg <= `BSV_ASSIGNMENT_DELAY csrf_spp_reg$D_IN;
	if (csrf_sscratch_csr$EN)
	  csrf_sscratch_csr <= `BSV_ASSIGNMENT_DELAY csrf_sscratch_csr$D_IN;
	if (csrf_stats_module_doStats$EN)
	  csrf_stats_module_doStats <= `BSV_ASSIGNMENT_DELAY
	      csrf_stats_module_doStats$D_IN;
	if (csrf_stval_csr$EN)
	  csrf_stval_csr <= `BSV_ASSIGNMENT_DELAY csrf_stval_csr$D_IN;
	if (csrf_stvec_base_hi_reg$EN)
	  csrf_stvec_base_hi_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_stvec_base_hi_reg$D_IN;
	if (csrf_stvec_mode_low_reg$EN)
	  csrf_stvec_mode_low_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_stvec_mode_low_reg$D_IN;
	if (csrf_sum_reg$EN)
	  csrf_sum_reg <= `BSV_ASSIGNMENT_DELAY csrf_sum_reg$D_IN;
	if (csrf_time_reg$EN)
	  csrf_time_reg <= `BSV_ASSIGNMENT_DELAY csrf_time_reg$D_IN;
	if (csrf_timer_int_en_vec_0$EN)
	  csrf_timer_int_en_vec_0 <= `BSV_ASSIGNMENT_DELAY
	      csrf_timer_int_en_vec_0$D_IN;
	if (csrf_timer_int_en_vec_1$EN)
	  csrf_timer_int_en_vec_1 <= `BSV_ASSIGNMENT_DELAY
	      csrf_timer_int_en_vec_1$D_IN;
	if (csrf_timer_int_en_vec_3$EN)
	  csrf_timer_int_en_vec_3 <= `BSV_ASSIGNMENT_DELAY
	      csrf_timer_int_en_vec_3$D_IN;
	if (csrf_timer_int_pend_vec_0$EN)
	  csrf_timer_int_pend_vec_0 <= `BSV_ASSIGNMENT_DELAY
	      csrf_timer_int_pend_vec_0$D_IN;
	if (csrf_timer_int_pend_vec_1$EN)
	  csrf_timer_int_pend_vec_1 <= `BSV_ASSIGNMENT_DELAY
	      csrf_timer_int_pend_vec_1$D_IN;
	if (csrf_timer_int_pend_vec_3$EN)
	  csrf_timer_int_pend_vec_3 <= `BSV_ASSIGNMENT_DELAY
	      csrf_timer_int_pend_vec_3$D_IN;
	if (csrf_tsr_reg$EN)
	  csrf_tsr_reg <= `BSV_ASSIGNMENT_DELAY csrf_tsr_reg$D_IN;
	if (csrf_tvm_reg$EN)
	  csrf_tvm_reg <= `BSV_ASSIGNMENT_DELAY csrf_tvm_reg$D_IN;
	if (csrf_tw_reg$EN)
	  csrf_tw_reg <= `BSV_ASSIGNMENT_DELAY csrf_tw_reg$D_IN;
	if (csrf_vm_mode_sv39_reg$EN)
	  csrf_vm_mode_sv39_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_vm_mode_sv39_reg$D_IN;
	if (flush_brpred$EN)
	  flush_brpred <= `BSV_ASSIGNMENT_DELAY flush_brpred$D_IN;
	if (flush_caches$EN)
	  flush_caches <= `BSV_ASSIGNMENT_DELAY flush_caches$D_IN;
	if (flush_reservation$EN)
	  flush_reservation <= `BSV_ASSIGNMENT_DELAY flush_reservation$D_IN;
	if (flush_tlbs$EN)
	  flush_tlbs <= `BSV_ASSIGNMENT_DELAY flush_tlbs$D_IN;
	if (mmio_cRqQ_clearReq_rl$EN)
	  mmio_cRqQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_cRqQ_clearReq_rl$D_IN;
	if (mmio_cRqQ_data_0$EN)
	  mmio_cRqQ_data_0 <= `BSV_ASSIGNMENT_DELAY mmio_cRqQ_data_0$D_IN;
	if (mmio_cRqQ_deqReq_rl$EN)
	  mmio_cRqQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_cRqQ_deqReq_rl$D_IN;
	if (mmio_cRqQ_empty$EN)
	  mmio_cRqQ_empty <= `BSV_ASSIGNMENT_DELAY mmio_cRqQ_empty$D_IN;
	if (mmio_cRqQ_enqReq_rl$EN)
	  mmio_cRqQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_cRqQ_enqReq_rl$D_IN;
	if (mmio_cRqQ_full$EN)
	  mmio_cRqQ_full <= `BSV_ASSIGNMENT_DELAY mmio_cRqQ_full$D_IN;
	if (mmio_cRsQ_clearReq_rl$EN)
	  mmio_cRsQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_cRsQ_clearReq_rl$D_IN;
	if (mmio_cRsQ_data_0$EN)
	  mmio_cRsQ_data_0 <= `BSV_ASSIGNMENT_DELAY mmio_cRsQ_data_0$D_IN;
	if (mmio_cRsQ_deqReq_rl$EN)
	  mmio_cRsQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_cRsQ_deqReq_rl$D_IN;
	if (mmio_cRsQ_empty$EN)
	  mmio_cRsQ_empty <= `BSV_ASSIGNMENT_DELAY mmio_cRsQ_empty$D_IN;
	if (mmio_cRsQ_enqReq_rl$EN)
	  mmio_cRsQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_cRsQ_enqReq_rl$D_IN;
	if (mmio_cRsQ_full$EN)
	  mmio_cRsQ_full <= `BSV_ASSIGNMENT_DELAY mmio_cRsQ_full$D_IN;
	if (mmio_dataPendQ_clearReq_rl$EN)
	  mmio_dataPendQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataPendQ_clearReq_rl$D_IN;
	if (mmio_dataPendQ_deqReq_rl$EN)
	  mmio_dataPendQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataPendQ_deqReq_rl$D_IN;
	if (mmio_dataPendQ_empty$EN)
	  mmio_dataPendQ_empty <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataPendQ_empty$D_IN;
	if (mmio_dataPendQ_enqReq_rl$EN)
	  mmio_dataPendQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataPendQ_enqReq_rl$D_IN;
	if (mmio_dataPendQ_full$EN)
	  mmio_dataPendQ_full <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataPendQ_full$D_IN;
	if (mmio_dataReqQ_clearReq_rl$EN)
	  mmio_dataReqQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataReqQ_clearReq_rl$D_IN;
	if (mmio_dataReqQ_data_0$EN)
	  mmio_dataReqQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataReqQ_data_0$D_IN;
	if (mmio_dataReqQ_deqReq_rl$EN)
	  mmio_dataReqQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataReqQ_deqReq_rl$D_IN;
	if (mmio_dataReqQ_empty$EN)
	  mmio_dataReqQ_empty <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataReqQ_empty$D_IN;
	if (mmio_dataReqQ_enqReq_rl$EN)
	  mmio_dataReqQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataReqQ_enqReq_rl$D_IN;
	if (mmio_dataReqQ_full$EN)
	  mmio_dataReqQ_full <= `BSV_ASSIGNMENT_DELAY mmio_dataReqQ_full$D_IN;
	if (mmio_dataRespQ_clearReq_rl$EN)
	  mmio_dataRespQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataRespQ_clearReq_rl$D_IN;
	if (mmio_dataRespQ_data_0$EN)
	  mmio_dataRespQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataRespQ_data_0$D_IN;
	if (mmio_dataRespQ_deqReq_rl$EN)
	  mmio_dataRespQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataRespQ_deqReq_rl$D_IN;
	if (mmio_dataRespQ_empty$EN)
	  mmio_dataRespQ_empty <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataRespQ_empty$D_IN;
	if (mmio_dataRespQ_enqReq_rl$EN)
	  mmio_dataRespQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataRespQ_enqReq_rl$D_IN;
	if (mmio_dataRespQ_full$EN)
	  mmio_dataRespQ_full <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataRespQ_full$D_IN;
	if (mmio_fromHostAddr$EN)
	  mmio_fromHostAddr <= `BSV_ASSIGNMENT_DELAY mmio_fromHostAddr$D_IN;
	if (mmio_pRqQ_clearReq_rl$EN)
	  mmio_pRqQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_pRqQ_clearReq_rl$D_IN;
	if (mmio_pRqQ_data_0$EN)
	  mmio_pRqQ_data_0 <= `BSV_ASSIGNMENT_DELAY mmio_pRqQ_data_0$D_IN;
	if (mmio_pRqQ_deqReq_rl$EN)
	  mmio_pRqQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_pRqQ_deqReq_rl$D_IN;
	if (mmio_pRqQ_empty$EN)
	  mmio_pRqQ_empty <= `BSV_ASSIGNMENT_DELAY mmio_pRqQ_empty$D_IN;
	if (mmio_pRqQ_enqReq_rl$EN)
	  mmio_pRqQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_pRqQ_enqReq_rl$D_IN;
	if (mmio_pRqQ_full$EN)
	  mmio_pRqQ_full <= `BSV_ASSIGNMENT_DELAY mmio_pRqQ_full$D_IN;
	if (mmio_pRsQ_clearReq_rl$EN)
	  mmio_pRsQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_pRsQ_clearReq_rl$D_IN;
	if (mmio_pRsQ_data_0$EN)
	  mmio_pRsQ_data_0 <= `BSV_ASSIGNMENT_DELAY mmio_pRsQ_data_0$D_IN;
	if (mmio_pRsQ_deqReq_rl$EN)
	  mmio_pRsQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_pRsQ_deqReq_rl$D_IN;
	if (mmio_pRsQ_empty$EN)
	  mmio_pRsQ_empty <= `BSV_ASSIGNMENT_DELAY mmio_pRsQ_empty$D_IN;
	if (mmio_pRsQ_enqReq_rl$EN)
	  mmio_pRsQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_pRsQ_enqReq_rl$D_IN;
	if (mmio_pRsQ_full$EN)
	  mmio_pRsQ_full <= `BSV_ASSIGNMENT_DELAY mmio_pRsQ_full$D_IN;
	if (mmio_toHostAddr$EN)
	  mmio_toHostAddr <= `BSV_ASSIGNMENT_DELAY mmio_toHostAddr$D_IN;
	if (outOfReset$EN)
	  outOfReset <= `BSV_ASSIGNMENT_DELAY outOfReset$D_IN;
	if (renameStage_rg_m_halt_req$EN)
	  renameStage_rg_m_halt_req <= `BSV_ASSIGNMENT_DELAY
	      renameStage_rg_m_halt_req$D_IN;
	if (rg_core_run_state$EN)
	  rg_core_run_state <= `BSV_ASSIGNMENT_DELAY rg_core_run_state$D_IN;
	if (started$EN) started <= `BSV_ASSIGNMENT_DELAY started$D_IN;
	if (update_vm_info$EN)
	  update_vm_info <= `BSV_ASSIGNMENT_DELAY update_vm_info$D_IN;
      end
    if (csrf_rg_dscratch0$EN)
      csrf_rg_dscratch0 <= `BSV_ASSIGNMENT_DELAY csrf_rg_dscratch0$D_IN;
    if (csrf_rg_dscratch1$EN)
      csrf_rg_dscratch1 <= `BSV_ASSIGNMENT_DELAY csrf_rg_dscratch1$D_IN;
    if (csrf_rg_tdata2$EN)
      csrf_rg_tdata2 <= `BSV_ASSIGNMENT_DELAY csrf_rg_tdata2$D_IN;
    if (csrf_rg_tdata3$EN)
      csrf_rg_tdata3 <= `BSV_ASSIGNMENT_DELAY csrf_rg_tdata3$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    commitStage_commitTrap = 166'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    commitStage_rg_run_state = 1'h0;
    commitStage_rg_serial_num = 64'hAAAAAAAAAAAAAAAA;
    coreFix_doStatsReg = 1'h0;
    coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt = 4'hA;
    coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init = 1'h0;
    coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit = 2'h2;
    coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0 = 3'h2;
    coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1 = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0 = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1 = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2 = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3 = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4 = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5 = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6 = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7 = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl = 4'hA;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 =
	583'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1 =
	583'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl =
	584'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl = 59'h2AAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_processAmo =
	159'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl =
	151'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0 =
	72'hAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1 =
	72'hAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl =
	73'h0AAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 =
	579'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1 =
	579'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl =
	580'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full = 1'h0;
    coreFix_memExe_dMem_perfReqQ_clearReq_rl = 1'h0;
    coreFix_memExe_dMem_perfReqQ_data_0 = 4'hA;
    coreFix_memExe_dMem_perfReqQ_deqReq_rl = 1'h0;
    coreFix_memExe_dMem_perfReqQ_empty = 1'h0;
    coreFix_memExe_dMem_perfReqQ_enqReq_rl = 5'h0A;
    coreFix_memExe_dMem_perfReqQ_full = 1'h0;
    coreFix_memExe_forwardQ_clearReq_rl = 1'h0;
    coreFix_memExe_forwardQ_data_0 = 67'h2AAAAAAAAAAAAAAAA;
    coreFix_memExe_forwardQ_data_1 = 67'h2AAAAAAAAAAAAAAAA;
    coreFix_memExe_forwardQ_deqP = 1'h0;
    coreFix_memExe_forwardQ_deqReq_rl = 1'h0;
    coreFix_memExe_forwardQ_empty = 1'h0;
    coreFix_memExe_forwardQ_enqP = 1'h0;
    coreFix_memExe_forwardQ_enqReq_rl = 68'hAAAAAAAAAAAAAAAAA;
    coreFix_memExe_forwardQ_full = 1'h0;
    coreFix_memExe_memRespLdQ_clearReq_rl = 1'h0;
    coreFix_memExe_memRespLdQ_data_0 = 67'h2AAAAAAAAAAAAAAAA;
    coreFix_memExe_memRespLdQ_data_1 = 67'h2AAAAAAAAAAAAAAAA;
    coreFix_memExe_memRespLdQ_deqP = 1'h0;
    coreFix_memExe_memRespLdQ_deqReq_rl = 1'h0;
    coreFix_memExe_memRespLdQ_empty = 1'h0;
    coreFix_memExe_memRespLdQ_enqP = 1'h0;
    coreFix_memExe_memRespLdQ_enqReq_rl = 68'hAAAAAAAAAAAAAAAAA;
    coreFix_memExe_memRespLdQ_full = 1'h0;
    coreFix_memExe_reqLdQ_data_0_rl = 67'h2AAAAAAAAAAAAAAAA;
    coreFix_memExe_reqLdQ_empty_rl = 1'h0;
    coreFix_memExe_reqLdQ_full_rl = 1'h0;
    coreFix_memExe_reqLrScAmoQ_data_0_rl =
	151'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_reqLrScAmoQ_empty_rl = 1'h0;
    coreFix_memExe_reqLrScAmoQ_full_rl = 1'h0;
    coreFix_memExe_reqStQ_data_0_rl = 65'h0AAAAAAAAAAAAAAAA;
    coreFix_memExe_reqStQ_empty_rl = 1'h0;
    coreFix_memExe_reqStQ_full_rl = 1'h0;
    coreFix_memExe_respLrScAmoQ_clearReq_rl = 1'h0;
    coreFix_memExe_respLrScAmoQ_data_0 = 64'hAAAAAAAAAAAAAAAA;
    coreFix_memExe_respLrScAmoQ_deqReq_rl = 1'h0;
    coreFix_memExe_respLrScAmoQ_empty = 1'h0;
    coreFix_memExe_respLrScAmoQ_enqReq_rl = 65'h0AAAAAAAAAAAAAAAA;
    coreFix_memExe_respLrScAmoQ_full = 1'h0;
    coreFix_memExe_waitLrScAmoMMIOResp = 3'h2;
    csrInstOrInterruptInflight_rl = 1'h0;
    csrf_external_int_en_vec_0 = 1'h0;
    csrf_external_int_en_vec_1 = 1'h0;
    csrf_external_int_en_vec_3 = 1'h0;
    csrf_external_int_pend_vec_0 = 1'h0;
    csrf_external_int_pend_vec_1 = 1'h0;
    csrf_external_int_pend_vec_3 = 1'h0;
    csrf_fflags_reg = 5'h0A;
    csrf_frm_reg = 3'h2;
    csrf_fs_reg = 2'h2;
    csrf_ie_vec_0 = 1'h0;
    csrf_ie_vec_1 = 1'h0;
    csrf_ie_vec_3 = 1'h0;
    csrf_mcause_code_reg = 4'hA;
    csrf_mcause_interrupt_reg = 1'h0;
    csrf_mcounteren_cy_reg = 1'h0;
    csrf_mcounteren_ir_reg = 1'h0;
    csrf_mcounteren_tm_reg = 1'h0;
    csrf_mcycle_ehr_data_rl = 64'hAAAAAAAAAAAAAAAA;
    csrf_medeleg_13_11_reg = 3'h2;
    csrf_medeleg_15_reg = 1'h0;
    csrf_medeleg_9_0_reg = 10'h2AA;
    csrf_mepc_csr = 64'hAAAAAAAAAAAAAAAA;
    csrf_mideleg_11_reg = 1'h0;
    csrf_mideleg_1_0_reg = 2'h2;
    csrf_mideleg_5_3_reg = 3'h2;
    csrf_mideleg_9_7_reg = 3'h2;
    csrf_minstret_ehr_data_rl = 64'hAAAAAAAAAAAAAAAA;
    csrf_mpp_reg = 2'h2;
    csrf_mprv_reg = 1'h0;
    csrf_mscratch_csr = 64'hAAAAAAAAAAAAAAAA;
    csrf_mtval_csr = 64'hAAAAAAAAAAAAAAAA;
    csrf_mtvec_base_hi_reg = 62'h2AAAAAAAAAAAAAAA;
    csrf_mtvec_mode_low_reg = 1'h0;
    csrf_mxr_reg = 1'h0;
    csrf_ppn_reg = 44'hAAAAAAAAAAA;
    csrf_prev_ie_vec_0 = 1'h0;
    csrf_prev_ie_vec_1 = 1'h0;
    csrf_prev_ie_vec_3 = 1'h0;
    csrf_prv_reg = 2'h2;
    csrf_rg_dcsr = 64'hAAAAAAAAAAAAAAAA;
    csrf_rg_dpc = 64'hAAAAAAAAAAAAAAAA;
    csrf_rg_dscratch0 = 64'hAAAAAAAAAAAAAAAA;
    csrf_rg_dscratch1 = 64'hAAAAAAAAAAAAAAAA;
    csrf_rg_tdata1_data = 59'h2AAAAAAAAAAAAAA;
    csrf_rg_tdata1_dmode = 1'h0;
    csrf_rg_tdata2 = 64'hAAAAAAAAAAAAAAAA;
    csrf_rg_tdata3 = 64'hAAAAAAAAAAAAAAAA;
    csrf_rg_tselect = 64'hAAAAAAAAAAAAAAAA;
    csrf_scause_code_reg = 4'hA;
    csrf_scause_interrupt_reg = 1'h0;
    csrf_scounteren_cy_reg = 1'h0;
    csrf_scounteren_ir_reg = 1'h0;
    csrf_scounteren_tm_reg = 1'h0;
    csrf_sepc_csr = 64'hAAAAAAAAAAAAAAAA;
    csrf_software_int_en_vec_0 = 1'h0;
    csrf_software_int_en_vec_1 = 1'h0;
    csrf_software_int_en_vec_3 = 1'h0;
    csrf_software_int_pend_vec_0 = 1'h0;
    csrf_software_int_pend_vec_1 = 1'h0;
    csrf_software_int_pend_vec_3 = 1'h0;
    csrf_spp_reg = 1'h0;
    csrf_sscratch_csr = 64'hAAAAAAAAAAAAAAAA;
    csrf_stats_module_doStats = 1'h0;
    csrf_stval_csr = 64'hAAAAAAAAAAAAAAAA;
    csrf_stvec_base_hi_reg = 62'h2AAAAAAAAAAAAAAA;
    csrf_stvec_mode_low_reg = 1'h0;
    csrf_sum_reg = 1'h0;
    csrf_time_reg = 64'hAAAAAAAAAAAAAAAA;
    csrf_timer_int_en_vec_0 = 1'h0;
    csrf_timer_int_en_vec_1 = 1'h0;
    csrf_timer_int_en_vec_3 = 1'h0;
    csrf_timer_int_pend_vec_0 = 1'h0;
    csrf_timer_int_pend_vec_1 = 1'h0;
    csrf_timer_int_pend_vec_3 = 1'h0;
    csrf_tsr_reg = 1'h0;
    csrf_tvm_reg = 1'h0;
    csrf_tw_reg = 1'h0;
    csrf_vm_mode_sv39_reg = 1'h0;
    flush_brpred = 1'h0;
    flush_caches = 1'h0;
    flush_reservation = 1'h0;
    flush_tlbs = 1'h0;
    mmio_cRqQ_clearReq_rl = 1'h0;
    mmio_cRqQ_data_0 = 142'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mmio_cRqQ_deqReq_rl = 1'h0;
    mmio_cRqQ_empty = 1'h0;
    mmio_cRqQ_enqReq_rl = 143'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mmio_cRqQ_full = 1'h0;
    mmio_cRsQ_clearReq_rl = 1'h0;
    mmio_cRsQ_data_0 = 1'h0;
    mmio_cRsQ_deqReq_rl = 1'h0;
    mmio_cRsQ_empty = 1'h0;
    mmio_cRsQ_enqReq_rl = 2'h2;
    mmio_cRsQ_full = 1'h0;
    mmio_dataPendQ_clearReq_rl = 1'h0;
    mmio_dataPendQ_deqReq_rl = 1'h0;
    mmio_dataPendQ_empty = 1'h0;
    mmio_dataPendQ_enqReq_rl = 1'h0;
    mmio_dataPendQ_full = 1'h0;
    mmio_dataReqQ_clearReq_rl = 1'h0;
    mmio_dataReqQ_data_0 = 142'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mmio_dataReqQ_deqReq_rl = 1'h0;
    mmio_dataReqQ_empty = 1'h0;
    mmio_dataReqQ_enqReq_rl = 143'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mmio_dataReqQ_full = 1'h0;
    mmio_dataRespQ_clearReq_rl = 1'h0;
    mmio_dataRespQ_data_0 = 65'h0AAAAAAAAAAAAAAAA;
    mmio_dataRespQ_deqReq_rl = 1'h0;
    mmio_dataRespQ_empty = 1'h0;
    mmio_dataRespQ_enqReq_rl = 66'h2AAAAAAAAAAAAAAAA;
    mmio_dataRespQ_full = 1'h0;
    mmio_fromHostAddr = 61'h0AAAAAAAAAAAAAAA;
    mmio_pRqQ_clearReq_rl = 1'h0;
    mmio_pRqQ_data_0 = 39'h2AAAAAAAAA;
    mmio_pRqQ_deqReq_rl = 1'h0;
    mmio_pRqQ_empty = 1'h0;
    mmio_pRqQ_enqReq_rl = 40'hAAAAAAAAAA;
    mmio_pRqQ_full = 1'h0;
    mmio_pRsQ_clearReq_rl = 1'h0;
    mmio_pRsQ_data_0 = 69'h0AAAAAAAAAAAAAAAAA;
    mmio_pRsQ_deqReq_rl = 1'h0;
    mmio_pRsQ_empty = 1'h0;
    mmio_pRsQ_enqReq_rl = 70'h2AAAAAAAAAAAAAAAAA;
    mmio_pRsQ_full = 1'h0;
    mmio_toHostAddr = 61'h0AAAAAAAAAAAAAAA;
    outOfReset = 1'h0;
    renameStage_rg_m_halt_req = 5'h0A;
    rg_core_run_state = 2'h2;
    started = 1'h0;
    update_vm_info = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_outOfReset)
	$fwrite(32'h80000002, "mkProc came out of reset\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_debug_csr_write &&
	  f_csr_reqs$D_OUT[75:64] == 12'd2048)
	$display("[Terminate CSR] being written (val = %x), ",
		 "send terminate signal to host",
		 f_csr_reqs$D_OUT[63:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush)
	$write("instret:%0d  PC:0x%0h  instr:0x%08h",
	       commitStage_rg_serial_num,
	       rob$deqPort_0_deq_data[343:280],
	       rob$deqPort_0_deq_data[279:248],
	       "  iType:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[247:243] == 5'd0)
	$write("Unsupported");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[247:243] == 5'd1)
	$write("Nop");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[247:243] == 5'd2)
	$write("Amo");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[247:243] == 5'd3)
	$write("Alu");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[247:243] == 5'd4)
	$write("Ld");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[247:243] == 5'd5)
	$write("St");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[247:243] == 5'd6)
	$write("Lr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[247:243] == 5'd7)
	$write("Sc");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[247:243] == 5'd8)
	$write("J");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[247:243] == 5'd9)
	$write("Jr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[247:243] == 5'd10)
	$write("Br");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[247:243] == 5'd11)
	$write("Auipc");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[247:243] == 5'd12)
	$write("Fpu");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[247:243] == 5'd13)
	$write("Csr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[247:243] == 5'd14)
	$write("Fence");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[247:243] == 5'd15)
	$write("FenceI");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[247:243] == 5'd16)
	$write("SFence");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[247:243] == 5'd17)
	$write("Ecall");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[247:243] == 5'd18)
	$write("Ebreak");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[247:243] == 5'd19)
	$write("Sret");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[247:243] == 5'd20)
	$write("Mret");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[247:243] != 5'd0 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd1 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd2 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd3 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd4 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd5 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd6 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd7 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd8 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd9 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd10 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd11 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd12 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd13 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd14 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd15 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd16 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd17 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd18 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd19 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd20)
	$write("Interrupt");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush)
	$write("    [doCommitTrap]", "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst)
	$write("instret:%0d  PC:0x%0h  instr:0x%08h",
	       commitStage_rg_serial_num,
	       rob$deqPort_0_deq_data[343:280],
	       rob$deqPort_0_deq_data[279:248],
	       "   iType:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[247:243] == 5'd0)
	$write("Unsupported");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[247:243] == 5'd1)
	$write("Nop");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[247:243] == 5'd2)
	$write("Amo");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[247:243] == 5'd3)
	$write("Alu");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[247:243] == 5'd4)
	$write("Ld");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[247:243] == 5'd5)
	$write("St");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[247:243] == 5'd6)
	$write("Lr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[247:243] == 5'd7)
	$write("Sc");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[247:243] == 5'd8)
	$write("J");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[247:243] == 5'd9)
	$write("Jr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[247:243] == 5'd10)
	$write("Br");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[247:243] == 5'd11)
	$write("Auipc");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[247:243] == 5'd12)
	$write("Fpu");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[247:243] == 5'd13)
	$write("Csr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[247:243] == 5'd14)
	$write("Fence");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[247:243] == 5'd15)
	$write("FenceI");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[247:243] == 5'd16)
	$write("SFence");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[247:243] == 5'd17)
	$write("Ecall");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[247:243] == 5'd18)
	$write("Ebreak");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[247:243] == 5'd19)
	$write("Sret");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[247:243] == 5'd20)
	$write("Mret");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[247:243] != 5'd0 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd1 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd2 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd3 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd4 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd5 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd6 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd7 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd8 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd9 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd10 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd11 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd12 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd13 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd14 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd15 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd16 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd17 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd18 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd19 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd20)
	$write("Interrupt");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst)
	$write("    [doCommitSystemInst]", "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[247:243] == 5'd13 &&
	  IF_rob_deqPort_0_deq_data__4399_BIT_171_4704_T_ETC___d14794 == 6'd6)
	$display("[Terminate CSR] being written (val = %x), ",
		 "send terminate signal to host",
		 rob$deqPort_0_deq_data[85:22]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst && rob$deqPort_0_canDeq)
	$write("instret:%0d  PC:0x%0h  instr:0x%08h",
	       commitStage_rg_serial_num,
	       rob$deqPort_0_deq_data[343:280],
	       rob$deqPort_0_deq_data[279:248],
	       "   iType:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[247:243] == 5'd1)
	$write("Nop");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[247:243] == 5'd2)
	$write("Amo");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[247:243] == 5'd3)
	$write("Alu");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[247:243] == 5'd4)
	$write("Ld");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[247:243] == 5'd5)
	$write("St");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[247:243] == 5'd6)
	$write("Lr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[247:243] == 5'd7)
	$write("Sc");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[247:243] == 5'd8)
	$write("J");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[247:243] == 5'd9)
	$write("Jr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[247:243] == 5'd10)
	$write("Br");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[247:243] == 5'd11)
	$write("Auipc");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[247:243] == 5'd12)
	$write("Fpu");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[247:243] == 5'd14)
	$write("Fence");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[247:243] != 5'd1 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd2 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd3 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd4 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd5 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd6 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd7 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd8 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd9 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd10 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd11 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd12 &&
	  rob$deqPort_0_deq_data[247:243] != 5'd14)
	$write("Interrupt");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst && rob$deqPort_0_canDeq)
	$write("    [doCommitNormalInst [%0d]]", $signed(32'd0), "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[15] &&
	  !rob$deqPort_1_deq_data[10] &&
	  !rob$deqPort_1_deq_data[157] &&
	  rob$deqPort_1_deq_data[247:243] != 5'd0 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd21 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd17 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd18 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd13 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd16 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd15 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd19 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd20)
	$write("instret:%0d  PC:0x%0h  instr:0x%08h",
	       commitStage_rg_serial_num +
	       IF_rob_deqPort_0_canDeq__5016_THEN_IF_NOT_rob__ETC___d15124,
	       rob$deqPort_1_deq_data[343:280],
	       rob$deqPort_1_deq_data[279:248],
	       "   iType:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[15] &&
	  !rob$deqPort_1_deq_data[10] &&
	  !rob$deqPort_1_deq_data[157] &&
	  rob$deqPort_1_deq_data[247:243] == 5'd1)
	$write("Nop");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[15] &&
	  !rob$deqPort_1_deq_data[10] &&
	  !rob$deqPort_1_deq_data[157] &&
	  rob$deqPort_1_deq_data[247:243] == 5'd2)
	$write("Amo");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[15] &&
	  !rob$deqPort_1_deq_data[10] &&
	  !rob$deqPort_1_deq_data[157] &&
	  rob$deqPort_1_deq_data[247:243] == 5'd3)
	$write("Alu");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[15] &&
	  !rob$deqPort_1_deq_data[10] &&
	  !rob$deqPort_1_deq_data[157] &&
	  rob$deqPort_1_deq_data[247:243] == 5'd4)
	$write("Ld");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[15] &&
	  !rob$deqPort_1_deq_data[10] &&
	  !rob$deqPort_1_deq_data[157] &&
	  rob$deqPort_1_deq_data[247:243] == 5'd5)
	$write("St");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[15] &&
	  !rob$deqPort_1_deq_data[10] &&
	  !rob$deqPort_1_deq_data[157] &&
	  rob$deqPort_1_deq_data[247:243] == 5'd6)
	$write("Lr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[15] &&
	  !rob$deqPort_1_deq_data[10] &&
	  !rob$deqPort_1_deq_data[157] &&
	  rob$deqPort_1_deq_data[247:243] == 5'd7)
	$write("Sc");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[15] &&
	  !rob$deqPort_1_deq_data[10] &&
	  !rob$deqPort_1_deq_data[157] &&
	  rob$deqPort_1_deq_data[247:243] == 5'd8)
	$write("J");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[15] &&
	  !rob$deqPort_1_deq_data[10] &&
	  !rob$deqPort_1_deq_data[157] &&
	  rob$deqPort_1_deq_data[247:243] == 5'd9)
	$write("Jr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[15] &&
	  !rob$deqPort_1_deq_data[10] &&
	  !rob$deqPort_1_deq_data[157] &&
	  rob$deqPort_1_deq_data[247:243] == 5'd10)
	$write("Br");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[15] &&
	  !rob$deqPort_1_deq_data[10] &&
	  !rob$deqPort_1_deq_data[157] &&
	  rob$deqPort_1_deq_data[247:243] == 5'd11)
	$write("Auipc");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[15] &&
	  !rob$deqPort_1_deq_data[10] &&
	  !rob$deqPort_1_deq_data[157] &&
	  rob$deqPort_1_deq_data[247:243] == 5'd12)
	$write("Fpu");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[15] &&
	  !rob$deqPort_1_deq_data[10] &&
	  !rob$deqPort_1_deq_data[157] &&
	  rob$deqPort_1_deq_data[247:243] == 5'd14)
	$write("Fence");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[15] &&
	  !rob$deqPort_1_deq_data[10] &&
	  !rob$deqPort_1_deq_data[157] &&
	  rob$deqPort_1_deq_data[247:243] != 5'd0 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd21 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd17 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd18 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd13 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd16 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd15 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd19 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd20 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd1 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd2 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd3 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd4 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd5 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd6 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd7 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd8 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd9 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd10 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd11 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd12 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd14)
	$write("Interrupt");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[15] &&
	  !rob$deqPort_1_deq_data[10] &&
	  !rob$deqPort_1_deq_data[157] &&
	  rob$deqPort_1_deq_data[247:243] != 5'd0 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd21 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd17 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd18 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd13 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd16 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd15 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd19 &&
	  rob$deqPort_1_deq_data[247:243] != 5'd20)
	$write("    [doCommitNormalInst [%0d]]", $signed(32'd1), "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_deqEn$whas &&
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit == 2'd3)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$whas &&
	  v__h604540 == 2'd0)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
  end
  // synopsys translate_on
endmodule  // mkCore

