//
// Generated by Bluespec Compiler, version 2019.05.beta2 (build a88bf40db, 2019-05-24)
//
// On Mon Jul  6 19:14:50 BST 2020
//
//
// Ports:
// Name                         I/O  size props
// capModify                      O   164
// capModify_a                    I   163
// capModify_b                    I   163
// capModify_func                 I     9
//
// Combinational paths from inputs to outputs:
//   (capModify_a, capModify_b, capModify_func) -> capModify
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module module_capModify(capModify_a,
			capModify_b,
			capModify_func,
			capModify);
  // value method capModify
  input  [162 : 0] capModify_a;
  input  [162 : 0] capModify_b;
  input  [8 : 0] capModify_func;
  output [163 : 0] capModify;

  // signals for module outputs
  wire [163 : 0] capModify;

  // remaining internal signals
  reg [65 : 0] CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q2;
  reg [34 : 0] CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q4;
  reg [15 : 0] IF_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_cap_ETC___d517;
  reg [13 : 0] CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q6;
  reg [9 : 0] IF_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_cap_ETC___d602;
  reg [3 : 0] IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24;
  reg [2 : 0] IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149;
  reg [1 : 0] CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q1;
  reg CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q3,
      CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q5;
  wire [163 : 0] IF_capModify_func_BITS_8_TO_5_EQ_1_OR_NOT_capM_ETC___d609,
		 setBoundsALU___d134;
  wire [162 : 0] IF_capModify_func_BITS_8_TO_5_EQ_2_OR_NOT_capM_ETC___d607,
		 IF_capModify_func_BITS_8_TO_5_EQ_3_OR_NOT_capM_ETC___d606;
  wire [65 : 0] IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d321,
		IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d323,
		IF_capModify_func_BITS_8_TO_5_EQ_5_1_OR_NOT_ca_ETC___d468,
		IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_IF_cap_ETC___d467,
		address__h1297,
		in__h2738,
		pointer__h922,
		result_d_address__h1196,
		result_d_address__h1993,
		ret___1_address__h2119,
		ret_address__h2129,
		x__h1569,
		x__h2756,
		x__h2927,
		x_capFat_address__h1242,
		x_capFat_address__h1749,
		x_capFat_address__h2002,
		y__h2755;
  wire [63 : 0] addBase__h2477,
		addBase__h2800,
		addr__h745,
		bot__h2480,
		bot__h2803,
		mask__h1303,
		newAddrDiff__h1304,
		x__h1096,
		x__h1350,
		x__h1387,
		x__h1921,
		x__h2596,
		x__h2598,
		y__h1490;
  wire [49 : 0] highOffsetBits__h1797,
		highOffsetBits__h931,
		mask__h2478,
		mask__h2801,
		signBits__h1794,
		signBits__h928,
		x__h1824,
		x__h958;
  wire [34 : 0] IF_capModify_func_BITS_8_TO_5_EQ_5_1_OR_NOT_ca_ETC___d573,
		IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_IF_cap_ETC___d572;
  wire [33 : 0] IF_NOT_capModify_func_BITS_4_TO_2_41_EQ_0_42_4_ETC___d239,
		IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d362;
  wire [30 : 0] _0_CONCAT_capModify_a_BITS_81_TO_78_87_CONCAT_0_ETC___d491;
  wire [17 : 0] IF_NOT_capModify_func_BITS_8_TO_5_EQ_4_0_AND_c_ETC___d562,
		IF_NOT_capModify_func_BITS_8_TO_5_EQ_5_1_2_AND_ETC___d557,
		IF_NOT_capModify_func_BITS_8_TO_5_EQ_5_1_2_AND_ETC___d558,
		IF_NOT_capModify_func_BITS_8_TO_5_EQ_5_1_2_AND_ETC___d559,
		IF_NOT_capModify_func_BITS_8_TO_5_EQ_5_1_2_AND_ETC___d560,
		IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d357,
		IF_capModify_func_BITS_8_TO_5_EQ_4_OR_NOT_capM_ETC___d561,
		x_capFat_otype__h1247,
		x_capFat_otype__h1743,
		x_capFat_otype__h2007,
		x_capFat_otype__h2083;
  wire [15 : 0] IF_capModify_func_BITS_8_TO_5_EQ_5_1_OR_NOT_ca_ETC___d519,
		IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_IF_cap_ETC___d518,
		base__h2583,
		newAddrBits__h1181,
		newAddrBits__h1982,
		offset__h2584,
		x__h2534;
  wire [13 : 0] IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d329,
		IF_capModify_func_BITS_8_TO_5_EQ_5_1_OR_NOT_ca_ETC___d483,
		IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_IF_cap_ETC___d482,
		repBoundBits__h937,
		result_d_addrBits__h1197,
		result_d_addrBits__h1994,
		toBoundsM1_A__h936,
		toBoundsM1_B__h939,
		toBoundsM1__h1807,
		toBoundsM1__h941,
		toBounds_A__h935,
		toBounds_B__h938,
		toBounds__h1806,
		toBounds__h940,
		x_capFat_addrBits__h1243,
		x_capFat_addrBits__h1750,
		x_capFat_addrBits__h2003;
  wire [9 : 0] IF_capModify_func_BITS_8_TO_5_EQ_5_1_OR_NOT_ca_ETC___d604,
	       IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_IF_cap_ETC___d603;
  wire [5 : 0] x__h1385;
  wire [3 : 0] IF_NOT_capModify_func_BITS_4_TO_2_41_EQ_0_42_4_ETC___d253,
	       IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d330,
	       IF_capModify_a_BITS_37_TO_35_08_ULT_capModify__ETC___d122,
	       x_capFat_perms_soft__h3031,
	       x_capFat_perms_soft__h3041;
  wire [2 : 0] IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d369,
	       repBound__h4157,
	       repBound__h4270,
	       x_tempFields_repBoundTopBits__h4195,
	       x_tempFields_repBoundTopBits__h4277;
  wire [1 : 0] IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d356,
	       IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d394,
	       IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d402,
	       IF_capModify_a_BITS_159_TO_96_80_EQ_0_20_OR_ca_ETC___d591,
	       IF_capModify_a_BITS_159_TO_96_80_EQ_0_20_OR_ca_ETC___d596,
	       IF_capModify_func_BITS_8_TO_5_EQ_5_1_OR_NOT_ca_ETC___d537,
	       IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_IF_cap_ETC___d536,
	       x_capFat_reserved__h1246,
	       x_capFat_reserved__h1753,
	       x_capFat_reserved__h2006;
  wire IF_capModify_a_BIT_159_22_THEN_NOT_capModify_a_ETC___d438,
       IF_capModify_b_BITS_159_TO_96_1_AND_1844674407_ETC___d306,
       IF_capModify_b_BITS_43_TO_38_75_EQ_52_70_THEN__ETC___d584,
       IF_capModify_b_BIT_159_4_THEN_NOT_capModify_b__ETC___d68,
       IF_capModify_func_BITS_8_TO_5_EQ_5_1_OR_NOT_ca_ETC___d450,
       IF_capModify_func_BITS_8_TO_5_EQ_5_1_OR_NOT_ca_ETC___d529,
       IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_IF_cap_ETC___d449,
       IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_IF_cap_ETC___d528,
       IF_capModify_func_BIT_0_4_THEN_capModify_a_BIT_ETC___d112,
       NOT_capModify_b_BITS_159_TO_96_1_SRL_capModify_ETC___d59,
       NOT_capModify_b_BITS_43_TO_38_75_ULT_50_75_76__ETC___d310,
       NOT_capModify_b_BITS_43_TO_38_75_ULT_50_75___d276,
       _0_CONCAT_IF_capModify_func_BIT_0_4_THEN_capMod_ETC___d297,
       _0_CONCAT_IF_capModify_func_BIT_0_4_THEN_capMod_ETC___d381,
       capModify_a_BITS_159_TO_110_0_XOR_SEXT_capModi_ETC___d441,
       capModify_a_BITS_23_TO_21_06_ULT_capModify_a_B_ETC___d110,
       capModify_a_BITS_37_TO_35_08_ULT_capModify_a_B_ETC___d109,
       capModify_b_BITS_159_TO_96_1_AND_1844674407370_ETC___d286,
       capModify_b_BITS_159_TO_96_1_AND_1844674407370_ETC___d307,
       capModify_b_BITS_23_TO_21_67_ULT_capModify_b_B_ETC___d376,
       capModify_b_BITS_37_TO_35_70_ULT_capModify_b_B_ETC___d371,
       capModify_func_BITS_4_TO_2_41_EQ_0_42_OR_capMo_ETC___d237,
       capModify_func_BITS_4_TO_2_41_EQ_0_42_OR_capMo_ETC___d247,
       capModify_func_BITS_4_TO_2_41_EQ_0_42_OR_capMo_ETC___d249,
       capModify_func_BITS_4_TO_2_41_EQ_0_42_OR_capMo_ETC___d251,
       capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d334,
       capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d335,
       capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d336,
       capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d337,
       capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d338,
       capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d339,
       capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d340,
       capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d341,
       capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d342,
       capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d343,
       capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d344,
       capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d345,
       x_capFat_flags__h1245,
       x_capFat_flags__h1752,
       x_capFat_flags__h2005;

  // value method capModify
  assign capModify =
	     (capModify_func[8:5] == 4'd0 ||
	      capModify_func[8:5] != 4'd1 && capModify_func[8:5] != 4'd2 &&
	      capModify_func[8:5] != 4'd3 &&
	      capModify_func[8:5] != 4'd4 &&
	      capModify_func[8:5] != 4'd5 &&
	      capModify_func[8:5] != 4'd6 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd0) ?
	       { (highOffsetBits__h931 == 50'd0 &&
		  IF_capModify_b_BIT_159_4_THEN_NOT_capModify_b__ETC___d68 ||
		  capModify_a[43:38] >= 6'd50) &&
		 capModify_a[162],
		 result_d_address__h1196,
		 result_d_addrBits__h1197,
		 capModify_a[81:10],
		 repBound__h4157,
		 capModify_a_BITS_37_TO_35_08_ULT_capModify_a_B_ETC___d109,
		 capModify_a_BITS_23_TO_21_06_ULT_capModify_a_B_ETC___d110,
		 IF_capModify_func_BIT_0_4_THEN_capModify_a_BIT_ETC___d112,
		 IF_capModify_a_BITS_37_TO_35_08_ULT_capModify__ETC___d122,
		 1'h0 } :
	       IF_capModify_func_BITS_8_TO_5_EQ_1_OR_NOT_capM_ETC___d609 ;

  // remaining internal signals
  module_setBoundsALU instance_setBoundsALU_0(.setBoundsALU_cap(capModify_a),
					      .setBoundsALU_len(x__h1350),
					      .setBoundsALU_boundsOp(capModify_func[1:0]),
					      .setBoundsALU(setBoundsALU___d134));
  assign IF_NOT_capModify_func_BITS_4_TO_2_41_EQ_0_42_4_ETC___d239 =
	     (capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
	      (IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
	       3'd2 ||
	       IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
	       3'd3 ||
	       IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
	       3'd4)) ?
	       capModify_b[43:10] :
	       34'h344000000 ;
  assign IF_NOT_capModify_func_BITS_4_TO_2_41_EQ_0_42_4_ETC___d253 =
	     (capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
	      (IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
	       3'd2 ||
	       IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
	       3'd3 ||
	       IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
	       3'd4)) ?
	       capModify_b[3:0] :
	       4'd0 ;
  assign IF_NOT_capModify_func_BITS_8_TO_5_EQ_4_0_AND_c_ETC___d562 =
	     (capModify_func[8:5] != 4'd4 &&
	      (capModify_func[8:5] == 4'd5 ||
	       capModify_func[8:5] != 4'd6 &&
	       IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	       4'd5)) ?
	       18'd262142 :
	       IF_capModify_func_BITS_8_TO_5_EQ_4_OR_NOT_capM_ETC___d561 ;
  assign IF_NOT_capModify_func_BITS_8_TO_5_EQ_5_1_2_AND_ETC___d557 =
	     (capModify_func[8:5] != 4'd5 && capModify_func[8:5] != 4'd6 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd9) ?
	       x_capFat_otype__h2083 :
	       capModify_a[62:45] ;
  assign IF_NOT_capModify_func_BITS_8_TO_5_EQ_5_1_2_AND_ETC___d558 =
	     (capModify_func[8:5] != 4'd5 && capModify_func[8:5] != 4'd6 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd12) ?
	       x_capFat_otype__h2007 :
	       IF_NOT_capModify_func_BITS_8_TO_5_EQ_5_1_2_AND_ETC___d557 ;
  assign IF_NOT_capModify_func_BITS_8_TO_5_EQ_5_1_2_AND_ETC___d559 =
	     (capModify_func[8:5] != 4'd5 && capModify_func[8:5] != 4'd6 &&
	      (IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	       4'd7 ||
	       IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	       4'd8)) ?
	       capModify_a[62:45] :
	       IF_NOT_capModify_func_BITS_8_TO_5_EQ_5_1_2_AND_ETC___d558 ;
  assign IF_NOT_capModify_func_BITS_8_TO_5_EQ_5_1_2_AND_ETC___d560 =
	     (capModify_func[8:5] != 4'd5 &&
	      (capModify_func[8:5] == 4'd6 ||
	       IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	       4'd6)) ?
	       18'd262143 :
	       IF_NOT_capModify_func_BITS_8_TO_5_EQ_5_1_2_AND_ETC___d559 ;
  assign IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d321 =
	     (!capModify_func[0] && capModify_a[62:45] == 18'd262141) ?
	       66'h0FFFFFFFFFFFFFFFD :
	       ((!capModify_func[0] && capModify_a[62:45] == 18'd262140) ?
		  66'h0FFFFFFFFFFFFFFFC :
		  address__h1297) ;
  assign IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d323 =
	     (!capModify_func[0] && capModify_a[62:45] == 18'd262143) ?
	       66'h0FFFFFFFFFFFFFFFF :
	       ((!capModify_func[0] && capModify_a[62:45] == 18'd262142) ?
		  66'h0FFFFFFFFFFFFFFFE :
		  IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d321) ;
  assign IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d329 =
	     (!capModify_func[0] &&
	      (capModify_a[62:45] == 18'd262143 ||
	       capModify_a[62:45] == 18'd262142 ||
	       capModify_a[62:45] == 18'd262141 ||
	       capModify_a[62:45] == 18'd262140)) ?
	       14'd4095 :
	       x__h1569[13:0] ;
  assign IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d330 =
	     (!capModify_func[0] &&
	      (capModify_a[62:45] == 18'd262143 ||
	       capModify_a[62:45] == 18'd262142 ||
	       capModify_a[62:45] == 18'd262141 ||
	       capModify_a[62:45] == 18'd262140)) ?
	       4'd0 :
	       capModify_b[81:78] ;
  assign IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d356 =
	     (!capModify_func[0] &&
	      (capModify_a[62:45] == 18'd262143 ||
	       capModify_a[62:45] == 18'd262142 ||
	       capModify_a[62:45] == 18'd262141 ||
	       capModify_a[62:45] == 18'd262140)) ?
	       2'd0 :
	       capModify_b[64:63] ;
  assign IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d357 =
	     (!capModify_func[0] &&
	      (capModify_a[62:45] == 18'd262143 ||
	       capModify_a[62:45] == 18'd262142 ||
	       capModify_a[62:45] == 18'd262141 ||
	       capModify_a[62:45] == 18'd262140)) ?
	       18'd262143 :
	       capModify_b[62:45] ;
  assign IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d362 =
	     (!capModify_func[0] &&
	      (capModify_a[62:45] == 18'd262143 ||
	       capModify_a[62:45] == 18'd262142 ||
	       capModify_a[62:45] == 18'd262141 ||
	       capModify_a[62:45] == 18'd262140)) ?
	       34'h344000000 :
	       capModify_b[43:10] ;
  assign IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d369 =
	     (!capModify_func[0] &&
	      (capModify_a[62:45] == 18'd262143 ||
	       capModify_a[62:45] == 18'd262142 ||
	       capModify_a[62:45] == 18'd262141 ||
	       capModify_a[62:45] == 18'd262140)) ?
	       3'd7 :
	       repBound__h4270 ;
  assign IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d394 =
	     (!capModify_func[0] && capModify_a[62:45] == 18'd262143 ||
	      !capModify_func[0] && capModify_a[62:45] == 18'd262142 ||
	      !capModify_func[0] && capModify_a[62:45] == 18'd262141 ||
	      !capModify_func[0] && capModify_a[62:45] == 18'd262140 ||
	      capModify_b_BITS_37_TO_35_70_ULT_capModify_b_B_ETC___d371 ==
	      _0_CONCAT_IF_capModify_func_BIT_0_4_THEN_capMod_ETC___d381) ?
	       2'd0 :
	       ((capModify_b_BITS_37_TO_35_70_ULT_capModify_b_B_ETC___d371 &&
		 !_0_CONCAT_IF_capModify_func_BIT_0_4_THEN_capMod_ETC___d381) ?
		  2'd1 :
		  2'd3) ;
  assign IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d402 =
	     (!capModify_func[0] && capModify_a[62:45] == 18'd262143 ||
	      !capModify_func[0] && capModify_a[62:45] == 18'd262142 ||
	      !capModify_func[0] && capModify_a[62:45] == 18'd262141 ||
	      !capModify_func[0] && capModify_a[62:45] == 18'd262140 ||
	      capModify_b_BITS_23_TO_21_67_ULT_capModify_b_B_ETC___d376 ==
	      _0_CONCAT_IF_capModify_func_BIT_0_4_THEN_capMod_ETC___d381) ?
	       2'd0 :
	       ((capModify_b_BITS_23_TO_21_67_ULT_capModify_b_B_ETC___d376 &&
		 !_0_CONCAT_IF_capModify_func_BIT_0_4_THEN_capMod_ETC___d381) ?
		  2'd1 :
		  2'd3) ;
  assign IF_capModify_a_BITS_159_TO_96_80_EQ_0_20_OR_ca_ETC___d591 =
	     (capModify_a[159:96] == 64'd0 ||
	      capModify_b_BITS_37_TO_35_70_ULT_capModify_b_B_ETC___d371 ==
	      IF_capModify_b_BITS_43_TO_38_75_EQ_52_70_THEN__ETC___d584) ?
	       2'd0 :
	       ((capModify_b_BITS_37_TO_35_70_ULT_capModify_b_B_ETC___d371 &&
		 !IF_capModify_b_BITS_43_TO_38_75_EQ_52_70_THEN__ETC___d584) ?
		  2'd1 :
		  2'd3) ;
  assign IF_capModify_a_BITS_159_TO_96_80_EQ_0_20_OR_ca_ETC___d596 =
	     (capModify_a[159:96] == 64'd0 ||
	      capModify_b_BITS_23_TO_21_67_ULT_capModify_b_B_ETC___d376 ==
	      IF_capModify_b_BITS_43_TO_38_75_EQ_52_70_THEN__ETC___d584) ?
	       2'd0 :
	       ((capModify_b_BITS_23_TO_21_67_ULT_capModify_b_B_ETC___d376 &&
		 !IF_capModify_b_BITS_43_TO_38_75_EQ_52_70_THEN__ETC___d584) ?
		  2'd1 :
		  2'd3) ;
  assign IF_capModify_a_BITS_37_TO_35_08_ULT_capModify__ETC___d122 =
	     { (capModify_a_BITS_37_TO_35_08_ULT_capModify_a_B_ETC___d109 ==
		IF_capModify_func_BIT_0_4_THEN_capModify_a_BIT_ETC___d112) ?
		 2'd0 :
		 ((capModify_a_BITS_37_TO_35_08_ULT_capModify_a_B_ETC___d109 &&
		   !IF_capModify_func_BIT_0_4_THEN_capModify_a_BIT_ETC___d112) ?
		    2'd1 :
		    2'd3),
	       (capModify_a_BITS_23_TO_21_06_ULT_capModify_a_B_ETC___d110 ==
		IF_capModify_func_BIT_0_4_THEN_capModify_a_BIT_ETC___d112) ?
		 2'd0 :
		 ((capModify_a_BITS_23_TO_21_06_ULT_capModify_a_B_ETC___d110 &&
		   !IF_capModify_func_BIT_0_4_THEN_capModify_a_BIT_ETC___d112) ?
		    2'd1 :
		    2'd3) } ;
  assign IF_capModify_a_BIT_159_22_THEN_NOT_capModify_a_ETC___d438 =
	     capModify_a[159] ?
	       x__h1921[13:0] >= toBounds__h1806 :
	       x__h1921[13:0] <= toBoundsM1__h1807 ;
  assign IF_capModify_b_BITS_159_TO_96_1_AND_1844674407_ETC___d306 =
	     ((newAddrDiff__h1304 == 64'd0) ?
		2'd0 :
		(capModify_b_BITS_159_TO_96_1_AND_1844674407370_ETC___d286 ?
		   2'd3 :
		   2'd1)) ==
	     ((capModify_b[4] &&
	       _0_CONCAT_IF_capModify_func_BIT_0_4_THEN_capMod_ETC___d297) ?
		2'd0 :
		((capModify_b[4] &&
		  !_0_CONCAT_IF_capModify_func_BIT_0_4_THEN_capMod_ETC___d297) ?
		   2'd1 :
		   ((!capModify_b[4] &&
		     _0_CONCAT_IF_capModify_func_BIT_0_4_THEN_capMod_ETC___d297) ?
		      2'd3 :
		      2'd0))) ;
  assign IF_capModify_b_BITS_43_TO_38_75_EQ_52_70_THEN__ETC___d584 =
	     result_d_addrBits__h1994[13:11] < repBound__h4270 ;
  assign IF_capModify_b_BIT_159_4_THEN_NOT_capModify_b__ETC___d68 =
	     capModify_b[159] ?
	       NOT_capModify_b_BITS_159_TO_96_1_SRL_capModify_ETC___d59 :
	       (capModify_func[0] ?
		  x__h1096[13:0] < toBoundsM1__h941 :
		  x__h1096[13:0] <= toBoundsM1__h941) ;
  assign IF_capModify_func_BITS_8_TO_5_EQ_1_OR_NOT_capM_ETC___d609 =
	     (capModify_func[8:5] == 4'd1 ||
	      capModify_func[8:5] != 4'd2 && capModify_func[8:5] != 4'd3 &&
	      capModify_func[8:5] != 4'd4 &&
	      capModify_func[8:5] != 4'd5 &&
	      capModify_func[8:5] != 4'd6 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd1) ?
	       setBoundsALU___d134 :
	       { IF_capModify_func_BITS_8_TO_5_EQ_2_OR_NOT_capM_ETC___d607,
		 1'h0 } ;
  assign IF_capModify_func_BITS_8_TO_5_EQ_2_OR_NOT_capM_ETC___d607 =
	     (capModify_func[8:5] == 4'd2 ||
	      capModify_func[8:5] != 4'd3 && capModify_func[8:5] != 4'd4 &&
	      capModify_func[8:5] != 4'd5 &&
	      capModify_func[8:5] != 4'd6 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd2) ?
	       { capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
		 (IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd2 ||
		  IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd3 ||
		  IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd4) &&
		 capModify_b[162],
		 x_capFat_address__h1242,
		 x_capFat_addrBits__h1243,
		 x_capFat_perms_soft__h3031,
		 capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
		 (IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd2 ||
		  IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd3 ||
		  IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd4) &&
		 capModify_b[77],
		 capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
		 (IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd2 ||
		  IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd3 ||
		  IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd4) &&
		 capModify_b[76],
		 capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
		 (IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd2 ||
		  IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd3 ||
		  IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd4) &&
		 capModify_b[75],
		 capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
		 (IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd2 ||
		  IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd3 ||
		  IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd4) &&
		 capModify_b[74],
		 capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
		 (IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd2 ||
		  IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd3 ||
		  IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd4) &&
		 capModify_b[73],
		 capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
		 (IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd2 ||
		  IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd3 ||
		  IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd4) &&
		 capModify_b[72],
		 capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
		 (IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd2 ||
		  IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd3 ||
		  IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd4) &&
		 capModify_b[71],
		 capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
		 (IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd2 ||
		  IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd3 ||
		  IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd4) &&
		 capModify_b[70],
		 capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
		 (IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd2 ||
		  IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd3 ||
		  IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd4) &&
		 capModify_b[69],
		 capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
		 (IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd2 ||
		  IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd3 ||
		  IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd4) &&
		 capModify_b[68],
		 capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
		 (IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd2 ||
		  IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd3 ||
		  IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd4) &&
		 capModify_b[67],
		 capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
		 (IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd2 ||
		  IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd3 ||
		  IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
		  3'd4) &&
		 capModify_b[66],
		 x_capFat_flags__h1245,
		 x_capFat_reserved__h1246,
		 x_capFat_otype__h1247,
		 capModify_func_BITS_4_TO_2_41_EQ_0_42_OR_capMo_ETC___d237,
		 IF_NOT_capModify_func_BITS_4_TO_2_41_EQ_0_42_4_ETC___d239,
		 x_tempFields_repBoundTopBits__h4195,
		 capModify_func_BITS_4_TO_2_41_EQ_0_42_OR_capMo_ETC___d247,
		 capModify_func_BITS_4_TO_2_41_EQ_0_42_OR_capMo_ETC___d249,
		 capModify_func_BITS_4_TO_2_41_EQ_0_42_OR_capMo_ETC___d251,
		 IF_NOT_capModify_func_BITS_4_TO_2_41_EQ_0_42_4_ETC___d253 } :
	       IF_capModify_func_BITS_8_TO_5_EQ_3_OR_NOT_capM_ETC___d606 ;
  assign IF_capModify_func_BITS_8_TO_5_EQ_3_OR_NOT_capM_ETC___d606 =
	     (capModify_func[8:5] == 4'd3 ||
	      capModify_func[8:5] != 4'd4 && capModify_func[8:5] != 4'd5 &&
	      capModify_func[8:5] != 4'd6 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd3) ?
	       { (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
		 (capModify_func[0] || capModify_a[62:45] != 18'd262142) &&
		 (capModify_func[0] || capModify_a[62:45] != 18'd262141) &&
		 (capModify_func[0] || capModify_a[62:45] != 18'd262140) &&
		 NOT_capModify_b_BITS_43_TO_38_75_ULT_50_75_76__ETC___d310 &&
		 capModify_b[162],
		 IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d323,
		 IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d329,
		 IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d330,
		 capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d334,
		 capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d335,
		 capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d336,
		 capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d337,
		 capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d338,
		 capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d339,
		 capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d340,
		 capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d341,
		 capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d342,
		 capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d343,
		 capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d344,
		 capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d345,
		 (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
		 (capModify_func[0] || capModify_a[62:45] != 18'd262142) &&
		 (capModify_func[0] || capModify_a[62:45] != 18'd262141) &&
		 (capModify_func[0] || capModify_a[62:45] != 18'd262140) &&
		 capModify_b[65],
		 IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d356,
		 IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d357,
		 !capModify_func[0] && capModify_a[62:45] == 18'd262143 ||
		 !capModify_func[0] && capModify_a[62:45] == 18'd262142 ||
		 !capModify_func[0] && capModify_a[62:45] == 18'd262141 ||
		 !capModify_func[0] && capModify_a[62:45] == 18'd262140 ||
		 capModify_b[44],
		 IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d362,
		 IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d369,
		 !capModify_func[0] && capModify_a[62:45] == 18'd262143 ||
		 !capModify_func[0] && capModify_a[62:45] == 18'd262142 ||
		 !capModify_func[0] && capModify_a[62:45] == 18'd262141 ||
		 !capModify_func[0] && capModify_a[62:45] == 18'd262140 ||
		 capModify_b_BITS_37_TO_35_70_ULT_capModify_b_B_ETC___d371,
		 !capModify_func[0] && capModify_a[62:45] == 18'd262143 ||
		 !capModify_func[0] && capModify_a[62:45] == 18'd262142 ||
		 !capModify_func[0] && capModify_a[62:45] == 18'd262141 ||
		 !capModify_func[0] && capModify_a[62:45] == 18'd262140 ||
		 capModify_b_BITS_23_TO_21_67_ULT_capModify_b_B_ETC___d376,
		 !capModify_func[0] && capModify_a[62:45] == 18'd262143 ||
		 !capModify_func[0] && capModify_a[62:45] == 18'd262142 ||
		 !capModify_func[0] && capModify_a[62:45] == 18'd262141 ||
		 !capModify_func[0] && capModify_a[62:45] == 18'd262140 ||
		 _0_CONCAT_IF_capModify_func_BIT_0_4_THEN_capMod_ETC___d381,
		 IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d394,
		 IF_NOT_capModify_func_BIT_0_4_5_AND_capModify__ETC___d402 } :
	       { IF_capModify_func_BITS_8_TO_5_EQ_5_1_OR_NOT_ca_ETC___d450,
		 IF_capModify_func_BITS_8_TO_5_EQ_5_1_OR_NOT_ca_ETC___d468,
		 IF_capModify_func_BITS_8_TO_5_EQ_5_1_OR_NOT_ca_ETC___d483,
		 IF_capModify_func_BITS_8_TO_5_EQ_5_1_OR_NOT_ca_ETC___d519,
		 IF_capModify_func_BITS_8_TO_5_EQ_5_1_OR_NOT_ca_ETC___d529,
		 IF_capModify_func_BITS_8_TO_5_EQ_5_1_OR_NOT_ca_ETC___d537,
		 IF_NOT_capModify_func_BITS_8_TO_5_EQ_4_0_AND_c_ETC___d562,
		 IF_capModify_func_BITS_8_TO_5_EQ_5_1_OR_NOT_ca_ETC___d573,
		 IF_capModify_func_BITS_8_TO_5_EQ_5_1_OR_NOT_ca_ETC___d604 } ;
  assign IF_capModify_func_BITS_8_TO_5_EQ_4_OR_NOT_capM_ETC___d561 =
	     (capModify_func[8:5] == 4'd4 ||
	      capModify_func[8:5] != 4'd5 && capModify_func[8:5] != 4'd6 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd4) ?
	       x_capFat_otype__h1743 :
	       IF_NOT_capModify_func_BITS_8_TO_5_EQ_5_1_2_AND_ETC___d560 ;
  assign IF_capModify_func_BITS_8_TO_5_EQ_5_1_OR_NOT_ca_ETC___d450 =
	     (capModify_func[8:5] == 4'd5 ||
	      capModify_func[8:5] != 4'd6 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd5 ||
	      capModify_func[8:5] == 4'd4 ||
	      capModify_func[8:5] != 4'd6 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd4) ?
	       capModify_a[162] :
	       IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_IF_cap_ETC___d449 ;
  assign IF_capModify_func_BITS_8_TO_5_EQ_5_1_OR_NOT_ca_ETC___d468 =
	     (capModify_func[8:5] == 4'd5 ||
	      capModify_func[8:5] != 4'd6 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd5 ||
	      capModify_func[8:5] == 4'd4 ||
	      capModify_func[8:5] != 4'd6 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd4) ?
	       capModify_a[161:96] :
	       IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_IF_cap_ETC___d467 ;
  assign IF_capModify_func_BITS_8_TO_5_EQ_5_1_OR_NOT_ca_ETC___d483 =
	     (capModify_func[8:5] == 4'd5 ||
	      capModify_func[8:5] != 4'd6 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd5 ||
	      capModify_func[8:5] == 4'd4 ||
	      capModify_func[8:5] != 4'd6 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd4) ?
	       capModify_a[95:82] :
	       IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_IF_cap_ETC___d482 ;
  assign IF_capModify_func_BITS_8_TO_5_EQ_5_1_OR_NOT_ca_ETC___d519 =
	     (capModify_func[8:5] == 4'd5 ||
	      capModify_func[8:5] != 4'd6 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd5 ||
	      capModify_func[8:5] == 4'd4 ||
	      capModify_func[8:5] != 4'd6 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd4) ?
	       capModify_a[81:66] :
	       IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_IF_cap_ETC___d518 ;
  assign IF_capModify_func_BITS_8_TO_5_EQ_5_1_OR_NOT_ca_ETC___d529 =
	     (capModify_func[8:5] == 4'd5 ||
	      capModify_func[8:5] != 4'd6 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd5 ||
	      capModify_func[8:5] == 4'd4 ||
	      capModify_func[8:5] != 4'd6 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd4) ?
	       capModify_a[65] :
	       IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_IF_cap_ETC___d528 ;
  assign IF_capModify_func_BITS_8_TO_5_EQ_5_1_OR_NOT_ca_ETC___d537 =
	     (capModify_func[8:5] == 4'd5 ||
	      capModify_func[8:5] != 4'd6 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd5 ||
	      capModify_func[8:5] == 4'd4 ||
	      capModify_func[8:5] != 4'd6 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd4) ?
	       capModify_a[64:63] :
	       IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_IF_cap_ETC___d536 ;
  assign IF_capModify_func_BITS_8_TO_5_EQ_5_1_OR_NOT_ca_ETC___d573 =
	     (capModify_func[8:5] == 4'd5 ||
	      capModify_func[8:5] != 4'd6 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd5 ||
	      capModify_func[8:5] == 4'd4 ||
	      capModify_func[8:5] != 4'd6 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd4) ?
	       capModify_a[44:10] :
	       IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_IF_cap_ETC___d572 ;
  assign IF_capModify_func_BITS_8_TO_5_EQ_5_1_OR_NOT_ca_ETC___d604 =
	     (capModify_func[8:5] == 4'd5 ||
	      capModify_func[8:5] != 4'd6 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd5 ||
	      capModify_func[8:5] == 4'd4 ||
	      capModify_func[8:5] != 4'd6 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd4) ?
	       capModify_a[9:0] :
	       IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_IF_cap_ETC___d603 ;
  assign IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_IF_cap_ETC___d449 =
	     (capModify_func[8:5] == 4'd6 ||
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd6) ?
	       (capModify_func[0] ? capModify_b[162] : capModify_a[162]) :
	       CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q3 ;
  assign IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_IF_cap_ETC___d467 =
	     (capModify_func[8:5] == 4'd6 ||
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd6) ?
	       x_capFat_address__h1749 :
	       CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q2 ;
  assign IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_IF_cap_ETC___d482 =
	     (capModify_func[8:5] == 4'd6 ||
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd6) ?
	       x_capFat_addrBits__h1750 :
	       CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q6 ;
  assign IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_IF_cap_ETC___d518 =
	     (capModify_func[8:5] == 4'd6 ||
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd6) ?
	       (capModify_func[0] ? capModify_b[81:66] : capModify_a[81:66]) :
	       IF_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_cap_ETC___d517 ;
  assign IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_IF_cap_ETC___d528 =
	     (capModify_func[8:5] == 4'd6 ||
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd6) ?
	       x_capFat_flags__h1752 :
	       CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q5 ;
  assign IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_IF_cap_ETC___d536 =
	     (capModify_func[8:5] == 4'd6 ||
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd6) ?
	       x_capFat_reserved__h1753 :
	       CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q1 ;
  assign IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_IF_cap_ETC___d572 =
	     (capModify_func[8:5] == 4'd6 ||
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd6) ?
	       (capModify_func[0] ? capModify_b[44:10] : capModify_a[44:10]) :
	       CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q4 ;
  assign IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_IF_cap_ETC___d603 =
	     (capModify_func[8:5] == 4'd6 ||
	      IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
	      4'd6) ?
	       (capModify_func[0] ? capModify_b[9:0] : capModify_a[9:0]) :
	       IF_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_cap_ETC___d602 ;
  assign IF_capModify_func_BIT_0_4_THEN_capModify_a_BIT_ETC___d112 =
	     result_d_addrBits__h1197[13:11] < repBound__h4157 ;
  assign NOT_capModify_b_BITS_159_TO_96_1_SRL_capModify_ETC___d59 =
	     x__h1096[13:0] >= toBounds__h940 &&
	     (!capModify_func[0] ||
	      repBoundBits__h937 != capModify_a[95:82]) ;
  assign NOT_capModify_b_BITS_43_TO_38_75_ULT_50_75_76__ETC___d310 =
	     NOT_capModify_b_BITS_43_TO_38_75_ULT_50_75___d276 ||
	     IF_capModify_b_BITS_159_TO_96_1_AND_1844674407_ETC___d306 &&
	     (newAddrDiff__h1304 == 64'd0 ||
	      capModify_b_BITS_159_TO_96_1_AND_1844674407370_ETC___d307) ;
  assign NOT_capModify_b_BITS_43_TO_38_75_ULT_50_75___d276 =
	     capModify_b[43:38] >= 6'd50 ;
  assign _0_CONCAT_IF_capModify_func_BIT_0_4_THEN_capMod_ETC___d297 =
	     x__h1569[13:11] < capModify_b[9:7] ;
  assign _0_CONCAT_IF_capModify_func_BIT_0_4_THEN_capMod_ETC___d381 =
	     x__h1569[13:11] < repBound__h4270 ;
  assign _0_CONCAT_capModify_a_BITS_81_TO_78_87_CONCAT_0_ETC___d491 =
	     { 12'd0, capModify_a[81:78], 3'h0, capModify_a[77:66] } &
	     capModify_b[126:96] ;
  assign addBase__h2477 =
	     { {48{x__h2534[15]}}, x__h2534 } << capModify_a[43:38] ;
  assign addBase__h2800 =
	     { {48{base__h2583[15]}}, base__h2583 } << capModify_b[43:38] ;
  assign addr__h745 = x__h2596 | in__h2738[63:0] ;
  assign address__h1297 = { 2'd0, x__h1387 } ;
  assign base__h2583 = { capModify_b[1:0], capModify_b[23:10] } ;
  assign bot__h2480 =
	     { capModify_a[159:110] & mask__h2478, 14'd0 } + addBase__h2477 ;
  assign bot__h2803 =
	     { capModify_b[159:110] & mask__h2801, 14'd0 } + addBase__h2800 ;
  assign capModify_a_BITS_159_TO_110_0_XOR_SEXT_capModi_ETC___d441 =
	     (highOffsetBits__h1797 == 50'd0 &&
	      IF_capModify_a_BIT_159_22_THEN_NOT_capModify_a_ETC___d438 ||
	      NOT_capModify_b_BITS_43_TO_38_75_ULT_50_75___d276) &&
	     capModify_b[162] ;
  assign capModify_a_BITS_23_TO_21_06_ULT_capModify_a_B_ETC___d110 =
	     capModify_a[23:21] < repBound__h4157 ;
  assign capModify_a_BITS_37_TO_35_08_ULT_capModify_a_B_ETC___d109 =
	     capModify_a[37:35] < repBound__h4157 ;
  assign capModify_b_BITS_159_TO_96_1_AND_1844674407370_ETC___d286 =
	     newAddrDiff__h1304 == mask__h1303 ;
  assign capModify_b_BITS_159_TO_96_1_AND_1844674407370_ETC___d307 =
	     capModify_b_BITS_159_TO_96_1_AND_1844674407370_ETC___d286 ||
	     newAddrDiff__h1304 == (mask__h1303 ^ y__h1490) ;
  assign capModify_b_BITS_23_TO_21_67_ULT_capModify_b_B_ETC___d376 =
	     capModify_b[23:21] < repBound__h4270 ;
  assign capModify_b_BITS_37_TO_35_70_ULT_capModify_b_B_ETC___d371 =
	     capModify_b[37:35] < repBound__h4270 ;
  assign capModify_func_BITS_4_TO_2_41_EQ_0_42_OR_capMo_ETC___d237 =
	     (capModify_func[4:2] == 3'd0 || capModify_func[4:2] == 3'd1 ||
	      IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 !=
	      3'd2) &&
	     (capModify_func[4:2] == 3'd0 || capModify_func[4:2] == 3'd1 ||
	      IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 !=
	      3'd3) &&
	     (capModify_func[4:2] == 3'd0 || capModify_func[4:2] == 3'd1 ||
	      IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 !=
	      3'd4) ||
	     capModify_b[44] ;
  assign capModify_func_BITS_4_TO_2_41_EQ_0_42_OR_capMo_ETC___d247 =
	     (capModify_func[4:2] == 3'd0 || capModify_func[4:2] == 3'd1 ||
	      IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 !=
	      3'd2) &&
	     (capModify_func[4:2] == 3'd0 || capModify_func[4:2] == 3'd1 ||
	      IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 !=
	      3'd3) &&
	     (capModify_func[4:2] == 3'd0 || capModify_func[4:2] == 3'd1 ||
	      IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 !=
	      3'd4) ||
	     capModify_b[6] ;
  assign capModify_func_BITS_4_TO_2_41_EQ_0_42_OR_capMo_ETC___d249 =
	     (capModify_func[4:2] == 3'd0 || capModify_func[4:2] == 3'd1 ||
	      IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 !=
	      3'd2) &&
	     (capModify_func[4:2] == 3'd0 || capModify_func[4:2] == 3'd1 ||
	      IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 !=
	      3'd3) &&
	     (capModify_func[4:2] == 3'd0 || capModify_func[4:2] == 3'd1 ||
	      IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 !=
	      3'd4) ||
	     capModify_b[5] ;
  assign capModify_func_BITS_4_TO_2_41_EQ_0_42_OR_capMo_ETC___d251 =
	     (capModify_func[4:2] == 3'd0 || capModify_func[4:2] == 3'd1 ||
	      IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 !=
	      3'd2) &&
	     (capModify_func[4:2] == 3'd0 || capModify_func[4:2] == 3'd1 ||
	      IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 !=
	      3'd3) &&
	     (capModify_func[4:2] == 3'd0 || capModify_func[4:2] == 3'd1 ||
	      IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 !=
	      3'd4) ||
	     capModify_b[4] ;
  assign capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d334 =
	     (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262142) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262141) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262140) &&
	     capModify_b[77] ;
  assign capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d335 =
	     (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262142) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262141) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262140) &&
	     capModify_b[76] ;
  assign capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d336 =
	     (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262142) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262141) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262140) &&
	     capModify_b[75] ;
  assign capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d337 =
	     (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262142) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262141) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262140) &&
	     capModify_b[74] ;
  assign capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d338 =
	     (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262142) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262141) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262140) &&
	     capModify_b[73] ;
  assign capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d339 =
	     (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262142) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262141) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262140) &&
	     capModify_b[72] ;
  assign capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d340 =
	     (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262142) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262141) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262140) &&
	     capModify_b[71] ;
  assign capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d341 =
	     (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262142) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262141) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262140) &&
	     capModify_b[70] ;
  assign capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d342 =
	     (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262142) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262141) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262140) &&
	     capModify_b[69] ;
  assign capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d343 =
	     (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262142) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262141) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262140) &&
	     capModify_b[68] ;
  assign capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d344 =
	     (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262142) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262141) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262140) &&
	     capModify_b[67] ;
  assign capModify_func_BIT_0_4_OR_NOT_capModify_a_BITS_ETC___d345 =
	     (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262142) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262141) &&
	     (capModify_func[0] || capModify_a[62:45] != 18'd262140) &&
	     capModify_b[66] ;
  assign highOffsetBits__h1797 = x__h1824 & mask__h2801 ;
  assign highOffsetBits__h931 = x__h958 & mask__h2478 ;
  assign in__h2738 = capModify_b[161:96] & y__h2755 ;
  assign mask__h1303 = 64'hFFFFFFFFFFFFFFFF << x__h1385 ;
  assign mask__h2478 = 50'h3FFFFFFFFFFFF << capModify_a[43:38] ;
  assign mask__h2801 = 50'h3FFFFFFFFFFFF << capModify_b[43:38] ;
  assign newAddrBits__h1181 =
	     { 2'd0, capModify_a[23:10] } + { 2'd0, x__h1096[13:0] } ;
  assign newAddrBits__h1982 =
	     { 2'd0, capModify_b[23:10] } + { 2'd0, x__h1921[13:0] } ;
  assign newAddrDiff__h1304 =
	     (capModify_b[159:96] & mask__h1303) - (x__h1387 & mask__h1303) ;
  assign offset__h2584 = { 2'd0, capModify_b[95:82] } - base__h2583 ;
  assign pointer__h922 = capModify_a[161:96] + { 2'd0, capModify_b[159:96] } ;
  assign repBoundBits__h937 = { capModify_a[9:7], 11'd0 } ;
  assign repBound__h4157 = capModify_a[23:21] - 3'b001 ;
  assign repBound__h4270 = capModify_b[23:21] - 3'b001 ;
  assign result_d_addrBits__h1197 =
	     capModify_func[0] ?
	       x__h2927[13:0] :
	       ((capModify_a[43:38] == 6'd52) ?
		  { 1'b0, newAddrBits__h1181[12:0] } :
		  newAddrBits__h1181[13:0]) ;
  assign result_d_addrBits__h1994 =
	     (capModify_b[43:38] == 6'd52) ?
	       { 1'b0, newAddrBits__h1982[12:0] } :
	       newAddrBits__h1982[13:0] ;
  assign result_d_address__h1196 =
	     capModify_func[0] ? ret_address__h2129 : ret___1_address__h2119 ;
  assign result_d_address__h1993 =
	     { 2'd0, bot__h2803 } + { 2'd0, capModify_a[159:96] } ;
  assign ret___1_address__h2119 =
	     { 2'd0, bot__h2480 } + { 2'd0, capModify_b[159:96] } ;
  assign ret_address__h2129 = { 2'd0, pointer__h922[63:0] } ;
  assign signBits__h1794 = {50{capModify_a[159]}} ;
  assign signBits__h928 = {50{capModify_b[159]}} ;
  assign toBoundsM1_A__h936 = { 3'b110, ~capModify_a[20:10] } ;
  assign toBoundsM1_B__h939 = repBoundBits__h937 + ~capModify_a[95:82] ;
  assign toBoundsM1__h1807 = { 3'b110, ~capModify_b[20:10] } ;
  assign toBoundsM1__h941 =
	     capModify_func[0] ? toBoundsM1_B__h939 : toBoundsM1_A__h936 ;
  assign toBounds_A__h935 = 14'd14336 - { 3'b0, capModify_a[20:10] } ;
  assign toBounds_B__h938 = repBoundBits__h937 - capModify_a[95:82] ;
  assign toBounds__h1806 = 14'd14336 - { 3'b0, capModify_b[20:10] } ;
  assign toBounds__h940 =
	     capModify_func[0] ? toBounds_B__h938 : toBounds_A__h935 ;
  assign x__h1096 = capModify_b[159:96] >> capModify_a[43:38] ;
  assign x__h1350 = capModify_b[159:96] ;
  assign x__h1385 = capModify_b[43:38] + 6'd14 ;
  assign x__h1387 =
	     capModify_func[0] ?
	       capModify_a[159:96] :
	       { 46'd0, capModify_a[62:45] } ;
  assign x__h1569 = address__h1297 >> capModify_b[43:38] ;
  assign x__h1824 = capModify_a[159:110] ^ signBits__h1794 ;
  assign x__h1921 = capModify_a[159:96] >> capModify_b[43:38] ;
  assign x__h2534 = { capModify_a[1:0], capModify_a[23:10] } ;
  assign x__h2596 = x__h2598 << capModify_b[43:38] ;
  assign x__h2598 = { {48{offset__h2584[15]}}, offset__h2584 } ;
  assign x__h2756 = 66'h3FFFFFFFFFFFFFFFF << capModify_b[43:38] ;
  assign x__h2927 = pointer__h922 >> capModify_a[43:38] ;
  assign x__h958 = capModify_b[159:110] ^ signBits__h928 ;
  assign x_capFat_addrBits__h1243 =
	     (capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
	      (IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
	       3'd2 ||
	       IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
	       3'd3 ||
	       IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
	       3'd4)) ?
	       capModify_b[95:82] :
	       { 2'b0, addr__h745[63:52] } ;
  assign x_capFat_addrBits__h1750 =
	     capModify_func[0] ? capModify_b[95:82] : capModify_a[95:82] ;
  assign x_capFat_addrBits__h2003 =
	     (capModify_a[159:96] == 64'd0) ?
	       14'd0 :
	       result_d_addrBits__h1994 ;
  assign x_capFat_address__h1242 =
	     (capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
	      (IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
	       3'd2 ||
	       IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
	       3'd3 ||
	       IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
	       3'd4)) ?
	       capModify_b[161:96] :
	       { 2'd0, addr__h745 } ;
  assign x_capFat_address__h1749 =
	     capModify_func[0] ? capModify_b[161:96] : capModify_a[161:96] ;
  assign x_capFat_address__h2002 =
	     (capModify_a[159:96] == 64'd0) ?
	       66'd0 :
	       result_d_address__h1993 ;
  assign x_capFat_flags__h1245 =
	     capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
	     (IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
	      3'd2 ||
	      IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
	      3'd3 ||
	      IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
	      3'd4) &&
	     capModify_b[65] ;
  assign x_capFat_flags__h1752 =
	     capModify_func[0] ? capModify_b[65] : capModify_a[65] ;
  assign x_capFat_flags__h2005 =
	     capModify_a[159:96] != 64'd0 && capModify_b[65] ;
  assign x_capFat_otype__h1247 =
	     (capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
	      (IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
	       3'd2 ||
	       IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
	       3'd3 ||
	       IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
	       3'd4)) ?
	       capModify_b[62:45] :
	       18'd262143 ;
  assign x_capFat_otype__h1743 =
	     (capModify_b[159:96] <= 64'd262139 && capModify_b[162]) ?
	       capModify_b[113:96] :
	       capModify_a[62:45] ;
  assign x_capFat_otype__h2007 =
	     (capModify_a[159:96] == 64'd0) ?
	       18'd262143 :
	       capModify_b[62:45] ;
  assign x_capFat_otype__h2083 =
	     (capModify_a[62:45] == 18'd262142) ?
	       capModify_a[62:45] :
	       18'd262143 ;
  assign x_capFat_perms_soft__h3031 =
	     (capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
	      (IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
	       3'd2 ||
	       IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
	       3'd3 ||
	       IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
	       3'd4)) ?
	       capModify_b[81:78] :
	       4'd0 ;
  assign x_capFat_perms_soft__h3041 =
	     (capModify_a[159:96] == 64'd0) ? 4'd0 : capModify_b[81:78] ;
  assign x_capFat_reserved__h1246 =
	     (capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
	      (IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
	       3'd2 ||
	       IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
	       3'd3 ||
	       IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
	       3'd4)) ?
	       capModify_b[64:63] :
	       2'd0 ;
  assign x_capFat_reserved__h1753 =
	     capModify_func[0] ? capModify_b[64:63] : capModify_a[64:63] ;
  assign x_capFat_reserved__h2006 =
	     (capModify_a[159:96] == 64'd0) ? 2'd0 : capModify_b[64:63] ;
  assign x_tempFields_repBoundTopBits__h4195 =
	     (capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
	      (IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
	       3'd2 ||
	       IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
	       3'd3 ||
	       IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 ==
	       3'd4)) ?
	       capModify_b[9:7] :
	       3'd7 ;
  assign x_tempFields_repBoundTopBits__h4277 =
	     (capModify_a[159:96] == 64'd0) ? 3'd7 : repBound__h4270 ;
  assign y__h1490 = { mask__h1303[62:0], 1'd0 } ;
  assign y__h2755 = ~x__h2756 ;
  always@(capModify_func)
  begin
    case (capModify_func[4:2])
      3'd2, 3'd3:
	  IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 =
	      capModify_func[4:2];
      default: IF_capModify_func_BITS_4_TO_2_41_EQ_2_46_OR_ca_ETC___d149 =
		   3'd4;
    endcase
  end
  always@(capModify_func)
  begin
    case (capModify_func[8:5])
      4'd7, 4'd8, 4'd9, 4'd10, 4'd11:
	  IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 =
	      capModify_func[8:5];
      default: IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 =
		   4'd12;
    endcase
  end
  always@(IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 or
	  capModify_a or x_capFat_reserved__h2006)
  begin
    case (IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24)
      4'd7, 4'd8:
	  CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q1 =
	      capModify_a[64:63];
      4'd12:
	  CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q1 =
	      x_capFat_reserved__h2006;
      default: CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q1 =
		   capModify_a[64:63];
    endcase
  end
  always@(IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 or
	  capModify_a or x_capFat_address__h2002)
  begin
    case (IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24)
      4'd7, 4'd8:
	  CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q2 =
	      capModify_a[161:96];
      4'd12:
	  CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q2 =
	      x_capFat_address__h2002;
      default: CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q2 =
		   capModify_a[161:96];
    endcase
  end
  always@(IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 or
	  capModify_a or
	  capModify_a_BITS_159_TO_110_0_XOR_SEXT_capModi_ETC___d441)
  begin
    case (IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24)
      4'd7, 4'd8:
	  CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q3 =
	      capModify_a[162];
      4'd12:
	  CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q3 =
	      capModify_a[159:96] != 64'd0 &&
	      capModify_a_BITS_159_TO_110_0_XOR_SEXT_capModi_ETC___d441;
      default: CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q3 =
		   IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
		   4'd9 ||
		   IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 ==
		   4'd10 &&
		   capModify_a[162];
    endcase
  end
  always@(IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 or
	  capModify_a or capModify_b)
  begin
    case (IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24)
      4'd7, 4'd8:
	  CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q4 =
	      capModify_a[44:10];
      4'd12:
	  CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q4 =
	      { capModify_a[159:96] == 64'd0 || capModify_b[44],
		(capModify_a[159:96] == 64'd0) ?
		  34'h344000000 :
		  capModify_b[43:10] };
      default: CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q4 =
		   capModify_a[44:10];
    endcase
  end
  always@(IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 or
	  capModify_a or
	  _0_CONCAT_capModify_a_BITS_81_TO_78_87_CONCAT_0_ETC___d491 or
	  x_capFat_perms_soft__h3041 or capModify_b)
  begin
    case (IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24)
      4'd7:
	  IF_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_cap_ETC___d517 =
	      { _0_CONCAT_capModify_a_BITS_81_TO_78_87_CONCAT_0_ETC___d491[18:15],
		_0_CONCAT_capModify_a_BITS_81_TO_78_87_CONCAT_0_ETC___d491[11:0] };
      4'd8:
	  IF_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_cap_ETC___d517 =
	      capModify_a[81:66];
      4'd12:
	  IF_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_cap_ETC___d517 =
	      { x_capFat_perms_soft__h3041,
		capModify_a[159:96] != 64'd0 && capModify_b[77],
		capModify_a[159:96] != 64'd0 && capModify_b[76],
		capModify_a[159:96] != 64'd0 && capModify_b[75],
		capModify_a[159:96] != 64'd0 && capModify_b[74],
		capModify_a[159:96] != 64'd0 && capModify_b[73],
		capModify_a[159:96] != 64'd0 && capModify_b[72],
		capModify_a[159:96] != 64'd0 && capModify_b[71],
		capModify_a[159:96] != 64'd0 && capModify_b[70],
		capModify_a[159:96] != 64'd0 && capModify_b[69],
		capModify_a[159:96] != 64'd0 && capModify_b[68],
		capModify_a[159:96] != 64'd0 && capModify_b[67],
		capModify_a[159:96] != 64'd0 && capModify_b[66] };
      default: IF_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_cap_ETC___d517 =
		   capModify_a[81:66];
    endcase
  end
  always@(IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 or
	  capModify_a or capModify_b or x_capFat_flags__h2005)
  begin
    case (IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24)
      4'd7:
	  CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q5 =
	      capModify_a[65];
      4'd8:
	  CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q5 =
	      capModify_b[96];
      4'd12:
	  CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q5 =
	      x_capFat_flags__h2005;
      default: CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q5 =
		   capModify_a[65];
    endcase
  end
  always@(IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 or
	  capModify_a or x_capFat_addrBits__h2003)
  begin
    case (IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24)
      4'd7, 4'd8:
	  CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q6 =
	      capModify_a[95:82];
      4'd12:
	  CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q6 =
	      x_capFat_addrBits__h2003;
      default: CASE_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_c_ETC__q6 =
		   capModify_a[95:82];
    endcase
  end
  always@(IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24 or
	  capModify_a or
	  x_tempFields_repBoundTopBits__h4277 or
	  capModify_b_BITS_37_TO_35_70_ULT_capModify_b_B_ETC___d371 or
	  capModify_b_BITS_23_TO_21_67_ULT_capModify_b_B_ETC___d376 or
	  IF_capModify_b_BITS_43_TO_38_75_EQ_52_70_THEN__ETC___d584 or
	  IF_capModify_a_BITS_159_TO_96_80_EQ_0_20_OR_ca_ETC___d591 or
	  IF_capModify_a_BITS_159_TO_96_80_EQ_0_20_OR_ca_ETC___d596)
  begin
    case (IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_capMod_ETC___d24)
      4'd7, 4'd8:
	  IF_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_cap_ETC___d602 =
	      capModify_a[9:0];
      4'd12:
	  IF_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_cap_ETC___d602 =
	      { x_tempFields_repBoundTopBits__h4277,
		capModify_a[159:96] == 64'd0 ||
		capModify_b_BITS_37_TO_35_70_ULT_capModify_b_B_ETC___d371,
		capModify_a[159:96] == 64'd0 ||
		capModify_b_BITS_23_TO_21_67_ULT_capModify_b_B_ETC___d376,
		capModify_a[159:96] == 64'd0 ||
		IF_capModify_b_BITS_43_TO_38_75_EQ_52_70_THEN__ETC___d584,
		IF_capModify_a_BITS_159_TO_96_80_EQ_0_20_OR_ca_ETC___d591,
		IF_capModify_a_BITS_159_TO_96_80_EQ_0_20_OR_ca_ETC___d596 };
      default: IF_IF_capModify_func_BITS_8_TO_5_EQ_7_5_OR_cap_ETC___d602 =
		   capModify_a[9:0];
    endcase
  end
endmodule  // module_capModify

