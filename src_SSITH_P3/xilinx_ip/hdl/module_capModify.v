//
// Generated by Bluespec Compiler, version 2019.05.beta2 (build a88bf40db, 2019-05-24)
//
// On Sat Jun  6 22:44:25 BST 2020
//
//
// Ports:
// Name                         I/O  size props
// capModify                      O   164
// capModify_a                    I   163
// capModify_b                    I   163
// capModify_func                 I     9
//
// Combinational paths from inputs to outputs:
//   (capModify_a, capModify_b, capModify_func) -> capModify
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module module_capModify(capModify_a,
			capModify_b,
			capModify_func,
			capModify);
  // value method capModify
  input  [162 : 0] capModify_a;
  input  [162 : 0] capModify_b;
  input  [8 : 0] capModify_func;
  output [163 : 0] capModify;

  // signals for module outputs
  wire [163 : 0] capModify;

  // remaining internal signals
  reg [65 : 0] CASE_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_c_ETC__q3;
  reg [54 : 0] CASE_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_c_ETC__q2;
  reg [15 : 0] IF_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_cap_ETC___d476;
  reg [13 : 0] CASE_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_c_ETC__q4;
  reg [9 : 0] IF_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_cap_ETC___d521;
  reg [3 : 0] IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_capMod_ETC___d22;
  reg [2 : 0] IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144;
  reg CASE_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_c_ETC__q1,
      CASE_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_c_ETC__q5;
  wire [163 : 0] IF_capModify_func_BITS_8_TO_5_EQ_1_OR_NOT_capM_ETC___d528,
		 setBoundsALU___d130;
  wire [162 : 0] IF_capModify_func_BITS_8_TO_5_EQ_2_OR_NOT_capM_ETC___d526,
		 IF_capModify_func_BITS_8_TO_5_EQ_3_OR_NOT_capM_ETC___d525,
		 IF_capModify_func_BITS_8_TO_5_EQ_4_OR_NOT_capM_ETC___d524,
		 IF_capModify_func_BITS_8_TO_5_EQ_5_1_OR_IF_cap_ETC___d523,
		 IF_capModify_func_BIT_0_1_THEN_capModify_b_BIT_ETC___d385,
		 capModify_func_BIT_0_1_OR_NOT_capModify_a_BITS_ETC___d353;
  wire [151 : 0] IF_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_cap_ETC___d498,
		 IF_NOT_capModify_func_BIT_0_1_2_AND_capModify__ETC___d329;
  wire [71 : 0] IF_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_cap_ETC___d497,
		IF_NOT_capModify_func_BIT_0_1_2_AND_capModify__ETC___d328,
		IF_capModify_func_BIT_0_1_THEN_capModify_b_BIT_ETC___d381;
  wire [65 : 0] address__h1028,
		in__h2340,
		pointer__h686,
		result_d_address__h1709,
		result_d_address__h960,
		ret___1_address__h1768,
		ret_address__h1778,
		x__h1300,
		x__h2358,
		x__h2515,
		x_capFat_address__h1006,
		x_capFat_address__h1465,
		x_capFat_address__h1718,
		y__h2357;
  wire [63 : 0] addBase__h2079,
		addBase__h2393,
		addr__h523,
		bot__h2082,
		bot__h2396,
		mask__h1034,
		newAddrDiff__h1035,
		x__h1081,
		x__h1118,
		x__h1637,
		x__h2198,
		x__h2200,
		x__h860,
		y__h1221;
  wire [54 : 0] IF_NOT_capModify_func_BIT_0_1_2_AND_capModify__ETC___d327,
		IF_capModify_a_BITS_159_TO_96_65_EQ_0_90_THEN__ETC___d489,
		IF_capModify_func_BIT_0_1_THEN_capModify_b_BIT_ETC___d380;
  wire [49 : 0] highOffsetBits__h1513,
		highOffsetBits__h695,
		mask__h2080,
		mask__h2394,
		signBits__h1510,
		signBits__h692,
		x__h1540,
		x__h722;
  wire [34 : 0] NOT_capModify_func_BIT_0_1_2_AND_capModify_a_B_ETC___d326;
  wire [33 : 0] IF_NOT_capModify_func_BITS_4_TO_2_36_EQ_0_37_3_ETC___d234;
  wire [30 : 0] _0_CONCAT_capModify_a_BITS_81_TO_78_46_CONCAT_0_ETC___d450;
  wire [17 : 0] x_capFat_otype__h1011,
		x_capFat_otype__h1459,
		x_capFat_otype__h1723;
  wire [15 : 0] base__h2185,
		newAddrBits__h1698,
		newAddrBits__h945,
		offset__h2186,
		x__h2136;
  wire [13 : 0] repBoundBits__h701,
		result_d_addrBits__h1710,
		result_d_addrBits__h961,
		toBoundsM1_A__h700,
		toBoundsM1_B__h703,
		toBoundsM1__h1523,
		toBoundsM1__h705,
		toBounds_A__h699,
		toBounds_B__h702,
		toBounds__h1522,
		toBounds__h704,
		x_capFat_addrBits__h1007,
		x_capFat_addrBits__h1466,
		x_capFat_addrBits__h1719;
  wire [5 : 0] x__h1116;
  wire [3 : 0] IF_NOT_capModify_func_BITS_4_TO_2_36_EQ_0_37_3_ETC___d248,
	       IF_capModify_a_BITS_37_TO_35_05_ULT_capModify__ETC___d119,
	       x_capFat_perms_soft__h2605,
	       x_capFat_perms_soft__h2612;
  wire [2 : 0] repBound__h3557,
	       repBound__h3640,
	       x_tempFields_repBoundTopBits__h3595,
	       x_tempFields_repBoundTopBits__h3647;
  wire [1 : 0] IF_NOT_capModify_func_BIT_0_1_2_AND_capModify__ETC___d345,
	       IF_NOT_capModify_func_BIT_0_1_2_AND_capModify__ETC___d350,
	       IF_capModify_a_BITS_159_TO_96_65_EQ_0_90_OR_ca_ETC___d510,
	       IF_capModify_a_BITS_159_TO_96_65_EQ_0_90_OR_ca_ETC___d515,
	       x_capFat_reserved__h1010,
	       x_capFat_reserved__h1469,
	       x_capFat_reserved__h1722;
  wire IF_capModify_a_BIT_159_92_THEN_NOT_capModify_a_ETC___d408,
       IF_capModify_b_BITS_159_TO_96_8_AND_1844674407_ETC___d291,
       IF_capModify_b_BITS_43_TO_38_70_EQ_52_34_THEN__ETC___d503,
       IF_capModify_b_BIT_159_1_THEN_NOT_capModify_b__ETC___d65,
       IF_capModify_func_BIT_0_1_THEN_capModify_a_BIT_ETC___d109,
       NOT_capModify_b_BITS_159_TO_96_8_SRL_capModify_ETC___d56,
       NOT_capModify_b_BITS_43_TO_38_70_ULT_50_60_61__ETC___d295,
       NOT_capModify_b_BITS_43_TO_38_70_ULT_50_60___d261,
       _0_CONCAT_IF_capModify_func_BIT_0_1_THEN_capMod_ETC___d282,
       _0_CONCAT_IF_capModify_func_BIT_0_1_THEN_capMod_ETC___d338,
       capModify_a_BITS_159_TO_110_7_XOR_SEXT_capModi_ETC___d411,
       capModify_a_BITS_23_TO_21_03_ULT_capModify_a_B_ETC___d107,
       capModify_a_BITS_37_TO_35_05_ULT_capModify_a_B_ETC___d106,
       capModify_b_BITS_159_TO_96_8_AND_1844674407370_ETC___d271,
       capModify_b_BITS_159_TO_96_8_AND_1844674407370_ETC___d292,
       capModify_b_BITS_23_TO_21_30_ULT_capModify_b_B_ETC___d336,
       capModify_b_BITS_37_TO_35_33_ULT_capModify_b_B_ETC___d334,
       capModify_func_BITS_4_TO_2_36_EQ_0_37_OR_capMo_ETC___d232,
       capModify_func_BITS_4_TO_2_36_EQ_0_37_OR_capMo_ETC___d242,
       capModify_func_BITS_4_TO_2_36_EQ_0_37_OR_capMo_ETC___d244,
       capModify_func_BITS_4_TO_2_36_EQ_0_37_OR_capMo_ETC___d246,
       x_capFat_flags__h1009,
       x_capFat_flags__h1468,
       x_capFat_flags__h1721;

  // value method capModify
  assign capModify =
	     (capModify_func[8:5] == 4'd0 ||
	      capModify_func[8:5] != 4'd1 && capModify_func[8:5] != 4'd2 &&
	      capModify_func[8:5] != 4'd3 &&
	      capModify_func[8:5] != 4'd4 &&
	      capModify_func[8:5] != 4'd5 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_capMod_ETC___d22 ==
	      4'd0) ?
	       { (highOffsetBits__h695 == 50'd0 &&
		  IF_capModify_b_BIT_159_1_THEN_NOT_capModify_b__ETC___d65 ||
		  capModify_a[43:38] >= 6'd50) &&
		 capModify_a[162],
		 result_d_address__h960,
		 result_d_addrBits__h961,
		 capModify_a[81:10],
		 repBound__h3557,
		 capModify_a_BITS_37_TO_35_05_ULT_capModify_a_B_ETC___d106,
		 capModify_a_BITS_23_TO_21_03_ULT_capModify_a_B_ETC___d107,
		 IF_capModify_func_BIT_0_1_THEN_capModify_a_BIT_ETC___d109,
		 IF_capModify_a_BITS_37_TO_35_05_ULT_capModify__ETC___d119,
		 1'h0 } :
	       IF_capModify_func_BITS_8_TO_5_EQ_1_OR_NOT_capM_ETC___d528 ;

  // remaining internal signals
  module_setBoundsALU instance_setBoundsALU_0(.setBoundsALU_cap(capModify_a),
					      .setBoundsALU_len(x__h1081),
					      .setBoundsALU_boundsOp(capModify_func[1:0]),
					      .setBoundsALU(setBoundsALU___d130));
  assign IF_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_cap_ETC___d497 =
	     { IF_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_cap_ETC___d476,
	       CASE_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_c_ETC__q1,
	       CASE_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_c_ETC__q2 } ;
  assign IF_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_cap_ETC___d498 =
	     { CASE_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_c_ETC__q3,
	       CASE_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_c_ETC__q4,
	       IF_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_cap_ETC___d497 } ;
  assign IF_NOT_capModify_func_BITS_4_TO_2_36_EQ_0_37_3_ETC___d234 =
	     (capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
	      (IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
	       3'd2 ||
	       IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
	       3'd3 ||
	       IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
	       3'd4)) ?
	       capModify_b[43:10] :
	       34'h344000000 ;
  assign IF_NOT_capModify_func_BITS_4_TO_2_36_EQ_0_37_3_ETC___d248 =
	     (capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
	      (IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
	       3'd2 ||
	       IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
	       3'd3 ||
	       IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
	       3'd4)) ?
	       capModify_b[3:0] :
	       4'd0 ;
  assign IF_NOT_capModify_func_BIT_0_1_2_AND_capModify__ETC___d327 =
	     { (!capModify_func[0] && capModify_a[62:45] == 18'd262143) ?
		 2'd0 :
		 capModify_b[64:63],
	       (!capModify_func[0] && capModify_a[62:45] == 18'd262143) ?
		 18'd262143 :
		 capModify_b[62:45],
	       NOT_capModify_func_BIT_0_1_2_AND_capModify_a_B_ETC___d326 } ;
  assign IF_NOT_capModify_func_BIT_0_1_2_AND_capModify__ETC___d328 =
	     { (!capModify_func[0] && capModify_a[62:45] == 18'd262143) ?
		 4'd0 :
		 capModify_b[81:78],
	       (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
	       capModify_b[77],
	       (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
	       capModify_b[76],
	       (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
	       capModify_b[75],
	       (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
	       capModify_b[74],
	       (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
	       capModify_b[73],
	       (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
	       capModify_b[72],
	       (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
	       capModify_b[71],
	       (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
	       capModify_b[70],
	       (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
	       capModify_b[69],
	       (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
	       capModify_b[68],
	       (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
	       capModify_b[67],
	       (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
	       capModify_b[66],
	       (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
	       capModify_b[65],
	       IF_NOT_capModify_func_BIT_0_1_2_AND_capModify__ETC___d327 } ;
  assign IF_NOT_capModify_func_BIT_0_1_2_AND_capModify__ETC___d329 =
	     { (!capModify_func[0] && capModify_a[62:45] == 18'd262143) ?
		 66'h0FFFFFFFFFFFFFFFF :
		 address__h1028,
	       (!capModify_func[0] && capModify_a[62:45] == 18'd262143) ?
		 14'd4095 :
		 x__h1300[13:0],
	       IF_NOT_capModify_func_BIT_0_1_2_AND_capModify__ETC___d328 } ;
  assign IF_NOT_capModify_func_BIT_0_1_2_AND_capModify__ETC___d345 =
	     (!capModify_func[0] && capModify_a[62:45] == 18'd262143 ||
	      capModify_b_BITS_37_TO_35_33_ULT_capModify_b_B_ETC___d334 ==
	      _0_CONCAT_IF_capModify_func_BIT_0_1_THEN_capMod_ETC___d338) ?
	       2'd0 :
	       ((capModify_b_BITS_37_TO_35_33_ULT_capModify_b_B_ETC___d334 &&
		 !_0_CONCAT_IF_capModify_func_BIT_0_1_THEN_capMod_ETC___d338) ?
		  2'd1 :
		  2'd3) ;
  assign IF_NOT_capModify_func_BIT_0_1_2_AND_capModify__ETC___d350 =
	     (!capModify_func[0] && capModify_a[62:45] == 18'd262143 ||
	      capModify_b_BITS_23_TO_21_30_ULT_capModify_b_B_ETC___d336 ==
	      _0_CONCAT_IF_capModify_func_BIT_0_1_THEN_capMod_ETC___d338) ?
	       2'd0 :
	       ((capModify_b_BITS_23_TO_21_30_ULT_capModify_b_B_ETC___d336 &&
		 !_0_CONCAT_IF_capModify_func_BIT_0_1_THEN_capMod_ETC___d338) ?
		  2'd1 :
		  2'd3) ;
  assign IF_capModify_a_BITS_159_TO_96_65_EQ_0_90_OR_ca_ETC___d510 =
	     (capModify_a[159:96] == 64'd0 ||
	      capModify_b_BITS_37_TO_35_33_ULT_capModify_b_B_ETC___d334 ==
	      IF_capModify_b_BITS_43_TO_38_70_EQ_52_34_THEN__ETC___d503) ?
	       2'd0 :
	       ((capModify_b_BITS_37_TO_35_33_ULT_capModify_b_B_ETC___d334 &&
		 !IF_capModify_b_BITS_43_TO_38_70_EQ_52_34_THEN__ETC___d503) ?
		  2'd1 :
		  2'd3) ;
  assign IF_capModify_a_BITS_159_TO_96_65_EQ_0_90_OR_ca_ETC___d515 =
	     (capModify_a[159:96] == 64'd0 ||
	      capModify_b_BITS_23_TO_21_30_ULT_capModify_b_B_ETC___d336 ==
	      IF_capModify_b_BITS_43_TO_38_70_EQ_52_34_THEN__ETC___d503) ?
	       2'd0 :
	       ((capModify_b_BITS_23_TO_21_30_ULT_capModify_b_B_ETC___d336 &&
		 !IF_capModify_b_BITS_43_TO_38_70_EQ_52_34_THEN__ETC___d503) ?
		  2'd1 :
		  2'd3) ;
  assign IF_capModify_a_BITS_159_TO_96_65_EQ_0_90_THEN__ETC___d489 =
	     { x_capFat_reserved__h1722,
	       x_capFat_otype__h1723,
	       capModify_a[159:96] == 64'd0 || capModify_b[44],
	       (capModify_a[159:96] == 64'd0) ?
		 34'h344000000 :
		 capModify_b[43:10] } ;
  assign IF_capModify_a_BITS_37_TO_35_05_ULT_capModify__ETC___d119 =
	     { (capModify_a_BITS_37_TO_35_05_ULT_capModify_a_B_ETC___d106 ==
		IF_capModify_func_BIT_0_1_THEN_capModify_a_BIT_ETC___d109) ?
		 2'd0 :
		 ((capModify_a_BITS_37_TO_35_05_ULT_capModify_a_B_ETC___d106 &&
		   !IF_capModify_func_BIT_0_1_THEN_capModify_a_BIT_ETC___d109) ?
		    2'd1 :
		    2'd3),
	       (capModify_a_BITS_23_TO_21_03_ULT_capModify_a_B_ETC___d107 ==
		IF_capModify_func_BIT_0_1_THEN_capModify_a_BIT_ETC___d109) ?
		 2'd0 :
		 ((capModify_a_BITS_23_TO_21_03_ULT_capModify_a_B_ETC___d107 &&
		   !IF_capModify_func_BIT_0_1_THEN_capModify_a_BIT_ETC___d109) ?
		    2'd1 :
		    2'd3) } ;
  assign IF_capModify_a_BIT_159_92_THEN_NOT_capModify_a_ETC___d408 =
	     capModify_a[159] ?
	       x__h1637[13:0] >= toBounds__h1522 :
	       x__h1637[13:0] <= toBoundsM1__h1523 ;
  assign IF_capModify_b_BITS_159_TO_96_8_AND_1844674407_ETC___d291 =
	     ((newAddrDiff__h1035 == 64'd0) ?
		2'd0 :
		(capModify_b_BITS_159_TO_96_8_AND_1844674407370_ETC___d271 ?
		   2'd3 :
		   2'd1)) ==
	     ((capModify_b[4] &&
	       _0_CONCAT_IF_capModify_func_BIT_0_1_THEN_capMod_ETC___d282) ?
		2'd0 :
		((capModify_b[4] &&
		  !_0_CONCAT_IF_capModify_func_BIT_0_1_THEN_capMod_ETC___d282) ?
		   2'd1 :
		   ((!capModify_b[4] &&
		     _0_CONCAT_IF_capModify_func_BIT_0_1_THEN_capMod_ETC___d282) ?
		      2'd3 :
		      2'd0))) ;
  assign IF_capModify_b_BITS_43_TO_38_70_EQ_52_34_THEN__ETC___d503 =
	     result_d_addrBits__h1710[13:11] < repBound__h3640 ;
  assign IF_capModify_b_BIT_159_1_THEN_NOT_capModify_b__ETC___d65 =
	     capModify_b[159] ?
	       NOT_capModify_b_BITS_159_TO_96_8_SRL_capModify_ETC___d56 :
	       (capModify_func[0] ?
		  x__h860[13:0] < toBoundsM1__h705 :
		  x__h860[13:0] <= toBoundsM1__h705) ;
  assign IF_capModify_func_BITS_8_TO_5_EQ_1_OR_NOT_capM_ETC___d528 =
	     (capModify_func[8:5] == 4'd1 ||
	      capModify_func[8:5] != 4'd2 && capModify_func[8:5] != 4'd3 &&
	      capModify_func[8:5] != 4'd4 &&
	      capModify_func[8:5] != 4'd5 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_capMod_ETC___d22 ==
	      4'd1) ?
	       setBoundsALU___d130 :
	       { IF_capModify_func_BITS_8_TO_5_EQ_2_OR_NOT_capM_ETC___d526,
		 1'h0 } ;
  assign IF_capModify_func_BITS_8_TO_5_EQ_2_OR_NOT_capM_ETC___d526 =
	     (capModify_func[8:5] == 4'd2 ||
	      capModify_func[8:5] != 4'd3 && capModify_func[8:5] != 4'd4 &&
	      capModify_func[8:5] != 4'd5 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_capMod_ETC___d22 ==
	      4'd2) ?
	       { capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
		 (IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd2 ||
		  IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd3 ||
		  IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd4) &&
		 capModify_b[162],
		 x_capFat_address__h1006,
		 x_capFat_addrBits__h1007,
		 x_capFat_perms_soft__h2605,
		 capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
		 (IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd2 ||
		  IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd3 ||
		  IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd4) &&
		 capModify_b[77],
		 capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
		 (IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd2 ||
		  IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd3 ||
		  IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd4) &&
		 capModify_b[76],
		 capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
		 (IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd2 ||
		  IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd3 ||
		  IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd4) &&
		 capModify_b[75],
		 capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
		 (IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd2 ||
		  IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd3 ||
		  IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd4) &&
		 capModify_b[74],
		 capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
		 (IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd2 ||
		  IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd3 ||
		  IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd4) &&
		 capModify_b[73],
		 capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
		 (IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd2 ||
		  IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd3 ||
		  IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd4) &&
		 capModify_b[72],
		 capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
		 (IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd2 ||
		  IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd3 ||
		  IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd4) &&
		 capModify_b[71],
		 capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
		 (IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd2 ||
		  IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd3 ||
		  IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd4) &&
		 capModify_b[70],
		 capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
		 (IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd2 ||
		  IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd3 ||
		  IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd4) &&
		 capModify_b[69],
		 capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
		 (IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd2 ||
		  IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd3 ||
		  IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd4) &&
		 capModify_b[68],
		 capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
		 (IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd2 ||
		  IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd3 ||
		  IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd4) &&
		 capModify_b[67],
		 capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
		 (IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd2 ||
		  IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd3 ||
		  IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
		  3'd4) &&
		 capModify_b[66],
		 x_capFat_flags__h1009,
		 x_capFat_reserved__h1010,
		 x_capFat_otype__h1011,
		 capModify_func_BITS_4_TO_2_36_EQ_0_37_OR_capMo_ETC___d232,
		 IF_NOT_capModify_func_BITS_4_TO_2_36_EQ_0_37_3_ETC___d234,
		 x_tempFields_repBoundTopBits__h3595,
		 capModify_func_BITS_4_TO_2_36_EQ_0_37_OR_capMo_ETC___d242,
		 capModify_func_BITS_4_TO_2_36_EQ_0_37_OR_capMo_ETC___d244,
		 capModify_func_BITS_4_TO_2_36_EQ_0_37_OR_capMo_ETC___d246,
		 IF_NOT_capModify_func_BITS_4_TO_2_36_EQ_0_37_3_ETC___d248 } :
	       IF_capModify_func_BITS_8_TO_5_EQ_3_OR_NOT_capM_ETC___d525 ;
  assign IF_capModify_func_BITS_8_TO_5_EQ_3_OR_NOT_capM_ETC___d525 =
	     (capModify_func[8:5] == 4'd3 ||
	      capModify_func[8:5] != 4'd4 && capModify_func[8:5] != 4'd5 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_capMod_ETC___d22 ==
	      4'd3) ?
	       capModify_func_BIT_0_1_OR_NOT_capModify_a_BITS_ETC___d353 :
	       IF_capModify_func_BITS_8_TO_5_EQ_4_OR_NOT_capM_ETC___d524 ;
  assign IF_capModify_func_BITS_8_TO_5_EQ_4_OR_NOT_capM_ETC___d524 =
	     (capModify_func[8:5] == 4'd4 ||
	      capModify_func[8:5] != 4'd5 &&
	      IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_capMod_ETC___d22 ==
	      4'd4) ?
	       { capModify_a[162:63],
		 x_capFat_otype__h1459,
		 capModify_a[44:0] } :
	       IF_capModify_func_BITS_8_TO_5_EQ_5_1_OR_IF_cap_ETC___d523 ;
  assign IF_capModify_func_BITS_8_TO_5_EQ_5_1_OR_IF_cap_ETC___d523 =
	     (capModify_func[8:5] == 4'd5 ||
	      IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_capMod_ETC___d22 ==
	      4'd5) ?
	       IF_capModify_func_BIT_0_1_THEN_capModify_b_BIT_ETC___d385 :
	       { CASE_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_c_ETC__q5,
		 IF_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_cap_ETC___d498,
		 IF_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_cap_ETC___d521 } ;
  assign IF_capModify_func_BIT_0_1_THEN_capModify_a_BIT_ETC___d109 =
	     result_d_addrBits__h961[13:11] < repBound__h3557 ;
  assign IF_capModify_func_BIT_0_1_THEN_capModify_b_BIT_ETC___d380 =
	     { x_capFat_reserved__h1469,
	       18'd262143,
	       capModify_func[0] ? capModify_b[44:10] : capModify_a[44:10] } ;
  assign IF_capModify_func_BIT_0_1_THEN_capModify_b_BIT_ETC___d381 =
	     { capModify_func[0] ? capModify_b[81:66] : capModify_a[81:66],
	       x_capFat_flags__h1468,
	       IF_capModify_func_BIT_0_1_THEN_capModify_b_BIT_ETC___d380 } ;
  assign IF_capModify_func_BIT_0_1_THEN_capModify_b_BIT_ETC___d385 =
	     { capModify_func[0] ? capModify_b[162] : capModify_a[162],
	       x_capFat_address__h1465,
	       x_capFat_addrBits__h1466,
	       IF_capModify_func_BIT_0_1_THEN_capModify_b_BIT_ETC___d381,
	       capModify_func[0] ? capModify_b[9:0] : capModify_a[9:0] } ;
  assign NOT_capModify_b_BITS_159_TO_96_8_SRL_capModify_ETC___d56 =
	     x__h860[13:0] >= toBounds__h704 &&
	     (!capModify_func[0] ||
	      repBoundBits__h701 != capModify_a[95:82]) ;
  assign NOT_capModify_b_BITS_43_TO_38_70_ULT_50_60_61__ETC___d295 =
	     NOT_capModify_b_BITS_43_TO_38_70_ULT_50_60___d261 ||
	     IF_capModify_b_BITS_159_TO_96_8_AND_1844674407_ETC___d291 &&
	     (newAddrDiff__h1035 == 64'd0 ||
	      capModify_b_BITS_159_TO_96_8_AND_1844674407370_ETC___d292) ;
  assign NOT_capModify_b_BITS_43_TO_38_70_ULT_50_60___d261 =
	     capModify_b[43:38] >= 6'd50 ;
  assign NOT_capModify_func_BIT_0_1_2_AND_capModify_a_B_ETC___d326 =
	     { !capModify_func[0] && capModify_a[62:45] == 18'd262143 ||
	       capModify_b[44],
	       (!capModify_func[0] && capModify_a[62:45] == 18'd262143) ?
		 34'h344000000 :
		 capModify_b[43:10] } ;
  assign _0_CONCAT_IF_capModify_func_BIT_0_1_THEN_capMod_ETC___d282 =
	     x__h1300[13:11] < capModify_b[9:7] ;
  assign _0_CONCAT_IF_capModify_func_BIT_0_1_THEN_capMod_ETC___d338 =
	     x__h1300[13:11] < repBound__h3640 ;
  assign _0_CONCAT_capModify_a_BITS_81_TO_78_46_CONCAT_0_ETC___d450 =
	     { 12'd0, capModify_a[81:78], 3'h0, capModify_a[77:66] } &
	     capModify_b[126:96] ;
  assign addBase__h2079 =
	     { {48{x__h2136[15]}}, x__h2136 } << capModify_a[43:38] ;
  assign addBase__h2393 =
	     { {48{base__h2185[15]}}, base__h2185 } << capModify_b[43:38] ;
  assign addr__h523 = x__h2198 | in__h2340[63:0] ;
  assign address__h1028 = { 2'd0, x__h1118 } ;
  assign base__h2185 = { capModify_b[1:0], capModify_b[23:10] } ;
  assign bot__h2082 =
	     { capModify_a[159:110] & mask__h2080, 14'd0 } + addBase__h2079 ;
  assign bot__h2396 =
	     { capModify_b[159:110] & mask__h2394, 14'd0 } + addBase__h2393 ;
  assign capModify_a_BITS_159_TO_110_7_XOR_SEXT_capModi_ETC___d411 =
	     (highOffsetBits__h1513 == 50'd0 &&
	      IF_capModify_a_BIT_159_92_THEN_NOT_capModify_a_ETC___d408 ||
	      NOT_capModify_b_BITS_43_TO_38_70_ULT_50_60___d261) &&
	     capModify_b[162] ;
  assign capModify_a_BITS_23_TO_21_03_ULT_capModify_a_B_ETC___d107 =
	     capModify_a[23:21] < repBound__h3557 ;
  assign capModify_a_BITS_37_TO_35_05_ULT_capModify_a_B_ETC___d106 =
	     capModify_a[37:35] < repBound__h3557 ;
  assign capModify_b_BITS_159_TO_96_8_AND_1844674407370_ETC___d271 =
	     newAddrDiff__h1035 == mask__h1034 ;
  assign capModify_b_BITS_159_TO_96_8_AND_1844674407370_ETC___d292 =
	     capModify_b_BITS_159_TO_96_8_AND_1844674407370_ETC___d271 ||
	     newAddrDiff__h1035 == (mask__h1034 ^ y__h1221) ;
  assign capModify_b_BITS_23_TO_21_30_ULT_capModify_b_B_ETC___d336 =
	     capModify_b[23:21] < repBound__h3640 ;
  assign capModify_b_BITS_37_TO_35_33_ULT_capModify_b_B_ETC___d334 =
	     capModify_b[37:35] < repBound__h3640 ;
  assign capModify_func_BITS_4_TO_2_36_EQ_0_37_OR_capMo_ETC___d232 =
	     (capModify_func[4:2] == 3'd0 || capModify_func[4:2] == 3'd1 ||
	      IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 !=
	      3'd2) &&
	     (capModify_func[4:2] == 3'd0 || capModify_func[4:2] == 3'd1 ||
	      IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 !=
	      3'd3) &&
	     (capModify_func[4:2] == 3'd0 || capModify_func[4:2] == 3'd1 ||
	      IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 !=
	      3'd4) ||
	     capModify_b[44] ;
  assign capModify_func_BITS_4_TO_2_36_EQ_0_37_OR_capMo_ETC___d242 =
	     (capModify_func[4:2] == 3'd0 || capModify_func[4:2] == 3'd1 ||
	      IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 !=
	      3'd2) &&
	     (capModify_func[4:2] == 3'd0 || capModify_func[4:2] == 3'd1 ||
	      IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 !=
	      3'd3) &&
	     (capModify_func[4:2] == 3'd0 || capModify_func[4:2] == 3'd1 ||
	      IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 !=
	      3'd4) ||
	     capModify_b[6] ;
  assign capModify_func_BITS_4_TO_2_36_EQ_0_37_OR_capMo_ETC___d244 =
	     (capModify_func[4:2] == 3'd0 || capModify_func[4:2] == 3'd1 ||
	      IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 !=
	      3'd2) &&
	     (capModify_func[4:2] == 3'd0 || capModify_func[4:2] == 3'd1 ||
	      IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 !=
	      3'd3) &&
	     (capModify_func[4:2] == 3'd0 || capModify_func[4:2] == 3'd1 ||
	      IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 !=
	      3'd4) ||
	     capModify_b[5] ;
  assign capModify_func_BITS_4_TO_2_36_EQ_0_37_OR_capMo_ETC___d246 =
	     (capModify_func[4:2] == 3'd0 || capModify_func[4:2] == 3'd1 ||
	      IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 !=
	      3'd2) &&
	     (capModify_func[4:2] == 3'd0 || capModify_func[4:2] == 3'd1 ||
	      IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 !=
	      3'd3) &&
	     (capModify_func[4:2] == 3'd0 || capModify_func[4:2] == 3'd1 ||
	      IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 !=
	      3'd4) ||
	     capModify_b[4] ;
  assign capModify_func_BIT_0_1_OR_NOT_capModify_a_BITS_ETC___d353 =
	     { (capModify_func[0] || capModify_a[62:45] != 18'd262143) &&
	       NOT_capModify_b_BITS_43_TO_38_70_ULT_50_60_61__ETC___d295 &&
	       capModify_b[162],
	       IF_NOT_capModify_func_BIT_0_1_2_AND_capModify__ETC___d329,
	       (!capModify_func[0] && capModify_a[62:45] == 18'd262143) ?
		 3'd7 :
		 repBound__h3640,
	       !capModify_func[0] && capModify_a[62:45] == 18'd262143 ||
	       capModify_b_BITS_37_TO_35_33_ULT_capModify_b_B_ETC___d334,
	       !capModify_func[0] && capModify_a[62:45] == 18'd262143 ||
	       capModify_b_BITS_23_TO_21_30_ULT_capModify_b_B_ETC___d336,
	       !capModify_func[0] && capModify_a[62:45] == 18'd262143 ||
	       _0_CONCAT_IF_capModify_func_BIT_0_1_THEN_capMod_ETC___d338,
	       IF_NOT_capModify_func_BIT_0_1_2_AND_capModify__ETC___d345,
	       IF_NOT_capModify_func_BIT_0_1_2_AND_capModify__ETC___d350 } ;
  assign highOffsetBits__h1513 = x__h1540 & mask__h2394 ;
  assign highOffsetBits__h695 = x__h722 & mask__h2080 ;
  assign in__h2340 = capModify_b[161:96] & y__h2357 ;
  assign mask__h1034 = 64'hFFFFFFFFFFFFFFFF << x__h1116 ;
  assign mask__h2080 = 50'h3FFFFFFFFFFFF << capModify_a[43:38] ;
  assign mask__h2394 = 50'h3FFFFFFFFFFFF << capModify_b[43:38] ;
  assign newAddrBits__h1698 =
	     { 2'd0, capModify_b[23:10] } + { 2'd0, x__h1637[13:0] } ;
  assign newAddrBits__h945 =
	     { 2'd0, capModify_a[23:10] } + { 2'd0, x__h860[13:0] } ;
  assign newAddrDiff__h1035 =
	     (capModify_b[159:96] & mask__h1034) - (x__h1118 & mask__h1034) ;
  assign offset__h2186 = { 2'd0, capModify_b[95:82] } - base__h2185 ;
  assign pointer__h686 = capModify_a[161:96] + { 2'd0, capModify_b[159:96] } ;
  assign repBoundBits__h701 = { capModify_a[9:7], 11'd0 } ;
  assign repBound__h3557 = capModify_a[23:21] - 3'b001 ;
  assign repBound__h3640 = capModify_b[23:21] - 3'b001 ;
  assign result_d_addrBits__h1710 =
	     (capModify_b[43:38] == 6'd52) ?
	       { 1'b0, newAddrBits__h1698[12:0] } :
	       newAddrBits__h1698[13:0] ;
  assign result_d_addrBits__h961 =
	     capModify_func[0] ?
	       x__h2515[13:0] :
	       ((capModify_a[43:38] == 6'd52) ?
		  { 1'b0, newAddrBits__h945[12:0] } :
		  newAddrBits__h945[13:0]) ;
  assign result_d_address__h1709 =
	     { 2'd0, bot__h2396 } + { 2'd0, capModify_a[159:96] } ;
  assign result_d_address__h960 =
	     capModify_func[0] ? ret_address__h1778 : ret___1_address__h1768 ;
  assign ret___1_address__h1768 =
	     { 2'd0, bot__h2082 } + { 2'd0, capModify_b[159:96] } ;
  assign ret_address__h1778 = { 2'd0, pointer__h686[63:0] } ;
  assign signBits__h1510 = {50{capModify_a[159]}} ;
  assign signBits__h692 = {50{capModify_b[159]}} ;
  assign toBoundsM1_A__h700 = { 3'b110, ~capModify_a[20:10] } ;
  assign toBoundsM1_B__h703 = repBoundBits__h701 + ~capModify_a[95:82] ;
  assign toBoundsM1__h1523 = { 3'b110, ~capModify_b[20:10] } ;
  assign toBoundsM1__h705 =
	     capModify_func[0] ? toBoundsM1_B__h703 : toBoundsM1_A__h700 ;
  assign toBounds_A__h699 = 14'd14336 - { 3'b0, capModify_a[20:10] } ;
  assign toBounds_B__h702 = repBoundBits__h701 - capModify_a[95:82] ;
  assign toBounds__h1522 = 14'd14336 - { 3'b0, capModify_b[20:10] } ;
  assign toBounds__h704 =
	     capModify_func[0] ? toBounds_B__h702 : toBounds_A__h699 ;
  assign x__h1081 = capModify_b[159:96] ;
  assign x__h1116 = capModify_b[43:38] + 6'd14 ;
  assign x__h1118 =
	     capModify_func[0] ?
	       capModify_a[159:96] :
	       { 46'd0, capModify_a[62:45] } ;
  assign x__h1300 = address__h1028 >> capModify_b[43:38] ;
  assign x__h1540 = capModify_a[159:110] ^ signBits__h1510 ;
  assign x__h1637 = capModify_a[159:96] >> capModify_b[43:38] ;
  assign x__h2136 = { capModify_a[1:0], capModify_a[23:10] } ;
  assign x__h2198 = x__h2200 << capModify_b[43:38] ;
  assign x__h2200 = { {48{offset__h2186[15]}}, offset__h2186 } ;
  assign x__h2358 = 66'h3FFFFFFFFFFFFFFFF << capModify_b[43:38] ;
  assign x__h2515 = pointer__h686 >> capModify_a[43:38] ;
  assign x__h722 = capModify_b[159:110] ^ signBits__h692 ;
  assign x__h860 = capModify_b[159:96] >> capModify_a[43:38] ;
  assign x_capFat_addrBits__h1007 =
	     (capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
	      (IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
	       3'd2 ||
	       IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
	       3'd3 ||
	       IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
	       3'd4)) ?
	       capModify_b[95:82] :
	       { 2'b0, addr__h523[63:52] } ;
  assign x_capFat_addrBits__h1466 =
	     capModify_func[0] ? capModify_b[95:82] : capModify_a[95:82] ;
  assign x_capFat_addrBits__h1719 =
	     (capModify_a[159:96] == 64'd0) ?
	       14'd0 :
	       result_d_addrBits__h1710 ;
  assign x_capFat_address__h1006 =
	     (capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
	      (IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
	       3'd2 ||
	       IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
	       3'd3 ||
	       IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
	       3'd4)) ?
	       capModify_b[161:96] :
	       { 2'd0, addr__h523 } ;
  assign x_capFat_address__h1465 =
	     capModify_func[0] ? capModify_b[161:96] : capModify_a[161:96] ;
  assign x_capFat_address__h1718 =
	     (capModify_a[159:96] == 64'd0) ?
	       66'd0 :
	       result_d_address__h1709 ;
  assign x_capFat_flags__h1009 =
	     capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
	     (IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
	      3'd2 ||
	      IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
	      3'd3 ||
	      IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
	      3'd4) &&
	     capModify_b[65] ;
  assign x_capFat_flags__h1468 =
	     capModify_func[0] ? capModify_b[65] : capModify_a[65] ;
  assign x_capFat_flags__h1721 =
	     capModify_a[159:96] != 64'd0 && capModify_b[65] ;
  assign x_capFat_otype__h1011 =
	     (capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
	      (IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
	       3'd2 ||
	       IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
	       3'd3 ||
	       IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
	       3'd4)) ?
	       capModify_b[62:45] :
	       18'd262143 ;
  assign x_capFat_otype__h1459 =
	     (capModify_b[159:96] <= 64'd262139 && capModify_b[162]) ?
	       capModify_b[113:96] :
	       capModify_a[62:45] ;
  assign x_capFat_otype__h1723 =
	     (capModify_a[159:96] == 64'd0) ?
	       18'd262143 :
	       capModify_b[62:45] ;
  assign x_capFat_perms_soft__h2605 =
	     (capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
	      (IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
	       3'd2 ||
	       IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
	       3'd3 ||
	       IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
	       3'd4)) ?
	       capModify_b[81:78] :
	       4'd0 ;
  assign x_capFat_perms_soft__h2612 =
	     (capModify_a[159:96] == 64'd0) ? 4'd0 : capModify_b[81:78] ;
  assign x_capFat_reserved__h1010 =
	     (capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
	      (IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
	       3'd2 ||
	       IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
	       3'd3 ||
	       IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
	       3'd4)) ?
	       capModify_b[64:63] :
	       2'd0 ;
  assign x_capFat_reserved__h1469 =
	     capModify_func[0] ? capModify_b[64:63] : capModify_a[64:63] ;
  assign x_capFat_reserved__h1722 =
	     (capModify_a[159:96] == 64'd0) ? 2'd0 : capModify_b[64:63] ;
  assign x_tempFields_repBoundTopBits__h3595 =
	     (capModify_func[4:2] != 3'd0 && capModify_func[4:2] != 3'd1 &&
	      (IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
	       3'd2 ||
	       IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
	       3'd3 ||
	       IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 ==
	       3'd4)) ?
	       capModify_b[9:7] :
	       3'd7 ;
  assign x_tempFields_repBoundTopBits__h3647 =
	     (capModify_a[159:96] == 64'd0) ? 3'd7 : repBound__h3640 ;
  assign y__h1221 = { mask__h1034[62:0], 1'd0 } ;
  assign y__h2357 = ~x__h2358 ;
  always@(capModify_func)
  begin
    case (capModify_func[8:5])
      4'd6, 4'd7, 4'd8, 4'd9, 4'd10:
	  IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_capMod_ETC___d22 =
	      capModify_func[8:5];
      default: IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_capMod_ETC___d22 =
		   4'd11;
    endcase
  end
  always@(capModify_func)
  begin
    case (capModify_func[4:2])
      3'd2, 3'd3:
	  IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 =
	      capModify_func[4:2];
      default: IF_capModify_func_BITS_4_TO_2_36_EQ_2_41_OR_ca_ETC___d144 =
		   3'd4;
    endcase
  end
  always@(IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_capMod_ETC___d22 or
	  capModify_a or
	  _0_CONCAT_capModify_a_BITS_81_TO_78_46_CONCAT_0_ETC___d450 or
	  x_capFat_perms_soft__h2612 or capModify_b)
  begin
    case (IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_capMod_ETC___d22)
      4'd6:
	  IF_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_cap_ETC___d476 =
	      { _0_CONCAT_capModify_a_BITS_81_TO_78_46_CONCAT_0_ETC___d450[18:15],
		_0_CONCAT_capModify_a_BITS_81_TO_78_46_CONCAT_0_ETC___d450[11:0] };
      4'd7:
	  IF_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_cap_ETC___d476 =
	      capModify_a[81:66];
      4'd11:
	  IF_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_cap_ETC___d476 =
	      { x_capFat_perms_soft__h2612,
		capModify_a[159:96] != 64'd0 && capModify_b[77],
		capModify_a[159:96] != 64'd0 && capModify_b[76],
		capModify_a[159:96] != 64'd0 && capModify_b[75],
		capModify_a[159:96] != 64'd0 && capModify_b[74],
		capModify_a[159:96] != 64'd0 && capModify_b[73],
		capModify_a[159:96] != 64'd0 && capModify_b[72],
		capModify_a[159:96] != 64'd0 && capModify_b[71],
		capModify_a[159:96] != 64'd0 && capModify_b[70],
		capModify_a[159:96] != 64'd0 && capModify_b[69],
		capModify_a[159:96] != 64'd0 && capModify_b[68],
		capModify_a[159:96] != 64'd0 && capModify_b[67],
		capModify_a[159:96] != 64'd0 && capModify_b[66] };
      default: IF_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_cap_ETC___d476 =
		   capModify_a[81:66];
    endcase
  end
  always@(IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_capMod_ETC___d22 or
	  capModify_a or capModify_b or x_capFat_flags__h1721)
  begin
    case (IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_capMod_ETC___d22)
      4'd6:
	  CASE_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_c_ETC__q1 =
	      capModify_a[65];
      4'd7:
	  CASE_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_c_ETC__q1 =
	      capModify_b[96];
      4'd11:
	  CASE_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_c_ETC__q1 =
	      x_capFat_flags__h1721;
      default: CASE_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_c_ETC__q1 =
		   capModify_a[65];
    endcase
  end
  always@(IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_capMod_ETC___d22 or
	  capModify_a or
	  IF_capModify_a_BITS_159_TO_96_65_EQ_0_90_THEN__ETC___d489)
  begin
    case (IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_capMod_ETC___d22)
      4'd6, 4'd7:
	  CASE_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_c_ETC__q2 =
	      capModify_a[64:10];
      4'd11:
	  CASE_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_c_ETC__q2 =
	      IF_capModify_a_BITS_159_TO_96_65_EQ_0_90_THEN__ETC___d489;
      default: CASE_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_c_ETC__q2 =
		   { capModify_a[64:63],
		     (IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_capMod_ETC___d22 ==
		      4'd8) ?
		       18'd262143 :
		       capModify_a[62:45],
		     capModify_a[44:10] };
    endcase
  end
  always@(IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_capMod_ETC___d22 or
	  capModify_a or x_capFat_address__h1718)
  begin
    case (IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_capMod_ETC___d22)
      4'd6, 4'd7:
	  CASE_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_c_ETC__q3 =
	      capModify_a[161:96];
      4'd11:
	  CASE_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_c_ETC__q3 =
	      x_capFat_address__h1718;
      default: CASE_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_c_ETC__q3 =
		   capModify_a[161:96];
    endcase
  end
  always@(IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_capMod_ETC___d22 or
	  capModify_a or x_capFat_addrBits__h1719)
  begin
    case (IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_capMod_ETC___d22)
      4'd6, 4'd7:
	  CASE_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_c_ETC__q4 =
	      capModify_a[95:82];
      4'd11:
	  CASE_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_c_ETC__q4 =
	      x_capFat_addrBits__h1719;
      default: CASE_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_c_ETC__q4 =
		   capModify_a[95:82];
    endcase
  end
  always@(IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_capMod_ETC___d22 or
	  capModify_a or
	  x_tempFields_repBoundTopBits__h3647 or
	  capModify_b_BITS_37_TO_35_33_ULT_capModify_b_B_ETC___d334 or
	  capModify_b_BITS_23_TO_21_30_ULT_capModify_b_B_ETC___d336 or
	  IF_capModify_b_BITS_43_TO_38_70_EQ_52_34_THEN__ETC___d503 or
	  IF_capModify_a_BITS_159_TO_96_65_EQ_0_90_OR_ca_ETC___d510 or
	  IF_capModify_a_BITS_159_TO_96_65_EQ_0_90_OR_ca_ETC___d515)
  begin
    case (IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_capMod_ETC___d22)
      4'd6, 4'd7:
	  IF_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_cap_ETC___d521 =
	      capModify_a[9:0];
      4'd11:
	  IF_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_cap_ETC___d521 =
	      { x_tempFields_repBoundTopBits__h3647,
		capModify_a[159:96] == 64'd0 ||
		capModify_b_BITS_37_TO_35_33_ULT_capModify_b_B_ETC___d334,
		capModify_a[159:96] == 64'd0 ||
		capModify_b_BITS_23_TO_21_30_ULT_capModify_b_B_ETC___d336,
		capModify_a[159:96] == 64'd0 ||
		IF_capModify_b_BITS_43_TO_38_70_EQ_52_34_THEN__ETC___d503,
		IF_capModify_a_BITS_159_TO_96_65_EQ_0_90_OR_ca_ETC___d510,
		IF_capModify_a_BITS_159_TO_96_65_EQ_0_90_OR_ca_ETC___d515 };
      default: IF_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_cap_ETC___d521 =
		   capModify_a[9:0];
    endcase
  end
  always@(IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_capMod_ETC___d22 or
	  capModify_a or
	  capModify_a_BITS_159_TO_110_7_XOR_SEXT_capModi_ETC___d411)
  begin
    case (IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_capMod_ETC___d22)
      4'd6, 4'd7:
	  CASE_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_c_ETC__q5 =
	      capModify_a[162];
      4'd11:
	  CASE_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_c_ETC__q5 =
	      capModify_a[159:96] != 64'd0 &&
	      capModify_a_BITS_159_TO_110_7_XOR_SEXT_capModi_ETC___d411;
      default: CASE_IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_c_ETC__q5 =
		   IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_capMod_ETC___d22 ==
		   4'd8 ||
		   IF_capModify_func_BITS_8_TO_5_EQ_6_3_OR_capMod_ETC___d22 ==
		   4'd9 &&
		   capModify_a[162];
    endcase
  end
endmodule  // module_capModify

