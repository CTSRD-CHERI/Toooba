//
// Generated by Bluespec Compiler, version 2019.05.beta2 (build a88bf40db, 2019-05-24)
//
// On Sat Jun  6 22:30:44 BST 2020
//
//
// Ports:
// Name                         I/O  size props
// brAddrCalc                     O   163
// brAddrCalc_pc                  I   163
// brAddrCalc_val                 I   163
// brAddrCalc_iType               I     5
// brAddrCalc_imm                 I    64
// brAddrCalc_taken               I     1
// brAddrCalc_orig_inst           I    32
// brAddrCalc_cap                 I     1
//
// Combinational paths from inputs to outputs:
//   (brAddrCalc_pc,
//    brAddrCalc_val,
//    brAddrCalc_iType,
//    brAddrCalc_imm,
//    brAddrCalc_taken,
//    brAddrCalc_orig_inst,
//    brAddrCalc_cap) -> brAddrCalc
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module module_brAddrCalc(brAddrCalc_pc,
			 brAddrCalc_val,
			 brAddrCalc_iType,
			 brAddrCalc_imm,
			 brAddrCalc_taken,
			 brAddrCalc_orig_inst,
			 brAddrCalc_cap,
			 brAddrCalc);
  // value method brAddrCalc
  input  [162 : 0] brAddrCalc_pc;
  input  [162 : 0] brAddrCalc_val;
  input  [4 : 0] brAddrCalc_iType;
  input  [63 : 0] brAddrCalc_imm;
  input  brAddrCalc_taken;
  input  [31 : 0] brAddrCalc_orig_inst;
  input  brAddrCalc_cap;
  output [162 : 0] brAddrCalc;

  // signals for module outputs
  wire [162 : 0] brAddrCalc;

  // remaining internal signals
  reg [85 : 0] IF_brAddrCalc_iType_EQ_8_THEN_brAddrCalc_pc_BI_ETC___d150;
  reg [63 : 0] IF_brAddrCalc_iType_EQ_8_THEN_brAddrCalc_pc_BI_ETC___d131;
  reg [9 : 0] IF_brAddrCalc_iType_EQ_8_THEN_brAddrCalc_pc_BI_ETC___d210;
  reg IF_brAddrCalc_iType_EQ_8_THEN_brAddrCalc_imm_B_ETC___d101;
  wire [85 : 0] _0_CONCAT_IF_brAddrCalc_cap_THEN_brAddrCalc_val_ETC___d142;
  wire [65 : 0] cap_capFat_address__h832,
		pointer__h118,
		pointer__h434,
		pointer__h448,
		pointer__h501,
		result_d_address__h823,
		targetAddr_capFat_address__h463,
		x__h1235,
		x__h1265,
		x__h1296;
  wire [63 : 0] addBase__h1093,
		address__h106,
		address__h95,
		bot__h1096,
		x__h309,
		x__h751,
		x__h925;
  wire [49 : 0] highBitsfilter__h509,
		highOffsetBits__h127,
		highOffsetBits__h510,
		highOffsetBits__h603,
		mask__h1094,
		signBits__h507,
		signBits__h600,
		x__h537,
		x__h630;
  wire [15 : 0] newAddrBits__h812, x__h1150;
  wire [13 : 0] IF_brAddrCalc_iType_EQ_10_7_THEN_IF_brAddrCalc_ETC___d147,
		cap_capFat_addrBits__h833,
		cap_capFat_bounds_baseBits__h857,
		cap_capFat_bounds_topBits__h856,
		repBoundBits__h133,
		repBoundBits__h516,
		result_d_addrBits__h824,
		toBoundsM1__h137,
		toBoundsM1__h520,
		toBoundsM1__h613,
		toBounds__h136,
		toBounds__h519,
		toBounds__h612;
  wire [11 : 0] inc__h105;
  wire [5 : 0] IF_brAddrCalc_cap_THEN_brAddrCalc_val_BITS_43__ETC___d37;
  wire [4 : 0] IF_brAddrCalc_iType_EQ_10_7_THEN_IF_brAddrCalc_ETC___d206,
	       _0_CONCAT_brAddrCalc_pc_BITS_159_TO_96_22_PLUS__ETC___d204,
	       brAddrCalc_pc_BITS_161_TO_96_02_PLUS_0_CONCAT__ETC___d166;
  wire [3 : 0] IF_IF_brAddrCalc_cap_THEN_brAddrCalc_val_BITS__ETC___d190;
  wire [2 : 0] cap_tempFields_repBoundTopBits__h976,
	       repBound__h1600,
	       repBound__h1610;
  wire IF_brAddrCalc_cap_THEN_brAddrCalc_val_BITS_23__ETC___d178,
       IF_brAddrCalc_cap_THEN_brAddrCalc_val_BITS_37__ETC___d177,
       IF_brAddrCalc_imm_BIT_63_THEN_NOT_brAddrCalc_i_ETC___d24,
       IF_brAddrCalc_imm_BIT_63_THEN_NOT_brAddrCalc_i_ETC___d71,
       IF_brAddrCalc_val_BIT_159_8_THEN_NOT_brAddrCal_ETC___d91,
       NOT_brAddrCalc_pc_BITS_43_TO_38_ULT_50_6___d27,
       _0_CONCAT_IF_brAddrCalc_cap_THEN_brAddrCalc_val_ETC___d180,
       _0_CONCAT_brAddrCalc_pc_BITS_159_TO_96_22_PLUS__ETC___d194,
       brAddrCalc_imm_BITS_63_TO_14_XOR_SEXT_brAddrCa_ETC___d30,
       brAddrCalc_imm_BITS_63_TO_14_XOR_SEXT_brAddrCa_ETC___d96,
       brAddrCalc_pc_BITS_161_TO_96_02_PLUS_0_CONCAT__ETC___d156,
       brAddrCalc_pc_BITS_23_TO_21_4_ULT_brAddrCalc_p_ETC___d154,
       brAddrCalc_pc_BITS_37_TO_35_52_ULT_brAddrCalc__ETC___d153,
       brAddrCalc_val_BITS_159_TO_110_7_XOR_SEXT_brAd_ETC___d94;

  // value method brAddrCalc
  assign brAddrCalc =
	     { IF_brAddrCalc_iType_EQ_8_THEN_brAddrCalc_imm_B_ETC___d101,
	       targetAddr_capFat_address__h463,
	       IF_brAddrCalc_iType_EQ_8_THEN_brAddrCalc_pc_BI_ETC___d150,
	       IF_brAddrCalc_iType_EQ_8_THEN_brAddrCalc_pc_BI_ETC___d210 } ;

  // remaining internal signals
  assign IF_IF_brAddrCalc_cap_THEN_brAddrCalc_val_BITS__ETC___d190 =
	     { (IF_brAddrCalc_cap_THEN_brAddrCalc_val_BITS_37__ETC___d177 ==
		_0_CONCAT_IF_brAddrCalc_cap_THEN_brAddrCalc_val_ETC___d180) ?
		 2'd0 :
		 ((IF_brAddrCalc_cap_THEN_brAddrCalc_val_BITS_37__ETC___d177 &&
		   !_0_CONCAT_IF_brAddrCalc_cap_THEN_brAddrCalc_val_ETC___d180) ?
		    2'd1 :
		    2'd3),
	       (IF_brAddrCalc_cap_THEN_brAddrCalc_val_BITS_23__ETC___d178 ==
		_0_CONCAT_IF_brAddrCalc_cap_THEN_brAddrCalc_val_ETC___d180) ?
		 2'd0 :
		 ((IF_brAddrCalc_cap_THEN_brAddrCalc_val_BITS_23__ETC___d178 &&
		   !_0_CONCAT_IF_brAddrCalc_cap_THEN_brAddrCalc_val_ETC___d180) ?
		    2'd1 :
		    2'd3) } ;
  assign IF_brAddrCalc_cap_THEN_brAddrCalc_val_BITS_23__ETC___d178 =
	     cap_capFat_bounds_baseBits__h857[13:11] < repBound__h1600 ;
  assign IF_brAddrCalc_cap_THEN_brAddrCalc_val_BITS_37__ETC___d177 =
	     cap_capFat_bounds_topBits__h856[13:11] < repBound__h1600 ;
  assign IF_brAddrCalc_cap_THEN_brAddrCalc_val_BITS_43__ETC___d37 =
	     brAddrCalc_cap ? brAddrCalc_val[43:38] : brAddrCalc_pc[43:38] ;
  assign IF_brAddrCalc_iType_EQ_10_7_THEN_IF_brAddrCalc_ETC___d147 =
	     (brAddrCalc_iType == 5'd10) ?
	       (brAddrCalc_taken ? x__h1235[13:0] : x__h1296[13:0]) :
	       x__h1296[13:0] ;
  assign IF_brAddrCalc_iType_EQ_10_7_THEN_IF_brAddrCalc_ETC___d206 =
	     (brAddrCalc_iType == 5'd10) ?
	       (brAddrCalc_taken ?
		  brAddrCalc_pc_BITS_161_TO_96_02_PLUS_0_CONCAT__ETC___d166 :
		  _0_CONCAT_brAddrCalc_pc_BITS_159_TO_96_22_PLUS__ETC___d204) :
	       _0_CONCAT_brAddrCalc_pc_BITS_159_TO_96_22_PLUS__ETC___d204 ;
  assign IF_brAddrCalc_imm_BIT_63_THEN_NOT_brAddrCalc_i_ETC___d24 =
	     brAddrCalc_imm[63] ?
	       x__h309[13:0] >= toBounds__h136 &&
	       repBoundBits__h133 != brAddrCalc_pc[95:82] :
	       x__h309[13:0] < toBoundsM1__h137 ;
  assign IF_brAddrCalc_imm_BIT_63_THEN_NOT_brAddrCalc_i_ETC___d71 =
	     brAddrCalc_imm[63] ?
	       x__h925[13:0] >= toBounds__h519 &&
	       repBoundBits__h516 != cap_capFat_addrBits__h833 :
	       x__h925[13:0] < toBoundsM1__h520 ;
  assign IF_brAddrCalc_val_BIT_159_8_THEN_NOT_brAddrCal_ETC___d91 =
	     brAddrCalc_val[159] ?
	       x__h751[13:0] >= toBounds__h612 :
	       x__h751[13:0] <= toBoundsM1__h613 ;
  assign NOT_brAddrCalc_pc_BITS_43_TO_38_ULT_50_6___d27 =
	     brAddrCalc_pc[43:38] >= 6'd50 ;
  assign _0_CONCAT_IF_brAddrCalc_cap_THEN_brAddrCalc_val_ETC___d142 =
	     { x__h1265[13:0],
	       brAddrCalc_cap ?
		 brAddrCalc_val[81:10] :
		 brAddrCalc_pc[81:10] } ;
  assign _0_CONCAT_IF_brAddrCalc_cap_THEN_brAddrCalc_val_ETC___d180 =
	     x__h1265[13:11] < repBound__h1600 ;
  assign _0_CONCAT_brAddrCalc_pc_BITS_159_TO_96_22_PLUS__ETC___d194 =
	     x__h1296[13:11] < repBound__h1610 ;
  assign _0_CONCAT_brAddrCalc_pc_BITS_159_TO_96_22_PLUS__ETC___d204 =
	     { _0_CONCAT_brAddrCalc_pc_BITS_159_TO_96_22_PLUS__ETC___d194,
	       (brAddrCalc_pc_BITS_37_TO_35_52_ULT_brAddrCalc__ETC___d153 ==
		_0_CONCAT_brAddrCalc_pc_BITS_159_TO_96_22_PLUS__ETC___d194) ?
		 2'd0 :
		 ((brAddrCalc_pc_BITS_37_TO_35_52_ULT_brAddrCalc__ETC___d153 &&
		   !_0_CONCAT_brAddrCalc_pc_BITS_159_TO_96_22_PLUS__ETC___d194) ?
		    2'd1 :
		    2'd3),
	       (brAddrCalc_pc_BITS_23_TO_21_4_ULT_brAddrCalc_p_ETC___d154 ==
		_0_CONCAT_brAddrCalc_pc_BITS_159_TO_96_22_PLUS__ETC___d194) ?
		 2'd0 :
		 ((brAddrCalc_pc_BITS_23_TO_21_4_ULT_brAddrCalc_p_ETC___d154 &&
		   !_0_CONCAT_brAddrCalc_pc_BITS_159_TO_96_22_PLUS__ETC___d194) ?
		    2'd1 :
		    2'd3) } ;
  assign addBase__h1093 =
	     { {48{x__h1150[15]}}, x__h1150 } << brAddrCalc_pc[43:38] ;
  assign address__h106 =
	     brAddrCalc_pc[159:96] + { {52{inc__h105[11]}}, inc__h105 } ;
  assign address__h95 = { pointer__h501[63:1], 1'b0 } ;
  assign bot__h1096 =
	     { brAddrCalc_pc[159:110] & mask__h1094, 14'd0 } +
	     addBase__h1093 ;
  assign brAddrCalc_imm_BITS_63_TO_14_XOR_SEXT_brAddrCa_ETC___d30 =
	     (highOffsetBits__h127 == 50'd0 &&
	      IF_brAddrCalc_imm_BIT_63_THEN_NOT_brAddrCalc_i_ETC___d24 ||
	      NOT_brAddrCalc_pc_BITS_43_TO_38_ULT_50_6___d27) &&
	     brAddrCalc_pc[162] ;
  assign brAddrCalc_imm_BITS_63_TO_14_XOR_SEXT_brAddrCa_ETC___d96 =
	     (highOffsetBits__h510 == 50'd0 &&
	      IF_brAddrCalc_imm_BIT_63_THEN_NOT_brAddrCalc_i_ETC___d71 ||
	      IF_brAddrCalc_cap_THEN_brAddrCalc_val_BITS_43__ETC___d37 >=
	      6'd50) &&
	     (brAddrCalc_cap ?
		brAddrCalc_val[162] :
		brAddrCalc_val_BITS_159_TO_110_7_XOR_SEXT_brAd_ETC___d94) ;
  assign brAddrCalc_pc_BITS_161_TO_96_02_PLUS_0_CONCAT__ETC___d156 =
	     x__h1235[13:11] < repBound__h1610 ;
  assign brAddrCalc_pc_BITS_161_TO_96_02_PLUS_0_CONCAT__ETC___d166 =
	     { brAddrCalc_pc_BITS_161_TO_96_02_PLUS_0_CONCAT__ETC___d156,
	       (brAddrCalc_pc_BITS_37_TO_35_52_ULT_brAddrCalc__ETC___d153 ==
		brAddrCalc_pc_BITS_161_TO_96_02_PLUS_0_CONCAT__ETC___d156) ?
		 2'd0 :
		 ((brAddrCalc_pc_BITS_37_TO_35_52_ULT_brAddrCalc__ETC___d153 &&
		   !brAddrCalc_pc_BITS_161_TO_96_02_PLUS_0_CONCAT__ETC___d156) ?
		    2'd1 :
		    2'd3),
	       (brAddrCalc_pc_BITS_23_TO_21_4_ULT_brAddrCalc_p_ETC___d154 ==
		brAddrCalc_pc_BITS_161_TO_96_02_PLUS_0_CONCAT__ETC___d156) ?
		 2'd0 :
		 ((brAddrCalc_pc_BITS_23_TO_21_4_ULT_brAddrCalc_p_ETC___d154 &&
		   !brAddrCalc_pc_BITS_161_TO_96_02_PLUS_0_CONCAT__ETC___d156) ?
		    2'd1 :
		    2'd3) } ;
  assign brAddrCalc_pc_BITS_23_TO_21_4_ULT_brAddrCalc_p_ETC___d154 =
	     brAddrCalc_pc[23:21] < repBound__h1610 ;
  assign brAddrCalc_pc_BITS_37_TO_35_52_ULT_brAddrCalc__ETC___d153 =
	     brAddrCalc_pc[37:35] < repBound__h1610 ;
  assign brAddrCalc_val_BITS_159_TO_110_7_XOR_SEXT_brAd_ETC___d94 =
	     (highOffsetBits__h603 == 50'd0 &&
	      IF_brAddrCalc_val_BIT_159_8_THEN_NOT_brAddrCal_ETC___d91 ||
	      NOT_brAddrCalc_pc_BITS_43_TO_38_ULT_50_6___d27) &&
	     brAddrCalc_pc[162] ;
  assign cap_capFat_addrBits__h833 =
	     brAddrCalc_cap ?
	       brAddrCalc_val[95:82] :
	       result_d_addrBits__h824 ;
  assign cap_capFat_address__h832 =
	     brAddrCalc_cap ?
	       brAddrCalc_val[161:96] :
	       result_d_address__h823 ;
  assign cap_capFat_bounds_baseBits__h857 =
	     brAddrCalc_cap ? brAddrCalc_val[23:10] : brAddrCalc_pc[23:10] ;
  assign cap_capFat_bounds_topBits__h856 =
	     brAddrCalc_cap ? brAddrCalc_val[37:24] : brAddrCalc_pc[37:24] ;
  assign cap_tempFields_repBoundTopBits__h976 =
	     brAddrCalc_cap ? brAddrCalc_val[9:7] : repBound__h1610 ;
  assign highBitsfilter__h509 =
	     50'h3FFFFFFFFFFFF <<
	     IF_brAddrCalc_cap_THEN_brAddrCalc_val_BITS_43__ETC___d37 ;
  assign highOffsetBits__h127 = x__h537 & mask__h1094 ;
  assign highOffsetBits__h510 = x__h537 & highBitsfilter__h509 ;
  assign highOffsetBits__h603 = x__h630 & mask__h1094 ;
  assign inc__h105 = (brAddrCalc_orig_inst[1:0] == 2'b11) ? 12'd4 : 12'd2 ;
  assign mask__h1094 = 50'h3FFFFFFFFFFFF << brAddrCalc_pc[43:38] ;
  assign newAddrBits__h812 =
	     { 2'd0, brAddrCalc_pc[23:10] } + { 2'd0, x__h751[13:0] } ;
  assign pointer__h118 = brAddrCalc_pc[161:96] + { 2'd0, brAddrCalc_imm } ;
  assign pointer__h434 = { 2'd0, address__h95 } ;
  assign pointer__h448 = { 2'd0, address__h106 } ;
  assign pointer__h501 = cap_capFat_address__h832 + { 2'd0, brAddrCalc_imm } ;
  assign repBoundBits__h133 = { brAddrCalc_pc[9:7], 11'd0 } ;
  assign repBoundBits__h516 =
	     { cap_tempFields_repBoundTopBits__h976, 11'd0 } ;
  assign repBound__h1600 = cap_capFat_bounds_baseBits__h857[13:11] - 3'b001 ;
  assign repBound__h1610 = brAddrCalc_pc[23:21] - 3'b001 ;
  assign result_d_addrBits__h824 =
	     (brAddrCalc_pc[43:38] == 6'd52) ?
	       { 1'b0, newAddrBits__h812[12:0] } :
	       newAddrBits__h812[13:0] ;
  assign result_d_address__h823 =
	     { 2'd0, bot__h1096 } + { 2'd0, brAddrCalc_val[159:96] } ;
  assign signBits__h507 = {50{brAddrCalc_imm[63]}} ;
  assign signBits__h600 = {50{brAddrCalc_val[159]}} ;
  assign targetAddr_capFat_address__h463 =
	     { 2'd0,
	       IF_brAddrCalc_iType_EQ_8_THEN_brAddrCalc_pc_BI_ETC___d131 } ;
  assign toBoundsM1__h137 = repBoundBits__h133 + ~brAddrCalc_pc[95:82] ;
  assign toBoundsM1__h520 = repBoundBits__h516 + ~cap_capFat_addrBits__h833 ;
  assign toBoundsM1__h613 = { 3'b110, ~brAddrCalc_pc[20:10] } ;
  assign toBounds__h136 = repBoundBits__h133 - brAddrCalc_pc[95:82] ;
  assign toBounds__h519 = repBoundBits__h516 - cap_capFat_addrBits__h833 ;
  assign toBounds__h612 = 14'd14336 - { 3'b0, brAddrCalc_pc[20:10] } ;
  assign x__h1150 = { brAddrCalc_pc[1:0], brAddrCalc_pc[23:10] } ;
  assign x__h1235 = pointer__h118 >> brAddrCalc_pc[43:38] ;
  assign x__h1265 =
	     pointer__h434 >>
	     IF_brAddrCalc_cap_THEN_brAddrCalc_val_BITS_43__ETC___d37 ;
  assign x__h1296 = pointer__h448 >> brAddrCalc_pc[43:38] ;
  assign x__h309 = brAddrCalc_imm >> brAddrCalc_pc[43:38] ;
  assign x__h537 = brAddrCalc_imm[63:14] ^ signBits__h507 ;
  assign x__h630 = brAddrCalc_val[159:110] ^ signBits__h600 ;
  assign x__h751 = brAddrCalc_val[159:96] >> brAddrCalc_pc[43:38] ;
  assign x__h925 =
	     brAddrCalc_imm >>
	     IF_brAddrCalc_cap_THEN_brAddrCalc_val_BITS_43__ETC___d37 ;
  always@(brAddrCalc_iType or
	  address__h106 or pointer__h118 or address__h95 or brAddrCalc_taken)
  begin
    case (brAddrCalc_iType)
      5'd8:
	  IF_brAddrCalc_iType_EQ_8_THEN_brAddrCalc_pc_BI_ETC___d131 =
	      pointer__h118[63:0];
      5'd9, 5'd11, 5'd12:
	  IF_brAddrCalc_iType_EQ_8_THEN_brAddrCalc_pc_BI_ETC___d131 =
	      address__h95;
      5'd10:
	  IF_brAddrCalc_iType_EQ_8_THEN_brAddrCalc_pc_BI_ETC___d131 =
	      brAddrCalc_taken ? pointer__h118[63:0] : address__h106;
      default: IF_brAddrCalc_iType_EQ_8_THEN_brAddrCalc_pc_BI_ETC___d131 =
		   address__h106;
    endcase
  end
  always@(brAddrCalc_iType or
	  IF_brAddrCalc_iType_EQ_10_7_THEN_IF_brAddrCalc_ETC___d147 or
	  brAddrCalc_pc or
	  x__h1235 or
	  _0_CONCAT_IF_brAddrCalc_cap_THEN_brAddrCalc_val_ETC___d142)
  begin
    case (brAddrCalc_iType)
      5'd8:
	  IF_brAddrCalc_iType_EQ_8_THEN_brAddrCalc_pc_BI_ETC___d150 =
	      { x__h1235[13:0], brAddrCalc_pc[81:10] };
      5'd9, 5'd11, 5'd12:
	  IF_brAddrCalc_iType_EQ_8_THEN_brAddrCalc_pc_BI_ETC___d150 =
	      _0_CONCAT_IF_brAddrCalc_cap_THEN_brAddrCalc_val_ETC___d142;
      default: IF_brAddrCalc_iType_EQ_8_THEN_brAddrCalc_pc_BI_ETC___d150 =
		   { IF_brAddrCalc_iType_EQ_10_7_THEN_IF_brAddrCalc_ETC___d147,
		     brAddrCalc_pc[81:10] };
    endcase
  end
  always@(brAddrCalc_iType or
	  brAddrCalc_pc or
	  brAddrCalc_imm_BITS_63_TO_14_XOR_SEXT_brAddrCa_ETC___d30 or
	  brAddrCalc_imm_BITS_63_TO_14_XOR_SEXT_brAddrCa_ETC___d96 or
	  brAddrCalc_taken)
  begin
    case (brAddrCalc_iType)
      5'd8:
	  IF_brAddrCalc_iType_EQ_8_THEN_brAddrCalc_imm_B_ETC___d101 =
	      brAddrCalc_imm_BITS_63_TO_14_XOR_SEXT_brAddrCa_ETC___d30;
      5'd9, 5'd11, 5'd12:
	  IF_brAddrCalc_iType_EQ_8_THEN_brAddrCalc_imm_B_ETC___d101 =
	      brAddrCalc_imm_BITS_63_TO_14_XOR_SEXT_brAddrCa_ETC___d96;
      5'd10:
	  IF_brAddrCalc_iType_EQ_8_THEN_brAddrCalc_imm_B_ETC___d101 =
	      brAddrCalc_taken ?
		brAddrCalc_imm_BITS_63_TO_14_XOR_SEXT_brAddrCa_ETC___d30 :
		brAddrCalc_pc[162];
      default: IF_brAddrCalc_iType_EQ_8_THEN_brAddrCalc_imm_B_ETC___d101 =
		   brAddrCalc_pc[162];
    endcase
  end
  always@(brAddrCalc_iType or
	  repBound__h1610 or
	  brAddrCalc_pc_BITS_37_TO_35_52_ULT_brAddrCalc__ETC___d153 or
	  brAddrCalc_pc_BITS_23_TO_21_4_ULT_brAddrCalc_p_ETC___d154 or
	  IF_brAddrCalc_iType_EQ_10_7_THEN_IF_brAddrCalc_ETC___d206 or
	  brAddrCalc_pc_BITS_161_TO_96_02_PLUS_0_CONCAT__ETC___d166 or
	  repBound__h1600 or
	  IF_brAddrCalc_cap_THEN_brAddrCalc_val_BITS_37__ETC___d177 or
	  IF_brAddrCalc_cap_THEN_brAddrCalc_val_BITS_23__ETC___d178 or
	  _0_CONCAT_IF_brAddrCalc_cap_THEN_brAddrCalc_val_ETC___d180 or
	  IF_IF_brAddrCalc_cap_THEN_brAddrCalc_val_BITS__ETC___d190)
  begin
    case (brAddrCalc_iType)
      5'd8:
	  IF_brAddrCalc_iType_EQ_8_THEN_brAddrCalc_pc_BI_ETC___d210 =
	      { repBound__h1610,
		brAddrCalc_pc_BITS_37_TO_35_52_ULT_brAddrCalc__ETC___d153,
		brAddrCalc_pc_BITS_23_TO_21_4_ULT_brAddrCalc_p_ETC___d154,
		brAddrCalc_pc_BITS_161_TO_96_02_PLUS_0_CONCAT__ETC___d166 };
      5'd9, 5'd11, 5'd12:
	  IF_brAddrCalc_iType_EQ_8_THEN_brAddrCalc_pc_BI_ETC___d210 =
	      { repBound__h1600,
		IF_brAddrCalc_cap_THEN_brAddrCalc_val_BITS_37__ETC___d177,
		IF_brAddrCalc_cap_THEN_brAddrCalc_val_BITS_23__ETC___d178,
		_0_CONCAT_IF_brAddrCalc_cap_THEN_brAddrCalc_val_ETC___d180,
		IF_IF_brAddrCalc_cap_THEN_brAddrCalc_val_BITS__ETC___d190 };
      default: IF_brAddrCalc_iType_EQ_8_THEN_brAddrCalc_pc_BI_ETC___d210 =
		   { repBound__h1610,
		     brAddrCalc_pc_BITS_37_TO_35_52_ULT_brAddrCalc__ETC___d153,
		     brAddrCalc_pc_BITS_23_TO_21_4_ULT_brAddrCalc_p_ETC___d154,
		     IF_brAddrCalc_iType_EQ_10_7_THEN_IF_brAddrCalc_ETC___d206 };
    endcase
  end
endmodule  // module_brAddrCalc

