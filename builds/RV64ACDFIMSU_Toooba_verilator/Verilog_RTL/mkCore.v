//
// Generated by Bluespec Compiler (build e7facc6)
//
// On Wed Mar 25 14:07:06 GMT 2020
//
//
// Ports:
// Name                         I/O  size props
// RDY_coreReq_start              O     1 const
// RDY_coreReq_perfReq            O     1 reg
// coreIndInv_perfResp            O    73
// RDY_coreIndInv_perfResp        O     1 reg
// RDY_coreIndInv_terminate       O     1 reg
// dCacheToParent_rsToP_notEmpty  O     1
// RDY_dCacheToParent_rsToP_notEmpty  O     1 const
// RDY_dCacheToParent_rsToP_deq   O     1
// dCacheToParent_rsToP_first     O   579
// RDY_dCacheToParent_rsToP_first  O     1
// dCacheToParent_rqToP_notEmpty  O     1
// RDY_dCacheToParent_rqToP_notEmpty  O     1 const
// RDY_dCacheToParent_rqToP_deq   O     1
// dCacheToParent_rqToP_first     O    72
// RDY_dCacheToParent_rqToP_first  O     1
// dCacheToParent_fromP_notFull   O     1
// RDY_dCacheToParent_fromP_notFull  O     1 const
// RDY_dCacheToParent_fromP_enq   O     1
// iCacheToParent_rsToP_notEmpty  O     1
// RDY_iCacheToParent_rsToP_notEmpty  O     1 const
// RDY_iCacheToParent_rsToP_deq   O     1
// iCacheToParent_rsToP_first     O   579
// RDY_iCacheToParent_rsToP_first  O     1
// iCacheToParent_rqToP_notEmpty  O     1
// RDY_iCacheToParent_rqToP_notEmpty  O     1 const
// RDY_iCacheToParent_rqToP_deq   O     1
// iCacheToParent_rqToP_first     O    72
// RDY_iCacheToParent_rqToP_first  O     1
// iCacheToParent_fromP_notFull   O     1
// RDY_iCacheToParent_fromP_notFull  O     1 const
// RDY_iCacheToParent_fromP_enq   O     1
// tlbToMem_memReq_notEmpty       O     1
// RDY_tlbToMem_memReq_notEmpty   O     1 const
// RDY_tlbToMem_memReq_deq        O     1
// tlbToMem_memReq_first          O    65
// RDY_tlbToMem_memReq_first      O     1
// tlbToMem_respLd_notFull        O     1
// RDY_tlbToMem_respLd_notFull    O     1 const
// RDY_tlbToMem_respLd_enq        O     1
// mmioToPlatform_cRq_notEmpty    O     1
// RDY_mmioToPlatform_cRq_notEmpty  O     1 const
// RDY_mmioToPlatform_cRq_deq     O     1
// mmioToPlatform_cRq_first       O   142
// RDY_mmioToPlatform_cRq_first   O     1
// mmioToPlatform_pRs_notFull     O     1
// RDY_mmioToPlatform_pRs_notFull  O     1 const
// RDY_mmioToPlatform_pRs_enq     O     1
// mmioToPlatform_pRq_notFull     O     1
// RDY_mmioToPlatform_pRq_notFull  O     1 const
// RDY_mmioToPlatform_pRq_enq     O     1
// mmioToPlatform_cRs_notEmpty    O     1
// RDY_mmioToPlatform_cRs_notEmpty  O     1 const
// RDY_mmioToPlatform_cRs_deq     O     1
// mmioToPlatform_cRs_first       O     1 reg
// RDY_mmioToPlatform_cRs_first   O     1
// RDY_mmioToPlatform_setTime     O     1 const
// sendDoStats                    O     1 reg
// RDY_sendDoStats                O     1 reg
// RDY_recvDoStats                O     1 const
// deadlock_dCacheCRqStuck_get    O    73 const
// RDY_deadlock_dCacheCRqStuck_get  O     1 const
// deadlock_dCachePRqStuck_get    O    68 const
// RDY_deadlock_dCachePRqStuck_get  O     1 const
// deadlock_iCacheCRqStuck_get    O    68 const
// RDY_deadlock_iCacheCRqStuck_get  O     1 const
// deadlock_iCachePRqStuck_get    O    68 const
// RDY_deadlock_iCachePRqStuck_get  O     1 const
// deadlock_renameInstStuck_get   O    78 const
// RDY_deadlock_renameInstStuck_get  O     1 const
// deadlock_renameCorrectPathStuck_get  O    78 const
// RDY_deadlock_renameCorrectPathStuck_get  O     1 const
// deadlock_commitInstStuck_get   O   163 const
// RDY_deadlock_commitInstStuck_get  O     1 const
// deadlock_commitUserInstStuck_get  O   163 const
// RDY_deadlock_commitUserInstStuck_get  O     1 const
// RDY_deadlock_checkStarted_get  O     1 const
// renameDebug_renameErr_get      O    89 const
// RDY_renameDebug_renameErr_get  O     1 const
// RDY_setMEIP                    O     1 const
// RDY_setSEIP                    O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// coreReq_start_startpc          I    64
// coreReq_start_toHostAddr       I    64 reg
// coreReq_start_fromHostAddr     I    64 reg
// coreReq_perfReq_loc            I     4 reg
// coreReq_perfReq_t              I     5 reg
// dCacheToParent_fromP_enq_x     I   583
// iCacheToParent_fromP_enq_x     I   583
// tlbToMem_respLd_enq_x          I    65
// mmioToPlatform_pRs_enq_x       I    67
// mmioToPlatform_pRq_enq_x       I    39
// mmioToPlatform_setTime_t       I    64 reg
// recvDoStats_x                  I     1 reg
// setMEIP_v                      I     1 reg
// setSEIP_v                      I     1
// EN_coreReq_start               I     1
// EN_coreReq_perfReq             I     1
// EN_coreIndInv_terminate        I     1
// EN_dCacheToParent_rsToP_deq    I     1
// EN_dCacheToParent_rqToP_deq    I     1
// EN_dCacheToParent_fromP_enq    I     1
// EN_iCacheToParent_rsToP_deq    I     1
// EN_iCacheToParent_rqToP_deq    I     1
// EN_iCacheToParent_fromP_enq    I     1
// EN_tlbToMem_memReq_deq         I     1
// EN_tlbToMem_respLd_enq         I     1
// EN_mmioToPlatform_cRq_deq      I     1
// EN_mmioToPlatform_pRs_enq      I     1
// EN_mmioToPlatform_pRq_enq      I     1
// EN_mmioToPlatform_cRs_deq      I     1
// EN_mmioToPlatform_setTime      I     1
// EN_recvDoStats                 I     1
// EN_deadlock_checkStarted_get   I     1 unused
// EN_setMEIP                     I     1
// EN_setSEIP                     I     1
// EN_coreIndInv_perfResp         I     1
// EN_sendDoStats                 I     1
// EN_deadlock_dCacheCRqStuck_get  I     1 unused
// EN_deadlock_dCachePRqStuck_get  I     1 unused
// EN_deadlock_iCacheCRqStuck_get  I     1 unused
// EN_deadlock_iCachePRqStuck_get  I     1 unused
// EN_deadlock_renameInstStuck_get  I     1 unused
// EN_deadlock_renameCorrectPathStuck_get  I     1 unused
// EN_deadlock_commitInstStuck_get  I     1 unused
// EN_deadlock_commitUserInstStuck_get  I     1 unused
// EN_renameDebug_renameErr_get   I     1 unused
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkCore(CLK,
	      RST_N,

	      coreReq_start_startpc,
	      coreReq_start_toHostAddr,
	      coreReq_start_fromHostAddr,
	      EN_coreReq_start,
	      RDY_coreReq_start,

	      coreReq_perfReq_loc,
	      coreReq_perfReq_t,
	      EN_coreReq_perfReq,
	      RDY_coreReq_perfReq,

	      EN_coreIndInv_perfResp,
	      coreIndInv_perfResp,
	      RDY_coreIndInv_perfResp,

	      EN_coreIndInv_terminate,
	      RDY_coreIndInv_terminate,

	      dCacheToParent_rsToP_notEmpty,
	      RDY_dCacheToParent_rsToP_notEmpty,

	      EN_dCacheToParent_rsToP_deq,
	      RDY_dCacheToParent_rsToP_deq,

	      dCacheToParent_rsToP_first,
	      RDY_dCacheToParent_rsToP_first,

	      dCacheToParent_rqToP_notEmpty,
	      RDY_dCacheToParent_rqToP_notEmpty,

	      EN_dCacheToParent_rqToP_deq,
	      RDY_dCacheToParent_rqToP_deq,

	      dCacheToParent_rqToP_first,
	      RDY_dCacheToParent_rqToP_first,

	      dCacheToParent_fromP_notFull,
	      RDY_dCacheToParent_fromP_notFull,

	      dCacheToParent_fromP_enq_x,
	      EN_dCacheToParent_fromP_enq,
	      RDY_dCacheToParent_fromP_enq,

	      iCacheToParent_rsToP_notEmpty,
	      RDY_iCacheToParent_rsToP_notEmpty,

	      EN_iCacheToParent_rsToP_deq,
	      RDY_iCacheToParent_rsToP_deq,

	      iCacheToParent_rsToP_first,
	      RDY_iCacheToParent_rsToP_first,

	      iCacheToParent_rqToP_notEmpty,
	      RDY_iCacheToParent_rqToP_notEmpty,

	      EN_iCacheToParent_rqToP_deq,
	      RDY_iCacheToParent_rqToP_deq,

	      iCacheToParent_rqToP_first,
	      RDY_iCacheToParent_rqToP_first,

	      iCacheToParent_fromP_notFull,
	      RDY_iCacheToParent_fromP_notFull,

	      iCacheToParent_fromP_enq_x,
	      EN_iCacheToParent_fromP_enq,
	      RDY_iCacheToParent_fromP_enq,

	      tlbToMem_memReq_notEmpty,
	      RDY_tlbToMem_memReq_notEmpty,

	      EN_tlbToMem_memReq_deq,
	      RDY_tlbToMem_memReq_deq,

	      tlbToMem_memReq_first,
	      RDY_tlbToMem_memReq_first,

	      tlbToMem_respLd_notFull,
	      RDY_tlbToMem_respLd_notFull,

	      tlbToMem_respLd_enq_x,
	      EN_tlbToMem_respLd_enq,
	      RDY_tlbToMem_respLd_enq,

	      mmioToPlatform_cRq_notEmpty,
	      RDY_mmioToPlatform_cRq_notEmpty,

	      EN_mmioToPlatform_cRq_deq,
	      RDY_mmioToPlatform_cRq_deq,

	      mmioToPlatform_cRq_first,
	      RDY_mmioToPlatform_cRq_first,

	      mmioToPlatform_pRs_notFull,
	      RDY_mmioToPlatform_pRs_notFull,

	      mmioToPlatform_pRs_enq_x,
	      EN_mmioToPlatform_pRs_enq,
	      RDY_mmioToPlatform_pRs_enq,

	      mmioToPlatform_pRq_notFull,
	      RDY_mmioToPlatform_pRq_notFull,

	      mmioToPlatform_pRq_enq_x,
	      EN_mmioToPlatform_pRq_enq,
	      RDY_mmioToPlatform_pRq_enq,

	      mmioToPlatform_cRs_notEmpty,
	      RDY_mmioToPlatform_cRs_notEmpty,

	      EN_mmioToPlatform_cRs_deq,
	      RDY_mmioToPlatform_cRs_deq,

	      mmioToPlatform_cRs_first,
	      RDY_mmioToPlatform_cRs_first,

	      mmioToPlatform_setTime_t,
	      EN_mmioToPlatform_setTime,
	      RDY_mmioToPlatform_setTime,

	      EN_sendDoStats,
	      sendDoStats,
	      RDY_sendDoStats,

	      recvDoStats_x,
	      EN_recvDoStats,
	      RDY_recvDoStats,

	      EN_deadlock_dCacheCRqStuck_get,
	      deadlock_dCacheCRqStuck_get,
	      RDY_deadlock_dCacheCRqStuck_get,

	      EN_deadlock_dCachePRqStuck_get,
	      deadlock_dCachePRqStuck_get,
	      RDY_deadlock_dCachePRqStuck_get,

	      EN_deadlock_iCacheCRqStuck_get,
	      deadlock_iCacheCRqStuck_get,
	      RDY_deadlock_iCacheCRqStuck_get,

	      EN_deadlock_iCachePRqStuck_get,
	      deadlock_iCachePRqStuck_get,
	      RDY_deadlock_iCachePRqStuck_get,

	      EN_deadlock_renameInstStuck_get,
	      deadlock_renameInstStuck_get,
	      RDY_deadlock_renameInstStuck_get,

	      EN_deadlock_renameCorrectPathStuck_get,
	      deadlock_renameCorrectPathStuck_get,
	      RDY_deadlock_renameCorrectPathStuck_get,

	      EN_deadlock_commitInstStuck_get,
	      deadlock_commitInstStuck_get,
	      RDY_deadlock_commitInstStuck_get,

	      EN_deadlock_commitUserInstStuck_get,
	      deadlock_commitUserInstStuck_get,
	      RDY_deadlock_commitUserInstStuck_get,

	      EN_deadlock_checkStarted_get,
	      RDY_deadlock_checkStarted_get,

	      EN_renameDebug_renameErr_get,
	      renameDebug_renameErr_get,
	      RDY_renameDebug_renameErr_get,

	      setMEIP_v,
	      EN_setMEIP,
	      RDY_setMEIP,

	      setSEIP_v,
	      EN_setSEIP,
	      RDY_setSEIP);
  input  CLK;
  input  RST_N;

  // action method coreReq_start
  input  [63 : 0] coreReq_start_startpc;
  input  [63 : 0] coreReq_start_toHostAddr;
  input  [63 : 0] coreReq_start_fromHostAddr;
  input  EN_coreReq_start;
  output RDY_coreReq_start;

  // action method coreReq_perfReq
  input  [3 : 0] coreReq_perfReq_loc;
  input  [4 : 0] coreReq_perfReq_t;
  input  EN_coreReq_perfReq;
  output RDY_coreReq_perfReq;

  // actionvalue method coreIndInv_perfResp
  input  EN_coreIndInv_perfResp;
  output [72 : 0] coreIndInv_perfResp;
  output RDY_coreIndInv_perfResp;

  // action method coreIndInv_terminate
  input  EN_coreIndInv_terminate;
  output RDY_coreIndInv_terminate;

  // value method dCacheToParent_rsToP_notEmpty
  output dCacheToParent_rsToP_notEmpty;
  output RDY_dCacheToParent_rsToP_notEmpty;

  // action method dCacheToParent_rsToP_deq
  input  EN_dCacheToParent_rsToP_deq;
  output RDY_dCacheToParent_rsToP_deq;

  // value method dCacheToParent_rsToP_first
  output [578 : 0] dCacheToParent_rsToP_first;
  output RDY_dCacheToParent_rsToP_first;

  // value method dCacheToParent_rqToP_notEmpty
  output dCacheToParent_rqToP_notEmpty;
  output RDY_dCacheToParent_rqToP_notEmpty;

  // action method dCacheToParent_rqToP_deq
  input  EN_dCacheToParent_rqToP_deq;
  output RDY_dCacheToParent_rqToP_deq;

  // value method dCacheToParent_rqToP_first
  output [71 : 0] dCacheToParent_rqToP_first;
  output RDY_dCacheToParent_rqToP_first;

  // value method dCacheToParent_fromP_notFull
  output dCacheToParent_fromP_notFull;
  output RDY_dCacheToParent_fromP_notFull;

  // action method dCacheToParent_fromP_enq
  input  [582 : 0] dCacheToParent_fromP_enq_x;
  input  EN_dCacheToParent_fromP_enq;
  output RDY_dCacheToParent_fromP_enq;

  // value method iCacheToParent_rsToP_notEmpty
  output iCacheToParent_rsToP_notEmpty;
  output RDY_iCacheToParent_rsToP_notEmpty;

  // action method iCacheToParent_rsToP_deq
  input  EN_iCacheToParent_rsToP_deq;
  output RDY_iCacheToParent_rsToP_deq;

  // value method iCacheToParent_rsToP_first
  output [578 : 0] iCacheToParent_rsToP_first;
  output RDY_iCacheToParent_rsToP_first;

  // value method iCacheToParent_rqToP_notEmpty
  output iCacheToParent_rqToP_notEmpty;
  output RDY_iCacheToParent_rqToP_notEmpty;

  // action method iCacheToParent_rqToP_deq
  input  EN_iCacheToParent_rqToP_deq;
  output RDY_iCacheToParent_rqToP_deq;

  // value method iCacheToParent_rqToP_first
  output [71 : 0] iCacheToParent_rqToP_first;
  output RDY_iCacheToParent_rqToP_first;

  // value method iCacheToParent_fromP_notFull
  output iCacheToParent_fromP_notFull;
  output RDY_iCacheToParent_fromP_notFull;

  // action method iCacheToParent_fromP_enq
  input  [582 : 0] iCacheToParent_fromP_enq_x;
  input  EN_iCacheToParent_fromP_enq;
  output RDY_iCacheToParent_fromP_enq;

  // value method tlbToMem_memReq_notEmpty
  output tlbToMem_memReq_notEmpty;
  output RDY_tlbToMem_memReq_notEmpty;

  // action method tlbToMem_memReq_deq
  input  EN_tlbToMem_memReq_deq;
  output RDY_tlbToMem_memReq_deq;

  // value method tlbToMem_memReq_first
  output [64 : 0] tlbToMem_memReq_first;
  output RDY_tlbToMem_memReq_first;

  // value method tlbToMem_respLd_notFull
  output tlbToMem_respLd_notFull;
  output RDY_tlbToMem_respLd_notFull;

  // action method tlbToMem_respLd_enq
  input  [64 : 0] tlbToMem_respLd_enq_x;
  input  EN_tlbToMem_respLd_enq;
  output RDY_tlbToMem_respLd_enq;

  // value method mmioToPlatform_cRq_notEmpty
  output mmioToPlatform_cRq_notEmpty;
  output RDY_mmioToPlatform_cRq_notEmpty;

  // action method mmioToPlatform_cRq_deq
  input  EN_mmioToPlatform_cRq_deq;
  output RDY_mmioToPlatform_cRq_deq;

  // value method mmioToPlatform_cRq_first
  output [141 : 0] mmioToPlatform_cRq_first;
  output RDY_mmioToPlatform_cRq_first;

  // value method mmioToPlatform_pRs_notFull
  output mmioToPlatform_pRs_notFull;
  output RDY_mmioToPlatform_pRs_notFull;

  // action method mmioToPlatform_pRs_enq
  input  [66 : 0] mmioToPlatform_pRs_enq_x;
  input  EN_mmioToPlatform_pRs_enq;
  output RDY_mmioToPlatform_pRs_enq;

  // value method mmioToPlatform_pRq_notFull
  output mmioToPlatform_pRq_notFull;
  output RDY_mmioToPlatform_pRq_notFull;

  // action method mmioToPlatform_pRq_enq
  input  [38 : 0] mmioToPlatform_pRq_enq_x;
  input  EN_mmioToPlatform_pRq_enq;
  output RDY_mmioToPlatform_pRq_enq;

  // value method mmioToPlatform_cRs_notEmpty
  output mmioToPlatform_cRs_notEmpty;
  output RDY_mmioToPlatform_cRs_notEmpty;

  // action method mmioToPlatform_cRs_deq
  input  EN_mmioToPlatform_cRs_deq;
  output RDY_mmioToPlatform_cRs_deq;

  // value method mmioToPlatform_cRs_first
  output mmioToPlatform_cRs_first;
  output RDY_mmioToPlatform_cRs_first;

  // action method mmioToPlatform_setTime
  input  [63 : 0] mmioToPlatform_setTime_t;
  input  EN_mmioToPlatform_setTime;
  output RDY_mmioToPlatform_setTime;

  // actionvalue method sendDoStats
  input  EN_sendDoStats;
  output sendDoStats;
  output RDY_sendDoStats;

  // action method recvDoStats
  input  recvDoStats_x;
  input  EN_recvDoStats;
  output RDY_recvDoStats;

  // actionvalue method deadlock_dCacheCRqStuck_get
  input  EN_deadlock_dCacheCRqStuck_get;
  output [72 : 0] deadlock_dCacheCRqStuck_get;
  output RDY_deadlock_dCacheCRqStuck_get;

  // actionvalue method deadlock_dCachePRqStuck_get
  input  EN_deadlock_dCachePRqStuck_get;
  output [67 : 0] deadlock_dCachePRqStuck_get;
  output RDY_deadlock_dCachePRqStuck_get;

  // actionvalue method deadlock_iCacheCRqStuck_get
  input  EN_deadlock_iCacheCRqStuck_get;
  output [67 : 0] deadlock_iCacheCRqStuck_get;
  output RDY_deadlock_iCacheCRqStuck_get;

  // actionvalue method deadlock_iCachePRqStuck_get
  input  EN_deadlock_iCachePRqStuck_get;
  output [67 : 0] deadlock_iCachePRqStuck_get;
  output RDY_deadlock_iCachePRqStuck_get;

  // actionvalue method deadlock_renameInstStuck_get
  input  EN_deadlock_renameInstStuck_get;
  output [77 : 0] deadlock_renameInstStuck_get;
  output RDY_deadlock_renameInstStuck_get;

  // actionvalue method deadlock_renameCorrectPathStuck_get
  input  EN_deadlock_renameCorrectPathStuck_get;
  output [77 : 0] deadlock_renameCorrectPathStuck_get;
  output RDY_deadlock_renameCorrectPathStuck_get;

  // actionvalue method deadlock_commitInstStuck_get
  input  EN_deadlock_commitInstStuck_get;
  output [162 : 0] deadlock_commitInstStuck_get;
  output RDY_deadlock_commitInstStuck_get;

  // actionvalue method deadlock_commitUserInstStuck_get
  input  EN_deadlock_commitUserInstStuck_get;
  output [162 : 0] deadlock_commitUserInstStuck_get;
  output RDY_deadlock_commitUserInstStuck_get;

  // action method deadlock_checkStarted_get
  input  EN_deadlock_checkStarted_get;
  output RDY_deadlock_checkStarted_get;

  // actionvalue method renameDebug_renameErr_get
  input  EN_renameDebug_renameErr_get;
  output [88 : 0] renameDebug_renameErr_get;
  output RDY_renameDebug_renameErr_get;

  // action method setMEIP
  input  setMEIP_v;
  input  EN_setMEIP;
  output RDY_setMEIP;

  // action method setSEIP
  input  setSEIP_v;
  input  EN_setSEIP;
  output RDY_setSEIP;

  // signals for module outputs
  wire [578 : 0] dCacheToParent_rsToP_first, iCacheToParent_rsToP_first;
  wire [162 : 0] deadlock_commitInstStuck_get,
		 deadlock_commitUserInstStuck_get;
  wire [141 : 0] mmioToPlatform_cRq_first;
  wire [88 : 0] renameDebug_renameErr_get;
  wire [77 : 0] deadlock_renameCorrectPathStuck_get,
		deadlock_renameInstStuck_get;
  wire [72 : 0] coreIndInv_perfResp, deadlock_dCacheCRqStuck_get;
  wire [71 : 0] dCacheToParent_rqToP_first, iCacheToParent_rqToP_first;
  wire [67 : 0] deadlock_dCachePRqStuck_get,
		deadlock_iCacheCRqStuck_get,
		deadlock_iCachePRqStuck_get;
  wire [64 : 0] tlbToMem_memReq_first;
  wire RDY_coreIndInv_perfResp,
       RDY_coreIndInv_terminate,
       RDY_coreReq_perfReq,
       RDY_coreReq_start,
       RDY_dCacheToParent_fromP_enq,
       RDY_dCacheToParent_fromP_notFull,
       RDY_dCacheToParent_rqToP_deq,
       RDY_dCacheToParent_rqToP_first,
       RDY_dCacheToParent_rqToP_notEmpty,
       RDY_dCacheToParent_rsToP_deq,
       RDY_dCacheToParent_rsToP_first,
       RDY_dCacheToParent_rsToP_notEmpty,
       RDY_deadlock_checkStarted_get,
       RDY_deadlock_commitInstStuck_get,
       RDY_deadlock_commitUserInstStuck_get,
       RDY_deadlock_dCacheCRqStuck_get,
       RDY_deadlock_dCachePRqStuck_get,
       RDY_deadlock_iCacheCRqStuck_get,
       RDY_deadlock_iCachePRqStuck_get,
       RDY_deadlock_renameCorrectPathStuck_get,
       RDY_deadlock_renameInstStuck_get,
       RDY_iCacheToParent_fromP_enq,
       RDY_iCacheToParent_fromP_notFull,
       RDY_iCacheToParent_rqToP_deq,
       RDY_iCacheToParent_rqToP_first,
       RDY_iCacheToParent_rqToP_notEmpty,
       RDY_iCacheToParent_rsToP_deq,
       RDY_iCacheToParent_rsToP_first,
       RDY_iCacheToParent_rsToP_notEmpty,
       RDY_mmioToPlatform_cRq_deq,
       RDY_mmioToPlatform_cRq_first,
       RDY_mmioToPlatform_cRq_notEmpty,
       RDY_mmioToPlatform_cRs_deq,
       RDY_mmioToPlatform_cRs_first,
       RDY_mmioToPlatform_cRs_notEmpty,
       RDY_mmioToPlatform_pRq_enq,
       RDY_mmioToPlatform_pRq_notFull,
       RDY_mmioToPlatform_pRs_enq,
       RDY_mmioToPlatform_pRs_notFull,
       RDY_mmioToPlatform_setTime,
       RDY_recvDoStats,
       RDY_renameDebug_renameErr_get,
       RDY_sendDoStats,
       RDY_setMEIP,
       RDY_setSEIP,
       RDY_tlbToMem_memReq_deq,
       RDY_tlbToMem_memReq_first,
       RDY_tlbToMem_memReq_notEmpty,
       RDY_tlbToMem_respLd_enq,
       RDY_tlbToMem_respLd_notFull,
       dCacheToParent_fromP_notFull,
       dCacheToParent_rqToP_notEmpty,
       dCacheToParent_rsToP_notEmpty,
       iCacheToParent_fromP_notFull,
       iCacheToParent_rqToP_notEmpty,
       iCacheToParent_rsToP_notEmpty,
       mmioToPlatform_cRq_notEmpty,
       mmioToPlatform_cRs_first,
       mmioToPlatform_cRs_notEmpty,
       mmioToPlatform_pRq_notFull,
       mmioToPlatform_pRs_notFull,
       sendDoStats,
       tlbToMem_memReq_notEmpty,
       tlbToMem_respLd_notFull;

  // inlined wires
  reg [152 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget;
  reg [64 : 0] coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wget;
  reg [58 : 0] coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wget;
  reg [1 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$wget;
  wire [583 : 0] coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget;
  wire [579 : 0] coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wget;
  wire [152 : 0] coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget;
  wire [142 : 0] mmio_cRqQ_enqReq_lat_0$wget, mmio_dataReqQ_enqReq_lat_0$wget;
  wire [76 : 0] coreFix_memExe_issueLd$wget;
  wire [72 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_lat_0$wget;
  wire [70 : 0] coreFix_aluExe_0_bypassWire_0$wget,
		coreFix_aluExe_0_bypassWire_1$wget,
		coreFix_aluExe_0_bypassWire_2$wget,
		coreFix_aluExe_0_bypassWire_3$wget;
  wire [69 : 0] coreFix_memExe_forwardQ_enqReq_lat_0$wget,
		coreFix_memExe_memRespLdQ_enqReq_lat_0$wget;
  wire [68 : 0] coreFix_memExe_reqLdQ_data_0_lat_0$wget;
  wire [67 : 0] mmio_pRsQ_enqReq_lat_0$wget;
  wire [65 : 0] coreFix_memExe_reqStQ_data_0_lat_0$wget,
		mmio_dataRespQ_enqReq_lat_0$wget;
  wire [63 : 0] csrf_mcycle_ehr_data_lat_0$wget;
  wire [39 : 0] mmio_pRqQ_enqReq_lat_0$wget;
  wire [3 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$wget;
  wire [1 : 0] mmio_cRsQ_enqReq_lat_0$wget;
  wire coreFix_aluExe_0_bypassWire_0$whas,
       coreFix_aluExe_0_bypassWire_1$whas,
       coreFix_aluExe_0_bypassWire_2$whas,
       coreFix_aluExe_0_bypassWire_3$whas,
       coreFix_aluExe_1_bypassWire_2$whas,
       coreFix_aluExe_1_bypassWire_3$whas,
       coreFix_fpuMulDivExe_0_bypassWire_2$whas,
       coreFix_fpuMulDivExe_0_bypassWire_3$whas,
       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_deqEn$whas,
       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_newReq$whas,
       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_newReq$whas,
       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_newReq$whas,
       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$whas,
       coreFix_globalSpecUpdate_correctSpecTag_0$whas,
       coreFix_globalSpecUpdate_correctSpecTag_1$whas,
       coreFix_memExe_bypassWire_2$whas,
       coreFix_memExe_bypassWire_3$whas,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$whas,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_lat_0$whas,
       coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$whas,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_lat_0$whas,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$whas,
       coreFix_memExe_forwardQ_enqReq_lat_0$whas,
       coreFix_memExe_issueLd$whas,
       coreFix_memExe_memRespLdQ_enqReq_lat_0$whas,
       coreFix_memExe_reqLdQ_data_0_lat_0$whas,
       coreFix_memExe_reqLdQ_empty_lat_0$whas,
       coreFix_memExe_reqLdQ_full_lat_0$whas,
       coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas,
       coreFix_memExe_reqLrScAmoQ_enqP_lat_0$whas,
       coreFix_memExe_respLrScAmoQ_deqReq_lat_0$whas,
       coreFix_memExe_respLrScAmoQ_enqReq_lat_0$whas,
       csrInstOrInterruptInflight_lat_0$whas,
       csrInstOrInterruptInflight_lat_1$whas,
       csrf_mcycle_ehr_data_lat_0$whas,
       csrf_minstret_ehr_data_lat_0$whas,
       csrf_minstret_ehr_data_lat_1$whas,
       mmio_cRqQ_enqReq_lat_0$whas,
       mmio_dataPendQ_enqReq_lat_0$whas,
       mmio_dataReqQ_enqReq_lat_0$whas,
       mmio_dataRespQ_deqReq_lat_0$whas,
       mmio_pRsQ_deqReq_lat_0$whas,
       scaprf_pcc_reg_data_lat_0$whas,
       scaprf_pcc_reg_data_lat_1$whas;

  // register commitStage_commitTrap
  reg [264 : 0] commitStage_commitTrap;
  wire [264 : 0] commitStage_commitTrap$D_IN;
  wire commitStage_commitTrap$EN;

  // register commitStage_rg_serial_num
  reg [63 : 0] commitStage_rg_serial_num;
  wire [63 : 0] commitStage_rg_serial_num$D_IN;
  wire commitStage_rg_serial_num$EN;

  // register coreFix_doStatsReg
  reg coreFix_doStatsReg;
  wire coreFix_doStatsReg$D_IN, coreFix_doStatsReg$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt
  reg [3 : 0] coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt;
  wire [3 : 0] coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt$D_IN;
  wire coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init
  reg coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init;
  wire coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init$D_IN,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready
  reg coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready;
  wire coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready$D_IN,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit
  reg [1 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit;
  wire [1 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit$D_IN;
  wire coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_0
  reg [128 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_0;
  wire [128 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_0$D_IN;
  wire coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_0$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1
  reg [128 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1;
  wire [128 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1$D_IN;
  wire coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_0
  reg [128 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_0;
  wire [128 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_0$D_IN;
  wire coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_0$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1
  reg [128 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1;
  wire [128 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1$D_IN;
  wire coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_0
  reg [128 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_0;
  wire [128 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_0$D_IN;
  wire coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_0$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1
  reg [128 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1;
  wire [128 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1$D_IN;
  wire coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0
  reg [2 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0;
  wire [2 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0$D_IN;
  wire coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1
  reg [2 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1;
  wire [2 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1$D_IN;
  wire coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty
  reg coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl
  reg [3 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl;
  wire [3 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full
  reg coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0
  reg [582 : 0] coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0;
  wire [582 : 0] coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1
  reg [582 : 0] coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1;
  wire [582 : 0] coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP
  reg coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP;
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty
  reg coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty;
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP
  reg coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP;
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl
  reg [583 : 0] coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl;
  wire [583 : 0] coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full
  reg coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full;
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl
  reg [58 : 0] coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl;
  wire [58 : 0] coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_processAmo
  reg [160 : 0] coreFix_memExe_dMem_cache_m_banks_0_processAmo;
  reg [160 : 0] coreFix_memExe_dMem_cache_m_banks_0_processAmo$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_processAmo$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl
  reg [152 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl;
  wire [152 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0
  reg [71 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0;
  wire [71 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1
  reg [71 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1;
  wire [71 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP
  reg coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty
  reg coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP
  reg coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl
  reg [72 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl;
  wire [72 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full
  reg coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0
  reg [578 : 0] coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0;
  wire [578 : 0] coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1
  reg [578 : 0] coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1;
  wire [578 : 0] coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP
  reg coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty
  reg coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP
  reg coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl
  reg [579 : 0] coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl;
  wire [579 : 0] coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full
  reg coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full$EN;

  // register coreFix_memExe_dMem_perfReqQ_clearReq_rl
  reg coreFix_memExe_dMem_perfReqQ_clearReq_rl;
  wire coreFix_memExe_dMem_perfReqQ_clearReq_rl$D_IN,
       coreFix_memExe_dMem_perfReqQ_clearReq_rl$EN;

  // register coreFix_memExe_dMem_perfReqQ_data_0
  reg [3 : 0] coreFix_memExe_dMem_perfReqQ_data_0;
  wire [3 : 0] coreFix_memExe_dMem_perfReqQ_data_0$D_IN;
  wire coreFix_memExe_dMem_perfReqQ_data_0$EN;

  // register coreFix_memExe_dMem_perfReqQ_deqReq_rl
  reg coreFix_memExe_dMem_perfReqQ_deqReq_rl;
  wire coreFix_memExe_dMem_perfReqQ_deqReq_rl$D_IN,
       coreFix_memExe_dMem_perfReqQ_deqReq_rl$EN;

  // register coreFix_memExe_dMem_perfReqQ_empty
  reg coreFix_memExe_dMem_perfReqQ_empty;
  wire coreFix_memExe_dMem_perfReqQ_empty$D_IN,
       coreFix_memExe_dMem_perfReqQ_empty$EN;

  // register coreFix_memExe_dMem_perfReqQ_enqReq_rl
  reg [4 : 0] coreFix_memExe_dMem_perfReqQ_enqReq_rl;
  wire [4 : 0] coreFix_memExe_dMem_perfReqQ_enqReq_rl$D_IN;
  wire coreFix_memExe_dMem_perfReqQ_enqReq_rl$EN;

  // register coreFix_memExe_dMem_perfReqQ_full
  reg coreFix_memExe_dMem_perfReqQ_full;
  wire coreFix_memExe_dMem_perfReqQ_full$D_IN,
       coreFix_memExe_dMem_perfReqQ_full$EN;

  // register coreFix_memExe_forwardQ_clearReq_rl
  reg coreFix_memExe_forwardQ_clearReq_rl;
  wire coreFix_memExe_forwardQ_clearReq_rl$D_IN,
       coreFix_memExe_forwardQ_clearReq_rl$EN;

  // register coreFix_memExe_forwardQ_data_0
  reg [68 : 0] coreFix_memExe_forwardQ_data_0;
  wire [68 : 0] coreFix_memExe_forwardQ_data_0$D_IN;
  wire coreFix_memExe_forwardQ_data_0$EN;

  // register coreFix_memExe_forwardQ_data_1
  reg [68 : 0] coreFix_memExe_forwardQ_data_1;
  wire [68 : 0] coreFix_memExe_forwardQ_data_1$D_IN;
  wire coreFix_memExe_forwardQ_data_1$EN;

  // register coreFix_memExe_forwardQ_deqP
  reg coreFix_memExe_forwardQ_deqP;
  wire coreFix_memExe_forwardQ_deqP$D_IN, coreFix_memExe_forwardQ_deqP$EN;

  // register coreFix_memExe_forwardQ_deqReq_rl
  reg coreFix_memExe_forwardQ_deqReq_rl;
  wire coreFix_memExe_forwardQ_deqReq_rl$D_IN,
       coreFix_memExe_forwardQ_deqReq_rl$EN;

  // register coreFix_memExe_forwardQ_empty
  reg coreFix_memExe_forwardQ_empty;
  wire coreFix_memExe_forwardQ_empty$D_IN, coreFix_memExe_forwardQ_empty$EN;

  // register coreFix_memExe_forwardQ_enqP
  reg coreFix_memExe_forwardQ_enqP;
  wire coreFix_memExe_forwardQ_enqP$D_IN, coreFix_memExe_forwardQ_enqP$EN;

  // register coreFix_memExe_forwardQ_enqReq_rl
  reg [69 : 0] coreFix_memExe_forwardQ_enqReq_rl;
  wire [69 : 0] coreFix_memExe_forwardQ_enqReq_rl$D_IN;
  wire coreFix_memExe_forwardQ_enqReq_rl$EN;

  // register coreFix_memExe_forwardQ_full
  reg coreFix_memExe_forwardQ_full;
  wire coreFix_memExe_forwardQ_full$D_IN, coreFix_memExe_forwardQ_full$EN;

  // register coreFix_memExe_memRespLdQ_clearReq_rl
  reg coreFix_memExe_memRespLdQ_clearReq_rl;
  wire coreFix_memExe_memRespLdQ_clearReq_rl$D_IN,
       coreFix_memExe_memRespLdQ_clearReq_rl$EN;

  // register coreFix_memExe_memRespLdQ_data_0
  reg [68 : 0] coreFix_memExe_memRespLdQ_data_0;
  wire [68 : 0] coreFix_memExe_memRespLdQ_data_0$D_IN;
  wire coreFix_memExe_memRespLdQ_data_0$EN;

  // register coreFix_memExe_memRespLdQ_data_1
  reg [68 : 0] coreFix_memExe_memRespLdQ_data_1;
  wire [68 : 0] coreFix_memExe_memRespLdQ_data_1$D_IN;
  wire coreFix_memExe_memRespLdQ_data_1$EN;

  // register coreFix_memExe_memRespLdQ_deqP
  reg coreFix_memExe_memRespLdQ_deqP;
  wire coreFix_memExe_memRespLdQ_deqP$D_IN, coreFix_memExe_memRespLdQ_deqP$EN;

  // register coreFix_memExe_memRespLdQ_deqReq_rl
  reg coreFix_memExe_memRespLdQ_deqReq_rl;
  wire coreFix_memExe_memRespLdQ_deqReq_rl$D_IN,
       coreFix_memExe_memRespLdQ_deqReq_rl$EN;

  // register coreFix_memExe_memRespLdQ_empty
  reg coreFix_memExe_memRespLdQ_empty;
  wire coreFix_memExe_memRespLdQ_empty$D_IN,
       coreFix_memExe_memRespLdQ_empty$EN;

  // register coreFix_memExe_memRespLdQ_enqP
  reg coreFix_memExe_memRespLdQ_enqP;
  wire coreFix_memExe_memRespLdQ_enqP$D_IN, coreFix_memExe_memRespLdQ_enqP$EN;

  // register coreFix_memExe_memRespLdQ_enqReq_rl
  reg [69 : 0] coreFix_memExe_memRespLdQ_enqReq_rl;
  wire [69 : 0] coreFix_memExe_memRespLdQ_enqReq_rl$D_IN;
  wire coreFix_memExe_memRespLdQ_enqReq_rl$EN;

  // register coreFix_memExe_memRespLdQ_full
  reg coreFix_memExe_memRespLdQ_full;
  wire coreFix_memExe_memRespLdQ_full$D_IN, coreFix_memExe_memRespLdQ_full$EN;

  // register coreFix_memExe_reqLdQ_data_0_rl
  reg [68 : 0] coreFix_memExe_reqLdQ_data_0_rl;
  wire [68 : 0] coreFix_memExe_reqLdQ_data_0_rl$D_IN;
  wire coreFix_memExe_reqLdQ_data_0_rl$EN;

  // register coreFix_memExe_reqLdQ_empty_rl
  reg coreFix_memExe_reqLdQ_empty_rl;
  wire coreFix_memExe_reqLdQ_empty_rl$D_IN, coreFix_memExe_reqLdQ_empty_rl$EN;

  // register coreFix_memExe_reqLdQ_full_rl
  reg coreFix_memExe_reqLdQ_full_rl;
  wire coreFix_memExe_reqLdQ_full_rl$D_IN, coreFix_memExe_reqLdQ_full_rl$EN;

  // register coreFix_memExe_reqLrScAmoQ_data_0_rl
  reg [152 : 0] coreFix_memExe_reqLrScAmoQ_data_0_rl;
  wire [152 : 0] coreFix_memExe_reqLrScAmoQ_data_0_rl$D_IN;
  wire coreFix_memExe_reqLrScAmoQ_data_0_rl$EN;

  // register coreFix_memExe_reqLrScAmoQ_empty_rl
  reg coreFix_memExe_reqLrScAmoQ_empty_rl;
  wire coreFix_memExe_reqLrScAmoQ_empty_rl$D_IN,
       coreFix_memExe_reqLrScAmoQ_empty_rl$EN;

  // register coreFix_memExe_reqLrScAmoQ_full_rl
  reg coreFix_memExe_reqLrScAmoQ_full_rl;
  wire coreFix_memExe_reqLrScAmoQ_full_rl$D_IN,
       coreFix_memExe_reqLrScAmoQ_full_rl$EN;

  // register coreFix_memExe_reqStQ_data_0_rl
  reg [65 : 0] coreFix_memExe_reqStQ_data_0_rl;
  wire [65 : 0] coreFix_memExe_reqStQ_data_0_rl$D_IN;
  wire coreFix_memExe_reqStQ_data_0_rl$EN;

  // register coreFix_memExe_reqStQ_empty_rl
  reg coreFix_memExe_reqStQ_empty_rl;
  wire coreFix_memExe_reqStQ_empty_rl$D_IN, coreFix_memExe_reqStQ_empty_rl$EN;

  // register coreFix_memExe_reqStQ_full_rl
  reg coreFix_memExe_reqStQ_full_rl;
  wire coreFix_memExe_reqStQ_full_rl$D_IN, coreFix_memExe_reqStQ_full_rl$EN;

  // register coreFix_memExe_respLrScAmoQ_clearReq_rl
  reg coreFix_memExe_respLrScAmoQ_clearReq_rl;
  wire coreFix_memExe_respLrScAmoQ_clearReq_rl$D_IN,
       coreFix_memExe_respLrScAmoQ_clearReq_rl$EN;

  // register coreFix_memExe_respLrScAmoQ_data_0
  reg [63 : 0] coreFix_memExe_respLrScAmoQ_data_0;
  wire [63 : 0] coreFix_memExe_respLrScAmoQ_data_0$D_IN;
  wire coreFix_memExe_respLrScAmoQ_data_0$EN;

  // register coreFix_memExe_respLrScAmoQ_deqReq_rl
  reg coreFix_memExe_respLrScAmoQ_deqReq_rl;
  wire coreFix_memExe_respLrScAmoQ_deqReq_rl$D_IN,
       coreFix_memExe_respLrScAmoQ_deqReq_rl$EN;

  // register coreFix_memExe_respLrScAmoQ_empty
  reg coreFix_memExe_respLrScAmoQ_empty;
  wire coreFix_memExe_respLrScAmoQ_empty$D_IN,
       coreFix_memExe_respLrScAmoQ_empty$EN;

  // register coreFix_memExe_respLrScAmoQ_enqReq_rl
  reg [64 : 0] coreFix_memExe_respLrScAmoQ_enqReq_rl;
  wire [64 : 0] coreFix_memExe_respLrScAmoQ_enqReq_rl$D_IN;
  wire coreFix_memExe_respLrScAmoQ_enqReq_rl$EN;

  // register coreFix_memExe_respLrScAmoQ_full
  reg coreFix_memExe_respLrScAmoQ_full;
  wire coreFix_memExe_respLrScAmoQ_full$D_IN,
       coreFix_memExe_respLrScAmoQ_full$EN;

  // register coreFix_memExe_waitLrScAmoMMIOResp
  reg [2 : 0] coreFix_memExe_waitLrScAmoMMIOResp;
  reg [2 : 0] coreFix_memExe_waitLrScAmoMMIOResp$D_IN;
  wire coreFix_memExe_waitLrScAmoMMIOResp$EN;

  // register csrInstOrInterruptInflight_rl
  reg csrInstOrInterruptInflight_rl;
  wire csrInstOrInterruptInflight_rl$D_IN, csrInstOrInterruptInflight_rl$EN;

  // register csrf_external_int_en_vec_0
  reg csrf_external_int_en_vec_0;
  wire csrf_external_int_en_vec_0$D_IN, csrf_external_int_en_vec_0$EN;

  // register csrf_external_int_en_vec_1
  reg csrf_external_int_en_vec_1;
  wire csrf_external_int_en_vec_1$D_IN, csrf_external_int_en_vec_1$EN;

  // register csrf_external_int_en_vec_3
  reg csrf_external_int_en_vec_3;
  wire csrf_external_int_en_vec_3$D_IN, csrf_external_int_en_vec_3$EN;

  // register csrf_external_int_pend_vec_0
  reg csrf_external_int_pend_vec_0;
  wire csrf_external_int_pend_vec_0$D_IN, csrf_external_int_pend_vec_0$EN;

  // register csrf_external_int_pend_vec_1
  reg csrf_external_int_pend_vec_1;
  wire csrf_external_int_pend_vec_1$D_IN, csrf_external_int_pend_vec_1$EN;

  // register csrf_external_int_pend_vec_3
  reg csrf_external_int_pend_vec_3;
  wire csrf_external_int_pend_vec_3$D_IN, csrf_external_int_pend_vec_3$EN;

  // register csrf_fflags_reg
  reg [4 : 0] csrf_fflags_reg;
  wire [4 : 0] csrf_fflags_reg$D_IN;
  wire csrf_fflags_reg$EN;

  // register csrf_frm_reg
  reg [2 : 0] csrf_frm_reg;
  wire [2 : 0] csrf_frm_reg$D_IN;
  wire csrf_frm_reg$EN;

  // register csrf_fs_reg
  reg [1 : 0] csrf_fs_reg;
  wire [1 : 0] csrf_fs_reg$D_IN;
  wire csrf_fs_reg$EN;

  // register csrf_ie_vec_0
  reg csrf_ie_vec_0;
  wire csrf_ie_vec_0$D_IN, csrf_ie_vec_0$EN;

  // register csrf_ie_vec_1
  reg csrf_ie_vec_1;
  wire csrf_ie_vec_1$D_IN, csrf_ie_vec_1$EN;

  // register csrf_ie_vec_3
  reg csrf_ie_vec_3;
  wire csrf_ie_vec_3$D_IN, csrf_ie_vec_3$EN;

  // register csrf_mcause_code_reg
  reg [3 : 0] csrf_mcause_code_reg;
  wire [3 : 0] csrf_mcause_code_reg$D_IN;
  wire csrf_mcause_code_reg$EN;

  // register csrf_mcause_interrupt_reg
  reg csrf_mcause_interrupt_reg;
  wire csrf_mcause_interrupt_reg$D_IN, csrf_mcause_interrupt_reg$EN;

  // register csrf_mcounteren_cy_reg
  reg csrf_mcounteren_cy_reg;
  wire csrf_mcounteren_cy_reg$D_IN, csrf_mcounteren_cy_reg$EN;

  // register csrf_mcounteren_ir_reg
  reg csrf_mcounteren_ir_reg;
  wire csrf_mcounteren_ir_reg$D_IN, csrf_mcounteren_ir_reg$EN;

  // register csrf_mcounteren_tm_reg
  reg csrf_mcounteren_tm_reg;
  wire csrf_mcounteren_tm_reg$D_IN, csrf_mcounteren_tm_reg$EN;

  // register csrf_mcycle_ehr_data_rl
  reg [63 : 0] csrf_mcycle_ehr_data_rl;
  wire [63 : 0] csrf_mcycle_ehr_data_rl$D_IN;
  wire csrf_mcycle_ehr_data_rl$EN;

  // register csrf_medeleg_13_11_reg
  reg [2 : 0] csrf_medeleg_13_11_reg;
  wire [2 : 0] csrf_medeleg_13_11_reg$D_IN;
  wire csrf_medeleg_13_11_reg$EN;

  // register csrf_medeleg_15_reg
  reg csrf_medeleg_15_reg;
  wire csrf_medeleg_15_reg$D_IN, csrf_medeleg_15_reg$EN;

  // register csrf_medeleg_9_0_reg
  reg [9 : 0] csrf_medeleg_9_0_reg;
  wire [9 : 0] csrf_medeleg_9_0_reg$D_IN;
  wire csrf_medeleg_9_0_reg$EN;

  // register csrf_mepc_csr
  reg [63 : 0] csrf_mepc_csr;
  wire [63 : 0] csrf_mepc_csr$D_IN;
  wire csrf_mepc_csr$EN;

  // register csrf_mideleg_11_reg
  reg csrf_mideleg_11_reg;
  wire csrf_mideleg_11_reg$D_IN, csrf_mideleg_11_reg$EN;

  // register csrf_mideleg_1_0_reg
  reg [1 : 0] csrf_mideleg_1_0_reg;
  wire [1 : 0] csrf_mideleg_1_0_reg$D_IN;
  wire csrf_mideleg_1_0_reg$EN;

  // register csrf_mideleg_5_3_reg
  reg [2 : 0] csrf_mideleg_5_3_reg;
  wire [2 : 0] csrf_mideleg_5_3_reg$D_IN;
  wire csrf_mideleg_5_3_reg$EN;

  // register csrf_mideleg_9_7_reg
  reg [2 : 0] csrf_mideleg_9_7_reg;
  wire [2 : 0] csrf_mideleg_9_7_reg$D_IN;
  wire csrf_mideleg_9_7_reg$EN;

  // register csrf_minstret_ehr_data_rl
  reg [63 : 0] csrf_minstret_ehr_data_rl;
  wire [63 : 0] csrf_minstret_ehr_data_rl$D_IN;
  wire csrf_minstret_ehr_data_rl$EN;

  // register csrf_mpp_reg
  reg [1 : 0] csrf_mpp_reg;
  wire [1 : 0] csrf_mpp_reg$D_IN;
  wire csrf_mpp_reg$EN;

  // register csrf_mprv_reg
  reg csrf_mprv_reg;
  wire csrf_mprv_reg$D_IN, csrf_mprv_reg$EN;

  // register csrf_mscratch_csr
  reg [63 : 0] csrf_mscratch_csr;
  wire [63 : 0] csrf_mscratch_csr$D_IN;
  wire csrf_mscratch_csr$EN;

  // register csrf_mtval_csr
  reg [63 : 0] csrf_mtval_csr;
  wire [63 : 0] csrf_mtval_csr$D_IN;
  wire csrf_mtval_csr$EN;

  // register csrf_mtvec_base_hi_reg
  reg [61 : 0] csrf_mtvec_base_hi_reg;
  wire [61 : 0] csrf_mtvec_base_hi_reg$D_IN;
  wire csrf_mtvec_base_hi_reg$EN;

  // register csrf_mtvec_mode_low_reg
  reg csrf_mtvec_mode_low_reg;
  wire csrf_mtvec_mode_low_reg$D_IN, csrf_mtvec_mode_low_reg$EN;

  // register csrf_mxr_reg
  reg csrf_mxr_reg;
  wire csrf_mxr_reg$D_IN, csrf_mxr_reg$EN;

  // register csrf_ppn_reg
  reg [43 : 0] csrf_ppn_reg;
  wire [43 : 0] csrf_ppn_reg$D_IN;
  wire csrf_ppn_reg$EN;

  // register csrf_prev_ie_vec_0
  reg csrf_prev_ie_vec_0;
  wire csrf_prev_ie_vec_0$D_IN, csrf_prev_ie_vec_0$EN;

  // register csrf_prev_ie_vec_1
  reg csrf_prev_ie_vec_1;
  wire csrf_prev_ie_vec_1$D_IN, csrf_prev_ie_vec_1$EN;

  // register csrf_prev_ie_vec_3
  reg csrf_prev_ie_vec_3;
  wire csrf_prev_ie_vec_3$D_IN, csrf_prev_ie_vec_3$EN;

  // register csrf_prv_reg
  reg [1 : 0] csrf_prv_reg;
  wire [1 : 0] csrf_prv_reg$D_IN;
  wire csrf_prv_reg$EN;

  // register csrf_rg_tdata1_data
  reg [58 : 0] csrf_rg_tdata1_data;
  wire [58 : 0] csrf_rg_tdata1_data$D_IN;
  wire csrf_rg_tdata1_data$EN;

  // register csrf_rg_tdata1_dmode
  reg csrf_rg_tdata1_dmode;
  wire csrf_rg_tdata1_dmode$D_IN, csrf_rg_tdata1_dmode$EN;

  // register csrf_rg_tdata2
  reg [63 : 0] csrf_rg_tdata2;
  wire [63 : 0] csrf_rg_tdata2$D_IN;
  wire csrf_rg_tdata2$EN;

  // register csrf_rg_tdata3
  reg [63 : 0] csrf_rg_tdata3;
  wire [63 : 0] csrf_rg_tdata3$D_IN;
  wire csrf_rg_tdata3$EN;

  // register csrf_rg_tselect
  reg [63 : 0] csrf_rg_tselect;
  wire [63 : 0] csrf_rg_tselect$D_IN;
  wire csrf_rg_tselect$EN;

  // register csrf_scause_code_reg
  reg [3 : 0] csrf_scause_code_reg;
  wire [3 : 0] csrf_scause_code_reg$D_IN;
  wire csrf_scause_code_reg$EN;

  // register csrf_scause_interrupt_reg
  reg csrf_scause_interrupt_reg;
  wire csrf_scause_interrupt_reg$D_IN, csrf_scause_interrupt_reg$EN;

  // register csrf_scounteren_cy_reg
  reg csrf_scounteren_cy_reg;
  wire csrf_scounteren_cy_reg$D_IN, csrf_scounteren_cy_reg$EN;

  // register csrf_scounteren_ir_reg
  reg csrf_scounteren_ir_reg;
  wire csrf_scounteren_ir_reg$D_IN, csrf_scounteren_ir_reg$EN;

  // register csrf_scounteren_tm_reg
  reg csrf_scounteren_tm_reg;
  wire csrf_scounteren_tm_reg$D_IN, csrf_scounteren_tm_reg$EN;

  // register csrf_sepc_csr
  reg [63 : 0] csrf_sepc_csr;
  wire [63 : 0] csrf_sepc_csr$D_IN;
  wire csrf_sepc_csr$EN;

  // register csrf_software_int_en_vec_0
  reg csrf_software_int_en_vec_0;
  wire csrf_software_int_en_vec_0$D_IN, csrf_software_int_en_vec_0$EN;

  // register csrf_software_int_en_vec_1
  reg csrf_software_int_en_vec_1;
  wire csrf_software_int_en_vec_1$D_IN, csrf_software_int_en_vec_1$EN;

  // register csrf_software_int_en_vec_3
  reg csrf_software_int_en_vec_3;
  wire csrf_software_int_en_vec_3$D_IN, csrf_software_int_en_vec_3$EN;

  // register csrf_software_int_pend_vec_0
  reg csrf_software_int_pend_vec_0;
  wire csrf_software_int_pend_vec_0$D_IN, csrf_software_int_pend_vec_0$EN;

  // register csrf_software_int_pend_vec_1
  reg csrf_software_int_pend_vec_1;
  wire csrf_software_int_pend_vec_1$D_IN, csrf_software_int_pend_vec_1$EN;

  // register csrf_software_int_pend_vec_3
  reg csrf_software_int_pend_vec_3;
  wire csrf_software_int_pend_vec_3$D_IN, csrf_software_int_pend_vec_3$EN;

  // register csrf_spp_reg
  reg csrf_spp_reg;
  wire csrf_spp_reg$D_IN, csrf_spp_reg$EN;

  // register csrf_sscratch_csr
  reg [63 : 0] csrf_sscratch_csr;
  wire [63 : 0] csrf_sscratch_csr$D_IN;
  wire csrf_sscratch_csr$EN;

  // register csrf_stats_module_doStats
  reg csrf_stats_module_doStats;
  wire csrf_stats_module_doStats$D_IN, csrf_stats_module_doStats$EN;

  // register csrf_stval_csr
  reg [63 : 0] csrf_stval_csr;
  wire [63 : 0] csrf_stval_csr$D_IN;
  wire csrf_stval_csr$EN;

  // register csrf_stvec_base_hi_reg
  reg [61 : 0] csrf_stvec_base_hi_reg;
  wire [61 : 0] csrf_stvec_base_hi_reg$D_IN;
  wire csrf_stvec_base_hi_reg$EN;

  // register csrf_stvec_mode_low_reg
  reg csrf_stvec_mode_low_reg;
  wire csrf_stvec_mode_low_reg$D_IN, csrf_stvec_mode_low_reg$EN;

  // register csrf_sum_reg
  reg csrf_sum_reg;
  wire csrf_sum_reg$D_IN, csrf_sum_reg$EN;

  // register csrf_time_reg
  reg [63 : 0] csrf_time_reg;
  wire [63 : 0] csrf_time_reg$D_IN;
  wire csrf_time_reg$EN;

  // register csrf_timer_int_en_vec_0
  reg csrf_timer_int_en_vec_0;
  wire csrf_timer_int_en_vec_0$D_IN, csrf_timer_int_en_vec_0$EN;

  // register csrf_timer_int_en_vec_1
  reg csrf_timer_int_en_vec_1;
  wire csrf_timer_int_en_vec_1$D_IN, csrf_timer_int_en_vec_1$EN;

  // register csrf_timer_int_en_vec_3
  reg csrf_timer_int_en_vec_3;
  wire csrf_timer_int_en_vec_3$D_IN, csrf_timer_int_en_vec_3$EN;

  // register csrf_timer_int_pend_vec_0
  reg csrf_timer_int_pend_vec_0;
  wire csrf_timer_int_pend_vec_0$D_IN, csrf_timer_int_pend_vec_0$EN;

  // register csrf_timer_int_pend_vec_1
  reg csrf_timer_int_pend_vec_1;
  wire csrf_timer_int_pend_vec_1$D_IN, csrf_timer_int_pend_vec_1$EN;

  // register csrf_timer_int_pend_vec_3
  reg csrf_timer_int_pend_vec_3;
  wire csrf_timer_int_pend_vec_3$D_IN, csrf_timer_int_pend_vec_3$EN;

  // register csrf_tsr_reg
  reg csrf_tsr_reg;
  wire csrf_tsr_reg$D_IN, csrf_tsr_reg$EN;

  // register csrf_tvm_reg
  reg csrf_tvm_reg;
  wire csrf_tvm_reg$D_IN, csrf_tvm_reg$EN;

  // register csrf_tw_reg
  reg csrf_tw_reg;
  wire csrf_tw_reg$D_IN, csrf_tw_reg$EN;

  // register csrf_vm_mode_sv39_reg
  reg csrf_vm_mode_sv39_reg;
  wire csrf_vm_mode_sv39_reg$D_IN, csrf_vm_mode_sv39_reg$EN;

  // register flush_reservation
  reg flush_reservation;
  wire flush_reservation$D_IN, flush_reservation$EN;

  // register flush_tlbs
  reg flush_tlbs;
  wire flush_tlbs$D_IN, flush_tlbs$EN;

  // register mmio_cRqQ_clearReq_rl
  reg mmio_cRqQ_clearReq_rl;
  wire mmio_cRqQ_clearReq_rl$D_IN, mmio_cRqQ_clearReq_rl$EN;

  // register mmio_cRqQ_data_0
  reg [141 : 0] mmio_cRqQ_data_0;
  wire [141 : 0] mmio_cRqQ_data_0$D_IN;
  wire mmio_cRqQ_data_0$EN;

  // register mmio_cRqQ_deqReq_rl
  reg mmio_cRqQ_deqReq_rl;
  wire mmio_cRqQ_deqReq_rl$D_IN, mmio_cRqQ_deqReq_rl$EN;

  // register mmio_cRqQ_empty
  reg mmio_cRqQ_empty;
  wire mmio_cRqQ_empty$D_IN, mmio_cRqQ_empty$EN;

  // register mmio_cRqQ_enqReq_rl
  reg [142 : 0] mmio_cRqQ_enqReq_rl;
  wire [142 : 0] mmio_cRqQ_enqReq_rl$D_IN;
  wire mmio_cRqQ_enqReq_rl$EN;

  // register mmio_cRqQ_full
  reg mmio_cRqQ_full;
  wire mmio_cRqQ_full$D_IN, mmio_cRqQ_full$EN;

  // register mmio_cRsQ_clearReq_rl
  reg mmio_cRsQ_clearReq_rl;
  wire mmio_cRsQ_clearReq_rl$D_IN, mmio_cRsQ_clearReq_rl$EN;

  // register mmio_cRsQ_data_0
  reg mmio_cRsQ_data_0;
  wire mmio_cRsQ_data_0$D_IN, mmio_cRsQ_data_0$EN;

  // register mmio_cRsQ_deqReq_rl
  reg mmio_cRsQ_deqReq_rl;
  wire mmio_cRsQ_deqReq_rl$D_IN, mmio_cRsQ_deqReq_rl$EN;

  // register mmio_cRsQ_empty
  reg mmio_cRsQ_empty;
  wire mmio_cRsQ_empty$D_IN, mmio_cRsQ_empty$EN;

  // register mmio_cRsQ_enqReq_rl
  reg [1 : 0] mmio_cRsQ_enqReq_rl;
  wire [1 : 0] mmio_cRsQ_enqReq_rl$D_IN;
  wire mmio_cRsQ_enqReq_rl$EN;

  // register mmio_cRsQ_full
  reg mmio_cRsQ_full;
  wire mmio_cRsQ_full$D_IN, mmio_cRsQ_full$EN;

  // register mmio_dataPendQ_clearReq_rl
  reg mmio_dataPendQ_clearReq_rl;
  wire mmio_dataPendQ_clearReq_rl$D_IN, mmio_dataPendQ_clearReq_rl$EN;

  // register mmio_dataPendQ_deqReq_rl
  reg mmio_dataPendQ_deqReq_rl;
  wire mmio_dataPendQ_deqReq_rl$D_IN, mmio_dataPendQ_deqReq_rl$EN;

  // register mmio_dataPendQ_empty
  reg mmio_dataPendQ_empty;
  wire mmio_dataPendQ_empty$D_IN, mmio_dataPendQ_empty$EN;

  // register mmio_dataPendQ_enqReq_rl
  reg mmio_dataPendQ_enqReq_rl;
  wire mmio_dataPendQ_enqReq_rl$D_IN, mmio_dataPendQ_enqReq_rl$EN;

  // register mmio_dataPendQ_full
  reg mmio_dataPendQ_full;
  wire mmio_dataPendQ_full$D_IN, mmio_dataPendQ_full$EN;

  // register mmio_dataReqQ_clearReq_rl
  reg mmio_dataReqQ_clearReq_rl;
  wire mmio_dataReqQ_clearReq_rl$D_IN, mmio_dataReqQ_clearReq_rl$EN;

  // register mmio_dataReqQ_data_0
  reg [141 : 0] mmio_dataReqQ_data_0;
  wire [141 : 0] mmio_dataReqQ_data_0$D_IN;
  wire mmio_dataReqQ_data_0$EN;

  // register mmio_dataReqQ_deqReq_rl
  reg mmio_dataReqQ_deqReq_rl;
  wire mmio_dataReqQ_deqReq_rl$D_IN, mmio_dataReqQ_deqReq_rl$EN;

  // register mmio_dataReqQ_empty
  reg mmio_dataReqQ_empty;
  wire mmio_dataReqQ_empty$D_IN, mmio_dataReqQ_empty$EN;

  // register mmio_dataReqQ_enqReq_rl
  reg [142 : 0] mmio_dataReqQ_enqReq_rl;
  wire [142 : 0] mmio_dataReqQ_enqReq_rl$D_IN;
  wire mmio_dataReqQ_enqReq_rl$EN;

  // register mmio_dataReqQ_full
  reg mmio_dataReqQ_full;
  wire mmio_dataReqQ_full$D_IN, mmio_dataReqQ_full$EN;

  // register mmio_dataRespQ_clearReq_rl
  reg mmio_dataRespQ_clearReq_rl;
  wire mmio_dataRespQ_clearReq_rl$D_IN, mmio_dataRespQ_clearReq_rl$EN;

  // register mmio_dataRespQ_data_0
  reg [64 : 0] mmio_dataRespQ_data_0;
  wire [64 : 0] mmio_dataRespQ_data_0$D_IN;
  wire mmio_dataRespQ_data_0$EN;

  // register mmio_dataRespQ_deqReq_rl
  reg mmio_dataRespQ_deqReq_rl;
  wire mmio_dataRespQ_deqReq_rl$D_IN, mmio_dataRespQ_deqReq_rl$EN;

  // register mmio_dataRespQ_empty
  reg mmio_dataRespQ_empty;
  wire mmio_dataRespQ_empty$D_IN, mmio_dataRespQ_empty$EN;

  // register mmio_dataRespQ_enqReq_rl
  reg [65 : 0] mmio_dataRespQ_enqReq_rl;
  wire [65 : 0] mmio_dataRespQ_enqReq_rl$D_IN;
  wire mmio_dataRespQ_enqReq_rl$EN;

  // register mmio_dataRespQ_full
  reg mmio_dataRespQ_full;
  wire mmio_dataRespQ_full$D_IN, mmio_dataRespQ_full$EN;

  // register mmio_fromHostAddr
  reg [60 : 0] mmio_fromHostAddr;
  wire [60 : 0] mmio_fromHostAddr$D_IN;
  wire mmio_fromHostAddr$EN;

  // register mmio_pRqQ_clearReq_rl
  reg mmio_pRqQ_clearReq_rl;
  wire mmio_pRqQ_clearReq_rl$D_IN, mmio_pRqQ_clearReq_rl$EN;

  // register mmio_pRqQ_data_0
  reg [38 : 0] mmio_pRqQ_data_0;
  wire [38 : 0] mmio_pRqQ_data_0$D_IN;
  wire mmio_pRqQ_data_0$EN;

  // register mmio_pRqQ_deqReq_rl
  reg mmio_pRqQ_deqReq_rl;
  wire mmio_pRqQ_deqReq_rl$D_IN, mmio_pRqQ_deqReq_rl$EN;

  // register mmio_pRqQ_empty
  reg mmio_pRqQ_empty;
  wire mmio_pRqQ_empty$D_IN, mmio_pRqQ_empty$EN;

  // register mmio_pRqQ_enqReq_rl
  reg [39 : 0] mmio_pRqQ_enqReq_rl;
  wire [39 : 0] mmio_pRqQ_enqReq_rl$D_IN;
  wire mmio_pRqQ_enqReq_rl$EN;

  // register mmio_pRqQ_full
  reg mmio_pRqQ_full;
  wire mmio_pRqQ_full$D_IN, mmio_pRqQ_full$EN;

  // register mmio_pRsQ_clearReq_rl
  reg mmio_pRsQ_clearReq_rl;
  wire mmio_pRsQ_clearReq_rl$D_IN, mmio_pRsQ_clearReq_rl$EN;

  // register mmio_pRsQ_data_0
  reg [66 : 0] mmio_pRsQ_data_0;
  wire [66 : 0] mmio_pRsQ_data_0$D_IN;
  wire mmio_pRsQ_data_0$EN;

  // register mmio_pRsQ_deqReq_rl
  reg mmio_pRsQ_deqReq_rl;
  wire mmio_pRsQ_deqReq_rl$D_IN, mmio_pRsQ_deqReq_rl$EN;

  // register mmio_pRsQ_empty
  reg mmio_pRsQ_empty;
  wire mmio_pRsQ_empty$D_IN, mmio_pRsQ_empty$EN;

  // register mmio_pRsQ_enqReq_rl
  reg [67 : 0] mmio_pRsQ_enqReq_rl;
  wire [67 : 0] mmio_pRsQ_enqReq_rl$D_IN;
  wire mmio_pRsQ_enqReq_rl$EN;

  // register mmio_pRsQ_full
  reg mmio_pRsQ_full;
  wire mmio_pRsQ_full$D_IN, mmio_pRsQ_full$EN;

  // register mmio_toHostAddr
  reg [60 : 0] mmio_toHostAddr;
  wire [60 : 0] mmio_toHostAddr$D_IN;
  wire mmio_toHostAddr$EN;

  // register outOfReset
  reg outOfReset;
  wire outOfReset$D_IN, outOfReset$EN;

  // register scaprf_ddc_reg
  reg [152 : 0] scaprf_ddc_reg;
  wire [152 : 0] scaprf_ddc_reg$D_IN;
  wire scaprf_ddc_reg$EN;

  // register scaprf_mScratchC_reg
  reg [152 : 0] scaprf_mScratchC_reg;
  wire [152 : 0] scaprf_mScratchC_reg$D_IN;
  wire scaprf_mScratchC_reg$EN;

  // register scaprf_mepcc_reg
  reg [152 : 0] scaprf_mepcc_reg;
  wire [152 : 0] scaprf_mepcc_reg$D_IN;
  wire scaprf_mepcc_reg$EN;

  // register scaprf_mtcc_reg
  reg [152 : 0] scaprf_mtcc_reg;
  wire [152 : 0] scaprf_mtcc_reg$D_IN;
  wire scaprf_mtcc_reg$EN;

  // register scaprf_mtdc_reg
  reg [152 : 0] scaprf_mtdc_reg;
  wire [152 : 0] scaprf_mtdc_reg$D_IN;
  wire scaprf_mtdc_reg$EN;

  // register scaprf_pcc_reg_data_rl
  reg [152 : 0] scaprf_pcc_reg_data_rl;
  wire [152 : 0] scaprf_pcc_reg_data_rl$D_IN;
  wire scaprf_pcc_reg_data_rl$EN;

  // register scaprf_sScratchC_reg
  reg [152 : 0] scaprf_sScratchC_reg;
  wire [152 : 0] scaprf_sScratchC_reg$D_IN;
  wire scaprf_sScratchC_reg$EN;

  // register scaprf_sepcc_reg
  reg [152 : 0] scaprf_sepcc_reg;
  wire [152 : 0] scaprf_sepcc_reg$D_IN;
  wire scaprf_sepcc_reg$EN;

  // register scaprf_stcc_reg
  reg [152 : 0] scaprf_stcc_reg;
  wire [152 : 0] scaprf_stcc_reg$D_IN;
  wire scaprf_stcc_reg$EN;

  // register scaprf_stdc_reg
  reg [152 : 0] scaprf_stdc_reg;
  wire [152 : 0] scaprf_stdc_reg$D_IN;
  wire scaprf_stdc_reg$EN;

  // register scaprf_uScratchC_reg
  reg [152 : 0] scaprf_uScratchC_reg;
  wire [152 : 0] scaprf_uScratchC_reg$D_IN;
  wire scaprf_uScratchC_reg$EN;

  // register scaprf_uepcc_reg
  reg [152 : 0] scaprf_uepcc_reg;
  wire [152 : 0] scaprf_uepcc_reg$D_IN;
  wire scaprf_uepcc_reg$EN;

  // register scaprf_utcc_reg
  reg [152 : 0] scaprf_utcc_reg;
  wire [152 : 0] scaprf_utcc_reg$D_IN;
  wire scaprf_utcc_reg$EN;

  // register scaprf_utdc_reg
  reg [152 : 0] scaprf_utdc_reg;
  wire [152 : 0] scaprf_utdc_reg$D_IN;
  wire scaprf_utdc_reg$EN;

  // register started
  reg started;
  wire started$D_IN, started$EN;

  // register update_vm_info
  reg update_vm_info;
  wire update_vm_info$D_IN, update_vm_info$EN;

  // ports of submodule coreFix_aluExe_0_dispToRegQ
  reg [3 : 0] coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [157 : 0] coreFix_aluExe_0_dispToRegQ$enq_x,
		 coreFix_aluExe_0_dispToRegQ$first;
  wire [11 : 0] coreFix_aluExe_0_dispToRegQ$specUpdate_correctSpeculation_mask;
  wire coreFix_aluExe_0_dispToRegQ$EN_deq,
       coreFix_aluExe_0_dispToRegQ$EN_enq,
       coreFix_aluExe_0_dispToRegQ$EN_specUpdate_correctSpeculation,
       coreFix_aluExe_0_dispToRegQ$EN_specUpdate_incorrectSpeculation,
       coreFix_aluExe_0_dispToRegQ$RDY_deq,
       coreFix_aluExe_0_dispToRegQ$RDY_enq,
       coreFix_aluExe_0_dispToRegQ$RDY_first,
       coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_aluExe_0_exeToFinQ
  reg [3 : 0] coreFix_aluExe_0_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [326 : 0] coreFix_aluExe_0_exeToFinQ$enq_x,
		 coreFix_aluExe_0_exeToFinQ$first;
  wire [11 : 0] coreFix_aluExe_0_exeToFinQ$specUpdate_correctSpeculation_mask;
  wire coreFix_aluExe_0_exeToFinQ$EN_deq,
       coreFix_aluExe_0_exeToFinQ$EN_enq,
       coreFix_aluExe_0_exeToFinQ$EN_specUpdate_correctSpeculation,
       coreFix_aluExe_0_exeToFinQ$EN_specUpdate_incorrectSpeculation,
       coreFix_aluExe_0_exeToFinQ$RDY_deq,
       coreFix_aluExe_0_exeToFinQ$RDY_enq,
       coreFix_aluExe_0_exeToFinQ$RDY_first,
       coreFix_aluExe_0_exeToFinQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_aluExe_0_regToExeQ
  reg [3 : 0] coreFix_aluExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [421 : 0] coreFix_aluExe_0_regToExeQ$enq_x,
		 coreFix_aluExe_0_regToExeQ$first;
  wire [11 : 0] coreFix_aluExe_0_regToExeQ$specUpdate_correctSpeculation_mask;
  wire coreFix_aluExe_0_regToExeQ$EN_deq,
       coreFix_aluExe_0_regToExeQ$EN_enq,
       coreFix_aluExe_0_regToExeQ$EN_specUpdate_correctSpeculation,
       coreFix_aluExe_0_regToExeQ$EN_specUpdate_incorrectSpeculation,
       coreFix_aluExe_0_regToExeQ$RDY_deq,
       coreFix_aluExe_0_regToExeQ$RDY_enq,
       coreFix_aluExe_0_regToExeQ$RDY_first,
       coreFix_aluExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_aluExe_0_rsAlu
  reg [7 : 0] coreFix_aluExe_0_rsAlu$setRegReady_2_put,
	      coreFix_aluExe_0_rsAlu$setRegReady_4_put;
  reg [3 : 0] coreFix_aluExe_0_rsAlu$specUpdate_incorrectSpeculation_kill_tag;
  wire [161 : 0] coreFix_aluExe_0_rsAlu$dispatchData,
		 coreFix_aluExe_0_rsAlu$enq_x;
  wire [11 : 0] coreFix_aluExe_0_rsAlu$specUpdate_correctSpeculation_mask;
  wire [7 : 0] coreFix_aluExe_0_rsAlu$setRegReady_0_put,
	       coreFix_aluExe_0_rsAlu$setRegReady_1_put,
	       coreFix_aluExe_0_rsAlu$setRegReady_3_put;
  wire [5 : 0] coreFix_aluExe_0_rsAlu$setRobEnqTime_t;
  wire [4 : 0] coreFix_aluExe_0_rsAlu$approximateCount;
  wire coreFix_aluExe_0_rsAlu$EN_doDispatch,
       coreFix_aluExe_0_rsAlu$EN_enq,
       coreFix_aluExe_0_rsAlu$EN_setRegReady_0_put,
       coreFix_aluExe_0_rsAlu$EN_setRegReady_1_put,
       coreFix_aluExe_0_rsAlu$EN_setRegReady_2_put,
       coreFix_aluExe_0_rsAlu$EN_setRegReady_3_put,
       coreFix_aluExe_0_rsAlu$EN_setRegReady_4_put,
       coreFix_aluExe_0_rsAlu$EN_setRobEnqTime,
       coreFix_aluExe_0_rsAlu$EN_specUpdate_correctSpeculation,
       coreFix_aluExe_0_rsAlu$EN_specUpdate_incorrectSpeculation,
       coreFix_aluExe_0_rsAlu$RDY_dispatchData,
       coreFix_aluExe_0_rsAlu$RDY_doDispatch,
       coreFix_aluExe_0_rsAlu$RDY_enq,
       coreFix_aluExe_0_rsAlu$canEnq,
       coreFix_aluExe_0_rsAlu$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_aluExe_1_dispToRegQ
  reg [3 : 0] coreFix_aluExe_1_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [157 : 0] coreFix_aluExe_1_dispToRegQ$enq_x,
		 coreFix_aluExe_1_dispToRegQ$first;
  wire [11 : 0] coreFix_aluExe_1_dispToRegQ$specUpdate_correctSpeculation_mask;
  wire coreFix_aluExe_1_dispToRegQ$EN_deq,
       coreFix_aluExe_1_dispToRegQ$EN_enq,
       coreFix_aluExe_1_dispToRegQ$EN_specUpdate_correctSpeculation,
       coreFix_aluExe_1_dispToRegQ$EN_specUpdate_incorrectSpeculation,
       coreFix_aluExe_1_dispToRegQ$RDY_deq,
       coreFix_aluExe_1_dispToRegQ$RDY_enq,
       coreFix_aluExe_1_dispToRegQ$RDY_first,
       coreFix_aluExe_1_dispToRegQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_aluExe_1_exeToFinQ
  reg [3 : 0] coreFix_aluExe_1_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [326 : 0] coreFix_aluExe_1_exeToFinQ$enq_x,
		 coreFix_aluExe_1_exeToFinQ$first;
  wire [11 : 0] coreFix_aluExe_1_exeToFinQ$specUpdate_correctSpeculation_mask;
  wire coreFix_aluExe_1_exeToFinQ$EN_deq,
       coreFix_aluExe_1_exeToFinQ$EN_enq,
       coreFix_aluExe_1_exeToFinQ$EN_specUpdate_correctSpeculation,
       coreFix_aluExe_1_exeToFinQ$EN_specUpdate_incorrectSpeculation,
       coreFix_aluExe_1_exeToFinQ$RDY_deq,
       coreFix_aluExe_1_exeToFinQ$RDY_enq,
       coreFix_aluExe_1_exeToFinQ$RDY_first,
       coreFix_aluExe_1_exeToFinQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_aluExe_1_regToExeQ
  reg [3 : 0] coreFix_aluExe_1_regToExeQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [421 : 0] coreFix_aluExe_1_regToExeQ$enq_x,
		 coreFix_aluExe_1_regToExeQ$first;
  wire [11 : 0] coreFix_aluExe_1_regToExeQ$specUpdate_correctSpeculation_mask;
  wire coreFix_aluExe_1_regToExeQ$EN_deq,
       coreFix_aluExe_1_regToExeQ$EN_enq,
       coreFix_aluExe_1_regToExeQ$EN_specUpdate_correctSpeculation,
       coreFix_aluExe_1_regToExeQ$EN_specUpdate_incorrectSpeculation,
       coreFix_aluExe_1_regToExeQ$RDY_deq,
       coreFix_aluExe_1_regToExeQ$RDY_enq,
       coreFix_aluExe_1_regToExeQ$RDY_first,
       coreFix_aluExe_1_regToExeQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_aluExe_1_rsAlu
  reg [7 : 0] coreFix_aluExe_1_rsAlu$setRegReady_2_put,
	      coreFix_aluExe_1_rsAlu$setRegReady_4_put;
  reg [3 : 0] coreFix_aluExe_1_rsAlu$specUpdate_incorrectSpeculation_kill_tag;
  wire [161 : 0] coreFix_aluExe_1_rsAlu$dispatchData,
		 coreFix_aluExe_1_rsAlu$enq_x;
  wire [11 : 0] coreFix_aluExe_1_rsAlu$specUpdate_correctSpeculation_mask;
  wire [7 : 0] coreFix_aluExe_1_rsAlu$setRegReady_0_put,
	       coreFix_aluExe_1_rsAlu$setRegReady_1_put,
	       coreFix_aluExe_1_rsAlu$setRegReady_3_put;
  wire [5 : 0] coreFix_aluExe_1_rsAlu$setRobEnqTime_t;
  wire [4 : 0] coreFix_aluExe_1_rsAlu$approximateCount;
  wire coreFix_aluExe_1_rsAlu$EN_doDispatch,
       coreFix_aluExe_1_rsAlu$EN_enq,
       coreFix_aluExe_1_rsAlu$EN_setRegReady_0_put,
       coreFix_aluExe_1_rsAlu$EN_setRegReady_1_put,
       coreFix_aluExe_1_rsAlu$EN_setRegReady_2_put,
       coreFix_aluExe_1_rsAlu$EN_setRegReady_3_put,
       coreFix_aluExe_1_rsAlu$EN_setRegReady_4_put,
       coreFix_aluExe_1_rsAlu$EN_setRobEnqTime,
       coreFix_aluExe_1_rsAlu$EN_specUpdate_correctSpeculation,
       coreFix_aluExe_1_rsAlu$EN_specUpdate_incorrectSpeculation,
       coreFix_aluExe_1_rsAlu$RDY_dispatchData,
       coreFix_aluExe_1_rsAlu$RDY_doDispatch,
       coreFix_aluExe_1_rsAlu$RDY_enq,
       coreFix_aluExe_1_rsAlu$canEnq,
       coreFix_aluExe_1_rsAlu$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_fpuMulDivExe_0_dispToRegQ
  reg [3 : 0] coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [77 : 0] coreFix_fpuMulDivExe_0_dispToRegQ$enq_x,
		coreFix_fpuMulDivExe_0_dispToRegQ$first;
  wire [11 : 0] coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_correctSpeculation_mask;
  wire coreFix_fpuMulDivExe_0_dispToRegQ$EN_deq,
       coreFix_fpuMulDivExe_0_dispToRegQ$EN_enq,
       coreFix_fpuMulDivExe_0_dispToRegQ$EN_specUpdate_correctSpeculation,
       coreFix_fpuMulDivExe_0_dispToRegQ$EN_specUpdate_incorrectSpeculation,
       coreFix_fpuMulDivExe_0_dispToRegQ$RDY_deq,
       coreFix_fpuMulDivExe_0_dispToRegQ$RDY_enq,
       coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first,
       coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_fpuMulDivExe_0_fpuExec_divQ
  reg [3 : 0] coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [42 : 0] coreFix_fpuMulDivExe_0_fpuExec_divQ$enq_x,
		coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data;
  wire [11 : 0] coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_correctSpeculation_mask;
  wire coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_deq,
       coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_enq,
       coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_specUpdate_correctSpeculation,
       coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_specUpdate_incorrectSpeculation,
       coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_deq,
       coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_enq,
       coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_first_data,
       coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_first_poisoned,
       coreFix_fpuMulDivExe_0_fpuExec_divQ$first_poisoned,
       coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_fpuMulDivExe_0_fpuExec_double_div
  wire [130 : 0] coreFix_fpuMulDivExe_0_fpuExec_double_div$request_put;
  wire [68 : 0] coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get;
  wire coreFix_fpuMulDivExe_0_fpuExec_double_div$EN_request_put,
       coreFix_fpuMulDivExe_0_fpuExec_double_div$EN_response_get,
       coreFix_fpuMulDivExe_0_fpuExec_double_div$RDY_request_put,
       coreFix_fpuMulDivExe_0_fpuExec_double_div$RDY_response_get;

  // ports of submodule coreFix_fpuMulDivExe_0_fpuExec_double_fma
  wire [195 : 0] coreFix_fpuMulDivExe_0_fpuExec_double_fma$request_put;
  wire [68 : 0] coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get;
  wire coreFix_fpuMulDivExe_0_fpuExec_double_fma$EN_request_put,
       coreFix_fpuMulDivExe_0_fpuExec_double_fma$EN_response_get,
       coreFix_fpuMulDivExe_0_fpuExec_double_fma$RDY_request_put,
       coreFix_fpuMulDivExe_0_fpuExec_double_fma$RDY_response_get;

  // ports of submodule coreFix_fpuMulDivExe_0_fpuExec_double_sqrt
  wire [68 : 0] coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get;
  wire [66 : 0] coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$request_put;
  wire coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$EN_request_put,
       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$EN_response_get,
       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$RDY_request_put,
       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$RDY_response_get;

  // ports of submodule coreFix_fpuMulDivExe_0_fpuExec_fmaQ
  reg [3 : 0] coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [42 : 0] coreFix_fpuMulDivExe_0_fpuExec_fmaQ$enq_x,
		coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data;
  wire [11 : 0] coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_correctSpeculation_mask;
  wire coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_deq,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_enq,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_specUpdate_correctSpeculation,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_specUpdate_incorrectSpeculation,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_deq,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_enq,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_first_data,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_first_poisoned,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_poisoned,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_fpuMulDivExe_0_fpuExec_simpleQ
  reg [3 : 0] coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [101 : 0] coreFix_fpuMulDivExe_0_fpuExec_simpleQ$enq_x,
		 coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first;
  wire [11 : 0] coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_correctSpeculation_mask;
  wire coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_deq,
       coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_enq,
       coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_specUpdate_correctSpeculation,
       coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_specUpdate_incorrectSpeculation,
       coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_deq,
       coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_enq,
       coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_first,
       coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_fpuMulDivExe_0_fpuExec_sqrtQ
  reg [3 : 0] coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [42 : 0] coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$enq_x,
		coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data;
  wire [11 : 0] coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_correctSpeculation_mask;
  wire coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_deq,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_enq,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_specUpdate_correctSpeculation,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_specUpdate_incorrectSpeculation,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_deq,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_enq,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_first_data,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_first_poisoned,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_poisoned,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_fpuMulDivExe_0_mulDivExec_divQ
  reg [3 : 0] coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [35 : 0] coreFix_fpuMulDivExe_0_mulDivExec_divQ$enq_x,
		coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data;
  wire [11 : 0] coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_correctSpeculation_mask;
  wire coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_deq,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_enq,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_specUpdate_correctSpeculation,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_specUpdate_incorrectSpeculation,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_deq,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_enq,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_first_data,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_first_poisoned,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_poisoned,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ
  wire [139 : 0] coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$D_IN,
		 coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$D_OUT;
  wire coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$CLR,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$DEQ,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$EMPTY_N,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$ENQ,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$FULL_N;

  // ports of submodule coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ
  wire [63 : 0] coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$D_IN,
		coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$D_OUT;
  wire coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$CLR,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$DEQ,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$EMPTY_N,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$ENQ,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$FULL_N;

  // ports of submodule coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ
  wire [203 : 0] coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_IN,
		 coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_OUT;
  wire coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$CLR,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$DEQ,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$EMPTY_N,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$ENQ,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$FULL_N;

  // ports of submodule coreFix_fpuMulDivExe_0_mulDivExec_mulQ
  reg [3 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [35 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulQ$enq_x,
		coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data;
  wire [11 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_correctSpeculation_mask;
  wire coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_deq,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_enq,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_specUpdate_correctSpeculation,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_specUpdate_incorrectSpeculation,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_deq,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_enq,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_first_data,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_first_poisoned,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_poisoned,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ
  reg [127 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$D_IN;
  wire [127 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$D_OUT;
  wire coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$CLR,
       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$DEQ,
       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$EMPTY_N,
       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$ENQ;

  // ports of submodule coreFix_fpuMulDivExe_0_regToExeQ
  reg [3 : 0] coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [245 : 0] coreFix_fpuMulDivExe_0_regToExeQ$enq_x,
		 coreFix_fpuMulDivExe_0_regToExeQ$first;
  wire [11 : 0] coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_correctSpeculation_mask;
  wire coreFix_fpuMulDivExe_0_regToExeQ$EN_deq,
       coreFix_fpuMulDivExe_0_regToExeQ$EN_enq,
       coreFix_fpuMulDivExe_0_regToExeQ$EN_specUpdate_correctSpeculation,
       coreFix_fpuMulDivExe_0_regToExeQ$EN_specUpdate_incorrectSpeculation,
       coreFix_fpuMulDivExe_0_regToExeQ$RDY_deq,
       coreFix_fpuMulDivExe_0_regToExeQ$RDY_enq,
       coreFix_fpuMulDivExe_0_regToExeQ$RDY_first,
       coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_fpuMulDivExe_0_rsFpuMulDiv
  reg [7 : 0] coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_2_put,
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put;
  reg [3 : 0] coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_incorrectSpeculation_kill_tag;
  wire [86 : 0] coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData,
		coreFix_fpuMulDivExe_0_rsFpuMulDiv$enq_x;
  wire [11 : 0] coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_correctSpeculation_mask;
  wire [7 : 0] coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_0_put,
	       coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_1_put,
	       coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_3_put;
  wire [5 : 0] coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRobEnqTime_t;
  wire coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_doDispatch,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_enq,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_0_put,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_1_put,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_2_put,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_3_put,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_4_put,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRobEnqTime,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_specUpdate_correctSpeculation,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_specUpdate_incorrectSpeculation,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_dispatchData,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_doDispatch,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_enq,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_cRqMshr
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_n;
  wire [512 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setData_d,
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getData;
  wire [152 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getEmptyEntryInit_r,
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getRq,
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq,
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getRq,
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getRq;
  wire [63 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain_addr;
  wire [58 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSlot,
		coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_slot,
		coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getSlot,
		coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getSlot,
		coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_setWaitSt_setSlot_clearData_slot;
  wire [3 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setSucc_succ;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getEmptyEntryInit,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getRq_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSlot_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setData_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_state,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setSucc_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getRq_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getSlot_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getData_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getRq_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getSlot_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getState,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getState_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_setWaitSt_setSlot_clearData_n;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_cRqTransfer_getEmptyEntryInit,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_releaseEntry,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_setData,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_setStateSlot,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_setSucc,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_sendRsToP_cRq_setWaitSt_setSlot_clearData,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_stuck_get,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$RDY_cRqTransfer_getEmptyEntryInit,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$RDY_pipelineResp_releaseEntry;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_pRqMshr
  wire [512 : 0] coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_setDone_setData_d,
		 coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getData;
  wire [65 : 0] coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$getEmptyEntryInit_r,
		coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq,
		coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getRq;
  wire [1 : 0] coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$getEmptyEntryInit,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq_n,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getState_n,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_releaseEntry_n,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_setDone_setData_n,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getData_n,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getRq_n,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_releaseEntry_n;
  wire coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_getEmptyEntryInit,
       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_pipelineResp_releaseEntry,
       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_pipelineResp_setDone_setData,
       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_sendRsToP_pRq_releaseEntry,
       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_stuck_get,
       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$RDY_getEmptyEntryInit,
       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$RDY_pipelineResp_releaseEntry,
       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$RDY_sendRsToP_pRq_releaseEntry;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_pipeline
  reg [583 : 0] coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_r;
  reg [570 : 0] coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_wrRam;
  reg [3 : 0] coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_swapRq;
  reg coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_updateRep;
  wire [579 : 0] coreFix_memExe_dMem_cache_m_banks_0_pipeline$first;
  wire coreFix_memExe_dMem_cache_m_banks_0_pipeline$EN_deqWrite,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline$EN_send,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_send;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_IN,
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$CLR,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$DEQ,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$EMPTY_N,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$ENQ,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$FULL_N;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$D_IN,
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$D_OUT;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$CLR,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$DEQ,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$EMPTY_N,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$ENQ,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$FULL_N;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$D_IN,
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$D_OUT;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$CLR,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$DEQ,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$EMPTY_N,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$ENQ,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$FULL_N;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ
  wire [3 : 0] coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_IN,
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$CLR,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$DEQ,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$EMPTY_N,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$ENQ,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$FULL_N;

  // ports of submodule coreFix_memExe_dTlb
  reg [3 : 0] coreFix_memExe_dTlb$specUpdate_incorrectSpeculation_kill_tag;
  wire [174 : 0] coreFix_memExe_dTlb$procResp;
  wire [105 : 0] coreFix_memExe_dTlb$procReq_req;
  wire [82 : 0] coreFix_memExe_dTlb$toParent_ldTransRsFromP_enq_x;
  wire [48 : 0] coreFix_memExe_dTlb$updateVMInfo_vm;
  wire [28 : 0] coreFix_memExe_dTlb$toParent_rqToP_first;
  wire [11 : 0] coreFix_memExe_dTlb$specUpdate_correctSpeculation_mask;
  wire [2 : 0] coreFix_memExe_dTlb$perf_req_r;
  wire coreFix_memExe_dTlb$EN_deqProcResp,
       coreFix_memExe_dTlb$EN_flush,
       coreFix_memExe_dTlb$EN_perf_req,
       coreFix_memExe_dTlb$EN_perf_resp,
       coreFix_memExe_dTlb$EN_perf_setStatus,
       coreFix_memExe_dTlb$EN_procReq,
       coreFix_memExe_dTlb$EN_specUpdate_correctSpeculation,
       coreFix_memExe_dTlb$EN_specUpdate_incorrectSpeculation,
       coreFix_memExe_dTlb$EN_toParent_flush_request_get,
       coreFix_memExe_dTlb$EN_toParent_flush_response_put,
       coreFix_memExe_dTlb$EN_toParent_ldTransRsFromP_enq,
       coreFix_memExe_dTlb$EN_toParent_rqToP_deq,
       coreFix_memExe_dTlb$EN_updateVMInfo,
       coreFix_memExe_dTlb$RDY_deqProcResp,
       coreFix_memExe_dTlb$RDY_flush,
       coreFix_memExe_dTlb$RDY_procReq,
       coreFix_memExe_dTlb$RDY_procResp,
       coreFix_memExe_dTlb$RDY_toParent_flush_request_get,
       coreFix_memExe_dTlb$RDY_toParent_flush_response_put,
       coreFix_memExe_dTlb$RDY_toParent_ldTransRsFromP_enq,
       coreFix_memExe_dTlb$RDY_toParent_rqToP_deq,
       coreFix_memExe_dTlb$RDY_toParent_rqToP_first,
       coreFix_memExe_dTlb$flush_done,
       coreFix_memExe_dTlb$noPendingReq,
       coreFix_memExe_dTlb$perf_setStatus_doStats,
       coreFix_memExe_dTlb$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_memExe_dispToRegQ
  reg [3 : 0] coreFix_memExe_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [97 : 0] coreFix_memExe_dispToRegQ$enq_x,
		coreFix_memExe_dispToRegQ$first;
  wire [11 : 0] coreFix_memExe_dispToRegQ$specUpdate_correctSpeculation_mask;
  wire coreFix_memExe_dispToRegQ$EN_deq,
       coreFix_memExe_dispToRegQ$EN_enq,
       coreFix_memExe_dispToRegQ$EN_specUpdate_correctSpeculation,
       coreFix_memExe_dispToRegQ$EN_specUpdate_incorrectSpeculation,
       coreFix_memExe_dispToRegQ$RDY_deq,
       coreFix_memExe_dispToRegQ$RDY_enq,
       coreFix_memExe_dispToRegQ$RDY_first,
       coreFix_memExe_dispToRegQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_memExe_lsq
  reg [3 : 0] coreFix_memExe_lsq$specUpdate_incorrectSpeculation_kill_tag;
  wire [170 : 0] coreFix_memExe_lsq$firstSt;
  wire [118 : 0] coreFix_memExe_lsq$firstLd;
  wire [76 : 0] coreFix_memExe_lsq$getIssueLd;
  wire [74 : 0] coreFix_memExe_lsq$issueLd;
  wire [73 : 0] coreFix_memExe_lsq$respLd;
  wire [67 : 0] coreFix_memExe_lsq$issueLd_sbRes;
  wire [63 : 0] coreFix_memExe_lsq$issueLd_paddr,
		coreFix_memExe_lsq$respLd_alignedData,
		coreFix_memExe_lsq$updateAddr_paddr,
		coreFix_memExe_lsq$updateData_d;
  wire [17 : 0] coreFix_memExe_lsq$enqLd_mem_inst,
		coreFix_memExe_lsq$enqSt_mem_inst;
  wire [11 : 0] coreFix_memExe_lsq$enqLd_inst_tag,
		coreFix_memExe_lsq$enqLd_spec_bits,
		coreFix_memExe_lsq$enqSt_inst_tag,
		coreFix_memExe_lsq$enqSt_spec_bits,
		coreFix_memExe_lsq$specUpdate_correctSpeculation_mask;
  wire [9 : 0] coreFix_memExe_lsq$getHit;
  wire [8 : 0] coreFix_memExe_lsq$enqLd_dst, coreFix_memExe_lsq$enqSt_dst;
  wire [7 : 0] coreFix_memExe_lsq$getOrigBE,
	       coreFix_memExe_lsq$issueLd_shiftedBE,
	       coreFix_memExe_lsq$updateAddr_shiftedBE;
  wire [6 : 0] coreFix_memExe_lsq$enqLdTag, coreFix_memExe_lsq$enqStTag;
  wire [5 : 0] coreFix_memExe_lsq$getHit_t,
	       coreFix_memExe_lsq$getOrigBE_t,
	       coreFix_memExe_lsq$setAtCommit_0_put,
	       coreFix_memExe_lsq$setAtCommit_1_put,
	       coreFix_memExe_lsq$updateAddr_lsqTag;
  wire [4 : 0] coreFix_memExe_lsq$issueLd_lsqTag,
	       coreFix_memExe_lsq$respLd_t,
	       coreFix_memExe_lsq$updateAddr_fault;
  wire [3 : 0] coreFix_memExe_lsq$updateData_t;
  wire [1 : 0] coreFix_memExe_lsq$wakeupLdStalledBySB_sbIdx;
  wire coreFix_memExe_lsq$EN_deqLd,
       coreFix_memExe_lsq$EN_deqSt,
       coreFix_memExe_lsq$EN_enqLd,
       coreFix_memExe_lsq$EN_enqSt,
       coreFix_memExe_lsq$EN_getHit,
       coreFix_memExe_lsq$EN_getIssueLd,
       coreFix_memExe_lsq$EN_issueLd,
       coreFix_memExe_lsq$EN_respLd,
       coreFix_memExe_lsq$EN_setAtCommit_0_put,
       coreFix_memExe_lsq$EN_setAtCommit_1_put,
       coreFix_memExe_lsq$EN_specUpdate_correctSpeculation,
       coreFix_memExe_lsq$EN_specUpdate_incorrectSpeculation,
       coreFix_memExe_lsq$EN_updateAddr,
       coreFix_memExe_lsq$EN_updateData,
       coreFix_memExe_lsq$EN_wakeupLdStalledBySB,
       coreFix_memExe_lsq$RDY_deqLd,
       coreFix_memExe_lsq$RDY_deqSt,
       coreFix_memExe_lsq$RDY_enqLd,
       coreFix_memExe_lsq$RDY_enqSt,
       coreFix_memExe_lsq$RDY_firstLd,
       coreFix_memExe_lsq$RDY_firstSt,
       coreFix_memExe_lsq$RDY_getIssueLd,
       coreFix_memExe_lsq$specUpdate_incorrectSpeculation_kill_all,
       coreFix_memExe_lsq$stqEmpty,
       coreFix_memExe_lsq$updateAddr,
       coreFix_memExe_lsq$updateAddr_isMMIO;

  // ports of submodule coreFix_memExe_regToExeQ
  reg [3 : 0] coreFix_memExe_regToExeQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [192 : 0] coreFix_memExe_regToExeQ$enq_x,
		 coreFix_memExe_regToExeQ$first;
  wire [11 : 0] coreFix_memExe_regToExeQ$specUpdate_correctSpeculation_mask;
  wire coreFix_memExe_regToExeQ$EN_deq,
       coreFix_memExe_regToExeQ$EN_enq,
       coreFix_memExe_regToExeQ$EN_specUpdate_correctSpeculation,
       coreFix_memExe_regToExeQ$EN_specUpdate_incorrectSpeculation,
       coreFix_memExe_regToExeQ$RDY_deq,
       coreFix_memExe_regToExeQ$RDY_enq,
       coreFix_memExe_regToExeQ$RDY_first,
       coreFix_memExe_regToExeQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_memExe_rsMem
  reg [7 : 0] coreFix_memExe_rsMem$setRegReady_2_put,
	      coreFix_memExe_rsMem$setRegReady_4_put;
  reg [3 : 0] coreFix_memExe_rsMem$specUpdate_incorrectSpeculation_kill_tag;
  wire [106 : 0] coreFix_memExe_rsMem$dispatchData,
		 coreFix_memExe_rsMem$enq_x;
  wire [11 : 0] coreFix_memExe_rsMem$specUpdate_correctSpeculation_mask;
  wire [7 : 0] coreFix_memExe_rsMem$setRegReady_0_put,
	       coreFix_memExe_rsMem$setRegReady_1_put,
	       coreFix_memExe_rsMem$setRegReady_3_put;
  wire [5 : 0] coreFix_memExe_rsMem$setRobEnqTime_t;
  wire coreFix_memExe_rsMem$EN_doDispatch,
       coreFix_memExe_rsMem$EN_enq,
       coreFix_memExe_rsMem$EN_setRegReady_0_put,
       coreFix_memExe_rsMem$EN_setRegReady_1_put,
       coreFix_memExe_rsMem$EN_setRegReady_2_put,
       coreFix_memExe_rsMem$EN_setRegReady_3_put,
       coreFix_memExe_rsMem$EN_setRegReady_4_put,
       coreFix_memExe_rsMem$EN_setRobEnqTime,
       coreFix_memExe_rsMem$EN_specUpdate_correctSpeculation,
       coreFix_memExe_rsMem$EN_specUpdate_incorrectSpeculation,
       coreFix_memExe_rsMem$RDY_dispatchData,
       coreFix_memExe_rsMem$RDY_doDispatch,
       coreFix_memExe_rsMem$RDY_enq,
       coreFix_memExe_rsMem$canEnq,
       coreFix_memExe_rsMem$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_memExe_stb
  wire [635 : 0] coreFix_memExe_stb$issue;
  wire [633 : 0] coreFix_memExe_stb$deq;
  wire [67 : 0] coreFix_memExe_stb$search;
  wire [63 : 0] coreFix_memExe_stb$enq_data,
		coreFix_memExe_stb$enq_paddr,
		coreFix_memExe_stb$getEnqIndex_paddr,
		coreFix_memExe_stb$noMatchLdQ_paddr,
		coreFix_memExe_stb$noMatchStQ_paddr,
		coreFix_memExe_stb$search_paddr;
  wire [7 : 0] coreFix_memExe_stb$enq_be,
	       coreFix_memExe_stb$noMatchLdQ_be,
	       coreFix_memExe_stb$noMatchStQ_be,
	       coreFix_memExe_stb$search_be;
  wire [2 : 0] coreFix_memExe_stb$getEnqIndex;
  wire [1 : 0] coreFix_memExe_stb$deq_idx, coreFix_memExe_stb$enq_idx;
  wire coreFix_memExe_stb$EN_deq,
       coreFix_memExe_stb$EN_enq,
       coreFix_memExe_stb$EN_issue,
       coreFix_memExe_stb$RDY_deq,
       coreFix_memExe_stb$RDY_enq,
       coreFix_memExe_stb$RDY_issue,
       coreFix_memExe_stb$isEmpty,
       coreFix_memExe_stb$noMatchLdQ,
       coreFix_memExe_stb$noMatchStQ;

  // ports of submodule coreFix_trainBPQ_0
  wire [159 : 0] coreFix_trainBPQ_0$D_IN, coreFix_trainBPQ_0$D_OUT;
  wire coreFix_trainBPQ_0$CLR,
       coreFix_trainBPQ_0$DEQ,
       coreFix_trainBPQ_0$EMPTY_N,
       coreFix_trainBPQ_0$ENQ,
       coreFix_trainBPQ_0$FULL_N;

  // ports of submodule coreFix_trainBPQ_1
  wire [159 : 0] coreFix_trainBPQ_1$D_IN, coreFix_trainBPQ_1$D_OUT;
  wire coreFix_trainBPQ_1$CLR,
       coreFix_trainBPQ_1$DEQ,
       coreFix_trainBPQ_1$EMPTY_N,
       coreFix_trainBPQ_1$ENQ,
       coreFix_trainBPQ_1$FULL_N;

  // ports of submodule csrf_stats_module_writeQ
  wire csrf_stats_module_writeQ$CLR,
       csrf_stats_module_writeQ$DEQ,
       csrf_stats_module_writeQ$D_IN,
       csrf_stats_module_writeQ$D_OUT,
       csrf_stats_module_writeQ$EMPTY_N,
       csrf_stats_module_writeQ$ENQ,
       csrf_stats_module_writeQ$FULL_N;

  // ports of submodule csrf_terminate_module_terminateQ
  wire csrf_terminate_module_terminateQ$CLR,
       csrf_terminate_module_terminateQ$DEQ,
       csrf_terminate_module_terminateQ$EMPTY_N,
       csrf_terminate_module_terminateQ$ENQ,
       csrf_terminate_module_terminateQ$FULL_N;

  // ports of submodule epochManager
  wire [3 : 0] epochManager$checkEpoch_0_check_e,
	       epochManager$checkEpoch_1_check_e,
	       epochManager$updatePrevEpoch_0_update_e,
	       epochManager$updatePrevEpoch_1_update_e;
  wire epochManager$EN_incrementEpoch,
       epochManager$EN_updatePrevEpoch_0_update,
       epochManager$EN_updatePrevEpoch_1_update,
       epochManager$RDY_incrementEpoch,
       epochManager$checkEpoch_0_check,
       epochManager$checkEpoch_1_check;

  // ports of submodule fetchStage
  reg [63 : 0] fetchStage$redirect_pc;
  wire [582 : 0] fetchStage$iMemIfc_to_parent_fromP_enq_x;
  wire [578 : 0] fetchStage$iMemIfc_to_parent_rsToP_first;
  wire [387 : 0] fetchStage$pipelines_0_first, fetchStage$pipelines_1_first;
  wire [80 : 0] fetchStage$iTlbIfc_toParent_rsFromP_enq_x;
  wire [71 : 0] fetchStage$iMemIfc_to_parent_rqToP_first;
  wire [67 : 0] fetchStage$iMemIfc_cRqStuck_get,
		fetchStage$iMemIfc_pRqStuck_get;
  wire [65 : 0] fetchStage$mmioIfc_instResp_enq_x;
  wire [63 : 0] fetchStage$iMemIfc_to_proc_request_put,
		fetchStage$iTlbIfc_to_proc_request_put,
		fetchStage$mmioIfc_instReq_first_fst,
		fetchStage$mmioIfc_setHtifAddrs_fromHost,
		fetchStage$mmioIfc_setHtifAddrs_toHost,
		fetchStage$start_pc,
		fetchStage$train_predictors_next_pc,
		fetchStage$train_predictors_pc;
  wire [48 : 0] fetchStage$iTlbIfc_updateVMInfo_vm;
  wire [26 : 0] fetchStage$iTlbIfc_toParent_rqToP_first;
  wire [23 : 0] fetchStage$train_predictors_dpTrain;
  wire [4 : 0] fetchStage$train_predictors_iType;
  wire [2 : 0] fetchStage$iTlbIfc_perf_req_r;
  wire [1 : 0] fetchStage$iMemIfc_perf_req_r, fetchStage$perf_req_r;
  wire fetchStage$EN_done_flushing,
       fetchStage$EN_flush_predictors,
       fetchStage$EN_iMemIfc_cRqStuck_get,
       fetchStage$EN_iMemIfc_flush,
       fetchStage$EN_iMemIfc_pRqStuck_get,
       fetchStage$EN_iMemIfc_perf_req,
       fetchStage$EN_iMemIfc_perf_resp,
       fetchStage$EN_iMemIfc_perf_setStatus,
       fetchStage$EN_iMemIfc_to_parent_fromP_enq,
       fetchStage$EN_iMemIfc_to_parent_rqToP_deq,
       fetchStage$EN_iMemIfc_to_parent_rsToP_deq,
       fetchStage$EN_iMemIfc_to_proc_request_put,
       fetchStage$EN_iMemIfc_to_proc_response_get,
       fetchStage$EN_iTlbIfc_flush,
       fetchStage$EN_iTlbIfc_perf_req,
       fetchStage$EN_iTlbIfc_perf_resp,
       fetchStage$EN_iTlbIfc_perf_setStatus,
       fetchStage$EN_iTlbIfc_toParent_flush_request_get,
       fetchStage$EN_iTlbIfc_toParent_flush_response_put,
       fetchStage$EN_iTlbIfc_toParent_rqToP_deq,
       fetchStage$EN_iTlbIfc_toParent_rsFromP_enq,
       fetchStage$EN_iTlbIfc_to_proc_request_put,
       fetchStage$EN_iTlbIfc_to_proc_response_get,
       fetchStage$EN_iTlbIfc_updateVMInfo,
       fetchStage$EN_mmioIfc_instReq_deq,
       fetchStage$EN_mmioIfc_instResp_enq,
       fetchStage$EN_mmioIfc_setHtifAddrs,
       fetchStage$EN_perf_req,
       fetchStage$EN_perf_resp,
       fetchStage$EN_perf_setStatus,
       fetchStage$EN_pipelines_0_deq,
       fetchStage$EN_pipelines_1_deq,
       fetchStage$EN_redirect,
       fetchStage$EN_setWaitRedirect,
       fetchStage$EN_start,
       fetchStage$EN_stop,
       fetchStage$EN_train_predictors,
       fetchStage$RDY_done_flushing,
       fetchStage$RDY_iMemIfc_cRqStuck_get,
       fetchStage$RDY_iMemIfc_pRqStuck_get,
       fetchStage$RDY_iMemIfc_to_parent_fromP_enq,
       fetchStage$RDY_iMemIfc_to_parent_rqToP_deq,
       fetchStage$RDY_iMemIfc_to_parent_rqToP_first,
       fetchStage$RDY_iMemIfc_to_parent_rsToP_deq,
       fetchStage$RDY_iMemIfc_to_parent_rsToP_first,
       fetchStage$RDY_iTlbIfc_flush,
       fetchStage$RDY_iTlbIfc_toParent_flush_request_get,
       fetchStage$RDY_iTlbIfc_toParent_flush_response_put,
       fetchStage$RDY_iTlbIfc_toParent_rqToP_deq,
       fetchStage$RDY_iTlbIfc_toParent_rqToP_first,
       fetchStage$RDY_iTlbIfc_toParent_rsFromP_enq,
       fetchStage$RDY_mmioIfc_instReq_deq,
       fetchStage$RDY_mmioIfc_instReq_first_fst,
       fetchStage$RDY_mmioIfc_instReq_first_snd,
       fetchStage$RDY_mmioIfc_instResp_enq,
       fetchStage$RDY_pipelines_0_deq,
       fetchStage$RDY_pipelines_0_first,
       fetchStage$RDY_pipelines_1_deq,
       fetchStage$RDY_pipelines_1_first,
       fetchStage$iMemIfc_perf_setStatus_doStats,
       fetchStage$iMemIfc_to_parent_fromP_notFull,
       fetchStage$iMemIfc_to_parent_rqToP_notEmpty,
       fetchStage$iMemIfc_to_parent_rsToP_notEmpty,
       fetchStage$iTlbIfc_flush_done,
       fetchStage$iTlbIfc_noPendingReq,
       fetchStage$iTlbIfc_perf_setStatus_doStats,
       fetchStage$mmioIfc_instReq_first_snd,
       fetchStage$perf_setStatus_doStats,
       fetchStage$pipelines_0_canDeq,
       fetchStage$pipelines_1_canDeq,
       fetchStage$train_predictors_isCompressed,
       fetchStage$train_predictors_mispred,
       fetchStage$train_predictors_taken;

  // ports of submodule l2Tlb
  wire [83 : 0] l2Tlb$toChildren_rsToC_first;
  wire [64 : 0] l2Tlb$toMem_memReq_first, l2Tlb$toMem_respLd_enq_x;
  wire [48 : 0] l2Tlb$updateVMInfo_vmD, l2Tlb$updateVMInfo_vmI;
  wire [29 : 0] l2Tlb$toChildren_rqFromC_put;
  wire [3 : 0] l2Tlb$perf_req_r;
  wire l2Tlb$EN_perf_req,
       l2Tlb$EN_perf_resp,
       l2Tlb$EN_perf_setStatus,
       l2Tlb$EN_toChildren_dTlbReqFlush_put,
       l2Tlb$EN_toChildren_flushDone_get,
       l2Tlb$EN_toChildren_iTlbReqFlush_put,
       l2Tlb$EN_toChildren_rqFromC_put,
       l2Tlb$EN_toChildren_rsToC_deq,
       l2Tlb$EN_toMem_memReq_deq,
       l2Tlb$EN_toMem_respLd_enq,
       l2Tlb$EN_updateVMInfo,
       l2Tlb$RDY_toChildren_dTlbReqFlush_put,
       l2Tlb$RDY_toChildren_flushDone_get,
       l2Tlb$RDY_toChildren_iTlbReqFlush_put,
       l2Tlb$RDY_toChildren_rqFromC_put,
       l2Tlb$RDY_toChildren_rsToC_deq,
       l2Tlb$RDY_toChildren_rsToC_first,
       l2Tlb$RDY_toMem_memReq_deq,
       l2Tlb$RDY_toMem_memReq_first,
       l2Tlb$RDY_toMem_respLd_enq,
       l2Tlb$perf_setStatus_doStats,
       l2Tlb$toMem_memReq_notEmpty,
       l2Tlb$toMem_respLd_notFull;

  // ports of submodule perfReqQ
  wire [8 : 0] perfReqQ$D_IN, perfReqQ$D_OUT;
  wire perfReqQ$CLR,
       perfReqQ$DEQ,
       perfReqQ$EMPTY_N,
       perfReqQ$ENQ,
       perfReqQ$FULL_N;

  // ports of submodule regRenamingTable
  reg [3 : 0] regRenamingTable$specUpdate_incorrectSpeculation_kill_tag;
  wire [32 : 0] regRenamingTable$rename_0_getRename,
		regRenamingTable$rename_1_getRename;
  wire [26 : 0] regRenamingTable$rename_0_claimRename_r,
		regRenamingTable$rename_0_getRename_r,
		regRenamingTable$rename_1_claimRename_r,
		regRenamingTable$rename_1_getRename_r;
  wire [11 : 0] regRenamingTable$rename_0_claimRename_sb,
		regRenamingTable$rename_1_claimRename_sb,
		regRenamingTable$specUpdate_correctSpeculation_mask;
  wire regRenamingTable$EN_commit_0_commit,
       regRenamingTable$EN_commit_1_commit,
       regRenamingTable$EN_rename_0_claimRename,
       regRenamingTable$EN_rename_1_claimRename,
       regRenamingTable$EN_specUpdate_correctSpeculation,
       regRenamingTable$EN_specUpdate_incorrectSpeculation,
       regRenamingTable$RDY_commit_0_commit,
       regRenamingTable$RDY_commit_1_commit,
       regRenamingTable$RDY_rename_0_claimRename,
       regRenamingTable$RDY_rename_0_getRename,
       regRenamingTable$RDY_rename_1_claimRename,
       regRenamingTable$RDY_rename_1_getRename,
       regRenamingTable$rename_0_canRename,
       regRenamingTable$rename_1_canRename,
       regRenamingTable$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule rf
  reg [63 : 0] rf$write_2_wr_data, rf$write_3_wr_data;
  reg [6 : 0] rf$write_2_wr_rindx, rf$write_3_wr_rindx;
  wire [63 : 0] rf$read_0_rd1,
		rf$read_0_rd2,
		rf$read_1_rd1,
		rf$read_1_rd2,
		rf$read_2_rd1,
		rf$read_2_rd2,
		rf$read_2_rd3,
		rf$read_3_rd1,
		rf$read_3_rd2,
		rf$write_0_wr_data,
		rf$write_1_wr_data,
		rf$write_4_wr_data;
  wire [6 : 0] rf$read_0_rd1_rindx,
	       rf$read_0_rd2_rindx,
	       rf$read_0_rd3_rindx,
	       rf$read_1_rd1_rindx,
	       rf$read_1_rd2_rindx,
	       rf$read_1_rd3_rindx,
	       rf$read_2_rd1_rindx,
	       rf$read_2_rd2_rindx,
	       rf$read_2_rd3_rindx,
	       rf$read_3_rd1_rindx,
	       rf$read_3_rd2_rindx,
	       rf$read_3_rd3_rindx,
	       rf$read_4_rd1_rindx,
	       rf$read_4_rd2_rindx,
	       rf$read_4_rd3_rindx,
	       rf$write_0_wr_rindx,
	       rf$write_1_wr_rindx,
	       rf$write_4_wr_rindx;
  wire rf$EN_write_0_wr,
       rf$EN_write_1_wr,
       rf$EN_write_2_wr,
       rf$EN_write_3_wr,
       rf$EN_write_4_wr;

  // ports of submodule rob
  reg [551 : 0] rob$enqPort_0_enq_x;
  reg [63 : 0] rob$setExecuted_doFinishFpuMulDiv_0_set_dst_data;
  reg [11 : 0] rob$setExecuted_doFinishFpuMulDiv_0_set_x,
	       rob$specUpdate_incorrectSpeculation_inst_tag;
  reg [4 : 0] rob$setExecuted_deqLSQ_cause,
	      rob$setExecuted_doFinishFpuMulDiv_0_set_fflags;
  reg [3 : 0] rob$specUpdate_incorrectSpeculation_spec_tag;
  wire [551 : 0] rob$deqPort_0_deq_data,
		 rob$deqPort_1_deq_data,
		 rob$enqPort_1_enq_x;
  wire [129 : 0] rob$setExecuted_doFinishAlu_0_set_cf,
		 rob$setExecuted_doFinishAlu_1_set_cf;
  wire [64 : 0] rob$setExecuted_doFinishAlu_0_set_csrData,
		rob$setExecuted_doFinishAlu_1_set_csrData;
  wire [63 : 0] rob$getOrigPC_0_get,
		rob$getOrigPC_1_get,
		rob$getOrigPredPC_0_get,
		rob$getOrigPredPC_1_get,
		rob$setExecuted_doFinishAlu_0_set_dst_data,
		rob$setExecuted_doFinishAlu_1_set_dst_data,
		rob$setExecuted_doFinishMem_store_data,
		rob$setExecuted_doFinishMem_vaddr;
  wire [31 : 0] rob$getOrig_Inst_0_get, rob$getOrig_Inst_1_get;
  wire [11 : 0] rob$deqPort_0_getDeqInstTag,
		rob$enqPort_0_getEnqInstTag,
		rob$enqPort_1_getEnqInstTag,
		rob$getOrigPC_0_get_x,
		rob$getOrigPC_1_get_x,
		rob$getOrigPC_2_get_x,
		rob$getOrigPredPC_0_get_x,
		rob$getOrigPredPC_1_get_x,
		rob$getOrig_Inst_0_get_x,
		rob$getOrig_Inst_1_get_x,
		rob$setExecuted_deqLSQ_x,
		rob$setExecuted_doFinishAlu_0_set_x,
		rob$setExecuted_doFinishAlu_1_set_x,
		rob$setExecuted_doFinishMem_x,
		rob$setLSQAtCommitNotified_x,
		rob$specUpdate_correctSpeculation_mask;
  wire [7 : 0] rob$setExecuted_doFinishMem_store_data_BE;
  wire [5 : 0] rob$getEnqTime;
  wire [2 : 0] rob$setExecuted_deqLSQ_ld_killed;
  wire rob$EN_deqPort_0_deq,
       rob$EN_deqPort_1_deq,
       rob$EN_enqPort_0_enq,
       rob$EN_enqPort_1_enq,
       rob$EN_setExecuted_deqLSQ,
       rob$EN_setExecuted_doFinishAlu_0_set,
       rob$EN_setExecuted_doFinishAlu_1_set,
       rob$EN_setExecuted_doFinishFpuMulDiv_0_set,
       rob$EN_setExecuted_doFinishMem,
       rob$EN_setLSQAtCommitNotified,
       rob$EN_specUpdate_correctSpeculation,
       rob$EN_specUpdate_incorrectSpeculation,
       rob$RDY_deqPort_0_deq,
       rob$RDY_deqPort_0_deq_data,
       rob$RDY_deqPort_1_deq,
       rob$RDY_deqPort_1_deq_data,
       rob$RDY_enqPort_0_enq,
       rob$RDY_enqPort_1_enq,
       rob$RDY_setExecuted_deqLSQ,
       rob$RDY_setExecuted_doFinishAlu_0_set,
       rob$RDY_setExecuted_doFinishAlu_1_set,
       rob$RDY_setExecuted_doFinishFpuMulDiv_0_set,
       rob$RDY_setExecuted_doFinishMem,
       rob$RDY_setLSQAtCommitNotified,
       rob$deqPort_0_canDeq,
       rob$deqPort_1_canDeq,
       rob$enqPort_0_canEnq,
       rob$enqPort_1_canEnq,
       rob$isEmpty,
       rob$setExecuted_doFinishMem_access_at_commit,
       rob$setExecuted_doFinishMem_non_mmio_st_done,
       rob$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule sbAggr
  reg [6 : 0] sbAggr$setReady_2_put, sbAggr$setReady_4_put;
  wire [32 : 0] sbAggr$eagerLookup_0_get_r, sbAggr$eagerLookup_1_get_r;
  wire [8 : 0] sbAggr$setBusy_0_set_dst, sbAggr$setBusy_1_set_dst;
  wire [6 : 0] sbAggr$setReady_0_put,
	       sbAggr$setReady_1_put,
	       sbAggr$setReady_3_put;
  wire [3 : 0] sbAggr$eagerLookup_0_get, sbAggr$eagerLookup_1_get;
  wire sbAggr$EN_setBusy_0_set,
       sbAggr$EN_setBusy_1_set,
       sbAggr$EN_setReady_0_put,
       sbAggr$EN_setReady_1_put,
       sbAggr$EN_setReady_2_put,
       sbAggr$EN_setReady_3_put,
       sbAggr$EN_setReady_4_put;

  // ports of submodule sbCons
  reg [6 : 0] sbCons$setReady_2_put, sbCons$setReady_3_put;
  wire [32 : 0] sbCons$eagerLookup_0_get_r,
		sbCons$eagerLookup_1_get_r,
		sbCons$lazyLookup_0_get_r,
		sbCons$lazyLookup_1_get_r,
		sbCons$lazyLookup_2_get_r,
		sbCons$lazyLookup_3_get_r,
		sbCons$lazyLookup_4_get_r;
  wire [8 : 0] sbCons$setBusy_0_set_dst, sbCons$setBusy_1_set_dst;
  wire [6 : 0] sbCons$setReady_0_put,
	       sbCons$setReady_1_put,
	       sbCons$setReady_4_put;
  wire [3 : 0] sbCons$lazyLookup_0_get,
	       sbCons$lazyLookup_1_get,
	       sbCons$lazyLookup_2_get,
	       sbCons$lazyLookup_3_get;
  wire sbCons$EN_setBusy_0_set,
       sbCons$EN_setBusy_1_set,
       sbCons$EN_setReady_0_put,
       sbCons$EN_setReady_1_put,
       sbCons$EN_setReady_2_put,
       sbCons$EN_setReady_3_put,
       sbCons$EN_setReady_4_put;

  // ports of submodule specTagManager
  reg [3 : 0] specTagManager$specUpdate_incorrectSpeculation_kill_tag;
  wire [11 : 0] specTagManager$currentSpecBits,
		specTagManager$specUpdate_correctSpeculation_mask;
  wire [3 : 0] specTagManager$nextSpecTag;
  wire specTagManager$EN_claimSpecTag,
       specTagManager$EN_specUpdate_correctSpeculation,
       specTagManager$EN_specUpdate_incorrectSpeculation,
       specTagManager$RDY_claimSpecTag,
       specTagManager$RDY_nextSpecTag,
       specTagManager$canClaim,
       specTagManager$specUpdate_incorrectSpeculation_kill_all;

  // rule scheduling signals
  wire CAN_FIRE_RL_commitStage_doCommitKilledLd,
       CAN_FIRE_RL_commitStage_doCommitNormalInst,
       CAN_FIRE_RL_commitStage_doCommitSystemInst,
       CAN_FIRE_RL_commitStage_doCommitTrap_flush,
       CAN_FIRE_RL_commitStage_doCommitTrap_handle,
       CAN_FIRE_RL_commitStage_doSetLSQAtCommit,
       CAN_FIRE_RL_commitStage_doSetLSQAtCommit_1,
       CAN_FIRE_RL_commitStage_notifyLSQCommit,
       CAN_FIRE_RL_coreFix_aluExe_0_doDispatchAlu,
       CAN_FIRE_RL_coreFix_aluExe_0_doExeAlu,
       CAN_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F,
       CAN_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T,
       CAN_FIRE_RL_coreFix_aluExe_0_doRegReadAlu,
       CAN_FIRE_RL_coreFix_aluExe_1_doDispatchAlu,
       CAN_FIRE_RL_coreFix_aluExe_1_doExeAlu,
       CAN_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F,
       CAN_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T,
       CAN_FIRE_RL_coreFix_aluExe_1_doRegReadAlu,
       CAN_FIRE_RL_coreFix_doFetchTrainBP,
       CAN_FIRE_RL_coreFix_doFetchTrainBP_1,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqDivPoisoned,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqFmaPoisoned,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqSqrtPoisoned,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqDivPoisoned,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqMulPoisoned,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_compute,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_doInit,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_rl_ready,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_canon,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_canon,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_canon,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_canon,
       CAN_FIRE_RL_coreFix_globalSpecUpdate_canon_correct_spec,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_canonicalize,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_canonicalize,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromSendRsToP,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_canonicalize,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_canonicalize,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq,
       CAN_FIRE_RL_coreFix_memExe_dMem_perfReqQ_canonicalize,
       CAN_FIRE_RL_coreFix_memExe_dMem_perfReqQ_clearReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_perfReqQ_deqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_perfReqQ_enqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem,
       CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq,
       CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue,
       CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq,
       CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault,
       CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue,
       CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_fault,
       CAN_FIRE_RL_coreFix_memExe_doDeqStQ_Fence,
       CAN_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq,
       CAN_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault,
       CAN_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue,
       CAN_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq,
       CAN_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue,
       CAN_FIRE_RL_coreFix_memExe_doDeqStQ_St_Mem,
       CAN_FIRE_RL_coreFix_memExe_doDeqStQ_fault,
       CAN_FIRE_RL_coreFix_memExe_doDispatchMem,
       CAN_FIRE_RL_coreFix_memExe_doExeMem,
       CAN_FIRE_RL_coreFix_memExe_doFinishMem,
       CAN_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ,
       CAN_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate,
       CAN_FIRE_RL_coreFix_memExe_doIssueSB,
       CAN_FIRE_RL_coreFix_memExe_doRegReadMem,
       CAN_FIRE_RL_coreFix_memExe_doRespLdForward,
       CAN_FIRE_RL_coreFix_memExe_doRespLdMem,
       CAN_FIRE_RL_coreFix_memExe_forwardQ_canonicalize,
       CAN_FIRE_RL_coreFix_memExe_forwardQ_clearReq_canon,
       CAN_FIRE_RL_coreFix_memExe_forwardQ_deqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_forwardQ_enqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_memRespLdQ_canonicalize,
       CAN_FIRE_RL_coreFix_memExe_memRespLdQ_clearReq_canon,
       CAN_FIRE_RL_coreFix_memExe_memRespLdQ_deqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_memRespLdQ_enqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_reqLdQ_data_0_canon,
       CAN_FIRE_RL_coreFix_memExe_reqLdQ_empty_canon,
       CAN_FIRE_RL_coreFix_memExe_reqLdQ_full_canon,
       CAN_FIRE_RL_coreFix_memExe_reqLrScAmoQ_data_0_canon,
       CAN_FIRE_RL_coreFix_memExe_reqLrScAmoQ_empty_canon,
       CAN_FIRE_RL_coreFix_memExe_reqLrScAmoQ_full_canon,
       CAN_FIRE_RL_coreFix_memExe_reqStQ_data_0_canon,
       CAN_FIRE_RL_coreFix_memExe_reqStQ_empty_canon,
       CAN_FIRE_RL_coreFix_memExe_reqStQ_full_canon,
       CAN_FIRE_RL_coreFix_memExe_respLrScAmoQ_canonicalize,
       CAN_FIRE_RL_coreFix_memExe_respLrScAmoQ_clearReq_canon,
       CAN_FIRE_RL_coreFix_memExe_respLrScAmoQ_deqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_respLrScAmoQ_enqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_sendLdToMem,
       CAN_FIRE_RL_coreFix_memExe_sendLrScAmoToMem,
       CAN_FIRE_RL_coreFix_memExe_sendStToMem,
       CAN_FIRE_RL_csrInstOrInterruptInflight_canon,
       CAN_FIRE_RL_csrf_incCycle,
       CAN_FIRE_RL_csrf_mcycle_ehr_data_canon,
       CAN_FIRE_RL_csrf_mcycle_ehr_setRead,
       CAN_FIRE_RL_csrf_minstret_ehr_data_canon,
       CAN_FIRE_RL_csrf_minstret_ehr_setRead,
       CAN_FIRE_RL_mkConnectionGetPut,
       CAN_FIRE_RL_mkConnectionGetPut_1,
       CAN_FIRE_RL_mmio_cRqQ_canonicalize,
       CAN_FIRE_RL_mmio_cRqQ_clearReq_canon,
       CAN_FIRE_RL_mmio_cRqQ_deqReq_canon,
       CAN_FIRE_RL_mmio_cRqQ_enqReq_canon,
       CAN_FIRE_RL_mmio_cRsQ_canonicalize,
       CAN_FIRE_RL_mmio_cRsQ_clearReq_canon,
       CAN_FIRE_RL_mmio_cRsQ_deqReq_canon,
       CAN_FIRE_RL_mmio_cRsQ_enqReq_canon,
       CAN_FIRE_RL_mmio_dataPendQ_canonicalize,
       CAN_FIRE_RL_mmio_dataPendQ_clearReq_canon,
       CAN_FIRE_RL_mmio_dataPendQ_deqReq_canon,
       CAN_FIRE_RL_mmio_dataPendQ_enqReq_canon,
       CAN_FIRE_RL_mmio_dataReqQ_canonicalize,
       CAN_FIRE_RL_mmio_dataReqQ_clearReq_canon,
       CAN_FIRE_RL_mmio_dataReqQ_deqReq_canon,
       CAN_FIRE_RL_mmio_dataReqQ_enqReq_canon,
       CAN_FIRE_RL_mmio_dataRespQ_canonicalize,
       CAN_FIRE_RL_mmio_dataRespQ_clearReq_canon,
       CAN_FIRE_RL_mmio_dataRespQ_deqReq_canon,
       CAN_FIRE_RL_mmio_dataRespQ_enqReq_canon,
       CAN_FIRE_RL_mmio_handlePRq,
       CAN_FIRE_RL_mmio_pRqQ_canonicalize,
       CAN_FIRE_RL_mmio_pRqQ_clearReq_canon,
       CAN_FIRE_RL_mmio_pRqQ_deqReq_canon,
       CAN_FIRE_RL_mmio_pRqQ_enqReq_canon,
       CAN_FIRE_RL_mmio_pRsQ_canonicalize,
       CAN_FIRE_RL_mmio_pRsQ_clearReq_canon,
       CAN_FIRE_RL_mmio_pRsQ_deqReq_canon,
       CAN_FIRE_RL_mmio_pRsQ_enqReq_canon,
       CAN_FIRE_RL_mmio_sendDataReq,
       CAN_FIRE_RL_mmio_sendDataResp,
       CAN_FIRE_RL_mmio_sendInstReq,
       CAN_FIRE_RL_mmio_sendInstResp,
       CAN_FIRE_RL_prepareCachesAndTlbs,
       CAN_FIRE_RL_readyToFetch,
       CAN_FIRE_RL_renameStage_doRenaming,
       CAN_FIRE_RL_renameStage_doRenaming_SystemInst,
       CAN_FIRE_RL_renameStage_doRenaming_Trap,
       CAN_FIRE_RL_renameStage_doRenaming_wrongPath,
       CAN_FIRE_RL_rl_outOfReset,
       CAN_FIRE_RL_scaprf_pcc_reg_data_canon,
       CAN_FIRE_RL_scaprf_pcc_reg_setRead,
       CAN_FIRE_RL_sendDTlbReq,
       CAN_FIRE_RL_sendFlushDone,
       CAN_FIRE_RL_sendITlbReq,
       CAN_FIRE_RL_sendRobEnqTime,
       CAN_FIRE_RL_sendRsToDTlb,
       CAN_FIRE_RL_sendRsToITlb,
       CAN_FIRE_coreIndInv_perfResp,
       CAN_FIRE_coreIndInv_terminate,
       CAN_FIRE_coreReq_perfReq,
       CAN_FIRE_coreReq_start,
       CAN_FIRE_dCacheToParent_fromP_enq,
       CAN_FIRE_dCacheToParent_rqToP_deq,
       CAN_FIRE_dCacheToParent_rsToP_deq,
       CAN_FIRE_deadlock_checkStarted_get,
       CAN_FIRE_deadlock_commitInstStuck_get,
       CAN_FIRE_deadlock_commitUserInstStuck_get,
       CAN_FIRE_deadlock_dCacheCRqStuck_get,
       CAN_FIRE_deadlock_dCachePRqStuck_get,
       CAN_FIRE_deadlock_iCacheCRqStuck_get,
       CAN_FIRE_deadlock_iCachePRqStuck_get,
       CAN_FIRE_deadlock_renameCorrectPathStuck_get,
       CAN_FIRE_deadlock_renameInstStuck_get,
       CAN_FIRE_iCacheToParent_fromP_enq,
       CAN_FIRE_iCacheToParent_rqToP_deq,
       CAN_FIRE_iCacheToParent_rsToP_deq,
       CAN_FIRE_mmioToPlatform_cRq_deq,
       CAN_FIRE_mmioToPlatform_cRs_deq,
       CAN_FIRE_mmioToPlatform_pRq_enq,
       CAN_FIRE_mmioToPlatform_pRs_enq,
       CAN_FIRE_mmioToPlatform_setTime,
       CAN_FIRE_recvDoStats,
       CAN_FIRE_renameDebug_renameErr_get,
       CAN_FIRE_sendDoStats,
       CAN_FIRE_setMEIP,
       CAN_FIRE_setSEIP,
       CAN_FIRE_tlbToMem_memReq_deq,
       CAN_FIRE_tlbToMem_respLd_enq,
       WILL_FIRE_RL_commitStage_doCommitKilledLd,
       WILL_FIRE_RL_commitStage_doCommitNormalInst,
       WILL_FIRE_RL_commitStage_doCommitSystemInst,
       WILL_FIRE_RL_commitStage_doCommitTrap_flush,
       WILL_FIRE_RL_commitStage_doCommitTrap_handle,
       WILL_FIRE_RL_commitStage_doSetLSQAtCommit,
       WILL_FIRE_RL_commitStage_doSetLSQAtCommit_1,
       WILL_FIRE_RL_commitStage_notifyLSQCommit,
       WILL_FIRE_RL_coreFix_aluExe_0_doDispatchAlu,
       WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu,
       WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F,
       WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T,
       WILL_FIRE_RL_coreFix_aluExe_0_doRegReadAlu,
       WILL_FIRE_RL_coreFix_aluExe_1_doDispatchAlu,
       WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu,
       WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F,
       WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T,
       WILL_FIRE_RL_coreFix_aluExe_1_doRegReadAlu,
       WILL_FIRE_RL_coreFix_doFetchTrainBP,
       WILL_FIRE_RL_coreFix_doFetchTrainBP_1,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqDivPoisoned,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqFmaPoisoned,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqSqrtPoisoned,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqDivPoisoned,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqMulPoisoned,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_compute,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_doInit,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_rl_ready,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_canon,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_canon,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_canon,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_canon,
       WILL_FIRE_RL_coreFix_globalSpecUpdate_canon_correct_spec,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_canonicalize,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_canonicalize,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromSendRsToP,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_canonicalize,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_canonicalize,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq,
       WILL_FIRE_RL_coreFix_memExe_dMem_perfReqQ_canonicalize,
       WILL_FIRE_RL_coreFix_memExe_dMem_perfReqQ_clearReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_perfReqQ_deqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_perfReqQ_enqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem,
       WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq,
       WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue,
       WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq,
       WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault,
       WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue,
       WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault,
       WILL_FIRE_RL_coreFix_memExe_doDeqStQ_Fence,
       WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq,
       WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault,
       WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue,
       WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq,
       WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue,
       WILL_FIRE_RL_coreFix_memExe_doDeqStQ_St_Mem,
       WILL_FIRE_RL_coreFix_memExe_doDeqStQ_fault,
       WILL_FIRE_RL_coreFix_memExe_doDispatchMem,
       WILL_FIRE_RL_coreFix_memExe_doExeMem,
       WILL_FIRE_RL_coreFix_memExe_doFinishMem,
       WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ,
       WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate,
       WILL_FIRE_RL_coreFix_memExe_doIssueSB,
       WILL_FIRE_RL_coreFix_memExe_doRegReadMem,
       WILL_FIRE_RL_coreFix_memExe_doRespLdForward,
       WILL_FIRE_RL_coreFix_memExe_doRespLdMem,
       WILL_FIRE_RL_coreFix_memExe_forwardQ_canonicalize,
       WILL_FIRE_RL_coreFix_memExe_forwardQ_clearReq_canon,
       WILL_FIRE_RL_coreFix_memExe_forwardQ_deqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_forwardQ_enqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_memRespLdQ_canonicalize,
       WILL_FIRE_RL_coreFix_memExe_memRespLdQ_clearReq_canon,
       WILL_FIRE_RL_coreFix_memExe_memRespLdQ_deqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_memRespLdQ_enqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_reqLdQ_data_0_canon,
       WILL_FIRE_RL_coreFix_memExe_reqLdQ_empty_canon,
       WILL_FIRE_RL_coreFix_memExe_reqLdQ_full_canon,
       WILL_FIRE_RL_coreFix_memExe_reqLrScAmoQ_data_0_canon,
       WILL_FIRE_RL_coreFix_memExe_reqLrScAmoQ_empty_canon,
       WILL_FIRE_RL_coreFix_memExe_reqLrScAmoQ_full_canon,
       WILL_FIRE_RL_coreFix_memExe_reqStQ_data_0_canon,
       WILL_FIRE_RL_coreFix_memExe_reqStQ_empty_canon,
       WILL_FIRE_RL_coreFix_memExe_reqStQ_full_canon,
       WILL_FIRE_RL_coreFix_memExe_respLrScAmoQ_canonicalize,
       WILL_FIRE_RL_coreFix_memExe_respLrScAmoQ_clearReq_canon,
       WILL_FIRE_RL_coreFix_memExe_respLrScAmoQ_deqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_respLrScAmoQ_enqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_sendLdToMem,
       WILL_FIRE_RL_coreFix_memExe_sendLrScAmoToMem,
       WILL_FIRE_RL_coreFix_memExe_sendStToMem,
       WILL_FIRE_RL_csrInstOrInterruptInflight_canon,
       WILL_FIRE_RL_csrf_incCycle,
       WILL_FIRE_RL_csrf_mcycle_ehr_data_canon,
       WILL_FIRE_RL_csrf_mcycle_ehr_setRead,
       WILL_FIRE_RL_csrf_minstret_ehr_data_canon,
       WILL_FIRE_RL_csrf_minstret_ehr_setRead,
       WILL_FIRE_RL_mkConnectionGetPut,
       WILL_FIRE_RL_mkConnectionGetPut_1,
       WILL_FIRE_RL_mmio_cRqQ_canonicalize,
       WILL_FIRE_RL_mmio_cRqQ_clearReq_canon,
       WILL_FIRE_RL_mmio_cRqQ_deqReq_canon,
       WILL_FIRE_RL_mmio_cRqQ_enqReq_canon,
       WILL_FIRE_RL_mmio_cRsQ_canonicalize,
       WILL_FIRE_RL_mmio_cRsQ_clearReq_canon,
       WILL_FIRE_RL_mmio_cRsQ_deqReq_canon,
       WILL_FIRE_RL_mmio_cRsQ_enqReq_canon,
       WILL_FIRE_RL_mmio_dataPendQ_canonicalize,
       WILL_FIRE_RL_mmio_dataPendQ_clearReq_canon,
       WILL_FIRE_RL_mmio_dataPendQ_deqReq_canon,
       WILL_FIRE_RL_mmio_dataPendQ_enqReq_canon,
       WILL_FIRE_RL_mmio_dataReqQ_canonicalize,
       WILL_FIRE_RL_mmio_dataReqQ_clearReq_canon,
       WILL_FIRE_RL_mmio_dataReqQ_deqReq_canon,
       WILL_FIRE_RL_mmio_dataReqQ_enqReq_canon,
       WILL_FIRE_RL_mmio_dataRespQ_canonicalize,
       WILL_FIRE_RL_mmio_dataRespQ_clearReq_canon,
       WILL_FIRE_RL_mmio_dataRespQ_deqReq_canon,
       WILL_FIRE_RL_mmio_dataRespQ_enqReq_canon,
       WILL_FIRE_RL_mmio_handlePRq,
       WILL_FIRE_RL_mmio_pRqQ_canonicalize,
       WILL_FIRE_RL_mmio_pRqQ_clearReq_canon,
       WILL_FIRE_RL_mmio_pRqQ_deqReq_canon,
       WILL_FIRE_RL_mmio_pRqQ_enqReq_canon,
       WILL_FIRE_RL_mmio_pRsQ_canonicalize,
       WILL_FIRE_RL_mmio_pRsQ_clearReq_canon,
       WILL_FIRE_RL_mmio_pRsQ_deqReq_canon,
       WILL_FIRE_RL_mmio_pRsQ_enqReq_canon,
       WILL_FIRE_RL_mmio_sendDataReq,
       WILL_FIRE_RL_mmio_sendDataResp,
       WILL_FIRE_RL_mmio_sendInstReq,
       WILL_FIRE_RL_mmio_sendInstResp,
       WILL_FIRE_RL_prepareCachesAndTlbs,
       WILL_FIRE_RL_readyToFetch,
       WILL_FIRE_RL_renameStage_doRenaming,
       WILL_FIRE_RL_renameStage_doRenaming_SystemInst,
       WILL_FIRE_RL_renameStage_doRenaming_Trap,
       WILL_FIRE_RL_renameStage_doRenaming_wrongPath,
       WILL_FIRE_RL_rl_outOfReset,
       WILL_FIRE_RL_scaprf_pcc_reg_data_canon,
       WILL_FIRE_RL_scaprf_pcc_reg_setRead,
       WILL_FIRE_RL_sendDTlbReq,
       WILL_FIRE_RL_sendFlushDone,
       WILL_FIRE_RL_sendITlbReq,
       WILL_FIRE_RL_sendRobEnqTime,
       WILL_FIRE_RL_sendRsToDTlb,
       WILL_FIRE_RL_sendRsToITlb,
       WILL_FIRE_coreIndInv_perfResp,
       WILL_FIRE_coreIndInv_terminate,
       WILL_FIRE_coreReq_perfReq,
       WILL_FIRE_coreReq_start,
       WILL_FIRE_dCacheToParent_fromP_enq,
       WILL_FIRE_dCacheToParent_rqToP_deq,
       WILL_FIRE_dCacheToParent_rsToP_deq,
       WILL_FIRE_deadlock_checkStarted_get,
       WILL_FIRE_deadlock_commitInstStuck_get,
       WILL_FIRE_deadlock_commitUserInstStuck_get,
       WILL_FIRE_deadlock_dCacheCRqStuck_get,
       WILL_FIRE_deadlock_dCachePRqStuck_get,
       WILL_FIRE_deadlock_iCacheCRqStuck_get,
       WILL_FIRE_deadlock_iCachePRqStuck_get,
       WILL_FIRE_deadlock_renameCorrectPathStuck_get,
       WILL_FIRE_deadlock_renameInstStuck_get,
       WILL_FIRE_iCacheToParent_fromP_enq,
       WILL_FIRE_iCacheToParent_rqToP_deq,
       WILL_FIRE_iCacheToParent_rsToP_deq,
       WILL_FIRE_mmioToPlatform_cRq_deq,
       WILL_FIRE_mmioToPlatform_cRs_deq,
       WILL_FIRE_mmioToPlatform_pRq_enq,
       WILL_FIRE_mmioToPlatform_pRs_enq,
       WILL_FIRE_mmioToPlatform_setTime,
       WILL_FIRE_recvDoStats,
       WILL_FIRE_renameDebug_renameErr_get,
       WILL_FIRE_sendDoStats,
       WILL_FIRE_setMEIP,
       WILL_FIRE_setSEIP,
       WILL_FIRE_tlbToMem_memReq_deq,
       WILL_FIRE_tlbToMem_respLd_enq;

  // inputs to muxes for submodule ports
  reg [63 : 0] MUX_coreFix_memExe_lsq$respLd_2__VAL_1,
	       MUX_coreFix_memExe_lsq$respLd_2__VAL_2,
	       MUX_fetchStage$redirect_1__VAL_4;
  reg [4 : 0] MUX_coreFix_memExe_lsq$respLd_1__VAL_1,
	      MUX_coreFix_memExe_lsq$respLd_1__VAL_2;
  reg [1 : 0] MUX_csrf_fs_reg$write_1__VAL_1;
  wire [583 : 0] MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_1,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_2,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_3,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_4;
  wire [579 : 0] MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wset_1__VAL_1,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wset_1__VAL_2;
  wire [570 : 0] MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_1,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_2,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_3,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_4;
  wire [551 : 0] MUX_rob$enqPort_0_enq_1__VAL_1,
		 MUX_rob$enqPort_0_enq_1__VAL_2,
		 MUX_rob$enqPort_0_enq_1__VAL_3;
  wire [264 : 0] MUX_commitStage_commitTrap$write_1__VAL_2;
  wire [161 : 0] MUX_coreFix_aluExe_0_rsAlu$enq_1__VAL_1,
		 MUX_coreFix_aluExe_0_rsAlu$enq_1__VAL_2;
  wire [160 : 0] MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__VAL_1,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__VAL_2;
  wire [159 : 0] MUX_coreFix_trainBPQ_0$enq_1__VAL_1,
		 MUX_coreFix_trainBPQ_0$enq_1__VAL_2,
		 MUX_coreFix_trainBPQ_1$enq_1__VAL_1,
		 MUX_coreFix_trainBPQ_1$enq_1__VAL_2;
  wire [152 : 0] MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_1,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_2,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_3,
		 MUX_coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wset_1__VAL_1,
		 MUX_coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wset_1__VAL_2;
  wire [142 : 0] MUX_mmio_cRqQ_enqReq_lat_0$wset_1__VAL_1,
		 MUX_mmio_cRqQ_enqReq_lat_0$wset_1__VAL_2,
		 MUX_mmio_dataReqQ_enqReq_lat_0$wset_1__VAL_1,
		 MUX_mmio_dataReqQ_enqReq_lat_0$wset_1__VAL_2;
  wire [69 : 0] MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__VAL_1,
		MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__VAL_2,
		MUX_coreFix_memExe_memRespLdQ_enqReq_lat_0$wset_1__VAL_2;
  wire [67 : 0] MUX_coreFix_memExe_lsq$issueLd_4__VAL_1;
  wire [64 : 0] MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_1,
		MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_2,
		MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_3;
  wire [63 : 0] MUX_commitStage_rg_serial_num$write_1__VAL_1,
		MUX_commitStage_rg_serial_num$write_1__VAL_2,
		MUX_csrf_mepc_csr$write_1__VAL_2,
		MUX_csrf_minstret_ehr_data_lat_1$wset_1__VAL_1,
		MUX_csrf_minstret_ehr_data_lat_1$wset_1__VAL_2,
		MUX_csrf_mtval_csr$write_1__VAL_1,
		MUX_csrf_mtval_csr$write_1__VAL_2,
		MUX_csrf_sepc_csr$write_1__VAL_2,
		MUX_fetchStage$redirect_1__VAL_3,
		MUX_rf$write_2_wr_2__VAL_2,
		MUX_rf$write_2_wr_2__VAL_3,
		MUX_rf$write_2_wr_2__VAL_4,
		MUX_rf$write_2_wr_2__VAL_5,
		MUX_rf$write_2_wr_2__VAL_6,
		MUX_rf$write_3_wr_2__VAL_4,
		MUX_rf$write_3_wr_2__VAL_5;
  wire [58 : 0] MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_3__VAL_1,
		MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_3__VAL_2,
		MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__VAL_1,
		MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__VAL_2;
  wire [29 : 0] MUX_l2Tlb$toChildren_rqFromC_put_1__VAL_1,
		MUX_l2Tlb$toChildren_rqFromC_put_1__VAL_2;
  wire [7 : 0] MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1,
	       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2,
	       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3,
	       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4,
	       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5,
	       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6,
	       MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1,
	       MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2,
	       MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3;
  wire [5 : 0] MUX_coreFix_memExe_lsq$getHit_1__VAL_1;
  wire [4 : 0] MUX_csrf_fflags_reg$write_1__VAL_2,
	       MUX_rob$setExecuted_deqLSQ_2__VAL_2,
	       MUX_rob$setExecuted_deqLSQ_2__VAL_6,
	       MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_2,
	       MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_3,
	       MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_4;
  wire [3 : 0] MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__VAL_1,
	       MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__VAL_1,
	       MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__VAL_2;
  wire [2 : 0] MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_2__VAL_1;
  wire [1 : 0] MUX_csrf_mpp_reg$write_1__VAL_1,
	       MUX_csrf_prv_reg$write_1__VAL_1,
	       MUX_csrf_prv_reg$write_1__VAL_2;
  wire MUX_commitStage_rg_serial_num$write_1__SEL_1,
       MUX_commitStage_setLSQAtCommit_0$wset_1__SEL_1,
       MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3,
       MUX_coreFix_aluExe_0_rsAlu$enq_1__SEL_1,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_1,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_1,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_2,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4,
       MUX_coreFix_aluExe_1_rsAlu$setRegReady_4_put_1__SEL_1,
       MUX_coreFix_aluExe_1_rsAlu$setRegReady_4_put_1__SEL_2,
       MUX_coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put_1__SEL_1,
       MUX_coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put_1__SEL_2,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_1,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_1__SEL_1,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__SEL_1,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__SEL_2,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__SEL_3,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__SEL_1,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_3__VAL_1,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__SEL_1,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__SEL_2,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__SEL_1,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__SEL_2,
       MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__SEL_1,
       MUX_coreFix_memExe_lsq$getHit_1__SEL_1,
       MUX_coreFix_memExe_lsq$wakeupLdStalledBySB_1__SEL_1,
       MUX_coreFix_memExe_reqLdQ_data_0_lat_0$wset_1__SEL_1,
       MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__SEL_1,
       MUX_coreFix_memExe_rsMem$setRegReady_4_put_1__SEL_1,
       MUX_coreFix_memExe_rsMem$setRegReady_4_put_1__SEL_2,
       MUX_coreFix_memExe_waitLrScAmoMMIOResp$write_1__SEL_1,
       MUX_coreFix_trainBPQ_0$enq_1__SEL_1,
       MUX_coreFix_trainBPQ_1$enq_1__SEL_1,
       MUX_csrInstOrInterruptInflight_lat_1$wset_1__SEL_2,
       MUX_csrf_external_int_pend_vec_1$write_1__SEL_1,
       MUX_csrf_fflags_reg$write_1__SEL_1,
       MUX_csrf_fs_reg$write_1__SEL_1,
       MUX_csrf_ie_vec_1$write_1__SEL_1,
       MUX_csrf_ie_vec_1$write_1__SEL_2,
       MUX_csrf_ie_vec_1$write_1__VAL_1,
       MUX_csrf_ie_vec_3$write_1__SEL_1,
       MUX_csrf_ie_vec_3$write_1__SEL_2,
       MUX_csrf_ie_vec_3$write_1__VAL_1,
       MUX_csrf_mpp_reg$write_1__SEL_1,
       MUX_csrf_prev_ie_vec_1$write_1__SEL_1,
       MUX_csrf_prev_ie_vec_1$write_1__VAL_1,
       MUX_csrf_prev_ie_vec_3$write_1__SEL_1,
       MUX_csrf_prev_ie_vec_3$write_1__VAL_1,
       MUX_csrf_prv_reg$write_1__SEL_1,
       MUX_csrf_spp_reg$write_1__SEL_1,
       MUX_csrf_spp_reg$write_1__VAL_1,
       MUX_epochManager$updatePrevEpoch_0_update_1__SEL_2,
       MUX_epochManager$updatePrevEpoch_1_update_1__SEL_2,
       MUX_flush_reservation$write_1__SEL_1,
       MUX_flush_tlbs$write_1__SEL_1,
       MUX_rf$write_3_wr_1__PSEL_1,
       MUX_rf$write_3_wr_1__SEL_1,
       MUX_rf$write_3_wr_1__SEL_2,
       MUX_rf$write_3_wr_1__SEL_3,
       MUX_rf$write_3_wr_1__SEL_4,
       MUX_rf$write_3_wr_1__SEL_5,
       MUX_rf$write_3_wr_2__SEL_1,
       MUX_rob$setExecuted_deqLSQ_1__SEL_1,
       MUX_sbAggr$setReady_4_put_1__SEL_1,
       MUX_sbAggr$setReady_4_put_1__SEL_2,
       MUX_sbCons$setReady_3_put_1__SEL_1,
       MUX_sbCons$setReady_3_put_1__SEL_2,
       MUX_sbCons$setReady_3_put_1__SEL_3,
       MUX_update_vm_info$write_1__SEL_1;

  // remaining internal signals
  reg [511 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2253;
  reg [63 : 0] CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q281,
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q282,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q15,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q16,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q17,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q18,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q19,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q20,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q243,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q244,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q256,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q236,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q237,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q238,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q239,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q240,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q241,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q245,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q246,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q247,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9618,
	       SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2613,
	       addr__h218785,
	       curData__h123270,
	       rVal1__h530129,
	       rVal1__h554978,
	       trap_val__h626385,
	       x__h127992;
  reg [51 : 0] CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q10,
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q12,
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q8,
	       CASE_guard00619_0b0_sfdin08839_BITS_56_TO_5_0b_ETC__q215,
	       CASE_guard00619_0b0_sfdin08839_BITS_56_TO_5_0b_ETC__q216,
	       CASE_guard09688_0b0_theResult___snd17624_BITS__ETC__q217,
	       CASE_guard09688_0b0_theResult___snd17624_BITS__ETC__q218,
	       CASE_guard13150_0b0_theResult___snd21062_BITS__ETC__q207,
	       CASE_guard13150_0b0_theResult___snd21062_BITS__ETC__q208,
	       CASE_guard22462_0b0_sfdin30682_BITS_56_TO_5_0b_ETC__q209,
	       CASE_guard22462_0b0_sfdin30682_BITS_56_TO_5_0b_ETC__q210,
	       CASE_guard31531_0b0_theResult___snd39467_BITS__ETC__q211,
	       CASE_guard31531_0b0_theResult___snd39467_BITS__ETC__q212,
	       CASE_guard52003_0b0_theResult___snd59915_BITS__ETC__q197,
	       CASE_guard52003_0b0_theResult___snd59915_BITS__ETC__q198,
	       CASE_guard61315_0b0_sfdin69535_BITS_56_TO_5_0b_ETC__q201,
	       CASE_guard61315_0b0_sfdin69535_BITS_56_TO_5_0b_ETC__q202,
	       CASE_guard70384_0b0_theResult___snd78320_BITS__ETC__q199,
	       CASE_guard70384_0b0_theResult___snd78320_BITS__ETC__q200,
	       CASE_guard91307_0b0_theResult___snd99219_BITS__ETC__q213,
	       CASE_guard91307_0b0_theResult___snd99219_BITS__ETC__q214,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10273,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10299,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10318,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8793,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8820,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8839,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9503,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9529,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9548;
  reg [31 : 0] SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_39__ETC___d1110,
	       SEL_ARR_mmio_dataRespQ_data_0_75_BITS_31_TO_0__ETC___d1162;
  reg [22 : 0] CASE_guard10640_0b0_sfdin18733_BITS_56_TO_34_0_ETC__q77,
	       CASE_guard10640_0b0_sfdin18733_BITS_56_TO_34_0_ETC__q78,
	       CASE_guard19347_0b0_theResult___snd27346_BITS__ETC__q75,
	       CASE_guard19347_0b0_theResult___snd27346_BITS__ETC__q76,
	       CASE_guard28277_0b0_sfdin36499_BITS_56_TO_34_0_ETC__q79,
	       CASE_guard28277_0b0_sfdin36499_BITS_56_TO_34_0_ETC__q80,
	       CASE_guard37113_0b0_theResult___snd45136_BITS__ETC__q81,
	       CASE_guard37113_0b0_theResult___snd45136_BITS__ETC__q82,
	       CASE_guard56335_0b0_sfdin64428_BITS_56_TO_34_0_ETC__q112,
	       CASE_guard56335_0b0_sfdin64428_BITS_56_TO_34_0_ETC__q113,
	       CASE_guard64941_0b0_sfdin73036_BITS_56_TO_34_0_ETC__q42,
	       CASE_guard64941_0b0_sfdin73036_BITS_56_TO_34_0_ETC__q43,
	       CASE_guard65042_0b0_theResult___snd73041_BITS__ETC__q110,
	       CASE_guard65042_0b0_theResult___snd73041_BITS__ETC__q111,
	       CASE_guard73650_0b0_theResult___snd81649_BITS__ETC__q40,
	       CASE_guard73650_0b0_theResult___snd81649_BITS__ETC__q41,
	       CASE_guard73972_0b0_sfdin82194_BITS_56_TO_34_0_ETC__q114,
	       CASE_guard73972_0b0_sfdin82194_BITS_56_TO_34_0_ETC__q115,
	       CASE_guard82580_0b0_sfdin90802_BITS_56_TO_34_0_ETC__q44,
	       CASE_guard82580_0b0_sfdin90802_BITS_56_TO_34_0_ETC__q45,
	       CASE_guard82808_0b0_theResult___snd90831_BITS__ETC__q117,
	       CASE_guard82808_0b0_theResult___snd90831_BITS__ETC__q118,
	       CASE_guard91416_0b0_theResult___snd99439_BITS__ETC__q46,
	       CASE_guard91416_0b0_theResult___snd99439_BITS__ETC__q47,
	       _theResult___fst_sfd__h264914,
	       _theResult___fst_sfd__h273637,
	       _theResult___fst_sfd__h282219,
	       _theResult___fst_sfd__h291403,
	       _theResult___fst_sfd__h300039,
	       _theResult___fst_sfd__h310613,
	       _theResult___fst_sfd__h319334,
	       _theResult___fst_sfd__h327916,
	       _theResult___fst_sfd__h337100,
	       _theResult___fst_sfd__h345736,
	       _theResult___fst_sfd__h356308,
	       _theResult___fst_sfd__h365029,
	       _theResult___fst_sfd__h373611,
	       _theResult___fst_sfd__h382795,
	       _theResult___fst_sfd__h391431;
  reg [20 : 0] CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_15_ETC__q271,
	       CASE_coreFix_aluExe_0_regToExeQfirst_BITS_416_ETC__q220,
	       CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q268,
	       CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_15_ETC__q277,
	       CASE_coreFix_aluExe_1_regToExeQfirst_BITS_416_ETC__q223,
	       CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q274,
	       CASE_coreFix_fpuMulDivExe_0_dispToRegQfirst_B_ETC__q284,
	       CASE_coreFix_fpuMulDivExe_0_rsFpuMulDivdispat_ETC__q280,
	       IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d12606,
	       IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13332;
  reg [15 : 0] SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_39__ETC___d1121,
	       SEL_ARR_mmio_dataRespQ_data_0_75_BITS_15_TO_0__ETC___d1171;
  reg [11 : 0] CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_13_ETC__q272,
	       CASE_coreFix_aluExe_0_regToExeQfirst_BITS_394_ETC__q221,
	       CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q269,
	       CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_13_ETC__q278,
	       CASE_coreFix_aluExe_1_regToExeQfirst_BITS_394_ETC__q224,
	       CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q275,
	       CASE_fetchStagepipelines_1_first_BITS_172_TO__ETC__q228,
	       IF_fetchStage_pipelines_0_first__2491_BITS_172_ETC___d12688;
  reg [10 : 0] CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q11,
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q7,
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q9,
	       CASE_guard00619_0b0_theResult___fst_exp08845_0_ETC__q181,
	       CASE_guard00619_0b0_theResult___fst_exp08845_0_ETC__q182,
	       CASE_guard09688_0b0_theResult___fst_exp17678_0_ETC__q183,
	       CASE_guard09688_0b0_theResult___fst_exp17678_0_ETC__q184,
	       CASE_guard13150_0b0_theResult___fst_exp21111_0_ETC__q135,
	       CASE_guard13150_0b0_theResult___fst_exp21111_0_ETC__q136,
	       CASE_guard22462_0b0_theResult___fst_exp30688_0_ETC__q203,
	       CASE_guard22462_0b0_theResult___fst_exp30688_0_ETC__q204,
	       CASE_guard31531_0b0_theResult___fst_exp39521_0_ETC__q205,
	       CASE_guard31531_0b0_theResult___fst_exp39521_0_ETC__q206,
	       CASE_guard52003_0b0_theResult___fst_exp59964_0_ETC__q175,
	       CASE_guard52003_0b0_theResult___fst_exp59964_0_ETC__q176,
	       CASE_guard61315_0b0_theResult___fst_exp69541_0_ETC__q177,
	       CASE_guard61315_0b0_theResult___fst_exp69541_0_ETC__q178,
	       CASE_guard70384_0b0_theResult___fst_exp78374_0_ETC__q179,
	       CASE_guard70384_0b0_theResult___fst_exp78374_0_ETC__q180,
	       CASE_guard91307_0b0_theResult___fst_exp99268_0_ETC__q152,
	       CASE_guard91307_0b0_theResult___fst_exp99268_0_ETC__q153,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10178,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10216,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10247,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8693,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8736,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8767,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9408,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9446,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9477;
  reg [7 : 0] CASE_guard10640_0b0_theResult___fst_exp18739_0_ETC__q62,
	      CASE_guard10640_0b0_theResult___fst_exp18739_0_ETC__q63,
	      CASE_guard19347_0b0_theResult___fst_exp27395_0_ETC__q60,
	      CASE_guard19347_0b0_theResult___fst_exp27395_0_ETC__q61,
	      CASE_guard28277_0b0_theResult___fst_exp36505_0_ETC__q68,
	      CASE_guard28277_0b0_theResult___fst_exp36505_0_ETC__q69,
	      CASE_guard37113_0b0_theResult___fst_exp45190_0_ETC__q73,
	      CASE_guard37113_0b0_theResult___fst_exp45190_0_ETC__q74,
	      CASE_guard56335_0b0_theResult___fst_exp64434_0_ETC__q97,
	      CASE_guard56335_0b0_theResult___fst_exp64434_0_ETC__q98,
	      CASE_guard64941_0b0_theResult___fst_exp73042_0_ETC__q27,
	      CASE_guard64941_0b0_theResult___fst_exp73042_0_ETC__q28,
	      CASE_guard65042_0b0_theResult___fst_exp73090_0_ETC__q95,
	      CASE_guard65042_0b0_theResult___fst_exp73090_0_ETC__q96,
	      CASE_guard73650_0b0_theResult___fst_exp81698_0_ETC__q25,
	      CASE_guard73650_0b0_theResult___fst_exp81698_0_ETC__q26,
	      CASE_guard73972_0b0_theResult___fst_exp82200_0_ETC__q103,
	      CASE_guard73972_0b0_theResult___fst_exp82200_0_ETC__q104,
	      CASE_guard82580_0b0_theResult___fst_exp90808_0_ETC__q33,
	      CASE_guard82580_0b0_theResult___fst_exp90808_0_ETC__q34,
	      CASE_guard82808_0b0_theResult___fst_exp90885_0_ETC__q108,
	      CASE_guard82808_0b0_theResult___fst_exp90885_0_ETC__q109,
	      CASE_guard91416_0b0_theResult___fst_exp99493_0_ETC__q38,
	      CASE_guard91416_0b0_theResult___fst_exp99493_0_ETC__q39,
	      SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_39__ETC___d1135,
	      SEL_ARR_mmio_dataRespQ_data_0_75_BITS_7_TO_0_1_ETC___d1184,
	      _theResult___fst_exp__h264913,
	      _theResult___fst_exp__h273636,
	      _theResult___fst_exp__h282218,
	      _theResult___fst_exp__h291402,
	      _theResult___fst_exp__h300038,
	      _theResult___fst_exp__h310612,
	      _theResult___fst_exp__h319333,
	      _theResult___fst_exp__h327915,
	      _theResult___fst_exp__h337099,
	      _theResult___fst_exp__h345735,
	      _theResult___fst_exp__h356307,
	      _theResult___fst_exp__h365028,
	      _theResult___fst_exp__h373610,
	      _theResult___fst_exp__h382794,
	      _theResult___fst_exp__h391430;
  reg [5 : 0] CASE_mmioToPlatform_pRq_enq_x_BITS_37_TO_36_0__ETC__q266,
	      CASE_mmio_cRqQ_data_0_BITS_77_TO_76_0_mmio_cRq_ETC__q1,
	      CASE_mmio_dataReqQ_data_0_BITS_77_TO_76_0_mmio_ETC__q263,
	      IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454;
  reg [4 : 0] IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13862,
	      IF_fetchStage_pipelines_1_first__2500_BITS_191_ETC___d14025;
  reg [3 : 0] CASE_IF_NOT_IF_IF_NOT_csrf_prv_reg_read__2519__ETC__q227,
	      CASE_checkForException_2723_BITS_3_TO_0_0_chec_ETC__q226,
	      CASE_coreFix_memExe_dTlbprocResp_BITS_105_TO__ETC__q13,
	      CASE_coreFix_memExe_dTlbprocResp_BITS_109_TO__ETC__q14,
	      CASE_coreFix_memExe_lsqfirstLd_BITS_6_TO_3_0__ETC__q265,
	      CASE_coreFix_memExe_lsqfirstSt_BITS_3_TO_0_0__ETC__q264,
	      CASE_robdeqPort_0_deq_data_BITS_264_TO_261_0__ETC__q260,
	      CASE_robdeqPort_0_deq_data_BITS_264_TO_261_0__ETC__q261,
	      IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13865,
	      IF_fetchStage_pipelines_0_first__2491_BIT_68_2_ETC___d12888,
	      IF_fetchStage_pipelines_1_first__2500_BITS_191_ETC___d14026,
	      i__h625344,
	      i__h625504;
  reg [2 : 0] CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_13_ETC__q270,
	      CASE_coreFix_aluExe_0_regToExeQfirst_BITS_399_ETC__q219,
	      CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q267,
	      CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_13_ETC__q276,
	      CASE_coreFix_aluExe_1_regToExeQfirst_BITS_399_ETC__q222,
	      CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q273,
	      CASE_coreFix_fpuMulDivExe_0_dispToRegQfirst_B_ETC__q283,
	      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q242,
	      CASE_coreFix_fpuMulDivExe_0_rsFpuMulDivdispat_ETC__q279,
	      CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q255,
	      CASE_fetchStagepipelines_0_first_BITS_177_TO__ETC__q225,
	      CASE_fetchStagepipelines_1_first_BITS_177_TO__ETC__q229,
	      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10391,
	      x__h216092,
	      x__h220334;
  reg [1 : 0] CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q250,
	      CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q285,
	      CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q253,
	      CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q257,
	      CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q248;
  reg CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q138,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q140,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q142,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q155,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q157,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q159,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q161,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q163,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q165,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q186,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q188,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q190,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q192,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q194,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q196,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q252,
      CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q251,
      CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q258,
      CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q259,
      CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q254,
      CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q249,
      CASE_fetchStage_pipelines_0_canDeq__2489_AND_N_ETC__q234,
      CASE_fetchStagepipelines_0_first_BITS_191_TO__ETC__q233,
      CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q230,
      CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q231,
      CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q235,
      CASE_guard00619_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q160,
      CASE_guard00619_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q156,
      CASE_guard09688_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q162,
      CASE_guard09688_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q158,
      CASE_guard10640_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q84,
      CASE_guard10640_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q83,
      CASE_guard13150_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q137,
      CASE_guard19347_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q86,
      CASE_guard19347_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q85,
      CASE_guard22462_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q139,
      CASE_guard28277_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q88,
      CASE_guard28277_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q87,
      CASE_guard31531_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q141,
      CASE_guard37113_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q90,
      CASE_guard37113_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q89,
      CASE_guard52003_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q195,
      CASE_guard52003_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q185,
      CASE_guard56335_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q120,
      CASE_guard56335_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q119,
      CASE_guard61315_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q191,
      CASE_guard61315_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q187,
      CASE_guard64941_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q49,
      CASE_guard64941_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q48,
      CASE_guard65042_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q116,
      CASE_guard65042_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q121,
      CASE_guard70384_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q193,
      CASE_guard70384_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q189,
      CASE_guard73650_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q51,
      CASE_guard73650_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q50,
      CASE_guard73972_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q123,
      CASE_guard73972_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q122,
      CASE_guard82580_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q53,
      CASE_guard82580_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q52,
      CASE_guard82808_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q125,
      CASE_guard82808_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q124,
      CASE_guard91307_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q164,
      CASE_guard91307_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q154,
      CASE_guard91416_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q55,
      CASE_guard91416_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q54,
      CASE_k90245_0_coreFix_aluExe_0_rsAluRDY_enq_1_ETC__q232,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6105,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6118,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6122,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6135,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6148,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6161,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6168,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6171,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6178,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6185,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4713,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4726,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4730,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4743,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4756,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4769,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4776,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4779,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4786,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4793,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7497,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7510,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7514,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7527,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7540,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7553,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7560,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7563,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7570,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7577,
      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10528,
      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10564,
      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10612,
      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10654,
      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10696,
      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8070,
      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8083,
      IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13211,
      IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13267,
      IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13856,
      IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13859,
      IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13215,
      IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13239,
      IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13272,
      IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13581,
      IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13602,
      IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13619,
      IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13672,
      IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13674,
      IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13688,
      IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13695,
      IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13764,
      IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13775,
      IF_fetchStage_pipelines_1_first__2500_BITS_191_ETC___d14023,
      IF_fetchStage_pipelines_1_first__2500_BITS_191_ETC___d14024,
      IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13630,
      IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13761,
      IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13786,
      SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__318_ETC___d13232,
      SEL_ARR_NOT_fetchStage_pipelines_0_canDeq__248_ETC___d13722,
      SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3189_co_ETC___d13199,
      SEL_ARR_fetchStage_pipelines_0_canDeq__2489_AN_ETC___d13508;
  wire [581 : 0] IF_IF_coreFix_memExe_dMem_cache_m_banks_0_from_ETC___d2964;
  wire [570 : 0] IF_NOT_coreFix_memExe_dMem_cache_m_banks_0_pip_ETC___d2263,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2274,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2276,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2275;
  wire [517 : 0] SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2683;
  wire [511 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d1961,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_linkAdd_ETC___d1962,
		 SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2676,
		 SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d14992;
  wire [447 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_process_ETC___d1766;
  wire [383 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d1956,
		 SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2667,
		 SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d14983;
  wire [321 : 0] basicExec___d11664, basicExec___d12338;
  wire [319 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_process_ETC___d1761;
  wire [255 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d1951,
		 SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2658,
		 SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d14974,
		 SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10750,
		 SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10763,
		 _0_CONCAT_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10756;
  wire [196 : 0] _0_CONCAT_1_CONCAT_0_CONCAT_fetchStage_pipeline_ETC___d13151;
  wire [191 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_process_ETC___d1756;
  wire [127 : 0] b__h522717, b__h522793, b__h522894, b__h522906, x__h523746;
  wire [68 : 0] execFpuSimple___d10730;
  wire [65 : 0] IF_IF_mmio_pRsQ_enqReq_lat_1_whas__08_THEN_NOT_ETC___d541,
		address__h576951,
		address__h617901,
		ret_address__h585298,
		ret_address__h618848,
		x__h577269,
		x__h618085;
  wire [64 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2323;
  wire [63 : 0] IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8847,
		IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d12179,
		IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d12180,
		IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d12188,
		IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d12189,
		IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11505,
		IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11506,
		IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11514,
		IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11515,
		IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8016,
		IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8017,
		IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8024,
		IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8025,
		IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8032,
		IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8033,
		IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1423,
		IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1424,
		IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1431,
		IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1432,
		IF_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_d_ETC___d10818,
		IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10328,
		IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8848,
		IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9558,
		IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9614,
		IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2320,
		IF_coreFix_memExe_lsq_firstLd__039_BIT_94_114__ETC___d1139,
		IF_coreFix_memExe_lsq_firstLd__039_BIT_94_114__ETC___d1188,
		IF_coreFix_memExe_lsq_firstLd__039_BIT_96_104__ETC___d1140,
		IF_coreFix_memExe_lsq_firstLd__039_BIT_96_104__ETC___d1189,
		IF_rob_deqPort_0_canDeq__4671_THEN_IF_NOT_rob__ETC___d14782,
		_18446744073709551615_SL_scaprf_pcc_reg_read_wg_ETC___d12788,
		_theResult___fst__h523117,
		_theResult___snd__h523118,
		a___1__h522731,
		a___1__h523122,
		a__h522569,
		addr__h621369,
		amoExec___d766,
		b___1__h522732,
		b___1__h523183,
		b__h522570,
		base__h628306,
		base__h628326,
		coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divI_ETC___d10819,
		coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divI_ETC___d10820,
		data___1__h393969,
		data___1__h394901,
		data__h393457,
		data__h394389,
		fallthrough_pc__h586537,
		fallthrough_pc__h602840,
		fcsr_csr__read__h530431,
		fflags_csr__read__h530406,
		frm_csr__read__h530417,
		mask__h584357,
		mcause_csr__read__h532073,
		mcounteren_csr__read__h531818,
		medeleg_csr__read__h531425,
		mideleg_csr__read__h531520,
		mie_csr__read__h531644,
		mip_csr__read__h532306,
		mstatus_csr__read__h531277,
		mtvec_csr__read__h531726,
		n___1__h128958,
		n__h124635,
		n__read__h4917,
		n__read__h636971,
		newAddrDiff__h576958,
		newAddrDiff__h617908,
		next_pc__h636122,
		q___1__h394976,
		rVal1__h401339,
		rVal2__h401340,
		r___1__h395003,
		res_data__h256715,
		res_data__h256720,
		res_data__h302417,
		res_data__h302422,
		res_data__h348112,
		res_data__h348117,
		resp_addr__h220791,
		rg_tdata1__read__h533261,
		rob_deqPort_0_deq_data__4141_BITS_548_TO_485_4_ETC___d14645,
		robdeqPort_0_deq_data_BITS_95_TO_32__q262,
		satp_csr__read__h531134,
		scaprf_pcc_reg_read_wget__2773_BITS_149_TO_86__ETC___d12780,
		scause_csr__read__h530931,
		scounteren_csr__read__h530793,
		shiftData__h114243,
		sie_csr__read__h530697,
		sip_csr__read__h531071,
		sstatus_csr__read__h530627,
		stvec_csr__read__h530740,
		upd__h3097,
		upd__h3707,
		v__h528901,
		v__h553904,
		vaddr__h114238,
		x__h114150,
		x__h114151,
		x__h15064,
		x__h216634,
		x__h31099,
		x__h401245,
		x__h401246,
		x__h401247,
		x__h523106,
		x__h537844,
		x__h537845,
		x__h560475,
		x__h560476,
		x__h89821,
		x__h91890,
		x_addr__h238156,
		x_quotient__h394153,
		x_reg_ifc__read__h530536,
		x_remainder__h394154,
		y__h540646,
		y__h562984,
		y__h577196,
		y__h640728,
		y_avValue__h113278,
		y_avValue__h113997,
		y_avValue__h398308,
		y_avValue__h399029,
		y_avValue__h399744,
		y_avValue__h530072,
		y_avValue__h535854,
		y_avValue__h554923,
		y_avValue__h558495,
		y_avValue_new_pc__h628066,
		y_avValue_new_pc__h628252,
		y_avValue_snd_snd_snd_snd_snd__h639572,
		y_avValue_snd_snd_snd_snd_snd__h640781,
		y_avValue_snd_snd_snd_snd_snd__h640810;
  wire [62 : 0] IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10326,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9556,
		r1__read__h533586,
		r1__read__h533990,
		r1__read__h534500,
		r1__read__h534505,
		r1__read__h534524,
		r1__read__h534757,
		r1__read__h534923,
		r1__read__h535016,
		r1__read__h535021,
		r1__read__h535040;
  wire [61 : 0] r1__read__h533588,
		r1__read__h533992,
		r1__read__h534507,
		r1__read__h534526,
		r1__read__h534759,
		r1__read__h534899,
		r1__read__h534925,
		r1__read__h535023,
		r1__read__h535042;
  wire [60 : 0] r1__read__h534761,
		r1__read__h534901,
		r1__read__h534927,
		r1__read__h535044;
  wire [59 : 0] r1__read__h533590,
		r1__read__h533994,
		r1__read__h534518,
		r1__read__h534528,
		r1__read__h534763,
		r1__read__h534929,
		r1__read__h535034,
		r1__read__h535046;
  wire [58 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2261,
		IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2303,
		IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2512,
		r1__read__h533592,
		r1__read__h533996,
		r1__read__h534530,
		r1__read__h534765,
		r1__read__h534931,
		r1__read__h535048;
  wire [57 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_linkAdd_ETC___d2753,
		r1__read__h533594,
		r1__read__h533998,
		r1__read__h534532,
		r1__read__h534767,
		r1__read__h534903,
		r1__read__h534933,
		r1__read__h535050,
		y__h184788;
  wire [56 : 0] IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMu_ETC__q21,
		IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMu_ETC__q56,
		IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMu_ETC__q91,
		IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_f_ETC__q130,
		IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_f_ETC__q147,
		IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_f_ETC__q170,
		IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuM_ETC__q101,
		IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuM_ETC__q31,
		IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuM_ETC__q66,
		IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q126,
		IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q133,
		IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q143,
		IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q150,
		IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q166,
		IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q173,
		IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q106,
		IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q23,
		IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q36,
		IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q58,
		IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q71,
		IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q93,
		_0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d8327,
		_0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d9042,
		_0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d9812,
		_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d4217,
		_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d5609,
		_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d7001,
		_theResult____h264931,
		_theResult____h282570,
		_theResult____h310630,
		_theResult____h328267,
		_theResult____h356325,
		_theResult____h373962,
		_theResult____h422452,
		_theResult____h461305,
		_theResult____h500609,
		_theResult___snd__h273053,
		_theResult___snd__h273064,
		_theResult___snd__h273066,
		_theResult___snd__h273076,
		_theResult___snd__h273082,
		_theResult___snd__h273105,
		_theResult___snd__h281649,
		_theResult___snd__h281651,
		_theResult___snd__h281658,
		_theResult___snd__h281664,
		_theResult___snd__h281687,
		_theResult___snd__h290819,
		_theResult___snd__h290830,
		_theResult___snd__h290832,
		_theResult___snd__h290842,
		_theResult___snd__h290848,
		_theResult___snd__h290871,
		_theResult___snd__h299439,
		_theResult___snd__h299453,
		_theResult___snd__h299459,
		_theResult___snd__h299477,
		_theResult___snd__h318750,
		_theResult___snd__h318761,
		_theResult___snd__h318763,
		_theResult___snd__h318773,
		_theResult___snd__h318779,
		_theResult___snd__h318802,
		_theResult___snd__h327346,
		_theResult___snd__h327348,
		_theResult___snd__h327355,
		_theResult___snd__h327361,
		_theResult___snd__h327384,
		_theResult___snd__h336516,
		_theResult___snd__h336527,
		_theResult___snd__h336529,
		_theResult___snd__h336539,
		_theResult___snd__h336545,
		_theResult___snd__h336568,
		_theResult___snd__h345136,
		_theResult___snd__h345150,
		_theResult___snd__h345156,
		_theResult___snd__h345174,
		_theResult___snd__h364445,
		_theResult___snd__h364456,
		_theResult___snd__h364458,
		_theResult___snd__h364468,
		_theResult___snd__h364474,
		_theResult___snd__h364497,
		_theResult___snd__h373041,
		_theResult___snd__h373043,
		_theResult___snd__h373050,
		_theResult___snd__h373056,
		_theResult___snd__h373079,
		_theResult___snd__h382211,
		_theResult___snd__h382222,
		_theResult___snd__h382224,
		_theResult___snd__h382234,
		_theResult___snd__h382240,
		_theResult___snd__h382263,
		_theResult___snd__h390831,
		_theResult___snd__h390845,
		_theResult___snd__h390851,
		_theResult___snd__h390869,
		_theResult___snd__h421062,
		_theResult___snd__h421064,
		_theResult___snd__h421071,
		_theResult___snd__h421077,
		_theResult___snd__h421100,
		_theResult___snd__h430699,
		_theResult___snd__h430710,
		_theResult___snd__h430712,
		_theResult___snd__h430722,
		_theResult___snd__h430728,
		_theResult___snd__h430751,
		_theResult___snd__h439467,
		_theResult___snd__h439481,
		_theResult___snd__h439487,
		_theResult___snd__h439505,
		_theResult___snd__h459915,
		_theResult___snd__h459917,
		_theResult___snd__h459924,
		_theResult___snd__h459930,
		_theResult___snd__h459953,
		_theResult___snd__h469552,
		_theResult___snd__h469563,
		_theResult___snd__h469565,
		_theResult___snd__h469575,
		_theResult___snd__h469581,
		_theResult___snd__h469604,
		_theResult___snd__h478320,
		_theResult___snd__h478334,
		_theResult___snd__h478340,
		_theResult___snd__h478358,
		_theResult___snd__h499219,
		_theResult___snd__h499221,
		_theResult___snd__h499228,
		_theResult___snd__h499234,
		_theResult___snd__h499257,
		_theResult___snd__h508856,
		_theResult___snd__h508867,
		_theResult___snd__h508869,
		_theResult___snd__h508879,
		_theResult___snd__h508885,
		_theResult___snd__h508908,
		_theResult___snd__h517624,
		_theResult___snd__h517638,
		_theResult___snd__h517644,
		_theResult___snd__h517662,
		r1__read__h534769,
		r1__read__h534905,
		r1__read__h534935,
		r1__read__h535052,
		result__h283183,
		result__h328880,
		result__h374575,
		result__h423065,
		result__h461918,
		result__h501222,
		sfd__h257326,
		sfd__h303028,
		sfd__h348723,
		sfd__h402085,
		sfd__h441079,
		sfd__h480383,
		sfdin__h273036,
		sfdin__h290802,
		sfdin__h318733,
		sfdin__h336499,
		sfdin__h364428,
		sfdin__h382194,
		sfdin__h430682,
		sfdin__h469535,
		sfdin__h508839,
		x__h283280,
		x__h328977,
		x__h374672,
		x__h423160,
		x__h462013,
		x__h501317;
  wire [55 : 0] r1__read__h533596,
		r1__read__h534000,
		r1__read__h534534,
		r1__read__h534771,
		r1__read__h534937,
		r1__read__h535054;
  wire [54 : 0] r1__read__h533598,
		r1__read__h534002,
		r1__read__h534536,
		r1__read__h534773,
		r1__read__h534939,
		r1__read__h535056;
  wire [53 : 0] r1__read__h534882,
		r1__read__h534907,
		r1__read__h534941,
		r1__read__h535058,
		sfd__h421129,
		sfd__h430780,
		sfd__h439540,
		sfd__h459982,
		sfd__h469633,
		sfd__h478393,
		sfd__h499286,
		sfd__h508937,
		sfd__h517697,
		value__h265553,
		value__h311250,
		value__h356945;
  wire [52 : 0] r1__read__h534775,
		r1__read__h534884,
		r1__read__h534909,
		r1__read__h534943,
		r1__read__h535060;
  wire [51 : 0] IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10293,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10295,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d8814,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d8816,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9523,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9525,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10267,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10269,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10312,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10314,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8787,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8789,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8833,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8835,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9497,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9499,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9542,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9544,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10325,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8846,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9555,
		_theResult___fst_sfd__h406039,
		_theResult___fst_sfd__h421867,
		_theResult___fst_sfd__h421870,
		_theResult___fst_sfd__h431518,
		_theResult___fst_sfd__h431521,
		_theResult___fst_sfd__h440302,
		_theResult___fst_sfd__h440305,
		_theResult___fst_sfd__h440314,
		_theResult___fst_sfd__h440320,
		_theResult___fst_sfd__h444892,
		_theResult___fst_sfd__h460720,
		_theResult___fst_sfd__h460723,
		_theResult___fst_sfd__h470371,
		_theResult___fst_sfd__h470374,
		_theResult___fst_sfd__h479155,
		_theResult___fst_sfd__h479158,
		_theResult___fst_sfd__h479167,
		_theResult___fst_sfd__h479173,
		_theResult___fst_sfd__h484196,
		_theResult___fst_sfd__h500024,
		_theResult___fst_sfd__h500027,
		_theResult___fst_sfd__h509675,
		_theResult___fst_sfd__h509678,
		_theResult___fst_sfd__h518459,
		_theResult___fst_sfd__h518462,
		_theResult___fst_sfd__h518471,
		_theResult___fst_sfd__h518477,
		_theResult___sfd__h421767,
		_theResult___sfd__h431418,
		_theResult___sfd__h440202,
		_theResult___sfd__h460620,
		_theResult___sfd__h470271,
		_theResult___sfd__h479055,
		_theResult___sfd__h499924,
		_theResult___sfd__h509575,
		_theResult___sfd__h518359,
		_theResult___snd_fst_sfd__h402039,
		_theResult___snd_fst_sfd__h421873,
		_theResult___snd_fst_sfd__h440308,
		_theResult___snd_fst_sfd__h441033,
		_theResult___snd_fst_sfd__h460726,
		_theResult___snd_fst_sfd__h479161,
		_theResult___snd_fst_sfd__h480337,
		_theResult___snd_fst_sfd__h500030,
		_theResult___snd_fst_sfd__h518465,
		out___1_sfd__h401787,
		out___1_sfd__h440781,
		out___1_sfd__h480085,
		out_sfd__h421770,
		out_sfd__h431421,
		out_sfd__h440205,
		out_sfd__h460623,
		out_sfd__h470274,
		out_sfd__h479058,
		out_sfd__h499927,
		out_sfd__h509578,
		out_sfd__h518362;
  wire [50 : 0] r1__read__h533600, r1__read__h534777;
  wire [49 : 0] r1__read__h534886;
  wire [48 : 0] r1__read__h533602, r1__read__h534779, r1__read__h534888;
  wire [46 : 0] r1__read__h533604, r1__read__h534781;
  wire [45 : 0] r1__read__h533606, r1__read__h534783;
  wire [44 : 0] r1__read__h533608, r1__read__h534785;
  wire [43 : 0] r1__read__h533610, r1__read__h534787;
  wire [42 : 0] r1__read__h534789;
  wire [41 : 0] r1__read__h534791;
  wire [40 : 0] r1__read__h534793;
  wire [37 : 0] IF_fetchStage_pipelines_0_first__2491_BIT_160__ETC___d13868,
		IF_fetchStage_pipelines_1_first__2500_BIT_160__ETC___d14029;
  wire [31 : 0] coreFix_fpuMulDivExe_0_regToExeQfirst_BITS_10_ETC__q4,
		coreFix_fpuMulDivExe_0_regToExeQfirst_BITS_17_ETC__q3,
		coreFix_memExe_regToExeQfirst_BITS_189_TO_158__q5,
		data93457_BITS_31_TO_0__q2,
		data94389_BITS_31_TO_0__q6,
		imm__h576041,
		r1__read__h533612,
		r1__read__h534795,
		x__h124024,
		x__h256730,
		x__h302432,
		x__h348127,
		x__h47746,
		x_data__h42975,
		x_data_imm__h597590,
		x_data_imm__h614051;
  wire [29 : 0] r1__read__h533614, r1__read__h534797;
  wire [27 : 0] r1__read__h534799;
  wire [24 : 0] NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13914,
		sfd__h273134,
		sfd__h281716,
		sfd__h290900,
		sfd__h299512,
		sfd__h318831,
		sfd__h327413,
		sfd__h336597,
		sfd__h345209,
		sfd__h364526,
		sfd__h373108,
		sfd__h382292,
		sfd__h390904,
		value__h406668,
		value__h445521,
		value__h484825;
  wire [22 : 0] IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d4616,
		IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d4618,
		IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6008,
		IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6010,
		IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7400,
		IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7402,
		IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d4662,
		IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d4664,
		IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6054,
		IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6056,
		IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7446,
		IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7448,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4635,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4637,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4681,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4683,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6027,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6029,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6073,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6075,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7419,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7421,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7465,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7467,
		_theResult___fst_sfd__h273640,
		_theResult___fst_sfd__h282222,
		_theResult___fst_sfd__h291406,
		_theResult___fst_sfd__h300042,
		_theResult___fst_sfd__h300051,
		_theResult___fst_sfd__h300057,
		_theResult___fst_sfd__h319337,
		_theResult___fst_sfd__h327919,
		_theResult___fst_sfd__h337103,
		_theResult___fst_sfd__h345739,
		_theResult___fst_sfd__h345748,
		_theResult___fst_sfd__h345754,
		_theResult___fst_sfd__h365032,
		_theResult___fst_sfd__h373614,
		_theResult___fst_sfd__h382798,
		_theResult___fst_sfd__h391434,
		_theResult___fst_sfd__h391443,
		_theResult___fst_sfd__h391449,
		_theResult___sfd__h273559,
		_theResult___sfd__h282141,
		_theResult___sfd__h291325,
		_theResult___sfd__h299961,
		_theResult___sfd__h300063,
		_theResult___sfd__h319256,
		_theResult___sfd__h327838,
		_theResult___sfd__h337022,
		_theResult___sfd__h345658,
		_theResult___sfd__h345760,
		_theResult___sfd__h364951,
		_theResult___sfd__h373533,
		_theResult___sfd__h382717,
		_theResult___sfd__h391353,
		_theResult___sfd__h391455,
		_theResult___snd_fst_sfd__h257276,
		_theResult___snd_fst_sfd__h282225,
		_theResult___snd_fst_sfd__h300045,
		_theResult___snd_fst_sfd__h302978,
		_theResult___snd_fst_sfd__h327922,
		_theResult___snd_fst_sfd__h345742,
		_theResult___snd_fst_sfd__h348673,
		_theResult___snd_fst_sfd__h373617,
		_theResult___snd_fst_sfd__h391437,
		f1_sfd__h401724,
		f2_sfd__h440718,
		f3_sfd__h480022,
		out_f_sfd__h300340,
		out_f_sfd__h346037,
		out_f_sfd__h391732,
		out_sfd__h273562,
		out_sfd__h282144,
		out_sfd__h291328,
		out_sfd__h299964,
		out_sfd__h319259,
		out_sfd__h327841,
		out_sfd__h337025,
		out_sfd__h345661,
		out_sfd__h364954,
		out_sfd__h373536,
		out_sfd__h382720,
		out_sfd__h391356;
  wire [19 : 0] r1__read__h534734;
  wire [13 : 0] ret_addrBits__h579466,
		ret_addrBits__h585299,
		ret_addrBits__h618849;
  wire [12 : 0] fetchStage_pipelines_1_first__2500_BIT_173_333_ETC___d13416;
  wire [11 : 0] IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555,
		IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10105,
		IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d8620,
		IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9335,
		IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12432,
		SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8320,
		SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9035,
		SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9805,
		SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q129,
		SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q146,
		SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q169,
		SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5602,
		SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q65,
		SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4210,
		SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q30,
		SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6994,
		SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q100,
		_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d3670,
		_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5062,
		_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6454,
		_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d8323,
		_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d9038,
		_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d9808,
		_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8183,
		_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8913,
		_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9683,
		_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d4213,
		_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d5605,
		_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d6997,
		_theResult____h572230,
		csr_addr__h576039,
		enabled_ints___1__h572643,
		enabled_ints__h572689,
		pend_ints__h572228,
		renaming_spec_bits__h606266,
		result__h567936,
		result__h567987,
		spec_bits__h609393,
		w__h567931,
		x__h283313,
		x__h329010,
		x__h374705,
		x__h423193,
		x__h462046,
		x__h501350,
		x__h567935,
		x__h567986,
		y__h567965,
		y__h572655,
		y__h609406,
		y_avValue_fst__h602690,
		y_avValue_snd_fst__h602964,
		y_avValue_snd_fst__h602999;
  wire [10 : 0] IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10210,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10212,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d8730,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d8732,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9440,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9442,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10172,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10174,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10241,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10243,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8687,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8689,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8761,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8763,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9402,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9404,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9471,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9473,
		SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q132,
		SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q149,
		SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q172,
		_theResult___exp__h421766,
		_theResult___exp__h431417,
		_theResult___exp__h440201,
		_theResult___exp__h460619,
		_theResult___exp__h470270,
		_theResult___exp__h479054,
		_theResult___exp__h499923,
		_theResult___exp__h509574,
		_theResult___exp__h518358,
		_theResult___fst_exp__h406038,
		_theResult___fst_exp__h421102,
		_theResult___fst_exp__h421108,
		_theResult___fst_exp__h421111,
		_theResult___fst_exp__h421866,
		_theResult___fst_exp__h421869,
		_theResult___fst_exp__h430688,
		_theResult___fst_exp__h430753,
		_theResult___fst_exp__h430759,
		_theResult___fst_exp__h430762,
		_theResult___fst_exp__h431517,
		_theResult___fst_exp__h431520,
		_theResult___fst_exp__h439473,
		_theResult___fst_exp__h439512,
		_theResult___fst_exp__h439518,
		_theResult___fst_exp__h439521,
		_theResult___fst_exp__h440301,
		_theResult___fst_exp__h440304,
		_theResult___fst_exp__h440313,
		_theResult___fst_exp__h440316,
		_theResult___fst_exp__h444891,
		_theResult___fst_exp__h459955,
		_theResult___fst_exp__h459961,
		_theResult___fst_exp__h459964,
		_theResult___fst_exp__h460719,
		_theResult___fst_exp__h460722,
		_theResult___fst_exp__h469541,
		_theResult___fst_exp__h469606,
		_theResult___fst_exp__h469612,
		_theResult___fst_exp__h469615,
		_theResult___fst_exp__h470370,
		_theResult___fst_exp__h470373,
		_theResult___fst_exp__h478326,
		_theResult___fst_exp__h478365,
		_theResult___fst_exp__h478371,
		_theResult___fst_exp__h478374,
		_theResult___fst_exp__h479154,
		_theResult___fst_exp__h479157,
		_theResult___fst_exp__h479166,
		_theResult___fst_exp__h479169,
		_theResult___fst_exp__h484195,
		_theResult___fst_exp__h499259,
		_theResult___fst_exp__h499265,
		_theResult___fst_exp__h499268,
		_theResult___fst_exp__h500023,
		_theResult___fst_exp__h500026,
		_theResult___fst_exp__h508845,
		_theResult___fst_exp__h508910,
		_theResult___fst_exp__h508916,
		_theResult___fst_exp__h508919,
		_theResult___fst_exp__h509674,
		_theResult___fst_exp__h509677,
		_theResult___fst_exp__h517630,
		_theResult___fst_exp__h517669,
		_theResult___fst_exp__h517675,
		_theResult___fst_exp__h517678,
		_theResult___fst_exp__h518458,
		_theResult___fst_exp__h518461,
		_theResult___fst_exp__h518470,
		_theResult___fst_exp__h518473,
		_theResult___snd_fst_exp__h421872,
		_theResult___snd_fst_exp__h440307,
		_theResult___snd_fst_exp__h460725,
		_theResult___snd_fst_exp__h479160,
		_theResult___snd_fst_exp__h500029,
		_theResult___snd_fst_exp__h518464,
		coreFix_fpuMulDivExe_0_fpuExec_double_divresp_ETC__q64,
		coreFix_fpuMulDivExe_0_fpuExec_double_fmaresp_ETC__q29,
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrtres_ETC__q99,
		din_inc___2_exp__h440361,
		din_inc___2_exp__h440396,
		din_inc___2_exp__h440422,
		din_inc___2_exp__h479214,
		din_inc___2_exp__h479249,
		din_inc___2_exp__h479275,
		din_inc___2_exp__h518518,
		din_inc___2_exp__h518553,
		din_inc___2_exp__h518579,
		out_exp__h421769,
		out_exp__h431420,
		out_exp__h440204,
		out_exp__h460622,
		out_exp__h470273,
		out_exp__h479057,
		out_exp__h499926,
		out_exp__h509577,
		out_exp__h518361;
  wire [9 : 0] r1__read_BITS_9_TO_0___h572665;
  wire [8 : 0] IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d4531,
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5923,
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7315;
  wire [7 : 0] IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d3969,
	       IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d3972,
	       IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5361,
	       IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5364,
	       IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6753,
	       IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6756,
	       IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d4516,
	       IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d4518,
	       IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5908,
	       IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5910,
	       IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7300,
	       IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7302,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4191,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4193,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4585,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4587,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5583,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5585,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5977,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5979,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6975,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6977,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7369,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7371,
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q70,
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q35,
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q105,
	       _theResult___exp__h273558,
	       _theResult___exp__h282140,
	       _theResult___exp__h291324,
	       _theResult___exp__h299960,
	       _theResult___exp__h300062,
	       _theResult___exp__h319255,
	       _theResult___exp__h327837,
	       _theResult___exp__h337021,
	       _theResult___exp__h345657,
	       _theResult___exp__h345759,
	       _theResult___exp__h364950,
	       _theResult___exp__h373532,
	       _theResult___exp__h382716,
	       _theResult___exp__h391352,
	       _theResult___exp__h391454,
	       _theResult___fst_exp__h273042,
	       _theResult___fst_exp__h273107,
	       _theResult___fst_exp__h273113,
	       _theResult___fst_exp__h273116,
	       _theResult___fst_exp__h273639,
	       _theResult___fst_exp__h281689,
	       _theResult___fst_exp__h281695,
	       _theResult___fst_exp__h281698,
	       _theResult___fst_exp__h282221,
	       _theResult___fst_exp__h290808,
	       _theResult___fst_exp__h290873,
	       _theResult___fst_exp__h290879,
	       _theResult___fst_exp__h290882,
	       _theResult___fst_exp__h291405,
	       _theResult___fst_exp__h299445,
	       _theResult___fst_exp__h299484,
	       _theResult___fst_exp__h299490,
	       _theResult___fst_exp__h299493,
	       _theResult___fst_exp__h300041,
	       _theResult___fst_exp__h300050,
	       _theResult___fst_exp__h300053,
	       _theResult___fst_exp__h318739,
	       _theResult___fst_exp__h318804,
	       _theResult___fst_exp__h318810,
	       _theResult___fst_exp__h318813,
	       _theResult___fst_exp__h319336,
	       _theResult___fst_exp__h327386,
	       _theResult___fst_exp__h327392,
	       _theResult___fst_exp__h327395,
	       _theResult___fst_exp__h327918,
	       _theResult___fst_exp__h336505,
	       _theResult___fst_exp__h336570,
	       _theResult___fst_exp__h336576,
	       _theResult___fst_exp__h336579,
	       _theResult___fst_exp__h337102,
	       _theResult___fst_exp__h345142,
	       _theResult___fst_exp__h345181,
	       _theResult___fst_exp__h345187,
	       _theResult___fst_exp__h345190,
	       _theResult___fst_exp__h345738,
	       _theResult___fst_exp__h345747,
	       _theResult___fst_exp__h345750,
	       _theResult___fst_exp__h364434,
	       _theResult___fst_exp__h364499,
	       _theResult___fst_exp__h364505,
	       _theResult___fst_exp__h364508,
	       _theResult___fst_exp__h365031,
	       _theResult___fst_exp__h373081,
	       _theResult___fst_exp__h373087,
	       _theResult___fst_exp__h373090,
	       _theResult___fst_exp__h373613,
	       _theResult___fst_exp__h382200,
	       _theResult___fst_exp__h382265,
	       _theResult___fst_exp__h382271,
	       _theResult___fst_exp__h382274,
	       _theResult___fst_exp__h382797,
	       _theResult___fst_exp__h390837,
	       _theResult___fst_exp__h390876,
	       _theResult___fst_exp__h390882,
	       _theResult___fst_exp__h390885,
	       _theResult___fst_exp__h391433,
	       _theResult___fst_exp__h391442,
	       _theResult___fst_exp__h391445,
	       _theResult___snd_fst_exp__h282224,
	       _theResult___snd_fst_exp__h300044,
	       _theResult___snd_fst_exp__h327921,
	       _theResult___snd_fst_exp__h345741,
	       _theResult___snd_fst_exp__h373616,
	       _theResult___snd_fst_exp__h391436,
	       csrf_external_int_en_vec_3_read__1407_AND_csrf_ETC___d12530,
	       din_inc___2_exp__h300075,
	       din_inc___2_exp__h300099,
	       din_inc___2_exp__h300129,
	       din_inc___2_exp__h300153,
	       din_inc___2_exp__h345772,
	       din_inc___2_exp__h345796,
	       din_inc___2_exp__h345826,
	       din_inc___2_exp__h345850,
	       din_inc___2_exp__h391467,
	       din_inc___2_exp__h391491,
	       din_inc___2_exp__h391521,
	       din_inc___2_exp__h391545,
	       f1_exp01723_MINUS_127__q128,
	       f1_exp__h401723,
	       f2_exp40717_MINUS_127__q168,
	       f2_exp__h440717,
	       f3_exp80021_MINUS_127__q145,
	       f3_exp__h480021,
	       out_exp__h273561,
	       out_exp__h282143,
	       out_exp__h291327,
	       out_exp__h299963,
	       out_exp__h319258,
	       out_exp__h327840,
	       out_exp__h337024,
	       out_exp__h345660,
	       out_exp__h364953,
	       out_exp__h373535,
	       out_exp__h382719,
	       out_exp__h391355,
	       out_f_exp__h300339,
	       out_f_exp__h346036,
	       out_f_exp__h391731,
	       x__h533571;
  wire [5 : 0] IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d3906,
	       IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d5298,
	       IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d6690,
	       IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d10054,
	       IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d8569,
	       IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d9284,
	       IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d4457,
	       IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d5849,
	       IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d7241,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8257,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8987,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9757,
	       IF_IF_mmio_cRqQ_enqReq_lat_1_whas__80_THEN_mmi_ETC___d401,
	       IF_IF_mmio_dataReqQ_enqReq_lat_1_whas__5_THEN__ETC___d158,
	       IF_IF_mmio_pRqQ_enqReq_lat_1_whas__47_THEN_mmi_ETC___d668,
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d5529,
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4137,
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d6921,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1899,
	       SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rq_ETC___d15018,
	       x__h114372,
	       x__h577163,
	       x__h628321;
  wire [4 : 0] IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d14126,
	       IF_rob_deqPort_0_canDeq__4671_THEN_IF_NOT_rob__ETC___d14877,
	       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d4828,
	       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d6220,
	       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d7612,
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10432,
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10473,
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10517,
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d4857,
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6249,
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d7641,
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10415,
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10456,
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10500,
	       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d4840,
	       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6232,
	       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d7624,
	       _0_CONCAT_fetchStage_pipelines_0_first__2491_BI_ETC___d12830,
	       checkForException___d12723,
	       checkForException___d13438,
	       fflags__h640705,
	       r1__read__h535141,
	       res_fflags__h256716,
	       res_fflags__h302418,
	       res_fflags__h348113,
	       rs1__h576040,
	       x__h89816,
	       x__h91885,
	       y_avValue_fst__h639132,
	       y_avValue_fst__h640624,
	       y_avValue_fst__h640652;
  wire [3 : 0] IF_IF_coreFix_memExe_dTlb_procResp__485_BIT_11_ETC___d1620,
	       IF_IF_coreFix_memExe_dTlb_procResp__485_BIT_11_ETC___d1622,
	       IF_IF_coreFix_memExe_dTlb_procResp__485_BIT_11_ETC___d1624,
	       IF_IF_coreFix_memExe_dTlb_procResp__485_BIT_11_ETC___d1626,
	       IF_IF_coreFix_memExe_dTlb_procResp__485_BIT_11_ETC___d1628,
	       IF_IF_coreFix_memExe_dTlb_procResp__485_BIT_11_ETC___d1630,
	       IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12956,
	       IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12957,
	       IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12958,
	       IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12959,
	       IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12960,
	       IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12961,
	       IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12962,
	       IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12963,
	       IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12964,
	       IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12965,
	       IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12966,
	       IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12967,
	       IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12968,
	       IF_NOT_IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3__ETC___d12990,
	       IF_NOT_coreFix_memExe_dTlb_procResp__485_BIT_1_ETC___d1564,
	       IF_checkForException_2723_BIT_4_2724_THEN_IF_c_ETC___d12917,
	       IF_coreFix_memExe_dTlb_procResp__485_BITS_105__ETC___d1565,
	       IF_fetchStage_pipelines_0_first__2491_BIT_68_2_ETC___d13007,
	       IF_scaprf_pcc_reg_read_wget__2773_BITS_27_TO_2_ETC___d14099,
	       cause_code__h625329,
	       vm_mode_reg__read__h534740;
  wire [2 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2292,
	       _theResult_____2__h224782,
	       next_deqP___1__h225027,
	       repBound__h577231,
	       v__h224238,
	       v__h224433,
	       x__h228985,
	       x_decodeInfo_frm__h575724;
  wire [1 : 0] IF_rob_deqPort_0_canDeq__4671_THEN_IF_NOT_rob__ETC___d14899,
	       IF_sfdin08839_BIT_4_THEN_2_ELSE_0__q148,
	       IF_sfdin18733_BIT_33_THEN_2_ELSE_0__q57,
	       IF_sfdin30682_BIT_4_THEN_2_ELSE_0__q131,
	       IF_sfdin36499_BIT_33_THEN_2_ELSE_0__q67,
	       IF_sfdin64428_BIT_33_THEN_2_ELSE_0__q92,
	       IF_sfdin69535_BIT_4_THEN_2_ELSE_0__q171,
	       IF_sfdin73036_BIT_33_THEN_2_ELSE_0__q22,
	       IF_sfdin82194_BIT_33_THEN_2_ELSE_0__q102,
	       IF_sfdin90802_BIT_33_THEN_2_ELSE_0__q32,
	       IF_theResult___snd17624_BIT_4_THEN_2_ELSE_0__q151,
	       IF_theResult___snd21062_BIT_4_THEN_2_ELSE_0__q127,
	       IF_theResult___snd27346_BIT_33_THEN_2_ELSE_0__q59,
	       IF_theResult___snd39467_BIT_4_THEN_2_ELSE_0__q134,
	       IF_theResult___snd45136_BIT_33_THEN_2_ELSE_0__q72,
	       IF_theResult___snd59915_BIT_4_THEN_2_ELSE_0__q167,
	       IF_theResult___snd73041_BIT_33_THEN_2_ELSE_0__q94,
	       IF_theResult___snd78320_BIT_4_THEN_2_ELSE_0__q174,
	       IF_theResult___snd81649_BIT_33_THEN_2_ELSE_0__q24,
	       IF_theResult___snd90831_BIT_33_THEN_2_ELSE_0__q107,
	       IF_theResult___snd99219_BIT_4_THEN_2_ELSE_0__q144,
	       IF_theResult___snd99439_BIT_33_THEN_2_ELSE_0__q37,
	       guard__h264941,
	       guard__h273650,
	       guard__h282580,
	       guard__h291416,
	       guard__h310640,
	       guard__h319347,
	       guard__h328277,
	       guard__h337113,
	       guard__h356335,
	       guard__h365042,
	       guard__h373972,
	       guard__h382808,
	       guard__h413150,
	       guard__h422462,
	       guard__h431531,
	       guard__h452003,
	       guard__h461315,
	       guard__h470384,
	       guard__h491307,
	       guard__h500619,
	       guard__h509688,
	       prv__h641787,
	       prv__h641831,
	       r1__read_BITS_13_TO_12___h575909,
	       sbIdx__h91776,
	       v__h523816,
	       v__h523826,
	       v__h524884,
	       x__h636333,
	       x__h640953,
	       y_avValue_snd_snd_snd_fst__h639566,
	       y_avValue_snd_snd_snd_fst__h640775,
	       y_avValue_snd_snd_snd_fst__h640804;
  wire IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d4728,
       IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d4778,
       IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d6120,
       IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d6170,
       IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d7512,
       IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d7562,
       IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d10098,
       IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d10365,
       IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d8613,
       IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d9328,
       IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d9596,
       IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10144,
       IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10350,
       IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10377,
       IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d8659,
       IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d9374,
       IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d9581,
       IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d9608,
       IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12767,
       IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d13493,
       IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d13529,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10148,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10380,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10381,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10436,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10477,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10521,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10536,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10546,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10557,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10576,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10590,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10605,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10622,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10634,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10647,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10664,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10676,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10689,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8663,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9378,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9611,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9612,
       IF_IF_coreFix_memExe_dMem_cache_m_banks_0_cRqR_ETC___d2791,
       IF_IF_coreFix_memExe_dMem_cache_m_banks_0_cRqR_ETC___d2799,
       IF_IF_coreFix_memExe_dMem_cache_m_banks_0_cRqR_ETC___d2808,
       IF_IF_coreFix_memExe_dMem_cache_m_banks_0_from_ETC___d2882,
       IF_IF_coreFix_memExe_dMem_cache_m_banks_0_from_ETC___d2891,
       IF_IF_coreFix_memExe_dMem_cache_m_banks_0_rqTo_ETC___d3042,
       IF_IF_coreFix_memExe_dMem_cache_m_banks_0_rqTo_ETC___d3050,
       IF_IF_coreFix_memExe_dMem_cache_m_banks_0_rqTo_ETC___d3061,
       IF_IF_coreFix_memExe_dMem_cache_m_banks_0_rsTo_ETC___d3126,
       IF_IF_coreFix_memExe_dMem_cache_m_banks_0_rsTo_ETC___d3134,
       IF_IF_coreFix_memExe_forwardQ_deqReq_lat_1_wha_ETC___d3412,
       IF_IF_coreFix_memExe_forwardQ_deqReq_lat_1_wha_ETC___d3420,
       IF_IF_coreFix_memExe_forwardQ_deqReq_lat_1_wha_ETC___d3430,
       IF_IF_coreFix_memExe_memRespLdQ_deqReq_lat_1_w_ETC___d3330,
       IF_IF_coreFix_memExe_memRespLdQ_deqReq_lat_1_w_ETC___d3338,
       IF_IF_coreFix_memExe_memRespLdQ_deqReq_lat_1_w_ETC___d3348,
       IF_NOT_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMu_ETC___d8318,
       IF_NOT_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMu_ETC___d9033,
       IF_NOT_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMu_ETC___d9803,
       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d11964,
       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d11965,
       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d11966,
       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d11991,
       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d11992,
       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d11993,
       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d12007,
       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d12015,
       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11108,
       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11109,
       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11110,
       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11135,
       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11136,
       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11137,
       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11151,
       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11159,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7898,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7899,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7900,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7924,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7925,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7926,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7950,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7951,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7952,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7966,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7973,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7980,
       IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1364,
       IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1365,
       IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1366,
       IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1390,
       IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1391,
       IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1392,
       IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1405,
       IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1412,
       IF_NOT_coreFix_memExe_dMem_cache_m_banks_0_pip_ETC___d1841,
       IF_NOT_coreFix_memExe_dMem_cache_m_banks_0_pip_ETC___d1858,
       IF_NOT_fetchStage_pipelines_0_canDeq__2489_249_ETC___d13636,
       IF_NOT_fetchStage_pipelines_0_canDeq__2489_249_ETC___d13644,
       IF_NOT_fetchStage_pipelines_1_first__2500_BITS_ETC___d13566,
       IF_NOT_fetchStage_pipelines_1_first__2500_BITS_ETC___d13643,
       IF_NOT_rob_deqPort_1_deq_data__4678_BIT_25_467_ETC___d14890,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10146,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10379,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10574,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10588,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10603,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10620,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10632,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10645,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10662,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10674,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10687,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d8661,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9376,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9610,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d4758,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d4795,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d4886,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d4899,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d4912,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6150,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6187,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6278,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6291,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6304,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7542,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7579,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7670,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7683,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7696,
       IF_coreFix_aluExe_0_dispToRegQ_RDY_first__1907_ETC___d11940,
       IF_coreFix_aluExe_0_dispToRegQ_RDY_first__1907_ETC___d11976,
       IF_coreFix_aluExe_1_dispToRegQ_RDY_first__1051_ETC___d11084,
       IF_coreFix_aluExe_1_dispToRegQ_RDY_first__1051_ETC___d11120,
       IF_coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first_ETC___d7874,
       IF_coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first_ETC___d7909,
       IF_coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first_ETC___d7935,
       IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6191,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6152,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6189,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6253,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6264,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6280,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6293,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6306,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4760,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4797,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4861,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4872,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4888,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4901,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4914,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7544,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7581,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7645,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7656,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7672,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7685,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7698,
       IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4799,
       IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7583,
       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10352,
       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8104,
       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9583,
       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d1839,
       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d1859,
       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d1862,
       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d2769,
       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d2782,
       IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d2863,
       IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d2876,
       IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d2898,
       IF_coreFix_memExe_dMem_cache_m_banks_0_linkAdd_ETC___d2745,
       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1808,
       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1810,
       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1811,
       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1819,
       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861,
       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1863,
       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2503,
       IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3022,
       IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3035,
       IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3106,
       IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3119,
       IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3141,
       IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1513,
       IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1569,
       IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1573,
       IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1577,
       IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1581,
       IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1585,
       IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1589,
       IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1593,
       IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1597,
       IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1601,
       IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1605,
       IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1609,
       IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1613,
       IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1617,
       IF_coreFix_memExe_dispToRegQ_RDY_first__309_AN_ETC___d1340,
       IF_coreFix_memExe_dispToRegQ_RDY_first__309_AN_ETC___d1375,
       IF_coreFix_memExe_forwardQ_deqReq_lat_1_whas___ETC___d3406,
       IF_coreFix_memExe_forwardQ_enqReq_lat_1_whas___ETC___d3393,
       IF_coreFix_memExe_memRespLdQ_deqReq_lat_1_whas_ETC___d3324,
       IF_coreFix_memExe_memRespLdQ_enqReq_lat_1_whas_ETC___d3311,
       IF_coreFix_memExe_respLrScAmoQ_enqReq_lat_1_wh_ETC___d3247,
       IF_fetchStage_RDY_pipelines_0_first__2488_AND__ETC___d13186,
       IF_fetchStage_RDY_pipelines_1_first__2499_AND__ETC___d13568,
       IF_fetchStage_RDY_pipelines_1_first__2499_AND__ETC___d13633,
       IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13681,
       IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13802,
       IF_mmio_cRqQ_enqReq_lat_1_whas__80_THEN_mmio_c_ETC___d289,
       IF_mmio_cRsQ_enqReq_lat_1_whas__76_THEN_mmio_c_ETC___d685,
       IF_mmio_dataReqQ_enqReq_lat_1_whas__5_THEN_mmi_ETC___d44,
       IF_mmio_dataRespQ_enqReq_lat_1_whas__66_THEN_m_ETC___d175,
       IF_mmio_pRqQ_enqReq_lat_1_whas__47_THEN_mmio_p_ETC___d556,
       IF_mmio_pRsQ_enqReq_lat_1_whas__08_THEN_mmio_p_ETC___d417,
       IF_rob_deqPort_1_canDeq__4675_THEN_IF_NOT_rob__ETC___d14891,
       IF_scaprf_pcc_reg_read_wget__2773_BITS_149_TO__ETC___d12809,
       IF_scaprf_pcc_reg_read_wget__2773_BITS_149_TO__ETC___d12812,
       IF_scaprf_pcc_reg_read_wget__2773_BITS_149_TO__ETC___d14082,
       IF_scaprf_pcc_reg_read_wget__2773_BITS_149_TO__ETC___d14085,
       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d4880,
       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d4908,
       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d6272,
       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d6300,
       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d7664,
       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d7692,
       NOT_IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_252_ETC___d13066,
       NOT_IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_252_ETC___d13174,
       NOT_IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_252_ETC___d13465,
       NOT_IF_NOT_rob_deqPort_0_canDeq__4671_4672_OR__ETC___d14896,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10439,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10481,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10539,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10550,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10579,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10594,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10625,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10638,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10667,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10680,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d8230,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d8960,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d9730,
       NOT_IF_rob_deqPort_0_deq_data__4141_BITS_196_T_ETC___d14648,
       NOT_SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__ETC___d13234,
       NOT_coreFix_aluExe_0_bypassWire_0_whas__1929_1_ETC___d11956,
       NOT_coreFix_aluExe_0_bypassWire_0_whas__1929_1_ETC___d11986,
       NOT_coreFix_aluExe_1_bypassWire_0_whas__1073_1_ETC___d11100,
       NOT_coreFix_aluExe_1_bypassWire_0_whas__1073_1_ETC___d11130,
       NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d7890,
       NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d7919,
       NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d7945,
       NOT_coreFix_fpuMulDivExe_0_fpuExec_double_div__ETC___d5474,
       NOT_coreFix_fpuMulDivExe_0_fpuExec_double_fma__ETC___d4082,
       NOT_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt_ETC___d6866,
       NOT_coreFix_fpuMulDivExe_0_regToExeQ_first__04_ETC___d8103,
       NOT_coreFix_fpuMulDivExe_0_rsFpuMulDiv_canEnq__ETC___d13577,
       NOT_coreFix_memExe_bypassWire_0_whas__329_335__ETC___d1356,
       NOT_coreFix_memExe_bypassWire_0_whas__329_335__ETC___d1385,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2279,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2407,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2438,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2454,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2463,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d1878,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2286,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2288,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2310,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2314,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2317,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2331,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2334,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2345,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2351,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2358,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2383,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2391,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2399,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2408,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2433,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2450,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2453,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2456,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2464,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2466,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2472,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2540,
       NOT_coreFix_memExe_dTlb_procResp__485_BITS_174_ETC___d1524,
       NOT_coreFix_memExe_respLrScAmoQ_full_710_711_A_ETC___d1837,
       NOT_coreFix_memExe_rsMem_canEnq__3202_3264_OR__ETC___d13578,
       NOT_csrf_fs_reg_read__1289_EQ_0_2712_2713_OR_N_ETC___d13059,
       NOT_csrf_fs_reg_read__1289_EQ_0_2712_2713_OR_N_ETC___d13172,
       NOT_csrf_fs_reg_read__1289_EQ_0_2712_2713_OR_N_ETC___d13463,
       NOT_csrf_prv_reg_read__2519_ULE_1_4282_4346_OR_ETC___d14350,
       NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13549,
       NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13560,
       NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13599,
       NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13616,
       NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13737,
       NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13756,
       NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13808,
       NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13940,
       NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13942,
       NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13953,
       NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13989,
       NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d14009,
       NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d14017,
       NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d14038,
       NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d14061,
       NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13053,
       NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13179,
       NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13216,
       NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13483,
       NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13489,
       NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13641,
       NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13814,
       NOT_fetchStage_pipelines_0_first__2491_BITS_32_ETC___d13838,
       NOT_fetchStage_pipelines_0_first__2491_BIT_68__ETC___d13227,
       NOT_fetchStage_pipelines_1_canDeq__2497_2498_O_ETC___d12506,
       NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13474,
       NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13476,
       NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13587,
       NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13608,
       NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13625,
       NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13950,
       NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d14012,
       NOT_fetchStage_pipelines_1_first__2500_BITS_32_ETC___d14004,
       NOT_fetchStage_pipelines_1_first__2500_BIT_68__ETC___d13947,
       NOT_mmio_dataPendQ_empty_73_64_AND_rob_RDY_set_ETC___d1154,
       NOT_mmio_dataPendQ_empty_73_64_AND_rob_RDY_set_ETC___d965,
       NOT_regRenamingTable_rename_0_canRename__3159__ETC___d13258,
       NOT_regRenamingTable_rename_0_canRename__3159__ETC___d13593,
       NOT_regRenamingTable_rename_0_canRename__3159__ETC___d13648,
       NOT_regRenamingTable_rename_1_canRename__3278__ETC___d13706,
       NOT_rob_deqPort_0_canDeq__4671_4672_OR_rob_RDY_ETC___d14710,
       NOT_rob_deqPort_0_canDeq__4671_4672_OR_rob_deq_ETC___d14870,
       NOT_rob_deqPort_0_deq_data__4141_BITS_356_TO_3_ETC___d14464,
       NOT_rob_deqPort_0_deq_data__4141_BITS_356_TO_3_ETC___d14657,
       NOT_rob_deqPort_1_deq_data__4678_BIT_25_4679_4_ETC___d14707,
       NOT_scaprf_pcc_reg_read_wget__2773_BITS_33_TO__ETC___d12776,
       NOT_specTagManager_canClaim__3157_3242_OR_NOT__ETC___d13727,
       NOT_specTagManager_canClaim__3157_3242_OR_NOT__ETC___d13792,
       SEL_ARR_fetchStage_pipelines_0_canDeq__2489_AN_ETC___d13538,
       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8321,
       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8322,
       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9036,
       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9037,
       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9806,
       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9807,
       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5603,
       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5604,
       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4211,
       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4212,
       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6995,
       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6996,
       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d3908,
       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d5300,
       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d6692,
       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10056,
       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d8571,
       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d9286,
       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d4459,
       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d5851,
       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d7243,
       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10106,
       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d8259,
       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d8621,
       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d8989,
       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9336,
       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9759,
       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d4139,
       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d4532,
       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5531,
       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5924,
       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6923,
       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d7316,
       _0_CONCAT_fetchStage_pipelines_0_first__2491_BI_ETC___d12800,
       _0_CONCAT_fetchStage_pipelines_1_first__2500_BI_ETC___d14074,
       _0_OR_NOT_fetchStage_pipelines_0_first__2491_BI_ETC___d13655,
       _0_OR_NOT_fetchStage_pipelines_1_first__2500_BI_ETC___d13740,
       _0_OR_fetchStage_RDY_pipelines_0_first__2488_35_ETC___d13563,
       _0b0_CONCAT_csrf_medeleg_15_reg_read__1388_1389_ETC___d14319,
       _0b0_CONCAT_csrf_mideleg_11_reg_read__1396_1397_ETC___d14300,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d3671,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d3672,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4843,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4868,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4895,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5063,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5064,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6235,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6260,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6287,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6455,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6456,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7627,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7652,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7679,
       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8184,
       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8186,
       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8914,
       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8916,
       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9684,
       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9686,
       _dfoo12,
       _dfoo18,
       _dfoo2,
       _dfoo20,
       _dfoo26,
       _dfoo7,
       _dor1coreFix_aluExe_0_bypassWire_2$EN_wset,
       _dor1coreFix_aluExe_0_bypassWire_3$EN_wset,
       _dor1coreFix_aluExe_0_rsAlu$EN_setRegReady_3_put,
       _dor1coreFix_aluExe_1_bypassWire_2$EN_wset,
       _dor1coreFix_aluExe_1_bypassWire_3$EN_wset,
       _dor1coreFix_aluExe_1_rsAlu$EN_setRegReady_3_put,
       _dor1coreFix_fpuMulDivExe_0_bypassWire_2$EN_wset,
       _dor1coreFix_fpuMulDivExe_0_bypassWire_3$EN_wset,
       _dor1coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_3_put,
       _dor1coreFix_memExe_bypassWire_2$EN_wset,
       _dor1coreFix_memExe_bypassWire_3$EN_wset,
       _dor1coreFix_memExe_reqLdQ_empty_lat_0$EN_wset,
       _dor1coreFix_memExe_reqLdQ_full_lat_0$EN_wset,
       _dor1coreFix_memExe_rsMem$EN_setRegReady_3_put,
       _dor1rf$EN_write_0_wr,
       _dor1rf$EN_write_1_wr,
       _dor1sbAggr$EN_setReady_3_put,
       _dor1sbCons$EN_setReady_0_put,
       _dor1sbCons$EN_setReady_1_put,
       _theResult_____2__h231351,
       _theResult_____2__h236020,
       _theResult_____2__h242447,
       _theResult_____2__h250043,
       _theResult_____2__h251943,
       coreFix_aluExe_0_bypassWire_0_wget__1930_BITS__ETC___d11932,
       coreFix_aluExe_0_bypassWire_0_wget__1930_BITS__ETC___d11973,
       coreFix_aluExe_0_bypassWire_1_wget__1943_BITS__ETC___d11945,
       coreFix_aluExe_0_bypassWire_1_wget__1943_BITS__ETC___d11979,
       coreFix_aluExe_0_bypassWire_2_wget__1951_BITS__ETC___d11953,
       coreFix_aluExe_0_bypassWire_2_wget__1951_BITS__ETC___d11983,
       coreFix_aluExe_0_bypassWire_3_wget__1958_BITS__ETC___d11960,
       coreFix_aluExe_0_bypassWire_3_wget__1958_BITS__ETC___d11987,
       coreFix_aluExe_0_dispToRegQ_RDY_first__1907_AN_ETC___d11998,
       coreFix_aluExe_0_exeToFinQ_RDY_first__2374_AND_ETC___d12414,
       coreFix_aluExe_0_rsAlu_approximateCount__3193__ETC___d13195,
       coreFix_aluExe_1_bypassWire_0_wget__1074_BITS__ETC___d11076,
       coreFix_aluExe_1_bypassWire_0_wget__1074_BITS__ETC___d11117,
       coreFix_aluExe_1_bypassWire_1_wget__1087_BITS__ETC___d11089,
       coreFix_aluExe_1_bypassWire_1_wget__1087_BITS__ETC___d11123,
       coreFix_aluExe_1_bypassWire_2_wget__1095_BITS__ETC___d11097,
       coreFix_aluExe_1_bypassWire_2_wget__1095_BITS__ETC___d11127,
       coreFix_aluExe_1_bypassWire_3_wget__1102_BITS__ETC___d11104,
       coreFix_aluExe_1_bypassWire_3_wget__1102_BITS__ETC___d11131,
       coreFix_aluExe_1_dispToRegQ_RDY_first__1051_AN_ETC___d11142,
       coreFix_aluExe_1_exeToFinQ_RDY_first__1700_AND_ETC___d11741,
       coreFix_fpuMulDivExe_0_bypassWire_0_wget__864__ETC___d7866,
       coreFix_fpuMulDivExe_0_bypassWire_0_wget__864__ETC___d7906,
       coreFix_fpuMulDivExe_0_bypassWire_0_wget__864__ETC___d7932,
       coreFix_fpuMulDivExe_0_bypassWire_1_wget__877__ETC___d7879,
       coreFix_fpuMulDivExe_0_bypassWire_1_wget__877__ETC___d7912,
       coreFix_fpuMulDivExe_0_bypassWire_1_wget__877__ETC___d7938,
       coreFix_fpuMulDivExe_0_bypassWire_2_wget__885__ETC___d7887,
       coreFix_fpuMulDivExe_0_bypassWire_2_wget__885__ETC___d7916,
       coreFix_fpuMulDivExe_0_bypassWire_2_wget__885__ETC___d7942,
       coreFix_fpuMulDivExe_0_bypassWire_3_wget__892__ETC___d7894,
       coreFix_fpuMulDivExe_0_bypassWire_3_wget__892__ETC___d7920,
       coreFix_fpuMulDivExe_0_bypassWire_3_wget__892__ETC___d7946,
       coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first__8_ETC___d7958,
       coreFix_fpuMulDivExe_0_fpuExec_divQ_RDY_first__ETC___d4931,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ_RDY_first__ETC___d3539,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_RDY_first_ETC___d6323,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ_RDY_enq_ETC___d8101,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ_RDY_fir_ETC___d7715,
       coreFix_fpuMulDivExe_0_regToExeQ_first__045_BI_ETC___d10526,
       coreFix_fpuMulDivExe_0_regToExeQ_first__045_BI_ETC___d10562,
       coreFix_fpuMulDivExe_0_regToExeQ_first__045_BI_ETC___d10610,
       coreFix_fpuMulDivExe_0_regToExeQ_first__045_BI_ETC___d10652,
       coreFix_fpuMulDivExe_0_regToExeQ_first__045_BI_ETC___d10694,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv_RDY_enq__36_ETC___d13747,
       coreFix_memExe_bypassWire_0_wget__330_BITS_70__ETC___d1332,
       coreFix_memExe_bypassWire_0_wget__330_BITS_70__ETC___d1372,
       coreFix_memExe_bypassWire_1_wget__343_BITS_70__ETC___d1345,
       coreFix_memExe_bypassWire_1_wget__343_BITS_70__ETC___d1378,
       coreFix_memExe_bypassWire_2_wget__351_BITS_70__ETC___d1353,
       coreFix_memExe_bypassWire_2_wget__351_BITS_70__ETC___d1382,
       coreFix_memExe_bypassWire_3_wget__358_BITS_70__ETC___d1360,
       coreFix_memExe_bypassWire_3_wget__358_BITS_70__ETC___d1386,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_pi_ETC___d2330,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_pi_ETC___d2395,
       coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1825,
       coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d2547,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2283,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2289,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2309,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2313,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2318,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2335,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2352,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2372,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2375,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2411,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2426,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2440,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2451,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2462,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2482,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2496,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2499,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2522,
       coreFix_memExe_dTlb_procResp__485_BITS_105_TO__ETC___d1639,
       coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1495,
       coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1496,
       coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1500,
       coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1503,
       coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1504,
       coreFix_memExe_regToExeQ_RDY_enq__308_AND_core_ETC___d1398,
       coreFix_memExe_stb_isEmpty__86_AND_coreFix_mem_ETC___d14469,
       csrf_fs_reg_read__1289_EQ_0_2712_AND_fetchStag_ETC___d12760,
       csrf_fs_reg_read__1289_EQ_0_2712_AND_fetchStag_ETC___d13251,
       csrf_fs_reg_read__1289_EQ_0_2712_AND_fetchStag_ETC___d13527,
       csrf_prv_reg_read__2519_ULE_1_4282_AND_IF_comm_ETC___d14321,
       csrf_prv_reg_read__2519_ULE_1___d14282,
       csrf_prv_reg_read__2519_ULT_IF_fetchStage_pipe_ETC___d12755,
       fetchStage_RDY_pipelines_0_first__2488_AND_NOT_ETC___d13182,
       fetchStage_RDY_pipelines_0_first__2488_AND_fet_ETC___d13248,
       fetchStage_RDY_pipelines_1_deq__2503_AND_NOT_f_ETC___d13796,
       fetchStage_pipelines_0_canDeq__2489_AND_NOT_fe_ETC___d13738,
       fetchStage_pipelines_0_canDeq__2489_AND_NOT_fe_ETC___d13817,
       fetchStage_pipelines_0_canDeq__2489_AND_NOT_fe_ETC___d13936,
       fetchStage_pipelines_0_canDeq__2489_AND_fetchS_ETC___d13806,
       fetchStage_pipelines_0_canDeq__2489_AND_regRen_ETC___d13744,
       fetchStage_pipelines_0_canDeq__2489_AND_regRen_ETC___d13751,
       fetchStage_pipelines_0_canDeq__2489_AND_regRen_ETC___d13772,
       fetchStage_pipelines_0_canDeq__2489_AND_regRen_ETC___d13783,
       fetchStage_pipelines_0_canDeq__2489_AND_regRen_ETC___d14116,
       fetchStage_pipelines_0_canDeq__2489_AND_specTa_ETC___d13900,
       fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d12753,
       fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13482,
       fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13503,
       fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13575,
       fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13683,
       fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13689,
       fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13711,
       fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13718,
       fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13931,
       fetchStage_pipelines_0_first__2491_BITS_199_TO_ETC___d13496,
       fetchStage_pipelines_0_first__2491_BIT_68_2518_ETC___d13256,
       fetchStage_pipelines_1_first__2500_BITS_194_TO_ETC___d13700,
       fetchStage_pipelines_1_first__2500_BITS_199_TO_ETC___d13535,
       fetchStage_pipelines_1_first__2500_BIT_68_3306_ETC___d13704,
       guard__h283178,
       guard__h328875,
       guard__h374570,
       guard__h423060,
       guard__h461913,
       guard__h501217,
       idx__h606397,
       k__h590245,
       mmio_pRqQ_empty_55_AND_epochManager_checkEpoch_ETC___d12771,
       mmio_pRqQ_empty_55_AND_epochManager_checkEpoch_ETC___d13085,
       mmio_pRqQ_empty_55_AND_epochManager_checkEpoch_ETC___d13811,
       next_deqP___1__h231596,
       next_deqP___1__h236450,
       next_deqP___1__h242877,
       next_deqP___1__h250288,
       next_deqP___1__h252188,
       r1__read_BIT_20___h576573,
       r__h533618,
       r__h535115,
       regRenamingTable_RDY_rename_0_getRename__3022__ETC___d13031,
       regRenamingTable_RDY_rename_0_getRename__3022__ETC___d13668,
       regRenamingTable_RDY_rename_1_getRename__3724__ETC___d13742,
       regRenamingTable_rename_0_canRename__3159_AND__ETC___d13229,
       regRenamingTable_rename_0_canRename__3159_AND__ETC___d13243,
       regRenamingTable_rename_0_canRename__3159_AND__ETC___d13558,
       regRenamingTable_rename_0_canRename__3159_AND__ETC___d13697,
       regRenamingTable_rename_0_canRename__3159_AND__ETC___d13829,
       regRenamingTable_rename_0_canRename__3159_AND__ETC___d13842,
       regRenamingTable_rename_0_canRename__3159_AND__ETC___d13847,
       regRenamingTable_rename_0_canRename__3159_AND__ETC___d13852,
       regRenamingTable_rename_0_canRename__3159_AND__ETC___d13872,
       regRenamingTable_rename_0_canRename__3159_AND__ETC___d13876,
       regRenamingTable_rename_0_canRename__3159_AND__ETC___d13882,
       regRenamingTable_rename_0_canRename__3159_AND__ETC___d13886,
       regRenamingTable_rename_0_canRename__3159_AND__ETC___d13894,
       regRenamingTable_rename_0_canRename__3159_AND__ETC___d14114,
       regRenamingTable_rename_1_canRename__3278_AND__ETC___d13949,
       regRenamingTable_rename_1_canRename__3278_AND__ETC___d14033,
       regRenamingTable_rename_1_canRename__3278_AND__ETC___d14043,
       rob_enqPort_1_canEnq__3467_AND_epochManager_ch_ETC___d13472,
       rob_enqPort_1_canEnq__3467_AND_epochManager_ch_ETC___d13606,
       rob_enqPort_1_canEnq__3467_AND_epochManager_ch_ETC___d13623,
       scaprf_pcc_reg_read_wget__2773_BITS_13_TO_11_2_ETC___d12821,
       scaprf_pcc_reg_read_wget__2773_BITS_149_TO_86__ETC___d12785,
       scaprf_pcc_reg_read_wget__2773_BITS_149_TO_86__ETC___d14066,
       scaprf_pcc_reg_read_wget__2773_BITS_27_TO_25_2_ETC___d12820,
       scaprf_pcc_reg_read_wget__2773_BITS_85_TO_83_2_ETC___d12796,
       v__h226258,
       v__h226638,
       v__h235345,
       v__h235540,
       v__h237794,
       v__h237989,
       v__h249647,
       v__h249842,
       v__h251547,
       v__h251742,
       x__h523132;

  // action method coreReq_start
  assign RDY_coreReq_start = 1'd1 ;
  assign CAN_FIRE_coreReq_start = 1'd1 ;
  assign WILL_FIRE_coreReq_start = EN_coreReq_start ;

  // action method coreReq_perfReq
  assign RDY_coreReq_perfReq = perfReqQ$FULL_N ;
  assign CAN_FIRE_coreReq_perfReq = perfReqQ$FULL_N ;
  assign WILL_FIRE_coreReq_perfReq = EN_coreReq_perfReq ;

  // actionvalue method coreIndInv_perfResp
  assign coreIndInv_perfResp = { perfReqQ$D_OUT, 64'd0 } ;
  assign RDY_coreIndInv_perfResp = perfReqQ$EMPTY_N ;
  assign CAN_FIRE_coreIndInv_perfResp = perfReqQ$EMPTY_N ;
  assign WILL_FIRE_coreIndInv_perfResp = EN_coreIndInv_perfResp ;

  // action method coreIndInv_terminate
  assign RDY_coreIndInv_terminate = csrf_terminate_module_terminateQ$EMPTY_N ;
  assign CAN_FIRE_coreIndInv_terminate =
	     csrf_terminate_module_terminateQ$EMPTY_N ;
  assign WILL_FIRE_coreIndInv_terminate = EN_coreIndInv_terminate ;

  // value method dCacheToParent_rsToP_notEmpty
  assign dCacheToParent_rsToP_notEmpty =
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty ;
  assign RDY_dCacheToParent_rsToP_notEmpty = 1'd1 ;

  // action method dCacheToParent_rsToP_deq
  assign RDY_dCacheToParent_rsToP_deq =
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty ;
  assign CAN_FIRE_dCacheToParent_rsToP_deq =
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty ;
  assign WILL_FIRE_dCacheToParent_rsToP_deq = EN_dCacheToParent_rsToP_deq ;

  // value method dCacheToParent_rsToP_first
  assign dCacheToParent_rsToP_first =
	     { CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q247,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q248,
	       !CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q249,
	       SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d14992 } ;
  assign RDY_dCacheToParent_rsToP_first =
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty ;

  // value method dCacheToParent_rqToP_notEmpty
  assign dCacheToParent_rqToP_notEmpty =
	     !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty ;
  assign RDY_dCacheToParent_rqToP_notEmpty = 1'd1 ;

  // action method dCacheToParent_rqToP_deq
  assign RDY_dCacheToParent_rqToP_deq =
	     !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty ;
  assign CAN_FIRE_dCacheToParent_rqToP_deq =
	     !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty ;
  assign WILL_FIRE_dCacheToParent_rqToP_deq = EN_dCacheToParent_rqToP_deq ;

  // value method dCacheToParent_rqToP_first
  assign dCacheToParent_rqToP_first =
	     { CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q256,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q257,
	       SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rq_ETC___d15018 } ;
  assign RDY_dCacheToParent_rqToP_first =
	     !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty ;

  // value method dCacheToParent_fromP_notFull
  assign dCacheToParent_fromP_notFull =
	     !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full ;
  assign RDY_dCacheToParent_fromP_notFull = 1'd1 ;

  // action method dCacheToParent_fromP_enq
  assign RDY_dCacheToParent_fromP_enq =
	     !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full ;
  assign CAN_FIRE_dCacheToParent_fromP_enq =
	     !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full ;
  assign WILL_FIRE_dCacheToParent_fromP_enq = EN_dCacheToParent_fromP_enq ;

  // value method iCacheToParent_rsToP_notEmpty
  assign iCacheToParent_rsToP_notEmpty =
	     fetchStage$iMemIfc_to_parent_rsToP_notEmpty ;
  assign RDY_iCacheToParent_rsToP_notEmpty = 1'd1 ;

  // action method iCacheToParent_rsToP_deq
  assign RDY_iCacheToParent_rsToP_deq =
	     fetchStage$RDY_iMemIfc_to_parent_rsToP_deq ;
  assign CAN_FIRE_iCacheToParent_rsToP_deq =
	     fetchStage$RDY_iMemIfc_to_parent_rsToP_deq ;
  assign WILL_FIRE_iCacheToParent_rsToP_deq = EN_iCacheToParent_rsToP_deq ;

  // value method iCacheToParent_rsToP_first
  assign iCacheToParent_rsToP_first =
	     fetchStage$iMemIfc_to_parent_rsToP_first ;
  assign RDY_iCacheToParent_rsToP_first =
	     fetchStage$RDY_iMemIfc_to_parent_rsToP_first ;

  // value method iCacheToParent_rqToP_notEmpty
  assign iCacheToParent_rqToP_notEmpty =
	     fetchStage$iMemIfc_to_parent_rqToP_notEmpty ;
  assign RDY_iCacheToParent_rqToP_notEmpty = 1'd1 ;

  // action method iCacheToParent_rqToP_deq
  assign RDY_iCacheToParent_rqToP_deq =
	     fetchStage$RDY_iMemIfc_to_parent_rqToP_deq ;
  assign CAN_FIRE_iCacheToParent_rqToP_deq =
	     fetchStage$RDY_iMemIfc_to_parent_rqToP_deq ;
  assign WILL_FIRE_iCacheToParent_rqToP_deq = EN_iCacheToParent_rqToP_deq ;

  // value method iCacheToParent_rqToP_first
  assign iCacheToParent_rqToP_first =
	     fetchStage$iMemIfc_to_parent_rqToP_first ;
  assign RDY_iCacheToParent_rqToP_first =
	     fetchStage$RDY_iMemIfc_to_parent_rqToP_first ;

  // value method iCacheToParent_fromP_notFull
  assign iCacheToParent_fromP_notFull =
	     fetchStage$iMemIfc_to_parent_fromP_notFull ;
  assign RDY_iCacheToParent_fromP_notFull = 1'd1 ;

  // action method iCacheToParent_fromP_enq
  assign RDY_iCacheToParent_fromP_enq =
	     fetchStage$RDY_iMemIfc_to_parent_fromP_enq ;
  assign CAN_FIRE_iCacheToParent_fromP_enq =
	     fetchStage$RDY_iMemIfc_to_parent_fromP_enq ;
  assign WILL_FIRE_iCacheToParent_fromP_enq = EN_iCacheToParent_fromP_enq ;

  // value method tlbToMem_memReq_notEmpty
  assign tlbToMem_memReq_notEmpty = l2Tlb$toMem_memReq_notEmpty ;
  assign RDY_tlbToMem_memReq_notEmpty = 1'd1 ;

  // action method tlbToMem_memReq_deq
  assign RDY_tlbToMem_memReq_deq = l2Tlb$RDY_toMem_memReq_deq ;
  assign CAN_FIRE_tlbToMem_memReq_deq = l2Tlb$RDY_toMem_memReq_deq ;
  assign WILL_FIRE_tlbToMem_memReq_deq = EN_tlbToMem_memReq_deq ;

  // value method tlbToMem_memReq_first
  assign tlbToMem_memReq_first = l2Tlb$toMem_memReq_first ;
  assign RDY_tlbToMem_memReq_first = l2Tlb$RDY_toMem_memReq_first ;

  // value method tlbToMem_respLd_notFull
  assign tlbToMem_respLd_notFull = l2Tlb$toMem_respLd_notFull ;
  assign RDY_tlbToMem_respLd_notFull = 1'd1 ;

  // action method tlbToMem_respLd_enq
  assign RDY_tlbToMem_respLd_enq = l2Tlb$RDY_toMem_respLd_enq ;
  assign CAN_FIRE_tlbToMem_respLd_enq = l2Tlb$RDY_toMem_respLd_enq ;
  assign WILL_FIRE_tlbToMem_respLd_enq = EN_tlbToMem_respLd_enq ;

  // value method mmioToPlatform_cRq_notEmpty
  assign mmioToPlatform_cRq_notEmpty = !mmio_cRqQ_empty ;
  assign RDY_mmioToPlatform_cRq_notEmpty = 1'd1 ;

  // action method mmioToPlatform_cRq_deq
  assign RDY_mmioToPlatform_cRq_deq = !mmio_cRqQ_empty ;
  assign CAN_FIRE_mmioToPlatform_cRq_deq = !mmio_cRqQ_empty ;
  assign WILL_FIRE_mmioToPlatform_cRq_deq = EN_mmioToPlatform_cRq_deq ;

  // value method mmioToPlatform_cRq_first
  assign mmioToPlatform_cRq_first =
	     { mmio_cRqQ_data_0[141:78],
	       CASE_mmio_cRqQ_data_0_BITS_77_TO_76_0_mmio_cRq_ETC__q1,
	       mmio_cRqQ_data_0[71:0] } ;
  assign RDY_mmioToPlatform_cRq_first = !mmio_cRqQ_empty ;

  // value method mmioToPlatform_pRs_notFull
  assign mmioToPlatform_pRs_notFull = !mmio_pRsQ_full ;
  assign RDY_mmioToPlatform_pRs_notFull = 1'd1 ;

  // action method mmioToPlatform_pRs_enq
  assign RDY_mmioToPlatform_pRs_enq = !mmio_pRsQ_full ;
  assign CAN_FIRE_mmioToPlatform_pRs_enq = !mmio_pRsQ_full ;
  assign WILL_FIRE_mmioToPlatform_pRs_enq = EN_mmioToPlatform_pRs_enq ;

  // value method mmioToPlatform_pRq_notFull
  assign mmioToPlatform_pRq_notFull = !mmio_pRqQ_full ;
  assign RDY_mmioToPlatform_pRq_notFull = 1'd1 ;

  // action method mmioToPlatform_pRq_enq
  assign RDY_mmioToPlatform_pRq_enq = !mmio_pRqQ_full ;
  assign CAN_FIRE_mmioToPlatform_pRq_enq = !mmio_pRqQ_full ;
  assign WILL_FIRE_mmioToPlatform_pRq_enq = EN_mmioToPlatform_pRq_enq ;

  // value method mmioToPlatform_cRs_notEmpty
  assign mmioToPlatform_cRs_notEmpty = !mmio_cRsQ_empty ;
  assign RDY_mmioToPlatform_cRs_notEmpty = 1'd1 ;

  // action method mmioToPlatform_cRs_deq
  assign RDY_mmioToPlatform_cRs_deq = !mmio_cRsQ_empty ;
  assign CAN_FIRE_mmioToPlatform_cRs_deq = !mmio_cRsQ_empty ;
  assign WILL_FIRE_mmioToPlatform_cRs_deq = EN_mmioToPlatform_cRs_deq ;

  // value method mmioToPlatform_cRs_first
  assign mmioToPlatform_cRs_first = mmio_cRsQ_data_0 ;
  assign RDY_mmioToPlatform_cRs_first = !mmio_cRsQ_empty ;

  // action method mmioToPlatform_setTime
  assign RDY_mmioToPlatform_setTime = 1'd1 ;
  assign CAN_FIRE_mmioToPlatform_setTime = 1'd1 ;
  assign WILL_FIRE_mmioToPlatform_setTime = EN_mmioToPlatform_setTime ;

  // actionvalue method sendDoStats
  assign sendDoStats = csrf_stats_module_writeQ$D_OUT ;
  assign RDY_sendDoStats = csrf_stats_module_writeQ$EMPTY_N ;
  assign CAN_FIRE_sendDoStats = csrf_stats_module_writeQ$EMPTY_N ;
  assign WILL_FIRE_sendDoStats = EN_sendDoStats ;

  // action method recvDoStats
  assign RDY_recvDoStats = 1'd1 ;
  assign CAN_FIRE_recvDoStats = 1'd1 ;
  assign WILL_FIRE_recvDoStats = EN_recvDoStats ;

  // actionvalue method deadlock_dCacheCRqStuck_get
  assign deadlock_dCacheCRqStuck_get = 73'h0AAAAAAAAAAAAAAAAAA ;
  assign RDY_deadlock_dCacheCRqStuck_get = 1'd0 ;
  assign CAN_FIRE_deadlock_dCacheCRqStuck_get = 1'd0 ;
  assign WILL_FIRE_deadlock_dCacheCRqStuck_get =
	     EN_deadlock_dCacheCRqStuck_get ;

  // actionvalue method deadlock_dCachePRqStuck_get
  assign deadlock_dCachePRqStuck_get = 68'hAAAAAAAAAAAAAAAAA ;
  assign RDY_deadlock_dCachePRqStuck_get = 1'd0 ;
  assign CAN_FIRE_deadlock_dCachePRqStuck_get = 1'd0 ;
  assign WILL_FIRE_deadlock_dCachePRqStuck_get =
	     EN_deadlock_dCachePRqStuck_get ;

  // actionvalue method deadlock_iCacheCRqStuck_get
  assign deadlock_iCacheCRqStuck_get = fetchStage$iMemIfc_cRqStuck_get ;
  assign RDY_deadlock_iCacheCRqStuck_get =
	     fetchStage$RDY_iMemIfc_cRqStuck_get ;
  assign CAN_FIRE_deadlock_iCacheCRqStuck_get =
	     fetchStage$RDY_iMemIfc_cRqStuck_get ;
  assign WILL_FIRE_deadlock_iCacheCRqStuck_get =
	     EN_deadlock_iCacheCRqStuck_get ;

  // actionvalue method deadlock_iCachePRqStuck_get
  assign deadlock_iCachePRqStuck_get = fetchStage$iMemIfc_pRqStuck_get ;
  assign RDY_deadlock_iCachePRqStuck_get =
	     fetchStage$RDY_iMemIfc_pRqStuck_get ;
  assign CAN_FIRE_deadlock_iCachePRqStuck_get =
	     fetchStage$RDY_iMemIfc_pRqStuck_get ;
  assign WILL_FIRE_deadlock_iCachePRqStuck_get =
	     EN_deadlock_iCachePRqStuck_get ;

  // actionvalue method deadlock_renameInstStuck_get
  assign deadlock_renameInstStuck_get = 78'h2AAAAAAAAAAAAAAAAAAA ;
  assign RDY_deadlock_renameInstStuck_get = 1'd0 ;
  assign CAN_FIRE_deadlock_renameInstStuck_get = 1'd0 ;
  assign WILL_FIRE_deadlock_renameInstStuck_get =
	     EN_deadlock_renameInstStuck_get ;

  // actionvalue method deadlock_renameCorrectPathStuck_get
  assign deadlock_renameCorrectPathStuck_get = 78'h2AAAAAAAAAAAAAAAAAAA ;
  assign RDY_deadlock_renameCorrectPathStuck_get = 1'd0 ;
  assign CAN_FIRE_deadlock_renameCorrectPathStuck_get = 1'd0 ;
  assign WILL_FIRE_deadlock_renameCorrectPathStuck_get =
	     EN_deadlock_renameCorrectPathStuck_get ;

  // actionvalue method deadlock_commitInstStuck_get
  assign deadlock_commitInstStuck_get =
	     163'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA ;
  assign RDY_deadlock_commitInstStuck_get = 1'd0 ;
  assign CAN_FIRE_deadlock_commitInstStuck_get = 1'd0 ;
  assign WILL_FIRE_deadlock_commitInstStuck_get =
	     EN_deadlock_commitInstStuck_get ;

  // actionvalue method deadlock_commitUserInstStuck_get
  assign deadlock_commitUserInstStuck_get =
	     163'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA ;
  assign RDY_deadlock_commitUserInstStuck_get = 1'd0 ;
  assign CAN_FIRE_deadlock_commitUserInstStuck_get = 1'd0 ;
  assign WILL_FIRE_deadlock_commitUserInstStuck_get =
	     EN_deadlock_commitUserInstStuck_get ;

  // action method deadlock_checkStarted_get
  assign RDY_deadlock_checkStarted_get = 1'd0 ;
  assign CAN_FIRE_deadlock_checkStarted_get = 1'd0 ;
  assign WILL_FIRE_deadlock_checkStarted_get = EN_deadlock_checkStarted_get ;

  // actionvalue method renameDebug_renameErr_get
  assign renameDebug_renameErr_get = 89'h0AAAAAAAAAAAAAAAAAAAAAA ;
  assign RDY_renameDebug_renameErr_get = 1'd0 ;
  assign CAN_FIRE_renameDebug_renameErr_get = 1'd0 ;
  assign WILL_FIRE_renameDebug_renameErr_get = EN_renameDebug_renameErr_get ;

  // action method setMEIP
  assign RDY_setMEIP = 1'd1 ;
  assign CAN_FIRE_setMEIP = 1'd1 ;
  assign WILL_FIRE_setMEIP = EN_setMEIP ;

  // action method setSEIP
  assign RDY_setSEIP = 1'd1 ;
  assign CAN_FIRE_setSEIP = 1'd1 ;
  assign WILL_FIRE_setSEIP = EN_setSEIP ;

  // submodule coreFix_aluExe_0_dispToRegQ
  mkAluDispToRegFifo coreFix_aluExe_0_dispToRegQ(.CLK(CLK),
						 .RST_N(RST_N),
						 .enq_x(coreFix_aluExe_0_dispToRegQ$enq_x),
						 .specUpdate_correctSpeculation_mask(coreFix_aluExe_0_dispToRegQ$specUpdate_correctSpeculation_mask),
						 .specUpdate_incorrectSpeculation_kill_all(coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all),
						 .specUpdate_incorrectSpeculation_kill_tag(coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag),
						 .EN_enq(coreFix_aluExe_0_dispToRegQ$EN_enq),
						 .EN_deq(coreFix_aluExe_0_dispToRegQ$EN_deq),
						 .EN_specUpdate_incorrectSpeculation(coreFix_aluExe_0_dispToRegQ$EN_specUpdate_incorrectSpeculation),
						 .EN_specUpdate_correctSpeculation(coreFix_aluExe_0_dispToRegQ$EN_specUpdate_correctSpeculation),
						 .RDY_enq(coreFix_aluExe_0_dispToRegQ$RDY_enq),
						 .RDY_deq(coreFix_aluExe_0_dispToRegQ$RDY_deq),
						 .first(coreFix_aluExe_0_dispToRegQ$first),
						 .RDY_first(coreFix_aluExe_0_dispToRegQ$RDY_first),
						 .RDY_specUpdate_incorrectSpeculation(),
						 .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_aluExe_0_exeToFinQ
  mkAluExeToFinFifo coreFix_aluExe_0_exeToFinQ(.CLK(CLK),
					       .RST_N(RST_N),
					       .enq_x(coreFix_aluExe_0_exeToFinQ$enq_x),
					       .specUpdate_correctSpeculation_mask(coreFix_aluExe_0_exeToFinQ$specUpdate_correctSpeculation_mask),
					       .specUpdate_incorrectSpeculation_kill_all(coreFix_aluExe_0_exeToFinQ$specUpdate_incorrectSpeculation_kill_all),
					       .specUpdate_incorrectSpeculation_kill_tag(coreFix_aluExe_0_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag),
					       .EN_enq(coreFix_aluExe_0_exeToFinQ$EN_enq),
					       .EN_deq(coreFix_aluExe_0_exeToFinQ$EN_deq),
					       .EN_specUpdate_incorrectSpeculation(coreFix_aluExe_0_exeToFinQ$EN_specUpdate_incorrectSpeculation),
					       .EN_specUpdate_correctSpeculation(coreFix_aluExe_0_exeToFinQ$EN_specUpdate_correctSpeculation),
					       .RDY_enq(coreFix_aluExe_0_exeToFinQ$RDY_enq),
					       .RDY_deq(coreFix_aluExe_0_exeToFinQ$RDY_deq),
					       .first(coreFix_aluExe_0_exeToFinQ$first),
					       .RDY_first(coreFix_aluExe_0_exeToFinQ$RDY_first),
					       .RDY_specUpdate_incorrectSpeculation(),
					       .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_aluExe_0_regToExeQ
  mkAluRegToExeFifo coreFix_aluExe_0_regToExeQ(.CLK(CLK),
					       .RST_N(RST_N),
					       .enq_x(coreFix_aluExe_0_regToExeQ$enq_x),
					       .specUpdate_correctSpeculation_mask(coreFix_aluExe_0_regToExeQ$specUpdate_correctSpeculation_mask),
					       .specUpdate_incorrectSpeculation_kill_all(coreFix_aluExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_all),
					       .specUpdate_incorrectSpeculation_kill_tag(coreFix_aluExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag),
					       .EN_enq(coreFix_aluExe_0_regToExeQ$EN_enq),
					       .EN_deq(coreFix_aluExe_0_regToExeQ$EN_deq),
					       .EN_specUpdate_incorrectSpeculation(coreFix_aluExe_0_regToExeQ$EN_specUpdate_incorrectSpeculation),
					       .EN_specUpdate_correctSpeculation(coreFix_aluExe_0_regToExeQ$EN_specUpdate_correctSpeculation),
					       .RDY_enq(coreFix_aluExe_0_regToExeQ$RDY_enq),
					       .RDY_deq(coreFix_aluExe_0_regToExeQ$RDY_deq),
					       .first(coreFix_aluExe_0_regToExeQ$first),
					       .RDY_first(coreFix_aluExe_0_regToExeQ$RDY_first),
					       .RDY_specUpdate_incorrectSpeculation(),
					       .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_aluExe_0_rsAlu
  mkReservationStationAlu coreFix_aluExe_0_rsAlu(.CLK(CLK),
						 .RST_N(RST_N),
						 .enq_x(coreFix_aluExe_0_rsAlu$enq_x),
						 .setRegReady_0_put(coreFix_aluExe_0_rsAlu$setRegReady_0_put),
						 .setRegReady_1_put(coreFix_aluExe_0_rsAlu$setRegReady_1_put),
						 .setRegReady_2_put(coreFix_aluExe_0_rsAlu$setRegReady_2_put),
						 .setRegReady_3_put(coreFix_aluExe_0_rsAlu$setRegReady_3_put),
						 .setRegReady_4_put(coreFix_aluExe_0_rsAlu$setRegReady_4_put),
						 .setRobEnqTime_t(coreFix_aluExe_0_rsAlu$setRobEnqTime_t),
						 .specUpdate_correctSpeculation_mask(coreFix_aluExe_0_rsAlu$specUpdate_correctSpeculation_mask),
						 .specUpdate_incorrectSpeculation_kill_all(coreFix_aluExe_0_rsAlu$specUpdate_incorrectSpeculation_kill_all),
						 .specUpdate_incorrectSpeculation_kill_tag(coreFix_aluExe_0_rsAlu$specUpdate_incorrectSpeculation_kill_tag),
						 .EN_enq(coreFix_aluExe_0_rsAlu$EN_enq),
						 .EN_setRobEnqTime(coreFix_aluExe_0_rsAlu$EN_setRobEnqTime),
						 .EN_doDispatch(coreFix_aluExe_0_rsAlu$EN_doDispatch),
						 .EN_setRegReady_0_put(coreFix_aluExe_0_rsAlu$EN_setRegReady_0_put),
						 .EN_setRegReady_1_put(coreFix_aluExe_0_rsAlu$EN_setRegReady_1_put),
						 .EN_setRegReady_2_put(coreFix_aluExe_0_rsAlu$EN_setRegReady_2_put),
						 .EN_setRegReady_3_put(coreFix_aluExe_0_rsAlu$EN_setRegReady_3_put),
						 .EN_setRegReady_4_put(coreFix_aluExe_0_rsAlu$EN_setRegReady_4_put),
						 .EN_specUpdate_incorrectSpeculation(coreFix_aluExe_0_rsAlu$EN_specUpdate_incorrectSpeculation),
						 .EN_specUpdate_correctSpeculation(coreFix_aluExe_0_rsAlu$EN_specUpdate_correctSpeculation),
						 .RDY_enq(coreFix_aluExe_0_rsAlu$RDY_enq),
						 .canEnq(coreFix_aluExe_0_rsAlu$canEnq),
						 .RDY_canEnq(),
						 .RDY_setRobEnqTime(),
						 .dispatchData(coreFix_aluExe_0_rsAlu$dispatchData),
						 .RDY_dispatchData(coreFix_aluExe_0_rsAlu$RDY_dispatchData),
						 .RDY_doDispatch(coreFix_aluExe_0_rsAlu$RDY_doDispatch),
						 .RDY_setRegReady_0_put(),
						 .RDY_setRegReady_1_put(),
						 .RDY_setRegReady_2_put(),
						 .RDY_setRegReady_3_put(),
						 .RDY_setRegReady_4_put(),
						 .approximateCount(coreFix_aluExe_0_rsAlu$approximateCount),
						 .RDY_approximateCount(),
						 .isFull_ehrPort0(),
						 .RDY_isFull_ehrPort0(),
						 .RDY_specUpdate_incorrectSpeculation(),
						 .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_aluExe_1_dispToRegQ
  mkAluDispToRegFifo coreFix_aluExe_1_dispToRegQ(.CLK(CLK),
						 .RST_N(RST_N),
						 .enq_x(coreFix_aluExe_1_dispToRegQ$enq_x),
						 .specUpdate_correctSpeculation_mask(coreFix_aluExe_1_dispToRegQ$specUpdate_correctSpeculation_mask),
						 .specUpdate_incorrectSpeculation_kill_all(coreFix_aluExe_1_dispToRegQ$specUpdate_incorrectSpeculation_kill_all),
						 .specUpdate_incorrectSpeculation_kill_tag(coreFix_aluExe_1_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag),
						 .EN_enq(coreFix_aluExe_1_dispToRegQ$EN_enq),
						 .EN_deq(coreFix_aluExe_1_dispToRegQ$EN_deq),
						 .EN_specUpdate_incorrectSpeculation(coreFix_aluExe_1_dispToRegQ$EN_specUpdate_incorrectSpeculation),
						 .EN_specUpdate_correctSpeculation(coreFix_aluExe_1_dispToRegQ$EN_specUpdate_correctSpeculation),
						 .RDY_enq(coreFix_aluExe_1_dispToRegQ$RDY_enq),
						 .RDY_deq(coreFix_aluExe_1_dispToRegQ$RDY_deq),
						 .first(coreFix_aluExe_1_dispToRegQ$first),
						 .RDY_first(coreFix_aluExe_1_dispToRegQ$RDY_first),
						 .RDY_specUpdate_incorrectSpeculation(),
						 .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_aluExe_1_exeToFinQ
  mkAluExeToFinFifo coreFix_aluExe_1_exeToFinQ(.CLK(CLK),
					       .RST_N(RST_N),
					       .enq_x(coreFix_aluExe_1_exeToFinQ$enq_x),
					       .specUpdate_correctSpeculation_mask(coreFix_aluExe_1_exeToFinQ$specUpdate_correctSpeculation_mask),
					       .specUpdate_incorrectSpeculation_kill_all(coreFix_aluExe_1_exeToFinQ$specUpdate_incorrectSpeculation_kill_all),
					       .specUpdate_incorrectSpeculation_kill_tag(coreFix_aluExe_1_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag),
					       .EN_enq(coreFix_aluExe_1_exeToFinQ$EN_enq),
					       .EN_deq(coreFix_aluExe_1_exeToFinQ$EN_deq),
					       .EN_specUpdate_incorrectSpeculation(coreFix_aluExe_1_exeToFinQ$EN_specUpdate_incorrectSpeculation),
					       .EN_specUpdate_correctSpeculation(coreFix_aluExe_1_exeToFinQ$EN_specUpdate_correctSpeculation),
					       .RDY_enq(coreFix_aluExe_1_exeToFinQ$RDY_enq),
					       .RDY_deq(coreFix_aluExe_1_exeToFinQ$RDY_deq),
					       .first(coreFix_aluExe_1_exeToFinQ$first),
					       .RDY_first(coreFix_aluExe_1_exeToFinQ$RDY_first),
					       .RDY_specUpdate_incorrectSpeculation(),
					       .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_aluExe_1_regToExeQ
  mkAluRegToExeFifo coreFix_aluExe_1_regToExeQ(.CLK(CLK),
					       .RST_N(RST_N),
					       .enq_x(coreFix_aluExe_1_regToExeQ$enq_x),
					       .specUpdate_correctSpeculation_mask(coreFix_aluExe_1_regToExeQ$specUpdate_correctSpeculation_mask),
					       .specUpdate_incorrectSpeculation_kill_all(coreFix_aluExe_1_regToExeQ$specUpdate_incorrectSpeculation_kill_all),
					       .specUpdate_incorrectSpeculation_kill_tag(coreFix_aluExe_1_regToExeQ$specUpdate_incorrectSpeculation_kill_tag),
					       .EN_enq(coreFix_aluExe_1_regToExeQ$EN_enq),
					       .EN_deq(coreFix_aluExe_1_regToExeQ$EN_deq),
					       .EN_specUpdate_incorrectSpeculation(coreFix_aluExe_1_regToExeQ$EN_specUpdate_incorrectSpeculation),
					       .EN_specUpdate_correctSpeculation(coreFix_aluExe_1_regToExeQ$EN_specUpdate_correctSpeculation),
					       .RDY_enq(coreFix_aluExe_1_regToExeQ$RDY_enq),
					       .RDY_deq(coreFix_aluExe_1_regToExeQ$RDY_deq),
					       .first(coreFix_aluExe_1_regToExeQ$first),
					       .RDY_first(coreFix_aluExe_1_regToExeQ$RDY_first),
					       .RDY_specUpdate_incorrectSpeculation(),
					       .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_aluExe_1_rsAlu
  mkReservationStationAlu coreFix_aluExe_1_rsAlu(.CLK(CLK),
						 .RST_N(RST_N),
						 .enq_x(coreFix_aluExe_1_rsAlu$enq_x),
						 .setRegReady_0_put(coreFix_aluExe_1_rsAlu$setRegReady_0_put),
						 .setRegReady_1_put(coreFix_aluExe_1_rsAlu$setRegReady_1_put),
						 .setRegReady_2_put(coreFix_aluExe_1_rsAlu$setRegReady_2_put),
						 .setRegReady_3_put(coreFix_aluExe_1_rsAlu$setRegReady_3_put),
						 .setRegReady_4_put(coreFix_aluExe_1_rsAlu$setRegReady_4_put),
						 .setRobEnqTime_t(coreFix_aluExe_1_rsAlu$setRobEnqTime_t),
						 .specUpdate_correctSpeculation_mask(coreFix_aluExe_1_rsAlu$specUpdate_correctSpeculation_mask),
						 .specUpdate_incorrectSpeculation_kill_all(coreFix_aluExe_1_rsAlu$specUpdate_incorrectSpeculation_kill_all),
						 .specUpdate_incorrectSpeculation_kill_tag(coreFix_aluExe_1_rsAlu$specUpdate_incorrectSpeculation_kill_tag),
						 .EN_enq(coreFix_aluExe_1_rsAlu$EN_enq),
						 .EN_setRobEnqTime(coreFix_aluExe_1_rsAlu$EN_setRobEnqTime),
						 .EN_doDispatch(coreFix_aluExe_1_rsAlu$EN_doDispatch),
						 .EN_setRegReady_0_put(coreFix_aluExe_1_rsAlu$EN_setRegReady_0_put),
						 .EN_setRegReady_1_put(coreFix_aluExe_1_rsAlu$EN_setRegReady_1_put),
						 .EN_setRegReady_2_put(coreFix_aluExe_1_rsAlu$EN_setRegReady_2_put),
						 .EN_setRegReady_3_put(coreFix_aluExe_1_rsAlu$EN_setRegReady_3_put),
						 .EN_setRegReady_4_put(coreFix_aluExe_1_rsAlu$EN_setRegReady_4_put),
						 .EN_specUpdate_incorrectSpeculation(coreFix_aluExe_1_rsAlu$EN_specUpdate_incorrectSpeculation),
						 .EN_specUpdate_correctSpeculation(coreFix_aluExe_1_rsAlu$EN_specUpdate_correctSpeculation),
						 .RDY_enq(coreFix_aluExe_1_rsAlu$RDY_enq),
						 .canEnq(coreFix_aluExe_1_rsAlu$canEnq),
						 .RDY_canEnq(),
						 .RDY_setRobEnqTime(),
						 .dispatchData(coreFix_aluExe_1_rsAlu$dispatchData),
						 .RDY_dispatchData(coreFix_aluExe_1_rsAlu$RDY_dispatchData),
						 .RDY_doDispatch(coreFix_aluExe_1_rsAlu$RDY_doDispatch),
						 .RDY_setRegReady_0_put(),
						 .RDY_setRegReady_1_put(),
						 .RDY_setRegReady_2_put(),
						 .RDY_setRegReady_3_put(),
						 .RDY_setRegReady_4_put(),
						 .approximateCount(coreFix_aluExe_1_rsAlu$approximateCount),
						 .RDY_approximateCount(),
						 .isFull_ehrPort0(),
						 .RDY_isFull_ehrPort0(),
						 .RDY_specUpdate_incorrectSpeculation(),
						 .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_fpuMulDivExe_0_dispToRegQ
  mkFpuMulDivDispToRegFifo coreFix_fpuMulDivExe_0_dispToRegQ(.CLK(CLK),
							     .RST_N(RST_N),
							     .enq_x(coreFix_fpuMulDivExe_0_dispToRegQ$enq_x),
							     .specUpdate_correctSpeculation_mask(coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_correctSpeculation_mask),
							     .specUpdate_incorrectSpeculation_kill_all(coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all),
							     .specUpdate_incorrectSpeculation_kill_tag(coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag),
							     .EN_enq(coreFix_fpuMulDivExe_0_dispToRegQ$EN_enq),
							     .EN_deq(coreFix_fpuMulDivExe_0_dispToRegQ$EN_deq),
							     .EN_specUpdate_incorrectSpeculation(coreFix_fpuMulDivExe_0_dispToRegQ$EN_specUpdate_incorrectSpeculation),
							     .EN_specUpdate_correctSpeculation(coreFix_fpuMulDivExe_0_dispToRegQ$EN_specUpdate_correctSpeculation),
							     .RDY_enq(coreFix_fpuMulDivExe_0_dispToRegQ$RDY_enq),
							     .RDY_deq(coreFix_fpuMulDivExe_0_dispToRegQ$RDY_deq),
							     .first(coreFix_fpuMulDivExe_0_dispToRegQ$first),
							     .RDY_first(coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first),
							     .RDY_specUpdate_incorrectSpeculation(),
							     .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_fpuMulDivExe_0_fpuExec_divQ
  mkMinimumExecQ coreFix_fpuMulDivExe_0_fpuExec_divQ(.CLK(CLK),
						     .RST_N(RST_N),
						     .enq_x(coreFix_fpuMulDivExe_0_fpuExec_divQ$enq_x),
						     .specUpdate_correctSpeculation_mask(coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_correctSpeculation_mask),
						     .specUpdate_incorrectSpeculation_kill_all(coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_incorrectSpeculation_kill_all),
						     .specUpdate_incorrectSpeculation_kill_tag(coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_incorrectSpeculation_kill_tag),
						     .EN_enq(coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_enq),
						     .EN_deq(coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_deq),
						     .EN_specUpdate_incorrectSpeculation(coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_specUpdate_incorrectSpeculation),
						     .EN_specUpdate_correctSpeculation(coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_specUpdate_correctSpeculation),
						     .RDY_enq(coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_enq),
						     .RDY_deq(coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_deq),
						     .first_data(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data),
						     .RDY_first_data(coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_first_data),
						     .first_poisoned(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_poisoned),
						     .RDY_first_poisoned(coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_first_poisoned),
						     .RDY_specUpdate_incorrectSpeculation(),
						     .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_fpuMulDivExe_0_fpuExec_double_div
  mkDoubleDiv coreFix_fpuMulDivExe_0_fpuExec_double_div(.CLK(CLK),
							.RST_N(RST_N),
							.request_put(coreFix_fpuMulDivExe_0_fpuExec_double_div$request_put),
							.EN_request_put(coreFix_fpuMulDivExe_0_fpuExec_double_div$EN_request_put),
							.EN_response_get(coreFix_fpuMulDivExe_0_fpuExec_double_div$EN_response_get),
							.RDY_request_put(coreFix_fpuMulDivExe_0_fpuExec_double_div$RDY_request_put),
							.response_get(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get),
							.RDY_response_get(coreFix_fpuMulDivExe_0_fpuExec_double_div$RDY_response_get));

  // submodule coreFix_fpuMulDivExe_0_fpuExec_double_fma
  mkDoubleFMA coreFix_fpuMulDivExe_0_fpuExec_double_fma(.CLK(CLK),
							.RST_N(RST_N),
							.request_put(coreFix_fpuMulDivExe_0_fpuExec_double_fma$request_put),
							.EN_request_put(coreFix_fpuMulDivExe_0_fpuExec_double_fma$EN_request_put),
							.EN_response_get(coreFix_fpuMulDivExe_0_fpuExec_double_fma$EN_response_get),
							.RDY_request_put(coreFix_fpuMulDivExe_0_fpuExec_double_fma$RDY_request_put),
							.response_get(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get),
							.RDY_response_get(coreFix_fpuMulDivExe_0_fpuExec_double_fma$RDY_response_get));

  // submodule coreFix_fpuMulDivExe_0_fpuExec_double_sqrt
  mkDoubleSqrt coreFix_fpuMulDivExe_0_fpuExec_double_sqrt(.CLK(CLK),
							  .RST_N(RST_N),
							  .request_put(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$request_put),
							  .EN_request_put(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$EN_request_put),
							  .EN_response_get(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$EN_response_get),
							  .RDY_request_put(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$RDY_request_put),
							  .response_get(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get),
							  .RDY_response_get(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$RDY_response_get));

  // submodule coreFix_fpuMulDivExe_0_fpuExec_fmaQ
  mkFmaExecQ coreFix_fpuMulDivExe_0_fpuExec_fmaQ(.CLK(CLK),
						 .RST_N(RST_N),
						 .enq_x(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$enq_x),
						 .specUpdate_correctSpeculation_mask(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_correctSpeculation_mask),
						 .specUpdate_incorrectSpeculation_kill_all(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_incorrectSpeculation_kill_all),
						 .specUpdate_incorrectSpeculation_kill_tag(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_incorrectSpeculation_kill_tag),
						 .EN_enq(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_enq),
						 .EN_deq(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_deq),
						 .EN_specUpdate_incorrectSpeculation(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_specUpdate_incorrectSpeculation),
						 .EN_specUpdate_correctSpeculation(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_specUpdate_correctSpeculation),
						 .RDY_enq(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_enq),
						 .RDY_deq(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_deq),
						 .first_data(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data),
						 .RDY_first_data(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_first_data),
						 .first_poisoned(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_poisoned),
						 .RDY_first_poisoned(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_first_poisoned),
						 .RDY_specUpdate_incorrectSpeculation(),
						 .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_fpuMulDivExe_0_fpuExec_simpleQ
  mkSimpleRespQ coreFix_fpuMulDivExe_0_fpuExec_simpleQ(.CLK(CLK),
						       .RST_N(RST_N),
						       .enq_x(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$enq_x),
						       .specUpdate_correctSpeculation_mask(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_correctSpeculation_mask),
						       .specUpdate_incorrectSpeculation_kill_all(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_incorrectSpeculation_kill_all),
						       .specUpdate_incorrectSpeculation_kill_tag(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_incorrectSpeculation_kill_tag),
						       .EN_enq(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_enq),
						       .EN_deq(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_deq),
						       .EN_specUpdate_incorrectSpeculation(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_specUpdate_incorrectSpeculation),
						       .EN_specUpdate_correctSpeculation(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_specUpdate_correctSpeculation),
						       .RDY_enq(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_enq),
						       .RDY_deq(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_deq),
						       .first(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first),
						       .RDY_first(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_first),
						       .RDY_specUpdate_incorrectSpeculation(),
						       .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_fpuMulDivExe_0_fpuExec_sqrtQ
  mkMinimumExecQ coreFix_fpuMulDivExe_0_fpuExec_sqrtQ(.CLK(CLK),
						      .RST_N(RST_N),
						      .enq_x(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$enq_x),
						      .specUpdate_correctSpeculation_mask(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_correctSpeculation_mask),
						      .specUpdate_incorrectSpeculation_kill_all(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_incorrectSpeculation_kill_all),
						      .specUpdate_incorrectSpeculation_kill_tag(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_incorrectSpeculation_kill_tag),
						      .EN_enq(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_enq),
						      .EN_deq(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_deq),
						      .EN_specUpdate_incorrectSpeculation(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_specUpdate_incorrectSpeculation),
						      .EN_specUpdate_correctSpeculation(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_specUpdate_correctSpeculation),
						      .RDY_enq(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_enq),
						      .RDY_deq(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_deq),
						      .first_data(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data),
						      .RDY_first_data(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_first_data),
						      .first_poisoned(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_poisoned),
						      .RDY_first_poisoned(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_first_poisoned),
						      .RDY_specUpdate_incorrectSpeculation(),
						      .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_divQ
  mkDivExecQ coreFix_fpuMulDivExe_0_mulDivExec_divQ(.CLK(CLK),
						    .RST_N(RST_N),
						    .enq_x(coreFix_fpuMulDivExe_0_mulDivExec_divQ$enq_x),
						    .specUpdate_correctSpeculation_mask(coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_correctSpeculation_mask),
						    .specUpdate_incorrectSpeculation_kill_all(coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_incorrectSpeculation_kill_all),
						    .specUpdate_incorrectSpeculation_kill_tag(coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_incorrectSpeculation_kill_tag),
						    .EN_enq(coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_enq),
						    .EN_deq(coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_deq),
						    .EN_specUpdate_incorrectSpeculation(coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_specUpdate_incorrectSpeculation),
						    .EN_specUpdate_correctSpeculation(coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_specUpdate_correctSpeculation),
						    .RDY_enq(coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_enq),
						    .RDY_deq(coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_deq),
						    .first_data(coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data),
						    .RDY_first_data(coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_first_data),
						    .first_poisoned(coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_poisoned),
						    .RDY_first_poisoned(coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_first_poisoned),
						    .RDY_specUpdate_incorrectSpeculation(),
						    .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ
  FIFO2 #(.width(32'd140),
	  .guarded(32'd1)) coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ(.RST(RST_N),
										      .CLK(CLK),
										      .D_IN(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$D_IN),
										      .ENQ(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$ENQ),
										      .DEQ(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$DEQ),
										      .CLR(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$CLR),
										      .D_OUT(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$D_OUT),
										      .FULL_N(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$FULL_N),
										      .EMPTY_N(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$EMPTY_N));

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ
  FIFO2 #(.width(32'd64),
	  .guarded(32'd1)) coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ(.RST(RST_N),
										     .CLK(CLK),
										     .D_IN(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$D_IN),
										     .ENQ(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$ENQ),
										     .DEQ(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$DEQ),
										     .CLR(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$CLR),
										     .D_OUT(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$D_OUT),
										     .FULL_N(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$FULL_N),
										     .EMPTY_N(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$EMPTY_N));

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ
  FIFO2 #(.width(32'd204),
	  .guarded(32'd1)) coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ(.RST(RST_N),
										  .CLK(CLK),
										  .D_IN(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_IN),
										  .ENQ(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$ENQ),
										  .DEQ(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$DEQ),
										  .CLR(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$CLR),
										  .D_OUT(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_OUT),
										  .FULL_N(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$FULL_N),
										  .EMPTY_N(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$EMPTY_N));

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_mulQ
  mkMulExecQ coreFix_fpuMulDivExe_0_mulDivExec_mulQ(.CLK(CLK),
						    .RST_N(RST_N),
						    .enq_x(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$enq_x),
						    .specUpdate_correctSpeculation_mask(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_correctSpeculation_mask),
						    .specUpdate_incorrectSpeculation_kill_all(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_incorrectSpeculation_kill_all),
						    .specUpdate_incorrectSpeculation_kill_tag(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_incorrectSpeculation_kill_tag),
						    .EN_enq(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_enq),
						    .EN_deq(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_deq),
						    .EN_specUpdate_incorrectSpeculation(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_specUpdate_incorrectSpeculation),
						    .EN_specUpdate_correctSpeculation(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_specUpdate_correctSpeculation),
						    .RDY_enq(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_enq),
						    .RDY_deq(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_deq),
						    .first_data(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data),
						    .RDY_first_data(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_first_data),
						    .first_poisoned(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_poisoned),
						    .RDY_first_poisoned(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_first_poisoned),
						    .RDY_specUpdate_incorrectSpeculation(),
						    .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ
  SizedFIFO #(.p1width(32'd128),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(32'd0)) coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ(.RST(RST_N),
									       .CLK(CLK),
									       .D_IN(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$D_IN),
									       .ENQ(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$ENQ),
									       .DEQ(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$DEQ),
									       .CLR(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$CLR),
									       .D_OUT(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$D_OUT),
									       .FULL_N(),
									       .EMPTY_N(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$EMPTY_N));

  // submodule coreFix_fpuMulDivExe_0_regToExeQ
  mkFpuMulDivRegToExeFifo coreFix_fpuMulDivExe_0_regToExeQ(.CLK(CLK),
							   .RST_N(RST_N),
							   .enq_x(coreFix_fpuMulDivExe_0_regToExeQ$enq_x),
							   .specUpdate_correctSpeculation_mask(coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_correctSpeculation_mask),
							   .specUpdate_incorrectSpeculation_kill_all(coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_all),
							   .specUpdate_incorrectSpeculation_kill_tag(coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag),
							   .EN_enq(coreFix_fpuMulDivExe_0_regToExeQ$EN_enq),
							   .EN_deq(coreFix_fpuMulDivExe_0_regToExeQ$EN_deq),
							   .EN_specUpdate_incorrectSpeculation(coreFix_fpuMulDivExe_0_regToExeQ$EN_specUpdate_incorrectSpeculation),
							   .EN_specUpdate_correctSpeculation(coreFix_fpuMulDivExe_0_regToExeQ$EN_specUpdate_correctSpeculation),
							   .RDY_enq(coreFix_fpuMulDivExe_0_regToExeQ$RDY_enq),
							   .RDY_deq(coreFix_fpuMulDivExe_0_regToExeQ$RDY_deq),
							   .first(coreFix_fpuMulDivExe_0_regToExeQ$first),
							   .RDY_first(coreFix_fpuMulDivExe_0_regToExeQ$RDY_first),
							   .RDY_specUpdate_incorrectSpeculation(),
							   .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_fpuMulDivExe_0_rsFpuMulDiv
  mkReservationStationFpuMulDiv coreFix_fpuMulDivExe_0_rsFpuMulDiv(.CLK(CLK),
								   .RST_N(RST_N),
								   .enq_x(coreFix_fpuMulDivExe_0_rsFpuMulDiv$enq_x),
								   .setRegReady_0_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_0_put),
								   .setRegReady_1_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_1_put),
								   .setRegReady_2_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_2_put),
								   .setRegReady_3_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_3_put),
								   .setRegReady_4_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put),
								   .setRobEnqTime_t(coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRobEnqTime_t),
								   .specUpdate_correctSpeculation_mask(coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_correctSpeculation_mask),
								   .specUpdate_incorrectSpeculation_kill_all(coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_incorrectSpeculation_kill_all),
								   .specUpdate_incorrectSpeculation_kill_tag(coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_incorrectSpeculation_kill_tag),
								   .EN_enq(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_enq),
								   .EN_setRobEnqTime(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRobEnqTime),
								   .EN_doDispatch(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_doDispatch),
								   .EN_setRegReady_0_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_0_put),
								   .EN_setRegReady_1_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_1_put),
								   .EN_setRegReady_2_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_2_put),
								   .EN_setRegReady_3_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_3_put),
								   .EN_setRegReady_4_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_4_put),
								   .EN_specUpdate_incorrectSpeculation(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_specUpdate_incorrectSpeculation),
								   .EN_specUpdate_correctSpeculation(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_specUpdate_correctSpeculation),
								   .RDY_enq(coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_enq),
								   .canEnq(coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq),
								   .RDY_canEnq(),
								   .RDY_setRobEnqTime(),
								   .dispatchData(coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData),
								   .RDY_dispatchData(coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_dispatchData),
								   .RDY_doDispatch(coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_doDispatch),
								   .RDY_setRegReady_0_put(),
								   .RDY_setRegReady_1_put(),
								   .RDY_setRegReady_2_put(),
								   .RDY_setRegReady_3_put(),
								   .RDY_setRegReady_4_put(),
								   .approximateCount(),
								   .RDY_approximateCount(),
								   .isFull_ehrPort0(),
								   .RDY_isFull_ehrPort0(),
								   .RDY_specUpdate_incorrectSpeculation(),
								   .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqMshr
  mkDCRqMshrWrapper coreFix_memExe_dMem_cache_m_banks_0_cRqMshr(.CLK(CLK),
								.RST_N(RST_N),
								.cRqTransfer_getEmptyEntryInit_r(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getEmptyEntryInit_r),
								.cRqTransfer_getRq_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getRq_n),
								.pipelineResp_getRq_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq_n),
								.pipelineResp_getSlot_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSlot_n),
								.pipelineResp_getState_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState_n),
								.pipelineResp_getSucc_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc_n),
								.pipelineResp_releaseEntry_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_n),
								.pipelineResp_searchEndOfChain_addr(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain_addr),
								.pipelineResp_setData_d(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setData_d),
								.pipelineResp_setData_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setData_n),
								.pipelineResp_setStateSlot_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_n),
								.pipelineResp_setStateSlot_slot(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_slot),
								.pipelineResp_setStateSlot_state(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_state),
								.pipelineResp_setSucc_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setSucc_n),
								.pipelineResp_setSucc_succ(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setSucc_succ),
								.sendRqToP_getRq_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getRq_n),
								.sendRqToP_getSlot_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getSlot_n),
								.sendRsToP_cRq_getData_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getData_n),
								.sendRsToP_cRq_getRq_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getRq_n),
								.sendRsToP_cRq_getSlot_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getSlot_n),
								.sendRsToP_cRq_getState_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getState_n),
								.sendRsToP_cRq_setWaitSt_setSlot_clearData_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_setWaitSt_setSlot_clearData_n),
								.sendRsToP_cRq_setWaitSt_setSlot_clearData_slot(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_setWaitSt_setSlot_clearData_slot),
								.EN_cRqTransfer_getEmptyEntryInit(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_cRqTransfer_getEmptyEntryInit),
								.EN_sendRsToP_cRq_setWaitSt_setSlot_clearData(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_sendRsToP_cRq_setWaitSt_setSlot_clearData),
								.EN_pipelineResp_releaseEntry(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_releaseEntry),
								.EN_pipelineResp_setData(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_setData),
								.EN_pipelineResp_setStateSlot(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_setStateSlot),
								.EN_pipelineResp_setSucc(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_setSucc),
								.EN_stuck_get(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_stuck_get),
								.cRqTransfer_getRq(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getRq),
								.RDY_cRqTransfer_getRq(),
								.cRqTransfer_getEmptyEntryInit(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getEmptyEntryInit),
								.RDY_cRqTransfer_getEmptyEntryInit(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$RDY_cRqTransfer_getEmptyEntryInit),
								.sendRsToP_cRq_getState(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getState),
								.RDY_sendRsToP_cRq_getState(),
								.sendRsToP_cRq_getRq(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getRq),
								.RDY_sendRsToP_cRq_getRq(),
								.sendRsToP_cRq_getSlot(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getSlot),
								.RDY_sendRsToP_cRq_getSlot(),
								.sendRsToP_cRq_getData(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getData),
								.RDY_sendRsToP_cRq_getData(),
								.RDY_sendRsToP_cRq_setWaitSt_setSlot_clearData(),
								.sendRqToP_getRq(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getRq),
								.RDY_sendRqToP_getRq(),
								.sendRqToP_getSlot(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getSlot),
								.RDY_sendRqToP_getSlot(),
								.RDY_pipelineResp_releaseEntry(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$RDY_pipelineResp_releaseEntry),
								.pipelineResp_getState(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState),
								.RDY_pipelineResp_getState(),
								.pipelineResp_getRq(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq),
								.RDY_pipelineResp_getRq(),
								.pipelineResp_getSlot(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSlot),
								.RDY_pipelineResp_getSlot(),
								.RDY_pipelineResp_setData(),
								.RDY_pipelineResp_setStateSlot(),
								.pipelineResp_getSucc(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc),
								.RDY_pipelineResp_getSucc(),
								.RDY_pipelineResp_setSucc(),
								.pipelineResp_searchEndOfChain(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain),
								.RDY_pipelineResp_searchEndOfChain(),
								.emptyForFlush(),
								.RDY_emptyForFlush(),
								.stuck_get(),
								.RDY_stuck_get());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_pRqMshr
  mkDPRqMshrWrapper coreFix_memExe_dMem_cache_m_banks_0_pRqMshr(.CLK(CLK),
								.RST_N(RST_N),
								.getEmptyEntryInit_r(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$getEmptyEntryInit_r),
								.pipelineResp_getRq_n(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq_n),
								.pipelineResp_getState_n(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getState_n),
								.pipelineResp_releaseEntry_n(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_releaseEntry_n),
								.pipelineResp_setDone_setData_d(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_setDone_setData_d),
								.pipelineResp_setDone_setData_n(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_setDone_setData_n),
								.sendRsToP_pRq_getData_n(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getData_n),
								.sendRsToP_pRq_getRq_n(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getRq_n),
								.sendRsToP_pRq_releaseEntry_n(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_releaseEntry_n),
								.EN_getEmptyEntryInit(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_getEmptyEntryInit),
								.EN_sendRsToP_pRq_releaseEntry(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_sendRsToP_pRq_releaseEntry),
								.EN_pipelineResp_releaseEntry(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_pipelineResp_releaseEntry),
								.EN_pipelineResp_setDone_setData(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_pipelineResp_setDone_setData),
								.EN_stuck_get(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_stuck_get),
								.getEmptyEntryInit(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$getEmptyEntryInit),
								.RDY_getEmptyEntryInit(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$RDY_getEmptyEntryInit),
								.sendRsToP_pRq_getRq(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getRq),
								.RDY_sendRsToP_pRq_getRq(),
								.sendRsToP_pRq_getData(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getData),
								.RDY_sendRsToP_pRq_getData(),
								.RDY_sendRsToP_pRq_releaseEntry(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$RDY_sendRsToP_pRq_releaseEntry),
								.pipelineResp_getRq(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq),
								.RDY_pipelineResp_getRq(),
								.pipelineResp_getState(),
								.RDY_pipelineResp_getState(),
								.RDY_pipelineResp_releaseEntry(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$RDY_pipelineResp_releaseEntry),
								.RDY_pipelineResp_setDone_setData(),
								.stuck_get(),
								.RDY_stuck_get());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_pipeline
  mkDPipeline coreFix_memExe_dMem_cache_m_banks_0_pipeline(.CLK(CLK),
							   .RST_N(RST_N),
							   .deqWrite_swapRq(coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_swapRq),
							   .deqWrite_updateRep(coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_updateRep),
							   .deqWrite_wrRam(coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_wrRam),
							   .send_r(coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_r),
							   .EN_send(coreFix_memExe_dMem_cache_m_banks_0_pipeline$EN_send),
							   .EN_deqWrite(coreFix_memExe_dMem_cache_m_banks_0_pipeline$EN_deqWrite),
							   .RDY_send(coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_send),
							   .first(coreFix_memExe_dMem_cache_m_banks_0_pipeline$first),
							   .RDY_first(coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first),
							   .RDY_deqWrite(coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ
  SizedFIFO #(.p1width(32'd3),
	      .p2depth(32'd8),
	      .p3cntr_width(32'd3),
	      .guarded(32'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ(.RST(RST_N),
									       .CLK(CLK),
									       .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_IN),
									       .ENQ(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$ENQ),
									       .DEQ(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$DEQ),
									       .CLR(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$CLR),
									       .D_OUT(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT),
									       .FULL_N(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$FULL_N),
									       .EMPTY_N(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$EMPTY_N));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp
  FIFO2 #(.width(32'd3),
	  .guarded(32'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp(.RST(RST_N),
											.CLK(CLK),
											.D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$D_IN),
											.ENQ(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$ENQ),
											.DEQ(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$DEQ),
											.CLR(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$CLR),
											.D_OUT(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$D_OUT),
											.FULL_N(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$FULL_N),
											.EMPTY_N(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$EMPTY_N));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP
  FIFO2 #(.width(32'd3),
	  .guarded(32'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP(.RST(RST_N),
										     .CLK(CLK),
										     .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$D_IN),
										     .ENQ(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$ENQ),
										     .DEQ(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$DEQ),
										     .CLR(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$CLR),
										     .D_OUT(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$D_OUT),
										     .FULL_N(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$FULL_N),
										     .EMPTY_N(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$EMPTY_N));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ
  SizedFIFO #(.p1width(32'd4),
	      .p2depth(32'd12),
	      .p3cntr_width(32'd4),
	      .guarded(32'd1)) coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ(.RST(RST_N),
									       .CLK(CLK),
									       .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_IN),
									       .ENQ(coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$ENQ),
									       .DEQ(coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$DEQ),
									       .CLR(coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$CLR),
									       .D_OUT(coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT),
									       .FULL_N(coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$FULL_N),
									       .EMPTY_N(coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$EMPTY_N));

  // submodule coreFix_memExe_dTlb
  mkDTlbSynth coreFix_memExe_dTlb(.CLK(CLK),
				  .RST_N(RST_N),
				  .perf_req_r(coreFix_memExe_dTlb$perf_req_r),
				  .perf_setStatus_doStats(coreFix_memExe_dTlb$perf_setStatus_doStats),
				  .procReq_req(coreFix_memExe_dTlb$procReq_req),
				  .specUpdate_correctSpeculation_mask(coreFix_memExe_dTlb$specUpdate_correctSpeculation_mask),
				  .specUpdate_incorrectSpeculation_kill_all(coreFix_memExe_dTlb$specUpdate_incorrectSpeculation_kill_all),
				  .specUpdate_incorrectSpeculation_kill_tag(coreFix_memExe_dTlb$specUpdate_incorrectSpeculation_kill_tag),
				  .toParent_ldTransRsFromP_enq_x(coreFix_memExe_dTlb$toParent_ldTransRsFromP_enq_x),
				  .updateVMInfo_vm(coreFix_memExe_dTlb$updateVMInfo_vm),
				  .EN_flush(coreFix_memExe_dTlb$EN_flush),
				  .EN_updateVMInfo(coreFix_memExe_dTlb$EN_updateVMInfo),
				  .EN_procReq(coreFix_memExe_dTlb$EN_procReq),
				  .EN_deqProcResp(coreFix_memExe_dTlb$EN_deqProcResp),
				  .EN_toParent_rqToP_deq(coreFix_memExe_dTlb$EN_toParent_rqToP_deq),
				  .EN_toParent_ldTransRsFromP_enq(coreFix_memExe_dTlb$EN_toParent_ldTransRsFromP_enq),
				  .EN_toParent_flush_request_get(coreFix_memExe_dTlb$EN_toParent_flush_request_get),
				  .EN_toParent_flush_response_put(coreFix_memExe_dTlb$EN_toParent_flush_response_put),
				  .EN_specUpdate_incorrectSpeculation(coreFix_memExe_dTlb$EN_specUpdate_incorrectSpeculation),
				  .EN_specUpdate_correctSpeculation(coreFix_memExe_dTlb$EN_specUpdate_correctSpeculation),
				  .EN_perf_setStatus(coreFix_memExe_dTlb$EN_perf_setStatus),
				  .EN_perf_req(coreFix_memExe_dTlb$EN_perf_req),
				  .EN_perf_resp(coreFix_memExe_dTlb$EN_perf_resp),
				  .flush_done(coreFix_memExe_dTlb$flush_done),
				  .RDY_flush_done(),
				  .RDY_flush(coreFix_memExe_dTlb$RDY_flush),
				  .RDY_updateVMInfo(),
				  .noPendingReq(coreFix_memExe_dTlb$noPendingReq),
				  .RDY_noPendingReq(),
				  .RDY_procReq(coreFix_memExe_dTlb$RDY_procReq),
				  .procResp(coreFix_memExe_dTlb$procResp),
				  .RDY_procResp(coreFix_memExe_dTlb$RDY_procResp),
				  .RDY_deqProcResp(coreFix_memExe_dTlb$RDY_deqProcResp),
				  .toParent_rqToP_notEmpty(),
				  .RDY_toParent_rqToP_notEmpty(),
				  .RDY_toParent_rqToP_deq(coreFix_memExe_dTlb$RDY_toParent_rqToP_deq),
				  .toParent_rqToP_first(coreFix_memExe_dTlb$toParent_rqToP_first),
				  .RDY_toParent_rqToP_first(coreFix_memExe_dTlb$RDY_toParent_rqToP_first),
				  .toParent_ldTransRsFromP_notFull(),
				  .RDY_toParent_ldTransRsFromP_notFull(),
				  .RDY_toParent_ldTransRsFromP_enq(coreFix_memExe_dTlb$RDY_toParent_ldTransRsFromP_enq),
				  .RDY_toParent_flush_request_get(coreFix_memExe_dTlb$RDY_toParent_flush_request_get),
				  .RDY_toParent_flush_response_put(coreFix_memExe_dTlb$RDY_toParent_flush_response_put),
				  .RDY_specUpdate_incorrectSpeculation(),
				  .RDY_specUpdate_correctSpeculation(),
				  .RDY_perf_setStatus(),
				  .RDY_perf_req(),
				  .perf_resp(),
				  .RDY_perf_resp(),
				  .perf_respValid(),
				  .RDY_perf_respValid());

  // submodule coreFix_memExe_dispToRegQ
  mkMemDispToRegFifo coreFix_memExe_dispToRegQ(.CLK(CLK),
					       .RST_N(RST_N),
					       .enq_x(coreFix_memExe_dispToRegQ$enq_x),
					       .specUpdate_correctSpeculation_mask(coreFix_memExe_dispToRegQ$specUpdate_correctSpeculation_mask),
					       .specUpdate_incorrectSpeculation_kill_all(coreFix_memExe_dispToRegQ$specUpdate_incorrectSpeculation_kill_all),
					       .specUpdate_incorrectSpeculation_kill_tag(coreFix_memExe_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag),
					       .EN_enq(coreFix_memExe_dispToRegQ$EN_enq),
					       .EN_deq(coreFix_memExe_dispToRegQ$EN_deq),
					       .EN_specUpdate_incorrectSpeculation(coreFix_memExe_dispToRegQ$EN_specUpdate_incorrectSpeculation),
					       .EN_specUpdate_correctSpeculation(coreFix_memExe_dispToRegQ$EN_specUpdate_correctSpeculation),
					       .RDY_enq(coreFix_memExe_dispToRegQ$RDY_enq),
					       .RDY_deq(coreFix_memExe_dispToRegQ$RDY_deq),
					       .first(coreFix_memExe_dispToRegQ$first),
					       .RDY_first(coreFix_memExe_dispToRegQ$RDY_first),
					       .RDY_specUpdate_incorrectSpeculation(),
					       .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_memExe_lsq
  mkSplitLSQ coreFix_memExe_lsq(.CLK(CLK),
				.RST_N(RST_N),
				.enqLd_dst(coreFix_memExe_lsq$enqLd_dst),
				.enqLd_inst_tag(coreFix_memExe_lsq$enqLd_inst_tag),
				.enqLd_mem_inst(coreFix_memExe_lsq$enqLd_mem_inst),
				.enqLd_spec_bits(coreFix_memExe_lsq$enqLd_spec_bits),
				.enqSt_dst(coreFix_memExe_lsq$enqSt_dst),
				.enqSt_inst_tag(coreFix_memExe_lsq$enqSt_inst_tag),
				.enqSt_mem_inst(coreFix_memExe_lsq$enqSt_mem_inst),
				.enqSt_spec_bits(coreFix_memExe_lsq$enqSt_spec_bits),
				.getHit_t(coreFix_memExe_lsq$getHit_t),
				.getOrigBE_t(coreFix_memExe_lsq$getOrigBE_t),
				.issueLd_lsqTag(coreFix_memExe_lsq$issueLd_lsqTag),
				.issueLd_paddr(coreFix_memExe_lsq$issueLd_paddr),
				.issueLd_sbRes(coreFix_memExe_lsq$issueLd_sbRes),
				.issueLd_shiftedBE(coreFix_memExe_lsq$issueLd_shiftedBE),
				.respLd_alignedData(coreFix_memExe_lsq$respLd_alignedData),
				.respLd_t(coreFix_memExe_lsq$respLd_t),
				.setAtCommit_0_put(coreFix_memExe_lsq$setAtCommit_0_put),
				.setAtCommit_1_put(coreFix_memExe_lsq$setAtCommit_1_put),
				.specUpdate_correctSpeculation_mask(coreFix_memExe_lsq$specUpdate_correctSpeculation_mask),
				.specUpdate_incorrectSpeculation_kill_all(coreFix_memExe_lsq$specUpdate_incorrectSpeculation_kill_all),
				.specUpdate_incorrectSpeculation_kill_tag(coreFix_memExe_lsq$specUpdate_incorrectSpeculation_kill_tag),
				.updateAddr_fault(coreFix_memExe_lsq$updateAddr_fault),
				.updateAddr_isMMIO(coreFix_memExe_lsq$updateAddr_isMMIO),
				.updateAddr_lsqTag(coreFix_memExe_lsq$updateAddr_lsqTag),
				.updateAddr_paddr(coreFix_memExe_lsq$updateAddr_paddr),
				.updateAddr_shiftedBE(coreFix_memExe_lsq$updateAddr_shiftedBE),
				.updateData_d(coreFix_memExe_lsq$updateData_d),
				.updateData_t(coreFix_memExe_lsq$updateData_t),
				.wakeupLdStalledBySB_sbIdx(coreFix_memExe_lsq$wakeupLdStalledBySB_sbIdx),
				.EN_enqLd(coreFix_memExe_lsq$EN_enqLd),
				.EN_enqSt(coreFix_memExe_lsq$EN_enqSt),
				.EN_getHit(coreFix_memExe_lsq$EN_getHit),
				.EN_updateData(coreFix_memExe_lsq$EN_updateData),
				.EN_updateAddr(coreFix_memExe_lsq$EN_updateAddr),
				.EN_issueLd(coreFix_memExe_lsq$EN_issueLd),
				.EN_getIssueLd(coreFix_memExe_lsq$EN_getIssueLd),
				.EN_respLd(coreFix_memExe_lsq$EN_respLd),
				.EN_deqLd(coreFix_memExe_lsq$EN_deqLd),
				.EN_deqSt(coreFix_memExe_lsq$EN_deqSt),
				.EN_wakeupLdStalledBySB(coreFix_memExe_lsq$EN_wakeupLdStalledBySB),
				.EN_setAtCommit_0_put(coreFix_memExe_lsq$EN_setAtCommit_0_put),
				.EN_setAtCommit_1_put(coreFix_memExe_lsq$EN_setAtCommit_1_put),
				.EN_specUpdate_incorrectSpeculation(coreFix_memExe_lsq$EN_specUpdate_incorrectSpeculation),
				.EN_specUpdate_correctSpeculation(coreFix_memExe_lsq$EN_specUpdate_correctSpeculation),
				.enqLdTag(coreFix_memExe_lsq$enqLdTag),
				.RDY_enqLdTag(),
				.enqStTag(coreFix_memExe_lsq$enqStTag),
				.RDY_enqStTag(),
				.RDY_enqLd(coreFix_memExe_lsq$RDY_enqLd),
				.RDY_enqSt(coreFix_memExe_lsq$RDY_enqSt),
				.getOrigBE(coreFix_memExe_lsq$getOrigBE),
				.RDY_getOrigBE(),
				.getHit(coreFix_memExe_lsq$getHit),
				.RDY_getHit(),
				.RDY_updateData(),
				.updateAddr(coreFix_memExe_lsq$updateAddr),
				.RDY_updateAddr(),
				.issueLd(coreFix_memExe_lsq$issueLd),
				.RDY_issueLd(),
				.getIssueLd(coreFix_memExe_lsq$getIssueLd),
				.RDY_getIssueLd(coreFix_memExe_lsq$RDY_getIssueLd),
				.respLd(coreFix_memExe_lsq$respLd),
				.RDY_respLd(),
				.firstLd(coreFix_memExe_lsq$firstLd),
				.RDY_firstLd(coreFix_memExe_lsq$RDY_firstLd),
				.RDY_deqLd(coreFix_memExe_lsq$RDY_deqLd),
				.firstSt(coreFix_memExe_lsq$firstSt),
				.RDY_firstSt(coreFix_memExe_lsq$RDY_firstSt),
				.RDY_deqSt(coreFix_memExe_lsq$RDY_deqSt),
				.RDY_wakeupLdStalledBySB(),
				.stqEmpty(coreFix_memExe_lsq$stqEmpty),
				.RDY_stqEmpty(),
				.RDY_setAtCommit_0_put(),
				.RDY_setAtCommit_1_put(),
				.RDY_specUpdate_incorrectSpeculation(),
				.RDY_specUpdate_correctSpeculation(),
				.stqFull_ehrPort0(),
				.RDY_stqFull_ehrPort0(),
				.ldqFull_ehrPort0(),
				.RDY_ldqFull_ehrPort0(),
				.noWrongPathLoads(),
				.RDY_noWrongPathLoads());

  // submodule coreFix_memExe_regToExeQ
  mkMemRegToExeFifo coreFix_memExe_regToExeQ(.CLK(CLK),
					     .RST_N(RST_N),
					     .enq_x(coreFix_memExe_regToExeQ$enq_x),
					     .specUpdate_correctSpeculation_mask(coreFix_memExe_regToExeQ$specUpdate_correctSpeculation_mask),
					     .specUpdate_incorrectSpeculation_kill_all(coreFix_memExe_regToExeQ$specUpdate_incorrectSpeculation_kill_all),
					     .specUpdate_incorrectSpeculation_kill_tag(coreFix_memExe_regToExeQ$specUpdate_incorrectSpeculation_kill_tag),
					     .EN_enq(coreFix_memExe_regToExeQ$EN_enq),
					     .EN_deq(coreFix_memExe_regToExeQ$EN_deq),
					     .EN_specUpdate_incorrectSpeculation(coreFix_memExe_regToExeQ$EN_specUpdate_incorrectSpeculation),
					     .EN_specUpdate_correctSpeculation(coreFix_memExe_regToExeQ$EN_specUpdate_correctSpeculation),
					     .RDY_enq(coreFix_memExe_regToExeQ$RDY_enq),
					     .RDY_deq(coreFix_memExe_regToExeQ$RDY_deq),
					     .first(coreFix_memExe_regToExeQ$first),
					     .RDY_first(coreFix_memExe_regToExeQ$RDY_first),
					     .RDY_specUpdate_incorrectSpeculation(),
					     .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_memExe_rsMem
  mkReservationStationMem coreFix_memExe_rsMem(.CLK(CLK),
					       .RST_N(RST_N),
					       .enq_x(coreFix_memExe_rsMem$enq_x),
					       .setRegReady_0_put(coreFix_memExe_rsMem$setRegReady_0_put),
					       .setRegReady_1_put(coreFix_memExe_rsMem$setRegReady_1_put),
					       .setRegReady_2_put(coreFix_memExe_rsMem$setRegReady_2_put),
					       .setRegReady_3_put(coreFix_memExe_rsMem$setRegReady_3_put),
					       .setRegReady_4_put(coreFix_memExe_rsMem$setRegReady_4_put),
					       .setRobEnqTime_t(coreFix_memExe_rsMem$setRobEnqTime_t),
					       .specUpdate_correctSpeculation_mask(coreFix_memExe_rsMem$specUpdate_correctSpeculation_mask),
					       .specUpdate_incorrectSpeculation_kill_all(coreFix_memExe_rsMem$specUpdate_incorrectSpeculation_kill_all),
					       .specUpdate_incorrectSpeculation_kill_tag(coreFix_memExe_rsMem$specUpdate_incorrectSpeculation_kill_tag),
					       .EN_enq(coreFix_memExe_rsMem$EN_enq),
					       .EN_setRobEnqTime(coreFix_memExe_rsMem$EN_setRobEnqTime),
					       .EN_doDispatch(coreFix_memExe_rsMem$EN_doDispatch),
					       .EN_setRegReady_0_put(coreFix_memExe_rsMem$EN_setRegReady_0_put),
					       .EN_setRegReady_1_put(coreFix_memExe_rsMem$EN_setRegReady_1_put),
					       .EN_setRegReady_2_put(coreFix_memExe_rsMem$EN_setRegReady_2_put),
					       .EN_setRegReady_3_put(coreFix_memExe_rsMem$EN_setRegReady_3_put),
					       .EN_setRegReady_4_put(coreFix_memExe_rsMem$EN_setRegReady_4_put),
					       .EN_specUpdate_incorrectSpeculation(coreFix_memExe_rsMem$EN_specUpdate_incorrectSpeculation),
					       .EN_specUpdate_correctSpeculation(coreFix_memExe_rsMem$EN_specUpdate_correctSpeculation),
					       .RDY_enq(coreFix_memExe_rsMem$RDY_enq),
					       .canEnq(coreFix_memExe_rsMem$canEnq),
					       .RDY_canEnq(),
					       .RDY_setRobEnqTime(),
					       .dispatchData(coreFix_memExe_rsMem$dispatchData),
					       .RDY_dispatchData(coreFix_memExe_rsMem$RDY_dispatchData),
					       .RDY_doDispatch(coreFix_memExe_rsMem$RDY_doDispatch),
					       .RDY_setRegReady_0_put(),
					       .RDY_setRegReady_1_put(),
					       .RDY_setRegReady_2_put(),
					       .RDY_setRegReady_3_put(),
					       .RDY_setRegReady_4_put(),
					       .approximateCount(),
					       .RDY_approximateCount(),
					       .isFull_ehrPort0(),
					       .RDY_isFull_ehrPort0(),
					       .RDY_specUpdate_incorrectSpeculation(),
					       .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_memExe_stb
  mkStoreBufferEhr coreFix_memExe_stb(.CLK(CLK),
				      .RST_N(RST_N),
				      .deq_idx(coreFix_memExe_stb$deq_idx),
				      .enq_be(coreFix_memExe_stb$enq_be),
				      .enq_data(coreFix_memExe_stb$enq_data),
				      .enq_idx(coreFix_memExe_stb$enq_idx),
				      .enq_paddr(coreFix_memExe_stb$enq_paddr),
				      .getEnqIndex_paddr(coreFix_memExe_stb$getEnqIndex_paddr),
				      .noMatchLdQ_be(coreFix_memExe_stb$noMatchLdQ_be),
				      .noMatchLdQ_paddr(coreFix_memExe_stb$noMatchLdQ_paddr),
				      .noMatchStQ_be(coreFix_memExe_stb$noMatchStQ_be),
				      .noMatchStQ_paddr(coreFix_memExe_stb$noMatchStQ_paddr),
				      .search_be(coreFix_memExe_stb$search_be),
				      .search_paddr(coreFix_memExe_stb$search_paddr),
				      .EN_enq(coreFix_memExe_stb$EN_enq),
				      .EN_deq(coreFix_memExe_stb$EN_deq),
				      .EN_issue(coreFix_memExe_stb$EN_issue),
				      .isEmpty(coreFix_memExe_stb$isEmpty),
				      .RDY_isEmpty(),
				      .getEnqIndex(coreFix_memExe_stb$getEnqIndex),
				      .RDY_getEnqIndex(),
				      .RDY_enq(coreFix_memExe_stb$RDY_enq),
				      .deq(coreFix_memExe_stb$deq),
				      .RDY_deq(coreFix_memExe_stb$RDY_deq),
				      .issue(coreFix_memExe_stb$issue),
				      .RDY_issue(coreFix_memExe_stb$RDY_issue),
				      .search(coreFix_memExe_stb$search),
				      .RDY_search(),
				      .noMatchLdQ(coreFix_memExe_stb$noMatchLdQ),
				      .RDY_noMatchLdQ(),
				      .noMatchStQ(coreFix_memExe_stb$noMatchStQ),
				      .RDY_noMatchStQ());

  // submodule coreFix_trainBPQ_0
  FIFO2 #(.width(32'd160), .guarded(32'd1)) coreFix_trainBPQ_0(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(coreFix_trainBPQ_0$D_IN),
							       .ENQ(coreFix_trainBPQ_0$ENQ),
							       .DEQ(coreFix_trainBPQ_0$DEQ),
							       .CLR(coreFix_trainBPQ_0$CLR),
							       .D_OUT(coreFix_trainBPQ_0$D_OUT),
							       .FULL_N(coreFix_trainBPQ_0$FULL_N),
							       .EMPTY_N(coreFix_trainBPQ_0$EMPTY_N));

  // submodule coreFix_trainBPQ_1
  FIFO2 #(.width(32'd160), .guarded(32'd1)) coreFix_trainBPQ_1(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(coreFix_trainBPQ_1$D_IN),
							       .ENQ(coreFix_trainBPQ_1$ENQ),
							       .DEQ(coreFix_trainBPQ_1$DEQ),
							       .CLR(coreFix_trainBPQ_1$CLR),
							       .D_OUT(coreFix_trainBPQ_1$D_OUT),
							       .FULL_N(coreFix_trainBPQ_1$FULL_N),
							       .EMPTY_N(coreFix_trainBPQ_1$EMPTY_N));

  // submodule csrf_stats_module_writeQ
  FIFO1 #(.width(32'd1),
	  .guarded(32'd1)) csrf_stats_module_writeQ(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(csrf_stats_module_writeQ$D_IN),
						    .ENQ(csrf_stats_module_writeQ$ENQ),
						    .DEQ(csrf_stats_module_writeQ$DEQ),
						    .CLR(csrf_stats_module_writeQ$CLR),
						    .D_OUT(csrf_stats_module_writeQ$D_OUT),
						    .FULL_N(csrf_stats_module_writeQ$FULL_N),
						    .EMPTY_N(csrf_stats_module_writeQ$EMPTY_N));

  // submodule csrf_terminate_module_terminateQ
  FIFO10 #(.guarded(32'd1)) csrf_terminate_module_terminateQ(.RST(RST_N),
							     .CLK(CLK),
							     .ENQ(csrf_terminate_module_terminateQ$ENQ),
							     .DEQ(csrf_terminate_module_terminateQ$DEQ),
							     .CLR(csrf_terminate_module_terminateQ$CLR),
							     .FULL_N(csrf_terminate_module_terminateQ$FULL_N),
							     .EMPTY_N(csrf_terminate_module_terminateQ$EMPTY_N));

  // submodule epochManager
  mkEpochManager epochManager(.CLK(CLK),
			      .RST_N(RST_N),
			      .checkEpoch_0_check_e(epochManager$checkEpoch_0_check_e),
			      .checkEpoch_1_check_e(epochManager$checkEpoch_1_check_e),
			      .updatePrevEpoch_0_update_e(epochManager$updatePrevEpoch_0_update_e),
			      .updatePrevEpoch_1_update_e(epochManager$updatePrevEpoch_1_update_e),
			      .EN_updatePrevEpoch_0_update(epochManager$EN_updatePrevEpoch_0_update),
			      .EN_updatePrevEpoch_1_update(epochManager$EN_updatePrevEpoch_1_update),
			      .EN_incrementEpoch(epochManager$EN_incrementEpoch),
			      .checkEpoch_0_check(epochManager$checkEpoch_0_check),
			      .RDY_checkEpoch_0_check(),
			      .checkEpoch_1_check(epochManager$checkEpoch_1_check),
			      .RDY_checkEpoch_1_check(),
			      .RDY_updatePrevEpoch_0_update(),
			      .RDY_updatePrevEpoch_1_update(),
			      .getEpoch(),
			      .RDY_getEpoch(),
			      .RDY_incrementEpoch(epochManager$RDY_incrementEpoch),
			      .getEpochState(),
			      .RDY_getEpochState(),
			      .isFull_ehrPort0(),
			      .RDY_isFull_ehrPort0());

  // submodule fetchStage
  mkFetchStage fetchStage(.CLK(CLK),
			  .RST_N(RST_N),
			  .iMemIfc_perf_req_r(fetchStage$iMemIfc_perf_req_r),
			  .iMemIfc_perf_setStatus_doStats(fetchStage$iMemIfc_perf_setStatus_doStats),
			  .iMemIfc_to_parent_fromP_enq_x(fetchStage$iMemIfc_to_parent_fromP_enq_x),
			  .iMemIfc_to_proc_request_put(fetchStage$iMemIfc_to_proc_request_put),
			  .iTlbIfc_perf_req_r(fetchStage$iTlbIfc_perf_req_r),
			  .iTlbIfc_perf_setStatus_doStats(fetchStage$iTlbIfc_perf_setStatus_doStats),
			  .iTlbIfc_toParent_rsFromP_enq_x(fetchStage$iTlbIfc_toParent_rsFromP_enq_x),
			  .iTlbIfc_to_proc_request_put(fetchStage$iTlbIfc_to_proc_request_put),
			  .iTlbIfc_updateVMInfo_vm(fetchStage$iTlbIfc_updateVMInfo_vm),
			  .mmioIfc_instResp_enq_x(fetchStage$mmioIfc_instResp_enq_x),
			  .mmioIfc_setHtifAddrs_fromHost(fetchStage$mmioIfc_setHtifAddrs_fromHost),
			  .mmioIfc_setHtifAddrs_toHost(fetchStage$mmioIfc_setHtifAddrs_toHost),
			  .perf_req_r(fetchStage$perf_req_r),
			  .perf_setStatus_doStats(fetchStage$perf_setStatus_doStats),
			  .redirect_pc(fetchStage$redirect_pc),
			  .start_pc(fetchStage$start_pc),
			  .train_predictors_dpTrain(fetchStage$train_predictors_dpTrain),
			  .train_predictors_iType(fetchStage$train_predictors_iType),
			  .train_predictors_isCompressed(fetchStage$train_predictors_isCompressed),
			  .train_predictors_mispred(fetchStage$train_predictors_mispred),
			  .train_predictors_next_pc(fetchStage$train_predictors_next_pc),
			  .train_predictors_pc(fetchStage$train_predictors_pc),
			  .train_predictors_taken(fetchStage$train_predictors_taken),
			  .EN_pipelines_0_deq(fetchStage$EN_pipelines_0_deq),
			  .EN_pipelines_1_deq(fetchStage$EN_pipelines_1_deq),
			  .EN_iTlbIfc_flush(fetchStage$EN_iTlbIfc_flush),
			  .EN_iTlbIfc_updateVMInfo(fetchStage$EN_iTlbIfc_updateVMInfo),
			  .EN_iTlbIfc_to_proc_request_put(fetchStage$EN_iTlbIfc_to_proc_request_put),
			  .EN_iTlbIfc_to_proc_response_get(fetchStage$EN_iTlbIfc_to_proc_response_get),
			  .EN_iTlbIfc_toParent_rqToP_deq(fetchStage$EN_iTlbIfc_toParent_rqToP_deq),
			  .EN_iTlbIfc_toParent_rsFromP_enq(fetchStage$EN_iTlbIfc_toParent_rsFromP_enq),
			  .EN_iTlbIfc_toParent_flush_request_get(fetchStage$EN_iTlbIfc_toParent_flush_request_get),
			  .EN_iTlbIfc_toParent_flush_response_put(fetchStage$EN_iTlbIfc_toParent_flush_response_put),
			  .EN_iTlbIfc_perf_setStatus(fetchStage$EN_iTlbIfc_perf_setStatus),
			  .EN_iTlbIfc_perf_req(fetchStage$EN_iTlbIfc_perf_req),
			  .EN_iTlbIfc_perf_resp(fetchStage$EN_iTlbIfc_perf_resp),
			  .EN_iMemIfc_to_proc_request_put(fetchStage$EN_iMemIfc_to_proc_request_put),
			  .EN_iMemIfc_to_proc_response_get(fetchStage$EN_iMemIfc_to_proc_response_get),
			  .EN_iMemIfc_flush(fetchStage$EN_iMemIfc_flush),
			  .EN_iMemIfc_perf_setStatus(fetchStage$EN_iMemIfc_perf_setStatus),
			  .EN_iMemIfc_perf_req(fetchStage$EN_iMemIfc_perf_req),
			  .EN_iMemIfc_perf_resp(fetchStage$EN_iMemIfc_perf_resp),
			  .EN_iMemIfc_to_parent_rsToP_deq(fetchStage$EN_iMemIfc_to_parent_rsToP_deq),
			  .EN_iMemIfc_to_parent_rqToP_deq(fetchStage$EN_iMemIfc_to_parent_rqToP_deq),
			  .EN_iMemIfc_to_parent_fromP_enq(fetchStage$EN_iMemIfc_to_parent_fromP_enq),
			  .EN_iMemIfc_cRqStuck_get(fetchStage$EN_iMemIfc_cRqStuck_get),
			  .EN_iMemIfc_pRqStuck_get(fetchStage$EN_iMemIfc_pRqStuck_get),
			  .EN_mmioIfc_instReq_deq(fetchStage$EN_mmioIfc_instReq_deq),
			  .EN_mmioIfc_instResp_enq(fetchStage$EN_mmioIfc_instResp_enq),
			  .EN_mmioIfc_setHtifAddrs(fetchStage$EN_mmioIfc_setHtifAddrs),
			  .EN_start(fetchStage$EN_start),
			  .EN_stop(fetchStage$EN_stop),
			  .EN_setWaitRedirect(fetchStage$EN_setWaitRedirect),
			  .EN_redirect(fetchStage$EN_redirect),
			  .EN_done_flushing(fetchStage$EN_done_flushing),
			  .EN_train_predictors(fetchStage$EN_train_predictors),
			  .EN_flush_predictors(fetchStage$EN_flush_predictors),
			  .EN_perf_setStatus(fetchStage$EN_perf_setStatus),
			  .EN_perf_req(fetchStage$EN_perf_req),
			  .EN_perf_resp(fetchStage$EN_perf_resp),
			  .pipelines_0_canDeq(fetchStage$pipelines_0_canDeq),
			  .RDY_pipelines_0_canDeq(),
			  .RDY_pipelines_0_deq(fetchStage$RDY_pipelines_0_deq),
			  .pipelines_0_first(fetchStage$pipelines_0_first),
			  .RDY_pipelines_0_first(fetchStage$RDY_pipelines_0_first),
			  .pipelines_1_canDeq(fetchStage$pipelines_1_canDeq),
			  .RDY_pipelines_1_canDeq(),
			  .RDY_pipelines_1_deq(fetchStage$RDY_pipelines_1_deq),
			  .pipelines_1_first(fetchStage$pipelines_1_first),
			  .RDY_pipelines_1_first(fetchStage$RDY_pipelines_1_first),
			  .iTlbIfc_flush_done(fetchStage$iTlbIfc_flush_done),
			  .RDY_iTlbIfc_flush_done(),
			  .RDY_iTlbIfc_flush(fetchStage$RDY_iTlbIfc_flush),
			  .RDY_iTlbIfc_updateVMInfo(),
			  .iTlbIfc_noPendingReq(fetchStage$iTlbIfc_noPendingReq),
			  .RDY_iTlbIfc_noPendingReq(),
			  .RDY_iTlbIfc_to_proc_request_put(),
			  .iTlbIfc_to_proc_response_get(),
			  .RDY_iTlbIfc_to_proc_response_get(),
			  .iTlbIfc_toParent_rqToP_notEmpty(),
			  .RDY_iTlbIfc_toParent_rqToP_notEmpty(),
			  .RDY_iTlbIfc_toParent_rqToP_deq(fetchStage$RDY_iTlbIfc_toParent_rqToP_deq),
			  .iTlbIfc_toParent_rqToP_first(fetchStage$iTlbIfc_toParent_rqToP_first),
			  .RDY_iTlbIfc_toParent_rqToP_first(fetchStage$RDY_iTlbIfc_toParent_rqToP_first),
			  .iTlbIfc_toParent_rsFromP_notFull(),
			  .RDY_iTlbIfc_toParent_rsFromP_notFull(),
			  .RDY_iTlbIfc_toParent_rsFromP_enq(fetchStage$RDY_iTlbIfc_toParent_rsFromP_enq),
			  .RDY_iTlbIfc_toParent_flush_request_get(fetchStage$RDY_iTlbIfc_toParent_flush_request_get),
			  .RDY_iTlbIfc_toParent_flush_response_put(fetchStage$RDY_iTlbIfc_toParent_flush_response_put),
			  .RDY_iTlbIfc_perf_setStatus(),
			  .RDY_iTlbIfc_perf_req(),
			  .iTlbIfc_perf_resp(),
			  .RDY_iTlbIfc_perf_resp(),
			  .iTlbIfc_perf_respValid(),
			  .RDY_iTlbIfc_perf_respValid(),
			  .RDY_iMemIfc_to_proc_request_put(),
			  .iMemIfc_to_proc_response_get(),
			  .RDY_iMemIfc_to_proc_response_get(),
			  .RDY_iMemIfc_flush(),
			  .iMemIfc_flush_done(),
			  .RDY_iMemIfc_flush_done(),
			  .RDY_iMemIfc_perf_setStatus(),
			  .RDY_iMemIfc_perf_req(),
			  .iMemIfc_perf_resp(),
			  .RDY_iMemIfc_perf_resp(),
			  .iMemIfc_perf_respValid(),
			  .RDY_iMemIfc_perf_respValid(),
			  .iMemIfc_to_parent_rsToP_notEmpty(fetchStage$iMemIfc_to_parent_rsToP_notEmpty),
			  .RDY_iMemIfc_to_parent_rsToP_notEmpty(),
			  .RDY_iMemIfc_to_parent_rsToP_deq(fetchStage$RDY_iMemIfc_to_parent_rsToP_deq),
			  .iMemIfc_to_parent_rsToP_first(fetchStage$iMemIfc_to_parent_rsToP_first),
			  .RDY_iMemIfc_to_parent_rsToP_first(fetchStage$RDY_iMemIfc_to_parent_rsToP_first),
			  .iMemIfc_to_parent_rqToP_notEmpty(fetchStage$iMemIfc_to_parent_rqToP_notEmpty),
			  .RDY_iMemIfc_to_parent_rqToP_notEmpty(),
			  .RDY_iMemIfc_to_parent_rqToP_deq(fetchStage$RDY_iMemIfc_to_parent_rqToP_deq),
			  .iMemIfc_to_parent_rqToP_first(fetchStage$iMemIfc_to_parent_rqToP_first),
			  .RDY_iMemIfc_to_parent_rqToP_first(fetchStage$RDY_iMemIfc_to_parent_rqToP_first),
			  .iMemIfc_to_parent_fromP_notFull(fetchStage$iMemIfc_to_parent_fromP_notFull),
			  .RDY_iMemIfc_to_parent_fromP_notFull(),
			  .RDY_iMemIfc_to_parent_fromP_enq(fetchStage$RDY_iMemIfc_to_parent_fromP_enq),
			  .iMemIfc_cRqStuck_get(fetchStage$iMemIfc_cRqStuck_get),
			  .RDY_iMemIfc_cRqStuck_get(fetchStage$RDY_iMemIfc_cRqStuck_get),
			  .iMemIfc_pRqStuck_get(fetchStage$iMemIfc_pRqStuck_get),
			  .RDY_iMemIfc_pRqStuck_get(fetchStage$RDY_iMemIfc_pRqStuck_get),
			  .mmioIfc_instReq_notEmpty(),
			  .RDY_mmioIfc_instReq_notEmpty(),
			  .RDY_mmioIfc_instReq_deq(fetchStage$RDY_mmioIfc_instReq_deq),
			  .mmioIfc_instReq_first_fst(fetchStage$mmioIfc_instReq_first_fst),
			  .RDY_mmioIfc_instReq_first_fst(fetchStage$RDY_mmioIfc_instReq_first_fst),
			  .mmioIfc_instReq_first_snd(fetchStage$mmioIfc_instReq_first_snd),
			  .RDY_mmioIfc_instReq_first_snd(fetchStage$RDY_mmioIfc_instReq_first_snd),
			  .mmioIfc_instResp_notFull(),
			  .RDY_mmioIfc_instResp_notFull(),
			  .RDY_mmioIfc_instResp_enq(fetchStage$RDY_mmioIfc_instResp_enq),
			  .RDY_mmioIfc_setHtifAddrs(),
			  .RDY_start(),
			  .RDY_stop(),
			  .RDY_setWaitRedirect(),
			  .RDY_redirect(),
			  .RDY_done_flushing(fetchStage$RDY_done_flushing),
			  .RDY_train_predictors(),
			  .emptyForFlush(),
			  .RDY_emptyForFlush(),
			  .RDY_flush_predictors(),
			  .flush_predictors_done(),
			  .RDY_flush_predictors_done(),
			  .getFetchState(),
			  .RDY_getFetchState(),
			  .RDY_perf_setStatus(),
			  .RDY_perf_req(),
			  .perf_resp(),
			  .RDY_perf_resp(),
			  .perf_respValid(),
			  .RDY_perf_respValid());

  // submodule l2Tlb
  mkL2Tlb l2Tlb(.CLK(CLK),
		.RST_N(RST_N),
		.perf_req_r(l2Tlb$perf_req_r),
		.perf_setStatus_doStats(l2Tlb$perf_setStatus_doStats),
		.toChildren_rqFromC_put(l2Tlb$toChildren_rqFromC_put),
		.toMem_respLd_enq_x(l2Tlb$toMem_respLd_enq_x),
		.updateVMInfo_vmD(l2Tlb$updateVMInfo_vmD),
		.updateVMInfo_vmI(l2Tlb$updateVMInfo_vmI),
		.EN_updateVMInfo(l2Tlb$EN_updateVMInfo),
		.EN_toChildren_rqFromC_put(l2Tlb$EN_toChildren_rqFromC_put),
		.EN_toChildren_rsToC_deq(l2Tlb$EN_toChildren_rsToC_deq),
		.EN_toChildren_iTlbReqFlush_put(l2Tlb$EN_toChildren_iTlbReqFlush_put),
		.EN_toChildren_dTlbReqFlush_put(l2Tlb$EN_toChildren_dTlbReqFlush_put),
		.EN_toChildren_flushDone_get(l2Tlb$EN_toChildren_flushDone_get),
		.EN_toMem_memReq_deq(l2Tlb$EN_toMem_memReq_deq),
		.EN_toMem_respLd_enq(l2Tlb$EN_toMem_respLd_enq),
		.EN_perf_setStatus(l2Tlb$EN_perf_setStatus),
		.EN_perf_req(l2Tlb$EN_perf_req),
		.EN_perf_resp(l2Tlb$EN_perf_resp),
		.RDY_updateVMInfo(),
		.RDY_toChildren_rqFromC_put(l2Tlb$RDY_toChildren_rqFromC_put),
		.toChildren_rsToC_notEmpty(),
		.RDY_toChildren_rsToC_notEmpty(),
		.RDY_toChildren_rsToC_deq(l2Tlb$RDY_toChildren_rsToC_deq),
		.toChildren_rsToC_first(l2Tlb$toChildren_rsToC_first),
		.RDY_toChildren_rsToC_first(l2Tlb$RDY_toChildren_rsToC_first),
		.RDY_toChildren_iTlbReqFlush_put(l2Tlb$RDY_toChildren_iTlbReqFlush_put),
		.RDY_toChildren_dTlbReqFlush_put(l2Tlb$RDY_toChildren_dTlbReqFlush_put),
		.RDY_toChildren_flushDone_get(l2Tlb$RDY_toChildren_flushDone_get),
		.toMem_memReq_notEmpty(l2Tlb$toMem_memReq_notEmpty),
		.RDY_toMem_memReq_notEmpty(),
		.RDY_toMem_memReq_deq(l2Tlb$RDY_toMem_memReq_deq),
		.toMem_memReq_first(l2Tlb$toMem_memReq_first),
		.RDY_toMem_memReq_first(l2Tlb$RDY_toMem_memReq_first),
		.toMem_respLd_notFull(l2Tlb$toMem_respLd_notFull),
		.RDY_toMem_respLd_notFull(),
		.RDY_toMem_respLd_enq(l2Tlb$RDY_toMem_respLd_enq),
		.RDY_perf_setStatus(),
		.RDY_perf_req(),
		.perf_resp(),
		.RDY_perf_resp(),
		.perf_respValid(),
		.RDY_perf_respValid());

  // submodule perfReqQ
  FIFO1 #(.width(32'd9), .guarded(32'd1)) perfReqQ(.RST(RST_N),
						   .CLK(CLK),
						   .D_IN(perfReqQ$D_IN),
						   .ENQ(perfReqQ$ENQ),
						   .DEQ(perfReqQ$DEQ),
						   .CLR(perfReqQ$CLR),
						   .D_OUT(perfReqQ$D_OUT),
						   .FULL_N(perfReqQ$FULL_N),
						   .EMPTY_N(perfReqQ$EMPTY_N));

  // submodule regRenamingTable
  mkRegRenamingTable regRenamingTable(.CLK(CLK),
				      .RST_N(RST_N),
				      .rename_0_claimRename_r(regRenamingTable$rename_0_claimRename_r),
				      .rename_0_claimRename_sb(regRenamingTable$rename_0_claimRename_sb),
				      .rename_0_getRename_r(regRenamingTable$rename_0_getRename_r),
				      .rename_1_claimRename_r(regRenamingTable$rename_1_claimRename_r),
				      .rename_1_claimRename_sb(regRenamingTable$rename_1_claimRename_sb),
				      .rename_1_getRename_r(regRenamingTable$rename_1_getRename_r),
				      .specUpdate_correctSpeculation_mask(regRenamingTable$specUpdate_correctSpeculation_mask),
				      .specUpdate_incorrectSpeculation_kill_all(regRenamingTable$specUpdate_incorrectSpeculation_kill_all),
				      .specUpdate_incorrectSpeculation_kill_tag(regRenamingTable$specUpdate_incorrectSpeculation_kill_tag),
				      .EN_rename_0_claimRename(regRenamingTable$EN_rename_0_claimRename),
				      .EN_rename_1_claimRename(regRenamingTable$EN_rename_1_claimRename),
				      .EN_commit_0_commit(regRenamingTable$EN_commit_0_commit),
				      .EN_commit_1_commit(regRenamingTable$EN_commit_1_commit),
				      .EN_specUpdate_incorrectSpeculation(regRenamingTable$EN_specUpdate_incorrectSpeculation),
				      .EN_specUpdate_correctSpeculation(regRenamingTable$EN_specUpdate_correctSpeculation),
				      .rename_0_getRename(regRenamingTable$rename_0_getRename),
				      .RDY_rename_0_getRename(regRenamingTable$RDY_rename_0_getRename),
				      .RDY_rename_0_claimRename(regRenamingTable$RDY_rename_0_claimRename),
				      .rename_0_canRename(regRenamingTable$rename_0_canRename),
				      .RDY_rename_0_canRename(),
				      .rename_1_getRename(regRenamingTable$rename_1_getRename),
				      .RDY_rename_1_getRename(regRenamingTable$RDY_rename_1_getRename),
				      .RDY_rename_1_claimRename(regRenamingTable$RDY_rename_1_claimRename),
				      .rename_1_canRename(regRenamingTable$rename_1_canRename),
				      .RDY_rename_1_canRename(),
				      .RDY_commit_0_commit(regRenamingTable$RDY_commit_0_commit),
				      .commit_0_canCommit(),
				      .RDY_commit_0_canCommit(),
				      .RDY_commit_1_commit(regRenamingTable$RDY_commit_1_commit),
				      .commit_1_canCommit(),
				      .RDY_commit_1_canCommit(),
				      .RDY_specUpdate_incorrectSpeculation(),
				      .RDY_specUpdate_correctSpeculation());

  // submodule rf
  mkRFileSynth rf(.CLK(CLK),
		  .RST_N(RST_N),
		  .read_0_rd1_rindx(rf$read_0_rd1_rindx),
		  .read_0_rd2_rindx(rf$read_0_rd2_rindx),
		  .read_0_rd3_rindx(rf$read_0_rd3_rindx),
		  .read_1_rd1_rindx(rf$read_1_rd1_rindx),
		  .read_1_rd2_rindx(rf$read_1_rd2_rindx),
		  .read_1_rd3_rindx(rf$read_1_rd3_rindx),
		  .read_2_rd1_rindx(rf$read_2_rd1_rindx),
		  .read_2_rd2_rindx(rf$read_2_rd2_rindx),
		  .read_2_rd3_rindx(rf$read_2_rd3_rindx),
		  .read_3_rd1_rindx(rf$read_3_rd1_rindx),
		  .read_3_rd2_rindx(rf$read_3_rd2_rindx),
		  .read_3_rd3_rindx(rf$read_3_rd3_rindx),
		  .read_4_rd1_rindx(rf$read_4_rd1_rindx),
		  .read_4_rd2_rindx(rf$read_4_rd2_rindx),
		  .read_4_rd3_rindx(rf$read_4_rd3_rindx),
		  .write_0_wr_data(rf$write_0_wr_data),
		  .write_0_wr_rindx(rf$write_0_wr_rindx),
		  .write_1_wr_data(rf$write_1_wr_data),
		  .write_1_wr_rindx(rf$write_1_wr_rindx),
		  .write_2_wr_data(rf$write_2_wr_data),
		  .write_2_wr_rindx(rf$write_2_wr_rindx),
		  .write_3_wr_data(rf$write_3_wr_data),
		  .write_3_wr_rindx(rf$write_3_wr_rindx),
		  .write_4_wr_data(rf$write_4_wr_data),
		  .write_4_wr_rindx(rf$write_4_wr_rindx),
		  .EN_write_0_wr(rf$EN_write_0_wr),
		  .EN_write_1_wr(rf$EN_write_1_wr),
		  .EN_write_2_wr(rf$EN_write_2_wr),
		  .EN_write_3_wr(rf$EN_write_3_wr),
		  .EN_write_4_wr(rf$EN_write_4_wr),
		  .RDY_write_0_wr(),
		  .RDY_write_1_wr(),
		  .RDY_write_2_wr(),
		  .RDY_write_3_wr(),
		  .RDY_write_4_wr(),
		  .read_0_rd1(rf$read_0_rd1),
		  .RDY_read_0_rd1(),
		  .read_0_rd2(rf$read_0_rd2),
		  .RDY_read_0_rd2(),
		  .read_0_rd3(),
		  .RDY_read_0_rd3(),
		  .read_1_rd1(rf$read_1_rd1),
		  .RDY_read_1_rd1(),
		  .read_1_rd2(rf$read_1_rd2),
		  .RDY_read_1_rd2(),
		  .read_1_rd3(),
		  .RDY_read_1_rd3(),
		  .read_2_rd1(rf$read_2_rd1),
		  .RDY_read_2_rd1(),
		  .read_2_rd2(rf$read_2_rd2),
		  .RDY_read_2_rd2(),
		  .read_2_rd3(rf$read_2_rd3),
		  .RDY_read_2_rd3(),
		  .read_3_rd1(rf$read_3_rd1),
		  .RDY_read_3_rd1(),
		  .read_3_rd2(rf$read_3_rd2),
		  .RDY_read_3_rd2(),
		  .read_3_rd3(),
		  .RDY_read_3_rd3(),
		  .read_4_rd1(),
		  .RDY_read_4_rd1(),
		  .read_4_rd2(),
		  .RDY_read_4_rd2(),
		  .read_4_rd3(),
		  .RDY_read_4_rd3());

  // submodule rob
  mkReorderBufferSynth rob(.CLK(CLK),
			   .RST_N(RST_N),
			   .enqPort_0_enq_x(rob$enqPort_0_enq_x),
			   .enqPort_1_enq_x(rob$enqPort_1_enq_x),
			   .getOrigPC_0_get_x(rob$getOrigPC_0_get_x),
			   .getOrigPC_1_get_x(rob$getOrigPC_1_get_x),
			   .getOrigPC_2_get_x(rob$getOrigPC_2_get_x),
			   .getOrigPredPC_0_get_x(rob$getOrigPredPC_0_get_x),
			   .getOrigPredPC_1_get_x(rob$getOrigPredPC_1_get_x),
			   .getOrig_Inst_0_get_x(rob$getOrig_Inst_0_get_x),
			   .getOrig_Inst_1_get_x(rob$getOrig_Inst_1_get_x),
			   .setExecuted_deqLSQ_cause(rob$setExecuted_deqLSQ_cause),
			   .setExecuted_deqLSQ_ld_killed(rob$setExecuted_deqLSQ_ld_killed),
			   .setExecuted_deqLSQ_x(rob$setExecuted_deqLSQ_x),
			   .setExecuted_doFinishAlu_0_set_cf(rob$setExecuted_doFinishAlu_0_set_cf),
			   .setExecuted_doFinishAlu_0_set_csrData(rob$setExecuted_doFinishAlu_0_set_csrData),
			   .setExecuted_doFinishAlu_0_set_dst_data(rob$setExecuted_doFinishAlu_0_set_dst_data),
			   .setExecuted_doFinishAlu_0_set_x(rob$setExecuted_doFinishAlu_0_set_x),
			   .setExecuted_doFinishAlu_1_set_cf(rob$setExecuted_doFinishAlu_1_set_cf),
			   .setExecuted_doFinishAlu_1_set_csrData(rob$setExecuted_doFinishAlu_1_set_csrData),
			   .setExecuted_doFinishAlu_1_set_dst_data(rob$setExecuted_doFinishAlu_1_set_dst_data),
			   .setExecuted_doFinishAlu_1_set_x(rob$setExecuted_doFinishAlu_1_set_x),
			   .setExecuted_doFinishFpuMulDiv_0_set_dst_data(rob$setExecuted_doFinishFpuMulDiv_0_set_dst_data),
			   .setExecuted_doFinishFpuMulDiv_0_set_fflags(rob$setExecuted_doFinishFpuMulDiv_0_set_fflags),
			   .setExecuted_doFinishFpuMulDiv_0_set_x(rob$setExecuted_doFinishFpuMulDiv_0_set_x),
			   .setExecuted_doFinishMem_access_at_commit(rob$setExecuted_doFinishMem_access_at_commit),
			   .setExecuted_doFinishMem_non_mmio_st_done(rob$setExecuted_doFinishMem_non_mmio_st_done),
			   .setExecuted_doFinishMem_store_data(rob$setExecuted_doFinishMem_store_data),
			   .setExecuted_doFinishMem_store_data_BE(rob$setExecuted_doFinishMem_store_data_BE),
			   .setExecuted_doFinishMem_vaddr(rob$setExecuted_doFinishMem_vaddr),
			   .setExecuted_doFinishMem_x(rob$setExecuted_doFinishMem_x),
			   .setLSQAtCommitNotified_x(rob$setLSQAtCommitNotified_x),
			   .specUpdate_correctSpeculation_mask(rob$specUpdate_correctSpeculation_mask),
			   .specUpdate_incorrectSpeculation_inst_tag(rob$specUpdate_incorrectSpeculation_inst_tag),
			   .specUpdate_incorrectSpeculation_kill_all(rob$specUpdate_incorrectSpeculation_kill_all),
			   .specUpdate_incorrectSpeculation_spec_tag(rob$specUpdate_incorrectSpeculation_spec_tag),
			   .EN_enqPort_0_enq(rob$EN_enqPort_0_enq),
			   .EN_enqPort_1_enq(rob$EN_enqPort_1_enq),
			   .EN_deqPort_0_deq(rob$EN_deqPort_0_deq),
			   .EN_deqPort_1_deq(rob$EN_deqPort_1_deq),
			   .EN_setLSQAtCommitNotified(rob$EN_setLSQAtCommitNotified),
			   .EN_setExecuted_deqLSQ(rob$EN_setExecuted_deqLSQ),
			   .EN_setExecuted_doFinishAlu_0_set(rob$EN_setExecuted_doFinishAlu_0_set),
			   .EN_setExecuted_doFinishAlu_1_set(rob$EN_setExecuted_doFinishAlu_1_set),
			   .EN_setExecuted_doFinishFpuMulDiv_0_set(rob$EN_setExecuted_doFinishFpuMulDiv_0_set),
			   .EN_setExecuted_doFinishMem(rob$EN_setExecuted_doFinishMem),
			   .EN_specUpdate_incorrectSpeculation(rob$EN_specUpdate_incorrectSpeculation),
			   .EN_specUpdate_correctSpeculation(rob$EN_specUpdate_correctSpeculation),
			   .enqPort_0_canEnq(rob$enqPort_0_canEnq),
			   .RDY_enqPort_0_canEnq(),
			   .RDY_enqPort_0_enq(rob$RDY_enqPort_0_enq),
			   .enqPort_0_getEnqInstTag(rob$enqPort_0_getEnqInstTag),
			   .RDY_enqPort_0_getEnqInstTag(),
			   .enqPort_1_canEnq(rob$enqPort_1_canEnq),
			   .RDY_enqPort_1_canEnq(),
			   .RDY_enqPort_1_enq(rob$RDY_enqPort_1_enq),
			   .enqPort_1_getEnqInstTag(rob$enqPort_1_getEnqInstTag),
			   .RDY_enqPort_1_getEnqInstTag(),
			   .isEmpty(rob$isEmpty),
			   .RDY_isEmpty(),
			   .deqPort_0_canDeq(rob$deqPort_0_canDeq),
			   .RDY_deqPort_0_canDeq(),
			   .RDY_deqPort_0_deq(rob$RDY_deqPort_0_deq),
			   .deqPort_0_getDeqInstTag(rob$deqPort_0_getDeqInstTag),
			   .RDY_deqPort_0_getDeqInstTag(),
			   .deqPort_0_deq_data(rob$deqPort_0_deq_data),
			   .RDY_deqPort_0_deq_data(rob$RDY_deqPort_0_deq_data),
			   .deqPort_1_canDeq(rob$deqPort_1_canDeq),
			   .RDY_deqPort_1_canDeq(),
			   .RDY_deqPort_1_deq(rob$RDY_deqPort_1_deq),
			   .deqPort_1_getDeqInstTag(),
			   .RDY_deqPort_1_getDeqInstTag(),
			   .deqPort_1_deq_data(rob$deqPort_1_deq_data),
			   .RDY_deqPort_1_deq_data(rob$RDY_deqPort_1_deq_data),
			   .RDY_setLSQAtCommitNotified(rob$RDY_setLSQAtCommitNotified),
			   .RDY_setExecuted_deqLSQ(rob$RDY_setExecuted_deqLSQ),
			   .RDY_setExecuted_doFinishAlu_0_set(rob$RDY_setExecuted_doFinishAlu_0_set),
			   .RDY_setExecuted_doFinishAlu_1_set(rob$RDY_setExecuted_doFinishAlu_1_set),
			   .RDY_setExecuted_doFinishFpuMulDiv_0_set(rob$RDY_setExecuted_doFinishFpuMulDiv_0_set),
			   .RDY_setExecuted_doFinishMem(rob$RDY_setExecuted_doFinishMem),
			   .getOrigPC_0_get(rob$getOrigPC_0_get),
			   .RDY_getOrigPC_0_get(),
			   .getOrigPC_1_get(rob$getOrigPC_1_get),
			   .RDY_getOrigPC_1_get(),
			   .getOrigPC_2_get(),
			   .RDY_getOrigPC_2_get(),
			   .getOrigPredPC_0_get(rob$getOrigPredPC_0_get),
			   .RDY_getOrigPredPC_0_get(),
			   .getOrigPredPC_1_get(rob$getOrigPredPC_1_get),
			   .RDY_getOrigPredPC_1_get(),
			   .getOrig_Inst_0_get(rob$getOrig_Inst_0_get),
			   .RDY_getOrig_Inst_0_get(),
			   .getOrig_Inst_1_get(rob$getOrig_Inst_1_get),
			   .RDY_getOrig_Inst_1_get(),
			   .getEnqTime(rob$getEnqTime),
			   .RDY_getEnqTime(),
			   .isEmpty_ehrPort0(),
			   .RDY_isEmpty_ehrPort0(),
			   .isFull_ehrPort0(),
			   .RDY_isFull_ehrPort0(),
			   .RDY_specUpdate_incorrectSpeculation(),
			   .RDY_specUpdate_correctSpeculation());

  // submodule sbAggr
  mkScoreboardAggr sbAggr(.CLK(CLK),
			  .RST_N(RST_N),
			  .eagerLookup_0_get_r(sbAggr$eagerLookup_0_get_r),
			  .eagerLookup_1_get_r(sbAggr$eagerLookup_1_get_r),
			  .setBusy_0_set_dst(sbAggr$setBusy_0_set_dst),
			  .setBusy_1_set_dst(sbAggr$setBusy_1_set_dst),
			  .setReady_0_put(sbAggr$setReady_0_put),
			  .setReady_1_put(sbAggr$setReady_1_put),
			  .setReady_2_put(sbAggr$setReady_2_put),
			  .setReady_3_put(sbAggr$setReady_3_put),
			  .setReady_4_put(sbAggr$setReady_4_put),
			  .EN_setBusy_0_set(sbAggr$EN_setBusy_0_set),
			  .EN_setBusy_1_set(sbAggr$EN_setBusy_1_set),
			  .EN_setReady_0_put(sbAggr$EN_setReady_0_put),
			  .EN_setReady_1_put(sbAggr$EN_setReady_1_put),
			  .EN_setReady_2_put(sbAggr$EN_setReady_2_put),
			  .EN_setReady_3_put(sbAggr$EN_setReady_3_put),
			  .EN_setReady_4_put(sbAggr$EN_setReady_4_put),
			  .eagerLookup_0_get(sbAggr$eagerLookup_0_get),
			  .RDY_eagerLookup_0_get(),
			  .eagerLookup_1_get(sbAggr$eagerLookup_1_get),
			  .RDY_eagerLookup_1_get(),
			  .RDY_setBusy_0_set(),
			  .RDY_setBusy_1_set(),
			  .RDY_setReady_0_put(),
			  .RDY_setReady_1_put(),
			  .RDY_setReady_2_put(),
			  .RDY_setReady_3_put(),
			  .RDY_setReady_4_put());

  // submodule sbCons
  mkScoreboardCons sbCons(.CLK(CLK),
			  .RST_N(RST_N),
			  .eagerLookup_0_get_r(sbCons$eagerLookup_0_get_r),
			  .eagerLookup_1_get_r(sbCons$eagerLookup_1_get_r),
			  .lazyLookup_0_get_r(sbCons$lazyLookup_0_get_r),
			  .lazyLookup_1_get_r(sbCons$lazyLookup_1_get_r),
			  .lazyLookup_2_get_r(sbCons$lazyLookup_2_get_r),
			  .lazyLookup_3_get_r(sbCons$lazyLookup_3_get_r),
			  .lazyLookup_4_get_r(sbCons$lazyLookup_4_get_r),
			  .setBusy_0_set_dst(sbCons$setBusy_0_set_dst),
			  .setBusy_1_set_dst(sbCons$setBusy_1_set_dst),
			  .setReady_0_put(sbCons$setReady_0_put),
			  .setReady_1_put(sbCons$setReady_1_put),
			  .setReady_2_put(sbCons$setReady_2_put),
			  .setReady_3_put(sbCons$setReady_3_put),
			  .setReady_4_put(sbCons$setReady_4_put),
			  .EN_setBusy_0_set(sbCons$EN_setBusy_0_set),
			  .EN_setBusy_1_set(sbCons$EN_setBusy_1_set),
			  .EN_setReady_0_put(sbCons$EN_setReady_0_put),
			  .EN_setReady_1_put(sbCons$EN_setReady_1_put),
			  .EN_setReady_2_put(sbCons$EN_setReady_2_put),
			  .EN_setReady_3_put(sbCons$EN_setReady_3_put),
			  .EN_setReady_4_put(sbCons$EN_setReady_4_put),
			  .eagerLookup_0_get(),
			  .RDY_eagerLookup_0_get(),
			  .eagerLookup_1_get(),
			  .RDY_eagerLookup_1_get(),
			  .RDY_setBusy_0_set(),
			  .RDY_setBusy_1_set(),
			  .RDY_setReady_0_put(),
			  .RDY_setReady_1_put(),
			  .RDY_setReady_2_put(),
			  .RDY_setReady_3_put(),
			  .RDY_setReady_4_put(),
			  .lazyLookup_0_get(sbCons$lazyLookup_0_get),
			  .RDY_lazyLookup_0_get(),
			  .lazyLookup_1_get(sbCons$lazyLookup_1_get),
			  .RDY_lazyLookup_1_get(),
			  .lazyLookup_2_get(sbCons$lazyLookup_2_get),
			  .RDY_lazyLookup_2_get(),
			  .lazyLookup_3_get(sbCons$lazyLookup_3_get),
			  .RDY_lazyLookup_3_get(),
			  .lazyLookup_4_get(),
			  .RDY_lazyLookup_4_get());

  // submodule specTagManager
  mkSpecTagManager specTagManager(.CLK(CLK),
				  .RST_N(RST_N),
				  .specUpdate_correctSpeculation_mask(specTagManager$specUpdate_correctSpeculation_mask),
				  .specUpdate_incorrectSpeculation_kill_all(specTagManager$specUpdate_incorrectSpeculation_kill_all),
				  .specUpdate_incorrectSpeculation_kill_tag(specTagManager$specUpdate_incorrectSpeculation_kill_tag),
				  .EN_claimSpecTag(specTagManager$EN_claimSpecTag),
				  .EN_specUpdate_incorrectSpeculation(specTagManager$EN_specUpdate_incorrectSpeculation),
				  .EN_specUpdate_correctSpeculation(specTagManager$EN_specUpdate_correctSpeculation),
				  .currentSpecBits(specTagManager$currentSpecBits),
				  .RDY_currentSpecBits(),
				  .nextSpecTag(specTagManager$nextSpecTag),
				  .RDY_nextSpecTag(specTagManager$RDY_nextSpecTag),
				  .RDY_claimSpecTag(specTagManager$RDY_claimSpecTag),
				  .canClaim(specTagManager$canClaim),
				  .RDY_canClaim(),
				  .RDY_specUpdate_incorrectSpeculation(),
				  .RDY_specUpdate_correctSpeculation(),
				  .isFull_ehrPort0(),
				  .RDY_isFull_ehrPort0());

  // rule RL_rl_outOfReset
  assign CAN_FIRE_RL_rl_outOfReset = !outOfReset ;
  assign WILL_FIRE_RL_rl_outOfReset = CAN_FIRE_RL_rl_outOfReset ;

  // rule RL_sendDTlbReq
  assign CAN_FIRE_RL_sendDTlbReq =
	     l2Tlb$RDY_toChildren_rqFromC_put &&
	     coreFix_memExe_dTlb$RDY_toParent_rqToP_deq &&
	     coreFix_memExe_dTlb$RDY_toParent_rqToP_first ;
  assign WILL_FIRE_RL_sendDTlbReq = CAN_FIRE_RL_sendDTlbReq ;

  // rule RL_sendITlbReq
  assign CAN_FIRE_RL_sendITlbReq =
	     l2Tlb$RDY_toChildren_rqFromC_put &&
	     fetchStage$RDY_iTlbIfc_toParent_rqToP_first &&
	     fetchStage$RDY_iTlbIfc_toParent_rqToP_deq ;
  assign WILL_FIRE_RL_sendITlbReq =
	     CAN_FIRE_RL_sendITlbReq && !WILL_FIRE_RL_sendDTlbReq ;

  // rule RL_sendRsToDTlb
  assign CAN_FIRE_RL_sendRsToDTlb =
	     l2Tlb$RDY_toChildren_rsToC_deq &&
	     l2Tlb$RDY_toChildren_rsToC_first &&
	     coreFix_memExe_dTlb$RDY_toParent_ldTransRsFromP_enq &&
	     l2Tlb$toChildren_rsToC_first[83] ;
  assign WILL_FIRE_RL_sendRsToDTlb = CAN_FIRE_RL_sendRsToDTlb ;

  // rule RL_sendRsToITlb
  assign CAN_FIRE_RL_sendRsToITlb =
	     l2Tlb$RDY_toChildren_rsToC_deq &&
	     l2Tlb$RDY_toChildren_rsToC_first &&
	     fetchStage$RDY_iTlbIfc_toParent_rsFromP_enq &&
	     !l2Tlb$toChildren_rsToC_first[83] ;
  assign WILL_FIRE_RL_sendRsToITlb = CAN_FIRE_RL_sendRsToITlb ;

  // rule RL_mkConnectionGetPut
  assign CAN_FIRE_RL_mkConnectionGetPut =
	     l2Tlb$RDY_toChildren_dTlbReqFlush_put &&
	     coreFix_memExe_dTlb$RDY_toParent_flush_request_get ;
  assign WILL_FIRE_RL_mkConnectionGetPut = CAN_FIRE_RL_mkConnectionGetPut ;

  // rule RL_mkConnectionGetPut_1
  assign CAN_FIRE_RL_mkConnectionGetPut_1 =
	     l2Tlb$RDY_toChildren_iTlbReqFlush_put &&
	     fetchStage$RDY_iTlbIfc_toParent_flush_request_get ;
  assign WILL_FIRE_RL_mkConnectionGetPut_1 =
	     CAN_FIRE_RL_mkConnectionGetPut_1 ;

  // rule RL_sendFlushDone
  assign CAN_FIRE_RL_sendFlushDone =
	     l2Tlb$RDY_toChildren_flushDone_get &&
	     coreFix_memExe_dTlb$RDY_toParent_flush_response_put &&
	     fetchStage$RDY_iTlbIfc_toParent_flush_response_put ;
  assign WILL_FIRE_RL_sendFlushDone = CAN_FIRE_RL_sendFlushDone ;

  // rule RL_sendRobEnqTime
  assign CAN_FIRE_RL_sendRobEnqTime = 1'd1 ;
  assign WILL_FIRE_RL_sendRobEnqTime = 1'd1 ;

  // rule RL_readyToFetch
  assign CAN_FIRE_RL_readyToFetch =
	     fetchStage$RDY_done_flushing && !flush_reservation &&
	     !flush_tlbs &&
	     !update_vm_info &&
	     fetchStage$iTlbIfc_flush_done &&
	     coreFix_memExe_dTlb$flush_done ;
  assign WILL_FIRE_RL_readyToFetch = CAN_FIRE_RL_readyToFetch ;

  // rule RL_csrf_minstret_ehr_setRead
  assign CAN_FIRE_RL_csrf_minstret_ehr_setRead = 1'd1 ;
  assign WILL_FIRE_RL_csrf_minstret_ehr_setRead = 1'd1 ;

  // rule RL_csrf_mcycle_ehr_setRead
  assign CAN_FIRE_RL_csrf_mcycle_ehr_setRead = 1'd1 ;
  assign WILL_FIRE_RL_csrf_mcycle_ehr_setRead = 1'd1 ;

  // rule RL_scaprf_pcc_reg_setRead
  assign CAN_FIRE_RL_scaprf_pcc_reg_setRead = 1'd1 ;
  assign WILL_FIRE_RL_scaprf_pcc_reg_setRead = 1'd1 ;

  // rule RL_mmio_handlePRq
  assign CAN_FIRE_RL_mmio_handlePRq =
	     !mmio_pRqQ_empty && !mmio_cRsQ_full &&
	     !csrInstOrInterruptInflight_rl ;
  assign WILL_FIRE_RL_mmio_handlePRq = CAN_FIRE_RL_mmio_handlePRq ;

  // rule RL_mmio_sendDataReq
  assign CAN_FIRE_RL_mmio_sendDataReq =
	     !mmio_dataReqQ_empty && !mmio_cRqQ_full ;
  assign WILL_FIRE_RL_mmio_sendDataReq = CAN_FIRE_RL_mmio_sendDataReq ;

  // rule RL_mmio_sendInstReq
  assign CAN_FIRE_RL_mmio_sendInstReq =
	     !mmio_cRqQ_full && fetchStage$RDY_mmioIfc_instReq_first_snd &&
	     fetchStage$RDY_mmioIfc_instReq_first_fst &&
	     fetchStage$RDY_mmioIfc_instReq_deq ;
  assign WILL_FIRE_RL_mmio_sendInstReq =
	     CAN_FIRE_RL_mmio_sendInstReq && !WILL_FIRE_RL_mmio_sendDataReq ;

  // rule RL_mmio_sendDataResp
  assign CAN_FIRE_RL_mmio_sendDataResp =
	     !mmio_dataRespQ_full && !mmio_pRsQ_empty &&
	     mmio_pRsQ_data_0[66] ;
  assign WILL_FIRE_RL_mmio_sendDataResp = CAN_FIRE_RL_mmio_sendDataResp ;

  // rule RL_mmio_sendInstResp
  assign CAN_FIRE_RL_mmio_sendInstResp =
	     !mmio_pRsQ_empty && fetchStage$RDY_mmioIfc_instResp_enq &&
	     !mmio_pRsQ_data_0[66] ;
  assign WILL_FIRE_RL_mmio_sendInstResp = CAN_FIRE_RL_mmio_sendInstResp ;

  // rule RL_mmio_cRqQ_canonicalize
  assign CAN_FIRE_RL_mmio_cRqQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_mmio_cRqQ_canonicalize = 1'd1 ;

  // rule RL_mmio_cRqQ_enqReq_canon
  assign CAN_FIRE_RL_mmio_cRqQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_cRqQ_enqReq_canon = 1'd1 ;

  // rule RL_mmio_cRqQ_deqReq_canon
  assign CAN_FIRE_RL_mmio_cRqQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_cRqQ_deqReq_canon = 1'd1 ;

  // rule RL_mmio_cRqQ_clearReq_canon
  assign CAN_FIRE_RL_mmio_cRqQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_cRqQ_clearReq_canon = 1'd1 ;

  // rule RL_mmio_pRsQ_canonicalize
  assign CAN_FIRE_RL_mmio_pRsQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_mmio_pRsQ_canonicalize = 1'd1 ;

  // rule RL_mmio_pRsQ_enqReq_canon
  assign CAN_FIRE_RL_mmio_pRsQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_pRsQ_enqReq_canon = 1'd1 ;

  // rule RL_mmio_pRsQ_deqReq_canon
  assign CAN_FIRE_RL_mmio_pRsQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_pRsQ_deqReq_canon = 1'd1 ;

  // rule RL_mmio_pRsQ_clearReq_canon
  assign CAN_FIRE_RL_mmio_pRsQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_pRsQ_clearReq_canon = 1'd1 ;

  // rule RL_mmio_cRsQ_canonicalize
  assign CAN_FIRE_RL_mmio_cRsQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_mmio_cRsQ_canonicalize = 1'd1 ;

  // rule RL_mmio_cRsQ_enqReq_canon
  assign CAN_FIRE_RL_mmio_cRsQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_cRsQ_enqReq_canon = 1'd1 ;

  // rule RL_mmio_cRsQ_deqReq_canon
  assign CAN_FIRE_RL_mmio_cRsQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_cRsQ_deqReq_canon = 1'd1 ;

  // rule RL_mmio_cRsQ_clearReq_canon
  assign CAN_FIRE_RL_mmio_cRsQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_cRsQ_clearReq_canon = 1'd1 ;

  // rule RL_coreFix_doFetchTrainBP
  assign CAN_FIRE_RL_coreFix_doFetchTrainBP = coreFix_trainBPQ_1$EMPTY_N ;
  assign WILL_FIRE_RL_coreFix_doFetchTrainBP = coreFix_trainBPQ_1$EMPTY_N ;

  // rule RL_coreFix_doFetchTrainBP_1
  assign CAN_FIRE_RL_coreFix_doFetchTrainBP_1 = coreFix_trainBPQ_0$EMPTY_N ;
  assign WILL_FIRE_RL_coreFix_doFetchTrainBP_1 =
	     coreFix_trainBPQ_0$EMPTY_N && !coreFix_trainBPQ_1$EMPTY_N ;

  // rule RL_coreFix_memExe_doIssueSB
  assign CAN_FIRE_RL_coreFix_memExe_doIssueSB =
	     !coreFix_memExe_reqStQ_full_rl && coreFix_memExe_stb$RDY_issue ;
  assign WILL_FIRE_RL_coreFix_memExe_doIssueSB =
	     CAN_FIRE_RL_coreFix_memExe_doIssueSB ;

  // rule RL_coreFix_memExe_doDeqLdQ_fault
  assign CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_fault =
	     rob$RDY_setExecuted_deqLSQ && coreFix_memExe_lsq$RDY_firstLd &&
	     coreFix_memExe_lsq$RDY_deqLd &&
	     coreFix_memExe_lsq$firstLd[7] ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault =
	     CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_memExe_doDeqLdQ_Ld_Mem
  assign CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem =
	     rob$RDY_setExecuted_deqLSQ && coreFix_memExe_lsq$RDY_firstLd &&
	     coreFix_memExe_lsq$RDY_deqLd &&
	     !coreFix_memExe_lsq$firstLd[7] &&
	     !coreFix_memExe_lsq$firstLd[101] &&
	     !coreFix_memExe_lsq$firstLd[16] ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem =
	     CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem ;

  // rule RL_coreFix_memExe_doDeqLdQ_Lr_issue
  assign CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue =
	     !coreFix_memExe_reqLrScAmoQ_full_rl &&
	     coreFix_memExe_lsq$RDY_firstLd &&
	     !coreFix_memExe_lsq$firstLd[7] &&
	     !coreFix_memExe_lsq$firstLd[16] &&
	     coreFix_memExe_lsq$firstLd[101] &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] == 2'd0 &&
	     coreFix_memExe_stb$noMatchLdQ &&
	     (!coreFix_memExe_lsq$firstLd[90] || coreFix_memExe_stb$isEmpty) ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue =
	     CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue ;

  // rule RL_coreFix_memExe_doDeqLdQ_MMIO_issue
  assign CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue =
	     !mmio_dataReqQ_full && !mmio_dataPendQ_full &&
	     coreFix_memExe_lsq$RDY_firstLd &&
	     !coreFix_memExe_lsq$firstLd[7] &&
	     coreFix_memExe_lsq$firstLd[16] &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] == 2'd0 &&
	     (!coreFix_memExe_lsq$firstLd[90] || coreFix_memExe_stb$isEmpty) ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue =
	     CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue ;

  // rule RL_coreFix_memExe_doDeqLdQ_MMIO_fault
  assign CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault =
	     !mmio_dataRespQ_empty &&
	     NOT_mmio_dataPendQ_empty_73_64_AND_rob_RDY_set_ETC___d1154 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] != 2'd0 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] != 2'd1 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] != 2'd2 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[0] &&
	     !mmio_dataRespQ_data_0[64] ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault =
	     CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_memExe_dMem_perfReqQ_canonicalize
  assign CAN_FIRE_RL_coreFix_memExe_dMem_perfReqQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_perfReqQ_canonicalize = 1'd1 ;

  // rule RL_coreFix_memExe_dMem_perfReqQ_clearReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_perfReqQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_perfReqQ_clearReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_dMem_perfReqQ_deqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_perfReqQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_perfReqQ_deqReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_dMem_perfReqQ_enqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_perfReqQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_perfReqQ_enqReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo =
	     !coreFix_memExe_respLrScAmoQ_full &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$RDY_pipelineResp_releaseEntry &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite &&
	     coreFix_memExe_dMem_cache_m_banks_0_processAmo[160] ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$EMPTY_N &&
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$FULL_N ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromSendRsToP
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromSendRsToP =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$FULL_N &&
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$EMPTY_N ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromSendRsToP =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromSendRsToP &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq =
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full &&
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$EMPTY_N &&
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$FULL_N &&
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[3] ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq =
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full &&
	     coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$RDY_sendRsToP_pRq_releaseEntry &&
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$EMPTY_N &&
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[3] ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2503 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_processAmo[160] &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[579:578] ==
	     2'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP =
	     !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full &&
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$EMPTY_N ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_canonicalize
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_canonicalize =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_canonicalize =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_canonicalize
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_canonicalize =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_canonicalize =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_canon =
	     1'd1 ;

  // rule RL_coreFix_fpuMulDivExe_0_fpuExec_deqFmaPoisoned
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqFmaPoisoned =
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_fpuExec_double_fma$RDY_response_get &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_first_poisoned &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_poisoned ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqFmaPoisoned =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqFmaPoisoned ;

  // rule RL_coreFix_fpuMulDivExe_0_fpuExec_deqDivPoisoned
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqDivPoisoned =
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_fpuExec_double_div$RDY_response_get &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_first_poisoned &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_poisoned ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqDivPoisoned =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqDivPoisoned ;

  // rule RL_coreFix_fpuMulDivExe_0_fpuExec_deqSqrtPoisoned
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqSqrtPoisoned =
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$RDY_response_get &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_first_poisoned &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_poisoned ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqSqrtPoisoned =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqSqrtPoisoned ;

  // rule RL_coreFix_fpuMulDivExe_0_mulDivExec_deqMulPoisoned
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqMulPoisoned =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_first_poisoned &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$EMPTY_N &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_poisoned ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqMulPoisoned =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqMulPoisoned ;

  // rule RL_coreFix_fpuMulDivExe_0_mulDivExec_deqDivPoisoned
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqDivPoisoned =
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_first_poisoned &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$EMPTY_N &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_poisoned ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqDivPoisoned =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqDivPoisoned ;

  // rule RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_compute
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_compute =
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$EMPTY_N &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$EMPTY_N &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$FULL_N ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_compute =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_compute ;

  // rule RL_renameStage_doRenaming_wrongPath
  assign CAN_FIRE_RL_renameStage_doRenaming_wrongPath =
	     fetchStage$RDY_pipelines_0_first &&
	     (!fetchStage$pipelines_0_canDeq ||
	      epochManager$checkEpoch_0_check ||
	      fetchStage$RDY_pipelines_0_deq) &&
	     NOT_fetchStage_pipelines_1_canDeq__2497_2498_O_ETC___d12506 &&
	     !epochManager$checkEpoch_0_check ;
  assign WILL_FIRE_RL_renameStage_doRenaming_wrongPath =
	     CAN_FIRE_RL_renameStage_doRenaming_wrongPath ;

  // rule RL_commitStage_doCommitTrap_flush
  assign CAN_FIRE_RL_commitStage_doCommitTrap_flush =
	     rob$RDY_deqPort_0_deq && rob$RDY_deqPort_0_deq_data &&
	     (rob$deqPort_0_deq_data[12] ||
	      epochManager$RDY_incrementEpoch) &&
	     !commitStage_commitTrap[264] &&
	     rob$deqPort_0_deq_data[266] ;
  assign WILL_FIRE_RL_commitStage_doCommitTrap_flush =
	     CAN_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_renameStage_doRenaming &&
	     !WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	     !WILL_FIRE_RL_renameStage_doRenaming_Trap &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     !WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doExeMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdForward &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_commitStage_doCommitTrap_handle
  assign CAN_FIRE_RL_commitStage_doCommitTrap_handle =
	     coreFix_memExe_stb$isEmpty && coreFix_memExe_lsq$stqEmpty &&
	     fetchStage$iTlbIfc_noPendingReq &&
	     coreFix_memExe_dTlb$noPendingReq &&
	     commitStage_commitTrap[264] ;
  assign WILL_FIRE_RL_commitStage_doCommitTrap_handle =
	     CAN_FIRE_RL_commitStage_doCommitTrap_handle &&
	     !WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	     !WILL_FIRE_RL_renameStage_doRenaming_Trap &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_prepareCachesAndTlbs ;

  // rule RL_commitStage_doCommitKilledLd
  assign CAN_FIRE_RL_commitStage_doCommitKilledLd =
	     rob$RDY_deqPort_0_deq && rob$RDY_deqPort_0_deq_data &&
	     epochManager$RDY_incrementEpoch &&
	     !commitStage_commitTrap[264] &&
	     !rob$deqPort_0_deq_data[266] &&
	     rob$deqPort_0_deq_data[18] ;
  assign WILL_FIRE_RL_commitStage_doCommitKilledLd =
	     CAN_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_renameStage_doRenaming &&
	     !WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	     !WILL_FIRE_RL_renameStage_doRenaming_Trap &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     !WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doExeMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdForward &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_commitStage_doCommitSystemInst
  assign CAN_FIRE_RL_commitStage_doCommitSystemInst =
	     coreFix_memExe_stb_isEmpty__86_AND_coreFix_mem_ETC___d14469 &&
	     !commitStage_commitTrap[264] &&
	     !rob$deqPort_0_deq_data[266] &&
	     !rob$deqPort_0_deq_data[18] &&
	     rob$deqPort_0_deq_data[25] &&
	     (rob$deqPort_0_deq_data[356:352] == 5'd0 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd21 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd17 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd18 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd13 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd16 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd15 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd19 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd20) ;
  assign WILL_FIRE_RL_commitStage_doCommitSystemInst =
	     CAN_FIRE_RL_commitStage_doCommitSystemInst &&
	     !WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	     !WILL_FIRE_RL_renameStage_doRenaming_Trap &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_prepareCachesAndTlbs ;

  // rule RL_csrf_incCycle
  assign CAN_FIRE_RL_csrf_incCycle = 1'd1 ;
  assign WILL_FIRE_RL_csrf_incCycle = 1'd1 ;

  // rule RL_csrf_mcycle_ehr_data_canon
  assign CAN_FIRE_RL_csrf_mcycle_ehr_data_canon = 1'd1 ;
  assign WILL_FIRE_RL_csrf_mcycle_ehr_data_canon = 1'd1 ;

  // rule RL_commitStage_notifyLSQCommit
  assign CAN_FIRE_RL_commitStage_notifyLSQCommit =
	     rob$RDY_setLSQAtCommitNotified && rob$RDY_deqPort_0_deq_data &&
	     !commitStage_commitTrap[264] &&
	     !rob$deqPort_0_deq_data[266] &&
	     !rob$deqPort_0_deq_data[18] &&
	     !rob$deqPort_0_deq_data[25] &&
	     rob$deqPort_0_deq_data[15] &&
	     !rob$deqPort_0_deq_data[14] ;
  assign WILL_FIRE_RL_commitStage_notifyLSQCommit =
	     CAN_FIRE_RL_commitStage_notifyLSQCommit ;

  // rule RL_commitStage_doCommitNormalInst
  assign CAN_FIRE_RL_commitStage_doCommitNormalInst =
	     rob$RDY_deqPort_0_deq_data &&
	     NOT_rob_deqPort_0_canDeq__4671_4672_OR_rob_RDY_ETC___d14710 &&
	     !commitStage_commitTrap[264] &&
	     !rob$deqPort_0_deq_data[266] &&
	     !rob$deqPort_0_deq_data[18] &&
	     rob$deqPort_0_deq_data[25] &&
	     rob$deqPort_0_deq_data[356:352] != 5'd0 &&
	     rob$deqPort_0_deq_data[356:352] != 5'd21 &&
	     rob$deqPort_0_deq_data[356:352] != 5'd17 &&
	     rob$deqPort_0_deq_data[356:352] != 5'd18 &&
	     rob$deqPort_0_deq_data[356:352] != 5'd13 &&
	     rob$deqPort_0_deq_data[356:352] != 5'd16 &&
	     rob$deqPort_0_deq_data[356:352] != 5'd15 &&
	     rob$deqPort_0_deq_data[356:352] != 5'd19 &&
	     rob$deqPort_0_deq_data[356:352] != 5'd20 ;
  assign WILL_FIRE_RL_commitStage_doCommitNormalInst =
	     CAN_FIRE_RL_commitStage_doCommitNormalInst ;

  // rule RL_csrf_minstret_ehr_data_canon
  assign CAN_FIRE_RL_csrf_minstret_ehr_data_canon = 1'd1 ;
  assign WILL_FIRE_RL_csrf_minstret_ehr_data_canon = 1'd1 ;

  // rule RL_scaprf_pcc_reg_data_canon
  assign CAN_FIRE_RL_scaprf_pcc_reg_data_canon = 1'd1 ;
  assign WILL_FIRE_RL_scaprf_pcc_reg_data_canon = 1'd1 ;

  // rule RL_coreFix_aluExe_1_doFinishAlu_T
  assign CAN_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T =
	     coreFix_aluExe_1_exeToFinQ$first[17] &&
	     coreFix_aluExe_1_exeToFinQ$RDY_deq &&
	     coreFix_aluExe_1_exeToFinQ$RDY_first &&
	     rob$RDY_setExecuted_doFinishAlu_1_set &&
	     epochManager$RDY_incrementEpoch &&
	     coreFix_trainBPQ_1$FULL_N ;
  assign WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T =
	     CAN_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     !WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doExeMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdForward &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_aluExe_0_doFinishAlu_T
  assign CAN_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T =
	     coreFix_aluExe_0_exeToFinQ$first[17] &&
	     coreFix_aluExe_0_exeToFinQ$RDY_deq &&
	     coreFix_aluExe_0_exeToFinQ$RDY_first &&
	     rob$RDY_setExecuted_doFinishAlu_0_set &&
	     epochManager$RDY_incrementEpoch &&
	     coreFix_trainBPQ_0$FULL_N ;
  assign WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T =
	     CAN_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     !WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doExeMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdForward &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_aluExe_0_doFinishAlu_F
  assign CAN_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F =
	     !coreFix_aluExe_0_exeToFinQ$first[17] &&
	     coreFix_aluExe_0_exeToFinQ$RDY_deq &&
	     coreFix_aluExe_0_exeToFinQ_RDY_first__2374_AND_ETC___d12414 ;
  assign WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F =
	     CAN_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_aluExe_1_doFinishAlu_F
  assign CAN_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F =
	     !coreFix_aluExe_1_exeToFinQ$first[17] &&
	     coreFix_aluExe_1_exeToFinQ$RDY_deq &&
	     coreFix_aluExe_1_exeToFinQ_RDY_first__1700_AND_ETC___d11741 ;
  assign WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F =
	     CAN_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F ;

  // rule RL_coreFix_aluExe_1_doExeAlu
  assign CAN_FIRE_RL_coreFix_aluExe_1_doExeAlu =
	     coreFix_aluExe_1_regToExeQ$RDY_deq &&
	     coreFix_aluExe_1_exeToFinQ$RDY_enq &&
	     coreFix_aluExe_1_regToExeQ$RDY_first ;
  assign WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu =
	     CAN_FIRE_RL_coreFix_aluExe_1_doExeAlu &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_aluExe_0_doExeAlu
  assign CAN_FIRE_RL_coreFix_aluExe_0_doExeAlu =
	     coreFix_aluExe_0_regToExeQ$RDY_deq &&
	     coreFix_aluExe_0_exeToFinQ$RDY_enq &&
	     coreFix_aluExe_0_regToExeQ$RDY_first ;
  assign WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu =
	     CAN_FIRE_RL_coreFix_aluExe_0_doExeAlu &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_aluExe_1_doRegReadAlu
  assign CAN_FIRE_RL_coreFix_aluExe_1_doRegReadAlu =
	     coreFix_aluExe_1_dispToRegQ$RDY_deq &&
	     coreFix_aluExe_1_regToExeQ$RDY_enq &&
	     coreFix_aluExe_1_dispToRegQ_RDY_first__1051_AN_ETC___d11142 ;
  assign WILL_FIRE_RL_coreFix_aluExe_1_doRegReadAlu =
	     CAN_FIRE_RL_coreFix_aluExe_1_doRegReadAlu &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_aluExe_0_doRegReadAlu
  assign CAN_FIRE_RL_coreFix_aluExe_0_doRegReadAlu =
	     coreFix_aluExe_0_dispToRegQ$RDY_deq &&
	     coreFix_aluExe_0_regToExeQ$RDY_enq &&
	     coreFix_aluExe_0_dispToRegQ_RDY_first__1907_AN_ETC___d11998 ;
  assign WILL_FIRE_RL_coreFix_aluExe_0_doRegReadAlu =
	     CAN_FIRE_RL_coreFix_aluExe_0_doRegReadAlu &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_aluExe_0_doDispatchAlu
  assign CAN_FIRE_RL_coreFix_aluExe_0_doDispatchAlu =
	     coreFix_aluExe_0_dispToRegQ$RDY_enq &&
	     coreFix_aluExe_0_rsAlu$RDY_dispatchData &&
	     coreFix_aluExe_0_rsAlu$RDY_doDispatch ;
  assign WILL_FIRE_RL_coreFix_aluExe_0_doDispatchAlu =
	     CAN_FIRE_RL_coreFix_aluExe_0_doDispatchAlu &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_aluExe_1_doDispatchAlu
  assign CAN_FIRE_RL_coreFix_aluExe_1_doDispatchAlu =
	     coreFix_aluExe_1_dispToRegQ$RDY_enq &&
	     coreFix_aluExe_1_rsAlu$RDY_dispatchData &&
	     coreFix_aluExe_1_rsAlu$RDY_doDispatch ;
  assign WILL_FIRE_RL_coreFix_aluExe_1_doDispatchAlu =
	     CAN_FIRE_RL_coreFix_aluExe_1_doDispatchAlu &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_fpuMulDivExe_0_doFinishFpSimple
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple =
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_first &&
	     rob$RDY_setExecuted_doFinishFpuMulDiv_0_set ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple ;

  // rule RL_coreFix_fpuMulDivExe_0_doFinishFpFma
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma =
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ_RDY_first__ETC___d3539 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple ;

  // rule RL_coreFix_fpuMulDivExe_0_doFinishFpDiv
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv =
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ_RDY_first__ETC___d4931 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple ;

  // rule RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt =
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_RDY_first_ETC___d6323 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple ;

  // rule RL_coreFix_fpuMulDivExe_0_doFinishIntMul
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ_RDY_fir_ETC___d7715 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple ;

  // rule RL_coreFix_fpuMulDivExe_0_doFinishIntDiv
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv =
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_first_poisoned &&
	     !coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_poisoned &&
	     rob$RDY_setExecuted_doFinishFpuMulDiv_0_set &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_first_data &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$EMPTY_N ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple ;

  // rule RL_coreFix_memExe_doDeqLdQ_Lr_deq
  assign CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq =
	     !coreFix_memExe_respLrScAmoQ_empty &&
	     rob$RDY_setExecuted_deqLSQ &&
	     coreFix_memExe_lsq$RDY_firstLd &&
	     coreFix_memExe_lsq$RDY_deqLd &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] == 2'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq =
	     CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_memExe_doDeqLdQ_MMIO_deq
  assign CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq =
	     !mmio_dataRespQ_empty &&
	     NOT_mmio_dataPendQ_empty_73_64_AND_rob_RDY_set_ETC___d1154 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] != 2'd0 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] != 2'd1 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] != 2'd2 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[0] &&
	     mmio_dataRespQ_data_0[64] ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq =
	     CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_memExe_doFinishMem
  assign CAN_FIRE_RL_coreFix_memExe_doFinishMem =
	     rob$RDY_setExecuted_doFinishMem &&
	     coreFix_memExe_dTlb$RDY_procResp &&
	     coreFix_memExe_dTlb$RDY_deqProcResp ;
  assign WILL_FIRE_RL_coreFix_memExe_doFinishMem =
	     CAN_FIRE_RL_coreFix_memExe_doFinishMem ;

  // rule RL_coreFix_memExe_doDeqStQ_ScAmo_issue
  assign CAN_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue =
	     !coreFix_memExe_reqLrScAmoQ_full_rl &&
	     coreFix_memExe_lsq$RDY_firstSt &&
	     !coreFix_memExe_lsq$firstSt[4] &&
	     !coreFix_memExe_lsq$firstSt[77] &&
	     (coreFix_memExe_lsq$firstSt[158:157] == 2'd1 ||
	      coreFix_memExe_lsq$firstSt[158:157] == 2'd2) &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] == 2'd0 &&
	     coreFix_memExe_stb$noMatchStQ &&
	     (!coreFix_memExe_lsq$firstSt[151] ||
	      coreFix_memExe_stb$isEmpty) ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue =
	     CAN_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue ;

  // rule RL_coreFix_memExe_doDeqStQ_MMIO_issue
  assign CAN_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue =
	     !mmio_dataReqQ_full && !mmio_dataPendQ_full &&
	     coreFix_memExe_lsq$RDY_firstSt &&
	     !coreFix_memExe_lsq$firstSt[4] &&
	     coreFix_memExe_lsq$firstSt[158:157] != 2'd3 &&
	     coreFix_memExe_lsq$firstSt[77] &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] == 2'd0 &&
	     (!coreFix_memExe_lsq$firstSt[151] ||
	      coreFix_memExe_stb$isEmpty) ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue =
	     CAN_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue ;

  // rule RL_mmio_dataReqQ_canonicalize
  assign CAN_FIRE_RL_mmio_dataReqQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataReqQ_canonicalize = 1'd1 ;

  // rule RL_mmio_dataReqQ_enqReq_canon
  assign CAN_FIRE_RL_mmio_dataReqQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataReqQ_enqReq_canon = 1'd1 ;

  // rule RL_mmio_dataReqQ_deqReq_canon
  assign CAN_FIRE_RL_mmio_dataReqQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataReqQ_deqReq_canon = 1'd1 ;

  // rule RL_mmio_dataReqQ_clearReq_canon
  assign CAN_FIRE_RL_mmio_dataReqQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataReqQ_clearReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_sendLrScAmoToMem
  assign CAN_FIRE_RL_coreFix_memExe_sendLrScAmoToMem =
	     !coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl &&
	     (coreFix_memExe_reqLrScAmoQ_enqP_lat_0$whas ||
	      !coreFix_memExe_reqLrScAmoQ_empty_rl) ;
  assign WILL_FIRE_RL_coreFix_memExe_sendLrScAmoToMem =
	     CAN_FIRE_RL_coreFix_memExe_sendLrScAmoToMem ;

  // rule RL_coreFix_memExe_doIssueLdFromIssueQ
  assign CAN_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ =
	     coreFix_memExe_lsq$RDY_getIssueLd &&
	     !coreFix_memExe_forwardQ_full &&
	     !coreFix_memExe_reqLdQ_full_rl ;
  assign WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ =
	     CAN_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;

  // rule RL_coreFix_memExe_doIssueLdFromUpdate
  assign CAN_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate =
	     !coreFix_memExe_forwardQ_full &&
	     !coreFix_memExe_reqLdQ_full_rl &&
	     coreFix_memExe_issueLd$whas ;
  assign WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate =
	     CAN_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;

  // rule RL_coreFix_memExe_doDeqStQ_fault
  assign CAN_FIRE_RL_coreFix_memExe_doDeqStQ_fault =
	     rob$RDY_setExecuted_deqLSQ && coreFix_memExe_lsq$RDY_firstSt &&
	     coreFix_memExe_lsq$RDY_deqSt &&
	     coreFix_memExe_lsq$firstSt[4] ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqStQ_fault =
	     CAN_FIRE_RL_coreFix_memExe_doDeqStQ_fault &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_memExe_doDeqStQ_Fence
  assign CAN_FIRE_RL_coreFix_memExe_doDeqStQ_Fence =
	     rob$RDY_setExecuted_deqLSQ && coreFix_memExe_lsq$RDY_firstSt &&
	     coreFix_memExe_lsq$RDY_deqSt &&
	     !coreFix_memExe_lsq$firstSt[4] &&
	     coreFix_memExe_lsq$firstSt[158:157] == 2'd3 &&
	     (!coreFix_memExe_lsq$firstSt[151] ||
	      coreFix_memExe_stb$isEmpty) ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqStQ_Fence =
	     CAN_FIRE_RL_coreFix_memExe_doDeqStQ_Fence &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_memExe_doDeqStQ_ScAmo_deq
  assign CAN_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq =
	     !coreFix_memExe_respLrScAmoQ_empty &&
	     rob$RDY_setExecuted_deqLSQ &&
	     coreFix_memExe_lsq$RDY_firstSt &&
	     coreFix_memExe_lsq$RDY_deqSt &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] == 2'd2 ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq =
	     CAN_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqStQ_Fence &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqStQ_fault &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdForward &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_memExe_doDeqStQ_MMIO_deq
  assign CAN_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq =
	     !mmio_dataRespQ_empty &&
	     NOT_mmio_dataPendQ_empty_73_64_AND_rob_RDY_set_ETC___d965 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] != 2'd0 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] != 2'd1 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] != 2'd2 &&
	     !coreFix_memExe_waitLrScAmoMMIOResp[0] &&
	     mmio_dataRespQ_data_0[64] ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq =
	     CAN_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqStQ_Fence &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqStQ_fault &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdForward &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_memExe_doDeqStQ_MMIO_fault
  assign CAN_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault =
	     !mmio_dataRespQ_empty &&
	     NOT_mmio_dataPendQ_empty_73_64_AND_rob_RDY_set_ETC___d965 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] != 2'd0 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] != 2'd1 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] != 2'd2 &&
	     !coreFix_memExe_waitLrScAmoMMIOResp[0] &&
	     !mmio_dataRespQ_data_0[64] ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault =
	     CAN_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqStQ_Fence &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqStQ_fault &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_mmio_dataRespQ_canonicalize
  assign CAN_FIRE_RL_mmio_dataRespQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataRespQ_canonicalize = 1'd1 ;

  // rule RL_mmio_dataRespQ_enqReq_canon
  assign CAN_FIRE_RL_mmio_dataRespQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataRespQ_enqReq_canon = 1'd1 ;

  // rule RL_mmio_dataRespQ_deqReq_canon
  assign CAN_FIRE_RL_mmio_dataRespQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataRespQ_deqReq_canon = 1'd1 ;

  // rule RL_mmio_dataPendQ_canonicalize
  assign CAN_FIRE_RL_mmio_dataPendQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataPendQ_canonicalize = 1'd1 ;

  // rule RL_mmio_dataRespQ_clearReq_canon
  assign CAN_FIRE_RL_mmio_dataRespQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataRespQ_clearReq_canon = 1'd1 ;

  // rule RL_mmio_dataPendQ_enqReq_canon
  assign CAN_FIRE_RL_mmio_dataPendQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataPendQ_enqReq_canon = 1'd1 ;

  // rule RL_mmio_dataPendQ_deqReq_canon
  assign CAN_FIRE_RL_mmio_dataPendQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataPendQ_deqReq_canon = 1'd1 ;

  // rule RL_mmio_dataPendQ_clearReq_canon
  assign CAN_FIRE_RL_mmio_dataPendQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataPendQ_clearReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_sendLdToMem
  assign CAN_FIRE_RL_coreFix_memExe_sendLdToMem =
	     !coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl &&
	     (coreFix_memExe_reqLdQ_empty_lat_0$whas ||
	      !coreFix_memExe_reqLdQ_empty_rl) ;
  assign WILL_FIRE_RL_coreFix_memExe_sendLdToMem =
	     CAN_FIRE_RL_coreFix_memExe_sendLdToMem &&
	     !WILL_FIRE_RL_coreFix_memExe_sendLrScAmoToMem ;

  // rule RL_coreFix_memExe_sendStToMem
  assign CAN_FIRE_RL_coreFix_memExe_sendStToMem =
	     !coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl &&
	     (CAN_FIRE_RL_coreFix_memExe_doIssueSB ||
	      !coreFix_memExe_reqStQ_empty_rl) ;
  assign WILL_FIRE_RL_coreFix_memExe_sendStToMem =
	     CAN_FIRE_RL_coreFix_memExe_sendStToMem &&
	     !WILL_FIRE_RL_coreFix_memExe_sendLdToMem &&
	     !WILL_FIRE_RL_coreFix_memExe_sendLrScAmoToMem ;

  // rule RL_coreFix_memExe_doRespLdMem
  assign CAN_FIRE_RL_coreFix_memExe_doRespLdMem =
	     !coreFix_memExe_memRespLdQ_empty ;
  assign WILL_FIRE_RL_coreFix_memExe_doRespLdMem =
	     CAN_FIRE_RL_coreFix_memExe_doRespLdMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;

  // rule RL_coreFix_memExe_doRespLdForward
  assign CAN_FIRE_RL_coreFix_memExe_doRespLdForward =
	     !coreFix_memExe_forwardQ_empty ;
  assign WILL_FIRE_RL_coreFix_memExe_doRespLdForward =
	     CAN_FIRE_RL_coreFix_memExe_doRespLdForward &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1863 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_processAmo[160] &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[579:578] ==
	     2'd0 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2472 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_processAmo[160] &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[579:578] !=
	     2'd0 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[579:578] !=
	     2'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;

  // rule RL_coreFix_memExe_doDeqStQ_St_Mem
  assign CAN_FIRE_RL_coreFix_memExe_doDeqStQ_St_Mem =
	     coreFix_memExe_stb$RDY_enq && coreFix_memExe_lsq$RDY_firstSt &&
	     coreFix_memExe_lsq$RDY_deqSt &&
	     !coreFix_memExe_lsq$firstSt[4] &&
	     coreFix_memExe_lsq$firstSt[158:157] == 2'd0 &&
	     !coreFix_memExe_lsq$firstSt[77] &&
	     coreFix_memExe_stb$getEnqIndex[2] ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqStQ_St_Mem =
	     CAN_FIRE_RL_coreFix_memExe_doDeqStQ_St_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_memExe_doExeMem
  assign CAN_FIRE_RL_coreFix_memExe_doExeMem =
	     coreFix_memExe_regToExeQ$RDY_deq &&
	     coreFix_memExe_regToExeQ$RDY_first &&
	     coreFix_memExe_dTlb$RDY_procReq ;
  assign WILL_FIRE_RL_coreFix_memExe_doExeMem =
	     CAN_FIRE_RL_coreFix_memExe_doExeMem ;

  // rule RL_prepareCachesAndTlbs
  assign CAN_FIRE_RL_prepareCachesAndTlbs =
	     (!flush_tlbs ||
	      coreFix_memExe_dTlb$RDY_flush &&
	      fetchStage$RDY_iTlbIfc_flush) &&
	     (flush_reservation || flush_tlbs || update_vm_info) ;
  assign WILL_FIRE_RL_prepareCachesAndTlbs =
	     CAN_FIRE_RL_prepareCachesAndTlbs ;

  // rule RL_coreFix_memExe_doRegReadMem
  assign CAN_FIRE_RL_coreFix_memExe_doRegReadMem =
	     coreFix_memExe_dispToRegQ$RDY_deq &&
	     coreFix_memExe_regToExeQ_RDY_enq__308_AND_core_ETC___d1398 ;
  assign WILL_FIRE_RL_coreFix_memExe_doRegReadMem =
	     CAN_FIRE_RL_coreFix_memExe_doRegReadMem &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_memExe_doDispatchMem
  assign CAN_FIRE_RL_coreFix_memExe_doDispatchMem =
	     coreFix_memExe_dispToRegQ$RDY_enq &&
	     coreFix_memExe_rsMem$RDY_dispatchData &&
	     coreFix_memExe_rsMem$RDY_doDispatch ;
  assign WILL_FIRE_RL_coreFix_memExe_doDispatchMem =
	     CAN_FIRE_RL_coreFix_memExe_doDispatchMem &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer =
	     !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_send &&
	     coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$RDY_getEmptyEntryInit &&
	     CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q258 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry =
	     !coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_send ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new =
	     (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_lat_0$whas ||
	      !coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_send &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$RDY_cRqTransfer_getEmptyEntryInit &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer =
	     !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_send &&
	     CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q259 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_canonicalize
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_canonicalize =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_canonicalize =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_canonicalize
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_canonicalize =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_canonicalize =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_respLrScAmoQ_canonicalize
  assign CAN_FIRE_RL_coreFix_memExe_respLrScAmoQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_respLrScAmoQ_canonicalize = 1'd1 ;

  // rule RL_coreFix_memExe_respLrScAmoQ_clearReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_respLrScAmoQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_respLrScAmoQ_clearReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_respLrScAmoQ_deqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_respLrScAmoQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_respLrScAmoQ_deqReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_respLrScAmoQ_enqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_respLrScAmoQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_respLrScAmoQ_enqReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_forwardQ_canonicalize
  assign CAN_FIRE_RL_coreFix_memExe_forwardQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_forwardQ_canonicalize = 1'd1 ;

  // rule RL_coreFix_memExe_memRespLdQ_canonicalize
  assign CAN_FIRE_RL_coreFix_memExe_memRespLdQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_memRespLdQ_canonicalize = 1'd1 ;

  // rule RL_coreFix_memExe_memRespLdQ_clearReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_memRespLdQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_memRespLdQ_clearReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_memRespLdQ_deqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_memRespLdQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_memRespLdQ_deqReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_memRespLdQ_enqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_memRespLdQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_memRespLdQ_enqReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_forwardQ_clearReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_forwardQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_forwardQ_clearReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_forwardQ_deqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_forwardQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_forwardQ_deqReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_forwardQ_enqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_forwardQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_forwardQ_enqReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_reqStQ_full_canon
  assign CAN_FIRE_RL_coreFix_memExe_reqStQ_full_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_reqStQ_full_canon = 1'd1 ;

  // rule RL_coreFix_memExe_reqStQ_empty_canon
  assign CAN_FIRE_RL_coreFix_memExe_reqStQ_empty_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_reqStQ_empty_canon = 1'd1 ;

  // rule RL_coreFix_memExe_reqLrScAmoQ_empty_canon
  assign CAN_FIRE_RL_coreFix_memExe_reqLrScAmoQ_empty_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_reqLrScAmoQ_empty_canon = 1'd1 ;

  // rule RL_coreFix_memExe_reqStQ_data_0_canon
  assign CAN_FIRE_RL_coreFix_memExe_reqStQ_data_0_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_reqStQ_data_0_canon = 1'd1 ;

  // rule RL_coreFix_memExe_reqLrScAmoQ_full_canon
  assign CAN_FIRE_RL_coreFix_memExe_reqLrScAmoQ_full_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_reqLrScAmoQ_full_canon = 1'd1 ;

  // rule RL_coreFix_memExe_reqLrScAmoQ_data_0_canon
  assign CAN_FIRE_RL_coreFix_memExe_reqLrScAmoQ_data_0_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_reqLrScAmoQ_data_0_canon = 1'd1 ;

  // rule RL_coreFix_memExe_reqLdQ_full_canon
  assign CAN_FIRE_RL_coreFix_memExe_reqLdQ_full_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_reqLdQ_full_canon = 1'd1 ;

  // rule RL_coreFix_memExe_reqLdQ_data_0_canon
  assign CAN_FIRE_RL_coreFix_memExe_reqLdQ_data_0_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_reqLdQ_data_0_canon = 1'd1 ;

  // rule RL_coreFix_memExe_reqLdQ_empty_canon
  assign CAN_FIRE_RL_coreFix_memExe_reqLdQ_empty_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_reqLdQ_empty_canon = 1'd1 ;

  // rule RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv =
	     coreFix_fpuMulDivExe_0_regToExeQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_regToExeQ$RDY_first &&
	     IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8104 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv =
	     coreFix_fpuMulDivExe_0_dispToRegQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_regToExeQ$RDY_enq &&
	     coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first__8_ETC___d7958 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv =
	     coreFix_fpuMulDivExe_0_dispToRegQ$RDY_enq &&
	     coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_dispatchData &&
	     coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_doDispatch ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_doInit
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_doInit =
	     !coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_doInit =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_doInit ;

  // rule RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_rl_ready
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_rl_ready =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_rl_ready =
	     1'd1 ;

  // rule RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_canon
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_canon = 1'd1 ;

  // rule RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_canon
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_canon =
	     1'd1 ;

  // rule RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_canon
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_canon =
	     1'd1 ;

  // rule RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_canon
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_canon =
	     1'd1 ;

  // rule RL_renameStage_doRenaming_Trap
  assign CAN_FIRE_RL_renameStage_doRenaming_Trap =
	     rob$RDY_enqPort_0_enq && epochManager$RDY_incrementEpoch &&
	     fetchStage$RDY_pipelines_0_first &&
	     fetchStage$RDY_pipelines_0_deq &&
	     mmio_pRqQ_empty_55_AND_epochManager_checkEpoch_ETC___d12771 ;
  assign WILL_FIRE_RL_renameStage_doRenaming_Trap =
	     CAN_FIRE_RL_renameStage_doRenaming_Trap &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_renameStage_doRenaming_SystemInst
  assign CAN_FIRE_RL_renameStage_doRenaming_SystemInst =
	     rob$RDY_enqPort_0_enq &&
	     regRenamingTable_RDY_rename_0_getRename__3022__ETC___d13031 &&
	     mmio_pRqQ_empty_55_AND_epochManager_checkEpoch_ETC___d13085 &&
	     rob$isEmpty ;
  assign WILL_FIRE_RL_renameStage_doRenaming_SystemInst =
	     CAN_FIRE_RL_renameStage_doRenaming_SystemInst &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_csrInstOrInterruptInflight_canon
  assign CAN_FIRE_RL_csrInstOrInterruptInflight_canon = 1'd1 ;
  assign WILL_FIRE_RL_csrInstOrInterruptInflight_canon = 1'd1 ;

  // rule RL_renameStage_doRenaming
  assign CAN_FIRE_RL_renameStage_doRenaming =
	     (!fetchStage$pipelines_0_canDeq ||
	      IF_fetchStage_RDY_pipelines_0_first__2488_AND__ETC___d13186) &&
	     IF_NOT_fetchStage_pipelines_0_canDeq__2489_249_ETC___d13636 &&
	     IF_NOT_fetchStage_pipelines_0_canDeq__2489_249_ETC___d13644 &&
	     NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13808 &&
	     mmio_pRqQ_empty_55_AND_epochManager_checkEpoch_ETC___d13811 ;
  assign WILL_FIRE_RL_renameStage_doRenaming =
	     CAN_FIRE_RL_renameStage_doRenaming &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_mmio_pRqQ_canonicalize
  assign CAN_FIRE_RL_mmio_pRqQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_mmio_pRqQ_canonicalize = 1'd1 ;

  // rule RL_mmio_pRqQ_enqReq_canon
  assign CAN_FIRE_RL_mmio_pRqQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_pRqQ_enqReq_canon = 1'd1 ;

  // rule RL_mmio_pRqQ_deqReq_canon
  assign CAN_FIRE_RL_mmio_pRqQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_pRqQ_deqReq_canon = 1'd1 ;

  // rule RL_mmio_pRqQ_clearReq_canon
  assign CAN_FIRE_RL_mmio_pRqQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_pRqQ_clearReq_canon = 1'd1 ;

  // rule RL_coreFix_globalSpecUpdate_canon_correct_spec
  assign CAN_FIRE_RL_coreFix_globalSpecUpdate_canon_correct_spec = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_globalSpecUpdate_canon_correct_spec = 1'd1 ;

  // rule RL_commitStage_doSetLSQAtCommit
  assign CAN_FIRE_RL_commitStage_doSetLSQAtCommit =
	     MUX_commitStage_setLSQAtCommit_0$wset_1__SEL_1 ||
	     WILL_FIRE_RL_commitStage_notifyLSQCommit ;
  assign WILL_FIRE_RL_commitStage_doSetLSQAtCommit =
	     CAN_FIRE_RL_commitStage_doSetLSQAtCommit ;

  // rule RL_commitStage_doSetLSQAtCommit_1
  assign CAN_FIRE_RL_commitStage_doSetLSQAtCommit_1 =
	     WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	     rob$deqPort_1_canDeq &&
	     rob$deqPort_1_deq_data[25] &&
	     !rob$deqPort_1_deq_data[18] &&
	     !rob$deqPort_1_deq_data[266] &&
	     rob$deqPort_1_deq_data[356:352] != 5'd0 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd21 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd17 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd18 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd13 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd16 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd15 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd19 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd20 &&
	     rob$deqPort_1_deq_data[13] ;
  assign WILL_FIRE_RL_commitStage_doSetLSQAtCommit_1 =
	     CAN_FIRE_RL_commitStage_doSetLSQAtCommit_1 ;

  // inputs to muxes for submodule ports
  assign MUX_commitStage_rg_serial_num$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle ;
  assign MUX_commitStage_setLSQAtCommit_0$wset_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	     rob$deqPort_0_canDeq &&
	     rob$deqPort_0_deq_data[13] ;
  assign MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3 =
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign MUX_coreFix_aluExe_0_rsAlu$enq_1__SEL_1 =
	     WILL_FIRE_RL_renameStage_doRenaming && _dfoo18 ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[32] ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2 =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32] ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3 =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32] ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4 =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32] ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5 =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[32] ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6 =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[32] ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_1 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_1 &&
	     coreFix_memExe_lsq$firstSt[150] ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_2 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2375 ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 &&
	     coreFix_memExe_lsq$getHit[8] &&
	     !coreFix_memExe_lsq$getHit[9] ;
  assign MUX_coreFix_aluExe_1_rsAlu$setRegReady_4_put_1__SEL_1 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_1 &&
	     coreFix_memExe_lsq$firstSt[150] ;
  assign MUX_coreFix_aluExe_1_rsAlu$setRegReady_4_put_1__SEL_2 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign MUX_coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put_1__SEL_1 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_1 &&
	     coreFix_memExe_lsq$firstSt[150] ;
  assign MUX_coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put_1__SEL_2 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2352 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd4 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2289 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2335 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__SEL_2 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd2 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3) ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__SEL_3 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d2547 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	      (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	       3'd4 ||
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 &&
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788 ||
	       !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778) ||
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d1878) ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
	       !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd4 ||
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2391) ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__SEL_2 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd4 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[571] &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2496 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2499 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__SEL_2 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2456 ;
  assign MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd0 &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd1 ;
  assign MUX_coreFix_memExe_lsq$getHit_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
	       !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd0 ||
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2358) ;
  assign MUX_coreFix_memExe_lsq$wakeupLdStalledBySB_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
	       !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd1 ||
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2383) ;
  assign MUX_coreFix_memExe_reqLdQ_data_0_lat_0$wset_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd0 ;
  assign MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2318 ;
  assign MUX_coreFix_memExe_rsMem$setRegReady_4_put_1__SEL_1 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_1 &&
	     coreFix_memExe_lsq$firstSt[150] ;
  assign MUX_coreFix_memExe_rsMem$setRegReady_4_put_1__SEL_2 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign MUX_coreFix_memExe_waitLrScAmoMMIOResp$write_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;
  assign MUX_coreFix_trainBPQ_0$enq_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F &&
	     (coreFix_aluExe_0_exeToFinQ$first[326:322] == 5'd9 ||
	      coreFix_aluExe_0_exeToFinQ$first[326:322] == 5'd10) ;
  assign MUX_coreFix_trainBPQ_1$enq_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F &&
	     (coreFix_aluExe_1_exeToFinQ$first[326:322] == 5'd9 ||
	      coreFix_aluExe_1_exeToFinQ$first[326:322] == 5'd10) ;
  assign MUX_csrInstOrInterruptInflight_lat_1$wset_1__SEL_2 =
	     WILL_FIRE_RL_renameStage_doRenaming_Trap &&
	     !fetchStage$pipelines_0_first[68] &&
	     (IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[0] ||
	      IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[1] ||
	      IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[2] ||
	      IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[3] ||
	      IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[4] ||
	      IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[5] ||
	      IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[6] ||
	      IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[7] ||
	      IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[8] ||
	      IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[9] ||
	      IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[10] ||
	      IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[11]) ;
  assign MUX_csrf_external_int_pend_vec_1$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     (IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd16 ||
	      IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd29) ;
  assign MUX_csrf_fflags_reg$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     (IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd0 ||
	      IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd2) ;
  assign MUX_csrf_fs_reg$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     (IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd0 ||
	      IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd1 ||
	      IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd2 ||
	      IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd8 ||
	      IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd18) ;
  assign MUX_csrf_ie_vec_1$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo26 ;
  assign MUX_csrf_ie_vec_1$write_1__SEL_2 =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     csrf_prv_reg_read__2519_ULE_1_4282_AND_IF_comm_ETC___d14321 ;
  assign MUX_csrf_ie_vec_3$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo20 ;
  assign MUX_csrf_ie_vec_3$write_1__SEL_2 =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_csrf_prv_reg_read__2519_ULE_1_4282_4346_OR_ETC___d14350 ;
  assign MUX_csrf_mpp_reg$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo20 ;
  assign MUX_csrf_prev_ie_vec_1$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo26 ;
  assign MUX_csrf_prev_ie_vec_3$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo20 ;
  assign MUX_csrf_prv_reg$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     (rob$deqPort_0_deq_data[356:352] == 5'd19 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd20) ;
  assign MUX_csrf_spp_reg$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo26 ;
  assign MUX_epochManager$updatePrevEpoch_0_update_1__SEL_2 =
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13814 &&
	     IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13239 ;
  assign MUX_epochManager$updatePrevEpoch_1_update_1__SEL_2 =
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13940 &&
	     NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13950 &&
	     IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13630 ;
  assign MUX_flush_reservation$write_1__SEL_1 =
	     WILL_FIRE_RL_prepareCachesAndTlbs && flush_reservation ;
  assign MUX_flush_tlbs$write_1__SEL_1 =
	     WILL_FIRE_RL_prepareCachesAndTlbs && flush_tlbs ;
  assign MUX_rf$write_3_wr_1__PSEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_doRespLdForward ||
	     WILL_FIRE_RL_coreFix_memExe_doRespLdMem ;
  assign MUX_rf$write_3_wr_1__SEL_1 =
	     MUX_rf$write_3_wr_1__PSEL_1 && coreFix_memExe_lsq$respLd[72] ;
  assign MUX_rf$write_3_wr_1__SEL_2 =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq &&
	     coreFix_memExe_lsq$firstSt[150] ;
  assign MUX_rf$write_3_wr_1__SEL_3 =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq &&
	     coreFix_memExe_lsq$firstSt[150] ;
  assign MUX_rf$write_3_wr_1__SEL_4 =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign MUX_rf$write_3_wr_1__SEL_5 =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign MUX_rf$write_3_wr_2__SEL_1 =
	     MUX_rf$write_3_wr_1__PSEL_1 && coreFix_memExe_lsq$respLd[72] ;
  assign MUX_rob$setExecuted_deqLSQ_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_Fence ;
  assign MUX_sbAggr$setReady_4_put_1__SEL_1 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_1 &&
	     coreFix_memExe_lsq$firstSt[150] ;
  assign MUX_sbAggr$setReady_4_put_1__SEL_2 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign MUX_sbCons$setReady_3_put_1__SEL_1 =
	     MUX_rf$write_3_wr_1__PSEL_1 && coreFix_memExe_lsq$respLd[72] ;
  assign MUX_sbCons$setReady_3_put_1__SEL_2 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_1 &&
	     coreFix_memExe_lsq$firstSt[150] ;
  assign MUX_sbCons$setReady_3_put_1__SEL_3 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign MUX_update_vm_info$write_1__SEL_1 =
	     WILL_FIRE_RL_prepareCachesAndTlbs && update_vm_info ;
  assign MUX_commitStage_commitTrap$write_1__VAL_2 =
	     { 1'd1,
	       rob$deqPort_0_deq_data[551:389],
	       addr__h621369,
	       rob$deqPort_0_deq_data[265],
	       rob$deqPort_0_deq_data[265] ?
		 CASE_robdeqPort_0_deq_data_BITS_264_TO_261_0__ETC__q260 :
		 CASE_robdeqPort_0_deq_data_BITS_264_TO_261_0__ETC__q261,
	       rob$deqPort_0_deq_data[388:357] } ;
  assign MUX_commitStage_rg_serial_num$write_1__VAL_1 =
	     commitStage_rg_serial_num + 64'd1 ;
  assign MUX_commitStage_rg_serial_num$write_1__VAL_2 =
	     commitStage_rg_serial_num + y__h640728 ;
  assign MUX_coreFix_aluExe_0_rsAlu$enq_1__VAL_1 =
	     (k__h590245 == 1'd0 &&
	      fetchStage_pipelines_0_canDeq__2489_AND_NOT_fe_ETC___d13817) ?
	       { fetchStage$pipelines_0_first[199:195],
		 IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d12606,
		 fetchStage$pipelines_0_first[173],
		 IF_fetchStage_pipelines_0_first__2491_BITS_172_ETC___d12688,
		 fetchStage$pipelines_0_first[160:128],
		 fetchStage$pipelines_0_first[255:232],
		 regRenamingTable$rename_0_getRename,
		 rob$enqPort_0_getEnqInstTag,
		 specTagManager$currentSpecBits,
		 fetchStage$pipelines_0_first[194:192] == 3'd1,
		 specTagManager$nextSpecTag,
		 sbAggr$eagerLookup_0_get } :
	       { fetchStage$pipelines_1_first[199:195],
		 IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13332,
		 fetchStage_pipelines_1_first__2500_BIT_173_333_ETC___d13416,
		 fetchStage$pipelines_1_first[160:128],
		 fetchStage$pipelines_1_first[255:232],
		 regRenamingTable$rename_1_getRename,
		 rob$enqPort_1_getEnqInstTag,
		 renaming_spec_bits__h606266,
		 fetchStage$pipelines_1_first[194:192] == 3'd1,
		 specTagManager$nextSpecTag,
		 sbAggr$eagerLookup_1_get } ;
  assign MUX_coreFix_aluExe_0_rsAlu$enq_1__VAL_2 =
	     { fetchStage$pipelines_0_first[199:195],
	       IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d12606,
	       fetchStage$pipelines_0_first[173],
	       IF_fetchStage_pipelines_0_first__2491_BITS_172_ETC___d12688,
	       fetchStage$pipelines_0_first[160:128],
	       fetchStage$pipelines_0_first[255:232],
	       regRenamingTable$rename_0_getRename,
	       rob$enqPort_0_getEnqInstTag,
	       specTagManager$currentSpecBits,
	       5'd10,
	       sbAggr$eagerLookup_0_get } ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1 =
	     { 1'd1, coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[31:25] } ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2 =
	     { 1'd1, coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[31:25] } ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3 =
	     { 1'd1, coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[31:25] } ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4 =
	     { 1'd1,
	       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[31:25] } ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5 =
	     { 1'd1,
	       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[31:25] } ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6 =
	     { 1'd1,
	       coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[31:25] } ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1 =
	     { 1'd1, coreFix_memExe_lsq$firstSt[149:143] } ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2 =
	     { 1'd1, coreFix_memExe_lsq$firstLd[88:82] } ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3 =
	     { 1'd1, coreFix_memExe_lsq$getHit[7:1] } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_2__VAL_1 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
	       (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 ?
		  3'd3 :
		  3'd5) :
	       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2292 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_3__VAL_1 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
	       (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 ?
		  { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[574:572],
		    coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516],
		    54'h15555555555555 } :
		  59'h295555555555554) :
	       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2303 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_3__VAL_2 =
	     { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[574:572],
	       56'h15555555555555 } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__VAL_1 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
	       { (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
		  !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) &&
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
		 3'd2,
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:90] } :
	       { coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851 &&
		 (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
		  !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) &&
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
		 3'd2,
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:90] } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__VAL_2 =
	     { coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	       3'd2,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:90] } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__VAL_1 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
	       { coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
		 (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
		  !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) &&
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc[3],
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc[2:0] } :
	       { (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
		  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
		  3'd1) &&
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851 &&
		 (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
		  !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) &&
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc[3],
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc[2:0] } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_1 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
	       (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 ?
		  IF_NOT_coreFix_memExe_dMem_cache_m_banks_0_pip_ETC___d2263 :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[570:0]) :
	       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2276 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_2 =
	     { coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:95],
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1899,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2253 } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_3 =
	     { coreFix_memExe_dMem_cache_m_banks_0_processAmo[151:99],
	       2'd3,
	       coreFix_memExe_dMem_cache_m_banks_0_processAmo[3:0],
	       IF_coreFix_memExe_dMem_cache_m_banks_0_process_ETC___d1766,
	       (coreFix_memExe_dMem_cache_m_banks_0_processAmo[93:91] ==
		3'd0) ?
		 n__h124635 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[63:0] } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_4 =
	     { IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2512,
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:0] } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_3__VAL_1 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	       (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
		!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) :
	       NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2279 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_1 =
	     { 517'h02AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getRq[147:84],
	       x__h216092 } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_2 =
	     { 517'h02AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA,
	       x__h216634,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getEmptyEntryInit } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_3 =
	     { 518'h1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA,
	       SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2613,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$getEmptyEntryInit } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_4 =
	     { 2'd2,
	       addr__h218785,
	       SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2683 } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__VAL_1 =
	     { 1'd1,
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[577:575],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__VAL_2 =
	     { 1'd1,
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_1 =
	     coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
	       coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget :
	       coreFix_memExe_reqLrScAmoQ_data_0_rl ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_2 =
	     { x__h89816, x__h89821, 84'h82AAAAAAAAAAAAAAAAAAA } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_3 =
	     { x__h91885, x__h91890, 84'hCAAAAAAAAAAAAAAAAAAAA } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__VAL_1 =
	     { 1'd1,
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[577:575] } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__VAL_2 =
	     { 1'd0,
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[577:575] } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wset_1__VAL_1 =
	     { 1'd1,
	       resp_addr__h220791,
	       2'd0,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getData } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wset_1__VAL_2 =
	     { 1'd1,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getRq,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getData } ;
  assign MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__VAL_1 =
	     { 1'd1,
	       coreFix_memExe_lsq$getIssueLd[76:72],
	       coreFix_memExe_lsq$issueLd[63:0] } ;
  assign MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__VAL_2 =
	     { 1'd1,
	       coreFix_memExe_issueLd$wget[76:72],
	       coreFix_memExe_lsq$issueLd[63:0] } ;
  assign MUX_coreFix_memExe_lsq$getHit_1__VAL_1 =
	     { 1'd0,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[152:148] } ;
  assign MUX_coreFix_memExe_lsq$issueLd_4__VAL_1 =
	     { coreFix_memExe_stb$search[67],
	       coreFix_memExe_stb$search[67] ?
		 coreFix_memExe_stb$search[66:65] :
		 2'h2,
	       coreFix_memExe_stb$search[64],
	       coreFix_memExe_stb$search[64] ?
		 coreFix_memExe_stb$search[63:0] :
		 64'hAAAAAAAAAAAAAAAA } ;
  always@(coreFix_memExe_memRespLdQ_deqP or
	  coreFix_memExe_memRespLdQ_data_0 or
	  coreFix_memExe_memRespLdQ_data_1)
  begin
    case (coreFix_memExe_memRespLdQ_deqP)
      1'd0:
	  MUX_coreFix_memExe_lsq$respLd_1__VAL_1 =
	      coreFix_memExe_memRespLdQ_data_0[68:64];
      1'd1:
	  MUX_coreFix_memExe_lsq$respLd_1__VAL_1 =
	      coreFix_memExe_memRespLdQ_data_1[68:64];
    endcase
  end
  always@(coreFix_memExe_forwardQ_deqP or
	  coreFix_memExe_forwardQ_data_0 or coreFix_memExe_forwardQ_data_1)
  begin
    case (coreFix_memExe_forwardQ_deqP)
      1'd0:
	  MUX_coreFix_memExe_lsq$respLd_1__VAL_2 =
	      coreFix_memExe_forwardQ_data_0[68:64];
      1'd1:
	  MUX_coreFix_memExe_lsq$respLd_1__VAL_2 =
	      coreFix_memExe_forwardQ_data_1[68:64];
    endcase
  end
  always@(coreFix_memExe_memRespLdQ_deqP or
	  coreFix_memExe_memRespLdQ_data_0 or
	  coreFix_memExe_memRespLdQ_data_1)
  begin
    case (coreFix_memExe_memRespLdQ_deqP)
      1'd0:
	  MUX_coreFix_memExe_lsq$respLd_2__VAL_1 =
	      coreFix_memExe_memRespLdQ_data_0[63:0];
      1'd1:
	  MUX_coreFix_memExe_lsq$respLd_2__VAL_1 =
	      coreFix_memExe_memRespLdQ_data_1[63:0];
    endcase
  end
  always@(coreFix_memExe_forwardQ_deqP or
	  coreFix_memExe_forwardQ_data_0 or coreFix_memExe_forwardQ_data_1)
  begin
    case (coreFix_memExe_forwardQ_deqP)
      1'd0:
	  MUX_coreFix_memExe_lsq$respLd_2__VAL_2 =
	      coreFix_memExe_forwardQ_data_0[63:0];
      1'd1:
	  MUX_coreFix_memExe_lsq$respLd_2__VAL_2 =
	      coreFix_memExe_forwardQ_data_1[63:0];
    endcase
  end
  assign MUX_coreFix_memExe_memRespLdQ_enqReq_lat_0$wset_1__VAL_2 =
	     { 1'd1,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[152:148],
	       x__h127992 } ;
  assign MUX_coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wset_1__VAL_1 =
	     { 5'd0,
	       coreFix_memExe_lsq$firstSt[141:78],
	       2'd3,
	       (coreFix_memExe_lsq$firstSt[158:157] == 2'd1) ? 3'd3 : 3'd4,
	       coreFix_memExe_lsq$firstSt[76:5],
	       coreFix_memExe_lsq$firstSt[156:153],
	       coreFix_memExe_lsq$firstSt[69] &&
	       coreFix_memExe_lsq$firstSt[70] &&
	       coreFix_memExe_lsq$firstSt[71] &&
	       coreFix_memExe_lsq$firstSt[72] &&
	       coreFix_memExe_lsq$firstSt[73] &&
	       coreFix_memExe_lsq$firstSt[74] &&
	       coreFix_memExe_lsq$firstSt[75] &&
	       coreFix_memExe_lsq$firstSt[76],
	       coreFix_memExe_lsq$firstSt[152:151] } ;
  assign MUX_coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wset_1__VAL_2 =
	     { 5'd0,
	       coreFix_memExe_lsq$firstLd[80:17],
	       84'h92AAAAAAAAAAAAAAAAAAA } ;
  assign MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_1 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
	       ((!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
		 !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) ?
		  { 1'd1,
		    IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2320 } :
		  65'h10000000000000001) :
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2323 ;
  assign MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_2 =
	     { 1'd1,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2320 } ;
  assign MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_3 =
	     { 1'd1,
	       coreFix_memExe_dMem_cache_m_banks_0_processAmo[6] ?
		 curData__h123270 :
		 { {32{x__h124024[31]}}, x__h124024 } } ;
  assign MUX_coreFix_trainBPQ_0$enq_1__VAL_1 =
	     { coreFix_aluExe_0_exeToFinQ$first[146:19],
	       coreFix_aluExe_0_exeToFinQ$first[326:322],
	       coreFix_aluExe_0_exeToFinQ$first[18],
	       coreFix_aluExe_0_exeToFinQ$first[300:277],
	       1'd0,
	       coreFix_aluExe_0_exeToFinQ$first[276] } ;
  assign MUX_coreFix_trainBPQ_0$enq_1__VAL_2 =
	     { coreFix_aluExe_0_exeToFinQ$first[146:19],
	       coreFix_aluExe_0_exeToFinQ$first[326:322],
	       coreFix_aluExe_0_exeToFinQ$first[18],
	       coreFix_aluExe_0_exeToFinQ$first[300:277],
	       1'd1,
	       coreFix_aluExe_0_exeToFinQ$first[276] } ;
  assign MUX_coreFix_trainBPQ_1$enq_1__VAL_1 =
	     { coreFix_aluExe_1_exeToFinQ$first[146:19],
	       coreFix_aluExe_1_exeToFinQ$first[326:322],
	       coreFix_aluExe_1_exeToFinQ$first[18],
	       coreFix_aluExe_1_exeToFinQ$first[300:277],
	       1'd0,
	       coreFix_aluExe_1_exeToFinQ$first[276] } ;
  assign MUX_coreFix_trainBPQ_1$enq_1__VAL_2 =
	     { coreFix_aluExe_1_exeToFinQ$first[146:19],
	       coreFix_aluExe_1_exeToFinQ$first[326:322],
	       coreFix_aluExe_1_exeToFinQ$first[18],
	       coreFix_aluExe_1_exeToFinQ$first[300:277],
	       1'd1,
	       coreFix_aluExe_1_exeToFinQ$first[276] } ;
  assign MUX_csrf_fflags_reg$write_1__VAL_2 =
	     csrf_fflags_reg | fflags__h640705 ;
  always@(IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 or
	  robdeqPort_0_deq_data_BITS_95_TO_32__q262)
  begin
    case (IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454)
      6'd0, 6'd1, 6'd2: MUX_csrf_fs_reg$write_1__VAL_1 = 2'b11;
      default: MUX_csrf_fs_reg$write_1__VAL_1 =
		   robdeqPort_0_deq_data_BITS_95_TO_32__q262[14:13];
    endcase
  end
  assign MUX_csrf_ie_vec_1$write_1__VAL_1 =
	     (rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	      (IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	       6'd8 ||
	       IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	       6'd18)) ?
	       robdeqPort_0_deq_data_BITS_95_TO_32__q262[1] :
	       csrf_prev_ie_vec_1 ;
  assign MUX_csrf_ie_vec_3$write_1__VAL_1 =
	     (rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	      IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd18) ?
	       robdeqPort_0_deq_data_BITS_95_TO_32__q262[3] :
	       csrf_prev_ie_vec_3 ;
  assign MUX_csrf_mepc_csr$write_1__VAL_2 = rob$deqPort_0_deq_data[95:32] ;
  assign MUX_csrf_minstret_ehr_data_lat_1$wset_1__VAL_1 =
	     n__read__h636971 + 64'd1 ;
  assign MUX_csrf_minstret_ehr_data_lat_1$wset_1__VAL_2 =
	     n__read__h636971 + { 62'd0, x__h640953 } ;
  assign MUX_csrf_mpp_reg$write_1__VAL_1 =
	     (rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	      IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd18) ?
	       MUX_csrf_mepc_csr$write_1__VAL_2[12:11] :
	       2'd0 ;
  assign MUX_csrf_mtval_csr$write_1__VAL_1 =
	     commitStage_commitTrap[36] ? 64'd0 : trap_val__h626385 ;
  assign MUX_csrf_mtval_csr$write_1__VAL_2 = rob$deqPort_0_deq_data[95:32] ;
  assign MUX_csrf_prev_ie_vec_1$write_1__VAL_1 =
	     rob$deqPort_0_deq_data[356:352] != 5'd13 ||
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 !=
	     6'd8 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 !=
	     6'd18 ||
	     MUX_csrf_mtval_csr$write_1__VAL_2[5] ;
  assign MUX_csrf_prev_ie_vec_3$write_1__VAL_1 =
	     rob$deqPort_0_deq_data[356:352] != 5'd13 ||
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 !=
	     6'd18 ||
	     MUX_csrf_mtval_csr$write_1__VAL_2[7] ;
  assign MUX_csrf_prv_reg$write_1__VAL_1 =
	     (rob$deqPort_0_deq_data[356:352] == 5'd19) ?
	       x__h636333 :
	       csrf_mpp_reg ;
  assign MUX_csrf_prv_reg$write_1__VAL_2 =
	     csrf_prv_reg_read__2519_ULE_1_4282_AND_IF_comm_ETC___d14321 ?
	       2'd1 :
	       2'd3 ;
  assign MUX_csrf_sepc_csr$write_1__VAL_2 = rob$deqPort_0_deq_data[95:32] ;
  assign MUX_csrf_spp_reg$write_1__VAL_1 =
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     (IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd8 ||
	      IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd18) &&
	     MUX_csrf_sepc_csr$write_1__VAL_2[8] ;
  assign MUX_fetchStage$redirect_1__VAL_3 =
	     csrf_prv_reg_read__2519_ULE_1_4282_AND_IF_comm_ETC___d14321 ?
	       y_avValue_new_pc__h628066 :
	       y_avValue_new_pc__h628252 ;
  always@(rob$deqPort_0_deq_data or
	  next_pc__h636122 or csrf_sepc_csr or csrf_mepc_csr)
  begin
    case (rob$deqPort_0_deq_data[356:352])
      5'd19: MUX_fetchStage$redirect_1__VAL_4 = csrf_sepc_csr;
      5'd20: MUX_fetchStage$redirect_1__VAL_4 = csrf_mepc_csr;
      default: MUX_fetchStage$redirect_1__VAL_4 = next_pc__h636122;
    endcase
  end
  assign MUX_l2Tlb$toChildren_rqFromC_put_1__VAL_1 =
	     { 1'd1,
	       coreFix_memExe_dTlb$toParent_rqToP_first[1:0],
	       coreFix_memExe_dTlb$toParent_rqToP_first[28:2] } ;
  assign MUX_l2Tlb$toChildren_rqFromC_put_1__VAL_2 =
	     { 3'd2, fetchStage$iTlbIfc_toParent_rqToP_first } ;
  assign MUX_mmio_cRqQ_enqReq_lat_0$wset_1__VAL_1 =
	     { 1'd1,
	       mmio_dataReqQ_data_0[141:78],
	       CASE_mmio_dataReqQ_data_0_BITS_77_TO_76_0_mmio_ETC__q263,
	       mmio_dataReqQ_data_0[71:0] } ;
  assign MUX_mmio_cRqQ_enqReq_lat_0$wset_1__VAL_2 =
	     { 1'd1,
	       fetchStage$mmioIfc_instReq_first_fst,
	       5'd2,
	       fetchStage$mmioIfc_instReq_first_snd,
	       72'hAAAAAAAAAAAAAAAAAA } ;
  assign MUX_mmio_dataReqQ_enqReq_lat_0$wset_1__VAL_1 =
	     { 1'd1,
	       coreFix_memExe_lsq$firstSt[141:78],
	       (coreFix_memExe_lsq$firstSt[158:157] == 2'd0) ?
		 6'd42 :
		 { 2'd3, coreFix_memExe_lsq$firstSt[156:153] },
	       coreFix_memExe_lsq$firstSt[76:5] } ;
  assign MUX_mmio_dataReqQ_enqReq_lat_0$wset_1__VAL_2 =
	     { 1'd1,
	       coreFix_memExe_lsq$firstLd[80:17],
	       6'd26,
	       coreFix_memExe_lsq$firstLd[15:0],
	       56'hAAAAAAAAAAAAAA } ;
  assign MUX_rf$write_2_wr_2__VAL_2 =
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[39] ?
	       res_data__h256720 :
	       res_data__h256715 ;
  assign MUX_rf$write_2_wr_2__VAL_3 =
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[39] ?
	       res_data__h302422 :
	       res_data__h302417 ;
  assign MUX_rf$write_2_wr_2__VAL_4 =
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[39] ?
	       res_data__h348117 :
	       res_data__h348112 ;
  assign MUX_rf$write_2_wr_2__VAL_5 =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[33] ?
	       data___1__h393969 :
	       data__h393457 ;
  assign MUX_rf$write_2_wr_2__VAL_6 =
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[33] ?
	       data___1__h394901 :
	       data__h394389 ;
  assign MUX_rf$write_3_wr_2__VAL_4 =
	     coreFix_memExe_lsq$firstLd[100] ?
	       coreFix_memExe_respLrScAmoQ_data_0 :
	       IF_coreFix_memExe_lsq_firstLd__039_BIT_96_104__ETC___d1140 ;
  assign MUX_rf$write_3_wr_2__VAL_5 =
	     coreFix_memExe_lsq$firstLd[100] ?
	       mmio_dataRespQ_data_0[63:0] :
	       IF_coreFix_memExe_lsq_firstLd__039_BIT_96_104__ETC___d1189 ;
  assign MUX_rob$enqPort_0_enq_1__VAL_1 =
	     { (NOT_scaprf_pcc_reg_read_wget__2773_BITS_33_TO__ETC___d12776 ||
		IF_scaprf_pcc_reg_read_wget__2773_BITS_149_TO__ETC___d12812) &&
	       scaprf_pcc_reg_data_rl[152],
	       address__h576951,
	       x__h577269[13:0],
	       scaprf_pcc_reg_data_rl[71:0],
	       repBound__h577231,
	       scaprf_pcc_reg_read_wget__2773_BITS_27_TO_25_2_ETC___d12820,
	       scaprf_pcc_reg_read_wget__2773_BITS_13_TO_11_2_ETC___d12821,
	       _0_CONCAT_fetchStage_pipelines_0_first__2491_BI_ETC___d12830,
	       fetchStage$pipelines_0_first[127:96],
	       fetchStage$pipelines_0_first[199:195],
	       fetchStage$pipelines_0_first[75:69],
	       64'hAAAAAAAAAAAAAAAA,
	       fetchStage$pipelines_0_first[173],
	       IF_fetchStage_pipelines_0_first__2491_BITS_172_ETC___d12688,
	       74'h2500000000000000001,
	       ret_address__h585298,
	       ret_addrBits__h585299,
	       87'h7FFF8FFFFFA20000007E00,
	       fetchStage$pipelines_0_first[75] &&
	       fetchStage$pipelines_0_first[74],
	       fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	       fetchStage$pipelines_0_first[194:192] != 3'd1 &&
	       fetchStage$pipelines_0_first[194:192] != 3'd2 &&
	       fetchStage$pipelines_0_first[194:192] != 3'd3 &&
	       fetchStage$pipelines_0_first[194:192] != 3'd4,
	       NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13914 } ;
  assign MUX_rob$enqPort_0_enq_1__VAL_2 =
	     { (NOT_scaprf_pcc_reg_read_wget__2773_BITS_33_TO__ETC___d12776 ||
		IF_scaprf_pcc_reg_read_wget__2773_BITS_149_TO__ETC___d12812) &&
	       scaprf_pcc_reg_data_rl[152],
	       address__h576951,
	       x__h577269[13:0],
	       scaprf_pcc_reg_data_rl[71:0],
	       repBound__h577231,
	       scaprf_pcc_reg_read_wget__2773_BITS_27_TO_25_2_ETC___d12820,
	       scaprf_pcc_reg_read_wget__2773_BITS_13_TO_11_2_ETC___d12821,
	       _0_CONCAT_fetchStage_pipelines_0_first__2491_BI_ETC___d12830,
	       fetchStage$pipelines_0_first[127:96],
	       fetchStage$pipelines_0_first[199:195],
	       fetchStage$pipelines_0_first[75:69],
	       64'hAAAAAAAAAAAAAAAA,
	       fetchStage$pipelines_0_first[173],
	       IF_fetchStage_pipelines_0_first__2491_BITS_172_ETC___d12688,
	       2'd1,
	       !fetchStage$pipelines_0_first[68] &&
	       (IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[0] ||
		IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[1] ||
		IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[2] ||
		IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[3] ||
		IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[4] ||
		IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[5] ||
		IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[6] ||
		IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[7] ||
		IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[8] ||
		IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[9] ||
		IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[10] ||
		IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[11]),
	       IF_fetchStage_pipelines_0_first__2491_BIT_68_2_ETC___d13007,
	       fetchStage$pipelines_0_first[63:0],
	       3'd1,
	       address__h576951,
	       ret_addrBits__h579466,
	       102'h3FFFC7FFFFD10000003F003521,
	       specTagManager$currentSpecBits } ;
  assign MUX_rob$enqPort_0_enq_1__VAL_3 =
	     { (NOT_scaprf_pcc_reg_read_wget__2773_BITS_33_TO__ETC___d12776 ||
		IF_scaprf_pcc_reg_read_wget__2773_BITS_149_TO__ETC___d12812) &&
	       scaprf_pcc_reg_data_rl[152],
	       address__h576951,
	       x__h577269[13:0],
	       scaprf_pcc_reg_data_rl[71:0],
	       repBound__h577231,
	       scaprf_pcc_reg_read_wget__2773_BITS_27_TO_25_2_ETC___d12820,
	       scaprf_pcc_reg_read_wget__2773_BITS_13_TO_11_2_ETC___d12821,
	       _0_CONCAT_fetchStage_pipelines_0_first__2491_BI_ETC___d12830,
	       fetchStage$pipelines_0_first[127:96],
	       fetchStage$pipelines_0_first[199:195],
	       fetchStage$pipelines_0_first[75:69],
	       64'hAAAAAAAAAAAAAAAA,
	       fetchStage$pipelines_0_first[173],
	       IF_fetchStage_pipelines_0_first__2491_BITS_172_ETC___d12688,
	       71'h4A0000000000000000,
	       _0_CONCAT_1_CONCAT_0_CONCAT_fetchStage_pipeline_ETC___d13151 } ;
  assign MUX_rob$setExecuted_deqLSQ_2__VAL_2 =
	     { 1'd1,
	       CASE_coreFix_memExe_lsqfirstSt_BITS_3_TO_0_0__ETC__q264 } ;
  assign MUX_rob$setExecuted_deqLSQ_2__VAL_6 =
	     { 1'd1,
	       CASE_coreFix_memExe_lsqfirstLd_BITS_6_TO_3_0__ETC__q265 } ;
  assign MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_2 =
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[39] ?
	       coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[4:0] :
	       res_fflags__h256716 ;
  assign MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_3 =
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[39] ?
	       coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[4:0] :
	       res_fflags__h302418 ;
  assign MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_4 =
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[39] ?
	       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[4:0] :
	       res_fflags__h348113 ;

  // inlined wires
  assign csrf_minstret_ehr_data_lat_0$whas =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd31 ;
  assign csrf_minstret_ehr_data_lat_1$whas =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ||
	     WILL_FIRE_RL_commitStage_doCommitNormalInst ;
  assign csrf_mcycle_ehr_data_lat_0$wget = rob$deqPort_0_deq_data[95:32] ;
  assign csrf_mcycle_ehr_data_lat_0$whas =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd30 ;
  assign scaprf_pcc_reg_data_lat_0$whas =
	     WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	     rob$deqPort_0_canDeq &&
	     rob$deqPort_0_deq_data[196:195] == 2'd0 ;
  assign scaprf_pcc_reg_data_lat_1$whas =
	     WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	     rob$deqPort_1_canDeq &&
	     rob$deqPort_1_deq_data[25] &&
	     !rob$deqPort_1_deq_data[18] &&
	     !rob$deqPort_1_deq_data[266] &&
	     rob$deqPort_1_deq_data[356:352] != 5'd0 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd21 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd17 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd18 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd13 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd16 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd15 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd19 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd20 &&
	     rob$deqPort_1_deq_data[196:195] == 2'd0 ;
  assign csrInstOrInterruptInflight_lat_0$whas =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     commitStage_commitTrap[36] ;
  assign csrInstOrInterruptInflight_lat_1$whas =
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	     fetchStage$pipelines_0_first[199:195] == 5'd13 ||
	     MUX_csrInstOrInterruptInflight_lat_1$wset_1__SEL_2 ;
  assign mmio_dataReqQ_enqReq_lat_0$wget =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue ?
	       MUX_mmio_dataReqQ_enqReq_lat_0$wset_1__VAL_1 :
	       MUX_mmio_dataReqQ_enqReq_lat_0$wset_1__VAL_2 ;
  assign mmio_dataReqQ_enqReq_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue ;
  assign mmio_dataRespQ_enqReq_lat_0$wget = { 1'd1, mmio_pRsQ_data_0[64:0] } ;
  assign mmio_dataRespQ_deqReq_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ;
  assign mmio_dataPendQ_enqReq_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue ;
  assign mmio_cRqQ_enqReq_lat_0$wget =
	     WILL_FIRE_RL_mmio_sendDataReq ?
	       MUX_mmio_cRqQ_enqReq_lat_0$wset_1__VAL_1 :
	       MUX_mmio_cRqQ_enqReq_lat_0$wset_1__VAL_2 ;
  assign mmio_cRqQ_enqReq_lat_0$whas =
	     WILL_FIRE_RL_mmio_sendDataReq || WILL_FIRE_RL_mmio_sendInstReq ;
  assign mmio_pRsQ_enqReq_lat_0$wget = { 1'd1, mmioToPlatform_pRs_enq_x } ;
  assign mmio_pRsQ_deqReq_lat_0$whas =
	     WILL_FIRE_RL_mmio_sendInstResp ||
	     WILL_FIRE_RL_mmio_sendDataResp ;
  assign mmio_pRqQ_enqReq_lat_0$wget =
	     { 1'd1,
	       mmioToPlatform_pRq_enq_x[38],
	       CASE_mmioToPlatform_pRq_enq_x_BITS_37_TO_36_0__ETC__q266,
	       mmioToPlatform_pRq_enq_x[31:0] } ;
  assign mmio_cRsQ_enqReq_lat_0$wget =
	     { 1'd1, csrf_software_int_pend_vec_3 } ;
  assign coreFix_globalSpecUpdate_correctSpecTag_0$whas =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F &&
	     coreFix_aluExe_0_exeToFinQ$first[16] ;
  assign coreFix_globalSpecUpdate_correctSpecTag_1$whas =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F &&
	     coreFix_aluExe_1_exeToFinQ$first[16] ;
  assign coreFix_aluExe_0_bypassWire_0$wget =
	     { coreFix_aluExe_0_regToExeQ$first[348:342],
	       basicExec___d12338[321:258] } ;
  assign coreFix_aluExe_0_bypassWire_0$whas =
	     WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu &&
	     coreFix_aluExe_0_regToExeQ$first[349] ;
  assign coreFix_aluExe_0_bypassWire_1$wget =
	     { coreFix_aluExe_1_regToExeQ$first[348:342],
	       basicExec___d11664[321:258] } ;
  assign coreFix_aluExe_0_bypassWire_1$whas =
	     WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu &&
	     coreFix_aluExe_1_regToExeQ$first[349] ;
  assign coreFix_aluExe_0_bypassWire_2$wget =
	     { coreFix_aluExe_0_exeToFinQ$first[320:314],
	       coreFix_aluExe_0_exeToFinQ$first[275:212] } ;
  assign coreFix_aluExe_0_bypassWire_2$whas =
	     _dor1coreFix_aluExe_0_bypassWire_2$EN_wset &&
	     coreFix_aluExe_0_exeToFinQ$first[321] ;
  assign coreFix_aluExe_0_bypassWire_3$wget =
	     { coreFix_aluExe_1_exeToFinQ$first[320:314],
	       coreFix_aluExe_1_exeToFinQ$first[275:212] } ;
  assign coreFix_aluExe_0_bypassWire_3$whas =
	     _dor1coreFix_aluExe_0_bypassWire_3$EN_wset &&
	     coreFix_aluExe_1_exeToFinQ$first[321] ;
  assign coreFix_aluExe_1_bypassWire_2$whas =
	     _dor1coreFix_aluExe_1_bypassWire_2$EN_wset &&
	     coreFix_aluExe_0_exeToFinQ$first[321] ;
  assign coreFix_aluExe_1_bypassWire_3$whas =
	     _dor1coreFix_aluExe_1_bypassWire_3$EN_wset &&
	     coreFix_aluExe_1_exeToFinQ$first[321] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_2$whas =
	     _dor1coreFix_fpuMulDivExe_0_bypassWire_2$EN_wset &&
	     coreFix_aluExe_0_exeToFinQ$first[321] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_3$whas =
	     _dor1coreFix_fpuMulDivExe_0_bypassWire_3$EN_wset &&
	     coreFix_aluExe_1_exeToFinQ$first[321] ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_newReq$whas =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd3 &&
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] == 2'd0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] == 2'd1) &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[226:225] == 2'd0 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_newReq$whas =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd3 &&
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] == 2'd0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] == 2'd1) &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[226:225] == 2'd1 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_newReq$whas =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd3 &&
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] == 2'd0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] == 2'd1) &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[226:225] != 2'd0 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[226:225] != 2'd1 ;
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[226:225])
      2'd0, 2'd1:
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$wget =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[226:225];
      default: coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$wget = 2'd2;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$whas =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd3 &&
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] == 2'd0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] == 2'd1) ;
  assign coreFix_memExe_bypassWire_2$whas =
	     _dor1coreFix_memExe_bypassWire_2$EN_wset &&
	     coreFix_aluExe_0_exeToFinQ$first[321] ;
  assign coreFix_memExe_bypassWire_3$whas =
	     _dor1coreFix_memExe_bypassWire_3$EN_wset &&
	     coreFix_aluExe_1_exeToFinQ$first[321] ;
  assign coreFix_memExe_issueLd$wget =
	     { coreFix_memExe_dTlb$procResp[89:85],
	       coreFix_memExe_dTlb$procResp[174:111],
	       coreFix_memExe_dTlb$procResp[84:77] } ;
  assign coreFix_memExe_issueLd$whas =
	     WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	     coreFix_memExe_dTlb_procResp__485_BITS_105_TO__ETC___d1639 ;
  assign coreFix_memExe_reqLdQ_data_0_lat_0$wget =
	     MUX_coreFix_memExe_reqLdQ_data_0_lat_0$wset_1__SEL_1 ?
	       coreFix_memExe_issueLd$wget[76:8] :
	       coreFix_memExe_lsq$getIssueLd[76:8] ;
  assign coreFix_memExe_reqLdQ_data_0_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd0 ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd0 ;
  assign coreFix_memExe_reqLdQ_empty_lat_0$whas =
	     _dor1coreFix_memExe_reqLdQ_empty_lat_0$EN_wset &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd0 ;
  assign coreFix_memExe_reqLdQ_full_lat_0$whas =
	     _dor1coreFix_memExe_reqLdQ_full_lat_0$EN_wset &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd0 ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue ?
	       MUX_coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wset_1__VAL_1 :
	       MUX_coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wset_1__VAL_2 ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue ;
  assign coreFix_memExe_reqStQ_data_0_lat_0$wget =
	     { coreFix_memExe_stb$issue[635:576], 6'd0 } ;
  assign coreFix_memExe_forwardQ_enqReq_lat_0$wget =
	     MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__SEL_1 ?
	       MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__VAL_1 :
	       MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__VAL_2 ;
  assign coreFix_memExe_forwardQ_enqReq_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd0 &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd1 ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd0 &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd1 ;
  assign coreFix_memExe_memRespLdQ_enqReq_lat_0$wget =
	     MUX_coreFix_memExe_lsq$getHit_1__SEL_1 ?
	       MUX_coreFix_memExe_memRespLdQ_enqReq_lat_0$wset_1__VAL_2 :
	       MUX_coreFix_memExe_memRespLdQ_enqReq_lat_0$wset_1__VAL_2 ;
  assign coreFix_memExe_memRespLdQ_enqReq_lat_0$whas =
	     MUX_coreFix_memExe_lsq$getHit_1__SEL_1 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 ;
  always@(MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__SEL_1 or
	  MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__SEL_2 or
	  MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_2 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo or
	  MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__SEL_1:
	  coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wget =
	      MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_1;
      MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__SEL_2:
	  coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wget =
	      MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_2;
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo:
	  coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wget =
	      MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_3;
      default: coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wget =
		   65'h0AAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_respLrScAmoQ_enqReq_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2318 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd2 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3) ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo ;
  assign coreFix_memExe_respLrScAmoQ_deqReq_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;
  always@(WILL_FIRE_RL_coreFix_memExe_sendLrScAmoToMem or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_1 or
	  WILL_FIRE_RL_coreFix_memExe_sendLdToMem or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_2 or
	  WILL_FIRE_RL_coreFix_memExe_sendStToMem or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_memExe_sendLrScAmoToMem:
	  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_1;
      WILL_FIRE_RL_coreFix_memExe_sendLdToMem:
	  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_2;
      WILL_FIRE_RL_coreFix_memExe_sendStToMem:
	  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_3;
      default: coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget =
		   153'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_sendLrScAmoToMem ||
	     WILL_FIRE_RL_coreFix_memExe_sendLdToMem ||
	     WILL_FIRE_RL_coreFix_memExe_sendStToMem ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wget =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq ?
	       MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wset_1__VAL_1 :
	       MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wset_1__VAL_2 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_lat_0$wget =
	     { 1'd1,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getRq[147:84],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getSlot[55:54],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getRq[83:82],
	       1'd1,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getSlot[58:56] } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget =
	     { 1'd1, dCacheToParent_fromP_enq_x } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$wget =
	     { 1'd1,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc[2:0] } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788 &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_pi_ETC___d2395 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	       3'd1) &&
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2399) ;
  always@(MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__SEL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__VAL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__SEL_2 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__VAL_2 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__SEL_1:
	  coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wget =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__VAL_1;
      MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__SEL_2:
	  coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wget =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__VAL_2;
      MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__SEL_3:
	  coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wget =
	      59'h2AAAAAAAAAAAAAA;
      default: coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wget =
		   59'h2AAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2335 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd2 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3) ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d2547 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_deqEn$whas =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqMulPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul ;
  assign coreFix_memExe_reqLrScAmoQ_enqP_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_sendLrScAmoToMem ||
	     WILL_FIRE_RL_coreFix_memExe_sendStToMem ||
	     WILL_FIRE_RL_coreFix_memExe_sendLdToMem ;

  // register commitStage_commitTrap
  assign commitStage_commitTrap$D_IN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle ?
	       265'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       MUX_commitStage_commitTrap$write_1__VAL_2 ;
  assign commitStage_commitTrap$EN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;

  // register commitStage_rg_serial_num
  assign commitStage_rg_serial_num$D_IN =
	     MUX_commitStage_rg_serial_num$write_1__SEL_1 ?
	       MUX_commitStage_rg_serial_num$write_1__VAL_1 :
	       MUX_commitStage_rg_serial_num$write_1__VAL_2 ;
  assign commitStage_rg_serial_num$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle ||
	     WILL_FIRE_RL_commitStage_doCommitNormalInst ;

  // register coreFix_doStatsReg
  assign coreFix_doStatsReg$D_IN = 1'b0 ;
  assign coreFix_doStatsReg$EN = 1'b0 ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt$D_IN =
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt + 4'd1 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt$EN =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_doInit ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init$D_IN = 1'd1 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init$EN =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_doInit &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt == 4'd15 ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready$D_IN = 1'd1 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready$EN = 1'd1 ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit$D_IN =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$whas ?
	       v__h524884 :
	       v__h523816 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit$EN = 1'd1 ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_0
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_0$D_IN =
	     { coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_newReq$whas,
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10763[127:0] } ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_0$EN =
	     1'd1 ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1$D_IN =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_0 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1$EN =
	     1'd1 ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_0
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_0$D_IN =
	     { coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_newReq$whas,
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10750[127:0] } ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_0$EN =
	     1'd1 ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1$D_IN =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_0 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1$EN =
	     1'd1 ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_0
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_0$D_IN =
	     { coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_newReq$whas,
	       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10756[127:0] } ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_0$EN =
	     1'd1 ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1$D_IN =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_0 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1$EN =
	     1'd1 ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0$D_IN =
	     { coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$whas,
	       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$wget } ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0$EN = 1'd1 ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1$D_IN =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl$D_IN =
	     1'd0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl$EN =
	     1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1$D_IN ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ==
	     3'd0 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d2769 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$whas ?
	       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$wget[2:0] :
	       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl[2:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ==
	     3'd1 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d2769 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1$D_IN ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ==
	     3'd2 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d2769 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1$D_IN ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ==
	     3'd3 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d2769 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1$D_IN ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ==
	     3'd4 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d2769 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1$D_IN ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ==
	     3'd5 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d2769 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1$D_IN ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ==
	     3'd6 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d2769 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1$D_IN ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ==
	     3'd7 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d2769 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl ?
	       3'd0 :
	       _theResult_____2__h224782 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl$D_IN =
	     1'd0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl$EN =
	     1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl ||
	     IF_IF_coreFix_memExe_dMem_cache_m_banks_0_cRqR_ETC___d2808 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl ?
	       3'd0 :
	       v__h224238 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl$D_IN =
	     4'b0010 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl$EN =
	     1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full$D_IN =
	     !coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl &&
	     IF_IF_coreFix_memExe_dMem_cache_m_banks_0_cRqR_ETC___d2799 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0$D_IN =
	     { IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d2898 ||
	       (EN_dCacheToParent_fromP_enq ?
		  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget[582] :
		  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl[582]),
	       IF_IF_coreFix_memExe_dMem_cache_m_banks_0_from_ETC___d2964 } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP == 1'd0 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d2863 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0$D_IN ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP == 1'd1 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d2863 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP$D_IN =
	     !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl &&
	     _theResult_____2__h231351 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl ||
	     IF_IF_coreFix_memExe_dMem_cache_m_banks_0_from_ETC___d2882 &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d2898 &&
	     (IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d2876 ||
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP$D_IN =
	     !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl &&
	     v__h226258 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl$D_IN =
	     584'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full$D_IN =
	     !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl &&
	     IF_IF_coreFix_memExe_dMem_cache_m_banks_0_from_ETC___d2891 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl$D_IN =
	     { IF_coreFix_memExe_dMem_cache_m_banks_0_linkAdd_ETC___d2745,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_linkAdd_ETC___d2753 } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_processAmo
  always@(MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__SEL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__VAL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__SEL_2 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__VAL_2 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__SEL_1:
	  coreFix_memExe_dMem_cache_m_banks_0_processAmo$D_IN =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__VAL_1;
      MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__SEL_2:
	  coreFix_memExe_dMem_cache_m_banks_0_processAmo$D_IN =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__VAL_2;
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo:
	  coreFix_memExe_dMem_cache_m_banks_0_processAmo$D_IN =
	      161'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
      default: coreFix_memExe_dMem_cache_m_banks_0_processAmo$D_IN =
		   161'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_dMem_cache_m_banks_0_processAmo$EN =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__SEL_1 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd4 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget :
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl$D_IN =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new ||
	     !coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_lat_0$whas &&
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl$D_IN =
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_lat_0$whas ||
	      coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0$D_IN =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP ?
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_lat_0$wget[71:0] :
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl[71:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP == 1'd0 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3022 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1$D_IN =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP ?
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_lat_0$wget[71:0] :
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl[71:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP == 1'd1 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3022 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP$D_IN =
	     !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl &&
	     _theResult_____2__h236020 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl ||
	     IF_IF_coreFix_memExe_dMem_cache_m_banks_0_rqTo_ETC___d3061 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP$D_IN =
	     !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl &&
	     v__h235345 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl$D_IN =
	     73'h0AAAAAAAAAAAAAAAAAA ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full$D_IN =
	     !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl &&
	     IF_IF_coreFix_memExe_dMem_cache_m_banks_0_rqTo_ETC___d3050 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0$D_IN =
	     { x_addr__h238156,
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$whas ?
		 coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wget[514:513] :
		 coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl[514:513],
	       IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3141 ||
	       (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$whas ?
		  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wget[512] :
		  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl[512]),
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$whas ?
		 coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wget[511:0] :
		 coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl[511:0] } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP == 1'd0 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3106 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0$D_IN ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP == 1'd1 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3106 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP$D_IN =
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl &&
	     _theResult_____2__h242447 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl ||
	     IF_IF_coreFix_memExe_dMem_cache_m_banks_0_rsTo_ETC___d3126 &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3141 &&
	     (IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3119 ||
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP$D_IN =
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl &&
	     v__h237794 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl$D_IN =
	     580'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full$D_IN =
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl &&
	     IF_IF_coreFix_memExe_dMem_cache_m_banks_0_rsTo_ETC___d3134 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full$EN = 1'd1 ;

  // register coreFix_memExe_dMem_perfReqQ_clearReq_rl
  assign coreFix_memExe_dMem_perfReqQ_clearReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_dMem_perfReqQ_clearReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_perfReqQ_data_0
  assign coreFix_memExe_dMem_perfReqQ_data_0$D_IN =
	     coreFix_memExe_dMem_perfReqQ_enqReq_rl[3:0] ;
  assign coreFix_memExe_dMem_perfReqQ_data_0$EN =
	     !coreFix_memExe_dMem_perfReqQ_clearReq_rl &&
	     coreFix_memExe_dMem_perfReqQ_enqReq_rl[4] ;

  // register coreFix_memExe_dMem_perfReqQ_deqReq_rl
  assign coreFix_memExe_dMem_perfReqQ_deqReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_dMem_perfReqQ_deqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_perfReqQ_empty
  assign coreFix_memExe_dMem_perfReqQ_empty$D_IN =
	     coreFix_memExe_dMem_perfReqQ_clearReq_rl ||
	     !coreFix_memExe_dMem_perfReqQ_enqReq_rl[4] &&
	     (coreFix_memExe_dMem_perfReqQ_deqReq_rl ||
	      coreFix_memExe_dMem_perfReqQ_empty) ;
  assign coreFix_memExe_dMem_perfReqQ_empty$EN = 1'd1 ;

  // register coreFix_memExe_dMem_perfReqQ_enqReq_rl
  assign coreFix_memExe_dMem_perfReqQ_enqReq_rl$D_IN = 5'b01010 ;
  assign coreFix_memExe_dMem_perfReqQ_enqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_perfReqQ_full
  assign coreFix_memExe_dMem_perfReqQ_full$D_IN =
	     !coreFix_memExe_dMem_perfReqQ_clearReq_rl &&
	     (coreFix_memExe_dMem_perfReqQ_enqReq_rl[4] ||
	      !coreFix_memExe_dMem_perfReqQ_deqReq_rl &&
	      coreFix_memExe_dMem_perfReqQ_full) ;
  assign coreFix_memExe_dMem_perfReqQ_full$EN = 1'd1 ;

  // register coreFix_memExe_forwardQ_clearReq_rl
  assign coreFix_memExe_forwardQ_clearReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_forwardQ_clearReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_forwardQ_data_0
  assign coreFix_memExe_forwardQ_data_0$D_IN =
	     coreFix_memExe_forwardQ_enqReq_lat_0$whas ?
	       coreFix_memExe_forwardQ_enqReq_lat_0$wget[68:0] :
	       coreFix_memExe_forwardQ_enqReq_rl[68:0] ;
  assign coreFix_memExe_forwardQ_data_0$EN =
	     coreFix_memExe_forwardQ_enqP == 1'd0 &&
	     !coreFix_memExe_forwardQ_clearReq_rl &&
	     IF_coreFix_memExe_forwardQ_enqReq_lat_1_whas___ETC___d3393 ;

  // register coreFix_memExe_forwardQ_data_1
  assign coreFix_memExe_forwardQ_data_1$D_IN =
	     coreFix_memExe_forwardQ_enqReq_lat_0$whas ?
	       coreFix_memExe_forwardQ_enqReq_lat_0$wget[68:0] :
	       coreFix_memExe_forwardQ_enqReq_rl[68:0] ;
  assign coreFix_memExe_forwardQ_data_1$EN =
	     coreFix_memExe_forwardQ_enqP == 1'd1 &&
	     !coreFix_memExe_forwardQ_clearReq_rl &&
	     IF_coreFix_memExe_forwardQ_enqReq_lat_1_whas___ETC___d3393 ;

  // register coreFix_memExe_forwardQ_deqP
  assign coreFix_memExe_forwardQ_deqP$D_IN =
	     !coreFix_memExe_forwardQ_clearReq_rl &&
	     _theResult_____2__h251943 ;
  assign coreFix_memExe_forwardQ_deqP$EN = 1'd1 ;

  // register coreFix_memExe_forwardQ_deqReq_rl
  assign coreFix_memExe_forwardQ_deqReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_forwardQ_deqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_forwardQ_empty
  assign coreFix_memExe_forwardQ_empty$D_IN =
	     coreFix_memExe_forwardQ_clearReq_rl ||
	     IF_IF_coreFix_memExe_forwardQ_deqReq_lat_1_wha_ETC___d3430 ;
  assign coreFix_memExe_forwardQ_empty$EN = 1'd1 ;

  // register coreFix_memExe_forwardQ_enqP
  assign coreFix_memExe_forwardQ_enqP$D_IN =
	     !coreFix_memExe_forwardQ_clearReq_rl && v__h251547 ;
  assign coreFix_memExe_forwardQ_enqP$EN = 1'd1 ;

  // register coreFix_memExe_forwardQ_enqReq_rl
  assign coreFix_memExe_forwardQ_enqReq_rl$D_IN = 70'h0AAAAAAAAAAAAAAAAA ;
  assign coreFix_memExe_forwardQ_enqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_forwardQ_full
  assign coreFix_memExe_forwardQ_full$D_IN =
	     !coreFix_memExe_forwardQ_clearReq_rl &&
	     IF_IF_coreFix_memExe_forwardQ_deqReq_lat_1_wha_ETC___d3420 ;
  assign coreFix_memExe_forwardQ_full$EN = 1'd1 ;

  // register coreFix_memExe_memRespLdQ_clearReq_rl
  assign coreFix_memExe_memRespLdQ_clearReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_memRespLdQ_clearReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_memRespLdQ_data_0
  assign coreFix_memExe_memRespLdQ_data_0$D_IN =
	     coreFix_memExe_memRespLdQ_enqReq_lat_0$whas ?
	       coreFix_memExe_memRespLdQ_enqReq_lat_0$wget[68:0] :
	       coreFix_memExe_memRespLdQ_enqReq_rl[68:0] ;
  assign coreFix_memExe_memRespLdQ_data_0$EN =
	     coreFix_memExe_memRespLdQ_enqP == 1'd0 &&
	     !coreFix_memExe_memRespLdQ_clearReq_rl &&
	     IF_coreFix_memExe_memRespLdQ_enqReq_lat_1_whas_ETC___d3311 ;

  // register coreFix_memExe_memRespLdQ_data_1
  assign coreFix_memExe_memRespLdQ_data_1$D_IN =
	     coreFix_memExe_memRespLdQ_enqReq_lat_0$whas ?
	       coreFix_memExe_memRespLdQ_enqReq_lat_0$wget[68:0] :
	       coreFix_memExe_memRespLdQ_enqReq_rl[68:0] ;
  assign coreFix_memExe_memRespLdQ_data_1$EN =
	     coreFix_memExe_memRespLdQ_enqP == 1'd1 &&
	     !coreFix_memExe_memRespLdQ_clearReq_rl &&
	     IF_coreFix_memExe_memRespLdQ_enqReq_lat_1_whas_ETC___d3311 ;

  // register coreFix_memExe_memRespLdQ_deqP
  assign coreFix_memExe_memRespLdQ_deqP$D_IN =
	     !coreFix_memExe_memRespLdQ_clearReq_rl &&
	     _theResult_____2__h250043 ;
  assign coreFix_memExe_memRespLdQ_deqP$EN = 1'd1 ;

  // register coreFix_memExe_memRespLdQ_deqReq_rl
  assign coreFix_memExe_memRespLdQ_deqReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_memRespLdQ_deqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_memRespLdQ_empty
  assign coreFix_memExe_memRespLdQ_empty$D_IN =
	     coreFix_memExe_memRespLdQ_clearReq_rl ||
	     IF_IF_coreFix_memExe_memRespLdQ_deqReq_lat_1_w_ETC___d3348 ;
  assign coreFix_memExe_memRespLdQ_empty$EN = 1'd1 ;

  // register coreFix_memExe_memRespLdQ_enqP
  assign coreFix_memExe_memRespLdQ_enqP$D_IN =
	     !coreFix_memExe_memRespLdQ_clearReq_rl && v__h249647 ;
  assign coreFix_memExe_memRespLdQ_enqP$EN = 1'd1 ;

  // register coreFix_memExe_memRespLdQ_enqReq_rl
  assign coreFix_memExe_memRespLdQ_enqReq_rl$D_IN = 70'h0AAAAAAAAAAAAAAAAA ;
  assign coreFix_memExe_memRespLdQ_enqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_memRespLdQ_full
  assign coreFix_memExe_memRespLdQ_full$D_IN =
	     !coreFix_memExe_memRespLdQ_clearReq_rl &&
	     IF_IF_coreFix_memExe_memRespLdQ_deqReq_lat_1_w_ETC___d3338 ;
  assign coreFix_memExe_memRespLdQ_full$EN = 1'd1 ;

  // register coreFix_memExe_reqLdQ_data_0_rl
  assign coreFix_memExe_reqLdQ_data_0_rl$D_IN =
	     coreFix_memExe_reqLdQ_data_0_lat_0$whas ?
	       coreFix_memExe_reqLdQ_data_0_lat_0$wget :
	       coreFix_memExe_reqLdQ_data_0_rl ;
  assign coreFix_memExe_reqLdQ_data_0_rl$EN = 1'd1 ;

  // register coreFix_memExe_reqLdQ_empty_rl
  assign coreFix_memExe_reqLdQ_empty_rl$D_IN =
	     WILL_FIRE_RL_coreFix_memExe_sendLdToMem ||
	     !coreFix_memExe_reqLdQ_empty_lat_0$whas &&
	     coreFix_memExe_reqLdQ_empty_rl ;
  assign coreFix_memExe_reqLdQ_empty_rl$EN = 1'd1 ;

  // register coreFix_memExe_reqLdQ_full_rl
  assign coreFix_memExe_reqLdQ_full_rl$D_IN =
	     !WILL_FIRE_RL_coreFix_memExe_sendLdToMem &&
	     (coreFix_memExe_reqLdQ_full_lat_0$whas ||
	      coreFix_memExe_reqLdQ_full_rl) ;
  assign coreFix_memExe_reqLdQ_full_rl$EN = 1'd1 ;

  // register coreFix_memExe_reqLrScAmoQ_data_0_rl
  assign coreFix_memExe_reqLrScAmoQ_data_0_rl$D_IN =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_1 ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_rl$EN = 1'd1 ;

  // register coreFix_memExe_reqLrScAmoQ_empty_rl
  assign coreFix_memExe_reqLrScAmoQ_empty_rl$D_IN =
	     CAN_FIRE_RL_coreFix_memExe_sendLrScAmoToMem ||
	     !coreFix_memExe_reqLrScAmoQ_enqP_lat_0$whas &&
	     coreFix_memExe_reqLrScAmoQ_empty_rl ;
  assign coreFix_memExe_reqLrScAmoQ_empty_rl$EN = 1'd1 ;

  // register coreFix_memExe_reqLrScAmoQ_full_rl
  assign coreFix_memExe_reqLrScAmoQ_full_rl$D_IN =
	     !CAN_FIRE_RL_coreFix_memExe_sendLrScAmoToMem &&
	     (coreFix_memExe_reqLrScAmoQ_enqP_lat_0$whas ||
	      coreFix_memExe_reqLrScAmoQ_full_rl) ;
  assign coreFix_memExe_reqLrScAmoQ_full_rl$EN = 1'd1 ;

  // register coreFix_memExe_reqStQ_data_0_rl
  assign coreFix_memExe_reqStQ_data_0_rl$D_IN =
	     CAN_FIRE_RL_coreFix_memExe_doIssueSB ?
	       coreFix_memExe_reqStQ_data_0_lat_0$wget :
	       coreFix_memExe_reqStQ_data_0_rl ;
  assign coreFix_memExe_reqStQ_data_0_rl$EN = 1'd1 ;

  // register coreFix_memExe_reqStQ_empty_rl
  assign coreFix_memExe_reqStQ_empty_rl$D_IN =
	     WILL_FIRE_RL_coreFix_memExe_sendStToMem ||
	     !CAN_FIRE_RL_coreFix_memExe_doIssueSB &&
	     coreFix_memExe_reqStQ_empty_rl ;
  assign coreFix_memExe_reqStQ_empty_rl$EN = 1'd1 ;

  // register coreFix_memExe_reqStQ_full_rl
  assign coreFix_memExe_reqStQ_full_rl$D_IN =
	     !WILL_FIRE_RL_coreFix_memExe_sendStToMem &&
	     (CAN_FIRE_RL_coreFix_memExe_doIssueSB ||
	      coreFix_memExe_reqStQ_full_rl) ;
  assign coreFix_memExe_reqStQ_full_rl$EN = 1'd1 ;

  // register coreFix_memExe_respLrScAmoQ_clearReq_rl
  assign coreFix_memExe_respLrScAmoQ_clearReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_respLrScAmoQ_clearReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_respLrScAmoQ_data_0
  assign coreFix_memExe_respLrScAmoQ_data_0$D_IN =
	     coreFix_memExe_respLrScAmoQ_enqReq_lat_0$whas ?
	       coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wget[63:0] :
	       coreFix_memExe_respLrScAmoQ_enqReq_rl[63:0] ;
  assign coreFix_memExe_respLrScAmoQ_data_0$EN =
	     !coreFix_memExe_respLrScAmoQ_clearReq_rl &&
	     IF_coreFix_memExe_respLrScAmoQ_enqReq_lat_1_wh_ETC___d3247 ;

  // register coreFix_memExe_respLrScAmoQ_deqReq_rl
  assign coreFix_memExe_respLrScAmoQ_deqReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_respLrScAmoQ_deqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_respLrScAmoQ_empty
  assign coreFix_memExe_respLrScAmoQ_empty$D_IN =
	     coreFix_memExe_respLrScAmoQ_clearReq_rl ||
	     (coreFix_memExe_respLrScAmoQ_enqReq_lat_0$whas ?
		!coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wget[64] :
		!coreFix_memExe_respLrScAmoQ_enqReq_rl[64]) &&
	     (coreFix_memExe_respLrScAmoQ_deqReq_lat_0$whas ||
	      coreFix_memExe_respLrScAmoQ_deqReq_rl ||
	      coreFix_memExe_respLrScAmoQ_empty) ;
  assign coreFix_memExe_respLrScAmoQ_empty$EN = 1'd1 ;

  // register coreFix_memExe_respLrScAmoQ_enqReq_rl
  assign coreFix_memExe_respLrScAmoQ_enqReq_rl$D_IN = 65'h0AAAAAAAAAAAAAAAA ;
  assign coreFix_memExe_respLrScAmoQ_enqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_respLrScAmoQ_full
  assign coreFix_memExe_respLrScAmoQ_full$D_IN =
	     !coreFix_memExe_respLrScAmoQ_clearReq_rl &&
	     (IF_coreFix_memExe_respLrScAmoQ_enqReq_lat_1_wh_ETC___d3247 ||
	      !coreFix_memExe_respLrScAmoQ_deqReq_lat_0$whas &&
	      !coreFix_memExe_respLrScAmoQ_deqReq_rl &&
	      coreFix_memExe_respLrScAmoQ_full) ;
  assign coreFix_memExe_respLrScAmoQ_full$EN = 1'd1 ;

  // register coreFix_memExe_waitLrScAmoMMIOResp
  always@(MUX_coreFix_memExe_waitLrScAmoMMIOResp$write_1__SEL_1 or
	  WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue or
	  WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue or
	  WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue or
	  WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_memExe_waitLrScAmoMMIOResp$write_1__SEL_1:
	  coreFix_memExe_waitLrScAmoMMIOResp$D_IN = 3'd0;
      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue:
	  coreFix_memExe_waitLrScAmoMMIOResp$D_IN = 3'd4;
      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue:
	  coreFix_memExe_waitLrScAmoMMIOResp$D_IN = 3'd2;
      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue:
	  coreFix_memExe_waitLrScAmoMMIOResp$D_IN = 3'd6;
      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue:
	  coreFix_memExe_waitLrScAmoMMIOResp$D_IN = 3'd7;
      default: coreFix_memExe_waitLrScAmoMMIOResp$D_IN =
		   3'b010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_waitLrScAmoMMIOResp$EN =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue ;

  // register csrInstOrInterruptInflight_rl
  assign csrInstOrInterruptInflight_rl$D_IN =
	     csrInstOrInterruptInflight_lat_1$whas ?
	       1'd1 :
	       (csrInstOrInterruptInflight_lat_0$whas ?
		  1'd0 :
		  csrInstOrInterruptInflight_rl) ;
  assign csrInstOrInterruptInflight_rl$EN = 1'd1 ;

  // register csrf_external_int_en_vec_0
  assign csrf_external_int_en_vec_0$D_IN = 1'b0 ;
  assign csrf_external_int_en_vec_0$EN = 1'b0 ;

  // register csrf_external_int_en_vec_1
  assign csrf_external_int_en_vec_1$D_IN =
	     csrf_mcycle_ehr_data_lat_0$wget[9] ;
  assign csrf_external_int_en_vec_1$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     (IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd9 ||
	      IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd22) ;

  // register csrf_external_int_en_vec_3
  assign csrf_external_int_en_vec_3$D_IN =
	     csrf_mcycle_ehr_data_lat_0$wget[11] ;
  assign csrf_external_int_en_vec_3$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd22 ;

  // register csrf_external_int_pend_vec_0
  assign csrf_external_int_pend_vec_0$D_IN = 1'b0 ;
  assign csrf_external_int_pend_vec_0$EN = 1'b0 ;

  // register csrf_external_int_pend_vec_1
  assign csrf_external_int_pend_vec_1$D_IN =
	     MUX_csrf_external_int_pend_vec_1$write_1__SEL_1 ?
	       csrf_mcycle_ehr_data_lat_0$wget[9] :
	       setSEIP_v ;
  assign csrf_external_int_pend_vec_1$EN =
	     MUX_csrf_external_int_pend_vec_1$write_1__SEL_1 || EN_setSEIP ;

  // register csrf_external_int_pend_vec_3
  assign csrf_external_int_pend_vec_3$D_IN = setMEIP_v ;
  assign csrf_external_int_pend_vec_3$EN = EN_setMEIP ;

  // register csrf_fflags_reg
  assign csrf_fflags_reg$D_IN =
	     MUX_csrf_fflags_reg$write_1__SEL_1 ?
	       csrf_mcycle_ehr_data_lat_0$wget[4:0] :
	       MUX_csrf_fflags_reg$write_1__VAL_2 ;
  assign csrf_fflags_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     (IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd0 ||
	      IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd2) ||
	     WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	     NOT_IF_NOT_rob_deqPort_0_canDeq__4671_4672_OR__ETC___d14896 ;

  // register csrf_frm_reg
  assign csrf_frm_reg$D_IN =
	     (IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd1) ?
	       csrf_mcycle_ehr_data_lat_0$wget[2:0] :
	       csrf_mcycle_ehr_data_lat_0$wget[7:5] ;
  assign csrf_frm_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     (IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd1 ||
	      IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd2) ;

  // register csrf_fs_reg
  assign csrf_fs_reg$D_IN =
	     MUX_csrf_fs_reg$write_1__SEL_1 ?
	       MUX_csrf_fs_reg$write_1__VAL_1 :
	       2'b11 ;
  assign csrf_fs_reg$EN =
	     MUX_csrf_fs_reg$write_1__SEL_1 ||
	     WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	     NOT_IF_NOT_rob_deqPort_0_canDeq__4671_4672_OR__ETC___d14896 ;

  // register csrf_ie_vec_0
  assign csrf_ie_vec_0$D_IN = csrf_mcycle_ehr_data_lat_0$wget[0] ;
  assign csrf_ie_vec_0$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     (IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd8 ||
	      IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd18) ;

  // register csrf_ie_vec_1
  assign csrf_ie_vec_1$D_IN =
	     MUX_csrf_ie_vec_1$write_1__SEL_1 &&
	     MUX_csrf_ie_vec_1$write_1__VAL_1 ;
  assign csrf_ie_vec_1$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo26 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     csrf_prv_reg_read__2519_ULE_1_4282_AND_IF_comm_ETC___d14321 ;

  // register csrf_ie_vec_3
  assign csrf_ie_vec_3$D_IN =
	     MUX_csrf_ie_vec_3$write_1__SEL_1 &&
	     MUX_csrf_ie_vec_3$write_1__VAL_1 ;
  assign csrf_ie_vec_3$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo20 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_csrf_prv_reg_read__2519_ULE_1_4282_4346_OR_ETC___d14350 ;

  // register csrf_mcause_code_reg
  assign csrf_mcause_code_reg$D_IN =
	     MUX_csrf_ie_vec_3$write_1__SEL_2 ?
	       cause_code__h625329 :
	       csrf_mcycle_ehr_data_lat_0$wget[3:0] ;
  assign csrf_mcause_code_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_csrf_prv_reg_read__2519_ULE_1_4282_4346_OR_ETC___d14350 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd27 ;

  // register csrf_mcause_interrupt_reg
  assign csrf_mcause_interrupt_reg$D_IN =
	     MUX_csrf_ie_vec_3$write_1__SEL_2 ?
	       commitStage_commitTrap[36] :
	       csrf_mcycle_ehr_data_lat_0$wget[63] ;
  assign csrf_mcause_interrupt_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_csrf_prv_reg_read__2519_ULE_1_4282_4346_OR_ETC___d14350 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd27 ;

  // register csrf_mcounteren_cy_reg
  assign csrf_mcounteren_cy_reg$D_IN = csrf_mcycle_ehr_data_lat_0$wget[0] ;
  assign csrf_mcounteren_cy_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd24 ;

  // register csrf_mcounteren_ir_reg
  assign csrf_mcounteren_ir_reg$D_IN = csrf_mcycle_ehr_data_lat_0$wget[2] ;
  assign csrf_mcounteren_ir_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd24 ;

  // register csrf_mcounteren_tm_reg
  assign csrf_mcounteren_tm_reg$D_IN = csrf_mcycle_ehr_data_lat_0$wget[1] ;
  assign csrf_mcounteren_tm_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd24 ;

  // register csrf_mcycle_ehr_data_rl
  assign csrf_mcycle_ehr_data_rl$D_IN = upd__h3707 ;
  assign csrf_mcycle_ehr_data_rl$EN = 1'd1 ;

  // register csrf_medeleg_13_11_reg
  assign csrf_medeleg_13_11_reg$D_IN =
	     csrf_mcycle_ehr_data_lat_0$wget[13:11] ;
  assign csrf_medeleg_13_11_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd20 ;

  // register csrf_medeleg_15_reg
  assign csrf_medeleg_15_reg$D_IN = csrf_mcycle_ehr_data_lat_0$wget[15] ;
  assign csrf_medeleg_15_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd20 ;

  // register csrf_medeleg_9_0_reg
  assign csrf_medeleg_9_0_reg$D_IN = csrf_mcycle_ehr_data_lat_0$wget[9:0] ;
  assign csrf_medeleg_9_0_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd20 ;

  // register csrf_mepc_csr
  assign csrf_mepc_csr$D_IN =
	     MUX_csrf_ie_vec_3$write_1__SEL_2 ?
	       commitStage_commitTrap[260:197] :
	       rob$deqPort_0_deq_data[95:32] ;
  assign csrf_mepc_csr$EN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_csrf_prv_reg_read__2519_ULE_1_4282_4346_OR_ETC___d14350 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd26 ;

  // register csrf_mideleg_11_reg
  assign csrf_mideleg_11_reg$D_IN = csrf_mcycle_ehr_data_lat_0$wget[11] ;
  assign csrf_mideleg_11_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd21 ;

  // register csrf_mideleg_1_0_reg
  assign csrf_mideleg_1_0_reg$D_IN = csrf_mcycle_ehr_data_lat_0$wget[1:0] ;
  assign csrf_mideleg_1_0_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd21 ;

  // register csrf_mideleg_5_3_reg
  assign csrf_mideleg_5_3_reg$D_IN = csrf_mcycle_ehr_data_lat_0$wget[5:3] ;
  assign csrf_mideleg_5_3_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd21 ;

  // register csrf_mideleg_9_7_reg
  assign csrf_mideleg_9_7_reg$D_IN = csrf_mcycle_ehr_data_lat_0$wget[9:7] ;
  assign csrf_mideleg_9_7_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd21 ;

  // register csrf_minstret_ehr_data_rl
  assign csrf_minstret_ehr_data_rl$D_IN =
	     csrf_minstret_ehr_data_lat_1$whas ?
	       upd__h3097 :
	       n__read__h636971 ;
  assign csrf_minstret_ehr_data_rl$EN = 1'd1 ;

  // register csrf_mpp_reg
  assign csrf_mpp_reg$D_IN =
	     MUX_csrf_mpp_reg$write_1__SEL_1 ?
	       MUX_csrf_mpp_reg$write_1__VAL_1 :
	       csrf_prv_reg ;
  assign csrf_mpp_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo20 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_csrf_prv_reg_read__2519_ULE_1_4282_4346_OR_ETC___d14350 ;

  // register csrf_mprv_reg
  assign csrf_mprv_reg$D_IN = csrf_mcycle_ehr_data_lat_0$wget[17] ;
  assign csrf_mprv_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd18 ;

  // register csrf_mscratch_csr
  assign csrf_mscratch_csr$D_IN = rob$deqPort_0_deq_data[95:32] ;
  assign csrf_mscratch_csr$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd25 ;

  // register csrf_mtval_csr
  assign csrf_mtval_csr$D_IN =
	     MUX_csrf_ie_vec_3$write_1__SEL_2 ?
	       MUX_csrf_mtval_csr$write_1__VAL_1 :
	       rob$deqPort_0_deq_data[95:32] ;
  assign csrf_mtval_csr$EN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_csrf_prv_reg_read__2519_ULE_1_4282_4346_OR_ETC___d14350 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd28 ;

  // register csrf_mtvec_base_hi_reg
  assign csrf_mtvec_base_hi_reg$D_IN = csrf_mscratch_csr$D_IN[63:2] ;
  assign csrf_mtvec_base_hi_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd23 ;

  // register csrf_mtvec_mode_low_reg
  assign csrf_mtvec_mode_low_reg$D_IN = csrf_mscratch_csr$D_IN[0] ;
  assign csrf_mtvec_mode_low_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd23 ;

  // register csrf_mxr_reg
  assign csrf_mxr_reg$D_IN = csrf_mscratch_csr$D_IN[19] ;
  assign csrf_mxr_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     (IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd8 ||
	      IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd18) ;

  // register csrf_ppn_reg
  assign csrf_ppn_reg$D_IN = csrf_mscratch_csr$D_IN[43:0] ;
  assign csrf_ppn_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd17 ;

  // register csrf_prev_ie_vec_0
  assign csrf_prev_ie_vec_0$D_IN = csrf_mscratch_csr$D_IN[4] ;
  assign csrf_prev_ie_vec_0$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     (IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd8 ||
	      IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd18) ;

  // register csrf_prev_ie_vec_1
  assign csrf_prev_ie_vec_1$D_IN =
	     MUX_csrf_prev_ie_vec_1$write_1__SEL_1 ?
	       MUX_csrf_prev_ie_vec_1$write_1__VAL_1 :
	       csrf_ie_vec_1 ;
  assign csrf_prev_ie_vec_1$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo26 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     csrf_prv_reg_read__2519_ULE_1_4282_AND_IF_comm_ETC___d14321 ;

  // register csrf_prev_ie_vec_3
  assign csrf_prev_ie_vec_3$D_IN =
	     MUX_csrf_prev_ie_vec_3$write_1__SEL_1 ?
	       MUX_csrf_prev_ie_vec_3$write_1__VAL_1 :
	       csrf_ie_vec_3 ;
  assign csrf_prev_ie_vec_3$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo20 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_csrf_prv_reg_read__2519_ULE_1_4282_4346_OR_ETC___d14350 ;

  // register csrf_prv_reg
  assign csrf_prv_reg$D_IN =
	     MUX_csrf_prv_reg$write_1__SEL_1 ?
	       MUX_csrf_prv_reg$write_1__VAL_1 :
	       MUX_csrf_prv_reg$write_1__VAL_2 ;
  assign csrf_prv_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     (rob$deqPort_0_deq_data[356:352] == 5'd19 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd20) ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle ;

  // register csrf_rg_tdata1_data
  assign csrf_rg_tdata1_data$D_IN = csrf_mscratch_csr$D_IN[58:0] ;
  assign csrf_rg_tdata1_data$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd37 ;

  // register csrf_rg_tdata1_dmode
  assign csrf_rg_tdata1_dmode$D_IN = csrf_mscratch_csr$D_IN[59] ;
  assign csrf_rg_tdata1_dmode$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd37 ;

  // register csrf_rg_tdata2
  assign csrf_rg_tdata2$D_IN = rob$deqPort_0_deq_data[95:32] ;
  assign csrf_rg_tdata2$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd38 ;

  // register csrf_rg_tdata3
  assign csrf_rg_tdata3$D_IN = rob$deqPort_0_deq_data[95:32] ;
  assign csrf_rg_tdata3$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd39 ;

  // register csrf_rg_tselect
  assign csrf_rg_tselect$D_IN = rob$deqPort_0_deq_data[95:32] ;
  assign csrf_rg_tselect$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd36 ;

  // register csrf_scause_code_reg
  assign csrf_scause_code_reg$D_IN =
	     MUX_csrf_ie_vec_1$write_1__SEL_2 ?
	       cause_code__h625329 :
	       csrf_rg_tselect$D_IN[3:0] ;
  assign csrf_scause_code_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     csrf_prv_reg_read__2519_ULE_1_4282_AND_IF_comm_ETC___d14321 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd14 ;

  // register csrf_scause_interrupt_reg
  assign csrf_scause_interrupt_reg$D_IN =
	     MUX_csrf_ie_vec_1$write_1__SEL_2 ?
	       commitStage_commitTrap[36] :
	       csrf_rg_tselect$D_IN[63] ;
  assign csrf_scause_interrupt_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     csrf_prv_reg_read__2519_ULE_1_4282_AND_IF_comm_ETC___d14321 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd14 ;

  // register csrf_scounteren_cy_reg
  assign csrf_scounteren_cy_reg$D_IN = csrf_rg_tselect$D_IN[0] ;
  assign csrf_scounteren_cy_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd11 ;

  // register csrf_scounteren_ir_reg
  assign csrf_scounteren_ir_reg$D_IN = csrf_rg_tselect$D_IN[2] ;
  assign csrf_scounteren_ir_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd11 ;

  // register csrf_scounteren_tm_reg
  assign csrf_scounteren_tm_reg$D_IN = csrf_rg_tselect$D_IN[1] ;
  assign csrf_scounteren_tm_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd11 ;

  // register csrf_sepc_csr
  assign csrf_sepc_csr$D_IN =
	     MUX_csrf_ie_vec_1$write_1__SEL_2 ?
	       commitStage_commitTrap[260:197] :
	       rob$deqPort_0_deq_data[95:32] ;
  assign csrf_sepc_csr$EN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     csrf_prv_reg_read__2519_ULE_1_4282_AND_IF_comm_ETC___d14321 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd13 ;

  // register csrf_software_int_en_vec_0
  assign csrf_software_int_en_vec_0$D_IN = 1'b0 ;
  assign csrf_software_int_en_vec_0$EN = 1'b0 ;

  // register csrf_software_int_en_vec_1
  assign csrf_software_int_en_vec_1$D_IN = csrf_rg_tselect$D_IN[1] ;
  assign csrf_software_int_en_vec_1$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     (IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd9 ||
	      IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd22) ;

  // register csrf_software_int_en_vec_3
  assign csrf_software_int_en_vec_3$D_IN = csrf_rg_tselect$D_IN[3] ;
  assign csrf_software_int_en_vec_3$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd22 ;

  // register csrf_software_int_pend_vec_0
  assign csrf_software_int_pend_vec_0$D_IN = 1'b0 ;
  assign csrf_software_int_pend_vec_0$EN = 1'b0 ;

  // register csrf_software_int_pend_vec_1
  assign csrf_software_int_pend_vec_1$D_IN = csrf_rg_tselect$D_IN[1] ;
  assign csrf_software_int_pend_vec_1$EN =
	     MUX_csrf_external_int_pend_vec_1$write_1__SEL_1 ;

  // register csrf_software_int_pend_vec_3
  assign csrf_software_int_pend_vec_3$D_IN =
	     (mmio_pRqQ_data_0[37:36] == 2'd2) ?
	       mmio_pRqQ_data_0[0] :
	       amoExec___d766[0] ;
  assign csrf_software_int_pend_vec_3$EN =
	     WILL_FIRE_RL_mmio_handlePRq && !mmio_pRqQ_data_0[38] &&
	     mmio_pRqQ_data_0[37:36] != 2'd0 &&
	     mmio_pRqQ_data_0[37:36] != 2'd1 ;

  // register csrf_spp_reg
  assign csrf_spp_reg$D_IN =
	     MUX_csrf_spp_reg$write_1__SEL_1 ?
	       MUX_csrf_spp_reg$write_1__VAL_1 :
	       csrf_prv_reg[0] ;
  assign csrf_spp_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo26 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     csrf_prv_reg_read__2519_ULE_1_4282_AND_IF_comm_ETC___d14321 ;

  // register csrf_sscratch_csr
  assign csrf_sscratch_csr$D_IN = rob$deqPort_0_deq_data[95:32] ;
  assign csrf_sscratch_csr$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd12 ;

  // register csrf_stats_module_doStats
  assign csrf_stats_module_doStats$D_IN = recvDoStats_x ;
  assign csrf_stats_module_doStats$EN = EN_recvDoStats ;

  // register csrf_stval_csr
  assign csrf_stval_csr$D_IN =
	     MUX_csrf_ie_vec_1$write_1__SEL_2 ?
	       MUX_csrf_mtval_csr$write_1__VAL_1 :
	       rob$deqPort_0_deq_data[95:32] ;
  assign csrf_stval_csr$EN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     csrf_prv_reg_read__2519_ULE_1_4282_AND_IF_comm_ETC___d14321 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd15 ;

  // register csrf_stvec_base_hi_reg
  assign csrf_stvec_base_hi_reg$D_IN = csrf_sscratch_csr$D_IN[63:2] ;
  assign csrf_stvec_base_hi_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd10 ;

  // register csrf_stvec_mode_low_reg
  assign csrf_stvec_mode_low_reg$D_IN = csrf_sscratch_csr$D_IN[0] ;
  assign csrf_stvec_mode_low_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd10 ;

  // register csrf_sum_reg
  assign csrf_sum_reg$D_IN = csrf_sscratch_csr$D_IN[18] ;
  assign csrf_sum_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     (IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd8 ||
	      IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd18) ;

  // register csrf_time_reg
  assign csrf_time_reg$D_IN = mmioToPlatform_setTime_t ;
  assign csrf_time_reg$EN = EN_mmioToPlatform_setTime ;

  // register csrf_timer_int_en_vec_0
  assign csrf_timer_int_en_vec_0$D_IN = 1'b0 ;
  assign csrf_timer_int_en_vec_0$EN = 1'b0 ;

  // register csrf_timer_int_en_vec_1
  assign csrf_timer_int_en_vec_1$D_IN = csrf_sscratch_csr$D_IN[5] ;
  assign csrf_timer_int_en_vec_1$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     (IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd9 ||
	      IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd22) ;

  // register csrf_timer_int_en_vec_3
  assign csrf_timer_int_en_vec_3$D_IN = csrf_sscratch_csr$D_IN[7] ;
  assign csrf_timer_int_en_vec_3$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd22 ;

  // register csrf_timer_int_pend_vec_0
  assign csrf_timer_int_pend_vec_0$D_IN = 1'b0 ;
  assign csrf_timer_int_pend_vec_0$EN = 1'b0 ;

  // register csrf_timer_int_pend_vec_1
  assign csrf_timer_int_pend_vec_1$D_IN = csrf_sscratch_csr$D_IN[5] ;
  assign csrf_timer_int_pend_vec_1$EN =
	     MUX_csrf_external_int_pend_vec_1$write_1__SEL_1 ;

  // register csrf_timer_int_pend_vec_3
  assign csrf_timer_int_pend_vec_3$D_IN = mmio_pRqQ_data_0[0] ;
  assign csrf_timer_int_pend_vec_3$EN =
	     WILL_FIRE_RL_mmio_handlePRq && mmio_pRqQ_data_0[38] &&
	     mmio_pRqQ_data_0[37:36] == 2'd2 ;

  // register csrf_tsr_reg
  assign csrf_tsr_reg$D_IN = csrf_sscratch_csr$D_IN[22] ;
  assign csrf_tsr_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd18 ;

  // register csrf_tvm_reg
  assign csrf_tvm_reg$D_IN = csrf_sscratch_csr$D_IN[20] ;
  assign csrf_tvm_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd18 ;

  // register csrf_tw_reg
  assign csrf_tw_reg$D_IN = csrf_sscratch_csr$D_IN[21] ;
  assign csrf_tw_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd18 ;

  // register csrf_vm_mode_sv39_reg
  assign csrf_vm_mode_sv39_reg$D_IN = csrf_sscratch_csr$D_IN[63] ;
  assign csrf_vm_mode_sv39_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd17 ;

  // register flush_reservation
  assign flush_reservation$D_IN = !MUX_flush_reservation$write_1__SEL_1 ;
  assign flush_reservation$EN =
	     WILL_FIRE_RL_prepareCachesAndTlbs && flush_reservation ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle ;

  // register flush_tlbs
  assign flush_tlbs$D_IN = !MUX_flush_tlbs$write_1__SEL_1 ;
  assign flush_tlbs$EN =
	     WILL_FIRE_RL_prepareCachesAndTlbs && flush_tlbs ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     (rob$deqPort_0_deq_data[356:352] == 5'd16 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	      IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd17) ;

  // register mmio_cRqQ_clearReq_rl
  assign mmio_cRqQ_clearReq_rl$D_IN = 1'd0 ;
  assign mmio_cRqQ_clearReq_rl$EN = 1'd1 ;

  // register mmio_cRqQ_data_0
  assign mmio_cRqQ_data_0$D_IN =
	     { x__h31099,
	       (mmio_cRqQ_enqReq_lat_0$whas ?
		  mmio_cRqQ_enqReq_lat_0$wget[77:76] == 2'd0 :
		  mmio_cRqQ_enqReq_rl[77:76] == 2'd0) ?
		 { 5'd2,
		   mmio_cRqQ_enqReq_lat_0$whas ?
		     mmio_cRqQ_enqReq_lat_0$wget[72] :
		     mmio_cRqQ_enqReq_rl[72] } :
		 IF_IF_mmio_cRqQ_enqReq_lat_1_whas__80_THEN_mmi_ETC___d401,
	       mmio_cRqQ_enqReq_lat_0$whas ?
		 mmio_cRqQ_enqReq_lat_0$wget[71:0] :
		 mmio_cRqQ_enqReq_rl[71:0] } ;
  assign mmio_cRqQ_data_0$EN =
	     !mmio_cRqQ_clearReq_rl &&
	     IF_mmio_cRqQ_enqReq_lat_1_whas__80_THEN_mmio_c_ETC___d289 ;

  // register mmio_cRqQ_deqReq_rl
  assign mmio_cRqQ_deqReq_rl$D_IN = 1'd0 ;
  assign mmio_cRqQ_deqReq_rl$EN = 1'd1 ;

  // register mmio_cRqQ_empty
  assign mmio_cRqQ_empty$D_IN =
	     mmio_cRqQ_clearReq_rl ||
	     (mmio_cRqQ_enqReq_lat_0$whas ?
		!mmio_cRqQ_enqReq_lat_0$wget[142] :
		!mmio_cRqQ_enqReq_rl[142]) &&
	     (EN_mmioToPlatform_cRq_deq || mmio_cRqQ_deqReq_rl ||
	      mmio_cRqQ_empty) ;
  assign mmio_cRqQ_empty$EN = 1'd1 ;

  // register mmio_cRqQ_enqReq_rl
  assign mmio_cRqQ_enqReq_rl$D_IN =
	     143'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA ;
  assign mmio_cRqQ_enqReq_rl$EN = 1'd1 ;

  // register mmio_cRqQ_full
  assign mmio_cRqQ_full$D_IN =
	     !mmio_cRqQ_clearReq_rl &&
	     (IF_mmio_cRqQ_enqReq_lat_1_whas__80_THEN_mmio_c_ETC___d289 ||
	      !EN_mmioToPlatform_cRq_deq && !mmio_cRqQ_deqReq_rl &&
	      mmio_cRqQ_full) ;
  assign mmio_cRqQ_full$EN = 1'd1 ;

  // register mmio_cRsQ_clearReq_rl
  assign mmio_cRsQ_clearReq_rl$D_IN = 1'd0 ;
  assign mmio_cRsQ_clearReq_rl$EN = 1'd1 ;

  // register mmio_cRsQ_data_0
  assign mmio_cRsQ_data_0$D_IN =
	     CAN_FIRE_RL_mmio_handlePRq ?
	       mmio_cRsQ_enqReq_lat_0$wget[0] :
	       mmio_cRsQ_enqReq_rl[0] ;
  assign mmio_cRsQ_data_0$EN =
	     !mmio_cRsQ_clearReq_rl &&
	     IF_mmio_cRsQ_enqReq_lat_1_whas__76_THEN_mmio_c_ETC___d685 ;

  // register mmio_cRsQ_deqReq_rl
  assign mmio_cRsQ_deqReq_rl$D_IN = 1'd0 ;
  assign mmio_cRsQ_deqReq_rl$EN = 1'd1 ;

  // register mmio_cRsQ_empty
  assign mmio_cRsQ_empty$D_IN =
	     mmio_cRsQ_clearReq_rl ||
	     (CAN_FIRE_RL_mmio_handlePRq ?
		!mmio_cRsQ_enqReq_lat_0$wget[1] :
		!mmio_cRsQ_enqReq_rl[1]) &&
	     (EN_mmioToPlatform_cRs_deq || mmio_cRsQ_deqReq_rl ||
	      mmio_cRsQ_empty) ;
  assign mmio_cRsQ_empty$EN = 1'd1 ;

  // register mmio_cRsQ_enqReq_rl
  assign mmio_cRsQ_enqReq_rl$D_IN = 2'b0 ;
  assign mmio_cRsQ_enqReq_rl$EN = 1'd1 ;

  // register mmio_cRsQ_full
  assign mmio_cRsQ_full$D_IN =
	     !mmio_cRsQ_clearReq_rl &&
	     (IF_mmio_cRsQ_enqReq_lat_1_whas__76_THEN_mmio_c_ETC___d685 ||
	      !EN_mmioToPlatform_cRs_deq && !mmio_cRsQ_deqReq_rl &&
	      mmio_cRsQ_full) ;
  assign mmio_cRsQ_full$EN = 1'd1 ;

  // register mmio_dataPendQ_clearReq_rl
  assign mmio_dataPendQ_clearReq_rl$D_IN = 1'd0 ;
  assign mmio_dataPendQ_clearReq_rl$EN = 1'd1 ;

  // register mmio_dataPendQ_deqReq_rl
  assign mmio_dataPendQ_deqReq_rl$D_IN = 1'd0 ;
  assign mmio_dataPendQ_deqReq_rl$EN = 1'd1 ;

  // register mmio_dataPendQ_empty
  assign mmio_dataPendQ_empty$D_IN =
	     mmio_dataPendQ_clearReq_rl ||
	     !mmio_dataPendQ_enqReq_lat_0$whas && !mmio_dataPendQ_enqReq_rl &&
	     (mmio_dataRespQ_deqReq_lat_0$whas || mmio_dataPendQ_deqReq_rl ||
	      mmio_dataPendQ_empty) ;
  assign mmio_dataPendQ_empty$EN = 1'd1 ;

  // register mmio_dataPendQ_enqReq_rl
  assign mmio_dataPendQ_enqReq_rl$D_IN = 1'd0 ;
  assign mmio_dataPendQ_enqReq_rl$EN = 1'd1 ;

  // register mmio_dataPendQ_full
  assign mmio_dataPendQ_full$D_IN =
	     !mmio_dataPendQ_clearReq_rl &&
	     (mmio_dataPendQ_enqReq_lat_0$whas || mmio_dataPendQ_enqReq_rl ||
	      !mmio_dataRespQ_deqReq_lat_0$whas &&
	      !mmio_dataPendQ_deqReq_rl &&
	      mmio_dataPendQ_full) ;
  assign mmio_dataPendQ_full$EN = 1'd1 ;

  // register mmio_dataReqQ_clearReq_rl
  assign mmio_dataReqQ_clearReq_rl$D_IN = 1'd0 ;
  assign mmio_dataReqQ_clearReq_rl$EN = 1'd1 ;

  // register mmio_dataReqQ_data_0
  assign mmio_dataReqQ_data_0$D_IN =
	     { x__h15064,
	       (mmio_dataReqQ_enqReq_lat_0$whas ?
		  mmio_dataReqQ_enqReq_lat_0$wget[77:76] == 2'd0 :
		  mmio_dataReqQ_enqReq_rl[77:76] == 2'd0) ?
		 { 5'd2,
		   mmio_dataReqQ_enqReq_lat_0$whas ?
		     mmio_dataReqQ_enqReq_lat_0$wget[72] :
		     mmio_dataReqQ_enqReq_rl[72] } :
		 IF_IF_mmio_dataReqQ_enqReq_lat_1_whas__5_THEN__ETC___d158,
	       mmio_dataReqQ_enqReq_lat_0$whas ?
		 mmio_dataReqQ_enqReq_lat_0$wget[71:0] :
		 mmio_dataReqQ_enqReq_rl[71:0] } ;
  assign mmio_dataReqQ_data_0$EN =
	     !mmio_dataReqQ_clearReq_rl &&
	     IF_mmio_dataReqQ_enqReq_lat_1_whas__5_THEN_mmi_ETC___d44 ;

  // register mmio_dataReqQ_deqReq_rl
  assign mmio_dataReqQ_deqReq_rl$D_IN = 1'd0 ;
  assign mmio_dataReqQ_deqReq_rl$EN = 1'd1 ;

  // register mmio_dataReqQ_empty
  assign mmio_dataReqQ_empty$D_IN =
	     mmio_dataReqQ_clearReq_rl ||
	     (mmio_dataReqQ_enqReq_lat_0$whas ?
		!mmio_dataReqQ_enqReq_lat_0$wget[142] :
		!mmio_dataReqQ_enqReq_rl[142]) &&
	     (CAN_FIRE_RL_mmio_sendDataReq || mmio_dataReqQ_deqReq_rl ||
	      mmio_dataReqQ_empty) ;
  assign mmio_dataReqQ_empty$EN = 1'd1 ;

  // register mmio_dataReqQ_enqReq_rl
  assign mmio_dataReqQ_enqReq_rl$D_IN =
	     143'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA ;
  assign mmio_dataReqQ_enqReq_rl$EN = 1'd1 ;

  // register mmio_dataReqQ_full
  assign mmio_dataReqQ_full$D_IN =
	     !mmio_dataReqQ_clearReq_rl &&
	     (IF_mmio_dataReqQ_enqReq_lat_1_whas__5_THEN_mmi_ETC___d44 ||
	      !CAN_FIRE_RL_mmio_sendDataReq && !mmio_dataReqQ_deqReq_rl &&
	      mmio_dataReqQ_full) ;
  assign mmio_dataReqQ_full$EN = 1'd1 ;

  // register mmio_dataRespQ_clearReq_rl
  assign mmio_dataRespQ_clearReq_rl$D_IN = 1'd0 ;
  assign mmio_dataRespQ_clearReq_rl$EN = 1'd1 ;

  // register mmio_dataRespQ_data_0
  assign mmio_dataRespQ_data_0$D_IN =
	     CAN_FIRE_RL_mmio_sendDataResp ?
	       mmio_dataRespQ_enqReq_lat_0$wget[64:0] :
	       mmio_dataRespQ_enqReq_rl[64:0] ;
  assign mmio_dataRespQ_data_0$EN =
	     !mmio_dataRespQ_clearReq_rl &&
	     IF_mmio_dataRespQ_enqReq_lat_1_whas__66_THEN_m_ETC___d175 ;

  // register mmio_dataRespQ_deqReq_rl
  assign mmio_dataRespQ_deqReq_rl$D_IN = 1'd0 ;
  assign mmio_dataRespQ_deqReq_rl$EN = 1'd1 ;

  // register mmio_dataRespQ_empty
  assign mmio_dataRespQ_empty$D_IN =
	     mmio_dataRespQ_clearReq_rl ||
	     (CAN_FIRE_RL_mmio_sendDataResp ?
		!mmio_dataRespQ_enqReq_lat_0$wget[65] :
		!mmio_dataRespQ_enqReq_rl[65]) &&
	     (mmio_dataRespQ_deqReq_lat_0$whas || mmio_dataRespQ_deqReq_rl ||
	      mmio_dataRespQ_empty) ;
  assign mmio_dataRespQ_empty$EN = 1'd1 ;

  // register mmio_dataRespQ_enqReq_rl
  assign mmio_dataRespQ_enqReq_rl$D_IN = 66'h0AAAAAAAAAAAAAAAA ;
  assign mmio_dataRespQ_enqReq_rl$EN = 1'd1 ;

  // register mmio_dataRespQ_full
  assign mmio_dataRespQ_full$D_IN =
	     !mmio_dataRespQ_clearReq_rl &&
	     (IF_mmio_dataRespQ_enqReq_lat_1_whas__66_THEN_m_ETC___d175 ||
	      !mmio_dataRespQ_deqReq_lat_0$whas &&
	      !mmio_dataRespQ_deqReq_rl &&
	      mmio_dataRespQ_full) ;
  assign mmio_dataRespQ_full$EN = 1'd1 ;

  // register mmio_fromHostAddr
  assign mmio_fromHostAddr$D_IN = coreReq_start_fromHostAddr[63:3] ;
  assign mmio_fromHostAddr$EN = EN_coreReq_start ;

  // register mmio_pRqQ_clearReq_rl
  assign mmio_pRqQ_clearReq_rl$D_IN = 1'd0 ;
  assign mmio_pRqQ_clearReq_rl$EN = 1'd1 ;

  // register mmio_pRqQ_data_0
  assign mmio_pRqQ_data_0$D_IN =
	     { EN_mmioToPlatform_pRq_enq ?
		 mmio_pRqQ_enqReq_lat_0$wget[38] :
		 mmio_pRqQ_enqReq_rl[38],
	       (EN_mmioToPlatform_pRq_enq ?
		  mmio_pRqQ_enqReq_lat_0$wget[37:36] == 2'd0 :
		  mmio_pRqQ_enqReq_rl[37:36] == 2'd0) ?
		 { 5'd2,
		   EN_mmioToPlatform_pRq_enq ?
		     mmio_pRqQ_enqReq_lat_0$wget[32] :
		     mmio_pRqQ_enqReq_rl[32] } :
		 IF_IF_mmio_pRqQ_enqReq_lat_1_whas__47_THEN_mmi_ETC___d668,
	       x_data__h42975 } ;
  assign mmio_pRqQ_data_0$EN =
	     !mmio_pRqQ_clearReq_rl &&
	     IF_mmio_pRqQ_enqReq_lat_1_whas__47_THEN_mmio_p_ETC___d556 ;

  // register mmio_pRqQ_deqReq_rl
  assign mmio_pRqQ_deqReq_rl$D_IN = 1'd0 ;
  assign mmio_pRqQ_deqReq_rl$EN = 1'd1 ;

  // register mmio_pRqQ_empty
  assign mmio_pRqQ_empty$D_IN =
	     mmio_pRqQ_clearReq_rl ||
	     (EN_mmioToPlatform_pRq_enq ?
		!mmio_pRqQ_enqReq_lat_0$wget[39] :
		!mmio_pRqQ_enqReq_rl[39]) &&
	     (CAN_FIRE_RL_mmio_handlePRq || mmio_pRqQ_deqReq_rl ||
	      mmio_pRqQ_empty) ;
  assign mmio_pRqQ_empty$EN = 1'd1 ;

  // register mmio_pRqQ_enqReq_rl
  assign mmio_pRqQ_enqReq_rl$D_IN = 40'h2AAAAAAAAA ;
  assign mmio_pRqQ_enqReq_rl$EN = 1'd1 ;

  // register mmio_pRqQ_full
  assign mmio_pRqQ_full$D_IN =
	     !mmio_pRqQ_clearReq_rl &&
	     (IF_mmio_pRqQ_enqReq_lat_1_whas__47_THEN_mmio_p_ETC___d556 ||
	      !CAN_FIRE_RL_mmio_handlePRq && !mmio_pRqQ_deqReq_rl &&
	      mmio_pRqQ_full) ;
  assign mmio_pRqQ_full$EN = 1'd1 ;

  // register mmio_pRsQ_clearReq_rl
  assign mmio_pRsQ_clearReq_rl$D_IN = 1'd0 ;
  assign mmio_pRsQ_clearReq_rl$EN = 1'd1 ;

  // register mmio_pRsQ_data_0
  assign mmio_pRsQ_data_0$D_IN =
	     { EN_mmioToPlatform_pRs_enq ?
		 mmio_pRsQ_enqReq_lat_0$wget[66] :
		 mmio_pRsQ_enqReq_rl[66],
	       IF_IF_mmio_pRsQ_enqReq_lat_1_whas__08_THEN_NOT_ETC___d541 } ;
  assign mmio_pRsQ_data_0$EN =
	     !mmio_pRsQ_clearReq_rl &&
	     IF_mmio_pRsQ_enqReq_lat_1_whas__08_THEN_mmio_p_ETC___d417 ;

  // register mmio_pRsQ_deqReq_rl
  assign mmio_pRsQ_deqReq_rl$D_IN = 1'd0 ;
  assign mmio_pRsQ_deqReq_rl$EN = 1'd1 ;

  // register mmio_pRsQ_empty
  assign mmio_pRsQ_empty$D_IN =
	     mmio_pRsQ_clearReq_rl ||
	     (EN_mmioToPlatform_pRs_enq ?
		!mmio_pRsQ_enqReq_lat_0$wget[67] :
		!mmio_pRsQ_enqReq_rl[67]) &&
	     (mmio_pRsQ_deqReq_lat_0$whas || mmio_pRsQ_deqReq_rl ||
	      mmio_pRsQ_empty) ;
  assign mmio_pRsQ_empty$EN = 1'd1 ;

  // register mmio_pRsQ_enqReq_rl
  assign mmio_pRsQ_enqReq_rl$D_IN = 68'h2AAAAAAAAAAAAAAAA ;
  assign mmio_pRsQ_enqReq_rl$EN = 1'd1 ;

  // register mmio_pRsQ_full
  assign mmio_pRsQ_full$D_IN =
	     !mmio_pRsQ_clearReq_rl &&
	     (IF_mmio_pRsQ_enqReq_lat_1_whas__08_THEN_mmio_p_ETC___d417 ||
	      !mmio_pRsQ_deqReq_lat_0$whas && !mmio_pRsQ_deqReq_rl &&
	      mmio_pRsQ_full) ;
  assign mmio_pRsQ_full$EN = 1'd1 ;

  // register mmio_toHostAddr
  assign mmio_toHostAddr$D_IN = coreReq_start_toHostAddr[63:3] ;
  assign mmio_toHostAddr$EN = EN_coreReq_start ;

  // register outOfReset
  assign outOfReset$D_IN = 1'd1 ;
  assign outOfReset$EN = CAN_FIRE_RL_rl_outOfReset ;

  // register scaprf_ddc_reg
  assign scaprf_ddc_reg$D_IN = 153'h0 ;
  assign scaprf_ddc_reg$EN = 1'b0 ;

  // register scaprf_mScratchC_reg
  assign scaprf_mScratchC_reg$D_IN = 153'h0 ;
  assign scaprf_mScratchC_reg$EN = 1'b0 ;

  // register scaprf_mepcc_reg
  assign scaprf_mepcc_reg$D_IN = 153'h0 ;
  assign scaprf_mepcc_reg$EN = 1'b0 ;

  // register scaprf_mtcc_reg
  assign scaprf_mtcc_reg$D_IN = 153'h0 ;
  assign scaprf_mtcc_reg$EN = 1'b0 ;

  // register scaprf_mtdc_reg
  assign scaprf_mtdc_reg$D_IN = 153'h0 ;
  assign scaprf_mtdc_reg$EN = 1'b0 ;

  // register scaprf_pcc_reg_data_rl
  assign scaprf_pcc_reg_data_rl$D_IN =
	     scaprf_pcc_reg_data_lat_1$whas ?
	       rob$deqPort_1_deq_data[194:42] :
	       (scaprf_pcc_reg_data_lat_0$whas ?
		  rob$deqPort_0_deq_data[194:42] :
		  scaprf_pcc_reg_data_rl) ;
  assign scaprf_pcc_reg_data_rl$EN = 1'd1 ;

  // register scaprf_sScratchC_reg
  assign scaprf_sScratchC_reg$D_IN = 153'h0 ;
  assign scaprf_sScratchC_reg$EN = 1'b0 ;

  // register scaprf_sepcc_reg
  assign scaprf_sepcc_reg$D_IN = 153'h0 ;
  assign scaprf_sepcc_reg$EN = 1'b0 ;

  // register scaprf_stcc_reg
  assign scaprf_stcc_reg$D_IN = 153'h0 ;
  assign scaprf_stcc_reg$EN = 1'b0 ;

  // register scaprf_stdc_reg
  assign scaprf_stdc_reg$D_IN = 153'h0 ;
  assign scaprf_stdc_reg$EN = 1'b0 ;

  // register scaprf_uScratchC_reg
  assign scaprf_uScratchC_reg$D_IN = 153'h0 ;
  assign scaprf_uScratchC_reg$EN = 1'b0 ;

  // register scaprf_uepcc_reg
  assign scaprf_uepcc_reg$D_IN = 153'h0 ;
  assign scaprf_uepcc_reg$EN = 1'b0 ;

  // register scaprf_utcc_reg
  assign scaprf_utcc_reg$D_IN = 153'h0 ;
  assign scaprf_utcc_reg$EN = 1'b0 ;

  // register scaprf_utdc_reg
  assign scaprf_utdc_reg$D_IN = 153'h0 ;
  assign scaprf_utdc_reg$EN = 1'b0 ;

  // register started
  assign started$D_IN = 1'd1 ;
  assign started$EN = EN_coreReq_start ;

  // register update_vm_info
  assign update_vm_info$D_IN = !MUX_update_vm_info$write_1__SEL_1 ;
  assign update_vm_info$EN =
	     WILL_FIRE_RL_prepareCachesAndTlbs && update_vm_info ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle ;

  // submodule coreFix_aluExe_0_dispToRegQ
  assign coreFix_aluExe_0_dispToRegQ$enq_x =
	     { coreFix_aluExe_0_rsAlu$dispatchData[161:157],
	       CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q268,
	       coreFix_aluExe_0_rsAlu$dispatchData[135],
	       CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q269,
	       coreFix_aluExe_0_rsAlu$dispatchData[122:90],
	       coreFix_aluExe_0_rsAlu$dispatchData[65:21],
	       coreFix_aluExe_0_rsAlu$dispatchData[89:66],
	       coreFix_aluExe_0_rsAlu$dispatchData[8:4],
	       coreFix_aluExe_0_rsAlu$dispatchData[20:9] } ;
  assign coreFix_aluExe_0_dispToRegQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12432 ;
  assign coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all =
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_0_dispToRegQ$EN_enq =
	     WILL_FIRE_RL_coreFix_aluExe_0_doDispatchAlu ;
  assign coreFix_aluExe_0_dispToRegQ$EN_deq =
	     WILL_FIRE_RL_coreFix_aluExe_0_doRegReadAlu ;
  assign coreFix_aluExe_0_dispToRegQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_aluExe_0_dispToRegQ$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_aluExe_0_exeToFinQ
  assign coreFix_aluExe_0_exeToFinQ$enq_x =
	     { coreFix_aluExe_0_regToExeQ$first[421:417],
	       coreFix_aluExe_0_regToExeQ$first[349:305],
	       coreFix_aluExe_0_regToExeQ$first[18:17] != 2'b11,
	       basicExec___d12338[321:258],
	       coreFix_aluExe_0_regToExeQ$first[395],
	       basicExec___d12338[257:194],
	       basicExec___d12338[129:0],
	       coreFix_aluExe_0_regToExeQ$first[16:0] } ;
  assign coreFix_aluExe_0_exeToFinQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12432 ;
  assign coreFix_aluExe_0_exeToFinQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_aluExe_0_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_aluExe_0_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_aluExe_0_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_aluExe_0_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_0_exeToFinQ$EN_enq =
	     WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu ;
  assign coreFix_aluExe_0_exeToFinQ$EN_deq =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  assign coreFix_aluExe_0_exeToFinQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_aluExe_0_exeToFinQ$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_aluExe_0_regToExeQ
  assign coreFix_aluExe_0_regToExeQ$enq_x =
	     { coreFix_aluExe_0_dispToRegQ$first[157:153],
	       CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_15_ETC__q271,
	       coreFix_aluExe_0_dispToRegQ$first[131],
	       CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_13_ETC__q272,
	       coreFix_aluExe_0_dispToRegQ$first[118:86],
	       coreFix_aluExe_0_dispToRegQ$first[61:17],
	       x__h560475,
	       x__h560476,
	       rob$getOrigPC_0_get,
	       rob$getOrigPredPC_0_get,
	       rob$getOrig_Inst_0_get,
	       coreFix_aluExe_0_dispToRegQ$first[16:0] } ;
  assign coreFix_aluExe_0_regToExeQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12432 ;
  assign coreFix_aluExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_aluExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_aluExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_aluExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_aluExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_0_regToExeQ$EN_enq =
	     WILL_FIRE_RL_coreFix_aluExe_0_doRegReadAlu ;
  assign coreFix_aluExe_0_regToExeQ$EN_deq =
	     WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu ;
  assign coreFix_aluExe_0_regToExeQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_aluExe_0_regToExeQ$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_aluExe_0_rsAlu
  assign coreFix_aluExe_0_rsAlu$enq_x =
	     MUX_coreFix_aluExe_0_rsAlu$enq_1__SEL_1 ?
	       MUX_coreFix_aluExe_0_rsAlu$enq_1__VAL_1 :
	       MUX_coreFix_aluExe_0_rsAlu$enq_1__VAL_2 ;
  assign coreFix_aluExe_0_rsAlu$setRegReady_0_put =
	     { 1'd1, coreFix_aluExe_0_rsAlu$dispatchData[40:34] } ;
  assign coreFix_aluExe_0_rsAlu$setRegReady_1_put =
	     { 1'd1, coreFix_aluExe_1_rsAlu$dispatchData[40:34] } ;
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1:
	  coreFix_aluExe_0_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2:
	  coreFix_aluExe_0_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3:
	  coreFix_aluExe_0_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4:
	  coreFix_aluExe_0_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5:
	  coreFix_aluExe_0_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6:
	  coreFix_aluExe_0_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6;
      default: coreFix_aluExe_0_rsAlu$setRegReady_2_put =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_0_rsAlu$setRegReady_3_put =
	     { 1'd1, coreFix_memExe_lsq$issueLd[71:65] } ;
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_1:
	  coreFix_aluExe_0_rsAlu$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_2:
	  coreFix_aluExe_0_rsAlu$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3:
	  coreFix_aluExe_0_rsAlu$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4:
	  coreFix_aluExe_0_rsAlu$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3;
      default: coreFix_aluExe_0_rsAlu$setRegReady_4_put =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_0_rsAlu$setRobEnqTime_t = rob$getEnqTime ;
  assign coreFix_aluExe_0_rsAlu$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12432 ;
  assign coreFix_aluExe_0_rsAlu$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_aluExe_0_rsAlu$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_aluExe_0_rsAlu$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_aluExe_0_rsAlu$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_aluExe_0_rsAlu$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_0_rsAlu$EN_enq =
	     WILL_FIRE_RL_renameStage_doRenaming && _dfoo18 ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	     fetchStage$pipelines_0_first[194:192] == 3'd0 ;
  assign coreFix_aluExe_0_rsAlu$EN_setRobEnqTime = 1'd1 ;
  assign coreFix_aluExe_0_rsAlu$EN_doDispatch =
	     WILL_FIRE_RL_coreFix_aluExe_0_doDispatchAlu ;
  assign coreFix_aluExe_0_rsAlu$EN_setRegReady_0_put =
	     WILL_FIRE_RL_coreFix_aluExe_0_doDispatchAlu &&
	     coreFix_aluExe_0_rsAlu$dispatchData[41] ;
  assign coreFix_aluExe_0_rsAlu$EN_setRegReady_1_put =
	     WILL_FIRE_RL_coreFix_aluExe_1_doDispatchAlu &&
	     coreFix_aluExe_1_rsAlu$dispatchData[41] ;
  assign coreFix_aluExe_0_rsAlu$EN_setRegReady_2_put =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[32] ;
  assign coreFix_aluExe_0_rsAlu$EN_setRegReady_3_put =
	     _dor1coreFix_aluExe_0_rsAlu$EN_setRegReady_3_put &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd0 &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd1 &&
	     coreFix_memExe_lsq$issueLd[72] ;
  assign coreFix_aluExe_0_rsAlu$EN_setRegReady_4_put =
	     (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq) &&
	     coreFix_memExe_lsq$firstSt[150] ||
	     (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq) &&
	     coreFix_memExe_lsq$firstLd[89] ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2375 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 &&
	     coreFix_memExe_lsq$getHit[8] &&
	     !coreFix_memExe_lsq$getHit[9] ;
  assign coreFix_aluExe_0_rsAlu$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_aluExe_0_rsAlu$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_aluExe_1_dispToRegQ
  assign coreFix_aluExe_1_dispToRegQ$enq_x =
	     { coreFix_aluExe_1_rsAlu$dispatchData[161:157],
	       CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q274,
	       coreFix_aluExe_1_rsAlu$dispatchData[135],
	       CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q275,
	       coreFix_aluExe_1_rsAlu$dispatchData[122:90],
	       coreFix_aluExe_1_rsAlu$dispatchData[65:21],
	       coreFix_aluExe_1_rsAlu$dispatchData[89:66],
	       coreFix_aluExe_1_rsAlu$dispatchData[8:4],
	       coreFix_aluExe_1_rsAlu$dispatchData[20:9] } ;
  assign coreFix_aluExe_1_dispToRegQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12432 ;
  assign coreFix_aluExe_1_dispToRegQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_aluExe_1_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_aluExe_1_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_aluExe_1_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_aluExe_1_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_1_dispToRegQ$EN_enq =
	     WILL_FIRE_RL_coreFix_aluExe_1_doDispatchAlu ;
  assign coreFix_aluExe_1_dispToRegQ$EN_deq =
	     WILL_FIRE_RL_coreFix_aluExe_1_doRegReadAlu ;
  assign coreFix_aluExe_1_dispToRegQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_aluExe_1_dispToRegQ$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_aluExe_1_exeToFinQ
  assign coreFix_aluExe_1_exeToFinQ$enq_x =
	     { coreFix_aluExe_1_regToExeQ$first[421:417],
	       coreFix_aluExe_1_regToExeQ$first[349:305],
	       coreFix_aluExe_1_regToExeQ$first[18:17] != 2'b11,
	       basicExec___d11664[321:258],
	       coreFix_aluExe_1_regToExeQ$first[395],
	       basicExec___d11664[257:194],
	       basicExec___d11664[129:0],
	       coreFix_aluExe_1_regToExeQ$first[16:0] } ;
  assign coreFix_aluExe_1_exeToFinQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12432 ;
  assign coreFix_aluExe_1_exeToFinQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_aluExe_1_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_aluExe_1_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_aluExe_1_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_aluExe_1_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_1_exeToFinQ$EN_enq =
	     WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu ;
  assign coreFix_aluExe_1_exeToFinQ$EN_deq =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;
  assign coreFix_aluExe_1_exeToFinQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_aluExe_1_exeToFinQ$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_aluExe_1_regToExeQ
  assign coreFix_aluExe_1_regToExeQ$enq_x =
	     { coreFix_aluExe_1_dispToRegQ$first[157:153],
	       CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_15_ETC__q277,
	       coreFix_aluExe_1_dispToRegQ$first[131],
	       CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_13_ETC__q278,
	       coreFix_aluExe_1_dispToRegQ$first[118:86],
	       coreFix_aluExe_1_dispToRegQ$first[61:17],
	       x__h537844,
	       x__h537845,
	       rob$getOrigPC_1_get,
	       rob$getOrigPredPC_1_get,
	       rob$getOrig_Inst_1_get,
	       coreFix_aluExe_1_dispToRegQ$first[16:0] } ;
  assign coreFix_aluExe_1_regToExeQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12432 ;
  assign coreFix_aluExe_1_regToExeQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_aluExe_1_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_aluExe_1_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_aluExe_1_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_aluExe_1_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_1_regToExeQ$EN_enq =
	     WILL_FIRE_RL_coreFix_aluExe_1_doRegReadAlu ;
  assign coreFix_aluExe_1_regToExeQ$EN_deq =
	     WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu ;
  assign coreFix_aluExe_1_regToExeQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_aluExe_1_regToExeQ$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_aluExe_1_rsAlu
  assign coreFix_aluExe_1_rsAlu$enq_x =
	     (k__h590245 == 1'd1 &&
	      fetchStage_pipelines_0_canDeq__2489_AND_NOT_fe_ETC___d13817) ?
	       { fetchStage$pipelines_0_first[199:195],
		 IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d12606,
		 fetchStage$pipelines_0_first[173],
		 IF_fetchStage_pipelines_0_first__2491_BITS_172_ETC___d12688,
		 fetchStage$pipelines_0_first[160:128],
		 fetchStage$pipelines_0_first[255:232],
		 regRenamingTable$rename_0_getRename,
		 rob$enqPort_0_getEnqInstTag,
		 specTagManager$currentSpecBits,
		 fetchStage$pipelines_0_first[194:192] == 3'd1,
		 specTagManager$nextSpecTag,
		 sbAggr$eagerLookup_0_get } :
	       { fetchStage$pipelines_1_first[199:195],
		 IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13332,
		 fetchStage_pipelines_1_first__2500_BIT_173_333_ETC___d13416,
		 fetchStage$pipelines_1_first[160:128],
		 fetchStage$pipelines_1_first[255:232],
		 regRenamingTable$rename_1_getRename,
		 rob$enqPort_1_getEnqInstTag,
		 renaming_spec_bits__h606266,
		 fetchStage$pipelines_1_first[194:192] == 3'd1,
		 specTagManager$nextSpecTag,
		 sbAggr$eagerLookup_1_get } ;
  assign coreFix_aluExe_1_rsAlu$setRegReady_0_put =
	     coreFix_aluExe_0_rsAlu$setRegReady_0_put ;
  assign coreFix_aluExe_1_rsAlu$setRegReady_1_put =
	     coreFix_aluExe_0_rsAlu$setRegReady_1_put ;
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1:
	  coreFix_aluExe_1_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2:
	  coreFix_aluExe_1_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3:
	  coreFix_aluExe_1_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4:
	  coreFix_aluExe_1_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5:
	  coreFix_aluExe_1_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6:
	  coreFix_aluExe_1_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6;
      default: coreFix_aluExe_1_rsAlu$setRegReady_2_put =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_1_rsAlu$setRegReady_3_put =
	     coreFix_aluExe_0_rsAlu$setRegReady_3_put ;
  always@(MUX_coreFix_aluExe_1_rsAlu$setRegReady_4_put_1__SEL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1 or
	  MUX_coreFix_aluExe_1_rsAlu$setRegReady_4_put_1__SEL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_1_rsAlu$setRegReady_4_put_1__SEL_1:
	  coreFix_aluExe_1_rsAlu$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1;
      MUX_coreFix_aluExe_1_rsAlu$setRegReady_4_put_1__SEL_2:
	  coreFix_aluExe_1_rsAlu$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3:
	  coreFix_aluExe_1_rsAlu$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4:
	  coreFix_aluExe_1_rsAlu$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3;
      default: coreFix_aluExe_1_rsAlu$setRegReady_4_put =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_1_rsAlu$setRobEnqTime_t = rob$getEnqTime ;
  assign coreFix_aluExe_1_rsAlu$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12432 ;
  assign coreFix_aluExe_1_rsAlu$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_aluExe_1_rsAlu$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_aluExe_1_rsAlu$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_aluExe_1_rsAlu$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_aluExe_1_rsAlu$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_1_rsAlu$EN_enq =
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     (k__h590245 == 1'd1 &&
	      fetchStage_pipelines_0_canDeq__2489_AND_NOT_fe_ETC___d13817 ||
	      fetchStage_pipelines_0_canDeq__2489_AND_NOT_fe_ETC___d13936 ==
	      1'd1 &&
	      NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13953) ;
  assign coreFix_aluExe_1_rsAlu$EN_setRobEnqTime = 1'd1 ;
  assign coreFix_aluExe_1_rsAlu$EN_doDispatch =
	     WILL_FIRE_RL_coreFix_aluExe_1_doDispatchAlu ;
  assign coreFix_aluExe_1_rsAlu$EN_setRegReady_0_put =
	     WILL_FIRE_RL_coreFix_aluExe_0_doDispatchAlu &&
	     coreFix_aluExe_0_rsAlu$dispatchData[41] ;
  assign coreFix_aluExe_1_rsAlu$EN_setRegReady_1_put =
	     WILL_FIRE_RL_coreFix_aluExe_1_doDispatchAlu &&
	     coreFix_aluExe_1_rsAlu$dispatchData[41] ;
  assign coreFix_aluExe_1_rsAlu$EN_setRegReady_2_put =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[32] ;
  assign coreFix_aluExe_1_rsAlu$EN_setRegReady_3_put =
	     _dor1coreFix_aluExe_1_rsAlu$EN_setRegReady_3_put &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd0 &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd1 &&
	     coreFix_memExe_lsq$issueLd[72] ;
  assign coreFix_aluExe_1_rsAlu$EN_setRegReady_4_put =
	     (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq) &&
	     coreFix_memExe_lsq$firstSt[150] ||
	     (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq) &&
	     coreFix_memExe_lsq$firstLd[89] ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2375 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 &&
	     coreFix_memExe_lsq$getHit[8] &&
	     !coreFix_memExe_lsq$getHit[9] ;
  assign coreFix_aluExe_1_rsAlu$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_aluExe_1_rsAlu$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_fpuMulDivExe_0_dispToRegQ
  assign coreFix_fpuMulDivExe_0_dispToRegQ$enq_x =
	     { CASE_coreFix_fpuMulDivExe_0_rsFpuMulDivdispat_ETC__q280,
	       coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData[65:9] } ;
  assign coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12432 ;
  assign coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_dispToRegQ$EN_enq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv ;
  assign coreFix_fpuMulDivExe_0_dispToRegQ$EN_deq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv ;
  assign coreFix_fpuMulDivExe_0_dispToRegQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_fpuMulDivExe_0_dispToRegQ$EN_specUpdate_correctSpeculation =
	     1'd1 ;

  // submodule coreFix_fpuMulDivExe_0_fpuExec_divQ
  assign coreFix_fpuMulDivExe_0_fpuExec_divQ$enq_x =
	     { IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10391,
	       coreFix_fpuMulDivExe_0_regToExeQ$first[225],
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[225] &&
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10528,
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[225] &&
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10564,
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[225] &&
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10612,
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[225] &&
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10654,
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[225] &&
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10696,
	       coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd27 ||
	       coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd28,
	       coreFix_fpuMulDivExe_0_regToExeQ$first[224:204],
	       coreFix_fpuMulDivExe_0_regToExeQ$first[11:0] } ;
  assign coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12432 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_enq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd4 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd3 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_deq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqDivPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv ;
  assign coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_specUpdate_correctSpeculation =
	     1'd1 ;

  // submodule coreFix_fpuMulDivExe_0_fpuExec_double_div
  assign coreFix_fpuMulDivExe_0_fpuExec_double_div$request_put =
	     { IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8848,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10328,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10391 } ;
  assign coreFix_fpuMulDivExe_0_fpuExec_double_div$EN_request_put =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd4 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd3 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_double_div$EN_response_get =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqDivPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv ;

  // submodule coreFix_fpuMulDivExe_0_fpuExec_double_fma
  assign coreFix_fpuMulDivExe_0_fpuExec_double_fma$request_put =
	     { coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] != 5'd2,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9618,
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q281,
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q282,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10391 } ;
  assign coreFix_fpuMulDivExe_0_fpuExec_double_fma$EN_request_put =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd4 &&
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd1 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd2 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd25 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd26 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd27 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd28) ;
  assign coreFix_fpuMulDivExe_0_fpuExec_double_fma$EN_response_get =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqFmaPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma ;

  // submodule coreFix_fpuMulDivExe_0_fpuExec_double_sqrt
  assign coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$request_put =
	     { IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8848,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10391 } ;
  assign coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$EN_request_put =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd4 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd4 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$EN_response_get =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqSqrtPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt ;

  // submodule coreFix_fpuMulDivExe_0_fpuExec_fmaQ
  assign coreFix_fpuMulDivExe_0_fpuExec_fmaQ$enq_x =
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$enq_x ;
  assign coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12432 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_enq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd4 &&
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd1 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd2 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd25 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd26 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd27 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd28) ;
  assign coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_deq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqFmaPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma ;
  assign coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_specUpdate_correctSpeculation =
	     1'd1 ;

  // submodule coreFix_fpuMulDivExe_0_fpuExec_simpleQ
  assign coreFix_fpuMulDivExe_0_fpuExec_simpleQ$enq_x =
	     { execFpuSimple___d10730,
	       coreFix_fpuMulDivExe_0_regToExeQ$first[224:204],
	       coreFix_fpuMulDivExe_0_regToExeQ$first[11:0] } ;
  assign coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12432 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_enq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd4 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] != 5'd0 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] != 5'd1 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] != 5'd2 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] != 5'd25 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] != 5'd26 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] != 5'd27 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] != 5'd28 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] != 5'd3 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] != 5'd4 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_deq =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple ;
  assign coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_specUpdate_correctSpeculation =
	     1'd1 ;

  // submodule coreFix_fpuMulDivExe_0_fpuExec_sqrtQ
  assign coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$enq_x =
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$enq_x ;
  assign coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12432 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_enq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd4 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd4 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_deq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqSqrtPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt ;
  assign coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_specUpdate_correctSpeculation =
	     1'd1 ;

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_divQ
  assign coreFix_fpuMulDivExe_0_mulDivExec_divQ$enq_x =
	     { coreFix_fpuMulDivExe_0_regToExeQ$first[229:227],
	       coreFix_fpuMulDivExe_0_regToExeQ$first[224:204],
	       coreFix_fpuMulDivExe_0_regToExeQ$first[11:0] } ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12432 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_enq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd3 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] != 2'd0 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] != 2'd1 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_deq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqDivPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_specUpdate_correctSpeculation =
	     1'd1 ;

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$D_IN =
	     { x__h523106,
	       b__h522570 == 64'd0,
	       a__h522569,
	       coreFix_fpuMulDivExe_0_regToExeQ$first[226:225] == 2'd0,
	       x__h523132,
	       a__h522569[63],
	       8'd0 } ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$ENQ =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd3 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] != 2'd0 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] != 2'd1 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$DEQ =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_compute ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$CLR =
	     1'b0 ;

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$D_IN =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[226:225] == 2'd0) ?
	       _theResult___snd__h523118 :
	       b__h522570 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$ENQ =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd3 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] != 2'd0 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] != 2'd1 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$DEQ =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_compute ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$CLR =
	     1'b0 ;

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_IN =
	     { x__h523746,
	       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$D_OUT[75:0] } ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$ENQ =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_compute ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$DEQ =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqDivPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$CLR = 1'b0 ;

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_mulQ
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulQ$enq_x =
	     { coreFix_fpuMulDivExe_0_regToExeQ$first[229:227],
	       coreFix_fpuMulDivExe_0_regToExeQ$first[224:204],
	       coreFix_fpuMulDivExe_0_regToExeQ$first[11:0] } ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12432 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_enq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd3 &&
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] == 2'd0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] == 2'd1) ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_deq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqMulPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_specUpdate_correctSpeculation =
	     1'd1 ;

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ
  always@(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1 or
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1 or
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1 or
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1)
  begin
    case (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1[1:0])
      2'd0:
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$D_IN =
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1[127:0];
      2'd1:
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$D_IN =
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1[127:0];
      default: coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$D_IN =
		   coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1[127:0];
    endcase
  end
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$ENQ =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1[2] ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$DEQ =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_deqEn$whas ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$CLR = 1'b0 ;

  // submodule coreFix_fpuMulDivExe_0_regToExeQ
  assign coreFix_fpuMulDivExe_0_regToExeQ$enq_x =
	     { CASE_coreFix_fpuMulDivExe_0_dispToRegQfirst_B_ETC__q284,
	       coreFix_fpuMulDivExe_0_dispToRegQ$first[32:12],
	       x__h401245,
	       x__h401246,
	       x__h401247,
	       coreFix_fpuMulDivExe_0_dispToRegQ$first[11:0] } ;
  assign coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12432 ;
  assign coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_regToExeQ$EN_enq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv ;
  assign coreFix_fpuMulDivExe_0_regToExeQ$EN_deq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv ;
  assign coreFix_fpuMulDivExe_0_regToExeQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_fpuMulDivExe_0_regToExeQ$EN_specUpdate_correctSpeculation =
	     1'd1 ;

  // submodule coreFix_fpuMulDivExe_0_rsFpuMulDiv
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$enq_x =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__3159_AND__ETC___d13829) ?
	       { IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d12606,
		 regRenamingTable$rename_0_getRename,
		 rob$enqPort_0_getEnqInstTag,
		 specTagManager$currentSpecBits,
		 fetchStage$pipelines_0_first[194:192] == 3'd1,
		 specTagManager$nextSpecTag,
		 sbAggr$eagerLookup_0_get } :
	       { IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13332,
		 regRenamingTable$rename_1_getRename,
		 rob$enqPort_1_getEnqInstTag,
		 renaming_spec_bits__h606266,
		 fetchStage$pipelines_1_first[194:192] == 3'd1,
		 specTagManager$nextSpecTag,
		 sbAggr$eagerLookup_1_get } ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_0_put =
	     coreFix_aluExe_0_rsAlu$setRegReady_0_put ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_1_put =
	     coreFix_aluExe_0_rsAlu$setRegReady_1_put ;
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6;
      default: coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_2_put =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_3_put =
	     coreFix_aluExe_0_rsAlu$setRegReady_3_put ;
  always@(MUX_coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put_1__SEL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1 or
	  MUX_coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put_1__SEL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put_1__SEL_1:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1;
      MUX_coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put_1__SEL_2:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3;
      default: coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRobEnqTime_t = rob$getEnqTime ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12432 ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_enq =
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__3159_AND__ETC___d13829 ||
	      NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13940 &&
	      regRenamingTable_rename_1_canRename__3278_AND__ETC___d13949 &&
	      (fetchStage$pipelines_1_first[194:192] == 3'd3 ||
	       fetchStage$pipelines_1_first[194:192] == 3'd4) &&
	      NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13989 &&
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq) ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRobEnqTime = 1'd1 ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_doDispatch =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_0_put =
	     WILL_FIRE_RL_coreFix_aluExe_0_doDispatchAlu &&
	     coreFix_aluExe_0_rsAlu$dispatchData[41] ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_1_put =
	     WILL_FIRE_RL_coreFix_aluExe_1_doDispatchAlu &&
	     coreFix_aluExe_1_rsAlu$dispatchData[41] ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_2_put =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[32] ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_3_put =
	     _dor1coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_3_put &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd0 &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd1 &&
	     coreFix_memExe_lsq$issueLd[72] ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_4_put =
	     (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq) &&
	     coreFix_memExe_lsq$firstSt[150] ||
	     (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq) &&
	     coreFix_memExe_lsq$firstLd[89] ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2375 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 &&
	     coreFix_memExe_lsq$getHit[8] &&
	     !coreFix_memExe_lsq$getHit[9] ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_specUpdate_correctSpeculation =
	     1'd1 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqMshr
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getEmptyEntryInit_r =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget :
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getRq_n =
	     x__h216092 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq_n =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSlot_n ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSlot_n =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[579:578] ==
	      2'd0) ?
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[577:575] :
	       (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512] :
		  3'd0) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState_n =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSlot_n ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc_n =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSlot_n ;
  always@(MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_1 or
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo or
	  coreFix_memExe_dMem_cache_m_banks_0_processAmo)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_1:
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_n =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[577:575];
      MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2:
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_n =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512];
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo:
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_n =
	      coreFix_memExe_dMem_cache_m_banks_0_processAmo[159:157];
      default: coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_n =
		   3'b010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain_addr =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:84] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setData_d =
	     { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] ==
	       2'd3,
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:0] } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setData_n =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[577:575] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_n =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_1__SEL_1 ?
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[577:575] :
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_slot =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_1__SEL_1 ?
	       MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_3__VAL_1 :
	       MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_3__VAL_2 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_state =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_1__SEL_1 ?
	       MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_2__VAL_1 :
	       3'd3 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setSucc_n =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[2:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setSucc_succ =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__VAL_1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getRq_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getSlot_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getData_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[2:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getRq_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[2:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getSlot_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[2:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getState_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[2:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_setWaitSt_setSlot_clearData_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[2:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_setWaitSt_setSlot_clearData_slot =
	     { coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getSlot[58:56],
	       56'h15555555555555 } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_cRqTransfer_getEmptyEntryInit =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_sendRsToP_cRq_setWaitSt_setSlot_clearData =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_releaseEntry =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2352 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd4 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_setData =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__SEL_2 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_setStateSlot =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2289 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[571] &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2496 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2499 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_setSucc =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState ==
	      3'd1) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_stuck_get = 1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_pRqMshr
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$getEmptyEntryInit_r =
	     { SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2613,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q285 } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq_n =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[576:575] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getState_n =
	     2'h0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_releaseEntry_n =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[576:575] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_setDone_setData_d =
	     { !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] ==
	       2'd3,
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:0] } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_setDone_setData_n =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[576:575] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getData_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[1:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getRq_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[1:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_releaseEntry_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[1:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_getEmptyEntryInit =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_sendRsToP_pRq_releaseEntry =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_pipelineResp_releaseEntry =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[571] ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2496 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2499) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_pipelineResp_setDone_setData =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__SEL_1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_stuck_get = 1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_pipeline
  always@(MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__SEL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__VAL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2 or
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo or
	  coreFix_memExe_dMem_cache_m_banks_0_processAmo or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__SEL_1:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_swapRq =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__VAL_1;
      MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_swapRq =
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc;
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_swapRq =
	      coreFix_memExe_dMem_cache_m_banks_0_processAmo[3:0];
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_swapRq = 4'd2;
      default: coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_swapRq =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  always@(MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__SEL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_3__VAL_1 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__SEL_1:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_updateRep =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_3__VAL_1;
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_updateRep =
	      1'd0;
      MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2 ||
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_updateRep =
	      1'd1;
      default: coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_updateRep =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  always@(MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__SEL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_2 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_3 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__SEL_1:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_wrRam =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_1;
      MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_wrRam =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_2;
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_wrRam =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_3;
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_wrRam =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_4;
      default: coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_wrRam =
		   571'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_1 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_2 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_3 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_r =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_1;
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_r =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_2;
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_r =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_3;
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_r =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_4;
      default: coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_r =
		   584'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline$EN_send =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline$EN_deqWrite =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__SEL_1 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd4 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_IN =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp ?
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$D_OUT :
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$D_OUT ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$ENQ =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromSendRsToP ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$DEQ =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$CLR = 1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[577:575] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$ENQ =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2411 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$DEQ =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$CLR =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[2:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$ENQ =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$DEQ =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromSendRsToP ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$CLR =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_IN =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__SEL_1 ?
	       MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__VAL_1 :
	       MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__VAL_2 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$ENQ =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[571] &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2496 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2499 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2456 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$DEQ =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$CLR = 1'b0 ;

  // submodule coreFix_memExe_dTlb
  assign coreFix_memExe_dTlb$perf_req_r = 3'h0 ;
  assign coreFix_memExe_dTlb$perf_setStatus_doStats = 1'b0 ;
  assign coreFix_memExe_dTlb$procReq_req =
	     { coreFix_memExe_regToExeQ$first[192:190],
	       coreFix_memExe_regToExeQ$first[157:140],
	       coreFix_memExe_lsq$getOrigBE << vaddr__h114238[2:0],
	       vaddr__h114238,
	       coreFix_memExe_lsq$getOrigBE[7] ?
		 vaddr__h114238[2:0] != 3'd0 :
		 (coreFix_memExe_lsq$getOrigBE[3] ?
		    vaddr__h114238[1:0] != 2'd0 :
		    coreFix_memExe_lsq$getOrigBE[1] && vaddr__h114238[0]),
	       coreFix_memExe_regToExeQ$first[11:0] } ;
  assign coreFix_memExe_dTlb$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12432 ;
  assign coreFix_memExe_dTlb$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_memExe_dTlb$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_memExe_dTlb$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_memExe_dTlb$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_memExe_dTlb$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_dTlb$toParent_ldTransRsFromP_enq_x =
	     { l2Tlb$toChildren_rsToC_first[80:0],
	       l2Tlb$toChildren_rsToC_first[82:81] } ;
  assign coreFix_memExe_dTlb$updateVMInfo_vm =
	     { prv__h641831,
	       prv__h641831 != 2'd3 && csrf_vm_mode_sv39_reg,
	       csrf_mxr_reg,
	       csrf_sum_reg,
	       csrf_ppn_reg } ;
  assign coreFix_memExe_dTlb$EN_flush = MUX_flush_tlbs$write_1__SEL_1 ;
  assign coreFix_memExe_dTlb$EN_updateVMInfo =
	     MUX_update_vm_info$write_1__SEL_1 ;
  assign coreFix_memExe_dTlb$EN_procReq =
	     CAN_FIRE_RL_coreFix_memExe_doExeMem ;
  assign coreFix_memExe_dTlb$EN_deqProcResp =
	     CAN_FIRE_RL_coreFix_memExe_doFinishMem ;
  assign coreFix_memExe_dTlb$EN_toParent_rqToP_deq = CAN_FIRE_RL_sendDTlbReq ;
  assign coreFix_memExe_dTlb$EN_toParent_ldTransRsFromP_enq =
	     CAN_FIRE_RL_sendRsToDTlb ;
  assign coreFix_memExe_dTlb$EN_toParent_flush_request_get =
	     CAN_FIRE_RL_mkConnectionGetPut ;
  assign coreFix_memExe_dTlb$EN_toParent_flush_response_put =
	     CAN_FIRE_RL_sendFlushDone ;
  assign coreFix_memExe_dTlb$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_memExe_dTlb$EN_specUpdate_correctSpeculation = 1'd1 ;
  assign coreFix_memExe_dTlb$EN_perf_setStatus = 1'b0 ;
  assign coreFix_memExe_dTlb$EN_perf_req = 1'b0 ;
  assign coreFix_memExe_dTlb$EN_perf_resp = 1'b0 ;

  // submodule coreFix_memExe_dispToRegQ
  assign coreFix_memExe_dispToRegQ$enq_x =
	     { coreFix_memExe_rsMem$dispatchData[106:72],
	       coreFix_memExe_rsMem$dispatchData[65:21],
	       coreFix_memExe_rsMem$dispatchData[71:66],
	       coreFix_memExe_rsMem$dispatchData[20:9] } ;
  assign coreFix_memExe_dispToRegQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12432 ;
  assign coreFix_memExe_dispToRegQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_memExe_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_memExe_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_memExe_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_memExe_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_dispToRegQ$EN_enq =
	     WILL_FIRE_RL_coreFix_memExe_doDispatchMem ;
  assign coreFix_memExe_dispToRegQ$EN_deq =
	     WILL_FIRE_RL_coreFix_memExe_doRegReadMem ;
  assign coreFix_memExe_dispToRegQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_memExe_dispToRegQ$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_memExe_lsq
  assign coreFix_memExe_lsq$enqLd_dst =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__3159_AND__ETC___d13886) ?
	       regRenamingTable$rename_0_getRename[8:0] :
	       regRenamingTable$rename_1_getRename[8:0] ;
  assign coreFix_memExe_lsq$enqLd_inst_tag =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__3159_AND__ETC___d13886) ?
	       rob$enqPort_0_getEnqInstTag :
	       rob$enqPort_1_getEnqInstTag ;
  assign coreFix_memExe_lsq$enqLd_mem_inst =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__3159_AND__ETC___d13886) ?
	       fetchStage$pipelines_0_first[191:174] :
	       fetchStage$pipelines_1_first[191:174] ;
  assign coreFix_memExe_lsq$enqLd_spec_bits =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__3159_AND__ETC___d13886) ?
	       specTagManager$currentSpecBits :
	       renaming_spec_bits__h606266 ;
  assign coreFix_memExe_lsq$enqSt_dst =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__3159_AND__ETC___d13894) ?
	       regRenamingTable$rename_0_getRename[8:0] :
	       regRenamingTable$rename_1_getRename[8:0] ;
  assign coreFix_memExe_lsq$enqSt_inst_tag =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__3159_AND__ETC___d13894) ?
	       rob$enqPort_0_getEnqInstTag :
	       rob$enqPort_1_getEnqInstTag ;
  assign coreFix_memExe_lsq$enqSt_mem_inst =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__3159_AND__ETC___d13894) ?
	       fetchStage$pipelines_0_first[191:174] :
	       fetchStage$pipelines_1_first[191:174] ;
  assign coreFix_memExe_lsq$enqSt_spec_bits =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__3159_AND__ETC___d13894) ?
	       specTagManager$currentSpecBits :
	       renaming_spec_bits__h606266 ;
  assign coreFix_memExe_lsq$getHit_t =
	     MUX_coreFix_memExe_lsq$getHit_1__SEL_1 ?
	       MUX_coreFix_memExe_lsq$getHit_1__VAL_1 :
	       MUX_coreFix_memExe_lsq$getHit_1__VAL_1 ;
  assign coreFix_memExe_lsq$getOrigBE_t =
	     coreFix_memExe_regToExeQ$first[145:140] ;
  assign coreFix_memExe_lsq$issueLd_lsqTag =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ?
	       coreFix_memExe_lsq$getIssueLd[76:72] :
	       coreFix_memExe_issueLd$wget[76:72] ;
  assign coreFix_memExe_lsq$issueLd_paddr =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ?
	       coreFix_memExe_lsq$getIssueLd[71:8] :
	       coreFix_memExe_issueLd$wget[71:8] ;
  assign coreFix_memExe_lsq$issueLd_sbRes =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ?
	       MUX_coreFix_memExe_lsq$issueLd_4__VAL_1 :
	       coreFix_memExe_stb$search ;
  assign coreFix_memExe_lsq$issueLd_shiftedBE =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ?
	       coreFix_memExe_lsq$getIssueLd[7:0] :
	       coreFix_memExe_issueLd$wget[7:0] ;
  assign coreFix_memExe_lsq$respLd_alignedData =
	     WILL_FIRE_RL_coreFix_memExe_doRespLdMem ?
	       MUX_coreFix_memExe_lsq$respLd_2__VAL_1 :
	       MUX_coreFix_memExe_lsq$respLd_2__VAL_2 ;
  assign coreFix_memExe_lsq$respLd_t =
	     WILL_FIRE_RL_coreFix_memExe_doRespLdMem ?
	       MUX_coreFix_memExe_lsq$respLd_1__VAL_1 :
	       MUX_coreFix_memExe_lsq$respLd_1__VAL_2 ;
  assign coreFix_memExe_lsq$setAtCommit_0_put =
	     rob$deqPort_0_deq_data[24:19] ;
  assign coreFix_memExe_lsq$setAtCommit_1_put =
	     rob$deqPort_1_deq_data[24:19] ;
  assign coreFix_memExe_lsq$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12432 ;
  assign coreFix_memExe_lsq$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_memExe_lsq$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_memExe_lsq$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_memExe_lsq$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_memExe_lsq$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_lsq$updateAddr_fault =
	     { (!coreFix_memExe_dTlb$procResp[12] &&
		!coreFix_memExe_dTlb$procResp[110] &&
		coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1504) ?
		 coreFix_memExe_dTlb$procResp[105:103] == 3'd2 ||
		 coreFix_memExe_dTlb$procResp[105:103] == 3'd3 ||
		 coreFix_memExe_dTlb$procResp[12] :
		 coreFix_memExe_dTlb$procResp[12] ||
		 coreFix_memExe_dTlb$procResp[110],
	       IF_IF_coreFix_memExe_dTlb_procResp__485_BIT_11_ETC___d1630 } ;
  assign coreFix_memExe_lsq$updateAddr_isMMIO =
	     coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1504 ;
  assign coreFix_memExe_lsq$updateAddr_lsqTag =
	     coreFix_memExe_dTlb$procResp[90:85] ;
  assign coreFix_memExe_lsq$updateAddr_paddr =
	     coreFix_memExe_dTlb$procResp[174:111] ;
  assign coreFix_memExe_lsq$updateAddr_shiftedBE =
	     coreFix_memExe_dTlb$procResp[84:77] ;
  assign coreFix_memExe_lsq$updateData_d =
	     (coreFix_memExe_regToExeQ$first[192:190] == 3'd4) ?
	       coreFix_memExe_regToExeQ$first[75:12] :
	       shiftData__h114243 ;
  assign coreFix_memExe_lsq$updateData_t =
	     coreFix_memExe_regToExeQ$first[143:140] ;
  assign coreFix_memExe_lsq$wakeupLdStalledBySB_sbIdx =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[149:148] ;
  assign coreFix_memExe_lsq$EN_enqLd =
	     WILL_FIRE_RL_renameStage_doRenaming && _dfoo7 ;
  assign coreFix_memExe_lsq$EN_enqSt =
	     WILL_FIRE_RL_renameStage_doRenaming && _dfoo2 ;
  assign coreFix_memExe_lsq$EN_getHit =
	     MUX_coreFix_memExe_lsq$getHit_1__SEL_1 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 ;
  assign coreFix_memExe_lsq$EN_updateData =
	     WILL_FIRE_RL_coreFix_memExe_doExeMem &&
	     coreFix_memExe_regToExeQ$first[145] ;
  assign coreFix_memExe_lsq$EN_updateAddr =
	     CAN_FIRE_RL_coreFix_memExe_doFinishMem ;
  assign coreFix_memExe_lsq$EN_issueLd =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign coreFix_memExe_lsq$EN_getIssueLd =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ;
  assign coreFix_memExe_lsq$EN_respLd =
	     WILL_FIRE_RL_coreFix_memExe_doRespLdMem ||
	     WILL_FIRE_RL_coreFix_memExe_doRespLdForward ;
  assign coreFix_memExe_lsq$EN_deqLd =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;
  assign coreFix_memExe_lsq$EN_deqSt =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_Fence ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_St_Mem ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_fault ;
  assign coreFix_memExe_lsq$EN_wakeupLdStalledBySB =
	     MUX_coreFix_memExe_lsq$wakeupLdStalledBySB_1__SEL_1 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd1 ;
  assign coreFix_memExe_lsq$EN_setAtCommit_0_put =
	     CAN_FIRE_RL_commitStage_doSetLSQAtCommit ;
  assign coreFix_memExe_lsq$EN_setAtCommit_1_put =
	     CAN_FIRE_RL_commitStage_doSetLSQAtCommit_1 ;
  assign coreFix_memExe_lsq$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_memExe_lsq$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_memExe_regToExeQ
  assign coreFix_memExe_regToExeQ$enq_x =
	     { coreFix_memExe_dispToRegQ$first[97:63],
	       coreFix_memExe_dispToRegQ$first[29:12],
	       x__h114150,
	       x__h114151,
	       coreFix_memExe_dispToRegQ$first[11:0] } ;
  assign coreFix_memExe_regToExeQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12432 ;
  assign coreFix_memExe_regToExeQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_memExe_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_memExe_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_memExe_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_memExe_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_regToExeQ$EN_enq =
	     WILL_FIRE_RL_coreFix_memExe_doRegReadMem ;
  assign coreFix_memExe_regToExeQ$EN_deq =
	     CAN_FIRE_RL_coreFix_memExe_doExeMem ;
  assign coreFix_memExe_regToExeQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_memExe_regToExeQ$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_memExe_rsMem
  assign coreFix_memExe_rsMem$enq_x =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__3159_AND__ETC___d13852) ?
	       { fetchStage$pipelines_0_first[191:189],
		 IF_fetchStage_pipelines_0_first__2491_BIT_160__ETC___d13868,
		 regRenamingTable$rename_0_getRename,
		 rob$enqPort_0_getEnqInstTag,
		 specTagManager$currentSpecBits,
		 fetchStage$pipelines_0_first[194:192] == 3'd1,
		 specTagManager$nextSpecTag,
		 sbAggr$eagerLookup_0_get } :
	       { fetchStage$pipelines_1_first[191:189],
		 IF_fetchStage_pipelines_1_first__2500_BIT_160__ETC___d14029,
		 regRenamingTable$rename_1_getRename,
		 rob$enqPort_1_getEnqInstTag,
		 renaming_spec_bits__h606266,
		 fetchStage$pipelines_1_first[194:192] == 3'd1,
		 specTagManager$nextSpecTag,
		 sbAggr$eagerLookup_1_get } ;
  assign coreFix_memExe_rsMem$setRegReady_0_put =
	     coreFix_aluExe_0_rsAlu$setRegReady_0_put ;
  assign coreFix_memExe_rsMem$setRegReady_1_put =
	     coreFix_aluExe_0_rsAlu$setRegReady_1_put ;
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1:
	  coreFix_memExe_rsMem$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2:
	  coreFix_memExe_rsMem$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3:
	  coreFix_memExe_rsMem$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4:
	  coreFix_memExe_rsMem$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5:
	  coreFix_memExe_rsMem$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6:
	  coreFix_memExe_rsMem$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6;
      default: coreFix_memExe_rsMem$setRegReady_2_put =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_rsMem$setRegReady_3_put =
	     coreFix_aluExe_0_rsAlu$setRegReady_3_put ;
  always@(MUX_coreFix_memExe_rsMem$setRegReady_4_put_1__SEL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1 or
	  MUX_coreFix_memExe_rsMem$setRegReady_4_put_1__SEL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_memExe_rsMem$setRegReady_4_put_1__SEL_1:
	  coreFix_memExe_rsMem$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1;
      MUX_coreFix_memExe_rsMem$setRegReady_4_put_1__SEL_2:
	  coreFix_memExe_rsMem$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3:
	  coreFix_memExe_rsMem$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4:
	  coreFix_memExe_rsMem$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3;
      default: coreFix_memExe_rsMem$setRegReady_4_put =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_rsMem$setRobEnqTime_t = rob$getEnqTime ;
  assign coreFix_memExe_rsMem$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12432 ;
  assign coreFix_memExe_rsMem$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_memExe_rsMem$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_memExe_rsMem$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_memExe_rsMem$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_memExe_rsMem$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_rsMem$EN_enq =
	     WILL_FIRE_RL_renameStage_doRenaming && _dfoo12 ;
  assign coreFix_memExe_rsMem$EN_setRobEnqTime = 1'd1 ;
  assign coreFix_memExe_rsMem$EN_doDispatch =
	     WILL_FIRE_RL_coreFix_memExe_doDispatchMem ;
  assign coreFix_memExe_rsMem$EN_setRegReady_0_put =
	     WILL_FIRE_RL_coreFix_aluExe_0_doDispatchAlu &&
	     coreFix_aluExe_0_rsAlu$dispatchData[41] ;
  assign coreFix_memExe_rsMem$EN_setRegReady_1_put =
	     WILL_FIRE_RL_coreFix_aluExe_1_doDispatchAlu &&
	     coreFix_aluExe_1_rsAlu$dispatchData[41] ;
  assign coreFix_memExe_rsMem$EN_setRegReady_2_put =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[32] ;
  assign coreFix_memExe_rsMem$EN_setRegReady_3_put =
	     _dor1coreFix_memExe_rsMem$EN_setRegReady_3_put &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd0 &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd1 &&
	     coreFix_memExe_lsq$issueLd[72] ;
  assign coreFix_memExe_rsMem$EN_setRegReady_4_put =
	     (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq) &&
	     coreFix_memExe_lsq$firstSt[150] ||
	     (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq) &&
	     coreFix_memExe_lsq$firstLd[89] ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2375 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 &&
	     coreFix_memExe_lsq$getHit[8] &&
	     !coreFix_memExe_lsq$getHit[9] ;
  assign coreFix_memExe_rsMem$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_memExe_rsMem$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_memExe_stb
  assign coreFix_memExe_stb$deq_idx =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[149:148] ;
  assign coreFix_memExe_stb$enq_be = coreFix_memExe_lsq$firstSt[76:69] ;
  assign coreFix_memExe_stb$enq_data = coreFix_memExe_lsq$firstSt[68:5] ;
  assign coreFix_memExe_stb$enq_idx = coreFix_memExe_stb$getEnqIndex[1:0] ;
  assign coreFix_memExe_stb$enq_paddr = coreFix_memExe_lsq$firstSt[141:78] ;
  assign coreFix_memExe_stb$getEnqIndex_paddr =
	     coreFix_memExe_lsq$firstSt[141:78] ;
  assign coreFix_memExe_stb$noMatchLdQ_be = coreFix_memExe_lsq$firstLd[15:8] ;
  assign coreFix_memExe_stb$noMatchLdQ_paddr =
	     coreFix_memExe_lsq$firstLd[80:17] ;
  assign coreFix_memExe_stb$noMatchStQ_be =
	     coreFix_memExe_lsq$firstSt[76:69] ;
  assign coreFix_memExe_stb$noMatchStQ_paddr =
	     coreFix_memExe_lsq$firstSt[141:78] ;
  assign coreFix_memExe_stb$search_be =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ?
	       coreFix_memExe_lsq$getIssueLd[7:0] :
	       coreFix_memExe_issueLd$wget[7:0] ;
  assign coreFix_memExe_stb$search_paddr =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ?
	       coreFix_memExe_lsq$getIssueLd[71:8] :
	       coreFix_memExe_issueLd$wget[71:8] ;
  assign coreFix_memExe_stb$EN_enq =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_St_Mem ;
  assign coreFix_memExe_stb$EN_deq =
	     MUX_coreFix_memExe_lsq$wakeupLdStalledBySB_1__SEL_1 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd1 ;
  assign coreFix_memExe_stb$EN_issue = CAN_FIRE_RL_coreFix_memExe_doIssueSB ;

  // submodule coreFix_trainBPQ_0
  assign coreFix_trainBPQ_0$D_IN =
	     MUX_coreFix_trainBPQ_0$enq_1__SEL_1 ?
	       MUX_coreFix_trainBPQ_0$enq_1__VAL_1 :
	       MUX_coreFix_trainBPQ_0$enq_1__VAL_2 ;
  assign coreFix_trainBPQ_0$ENQ =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F &&
	     (coreFix_aluExe_0_exeToFinQ$first[326:322] == 5'd9 ||
	      coreFix_aluExe_0_exeToFinQ$first[326:322] == 5'd10) ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  assign coreFix_trainBPQ_0$DEQ = WILL_FIRE_RL_coreFix_doFetchTrainBP_1 ;
  assign coreFix_trainBPQ_0$CLR = 1'b0 ;

  // submodule coreFix_trainBPQ_1
  assign coreFix_trainBPQ_1$D_IN =
	     MUX_coreFix_trainBPQ_1$enq_1__SEL_1 ?
	       MUX_coreFix_trainBPQ_1$enq_1__VAL_1 :
	       MUX_coreFix_trainBPQ_1$enq_1__VAL_2 ;
  assign coreFix_trainBPQ_1$ENQ =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F &&
	     (coreFix_aluExe_1_exeToFinQ$first[326:322] == 5'd9 ||
	      coreFix_aluExe_1_exeToFinQ$first[326:322] == 5'd10) ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;
  assign coreFix_trainBPQ_1$DEQ = coreFix_trainBPQ_1$EMPTY_N ;
  assign coreFix_trainBPQ_1$CLR = 1'b0 ;

  // submodule csrf_stats_module_writeQ
  assign csrf_stats_module_writeQ$D_IN = csrf_sscratch_csr$D_IN[0] ;
  assign csrf_stats_module_writeQ$ENQ =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd7 ;
  assign csrf_stats_module_writeQ$DEQ = EN_sendDoStats ;
  assign csrf_stats_module_writeQ$CLR = 1'b0 ;

  // submodule csrf_terminate_module_terminateQ
  assign csrf_terminate_module_terminateQ$ENQ =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd6 ;
  assign csrf_terminate_module_terminateQ$DEQ = EN_coreIndInv_terminate ;
  assign csrf_terminate_module_terminateQ$CLR = 1'b0 ;

  // submodule epochManager
  assign epochManager$checkEpoch_0_check_e =
	     fetchStage$pipelines_0_first[259:256] ;
  assign epochManager$checkEpoch_1_check_e =
	     fetchStage$pipelines_1_first[259:256] ;
  assign epochManager$updatePrevEpoch_0_update_e =
	     fetchStage$pipelines_0_first[259:256] ;
  assign epochManager$updatePrevEpoch_1_update_e =
	     fetchStage$pipelines_1_first[259:256] ;
  assign epochManager$EN_updatePrevEpoch_0_update =
	     WILL_FIRE_RL_renameStage_doRenaming_wrongPath &&
	     fetchStage$pipelines_0_canDeq ||
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13814 &&
	     IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13239 ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst ||
	     WILL_FIRE_RL_renameStage_doRenaming_Trap ;
  assign epochManager$EN_updatePrevEpoch_1_update =
	     WILL_FIRE_RL_renameStage_doRenaming_wrongPath &&
	     fetchStage$pipelines_1_canDeq &&
	     !epochManager$checkEpoch_1_check ||
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13940 &&
	     NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13950 &&
	     IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13630 ;
  assign epochManager$EN_incrementEpoch =
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !rob$deqPort_0_deq_data[12] ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst ||
	     WILL_FIRE_RL_renameStage_doRenaming_Trap ;

  // submodule fetchStage
  assign fetchStage$iMemIfc_perf_req_r = 2'h0 ;
  assign fetchStage$iMemIfc_perf_setStatus_doStats = 1'b0 ;
  assign fetchStage$iMemIfc_to_parent_fromP_enq_x =
	     iCacheToParent_fromP_enq_x ;
  assign fetchStage$iMemIfc_to_proc_request_put = 64'h0 ;
  assign fetchStage$iTlbIfc_perf_req_r = 3'h0 ;
  assign fetchStage$iTlbIfc_perf_setStatus_doStats = 1'b0 ;
  assign fetchStage$iTlbIfc_toParent_rsFromP_enq_x =
	     l2Tlb$toChildren_rsToC_first[80:0] ;
  assign fetchStage$iTlbIfc_to_proc_request_put = 64'h0 ;
  assign fetchStage$iTlbIfc_updateVMInfo_vm =
	     { csrf_prv_reg,
	       csrf_prv_reg != 2'd3 && csrf_vm_mode_sv39_reg,
	       csrf_mxr_reg,
	       csrf_sum_reg,
	       csrf_ppn_reg } ;
  assign fetchStage$mmioIfc_instResp_enq_x = mmio_pRsQ_data_0[65:0] ;
  assign fetchStage$mmioIfc_setHtifAddrs_fromHost =
	     coreReq_start_fromHostAddr ;
  assign fetchStage$mmioIfc_setHtifAddrs_toHost = coreReq_start_toHostAddr ;
  assign fetchStage$perf_req_r = 2'h0 ;
  assign fetchStage$perf_setStatus_doStats = 1'b0 ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  WILL_FIRE_RL_commitStage_doCommitTrap_handle or
	  MUX_fetchStage$redirect_1__VAL_3 or
	  WILL_FIRE_RL_commitStage_doCommitSystemInst or
	  MUX_fetchStage$redirect_1__VAL_4 or
	  WILL_FIRE_RL_commitStage_doCommitKilledLd or rob$deqPort_0_deq_data)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  fetchStage$redirect_pc = coreFix_aluExe_1_exeToFinQ$first[82:19];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  fetchStage$redirect_pc = coreFix_aluExe_0_exeToFinQ$first[82:19];
      WILL_FIRE_RL_commitStage_doCommitTrap_handle:
	  fetchStage$redirect_pc = MUX_fetchStage$redirect_1__VAL_3;
      WILL_FIRE_RL_commitStage_doCommitSystemInst:
	  fetchStage$redirect_pc = MUX_fetchStage$redirect_1__VAL_4;
      WILL_FIRE_RL_commitStage_doCommitKilledLd:
	  fetchStage$redirect_pc = rob$deqPort_0_deq_data[548:485];
      default: fetchStage$redirect_pc =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign fetchStage$start_pc = coreReq_start_startpc ;
  assign fetchStage$train_predictors_dpTrain =
	     coreFix_trainBPQ_1$EMPTY_N ?
	       coreFix_trainBPQ_1$D_OUT[25:2] :
	       coreFix_trainBPQ_0$D_OUT[25:2] ;
  assign fetchStage$train_predictors_iType =
	     coreFix_trainBPQ_1$EMPTY_N ?
	       coreFix_trainBPQ_1$D_OUT[31:27] :
	       coreFix_trainBPQ_0$D_OUT[31:27] ;
  assign fetchStage$train_predictors_isCompressed =
	     coreFix_trainBPQ_1$EMPTY_N ?
	       coreFix_trainBPQ_1$D_OUT[0] :
	       coreFix_trainBPQ_0$D_OUT[0] ;
  assign fetchStage$train_predictors_mispred =
	     coreFix_trainBPQ_1$EMPTY_N ?
	       coreFix_trainBPQ_1$D_OUT[1] :
	       coreFix_trainBPQ_0$D_OUT[1] ;
  assign fetchStage$train_predictors_next_pc =
	     coreFix_trainBPQ_1$EMPTY_N ?
	       coreFix_trainBPQ_1$D_OUT[95:32] :
	       coreFix_trainBPQ_0$D_OUT[95:32] ;
  assign fetchStage$train_predictors_pc =
	     coreFix_trainBPQ_1$EMPTY_N ?
	       coreFix_trainBPQ_1$D_OUT[159:96] :
	       coreFix_trainBPQ_0$D_OUT[159:96] ;
  assign fetchStage$train_predictors_taken =
	     coreFix_trainBPQ_1$EMPTY_N ?
	       coreFix_trainBPQ_1$D_OUT[26] :
	       coreFix_trainBPQ_0$D_OUT[26] ;
  assign fetchStage$EN_pipelines_0_deq =
	     WILL_FIRE_RL_renameStage_doRenaming_wrongPath &&
	     fetchStage$pipelines_0_canDeq ||
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13814 &&
	     IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13239 ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst ||
	     WILL_FIRE_RL_renameStage_doRenaming_Trap ;
  assign fetchStage$EN_pipelines_1_deq =
	     WILL_FIRE_RL_renameStage_doRenaming_wrongPath &&
	     fetchStage$pipelines_1_canDeq &&
	     !epochManager$checkEpoch_1_check ||
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13940 &&
	     NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13950 &&
	     IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13630 ;
  assign fetchStage$EN_iTlbIfc_flush = MUX_flush_tlbs$write_1__SEL_1 ;
  assign fetchStage$EN_iTlbIfc_updateVMInfo =
	     MUX_update_vm_info$write_1__SEL_1 ;
  assign fetchStage$EN_iTlbIfc_to_proc_request_put = 1'b0 ;
  assign fetchStage$EN_iTlbIfc_to_proc_response_get = 1'b0 ;
  assign fetchStage$EN_iTlbIfc_toParent_rqToP_deq = WILL_FIRE_RL_sendITlbReq ;
  assign fetchStage$EN_iTlbIfc_toParent_rsFromP_enq =
	     CAN_FIRE_RL_sendRsToITlb ;
  assign fetchStage$EN_iTlbIfc_toParent_flush_request_get =
	     CAN_FIRE_RL_mkConnectionGetPut_1 ;
  assign fetchStage$EN_iTlbIfc_toParent_flush_response_put =
	     CAN_FIRE_RL_sendFlushDone ;
  assign fetchStage$EN_iTlbIfc_perf_setStatus = 1'b0 ;
  assign fetchStage$EN_iTlbIfc_perf_req = 1'b0 ;
  assign fetchStage$EN_iTlbIfc_perf_resp = 1'b0 ;
  assign fetchStage$EN_iMemIfc_to_proc_request_put = 1'b0 ;
  assign fetchStage$EN_iMemIfc_to_proc_response_get = 1'b0 ;
  assign fetchStage$EN_iMemIfc_flush = 1'b0 ;
  assign fetchStage$EN_iMemIfc_perf_setStatus = 1'b0 ;
  assign fetchStage$EN_iMemIfc_perf_req = 1'b0 ;
  assign fetchStage$EN_iMemIfc_perf_resp = 1'b0 ;
  assign fetchStage$EN_iMemIfc_to_parent_rsToP_deq =
	     EN_iCacheToParent_rsToP_deq ;
  assign fetchStage$EN_iMemIfc_to_parent_rqToP_deq =
	     EN_iCacheToParent_rqToP_deq ;
  assign fetchStage$EN_iMemIfc_to_parent_fromP_enq =
	     EN_iCacheToParent_fromP_enq ;
  assign fetchStage$EN_iMemIfc_cRqStuck_get = EN_deadlock_iCacheCRqStuck_get ;
  assign fetchStage$EN_iMemIfc_pRqStuck_get = EN_deadlock_iCachePRqStuck_get ;
  assign fetchStage$EN_mmioIfc_instReq_deq = WILL_FIRE_RL_mmio_sendInstReq ;
  assign fetchStage$EN_mmioIfc_instResp_enq = CAN_FIRE_RL_mmio_sendInstResp ;
  assign fetchStage$EN_mmioIfc_setHtifAddrs = EN_coreReq_start ;
  assign fetchStage$EN_start = EN_coreReq_start ;
  assign fetchStage$EN_stop = 1'b0 ;
  assign fetchStage$EN_setWaitRedirect =
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !rob$deqPort_0_deq_data[12] ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst ||
	     WILL_FIRE_RL_renameStage_doRenaming_Trap ;
  assign fetchStage$EN_redirect =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ;
  assign fetchStage$EN_done_flushing = CAN_FIRE_RL_readyToFetch ;
  assign fetchStage$EN_train_predictors =
	     coreFix_trainBPQ_1$EMPTY_N ||
	     WILL_FIRE_RL_coreFix_doFetchTrainBP_1 ;
  assign fetchStage$EN_flush_predictors = 1'b0 ;
  assign fetchStage$EN_perf_setStatus = 1'b0 ;
  assign fetchStage$EN_perf_req = 1'b0 ;
  assign fetchStage$EN_perf_resp = 1'b0 ;

  // submodule l2Tlb
  assign l2Tlb$perf_req_r = 4'h0 ;
  assign l2Tlb$perf_setStatus_doStats = 1'b0 ;
  assign l2Tlb$toChildren_rqFromC_put =
	     WILL_FIRE_RL_sendDTlbReq ?
	       MUX_l2Tlb$toChildren_rqFromC_put_1__VAL_1 :
	       MUX_l2Tlb$toChildren_rqFromC_put_1__VAL_2 ;
  assign l2Tlb$toMem_respLd_enq_x = tlbToMem_respLd_enq_x ;
  assign l2Tlb$updateVMInfo_vmD = coreFix_memExe_dTlb$updateVMInfo_vm ;
  assign l2Tlb$updateVMInfo_vmI = fetchStage$iTlbIfc_updateVMInfo_vm ;
  assign l2Tlb$EN_updateVMInfo = MUX_update_vm_info$write_1__SEL_1 ;
  assign l2Tlb$EN_toChildren_rqFromC_put =
	     WILL_FIRE_RL_sendDTlbReq || WILL_FIRE_RL_sendITlbReq ;
  assign l2Tlb$EN_toChildren_rsToC_deq =
	     WILL_FIRE_RL_sendRsToITlb || WILL_FIRE_RL_sendRsToDTlb ;
  assign l2Tlb$EN_toChildren_iTlbReqFlush_put =
	     CAN_FIRE_RL_mkConnectionGetPut_1 ;
  assign l2Tlb$EN_toChildren_dTlbReqFlush_put =
	     CAN_FIRE_RL_mkConnectionGetPut ;
  assign l2Tlb$EN_toChildren_flushDone_get = CAN_FIRE_RL_sendFlushDone ;
  assign l2Tlb$EN_toMem_memReq_deq = EN_tlbToMem_memReq_deq ;
  assign l2Tlb$EN_toMem_respLd_enq = EN_tlbToMem_respLd_enq ;
  assign l2Tlb$EN_perf_setStatus = 1'b0 ;
  assign l2Tlb$EN_perf_req = 1'b0 ;
  assign l2Tlb$EN_perf_resp = 1'b0 ;

  // submodule perfReqQ
  assign perfReqQ$D_IN = { coreReq_perfReq_loc, coreReq_perfReq_t } ;
  assign perfReqQ$ENQ = EN_coreReq_perfReq ;
  assign perfReqQ$DEQ = EN_coreIndInv_perfResp ;
  assign perfReqQ$CLR = 1'b0 ;

  // submodule regRenamingTable
  assign regRenamingTable$rename_0_claimRename_r =
	     fetchStage$pipelines_0_first[95:69] ;
  assign regRenamingTable$rename_0_claimRename_sb =
	     specTagManager$currentSpecBits ;
  assign regRenamingTable$rename_0_getRename_r =
	     fetchStage$pipelines_0_first[95:69] ;
  assign regRenamingTable$rename_1_claimRename_r =
	     fetchStage$pipelines_1_first[95:69] ;
  assign regRenamingTable$rename_1_claimRename_sb =
	     renaming_spec_bits__h606266 ;
  assign regRenamingTable$rename_1_getRename_r =
	     fetchStage$pipelines_1_first[95:69] ;
  assign regRenamingTable$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12432 ;
  assign regRenamingTable$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  regRenamingTable$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  regRenamingTable$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  regRenamingTable$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: regRenamingTable$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign regRenamingTable$EN_rename_0_claimRename =
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13814 &&
	     IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13239 ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst ;
  assign regRenamingTable$EN_rename_1_claimRename =
	     MUX_epochManager$updatePrevEpoch_1_update_1__SEL_2 ;
  assign regRenamingTable$EN_commit_0_commit =
	     WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	     rob$deqPort_0_canDeq ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ;
  assign regRenamingTable$EN_commit_1_commit =
	     WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	     rob$deqPort_1_canDeq &&
	     rob$deqPort_1_deq_data[25] &&
	     !rob$deqPort_1_deq_data[18] &&
	     !rob$deqPort_1_deq_data[266] &&
	     rob$deqPort_1_deq_data[356:352] != 5'd0 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd21 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd17 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd18 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd13 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd16 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd15 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd19 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd20 ;
  assign regRenamingTable$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign regRenamingTable$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule rf
  assign rf$read_0_rd1_rindx = coreFix_aluExe_0_dispToRegQ$first[84:78] ;
  assign rf$read_0_rd2_rindx = coreFix_aluExe_0_dispToRegQ$first[76:70] ;
  assign rf$read_0_rd3_rindx = 7'h0 ;
  assign rf$read_1_rd1_rindx = coreFix_aluExe_1_dispToRegQ$first[84:78] ;
  assign rf$read_1_rd2_rindx = coreFix_aluExe_1_dispToRegQ$first[76:70] ;
  assign rf$read_1_rd3_rindx = 7'h0 ;
  assign rf$read_2_rd1_rindx =
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[55:49] ;
  assign rf$read_2_rd2_rindx =
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[47:41] ;
  assign rf$read_2_rd3_rindx =
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[39:33] ;
  assign rf$read_3_rd1_rindx = coreFix_memExe_dispToRegQ$first[61:55] ;
  assign rf$read_3_rd2_rindx = coreFix_memExe_dispToRegQ$first[53:47] ;
  assign rf$read_3_rd3_rindx = 7'h0 ;
  assign rf$read_4_rd1_rindx = 7'h0 ;
  assign rf$read_4_rd2_rindx = 7'h0 ;
  assign rf$read_4_rd3_rindx = 7'h0 ;
  assign rf$write_0_wr_data = coreFix_aluExe_0_exeToFinQ$first[275:212] ;
  assign rf$write_0_wr_rindx = coreFix_aluExe_0_exeToFinQ$first[320:314] ;
  assign rf$write_1_wr_data = coreFix_aluExe_1_exeToFinQ$first[275:212] ;
  assign rf$write_1_wr_rindx = coreFix_aluExe_1_exeToFinQ$first[320:314] ;
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1 or
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2 or
	  MUX_rf$write_2_wr_2__VAL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3 or
	  MUX_rf$write_2_wr_2__VAL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4 or
	  MUX_rf$write_2_wr_2__VAL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5 or
	  MUX_rf$write_2_wr_2__VAL_5 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6 or
	  MUX_rf$write_2_wr_2__VAL_6)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1:
	  rf$write_2_wr_data =
	      coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[101:38];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2:
	  rf$write_2_wr_data = MUX_rf$write_2_wr_2__VAL_2;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3:
	  rf$write_2_wr_data = MUX_rf$write_2_wr_2__VAL_3;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4:
	  rf$write_2_wr_data = MUX_rf$write_2_wr_2__VAL_4;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5:
	  rf$write_2_wr_data = MUX_rf$write_2_wr_2__VAL_5;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6:
	  rf$write_2_wr_data = MUX_rf$write_2_wr_2__VAL_6;
      default: rf$write_2_wr_data =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1 or
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2 or
	  coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3 or
	  coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4 or
	  coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5 or
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6 or
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1:
	  rf$write_2_wr_rindx =
	      coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2:
	  rf$write_2_wr_rindx =
	      coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3:
	  rf$write_2_wr_rindx =
	      coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4:
	  rf$write_2_wr_rindx =
	      coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5:
	  rf$write_2_wr_rindx =
	      coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6:
	  rf$write_2_wr_rindx =
	      coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[31:25];
      default: rf$write_2_wr_rindx = 7'b0101010 /* unspecified value */ ;
    endcase
  end
  always@(MUX_rf$write_3_wr_2__SEL_1 or
	  coreFix_memExe_lsq$respLd or
	  MUX_rf$write_3_wr_1__SEL_2 or
	  coreFix_memExe_respLrScAmoQ_data_0 or
	  MUX_rf$write_3_wr_1__SEL_3 or
	  mmio_dataRespQ_data_0 or
	  MUX_rf$write_3_wr_1__SEL_4 or
	  MUX_rf$write_3_wr_2__VAL_4 or
	  MUX_rf$write_3_wr_1__SEL_5 or MUX_rf$write_3_wr_2__VAL_5)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_rf$write_3_wr_2__SEL_1:
	  rf$write_3_wr_data = coreFix_memExe_lsq$respLd[63:0];
      MUX_rf$write_3_wr_1__SEL_2:
	  rf$write_3_wr_data = coreFix_memExe_respLrScAmoQ_data_0;
      MUX_rf$write_3_wr_1__SEL_3:
	  rf$write_3_wr_data = mmio_dataRespQ_data_0[63:0];
      MUX_rf$write_3_wr_1__SEL_4:
	  rf$write_3_wr_data = MUX_rf$write_3_wr_2__VAL_4;
      MUX_rf$write_3_wr_1__SEL_5:
	  rf$write_3_wr_data = MUX_rf$write_3_wr_2__VAL_5;
      default: rf$write_3_wr_data =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(MUX_rf$write_3_wr_1__SEL_1 or
	  coreFix_memExe_lsq$respLd or
	  MUX_rf$write_3_wr_1__SEL_4 or
	  MUX_rf$write_3_wr_1__SEL_5 or
	  coreFix_memExe_lsq$firstLd or
	  MUX_rf$write_3_wr_1__SEL_2 or
	  MUX_rf$write_3_wr_1__SEL_3 or coreFix_memExe_lsq$firstSt)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_rf$write_3_wr_1__SEL_1:
	  rf$write_3_wr_rindx = coreFix_memExe_lsq$respLd[71:65];
      MUX_rf$write_3_wr_1__SEL_4 || MUX_rf$write_3_wr_1__SEL_5:
	  rf$write_3_wr_rindx = coreFix_memExe_lsq$firstLd[88:82];
      MUX_rf$write_3_wr_1__SEL_2 || MUX_rf$write_3_wr_1__SEL_3:
	  rf$write_3_wr_rindx = coreFix_memExe_lsq$firstSt[149:143];
      default: rf$write_3_wr_rindx = 7'b0101010 /* unspecified value */ ;
    endcase
  end
  assign rf$write_4_wr_data = 64'h0 ;
  assign rf$write_4_wr_rindx = 7'h0 ;
  assign rf$EN_write_0_wr =
	     _dor1rf$EN_write_0_wr && coreFix_aluExe_0_exeToFinQ$first[321] ;
  assign rf$EN_write_1_wr =
	     _dor1rf$EN_write_1_wr && coreFix_aluExe_1_exeToFinQ$first[321] ;
  assign rf$EN_write_2_wr =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[32] ;
  assign rf$EN_write_3_wr =
	     (WILL_FIRE_RL_coreFix_memExe_doRespLdForward ||
	      WILL_FIRE_RL_coreFix_memExe_doRespLdMem) &&
	     coreFix_memExe_lsq$respLd[72] ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq &&
	     coreFix_memExe_lsq$firstSt[150] ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq &&
	     coreFix_memExe_lsq$firstSt[150] ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	     coreFix_memExe_lsq$firstLd[89] ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign rf$EN_write_4_wr = 1'b0 ;

  // submodule rob
  always@(MUX_epochManager$updatePrevEpoch_0_update_1__SEL_2 or
	  MUX_rob$enqPort_0_enq_1__VAL_1 or
	  WILL_FIRE_RL_renameStage_doRenaming_Trap or
	  MUX_rob$enqPort_0_enq_1__VAL_2 or
	  WILL_FIRE_RL_renameStage_doRenaming_SystemInst or
	  MUX_rob$enqPort_0_enq_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_epochManager$updatePrevEpoch_0_update_1__SEL_2:
	  rob$enqPort_0_enq_x = MUX_rob$enqPort_0_enq_1__VAL_1;
      WILL_FIRE_RL_renameStage_doRenaming_Trap:
	  rob$enqPort_0_enq_x = MUX_rob$enqPort_0_enq_1__VAL_2;
      WILL_FIRE_RL_renameStage_doRenaming_SystemInst:
	  rob$enqPort_0_enq_x = MUX_rob$enqPort_0_enq_1__VAL_3;
      default: rob$enqPort_0_enq_x =
		   552'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign rob$enqPort_1_enq_x =
	     { (NOT_scaprf_pcc_reg_read_wget__2773_BITS_33_TO__ETC___d12776 ||
		IF_scaprf_pcc_reg_read_wget__2773_BITS_149_TO__ETC___d14085) &&
	       scaprf_pcc_reg_data_rl[152],
	       address__h617901,
	       x__h618085[13:0],
	       scaprf_pcc_reg_data_rl[71:0],
	       repBound__h577231,
	       scaprf_pcc_reg_read_wget__2773_BITS_27_TO_25_2_ETC___d12820,
	       scaprf_pcc_reg_read_wget__2773_BITS_13_TO_11_2_ETC___d12821,
	       _0_CONCAT_fetchStage_pipelines_1_first__2500_BI_ETC___d14074,
	       IF_scaprf_pcc_reg_read_wget__2773_BITS_27_TO_2_ETC___d14099,
	       fetchStage$pipelines_1_first[127:96],
	       fetchStage$pipelines_1_first[199:195],
	       fetchStage$pipelines_1_first[75:69],
	       64'hAAAAAAAAAAAAAAAA,
	       fetchStage_pipelines_1_first__2500_BIT_173_333_ETC___d13416,
	       74'h2500000000000000001,
	       ret_address__h618848,
	       ret_addrBits__h618849,
	       87'h7FFF8FFFFFA20000007E00,
	       fetchStage$pipelines_1_first[75] &&
	       fetchStage$pipelines_1_first[74],
	       fetchStage$pipelines_1_first[194:192] != 3'd0 &&
	       fetchStage$pipelines_1_first[194:192] != 3'd1 &&
	       fetchStage$pipelines_1_first[194:192] != 3'd2 &&
	       fetchStage$pipelines_1_first[194:192] != 3'd3 &&
	       fetchStage$pipelines_1_first[194:192] != 3'd4,
	       fetchStage$pipelines_1_first[194:192] != 3'd2 ||
	       fetchStage_pipelines_0_canDeq__2489_AND_regRen_ETC___d14116 ||
	       IF_fetchStage_pipelines_1_first__2500_BITS_191_ETC___d14023,
	       IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d14126,
	       7'd32,
	       renaming_spec_bits__h606266 } ;
  assign rob$getOrigPC_0_get_x = coreFix_aluExe_0_dispToRegQ$first[52:41] ;
  assign rob$getOrigPC_1_get_x = coreFix_aluExe_1_dispToRegQ$first[52:41] ;
  assign rob$getOrigPC_2_get_x = 12'h0 ;
  assign rob$getOrigPredPC_0_get_x =
	     coreFix_aluExe_0_dispToRegQ$first[52:41] ;
  assign rob$getOrigPredPC_1_get_x =
	     coreFix_aluExe_1_dispToRegQ$first[52:41] ;
  assign rob$getOrig_Inst_0_get_x = coreFix_aluExe_0_dispToRegQ$first[52:41] ;
  assign rob$getOrig_Inst_1_get_x = coreFix_aluExe_1_dispToRegQ$first[52:41] ;
  always@(WILL_FIRE_RL_coreFix_memExe_doDeqStQ_fault or
	  MUX_rob$setExecuted_deqLSQ_2__VAL_2 or
	  WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault or
	  MUX_rob$setExecuted_deqLSQ_2__VAL_6 or
	  MUX_rob$setExecuted_deqLSQ_1__SEL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 or
	  WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem or
	  WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault or
	  WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_fault:
	  rob$setExecuted_deqLSQ_cause = MUX_rob$setExecuted_deqLSQ_2__VAL_2;
      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault:
	  rob$setExecuted_deqLSQ_cause = MUX_rob$setExecuted_deqLSQ_2__VAL_6;
      MUX_rob$setExecuted_deqLSQ_1__SEL_1 ||
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 ||
      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem:
	  rob$setExecuted_deqLSQ_cause = 5'd10;
      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault:
	  rob$setExecuted_deqLSQ_cause = 5'd21;
      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault:
	  rob$setExecuted_deqLSQ_cause = 5'd23;
      default: rob$setExecuted_deqLSQ_cause =
		   5'b01010 /* unspecified value */ ;
    endcase
  end
  assign rob$setExecuted_deqLSQ_ld_killed =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem ?
	       coreFix_memExe_lsq$firstLd[2:0] :
	       3'd2 ;
  assign rob$setExecuted_deqLSQ_x =
	     (MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault) ?
	       coreFix_memExe_lsq$firstLd[113:102] :
	       coreFix_memExe_lsq$firstSt[170:159] ;
  assign rob$setExecuted_doFinishAlu_0_set_cf =
	     coreFix_aluExe_0_exeToFinQ$first[146:17] ;
  assign rob$setExecuted_doFinishAlu_0_set_csrData =
	     coreFix_aluExe_0_exeToFinQ$first[211:147] ;
  assign rob$setExecuted_doFinishAlu_0_set_dst_data =
	     coreFix_aluExe_0_exeToFinQ$first[275:212] ;
  assign rob$setExecuted_doFinishAlu_0_set_x =
	     coreFix_aluExe_0_exeToFinQ$first[312:301] ;
  assign rob$setExecuted_doFinishAlu_1_set_cf =
	     coreFix_aluExe_1_exeToFinQ$first[146:17] ;
  assign rob$setExecuted_doFinishAlu_1_set_csrData =
	     coreFix_aluExe_1_exeToFinQ$first[211:147] ;
  assign rob$setExecuted_doFinishAlu_1_set_dst_data =
	     coreFix_aluExe_1_exeToFinQ$first[275:212] ;
  assign rob$setExecuted_doFinishAlu_1_set_x =
	     coreFix_aluExe_1_exeToFinQ$first[312:301] ;
  always@(WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple or
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma or
	  MUX_rf$write_2_wr_2__VAL_2 or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv or
	  MUX_rf$write_2_wr_2__VAL_3 or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt or
	  MUX_rf$write_2_wr_2__VAL_4 or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul or
	  MUX_rf$write_2_wr_2__VAL_5 or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv or
	  MUX_rf$write_2_wr_2__VAL_6)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_dst_data =
	      coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[101:38];
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_dst_data =
	      MUX_rf$write_2_wr_2__VAL_2;
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_dst_data =
	      MUX_rf$write_2_wr_2__VAL_3;
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_dst_data =
	      MUX_rf$write_2_wr_2__VAL_4;
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_dst_data =
	      MUX_rf$write_2_wr_2__VAL_5;
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_dst_data =
	      MUX_rf$write_2_wr_2__VAL_6;
      default: rob$setExecuted_doFinishFpuMulDiv_0_set_dst_data =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple or
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma or
	  MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_2 or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv or
	  MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_3 or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt or
	  MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_4 or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_fflags =
	      coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[37:33];
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_fflags =
	      MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_2;
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_fflags =
	      MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_3;
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_fflags =
	      MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_4;
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul ||
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_fflags = 5'd0;
      default: rob$setExecuted_doFinishFpuMulDiv_0_set_fflags =
		   5'b01010 /* unspecified value */ ;
    endcase
  end
  always@(WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple or
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma or
	  coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv or
	  coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt or
	  coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul or
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv or
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_x =
	      coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[23:12];
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_x =
	      coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[23:12];
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_x =
	      coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[23:12];
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_x =
	      coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[23:12];
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_x =
	      coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[23:12];
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_x =
	      coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[23:12];
      default: rob$setExecuted_doFinishFpuMulDiv_0_set_x =
		   12'b101010101010 /* unspecified value */ ;
    endcase
  end
  assign rob$setExecuted_doFinishMem_access_at_commit =
	     IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1513 &&
	     (coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1504 ||
	      coreFix_memExe_dTlb$procResp[105:103] == 3'd2 ||
	      coreFix_memExe_dTlb$procResp[105:103] == 3'd3 ||
	      coreFix_memExe_dTlb$procResp[105:103] == 3'd4) ;
  assign rob$setExecuted_doFinishMem_non_mmio_st_done =
	     IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1513 &&
	     NOT_coreFix_memExe_dTlb_procResp__485_BITS_174_ETC___d1524 &&
	     coreFix_memExe_dTlb$procResp[105:103] == 3'd1 ;
  assign rob$setExecuted_doFinishMem_store_data =
	     64'hAAAAAAAAAAAAAAAA /* unspecified value */  ;
  assign rob$setExecuted_doFinishMem_store_data_BE =
	     8'b10101010 /* unspecified value */  ;
  assign rob$setExecuted_doFinishMem_vaddr =
	     coreFix_memExe_dTlb$procResp[76:13] ;
  assign rob$setExecuted_doFinishMem_x =
	     coreFix_memExe_dTlb$procResp[102:91] ;
  assign rob$setLSQAtCommitNotified_x = rob$deqPort_0_getDeqInstTag ;
  assign rob$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12432 ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  rob$specUpdate_incorrectSpeculation_inst_tag =
	      coreFix_aluExe_1_exeToFinQ$first[312:301];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  rob$specUpdate_incorrectSpeculation_inst_tag =
	      coreFix_aluExe_0_exeToFinQ$first[312:301];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  rob$specUpdate_incorrectSpeculation_inst_tag =
	      12'b101010101010 /* unspecified value */ ;
      default: rob$specUpdate_incorrectSpeculation_inst_tag =
		   12'b101010101010 /* unspecified value */ ;
    endcase
  end
  assign rob$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  rob$specUpdate_incorrectSpeculation_spec_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  rob$specUpdate_incorrectSpeculation_spec_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  rob$specUpdate_incorrectSpeculation_spec_tag =
	      4'b1010 /* unspecified value */ ;
      default: rob$specUpdate_incorrectSpeculation_spec_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign rob$EN_enqPort_0_enq =
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13814 &&
	     IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13239 ||
	     WILL_FIRE_RL_renameStage_doRenaming_Trap ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst ;
  assign rob$EN_enqPort_1_enq =
	     MUX_epochManager$updatePrevEpoch_1_update_1__SEL_2 ;
  assign rob$EN_deqPort_0_deq =
	     WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	     rob$deqPort_0_canDeq ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ;
  assign rob$EN_deqPort_1_deq =
	     WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	     rob$deqPort_1_canDeq &&
	     rob$deqPort_1_deq_data[25] &&
	     !rob$deqPort_1_deq_data[18] &&
	     !rob$deqPort_1_deq_data[266] &&
	     rob$deqPort_1_deq_data[356:352] != 5'd0 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd21 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd17 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd18 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd13 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd16 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd15 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd19 &&
	     rob$deqPort_1_deq_data[356:352] != 5'd20 ;
  assign rob$EN_setLSQAtCommitNotified =
	     CAN_FIRE_RL_commitStage_notifyLSQCommit ;
  assign rob$EN_setExecuted_deqLSQ =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_Fence ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault ;
  assign rob$EN_setExecuted_doFinishAlu_0_set =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  assign rob$EN_setExecuted_doFinishAlu_1_set =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;
  assign rob$EN_setExecuted_doFinishFpuMulDiv_0_set =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv ;
  assign rob$EN_setExecuted_doFinishMem =
	     CAN_FIRE_RL_coreFix_memExe_doFinishMem ;
  assign rob$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign rob$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule sbAggr
  assign sbAggr$eagerLookup_0_get_r = regRenamingTable$rename_0_getRename ;
  assign sbAggr$eagerLookup_1_get_r = regRenamingTable$rename_1_getRename ;
  assign sbAggr$setBusy_0_set_dst = regRenamingTable$rename_0_getRename[8:0] ;
  assign sbAggr$setBusy_1_set_dst = regRenamingTable$rename_1_getRename[8:0] ;
  assign sbAggr$setReady_0_put = coreFix_aluExe_0_rsAlu$dispatchData[40:34] ;
  assign sbAggr$setReady_1_put = coreFix_aluExe_1_rsAlu$dispatchData[40:34] ;
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1 or
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2 or
	  coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3 or
	  coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4 or
	  coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5 or
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6 or
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1:
	  sbAggr$setReady_2_put =
	      coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2:
	  sbAggr$setReady_2_put =
	      coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3:
	  sbAggr$setReady_2_put =
	      coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4:
	  sbAggr$setReady_2_put =
	      coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5:
	  sbAggr$setReady_2_put =
	      coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6:
	  sbAggr$setReady_2_put =
	      coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[31:25];
      default: sbAggr$setReady_2_put = 7'b0101010 /* unspecified value */ ;
    endcase
  end
  assign sbAggr$setReady_3_put = coreFix_memExe_lsq$issueLd[71:65] ;
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4 or
	  coreFix_memExe_lsq$getHit or
	  MUX_sbAggr$setReady_4_put_1__SEL_2 or
	  coreFix_memExe_lsq$firstLd or
	  MUX_sbAggr$setReady_4_put_1__SEL_1 or coreFix_memExe_lsq$firstSt)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3 ||
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4:
	  sbAggr$setReady_4_put = coreFix_memExe_lsq$getHit[7:1];
      MUX_sbAggr$setReady_4_put_1__SEL_2:
	  sbAggr$setReady_4_put = coreFix_memExe_lsq$firstLd[88:82];
      MUX_sbAggr$setReady_4_put_1__SEL_1:
	  sbAggr$setReady_4_put = coreFix_memExe_lsq$firstSt[149:143];
      default: sbAggr$setReady_4_put = 7'b0101010 /* unspecified value */ ;
    endcase
  end
  assign sbAggr$EN_setBusy_0_set =
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13814 &&
	     IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13239 ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst ;
  assign sbAggr$EN_setBusy_1_set =
	     MUX_epochManager$updatePrevEpoch_1_update_1__SEL_2 ;
  assign sbAggr$EN_setReady_0_put =
	     WILL_FIRE_RL_coreFix_aluExe_0_doDispatchAlu &&
	     coreFix_aluExe_0_rsAlu$dispatchData[41] ;
  assign sbAggr$EN_setReady_1_put =
	     WILL_FIRE_RL_coreFix_aluExe_1_doDispatchAlu &&
	     coreFix_aluExe_1_rsAlu$dispatchData[41] ;
  assign sbAggr$EN_setReady_2_put =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[32] ;
  assign sbAggr$EN_setReady_3_put =
	     _dor1sbAggr$EN_setReady_3_put &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd0 &&
	     coreFix_memExe_lsq$issueLd[74:73] != 2'd1 &&
	     coreFix_memExe_lsq$issueLd[72] ;
  assign sbAggr$EN_setReady_4_put =
	     (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq) &&
	     coreFix_memExe_lsq$firstSt[150] ||
	     (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq) &&
	     coreFix_memExe_lsq$firstLd[89] ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2375 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 &&
	     coreFix_memExe_lsq$getHit[8] &&
	     !coreFix_memExe_lsq$getHit[9] ;

  // submodule sbCons
  assign sbCons$eagerLookup_0_get_r = 33'h0 ;
  assign sbCons$eagerLookup_1_get_r = 33'h0 ;
  assign sbCons$lazyLookup_0_get_r =
	     coreFix_aluExe_0_dispToRegQ$first[85:53] ;
  assign sbCons$lazyLookup_1_get_r =
	     coreFix_aluExe_1_dispToRegQ$first[85:53] ;
  assign sbCons$lazyLookup_2_get_r =
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[56:24] ;
  assign sbCons$lazyLookup_3_get_r = coreFix_memExe_dispToRegQ$first[62:30] ;
  assign sbCons$lazyLookup_4_get_r = 33'h0 ;
  assign sbCons$setBusy_0_set_dst = regRenamingTable$rename_0_getRename[8:0] ;
  assign sbCons$setBusy_1_set_dst = regRenamingTable$rename_1_getRename[8:0] ;
  assign sbCons$setReady_0_put = coreFix_aluExe_0_exeToFinQ$first[320:314] ;
  assign sbCons$setReady_1_put = coreFix_aluExe_1_exeToFinQ$first[320:314] ;
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1 or
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2 or
	  coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3 or
	  coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4 or
	  coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5 or
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6 or
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1:
	  sbCons$setReady_2_put =
	      coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2:
	  sbCons$setReady_2_put =
	      coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3:
	  sbCons$setReady_2_put =
	      coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4:
	  sbCons$setReady_2_put =
	      coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5:
	  sbCons$setReady_2_put =
	      coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6:
	  sbCons$setReady_2_put =
	      coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[31:25];
      default: sbCons$setReady_2_put = 7'b0101010 /* unspecified value */ ;
    endcase
  end
  always@(MUX_sbCons$setReady_3_put_1__SEL_1 or
	  coreFix_memExe_lsq$respLd or
	  MUX_sbCons$setReady_3_put_1__SEL_2 or
	  coreFix_memExe_lsq$firstSt or
	  MUX_sbCons$setReady_3_put_1__SEL_3 or coreFix_memExe_lsq$firstLd)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_sbCons$setReady_3_put_1__SEL_1:
	  sbCons$setReady_3_put = coreFix_memExe_lsq$respLd[71:65];
      MUX_sbCons$setReady_3_put_1__SEL_2:
	  sbCons$setReady_3_put = coreFix_memExe_lsq$firstSt[149:143];
      MUX_sbCons$setReady_3_put_1__SEL_3:
	  sbCons$setReady_3_put = coreFix_memExe_lsq$firstLd[88:82];
      default: sbCons$setReady_3_put = 7'b0101010 /* unspecified value */ ;
    endcase
  end
  assign sbCons$setReady_4_put = 7'h0 ;
  assign sbCons$EN_setBusy_0_set =
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13814 &&
	     IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13239 ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst ;
  assign sbCons$EN_setBusy_1_set =
	     MUX_epochManager$updatePrevEpoch_1_update_1__SEL_2 ;
  assign sbCons$EN_setReady_0_put =
	     _dor1sbCons$EN_setReady_0_put &&
	     coreFix_aluExe_0_exeToFinQ$first[321] ;
  assign sbCons$EN_setReady_1_put =
	     _dor1sbCons$EN_setReady_1_put &&
	     coreFix_aluExe_1_exeToFinQ$first[321] ;
  assign sbCons$EN_setReady_2_put =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[32] ;
  assign sbCons$EN_setReady_3_put =
	     (WILL_FIRE_RL_coreFix_memExe_doRespLdForward ||
	      WILL_FIRE_RL_coreFix_memExe_doRespLdMem) &&
	     coreFix_memExe_lsq$respLd[72] ||
	     (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq) &&
	     coreFix_memExe_lsq$firstSt[150] ||
	     (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq) &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign sbCons$EN_setReady_4_put = 1'b0 ;

  // submodule specTagManager
  assign specTagManager$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12432 ;
  assign specTagManager$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  specTagManager$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  specTagManager$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  specTagManager$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: specTagManager$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign specTagManager$EN_claimSpecTag =
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     (fetchStage_pipelines_0_canDeq__2489_AND_specTa_ETC___d13900 ||
	      NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13940 &&
	      NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d14061) ;
  assign specTagManager$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign specTagManager$EN_specUpdate_correctSpeculation = 1'd1 ;

  // remaining internal signals
  module_amoExec instance_amoExec_2(.amoExec_amo_inst(coreFix_memExe_dMem_cache_m_banks_0_processAmo[10:4]),
				    .amoExec_current_data(curData__h123270),
				    .amoExec_in_data(coreFix_memExe_dMem_cache_m_banks_0_processAmo[74:11]),
				    .amoExec_upper_32_bits(coreFix_memExe_dMem_cache_m_banks_0_processAmo[90]),
				    .amoExec(n__h124635));
  module_amoExec instance_amoExec_3(.amoExec_amo_inst({ mmio_pRqQ_data_0[35:32],
							3'd0 }),
				    .amoExec_current_data({ 63'd0,
							    r__h535115 }),
				    .amoExec_in_data({ 32'd0, x__h47746 }),
				    .amoExec_upper_32_bits(1'd0),
				    .amoExec(amoExec___d766));
  module_basicExec instance_basicExec_5(.basicExec_dInst({ coreFix_aluExe_0_regToExeQ$first[421:417],
							   CASE_coreFix_aluExe_0_regToExeQfirst_BITS_416_ETC__q220,
							   { coreFix_aluExe_0_regToExeQ$first[395],
							     CASE_coreFix_aluExe_0_regToExeQfirst_BITS_394_ETC__q221,
							     coreFix_aluExe_0_regToExeQ$first[382],
							     coreFix_aluExe_0_regToExeQ$first[381:350] } }),
					.basicExec_rVal1(coreFix_aluExe_0_regToExeQ$first[304:241]),
					.basicExec_rVal2(coreFix_aluExe_0_regToExeQ$first[240:177]),
					.basicExec_pc(coreFix_aluExe_0_regToExeQ$first[176:113]),
					.basicExec_ppc(coreFix_aluExe_0_regToExeQ$first[112:49]),
					.basicExec_orig_inst(coreFix_aluExe_0_regToExeQ$first[48:17]),
					.basicExec(basicExec___d12338));
  module_basicExec instance_basicExec_6(.basicExec_dInst({ coreFix_aluExe_1_regToExeQ$first[421:417],
							   CASE_coreFix_aluExe_1_regToExeQfirst_BITS_416_ETC__q223,
							   { coreFix_aluExe_1_regToExeQ$first[395],
							     CASE_coreFix_aluExe_1_regToExeQfirst_BITS_394_ETC__q224,
							     coreFix_aluExe_1_regToExeQ$first[382],
							     coreFix_aluExe_1_regToExeQ$first[381:350] } }),
					.basicExec_rVal1(coreFix_aluExe_1_regToExeQ$first[304:241]),
					.basicExec_rVal2(coreFix_aluExe_1_regToExeQ$first[240:177]),
					.basicExec_pc(coreFix_aluExe_1_regToExeQ$first[176:113]),
					.basicExec_ppc(coreFix_aluExe_1_regToExeQ$first[112:49]),
					.basicExec_orig_inst(coreFix_aluExe_1_regToExeQ$first[48:17]),
					.basicExec(basicExec___d11664));
  module_checkForException instance_checkForException_0(.checkForException_dInst({ fetchStage$pipelines_0_first[199:195],
										   IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d12606,
										   { { fetchStage$pipelines_0_first[173],
										       IF_fetchStage_pipelines_0_first__2491_BITS_172_ETC___d12688 },
										     fetchStage$pipelines_0_first[160],
										     x_data_imm__h597590 } }),
							.checkForException_regs({ fetchStage$pipelines_0_first[95],
										  fetchStage$pipelines_0_first[94:89],
										  { fetchStage$pipelines_0_first[88],
										    fetchStage$pipelines_0_first[87:82] },
										  { fetchStage$pipelines_0_first[81],
										    fetchStage$pipelines_0_first[80:76],
										    { fetchStage$pipelines_0_first[75],
										      fetchStage$pipelines_0_first[74:69] } } }),
							.checkForException_csrState({ x_decodeInfo_frm__h575724,
										      r1__read_BITS_13_TO_12___h575909 !=
										      2'd0,
										      { prv__h641787,
											csrf_tvm_reg,
											{ r1__read_BIT_20___h576573,
											  csrf_tsr_reg,
											  { csrf_mcounteren_cy_reg,
											    csrf_mcounteren_cy_reg &&
											    csrf_scounteren_cy_reg,
											    { csrf_mcounteren_ir_reg,
											      csrf_mcounteren_ir_reg &&
											      csrf_scounteren_ir_reg,
											      { csrf_mcounteren_tm_reg,
												csrf_mcounteren_tm_reg &&
												csrf_scounteren_tm_reg } } } } } }),
							.checkForException(checkForException___d12723));
  module_checkForException instance_checkForException_1(.checkForException_dInst({ fetchStage$pipelines_1_first[199:195],
										   IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13332,
										   { fetchStage_pipelines_1_first__2500_BIT_173_333_ETC___d13416,
										     fetchStage$pipelines_1_first[160],
										     x_data_imm__h614051 } }),
							.checkForException_regs({ fetchStage$pipelines_1_first[95],
										  fetchStage$pipelines_1_first[94:89],
										  { fetchStage$pipelines_1_first[88],
										    fetchStage$pipelines_1_first[87:82] },
										  { fetchStage$pipelines_1_first[81],
										    fetchStage$pipelines_1_first[80:76],
										    { fetchStage$pipelines_1_first[75],
										      fetchStage$pipelines_1_first[74:69] } } }),
							.checkForException_csrState({ x_decodeInfo_frm__h575724,
										      r1__read_BITS_13_TO_12___h575909 !=
										      2'd0,
										      { prv__h641787,
											csrf_tvm_reg,
											{ r1__read_BIT_20___h576573,
											  csrf_tsr_reg,
											  { csrf_mcounteren_cy_reg,
											    csrf_mcounteren_cy_reg &&
											    csrf_scounteren_cy_reg,
											    { csrf_mcounteren_ir_reg,
											      csrf_mcounteren_ir_reg &&
											      csrf_scounteren_ir_reg,
											      { csrf_mcounteren_tm_reg,
												csrf_mcounteren_tm_reg &&
												csrf_scounteren_tm_reg } } } } } }),
							.checkForException(checkForException___d13438));
  module_execFpuSimple instance_execFpuSimple_4(.execFpuSimple_fpu_inst({ coreFix_fpuMulDivExe_0_regToExeQ$first[233:229],
									  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q242,
									  coreFix_fpuMulDivExe_0_regToExeQ$first[225] }),
						.execFpuSimple_rVal1(rVal1__h401339),
						.execFpuSimple_rVal2(rVal2__h401340),
						.execFpuSimple(execFpuSimple___d10730));
  assign IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMu_ETC__q21 =
	     _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d3908 ?
	       _theResult___snd__h273105 :
	       _theResult____h264931 ;
  assign IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMu_ETC__q56 =
	     _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d5300 ?
	       _theResult___snd__h318802 :
	       _theResult____h310630 ;
  assign IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMu_ETC__q91 =
	     _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d6692 ?
	       _theResult___snd__h364497 :
	       _theResult____h356325 ;
  assign IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_f_ETC__q130 =
	     _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d8571 ?
	       _theResult___snd__h430751 :
	       _theResult____h422452 ;
  assign IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_f_ETC__q147 =
	     _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d9286 ?
	       _theResult___snd__h508908 :
	       _theResult____h500609 ;
  assign IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_f_ETC__q170 =
	     _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10056 ?
	       _theResult___snd__h469604 :
	       _theResult____h461305 ;
  assign IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuM_ETC__q101 =
	     _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d7243 ?
	       _theResult___snd__h382263 :
	       _theResult____h373962 ;
  assign IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuM_ETC__q31 =
	     _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d4459 ?
	       _theResult___snd__h290871 :
	       _theResult____h282570 ;
  assign IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuM_ETC__q66 =
	     _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d5851 ?
	       _theResult___snd__h336568 :
	       _theResult____h328267 ;
  assign IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q126 =
	     _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d8259 ?
	       _theResult___snd__h421100 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q133 =
	     _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d8621 ?
	       _theResult___snd__h421100 :
	       _theResult___snd__h439505 ;
  assign IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q143 =
	     _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d8989 ?
	       _theResult___snd__h499257 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q150 =
	     _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9336 ?
	       _theResult___snd__h499257 :
	       _theResult___snd__h517662 ;
  assign IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q166 =
	     _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9759 ?
	       _theResult___snd__h459953 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q173 =
	     _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10106 ?
	       _theResult___snd__h459953 :
	       _theResult___snd__h478358 ;
  assign IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q106 =
	     _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d7316 ?
	       _theResult___snd__h373079 :
	       _theResult___snd__h390869 ;
  assign IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q23 =
	     _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d4139 ?
	       _theResult___snd__h281687 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q36 =
	     _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d4532 ?
	       _theResult___snd__h281687 :
	       _theResult___snd__h299477 ;
  assign IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q58 =
	     _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5531 ?
	       _theResult___snd__h327384 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q71 =
	     _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5924 ?
	       _theResult___snd__h327384 :
	       _theResult___snd__h345174 ;
  assign IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q93 =
	     _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6923 ?
	       _theResult___snd__h373079 :
	       57'd0 ;
  assign IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d4728 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d3672 ?
	       ((_theResult___fst_exp__h273042 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4713) :
	       ((_theResult___fst_exp__h281698 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4726) ;
  assign IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d4778 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d3672 ?
	       ((_theResult___fst_exp__h273042 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4769) :
	       ((_theResult___fst_exp__h281698 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4776) ;
  assign IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d6120 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5064 ?
	       ((_theResult___fst_exp__h318739 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6105) :
	       ((_theResult___fst_exp__h327395 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6118) ;
  assign IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d6170 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5064 ?
	       ((_theResult___fst_exp__h318739 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6161) :
	       ((_theResult___fst_exp__h327395 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6168) ;
  assign IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d7512 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6456 ?
	       ((_theResult___fst_exp__h364434 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7497) :
	       ((_theResult___fst_exp__h373090 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7510) ;
  assign IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d7562 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6456 ?
	       ((_theResult___fst_exp__h364434 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7553) :
	       ((_theResult___fst_exp__h373090 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7560) ;
  assign IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d3906 =
	     (_theResult____h264931[56] ?
		6'd0 :
		(_theResult____h264931[55] ?
		   6'd1 :
		   (_theResult____h264931[54] ?
		      6'd2 :
		      (_theResult____h264931[53] ?
			 6'd3 :
			 (_theResult____h264931[52] ?
			    6'd4 :
			    (_theResult____h264931[51] ?
			       6'd5 :
			       (_theResult____h264931[50] ?
				  6'd6 :
				  (_theResult____h264931[49] ?
				     6'd7 :
				     (_theResult____h264931[48] ?
					6'd8 :
					(_theResult____h264931[47] ?
					   6'd9 :
					   (_theResult____h264931[46] ?
					      6'd10 :
					      (_theResult____h264931[45] ?
						 6'd11 :
						 (_theResult____h264931[44] ?
						    6'd12 :
						    (_theResult____h264931[43] ?
						       6'd13 :
						       (_theResult____h264931[42] ?
							  6'd14 :
							  (_theResult____h264931[41] ?
							     6'd15 :
							     (_theResult____h264931[40] ?
								6'd16 :
								(_theResult____h264931[39] ?
								   6'd17 :
								   (_theResult____h264931[38] ?
								      6'd18 :
								      (_theResult____h264931[37] ?
									 6'd19 :
									 (_theResult____h264931[36] ?
									    6'd20 :
									    (_theResult____h264931[35] ?
									       6'd21 :
									       (_theResult____h264931[34] ?
										  6'd22 :
										  (_theResult____h264931[33] ?
										     6'd23 :
										     (_theResult____h264931[32] ?
											6'd24 :
											(_theResult____h264931[31] ?
											   6'd25 :
											   (_theResult____h264931[30] ?
											      6'd26 :
											      (_theResult____h264931[29] ?
												 6'd27 :
												 (_theResult____h264931[28] ?
												    6'd28 :
												    (_theResult____h264931[27] ?
												       6'd29 :
												       (_theResult____h264931[26] ?
													  6'd30 :
													  (_theResult____h264931[25] ?
													     6'd31 :
													     (_theResult____h264931[24] ?
														6'd32 :
														(_theResult____h264931[23] ?
														   6'd33 :
														   (_theResult____h264931[22] ?
														      6'd34 :
														      (_theResult____h264931[21] ?
															 6'd35 :
															 (_theResult____h264931[20] ?
															    6'd36 :
															    (_theResult____h264931[19] ?
															       6'd37 :
															       (_theResult____h264931[18] ?
																  6'd38 :
																  (_theResult____h264931[17] ?
																     6'd39 :
																     (_theResult____h264931[16] ?
																	6'd40 :
																	(_theResult____h264931[15] ?
																	   6'd41 :
																	   (_theResult____h264931[14] ?
																	      6'd42 :
																	      (_theResult____h264931[13] ?
																		 6'd43 :
																		 (_theResult____h264931[12] ?
																		    6'd44 :
																		    (_theResult____h264931[11] ?
																		       6'd45 :
																		       (_theResult____h264931[10] ?
																			  6'd46 :
																			  (_theResult____h264931[9] ?
																			     6'd47 :
																			     (_theResult____h264931[8] ?
																				6'd48 :
																				(_theResult____h264931[7] ?
																				   6'd49 :
																				   (_theResult____h264931[6] ?
																				      6'd50 :
																				      (_theResult____h264931[5] ?
																					 6'd51 :
																					 (_theResult____h264931[4] ?
																					    6'd52 :
																					    (_theResult____h264931[3] ?
																					       6'd53 :
																					       (_theResult____h264931[2] ?
																						  6'd54 :
																						  (_theResult____h264931[1] ?
																						     6'd55 :
																						     (_theResult____h264931[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d5298 =
	     (_theResult____h310630[56] ?
		6'd0 :
		(_theResult____h310630[55] ?
		   6'd1 :
		   (_theResult____h310630[54] ?
		      6'd2 :
		      (_theResult____h310630[53] ?
			 6'd3 :
			 (_theResult____h310630[52] ?
			    6'd4 :
			    (_theResult____h310630[51] ?
			       6'd5 :
			       (_theResult____h310630[50] ?
				  6'd6 :
				  (_theResult____h310630[49] ?
				     6'd7 :
				     (_theResult____h310630[48] ?
					6'd8 :
					(_theResult____h310630[47] ?
					   6'd9 :
					   (_theResult____h310630[46] ?
					      6'd10 :
					      (_theResult____h310630[45] ?
						 6'd11 :
						 (_theResult____h310630[44] ?
						    6'd12 :
						    (_theResult____h310630[43] ?
						       6'd13 :
						       (_theResult____h310630[42] ?
							  6'd14 :
							  (_theResult____h310630[41] ?
							     6'd15 :
							     (_theResult____h310630[40] ?
								6'd16 :
								(_theResult____h310630[39] ?
								   6'd17 :
								   (_theResult____h310630[38] ?
								      6'd18 :
								      (_theResult____h310630[37] ?
									 6'd19 :
									 (_theResult____h310630[36] ?
									    6'd20 :
									    (_theResult____h310630[35] ?
									       6'd21 :
									       (_theResult____h310630[34] ?
										  6'd22 :
										  (_theResult____h310630[33] ?
										     6'd23 :
										     (_theResult____h310630[32] ?
											6'd24 :
											(_theResult____h310630[31] ?
											   6'd25 :
											   (_theResult____h310630[30] ?
											      6'd26 :
											      (_theResult____h310630[29] ?
												 6'd27 :
												 (_theResult____h310630[28] ?
												    6'd28 :
												    (_theResult____h310630[27] ?
												       6'd29 :
												       (_theResult____h310630[26] ?
													  6'd30 :
													  (_theResult____h310630[25] ?
													     6'd31 :
													     (_theResult____h310630[24] ?
														6'd32 :
														(_theResult____h310630[23] ?
														   6'd33 :
														   (_theResult____h310630[22] ?
														      6'd34 :
														      (_theResult____h310630[21] ?
															 6'd35 :
															 (_theResult____h310630[20] ?
															    6'd36 :
															    (_theResult____h310630[19] ?
															       6'd37 :
															       (_theResult____h310630[18] ?
																  6'd38 :
																  (_theResult____h310630[17] ?
																     6'd39 :
																     (_theResult____h310630[16] ?
																	6'd40 :
																	(_theResult____h310630[15] ?
																	   6'd41 :
																	   (_theResult____h310630[14] ?
																	      6'd42 :
																	      (_theResult____h310630[13] ?
																		 6'd43 :
																		 (_theResult____h310630[12] ?
																		    6'd44 :
																		    (_theResult____h310630[11] ?
																		       6'd45 :
																		       (_theResult____h310630[10] ?
																			  6'd46 :
																			  (_theResult____h310630[9] ?
																			     6'd47 :
																			     (_theResult____h310630[8] ?
																				6'd48 :
																				(_theResult____h310630[7] ?
																				   6'd49 :
																				   (_theResult____h310630[6] ?
																				      6'd50 :
																				      (_theResult____h310630[5] ?
																					 6'd51 :
																					 (_theResult____h310630[4] ?
																					    6'd52 :
																					    (_theResult____h310630[3] ?
																					       6'd53 :
																					       (_theResult____h310630[2] ?
																						  6'd54 :
																						  (_theResult____h310630[1] ?
																						     6'd55 :
																						     (_theResult____h310630[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d6690 =
	     (_theResult____h356325[56] ?
		6'd0 :
		(_theResult____h356325[55] ?
		   6'd1 :
		   (_theResult____h356325[54] ?
		      6'd2 :
		      (_theResult____h356325[53] ?
			 6'd3 :
			 (_theResult____h356325[52] ?
			    6'd4 :
			    (_theResult____h356325[51] ?
			       6'd5 :
			       (_theResult____h356325[50] ?
				  6'd6 :
				  (_theResult____h356325[49] ?
				     6'd7 :
				     (_theResult____h356325[48] ?
					6'd8 :
					(_theResult____h356325[47] ?
					   6'd9 :
					   (_theResult____h356325[46] ?
					      6'd10 :
					      (_theResult____h356325[45] ?
						 6'd11 :
						 (_theResult____h356325[44] ?
						    6'd12 :
						    (_theResult____h356325[43] ?
						       6'd13 :
						       (_theResult____h356325[42] ?
							  6'd14 :
							  (_theResult____h356325[41] ?
							     6'd15 :
							     (_theResult____h356325[40] ?
								6'd16 :
								(_theResult____h356325[39] ?
								   6'd17 :
								   (_theResult____h356325[38] ?
								      6'd18 :
								      (_theResult____h356325[37] ?
									 6'd19 :
									 (_theResult____h356325[36] ?
									    6'd20 :
									    (_theResult____h356325[35] ?
									       6'd21 :
									       (_theResult____h356325[34] ?
										  6'd22 :
										  (_theResult____h356325[33] ?
										     6'd23 :
										     (_theResult____h356325[32] ?
											6'd24 :
											(_theResult____h356325[31] ?
											   6'd25 :
											   (_theResult____h356325[30] ?
											      6'd26 :
											      (_theResult____h356325[29] ?
												 6'd27 :
												 (_theResult____h356325[28] ?
												    6'd28 :
												    (_theResult____h356325[27] ?
												       6'd29 :
												       (_theResult____h356325[26] ?
													  6'd30 :
													  (_theResult____h356325[25] ?
													     6'd31 :
													     (_theResult____h356325[24] ?
														6'd32 :
														(_theResult____h356325[23] ?
														   6'd33 :
														   (_theResult____h356325[22] ?
														      6'd34 :
														      (_theResult____h356325[21] ?
															 6'd35 :
															 (_theResult____h356325[20] ?
															    6'd36 :
															    (_theResult____h356325[19] ?
															       6'd37 :
															       (_theResult____h356325[18] ?
																  6'd38 :
																  (_theResult____h356325[17] ?
																     6'd39 :
																     (_theResult____h356325[16] ?
																	6'd40 :
																	(_theResult____h356325[15] ?
																	   6'd41 :
																	   (_theResult____h356325[14] ?
																	      6'd42 :
																	      (_theResult____h356325[13] ?
																		 6'd43 :
																		 (_theResult____h356325[12] ?
																		    6'd44 :
																		    (_theResult____h356325[11] ?
																		       6'd45 :
																		       (_theResult____h356325[10] ?
																			  6'd46 :
																			  (_theResult____h356325[9] ?
																			     6'd47 :
																			     (_theResult____h356325[8] ?
																				6'd48 :
																				(_theResult____h356325[7] ?
																				   6'd49 :
																				   (_theResult____h356325[6] ?
																				      6'd50 :
																				      (_theResult____h356325[5] ?
																					 6'd51 :
																					 (_theResult____h356325[4] ?
																					    6'd52 :
																					    (_theResult____h356325[3] ?
																					       6'd53 :
																					       (_theResult____h356325[2] ?
																						  6'd54 :
																						  (_theResult____h356325[1] ?
																						     6'd55 :
																						     (_theResult____h356325[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d10054 =
	     (_theResult____h461305[56] ?
		6'd0 :
		(_theResult____h461305[55] ?
		   6'd1 :
		   (_theResult____h461305[54] ?
		      6'd2 :
		      (_theResult____h461305[53] ?
			 6'd3 :
			 (_theResult____h461305[52] ?
			    6'd4 :
			    (_theResult____h461305[51] ?
			       6'd5 :
			       (_theResult____h461305[50] ?
				  6'd6 :
				  (_theResult____h461305[49] ?
				     6'd7 :
				     (_theResult____h461305[48] ?
					6'd8 :
					(_theResult____h461305[47] ?
					   6'd9 :
					   (_theResult____h461305[46] ?
					      6'd10 :
					      (_theResult____h461305[45] ?
						 6'd11 :
						 (_theResult____h461305[44] ?
						    6'd12 :
						    (_theResult____h461305[43] ?
						       6'd13 :
						       (_theResult____h461305[42] ?
							  6'd14 :
							  (_theResult____h461305[41] ?
							     6'd15 :
							     (_theResult____h461305[40] ?
								6'd16 :
								(_theResult____h461305[39] ?
								   6'd17 :
								   (_theResult____h461305[38] ?
								      6'd18 :
								      (_theResult____h461305[37] ?
									 6'd19 :
									 (_theResult____h461305[36] ?
									    6'd20 :
									    (_theResult____h461305[35] ?
									       6'd21 :
									       (_theResult____h461305[34] ?
										  6'd22 :
										  (_theResult____h461305[33] ?
										     6'd23 :
										     (_theResult____h461305[32] ?
											6'd24 :
											(_theResult____h461305[31] ?
											   6'd25 :
											   (_theResult____h461305[30] ?
											      6'd26 :
											      (_theResult____h461305[29] ?
												 6'd27 :
												 (_theResult____h461305[28] ?
												    6'd28 :
												    (_theResult____h461305[27] ?
												       6'd29 :
												       (_theResult____h461305[26] ?
													  6'd30 :
													  (_theResult____h461305[25] ?
													     6'd31 :
													     (_theResult____h461305[24] ?
														6'd32 :
														(_theResult____h461305[23] ?
														   6'd33 :
														   (_theResult____h461305[22] ?
														      6'd34 :
														      (_theResult____h461305[21] ?
															 6'd35 :
															 (_theResult____h461305[20] ?
															    6'd36 :
															    (_theResult____h461305[19] ?
															       6'd37 :
															       (_theResult____h461305[18] ?
																  6'd38 :
																  (_theResult____h461305[17] ?
																     6'd39 :
																     (_theResult____h461305[16] ?
																	6'd40 :
																	(_theResult____h461305[15] ?
																	   6'd41 :
																	   (_theResult____h461305[14] ?
																	      6'd42 :
																	      (_theResult____h461305[13] ?
																		 6'd43 :
																		 (_theResult____h461305[12] ?
																		    6'd44 :
																		    (_theResult____h461305[11] ?
																		       6'd45 :
																		       (_theResult____h461305[10] ?
																			  6'd46 :
																			  (_theResult____h461305[9] ?
																			     6'd47 :
																			     (_theResult____h461305[8] ?
																				6'd48 :
																				(_theResult____h461305[7] ?
																				   6'd49 :
																				   (_theResult____h461305[6] ?
																				      6'd50 :
																				      (_theResult____h461305[5] ?
																					 6'd51 :
																					 (_theResult____h461305[4] ?
																					    6'd52 :
																					    (_theResult____h461305[3] ?
																					       6'd53 :
																					       (_theResult____h461305[2] ?
																						  6'd54 :
																						  (_theResult____h461305[1] ?
																						     6'd55 :
																						     (_theResult____h461305[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d8569 =
	     (_theResult____h422452[56] ?
		6'd0 :
		(_theResult____h422452[55] ?
		   6'd1 :
		   (_theResult____h422452[54] ?
		      6'd2 :
		      (_theResult____h422452[53] ?
			 6'd3 :
			 (_theResult____h422452[52] ?
			    6'd4 :
			    (_theResult____h422452[51] ?
			       6'd5 :
			       (_theResult____h422452[50] ?
				  6'd6 :
				  (_theResult____h422452[49] ?
				     6'd7 :
				     (_theResult____h422452[48] ?
					6'd8 :
					(_theResult____h422452[47] ?
					   6'd9 :
					   (_theResult____h422452[46] ?
					      6'd10 :
					      (_theResult____h422452[45] ?
						 6'd11 :
						 (_theResult____h422452[44] ?
						    6'd12 :
						    (_theResult____h422452[43] ?
						       6'd13 :
						       (_theResult____h422452[42] ?
							  6'd14 :
							  (_theResult____h422452[41] ?
							     6'd15 :
							     (_theResult____h422452[40] ?
								6'd16 :
								(_theResult____h422452[39] ?
								   6'd17 :
								   (_theResult____h422452[38] ?
								      6'd18 :
								      (_theResult____h422452[37] ?
									 6'd19 :
									 (_theResult____h422452[36] ?
									    6'd20 :
									    (_theResult____h422452[35] ?
									       6'd21 :
									       (_theResult____h422452[34] ?
										  6'd22 :
										  (_theResult____h422452[33] ?
										     6'd23 :
										     (_theResult____h422452[32] ?
											6'd24 :
											(_theResult____h422452[31] ?
											   6'd25 :
											   (_theResult____h422452[30] ?
											      6'd26 :
											      (_theResult____h422452[29] ?
												 6'd27 :
												 (_theResult____h422452[28] ?
												    6'd28 :
												    (_theResult____h422452[27] ?
												       6'd29 :
												       (_theResult____h422452[26] ?
													  6'd30 :
													  (_theResult____h422452[25] ?
													     6'd31 :
													     (_theResult____h422452[24] ?
														6'd32 :
														(_theResult____h422452[23] ?
														   6'd33 :
														   (_theResult____h422452[22] ?
														      6'd34 :
														      (_theResult____h422452[21] ?
															 6'd35 :
															 (_theResult____h422452[20] ?
															    6'd36 :
															    (_theResult____h422452[19] ?
															       6'd37 :
															       (_theResult____h422452[18] ?
																  6'd38 :
																  (_theResult____h422452[17] ?
																     6'd39 :
																     (_theResult____h422452[16] ?
																	6'd40 :
																	(_theResult____h422452[15] ?
																	   6'd41 :
																	   (_theResult____h422452[14] ?
																	      6'd42 :
																	      (_theResult____h422452[13] ?
																		 6'd43 :
																		 (_theResult____h422452[12] ?
																		    6'd44 :
																		    (_theResult____h422452[11] ?
																		       6'd45 :
																		       (_theResult____h422452[10] ?
																			  6'd46 :
																			  (_theResult____h422452[9] ?
																			     6'd47 :
																			     (_theResult____h422452[8] ?
																				6'd48 :
																				(_theResult____h422452[7] ?
																				   6'd49 :
																				   (_theResult____h422452[6] ?
																				      6'd50 :
																				      (_theResult____h422452[5] ?
																					 6'd51 :
																					 (_theResult____h422452[4] ?
																					    6'd52 :
																					    (_theResult____h422452[3] ?
																					       6'd53 :
																					       (_theResult____h422452[2] ?
																						  6'd54 :
																						  (_theResult____h422452[1] ?
																						     6'd55 :
																						     (_theResult____h422452[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d9284 =
	     (_theResult____h500609[56] ?
		6'd0 :
		(_theResult____h500609[55] ?
		   6'd1 :
		   (_theResult____h500609[54] ?
		      6'd2 :
		      (_theResult____h500609[53] ?
			 6'd3 :
			 (_theResult____h500609[52] ?
			    6'd4 :
			    (_theResult____h500609[51] ?
			       6'd5 :
			       (_theResult____h500609[50] ?
				  6'd6 :
				  (_theResult____h500609[49] ?
				     6'd7 :
				     (_theResult____h500609[48] ?
					6'd8 :
					(_theResult____h500609[47] ?
					   6'd9 :
					   (_theResult____h500609[46] ?
					      6'd10 :
					      (_theResult____h500609[45] ?
						 6'd11 :
						 (_theResult____h500609[44] ?
						    6'd12 :
						    (_theResult____h500609[43] ?
						       6'd13 :
						       (_theResult____h500609[42] ?
							  6'd14 :
							  (_theResult____h500609[41] ?
							     6'd15 :
							     (_theResult____h500609[40] ?
								6'd16 :
								(_theResult____h500609[39] ?
								   6'd17 :
								   (_theResult____h500609[38] ?
								      6'd18 :
								      (_theResult____h500609[37] ?
									 6'd19 :
									 (_theResult____h500609[36] ?
									    6'd20 :
									    (_theResult____h500609[35] ?
									       6'd21 :
									       (_theResult____h500609[34] ?
										  6'd22 :
										  (_theResult____h500609[33] ?
										     6'd23 :
										     (_theResult____h500609[32] ?
											6'd24 :
											(_theResult____h500609[31] ?
											   6'd25 :
											   (_theResult____h500609[30] ?
											      6'd26 :
											      (_theResult____h500609[29] ?
												 6'd27 :
												 (_theResult____h500609[28] ?
												    6'd28 :
												    (_theResult____h500609[27] ?
												       6'd29 :
												       (_theResult____h500609[26] ?
													  6'd30 :
													  (_theResult____h500609[25] ?
													     6'd31 :
													     (_theResult____h500609[24] ?
														6'd32 :
														(_theResult____h500609[23] ?
														   6'd33 :
														   (_theResult____h500609[22] ?
														      6'd34 :
														      (_theResult____h500609[21] ?
															 6'd35 :
															 (_theResult____h500609[20] ?
															    6'd36 :
															    (_theResult____h500609[19] ?
															       6'd37 :
															       (_theResult____h500609[18] ?
																  6'd38 :
																  (_theResult____h500609[17] ?
																     6'd39 :
																     (_theResult____h500609[16] ?
																	6'd40 :
																	(_theResult____h500609[15] ?
																	   6'd41 :
																	   (_theResult____h500609[14] ?
																	      6'd42 :
																	      (_theResult____h500609[13] ?
																		 6'd43 :
																		 (_theResult____h500609[12] ?
																		    6'd44 :
																		    (_theResult____h500609[11] ?
																		       6'd45 :
																		       (_theResult____h500609[10] ?
																			  6'd46 :
																			  (_theResult____h500609[9] ?
																			     6'd47 :
																			     (_theResult____h500609[8] ?
																				6'd48 :
																				(_theResult____h500609[7] ?
																				   6'd49 :
																				   (_theResult____h500609[6] ?
																				      6'd50 :
																				      (_theResult____h500609[5] ?
																					 6'd51 :
																					 (_theResult____h500609[4] ?
																					    6'd52 :
																					    (_theResult____h500609[3] ?
																					       6'd53 :
																					       (_theResult____h500609[2] ?
																						  6'd54 :
																						  (_theResult____h500609[1] ?
																						     6'd55 :
																						     (_theResult____h500609[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d4457 =
	     (_theResult____h282570[56] ?
		6'd0 :
		(_theResult____h282570[55] ?
		   6'd1 :
		   (_theResult____h282570[54] ?
		      6'd2 :
		      (_theResult____h282570[53] ?
			 6'd3 :
			 (_theResult____h282570[52] ?
			    6'd4 :
			    (_theResult____h282570[51] ?
			       6'd5 :
			       (_theResult____h282570[50] ?
				  6'd6 :
				  (_theResult____h282570[49] ?
				     6'd7 :
				     (_theResult____h282570[48] ?
					6'd8 :
					(_theResult____h282570[47] ?
					   6'd9 :
					   (_theResult____h282570[46] ?
					      6'd10 :
					      (_theResult____h282570[45] ?
						 6'd11 :
						 (_theResult____h282570[44] ?
						    6'd12 :
						    (_theResult____h282570[43] ?
						       6'd13 :
						       (_theResult____h282570[42] ?
							  6'd14 :
							  (_theResult____h282570[41] ?
							     6'd15 :
							     (_theResult____h282570[40] ?
								6'd16 :
								(_theResult____h282570[39] ?
								   6'd17 :
								   (_theResult____h282570[38] ?
								      6'd18 :
								      (_theResult____h282570[37] ?
									 6'd19 :
									 (_theResult____h282570[36] ?
									    6'd20 :
									    (_theResult____h282570[35] ?
									       6'd21 :
									       (_theResult____h282570[34] ?
										  6'd22 :
										  (_theResult____h282570[33] ?
										     6'd23 :
										     (_theResult____h282570[32] ?
											6'd24 :
											(_theResult____h282570[31] ?
											   6'd25 :
											   (_theResult____h282570[30] ?
											      6'd26 :
											      (_theResult____h282570[29] ?
												 6'd27 :
												 (_theResult____h282570[28] ?
												    6'd28 :
												    (_theResult____h282570[27] ?
												       6'd29 :
												       (_theResult____h282570[26] ?
													  6'd30 :
													  (_theResult____h282570[25] ?
													     6'd31 :
													     (_theResult____h282570[24] ?
														6'd32 :
														(_theResult____h282570[23] ?
														   6'd33 :
														   (_theResult____h282570[22] ?
														      6'd34 :
														      (_theResult____h282570[21] ?
															 6'd35 :
															 (_theResult____h282570[20] ?
															    6'd36 :
															    (_theResult____h282570[19] ?
															       6'd37 :
															       (_theResult____h282570[18] ?
																  6'd38 :
																  (_theResult____h282570[17] ?
																     6'd39 :
																     (_theResult____h282570[16] ?
																	6'd40 :
																	(_theResult____h282570[15] ?
																	   6'd41 :
																	   (_theResult____h282570[14] ?
																	      6'd42 :
																	      (_theResult____h282570[13] ?
																		 6'd43 :
																		 (_theResult____h282570[12] ?
																		    6'd44 :
																		    (_theResult____h282570[11] ?
																		       6'd45 :
																		       (_theResult____h282570[10] ?
																			  6'd46 :
																			  (_theResult____h282570[9] ?
																			     6'd47 :
																			     (_theResult____h282570[8] ?
																				6'd48 :
																				(_theResult____h282570[7] ?
																				   6'd49 :
																				   (_theResult____h282570[6] ?
																				      6'd50 :
																				      (_theResult____h282570[5] ?
																					 6'd51 :
																					 (_theResult____h282570[4] ?
																					    6'd52 :
																					    (_theResult____h282570[3] ?
																					       6'd53 :
																					       (_theResult____h282570[2] ?
																						  6'd54 :
																						  (_theResult____h282570[1] ?
																						     6'd55 :
																						     (_theResult____h282570[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d5849 =
	     (_theResult____h328267[56] ?
		6'd0 :
		(_theResult____h328267[55] ?
		   6'd1 :
		   (_theResult____h328267[54] ?
		      6'd2 :
		      (_theResult____h328267[53] ?
			 6'd3 :
			 (_theResult____h328267[52] ?
			    6'd4 :
			    (_theResult____h328267[51] ?
			       6'd5 :
			       (_theResult____h328267[50] ?
				  6'd6 :
				  (_theResult____h328267[49] ?
				     6'd7 :
				     (_theResult____h328267[48] ?
					6'd8 :
					(_theResult____h328267[47] ?
					   6'd9 :
					   (_theResult____h328267[46] ?
					      6'd10 :
					      (_theResult____h328267[45] ?
						 6'd11 :
						 (_theResult____h328267[44] ?
						    6'd12 :
						    (_theResult____h328267[43] ?
						       6'd13 :
						       (_theResult____h328267[42] ?
							  6'd14 :
							  (_theResult____h328267[41] ?
							     6'd15 :
							     (_theResult____h328267[40] ?
								6'd16 :
								(_theResult____h328267[39] ?
								   6'd17 :
								   (_theResult____h328267[38] ?
								      6'd18 :
								      (_theResult____h328267[37] ?
									 6'd19 :
									 (_theResult____h328267[36] ?
									    6'd20 :
									    (_theResult____h328267[35] ?
									       6'd21 :
									       (_theResult____h328267[34] ?
										  6'd22 :
										  (_theResult____h328267[33] ?
										     6'd23 :
										     (_theResult____h328267[32] ?
											6'd24 :
											(_theResult____h328267[31] ?
											   6'd25 :
											   (_theResult____h328267[30] ?
											      6'd26 :
											      (_theResult____h328267[29] ?
												 6'd27 :
												 (_theResult____h328267[28] ?
												    6'd28 :
												    (_theResult____h328267[27] ?
												       6'd29 :
												       (_theResult____h328267[26] ?
													  6'd30 :
													  (_theResult____h328267[25] ?
													     6'd31 :
													     (_theResult____h328267[24] ?
														6'd32 :
														(_theResult____h328267[23] ?
														   6'd33 :
														   (_theResult____h328267[22] ?
														      6'd34 :
														      (_theResult____h328267[21] ?
															 6'd35 :
															 (_theResult____h328267[20] ?
															    6'd36 :
															    (_theResult____h328267[19] ?
															       6'd37 :
															       (_theResult____h328267[18] ?
																  6'd38 :
																  (_theResult____h328267[17] ?
																     6'd39 :
																     (_theResult____h328267[16] ?
																	6'd40 :
																	(_theResult____h328267[15] ?
																	   6'd41 :
																	   (_theResult____h328267[14] ?
																	      6'd42 :
																	      (_theResult____h328267[13] ?
																		 6'd43 :
																		 (_theResult____h328267[12] ?
																		    6'd44 :
																		    (_theResult____h328267[11] ?
																		       6'd45 :
																		       (_theResult____h328267[10] ?
																			  6'd46 :
																			  (_theResult____h328267[9] ?
																			     6'd47 :
																			     (_theResult____h328267[8] ?
																				6'd48 :
																				(_theResult____h328267[7] ?
																				   6'd49 :
																				   (_theResult____h328267[6] ?
																				      6'd50 :
																				      (_theResult____h328267[5] ?
																					 6'd51 :
																					 (_theResult____h328267[4] ?
																					    6'd52 :
																					    (_theResult____h328267[3] ?
																					       6'd53 :
																					       (_theResult____h328267[2] ?
																						  6'd54 :
																						  (_theResult____h328267[1] ?
																						     6'd55 :
																						     (_theResult____h328267[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d7241 =
	     (_theResult____h373962[56] ?
		6'd0 :
		(_theResult____h373962[55] ?
		   6'd1 :
		   (_theResult____h373962[54] ?
		      6'd2 :
		      (_theResult____h373962[53] ?
			 6'd3 :
			 (_theResult____h373962[52] ?
			    6'd4 :
			    (_theResult____h373962[51] ?
			       6'd5 :
			       (_theResult____h373962[50] ?
				  6'd6 :
				  (_theResult____h373962[49] ?
				     6'd7 :
				     (_theResult____h373962[48] ?
					6'd8 :
					(_theResult____h373962[47] ?
					   6'd9 :
					   (_theResult____h373962[46] ?
					      6'd10 :
					      (_theResult____h373962[45] ?
						 6'd11 :
						 (_theResult____h373962[44] ?
						    6'd12 :
						    (_theResult____h373962[43] ?
						       6'd13 :
						       (_theResult____h373962[42] ?
							  6'd14 :
							  (_theResult____h373962[41] ?
							     6'd15 :
							     (_theResult____h373962[40] ?
								6'd16 :
								(_theResult____h373962[39] ?
								   6'd17 :
								   (_theResult____h373962[38] ?
								      6'd18 :
								      (_theResult____h373962[37] ?
									 6'd19 :
									 (_theResult____h373962[36] ?
									    6'd20 :
									    (_theResult____h373962[35] ?
									       6'd21 :
									       (_theResult____h373962[34] ?
										  6'd22 :
										  (_theResult____h373962[33] ?
										     6'd23 :
										     (_theResult____h373962[32] ?
											6'd24 :
											(_theResult____h373962[31] ?
											   6'd25 :
											   (_theResult____h373962[30] ?
											      6'd26 :
											      (_theResult____h373962[29] ?
												 6'd27 :
												 (_theResult____h373962[28] ?
												    6'd28 :
												    (_theResult____h373962[27] ?
												       6'd29 :
												       (_theResult____h373962[26] ?
													  6'd30 :
													  (_theResult____h373962[25] ?
													     6'd31 :
													     (_theResult____h373962[24] ?
														6'd32 :
														(_theResult____h373962[23] ?
														   6'd33 :
														   (_theResult____h373962[22] ?
														      6'd34 :
														      (_theResult____h373962[21] ?
															 6'd35 :
															 (_theResult____h373962[20] ?
															    6'd36 :
															    (_theResult____h373962[19] ?
															       6'd37 :
															       (_theResult____h373962[18] ?
																  6'd38 :
																  (_theResult____h373962[17] ?
																     6'd39 :
																     (_theResult____h373962[16] ?
																	6'd40 :
																	(_theResult____h373962[15] ?
																	   6'd41 :
																	   (_theResult____h373962[14] ?
																	      6'd42 :
																	      (_theResult____h373962[13] ?
																		 6'd43 :
																		 (_theResult____h373962[12] ?
																		    6'd44 :
																		    (_theResult____h373962[11] ?
																		       6'd45 :
																		       (_theResult____h373962[10] ?
																			  6'd46 :
																			  (_theResult____h373962[9] ?
																			     6'd47 :
																			     (_theResult____h373962[8] ?
																				6'd48 :
																				(_theResult____h373962[7] ?
																				   6'd49 :
																				   (_theResult____h373962[6] ?
																				      6'd50 :
																				      (_theResult____h373962[5] ?
																					 6'd51 :
																					 (_theResult____h373962[4] ?
																					    6'd52 :
																					    (_theResult____h373962[3] ?
																					       6'd53 :
																					       (_theResult____h373962[2] ?
																						  6'd54 :
																						  (_theResult____h373962[1] ?
																						     6'd55 :
																						     (_theResult____h373962[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d10098 =
	     (_theResult___fst_exp__h469541 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard61315_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q187 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q188) ;
  assign IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d10365 =
	     (_theResult___fst_exp__h469541 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	       32'hFFFFFFFF ||
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard61315_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q191 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q192) ;
  assign IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d8613 =
	     (_theResult___fst_exp__h430688 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[171] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard22462_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q139 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q140) ;
  assign IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d9328 =
	     (_theResult___fst_exp__h508845 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard00619_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q156 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q157) ;
  assign IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d9596 =
	     (_theResult___fst_exp__h508845 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
	       32'hFFFFFFFF ||
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard00619_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q160 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q161) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d3969 =
	     (guard__h264941 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68]) ?
	       _theResult___fst_exp__h273042 :
	       _theResult___exp__h273558 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d3972 =
	     (guard__h264941 == 2'b0) ?
	       _theResult___fst_exp__h273042 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		  _theResult___exp__h273558 :
		  _theResult___fst_exp__h273042) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d4616 =
	     (guard__h264941 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68]) ?
	       sfdin__h273036[56:34] :
	       _theResult___sfd__h273559 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d4618 =
	     (guard__h264941 == 2'b0) ?
	       sfdin__h273036[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		  _theResult___sfd__h273559 :
		  sfdin__h273036[56:34]) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5361 =
	     (guard__h310640 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68]) ?
	       _theResult___fst_exp__h318739 :
	       _theResult___exp__h319255 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5364 =
	     (guard__h310640 == 2'b0) ?
	       _theResult___fst_exp__h318739 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		  _theResult___exp__h319255 :
		  _theResult___fst_exp__h318739) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6008 =
	     (guard__h310640 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68]) ?
	       sfdin__h318733[56:34] :
	       _theResult___sfd__h319256 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6010 =
	     (guard__h310640 == 2'b0) ?
	       sfdin__h318733[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		  _theResult___sfd__h319256 :
		  sfdin__h318733[56:34]) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6753 =
	     (guard__h356335 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68]) ?
	       _theResult___fst_exp__h364434 :
	       _theResult___exp__h364950 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6756 =
	     (guard__h356335 == 2'b0) ?
	       _theResult___fst_exp__h364434 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		  _theResult___exp__h364950 :
		  _theResult___fst_exp__h364434) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7400 =
	     (guard__h356335 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68]) ?
	       sfdin__h364428[56:34] :
	       _theResult___sfd__h364951 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7402 =
	     (guard__h356335 == 2'b0) ?
	       sfdin__h364428[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		  _theResult___sfd__h364951 :
		  sfdin__h364428[56:34]) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10210 =
	     (guard__h461315 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
	       _theResult___fst_exp__h469541 :
	       _theResult___exp__h470270 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10212 =
	     (guard__h461315 == 2'b0) ?
	       _theResult___fst_exp__h469541 :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
		  _theResult___exp__h470270 :
		  _theResult___fst_exp__h469541) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10293 =
	     (guard__h461315 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
	       sfdin__h469535[56:5] :
	       _theResult___sfd__h470271 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10295 =
	     (guard__h461315 == 2'b0) ?
	       sfdin__h469535[56:5] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
		  _theResult___sfd__h470271 :
		  sfdin__h469535[56:5]) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d8730 =
	     (guard__h422462 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
	       _theResult___fst_exp__h430688 :
	       _theResult___exp__h431417 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d8732 =
	     (guard__h422462 == 2'b0) ?
	       _theResult___fst_exp__h430688 :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
		  _theResult___exp__h431417 :
		  _theResult___fst_exp__h430688) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d8814 =
	     (guard__h422462 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
	       sfdin__h430682[56:5] :
	       _theResult___sfd__h431418 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d8816 =
	     (guard__h422462 == 2'b0) ?
	       sfdin__h430682[56:5] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
		  _theResult___sfd__h431418 :
		  sfdin__h430682[56:5]) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9440 =
	     (guard__h500619 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
	       _theResult___fst_exp__h508845 :
	       _theResult___exp__h509574 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9442 =
	     (guard__h500619 == 2'b0) ?
	       _theResult___fst_exp__h508845 :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
		  _theResult___exp__h509574 :
		  _theResult___fst_exp__h508845) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9523 =
	     (guard__h500619 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
	       sfdin__h508839[56:5] :
	       _theResult___sfd__h509575 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9525 =
	     (guard__h500619 == 2'b0) ?
	       sfdin__h508839[56:5] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
		  _theResult___sfd__h509575 :
		  sfdin__h508839[56:5]) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d4516 =
	     (guard__h282580 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68]) ?
	       _theResult___fst_exp__h290808 :
	       _theResult___exp__h291324 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d4518 =
	     (guard__h282580 == 2'b0) ?
	       _theResult___fst_exp__h290808 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		  _theResult___exp__h291324 :
		  _theResult___fst_exp__h290808) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d4662 =
	     (guard__h282580 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68]) ?
	       sfdin__h290802[56:34] :
	       _theResult___sfd__h291325 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d4664 =
	     (guard__h282580 == 2'b0) ?
	       sfdin__h290802[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		  _theResult___sfd__h291325 :
		  sfdin__h290802[56:34]) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5908 =
	     (guard__h328277 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68]) ?
	       _theResult___fst_exp__h336505 :
	       _theResult___exp__h337021 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5910 =
	     (guard__h328277 == 2'b0) ?
	       _theResult___fst_exp__h336505 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		  _theResult___exp__h337021 :
		  _theResult___fst_exp__h336505) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6054 =
	     (guard__h328277 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68]) ?
	       sfdin__h336499[56:34] :
	       _theResult___sfd__h337022 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6056 =
	     (guard__h328277 == 2'b0) ?
	       sfdin__h336499[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		  _theResult___sfd__h337022 :
		  sfdin__h336499[56:34]) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7300 =
	     (guard__h373972 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68]) ?
	       _theResult___fst_exp__h382200 :
	       _theResult___exp__h382716 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7302 =
	     (guard__h373972 == 2'b0) ?
	       _theResult___fst_exp__h382200 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		  _theResult___exp__h382716 :
		  _theResult___fst_exp__h382200) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7446 =
	     (guard__h373972 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68]) ?
	       sfdin__h382194[56:34] :
	       _theResult___sfd__h382717 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7448 =
	     (guard__h373972 == 2'b0) ?
	       sfdin__h382194[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		  _theResult___sfd__h382717 :
		  sfdin__h382194[56:34]) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10172 =
	     (guard__h452003 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
	       _theResult___fst_exp__h459964 :
	       _theResult___exp__h460619 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10174 =
	     (guard__h452003 == 2'b0) ?
	       _theResult___fst_exp__h459964 :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
		  _theResult___exp__h460619 :
		  _theResult___fst_exp__h459964) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10241 =
	     (guard__h470384 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
	       _theResult___fst_exp__h478374 :
	       _theResult___exp__h479054 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10243 =
	     (guard__h470384 == 2'b0) ?
	       _theResult___fst_exp__h478374 :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
		  _theResult___exp__h479054 :
		  _theResult___fst_exp__h478374) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10267 =
	     (guard__h452003 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
	       _theResult___snd__h459915[56:5] :
	       _theResult___sfd__h460620 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10269 =
	     (guard__h452003 == 2'b0) ?
	       _theResult___snd__h459915[56:5] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
		  _theResult___sfd__h460620 :
		  _theResult___snd__h459915[56:5]) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10312 =
	     (guard__h470384 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
	       _theResult___snd__h478320[56:5] :
	       _theResult___sfd__h479055 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10314 =
	     (guard__h470384 == 2'b0) ?
	       _theResult___snd__h478320[56:5] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
		  _theResult___sfd__h479055 :
		  _theResult___snd__h478320[56:5]) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8687 =
	     (guard__h413150 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
	       _theResult___fst_exp__h421111 :
	       _theResult___exp__h421766 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8689 =
	     (guard__h413150 == 2'b0) ?
	       _theResult___fst_exp__h421111 :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
		  _theResult___exp__h421766 :
		  _theResult___fst_exp__h421111) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8761 =
	     (guard__h431531 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
	       _theResult___fst_exp__h439521 :
	       _theResult___exp__h440201 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8763 =
	     (guard__h431531 == 2'b0) ?
	       _theResult___fst_exp__h439521 :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
		  _theResult___exp__h440201 :
		  _theResult___fst_exp__h439521) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8787 =
	     (guard__h413150 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
	       _theResult___snd__h421062[56:5] :
	       _theResult___sfd__h421767 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8789 =
	     (guard__h413150 == 2'b0) ?
	       _theResult___snd__h421062[56:5] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
		  _theResult___sfd__h421767 :
		  _theResult___snd__h421062[56:5]) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8833 =
	     (guard__h431531 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
	       _theResult___snd__h439467[56:5] :
	       _theResult___sfd__h440202 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8835 =
	     (guard__h431531 == 2'b0) ?
	       _theResult___snd__h439467[56:5] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
		  _theResult___sfd__h440202 :
		  _theResult___snd__h439467[56:5]) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9402 =
	     (guard__h491307 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
	       _theResult___fst_exp__h499268 :
	       _theResult___exp__h499923 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9404 =
	     (guard__h491307 == 2'b0) ?
	       _theResult___fst_exp__h499268 :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
		  _theResult___exp__h499923 :
		  _theResult___fst_exp__h499268) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9471 =
	     (guard__h509688 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
	       _theResult___fst_exp__h517678 :
	       _theResult___exp__h518358 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9473 =
	     (guard__h509688 == 2'b0) ?
	       _theResult___fst_exp__h517678 :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
		  _theResult___exp__h518358 :
		  _theResult___fst_exp__h517678) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9497 =
	     (guard__h491307 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
	       _theResult___snd__h499219[56:5] :
	       _theResult___sfd__h499924 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9499 =
	     (guard__h491307 == 2'b0) ?
	       _theResult___snd__h499219[56:5] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
		  _theResult___sfd__h499924 :
		  _theResult___snd__h499219[56:5]) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9542 =
	     (guard__h509688 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
	       _theResult___snd__h517624[56:5] :
	       _theResult___sfd__h518359 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9544 =
	     (guard__h509688 == 2'b0) ?
	       _theResult___snd__h517624[56:5] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
		  _theResult___sfd__h518359 :
		  _theResult___snd__h517624[56:5]) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4191 =
	     (guard__h273650 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68]) ?
	       _theResult___fst_exp__h281698 :
	       _theResult___exp__h282140 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4193 =
	     (guard__h273650 == 2'b0) ?
	       _theResult___fst_exp__h281698 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		  _theResult___exp__h282140 :
		  _theResult___fst_exp__h281698) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4585 =
	     (guard__h291416 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68]) ?
	       _theResult___fst_exp__h299493 :
	       _theResult___exp__h299960 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4587 =
	     (guard__h291416 == 2'b0) ?
	       _theResult___fst_exp__h299493 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		  _theResult___exp__h299960 :
		  _theResult___fst_exp__h299493) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4635 =
	     (guard__h273650 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68]) ?
	       _theResult___snd__h281649[56:34] :
	       _theResult___sfd__h282141 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4637 =
	     (guard__h273650 == 2'b0) ?
	       _theResult___snd__h281649[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		  _theResult___sfd__h282141 :
		  _theResult___snd__h281649[56:34]) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4681 =
	     (guard__h291416 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68]) ?
	       _theResult___snd__h299439[56:34] :
	       _theResult___sfd__h299961 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4683 =
	     (guard__h291416 == 2'b0) ?
	       _theResult___snd__h299439[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		  _theResult___sfd__h299961 :
		  _theResult___snd__h299439[56:34]) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5583 =
	     (guard__h319347 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68]) ?
	       _theResult___fst_exp__h327395 :
	       _theResult___exp__h327837 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5585 =
	     (guard__h319347 == 2'b0) ?
	       _theResult___fst_exp__h327395 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		  _theResult___exp__h327837 :
		  _theResult___fst_exp__h327395) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5977 =
	     (guard__h337113 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68]) ?
	       _theResult___fst_exp__h345190 :
	       _theResult___exp__h345657 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5979 =
	     (guard__h337113 == 2'b0) ?
	       _theResult___fst_exp__h345190 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		  _theResult___exp__h345657 :
		  _theResult___fst_exp__h345190) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6027 =
	     (guard__h319347 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68]) ?
	       _theResult___snd__h327346[56:34] :
	       _theResult___sfd__h327838 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6029 =
	     (guard__h319347 == 2'b0) ?
	       _theResult___snd__h327346[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		  _theResult___sfd__h327838 :
		  _theResult___snd__h327346[56:34]) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6073 =
	     (guard__h337113 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68]) ?
	       _theResult___snd__h345136[56:34] :
	       _theResult___sfd__h345658 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6075 =
	     (guard__h337113 == 2'b0) ?
	       _theResult___snd__h345136[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		  _theResult___sfd__h345658 :
		  _theResult___snd__h345136[56:34]) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6975 =
	     (guard__h365042 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68]) ?
	       _theResult___fst_exp__h373090 :
	       _theResult___exp__h373532 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6977 =
	     (guard__h365042 == 2'b0) ?
	       _theResult___fst_exp__h373090 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		  _theResult___exp__h373532 :
		  _theResult___fst_exp__h373090) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7369 =
	     (guard__h382808 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68]) ?
	       _theResult___fst_exp__h390885 :
	       _theResult___exp__h391352 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7371 =
	     (guard__h382808 == 2'b0) ?
	       _theResult___fst_exp__h390885 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		  _theResult___exp__h391352 :
		  _theResult___fst_exp__h390885) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7419 =
	     (guard__h365042 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68]) ?
	       _theResult___snd__h373041[56:34] :
	       _theResult___sfd__h373533 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7421 =
	     (guard__h365042 == 2'b0) ?
	       _theResult___snd__h373041[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		  _theResult___sfd__h373533 :
		  _theResult___snd__h373041[56:34]) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7465 =
	     (guard__h382808 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68]) ?
	       _theResult___snd__h390831[56:34] :
	       _theResult___sfd__h391353 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7467 =
	     (guard__h382808 == 2'b0) ?
	       _theResult___snd__h390831[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		  _theResult___sfd__h391353 :
		  _theResult___snd__h390831[56:34]) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10144 =
	     (_theResult___fst_exp__h478374 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard70384_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q189 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q190) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10350 =
	     (_theResult___fst_exp__h459964 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	       32'hFFFFFFFF ||
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard52003_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q195 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q196) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10377 =
	     (_theResult___fst_exp__h478374 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	       32'hFFFFFFFF ||
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard70384_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q193 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q194) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d8659 =
	     (_theResult___fst_exp__h439521 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[171] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard31531_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q141 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q142) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d9374 =
	     (_theResult___fst_exp__h517678 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard09688_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q158 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q159) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d9581 =
	     (_theResult___fst_exp__h499268 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
	       32'hFFFFFFFF ||
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard91307_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q164 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q165) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d9608 =
	     (_theResult___fst_exp__h517678 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
	       32'hFFFFFFFF ||
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard09688_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q162 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q163) ;
  assign IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555 =
	     (_theResult____h572230 == 12'd0 &&
	      (csrf_prv_reg == 2'd0 ||
	       csrf_prv_reg == 2'd1 && csrf_ie_vec_1)) ?
	       enabled_ints__h572689 :
	       _theResult____h572230 ;
  assign IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12767 =
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[0] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[1] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[2] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[3] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[4] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[5] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[6] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[7] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[8] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[9] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[10] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[11] ||
	     checkForException___d12723[4] ||
	     csrf_fs_reg_read__1289_EQ_0_2712_AND_fetchStag_ETC___d12760 ||
	     fetchStage$pipelines_0_first[231:200] == 32'h10500073 &&
	     csrf_tw_reg &&
	     csrf_prv_reg != 2'd3 ;
  assign IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d13493 =
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[0] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[1] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[2] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[3] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[4] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[5] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[6] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[7] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[8] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[9] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[10] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[11] ||
	     checkForException___d12723[4] ||
	     csrf_fs_reg_read__1289_EQ_0_2712_AND_fetchStag_ETC___d13251 ;
  assign IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d13529 =
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[0] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[1] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[2] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[3] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[4] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[5] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[6] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[7] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[8] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[9] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[10] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[11] ||
	     checkForException___d13438[4] ||
	     csrf_fs_reg_read__1289_EQ_0_2712_AND_fetchStag_ETC___d13527 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10148 =
	     (f2_exp__h440717 == 8'd255 && f2_sfd__h440718 != 23'd0 ||
	      (f2_exp__h440717 == 8'd255 || f2_exp__h440717 == 8'd0) &&
	      f2_sfd__h440718 == 23'd0) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
	       ((f2_exp__h440717 == 8'd0) ?
		  IF_NOT_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMu_ETC___d9803 :
		  IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10146) ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10325 =
	     (f2_exp__h440717 == 8'd255 && f2_sfd__h440718 != 23'd0) ?
	       _theResult___snd_fst_sfd__h441033 :
	       _theResult___fst_sfd__h479173 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10326 =
	     { (f2_exp__h440717 == 8'd255) ?
		 11'd2047 :
		 _theResult___fst_exp__h479169,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10325 } ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10380 =
	     (f2_exp__h440717 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9684 ?
		  (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9686 ?
		     coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
		     32'hFFFFFFFF ||
		     !coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
		     IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10350) :
		  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10352) :
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10379 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10381 =
	     (f2_exp__h440717 == 8'd255 && f2_sfd__h440718 != 23'd0 ||
	      (f2_exp__h440717 == 8'd255 || f2_exp__h440717 == 8'd0) &&
	      f2_sfd__h440718 == 23'd0) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	       32'hFFFFFFFF ||
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10380 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10436 =
	     (f1_exp__h401723 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8184 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8186 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10415[4] :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8321 &&
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8322 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10432[4] ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10477 =
	     (f2_exp__h440717 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9684 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9686 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10456[4] :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9806 &&
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9807 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10473[4] ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10521 =
	     (f3_exp__h480021 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8914 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8916 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10500[4] :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9036 &&
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9037 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10517[4] ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10536 =
	     (f1_exp__h401723 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8184 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8186 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10415[3] :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8321 &&
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8322 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10432[3] ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10546 =
	     (f2_exp__h440717 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9684 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9686 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10456[3] :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9806 &&
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9807 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10473[3] ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10557 =
	     (f3_exp__h480021 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8914 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8916 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10500[3] :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9036 &&
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9037 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10517[3] ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10576 =
	     (f1_exp__h401723 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8184 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8186 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10415[2] :
	       !SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8321 ||
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10574 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10590 =
	     (f2_exp__h440717 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9684 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9686 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10456[2] :
	       !SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9806 ||
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10588 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10605 =
	     (f3_exp__h480021 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8914 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8916 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10500[2] :
	       !SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9036 ||
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10603 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10622 =
	     (f1_exp__h401723 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8184 &&
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8186 ||
		_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10415[1]) :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8321 &&
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10620 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10634 =
	     (f2_exp__h440717 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9684 &&
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9686 ||
		_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10456[1]) :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9806 &&
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10632 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10647 =
	     (f3_exp__h480021 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8914 &&
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8916 ||
		_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10500[1]) :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9036 &&
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10645 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10664 =
	     (f1_exp__h401723 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8184 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8186 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10415[0] :
	       !SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8321 ||
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10662 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10676 =
	     (f2_exp__h440717 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9684 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9686 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10456[0] :
	       !SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9806 ||
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10674 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10689 =
	     (f3_exp__h480021 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8914 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8916 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10500[0] :
	       !SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9036 ||
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10687 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8257 =
	     ((f1_exp__h401723 == 8'd0) ?
		(f1_sfd__h401724[22] ?
		   6'd2 :
		   (f1_sfd__h401724[21] ?
		      6'd3 :
		      (f1_sfd__h401724[20] ?
			 6'd4 :
			 (f1_sfd__h401724[19] ?
			    6'd5 :
			    (f1_sfd__h401724[18] ?
			       6'd6 :
			       (f1_sfd__h401724[17] ?
				  6'd7 :
				  (f1_sfd__h401724[16] ?
				     6'd8 :
				     (f1_sfd__h401724[15] ?
					6'd9 :
					(f1_sfd__h401724[14] ?
					   6'd10 :
					   (f1_sfd__h401724[13] ?
					      6'd11 :
					      (f1_sfd__h401724[12] ?
						 6'd12 :
						 (f1_sfd__h401724[11] ?
						    6'd13 :
						    (f1_sfd__h401724[10] ?
						       6'd14 :
						       (f1_sfd__h401724[9] ?
							  6'd15 :
							  (f1_sfd__h401724[8] ?
							     6'd16 :
							     (f1_sfd__h401724[7] ?
								6'd17 :
								(f1_sfd__h401724[6] ?
								   6'd18 :
								   (f1_sfd__h401724[5] ?
								      6'd19 :
								      (f1_sfd__h401724[4] ?
									 6'd20 :
									 (f1_sfd__h401724[3] ?
									    6'd21 :
									    (f1_sfd__h401724[2] ?
									       6'd22 :
									       (f1_sfd__h401724[1] ?
										  6'd23 :
										  (f1_sfd__h401724[0] ?
										     6'd24 :
										     6'd57))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8663 =
	     (f1_exp__h401723 == 8'd255 && f1_sfd__h401724 != 23'd0 ||
	      (f1_exp__h401723 == 8'd255 || f1_exp__h401723 == 8'd0) &&
	      f1_sfd__h401724 == 23'd0) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[171] :
	       ((f1_exp__h401723 == 8'd0) ?
		  IF_NOT_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMu_ETC___d8318 :
		  IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d8661) ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8846 =
	     (f1_exp__h401723 == 8'd255 && f1_sfd__h401724 != 23'd0) ?
	       _theResult___snd_fst_sfd__h402039 :
	       _theResult___fst_sfd__h440320 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8847 =
	     { IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8663,
	       (f1_exp__h401723 == 8'd255) ?
		 11'd2047 :
		 _theResult___fst_exp__h440316,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8846 } ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8987 =
	     ((f3_exp__h480021 == 8'd0) ?
		(f3_sfd__h480022[22] ?
		   6'd2 :
		   (f3_sfd__h480022[21] ?
		      6'd3 :
		      (f3_sfd__h480022[20] ?
			 6'd4 :
			 (f3_sfd__h480022[19] ?
			    6'd5 :
			    (f3_sfd__h480022[18] ?
			       6'd6 :
			       (f3_sfd__h480022[17] ?
				  6'd7 :
				  (f3_sfd__h480022[16] ?
				     6'd8 :
				     (f3_sfd__h480022[15] ?
					6'd9 :
					(f3_sfd__h480022[14] ?
					   6'd10 :
					   (f3_sfd__h480022[13] ?
					      6'd11 :
					      (f3_sfd__h480022[12] ?
						 6'd12 :
						 (f3_sfd__h480022[11] ?
						    6'd13 :
						    (f3_sfd__h480022[10] ?
						       6'd14 :
						       (f3_sfd__h480022[9] ?
							  6'd15 :
							  (f3_sfd__h480022[8] ?
							     6'd16 :
							     (f3_sfd__h480022[7] ?
								6'd17 :
								(f3_sfd__h480022[6] ?
								   6'd18 :
								   (f3_sfd__h480022[5] ?
								      6'd19 :
								      (f3_sfd__h480022[4] ?
									 6'd20 :
									 (f3_sfd__h480022[3] ?
									    6'd21 :
									    (f3_sfd__h480022[2] ?
									       6'd22 :
									       (f3_sfd__h480022[1] ?
										  6'd23 :
										  (f3_sfd__h480022[0] ?
										     6'd24 :
										     6'd57))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9378 =
	     (f3_exp__h480021 == 8'd255 && f3_sfd__h480022 != 23'd0 ||
	      (f3_exp__h480021 == 8'd255 || f3_exp__h480021 == 8'd0) &&
	      f3_sfd__h480022 == 23'd0) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
	       ((f3_exp__h480021 == 8'd0) ?
		  IF_NOT_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMu_ETC___d9033 :
		  IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9376) ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9555 =
	     (f3_exp__h480021 == 8'd255 && f3_sfd__h480022 != 23'd0) ?
	       _theResult___snd_fst_sfd__h480337 :
	       _theResult___fst_sfd__h518477 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9556 =
	     { (f3_exp__h480021 == 8'd255) ?
		 11'd2047 :
		 _theResult___fst_exp__h518473,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9555 } ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9611 =
	     (f3_exp__h480021 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8914 ?
		  (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8916 ?
		     coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
		     32'hFFFFFFFF ||
		     !coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
		     IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d9581) :
		  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9583) :
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9610 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9612 =
	     (f3_exp__h480021 == 8'd255 && f3_sfd__h480022 != 23'd0 ||
	      (f3_exp__h480021 == 8'd255 || f3_exp__h480021 == 8'd0) &&
	      f3_sfd__h480022 == 23'd0) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
	       32'hFFFFFFFF ||
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9611 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9757 =
	     ((f2_exp__h440717 == 8'd0) ?
		(f2_sfd__h440718[22] ?
		   6'd2 :
		   (f2_sfd__h440718[21] ?
		      6'd3 :
		      (f2_sfd__h440718[20] ?
			 6'd4 :
			 (f2_sfd__h440718[19] ?
			    6'd5 :
			    (f2_sfd__h440718[18] ?
			       6'd6 :
			       (f2_sfd__h440718[17] ?
				  6'd7 :
				  (f2_sfd__h440718[16] ?
				     6'd8 :
				     (f2_sfd__h440718[15] ?
					6'd9 :
					(f2_sfd__h440718[14] ?
					   6'd10 :
					   (f2_sfd__h440718[13] ?
					      6'd11 :
					      (f2_sfd__h440718[12] ?
						 6'd12 :
						 (f2_sfd__h440718[11] ?
						    6'd13 :
						    (f2_sfd__h440718[10] ?
						       6'd14 :
						       (f2_sfd__h440718[9] ?
							  6'd15 :
							  (f2_sfd__h440718[8] ?
							     6'd16 :
							     (f2_sfd__h440718[7] ?
								6'd17 :
								(f2_sfd__h440718[6] ?
								   6'd18 :
								   (f2_sfd__h440718[5] ?
								      6'd19 :
								      (f2_sfd__h440718[4] ?
									 6'd20 :
									 (f2_sfd__h440718[3] ?
									    6'd21 :
									    (f2_sfd__h440718[2] ?
									       6'd22 :
									       (f2_sfd__h440718[1] ?
										  6'd23 :
										  (f2_sfd__h440718[0] ?
										     6'd24 :
										     6'd57))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_IF_coreFix_memExe_dMem_cache_m_banks_0_cRqR_ETC___d2791 =
	     _theResult_____2__h224782 == v__h224238 ;
  assign IF_IF_coreFix_memExe_dMem_cache_m_banks_0_cRqR_ETC___d2799 =
	     IF_IF_coreFix_memExe_dMem_cache_m_banks_0_cRqR_ETC___d2791 &&
	     (IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d2769 ||
	      !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry &&
	      !coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full) ;
  assign IF_IF_coreFix_memExe_dMem_cache_m_banks_0_cRqR_ETC___d2808 =
	     IF_IF_coreFix_memExe_dMem_cache_m_banks_0_cRqR_ETC___d2791 &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$whas ?
		!coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$wget[3] :
		!coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl[3]) &&
	     (IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d2782 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty) ;
  assign IF_IF_coreFix_memExe_dMem_cache_m_banks_0_from_ETC___d2882 =
	     _theResult_____2__h231351 == v__h226258 ;
  assign IF_IF_coreFix_memExe_dMem_cache_m_banks_0_from_ETC___d2891 =
	     IF_IF_coreFix_memExe_dMem_cache_m_banks_0_from_ETC___d2882 &&
	     (IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d2863 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_lat_0$whas &&
	      !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl &&
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full) ;
  assign IF_IF_coreFix_memExe_dMem_cache_m_banks_0_from_ETC___d2964 =
	     (IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d2863 &&
	      (EN_dCacheToParent_fromP_enq ?
		 !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget[582] :
		 !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl[582])) ?
	       { 516'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA,
		 EN_dCacheToParent_fromP_enq ?
		   coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget[65:0] :
		   coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl[65:0] } :
	       { EN_dCacheToParent_fromP_enq ?
		   coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget[581:518] :
		   coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl[581:518],
		 EN_dCacheToParent_fromP_enq ?
		   coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget[517:516] :
		   coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl[517:516],
		 IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d2898 ||
		 (EN_dCacheToParent_fromP_enq ?
		    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget[515] :
		    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl[515]),
		 EN_dCacheToParent_fromP_enq ?
		   coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget[514:3] :
		   coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl[514:3],
		 x__h228985 } ;
  assign IF_IF_coreFix_memExe_dMem_cache_m_banks_0_rqTo_ETC___d3042 =
	     _theResult_____2__h236020 == v__h235345 ;
  assign IF_IF_coreFix_memExe_dMem_cache_m_banks_0_rqTo_ETC___d3050 =
	     IF_IF_coreFix_memExe_dMem_cache_m_banks_0_rqTo_ETC___d3042 &&
	     (IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3022 ||
	      !EN_dCacheToParent_rqToP_deq &&
	      !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl &&
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full) ;
  assign IF_IF_coreFix_memExe_dMem_cache_m_banks_0_rqTo_ETC___d3061 =
	     IF_IF_coreFix_memExe_dMem_cache_m_banks_0_rqTo_ETC___d3042 &&
	     (CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP ?
		!coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_lat_0$wget[72] :
		!coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl[72]) &&
	     (IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3035 ||
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty) ;
  assign IF_IF_coreFix_memExe_dMem_cache_m_banks_0_rsTo_ETC___d3126 =
	     _theResult_____2__h242447 == v__h237794 ;
  assign IF_IF_coreFix_memExe_dMem_cache_m_banks_0_rsTo_ETC___d3134 =
	     IF_IF_coreFix_memExe_dMem_cache_m_banks_0_rsTo_ETC___d3126 &&
	     (IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3106 ||
	      !EN_dCacheToParent_rsToP_deq &&
	      !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl &&
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full) ;
  assign IF_IF_coreFix_memExe_dTlb_procResp__485_BIT_11_ETC___d1620 =
	     IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1609 ?
	       4'd11 :
	       (IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1613 ?
		  4'd12 :
		  (IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1617 ?
		     4'd13 :
		     4'd15)) ;
  assign IF_IF_coreFix_memExe_dTlb_procResp__485_BIT_11_ETC___d1622 =
	     IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1601 ?
	       4'd8 :
	       (IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1605 ?
		  4'd9 :
		  IF_IF_coreFix_memExe_dTlb_procResp__485_BIT_11_ETC___d1620) ;
  assign IF_IF_coreFix_memExe_dTlb_procResp__485_BIT_11_ETC___d1624 =
	     IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1593 ?
	       4'd6 :
	       (IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1597 ?
		  4'd7 :
		  IF_IF_coreFix_memExe_dTlb_procResp__485_BIT_11_ETC___d1622) ;
  assign IF_IF_coreFix_memExe_dTlb_procResp__485_BIT_11_ETC___d1626 =
	     IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1585 ?
	       4'd4 :
	       (IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1589 ?
		  4'd5 :
		  IF_IF_coreFix_memExe_dTlb_procResp__485_BIT_11_ETC___d1624) ;
  assign IF_IF_coreFix_memExe_dTlb_procResp__485_BIT_11_ETC___d1628 =
	     IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1577 ?
	       4'd2 :
	       (IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1581 ?
		  4'd3 :
		  IF_IF_coreFix_memExe_dTlb_procResp__485_BIT_11_ETC___d1626) ;
  assign IF_IF_coreFix_memExe_dTlb_procResp__485_BIT_11_ETC___d1630 =
	     IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1569 ?
	       4'd0 :
	       (IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1573 ?
		  4'd1 :
		  IF_IF_coreFix_memExe_dTlb_procResp__485_BIT_11_ETC___d1628) ;
  assign IF_IF_coreFix_memExe_forwardQ_deqReq_lat_1_wha_ETC___d3412 =
	     _theResult_____2__h251943 == v__h251547 ;
  assign IF_IF_coreFix_memExe_forwardQ_deqReq_lat_1_wha_ETC___d3420 =
	     IF_IF_coreFix_memExe_forwardQ_deqReq_lat_1_wha_ETC___d3412 &&
	     (IF_coreFix_memExe_forwardQ_enqReq_lat_1_whas___ETC___d3393 ||
	      !WILL_FIRE_RL_coreFix_memExe_doRespLdForward &&
	      !coreFix_memExe_forwardQ_deqReq_rl &&
	      coreFix_memExe_forwardQ_full) ;
  assign IF_IF_coreFix_memExe_forwardQ_deqReq_lat_1_wha_ETC___d3430 =
	     IF_IF_coreFix_memExe_forwardQ_deqReq_lat_1_wha_ETC___d3412 &&
	     (coreFix_memExe_forwardQ_enqReq_lat_0$whas ?
		!coreFix_memExe_forwardQ_enqReq_lat_0$wget[69] :
		!coreFix_memExe_forwardQ_enqReq_rl[69]) &&
	     (IF_coreFix_memExe_forwardQ_deqReq_lat_1_whas___ETC___d3406 ||
	      coreFix_memExe_forwardQ_empty) ;
  assign IF_IF_coreFix_memExe_memRespLdQ_deqReq_lat_1_w_ETC___d3330 =
	     _theResult_____2__h250043 == v__h249647 ;
  assign IF_IF_coreFix_memExe_memRespLdQ_deqReq_lat_1_w_ETC___d3338 =
	     IF_IF_coreFix_memExe_memRespLdQ_deqReq_lat_1_w_ETC___d3330 &&
	     (IF_coreFix_memExe_memRespLdQ_enqReq_lat_1_whas_ETC___d3311 ||
	      !WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	      !coreFix_memExe_memRespLdQ_deqReq_rl &&
	      coreFix_memExe_memRespLdQ_full) ;
  assign IF_IF_coreFix_memExe_memRespLdQ_deqReq_lat_1_w_ETC___d3348 =
	     IF_IF_coreFix_memExe_memRespLdQ_deqReq_lat_1_w_ETC___d3330 &&
	     (coreFix_memExe_memRespLdQ_enqReq_lat_0$whas ?
		!coreFix_memExe_memRespLdQ_enqReq_lat_0$wget[69] :
		!coreFix_memExe_memRespLdQ_enqReq_rl[69]) &&
	     (IF_coreFix_memExe_memRespLdQ_deqReq_lat_1_whas_ETC___d3324 ||
	      coreFix_memExe_memRespLdQ_empty) ;
  assign IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12956 =
	     (fetchStage$pipelines_0_first[68] ?
		IF_fetchStage_pipelines_0_first__2491_BIT_68_2_ETC___d12888 ==
		4'd12 :
		IF_checkForException_2723_BIT_4_2724_THEN_IF_c_ETC___d12917 ==
		4'd12) ?
	       4'd13 :
	       4'd15 ;
  assign IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12957 =
	     (fetchStage$pipelines_0_first[68] ?
		IF_fetchStage_pipelines_0_first__2491_BIT_68_2_ETC___d12888 ==
		4'd11 :
		IF_checkForException_2723_BIT_4_2724_THEN_IF_c_ETC___d12917 ==
		4'd11) ?
	       4'd12 :
	       IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12956 ;
  assign IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12958 =
	     (fetchStage$pipelines_0_first[68] ?
		IF_fetchStage_pipelines_0_first__2491_BIT_68_2_ETC___d12888 ==
		4'd10 :
		IF_checkForException_2723_BIT_4_2724_THEN_IF_c_ETC___d12917 ==
		4'd10) ?
	       4'd11 :
	       IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12957 ;
  assign IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12959 =
	     (fetchStage$pipelines_0_first[68] ?
		IF_fetchStage_pipelines_0_first__2491_BIT_68_2_ETC___d12888 ==
		4'd9 :
		IF_checkForException_2723_BIT_4_2724_THEN_IF_c_ETC___d12917 ==
		4'd9) ?
	       4'd9 :
	       IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12958 ;
  assign IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12960 =
	     (fetchStage$pipelines_0_first[68] ?
		IF_fetchStage_pipelines_0_first__2491_BIT_68_2_ETC___d12888 ==
		4'd8 :
		IF_checkForException_2723_BIT_4_2724_THEN_IF_c_ETC___d12917 ==
		4'd8) ?
	       4'd8 :
	       IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12959 ;
  assign IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12961 =
	     (fetchStage$pipelines_0_first[68] ?
		IF_fetchStage_pipelines_0_first__2491_BIT_68_2_ETC___d12888 ==
		4'd7 :
		IF_checkForException_2723_BIT_4_2724_THEN_IF_c_ETC___d12917 ==
		4'd7) ?
	       4'd7 :
	       IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12960 ;
  assign IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12962 =
	     (fetchStage$pipelines_0_first[68] ?
		IF_fetchStage_pipelines_0_first__2491_BIT_68_2_ETC___d12888 ==
		4'd6 :
		IF_checkForException_2723_BIT_4_2724_THEN_IF_c_ETC___d12917 ==
		4'd6) ?
	       4'd6 :
	       IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12961 ;
  assign IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12963 =
	     (fetchStage$pipelines_0_first[68] ?
		IF_fetchStage_pipelines_0_first__2491_BIT_68_2_ETC___d12888 ==
		4'd5 :
		IF_checkForException_2723_BIT_4_2724_THEN_IF_c_ETC___d12917 ==
		4'd5) ?
	       4'd5 :
	       IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12962 ;
  assign IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12964 =
	     (fetchStage$pipelines_0_first[68] ?
		IF_fetchStage_pipelines_0_first__2491_BIT_68_2_ETC___d12888 ==
		4'd4 :
		IF_checkForException_2723_BIT_4_2724_THEN_IF_c_ETC___d12917 ==
		4'd4) ?
	       4'd4 :
	       IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12963 ;
  assign IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12965 =
	     (fetchStage$pipelines_0_first[68] ?
		IF_fetchStage_pipelines_0_first__2491_BIT_68_2_ETC___d12888 ==
		4'd3 :
		IF_checkForException_2723_BIT_4_2724_THEN_IF_c_ETC___d12917 ==
		4'd3) ?
	       4'd3 :
	       IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12964 ;
  assign IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12966 =
	     (fetchStage$pipelines_0_first[68] ?
		IF_fetchStage_pipelines_0_first__2491_BIT_68_2_ETC___d12888 ==
		4'd2 :
		IF_checkForException_2723_BIT_4_2724_THEN_IF_c_ETC___d12917 ==
		4'd2) ?
	       4'd2 :
	       IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12965 ;
  assign IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12967 =
	     (fetchStage$pipelines_0_first[68] ?
		IF_fetchStage_pipelines_0_first__2491_BIT_68_2_ETC___d12888 ==
		4'd1 :
		IF_checkForException_2723_BIT_4_2724_THEN_IF_c_ETC___d12917 ==
		4'd1) ?
	       4'd1 :
	       IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12966 ;
  assign IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12968 =
	     (fetchStage$pipelines_0_first[68] ?
		IF_fetchStage_pipelines_0_first__2491_BIT_68_2_ETC___d12888 ==
		4'd0 :
		IF_checkForException_2723_BIT_4_2724_THEN_IF_c_ETC___d12917 ==
		4'd0) ?
	       4'd0 :
	       IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12967 ;
  assign IF_IF_mmio_cRqQ_enqReq_lat_1_whas__80_THEN_mmi_ETC___d401 =
	     { (mmio_cRqQ_enqReq_lat_0$whas ?
		  mmio_cRqQ_enqReq_lat_0$wget[77:76] == 2'd1 :
		  mmio_cRqQ_enqReq_rl[77:76] == 2'd1) ?
		 2'd1 :
		 ((mmio_cRqQ_enqReq_lat_0$whas ?
		     mmio_cRqQ_enqReq_lat_0$wget[77:76] == 2'd2 :
		     mmio_cRqQ_enqReq_rl[77:76] == 2'd2) ?
		    2'd2 :
		    2'd3),
	       mmio_cRqQ_enqReq_lat_0$whas ?
		 mmio_cRqQ_enqReq_lat_0$wget[75:72] :
		 mmio_cRqQ_enqReq_rl[75:72] } ;
  assign IF_IF_mmio_dataReqQ_enqReq_lat_1_whas__5_THEN__ETC___d158 =
	     { (mmio_dataReqQ_enqReq_lat_0$whas ?
		  mmio_dataReqQ_enqReq_lat_0$wget[77:76] == 2'd1 :
		  mmio_dataReqQ_enqReq_rl[77:76] == 2'd1) ?
		 2'd1 :
		 ((mmio_dataReqQ_enqReq_lat_0$whas ?
		     mmio_dataReqQ_enqReq_lat_0$wget[77:76] == 2'd2 :
		     mmio_dataReqQ_enqReq_rl[77:76] == 2'd2) ?
		    2'd2 :
		    2'd3),
	       mmio_dataReqQ_enqReq_lat_0$whas ?
		 mmio_dataReqQ_enqReq_lat_0$wget[75:72] :
		 mmio_dataReqQ_enqReq_rl[75:72] } ;
  assign IF_IF_mmio_pRqQ_enqReq_lat_1_whas__47_THEN_mmi_ETC___d668 =
	     { (EN_mmioToPlatform_pRq_enq ?
		  mmio_pRqQ_enqReq_lat_0$wget[37:36] == 2'd1 :
		  mmio_pRqQ_enqReq_rl[37:36] == 2'd1) ?
		 2'd1 :
		 ((EN_mmioToPlatform_pRq_enq ?
		     mmio_pRqQ_enqReq_lat_0$wget[37:36] == 2'd2 :
		     mmio_pRqQ_enqReq_rl[37:36] == 2'd2) ?
		    2'd2 :
		    2'd3),
	       EN_mmioToPlatform_pRq_enq ?
		 mmio_pRqQ_enqReq_lat_0$wget[35:32] :
		 mmio_pRqQ_enqReq_rl[35:32] } ;
  assign IF_IF_mmio_pRsQ_enqReq_lat_1_whas__08_THEN_NOT_ETC___d541 =
	     (EN_mmioToPlatform_pRs_enq ?
		!mmio_pRsQ_enqReq_lat_0$wget[66] :
		!mmio_pRsQ_enqReq_rl[66]) ?
	       { EN_mmioToPlatform_pRs_enq ?
		   mmio_pRsQ_enqReq_lat_0$wget[65] :
		   mmio_pRsQ_enqReq_rl[65],
		 EN_mmioToPlatform_pRs_enq ?
		   mmio_pRsQ_enqReq_lat_0$wget[64:33] :
		   mmio_pRsQ_enqReq_rl[64:33],
		 EN_mmioToPlatform_pRs_enq ?
		   mmio_pRsQ_enqReq_lat_0$wget[32] :
		   mmio_pRsQ_enqReq_rl[32],
		 EN_mmioToPlatform_pRs_enq ?
		   mmio_pRsQ_enqReq_lat_0$wget[31:0] :
		   mmio_pRsQ_enqReq_rl[31:0] } :
	       { 1'h0,
		 EN_mmioToPlatform_pRs_enq ?
		   mmio_pRsQ_enqReq_lat_0$wget[64:0] :
		   mmio_pRsQ_enqReq_rl[64:0] } ;
  assign IF_NOT_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMu_ETC___d8318 =
	     (!_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8184 ||
	      _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8186 ||
	      _theResult___fst_exp__h421111 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[171] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard13150_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q137 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q138) ;
  assign IF_NOT_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMu_ETC___d9033 =
	     (!_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8914 ||
	      _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8916 ||
	      _theResult___fst_exp__h499268 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard91307_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q154 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q155) ;
  assign IF_NOT_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMu_ETC___d9803 =
	     (!_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9684 ||
	      _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9686 ||
	      _theResult___fst_exp__h459964 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard52003_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q185 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q186) ;
  assign IF_NOT_IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3__ETC___d12990 =
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[0] ?
	       4'd0 :
	       (IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[1] ?
		  4'd1 :
		  ((IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[3] &&
		    !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[2]) ?
		     4'd2 :
		     ((IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[4] &&
		       !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[2] &&
		       !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[3]) ?
			4'd3 :
			((IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[5] &&
			  !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[2] &&
			  !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[3] &&
			  !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[4]) ?
			   4'd4 :
			   ((IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[7] &&
			     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[2] &&
			     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[3] &&
			     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[4] &&
			     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[5] &&
			     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[6]) ?
			      4'd5 :
			      ((IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[8] &&
				!IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[2] &&
				!IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[3] &&
				!IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[4] &&
				!IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[5] &&
				!IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[6] &&
				!IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[7]) ?
				 4'd6 :
				 ((IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[9] &&
				   !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[2] &&
				   !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[3] &&
				   !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[4] &&
				   !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[5] &&
				   !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[6] &&
				   !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[7] &&
				   !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[8]) ?
				    4'd7 :
				    4'd8))))))) ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d11964 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_0_bypassWire_0_wget__1930_BITS__ETC___d11932) ?
	       coreFix_aluExe_0_bypassWire_1$whas &&
	       coreFix_aluExe_0_bypassWire_1_wget__1943_BITS__ETC___d11945 :
	       coreFix_aluExe_0_bypassWire_0$whas ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d11965 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_aluExe_0_bypassWire_0_wget__1930_BITS__ETC___d11932) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_aluExe_0_bypassWire_1_wget__1943_BITS__ETC___d11945)) ?
	       coreFix_aluExe_0_bypassWire_2$whas &&
	       coreFix_aluExe_0_bypassWire_2_wget__1951_BITS__ETC___d11953 :
	       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d11964 ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d11966 =
	     NOT_coreFix_aluExe_0_bypassWire_0_whas__1929_1_ETC___d11956 ?
	       coreFix_aluExe_0_bypassWire_3$whas &&
	       coreFix_aluExe_0_bypassWire_3_wget__1958_BITS__ETC___d11960 :
	       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d11965 ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d11991 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_0_bypassWire_0_wget__1930_BITS__ETC___d11973) ?
	       coreFix_aluExe_0_bypassWire_1$whas &&
	       coreFix_aluExe_0_bypassWire_1_wget__1943_BITS__ETC___d11979 :
	       coreFix_aluExe_0_bypassWire_0$whas ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d11992 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_aluExe_0_bypassWire_0_wget__1930_BITS__ETC___d11973) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_aluExe_0_bypassWire_1_wget__1943_BITS__ETC___d11979)) ?
	       coreFix_aluExe_0_bypassWire_2$whas &&
	       coreFix_aluExe_0_bypassWire_2_wget__1951_BITS__ETC___d11983 :
	       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d11991 ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d11993 =
	     NOT_coreFix_aluExe_0_bypassWire_0_whas__1929_1_ETC___d11986 ?
	       coreFix_aluExe_0_bypassWire_3$whas &&
	       coreFix_aluExe_0_bypassWire_3_wget__1958_BITS__ETC___d11987 :
	       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d11992 ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d12007 =
	     IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d11966 &&
	     NOT_coreFix_aluExe_0_bypassWire_0_whas__1929_1_ETC___d11956 &&
	     (!coreFix_aluExe_0_bypassWire_3$whas ||
	      !coreFix_aluExe_0_bypassWire_3_wget__1958_BITS__ETC___d11960) ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d12015 =
	     IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d11993 &&
	     NOT_coreFix_aluExe_0_bypassWire_0_whas__1929_1_ETC___d11986 &&
	     (!coreFix_aluExe_0_bypassWire_3$whas ||
	      !coreFix_aluExe_0_bypassWire_3_wget__1958_BITS__ETC___d11987) ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d12179 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_0_bypassWire_0_wget__1930_BITS__ETC___d11932) ?
	       coreFix_aluExe_0_bypassWire_1$wget[63:0] :
	       coreFix_aluExe_0_bypassWire_0$wget[63:0] ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d12180 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_aluExe_0_bypassWire_0_wget__1930_BITS__ETC___d11932) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_aluExe_0_bypassWire_1_wget__1943_BITS__ETC___d11945)) ?
	       coreFix_aluExe_0_bypassWire_2$wget[63:0] :
	       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d12179 ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d12188 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_0_bypassWire_0_wget__1930_BITS__ETC___d11973) ?
	       coreFix_aluExe_0_bypassWire_1$wget[63:0] :
	       coreFix_aluExe_0_bypassWire_0$wget[63:0] ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d12189 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_aluExe_0_bypassWire_0_wget__1930_BITS__ETC___d11973) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_aluExe_0_bypassWire_1_wget__1943_BITS__ETC___d11979)) ?
	       coreFix_aluExe_0_bypassWire_2$wget[63:0] :
	       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d12188 ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11108 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_1_bypassWire_0_wget__1074_BITS__ETC___d11076) ?
	       coreFix_aluExe_0_bypassWire_1$whas &&
	       coreFix_aluExe_1_bypassWire_1_wget__1087_BITS__ETC___d11089 :
	       coreFix_aluExe_0_bypassWire_0$whas ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11109 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_aluExe_1_bypassWire_0_wget__1074_BITS__ETC___d11076) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_aluExe_1_bypassWire_1_wget__1087_BITS__ETC___d11089)) ?
	       coreFix_aluExe_1_bypassWire_2$whas &&
	       coreFix_aluExe_1_bypassWire_2_wget__1095_BITS__ETC___d11097 :
	       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11108 ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11110 =
	     NOT_coreFix_aluExe_1_bypassWire_0_whas__1073_1_ETC___d11100 ?
	       coreFix_aluExe_1_bypassWire_3$whas &&
	       coreFix_aluExe_1_bypassWire_3_wget__1102_BITS__ETC___d11104 :
	       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11109 ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11135 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_1_bypassWire_0_wget__1074_BITS__ETC___d11117) ?
	       coreFix_aluExe_0_bypassWire_1$whas &&
	       coreFix_aluExe_1_bypassWire_1_wget__1087_BITS__ETC___d11123 :
	       coreFix_aluExe_0_bypassWire_0$whas ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11136 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_aluExe_1_bypassWire_0_wget__1074_BITS__ETC___d11117) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_aluExe_1_bypassWire_1_wget__1087_BITS__ETC___d11123)) ?
	       coreFix_aluExe_1_bypassWire_2$whas &&
	       coreFix_aluExe_1_bypassWire_2_wget__1095_BITS__ETC___d11127 :
	       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11135 ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11137 =
	     NOT_coreFix_aluExe_1_bypassWire_0_whas__1073_1_ETC___d11130 ?
	       coreFix_aluExe_1_bypassWire_3$whas &&
	       coreFix_aluExe_1_bypassWire_3_wget__1102_BITS__ETC___d11131 :
	       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11136 ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11151 =
	     IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11110 &&
	     NOT_coreFix_aluExe_1_bypassWire_0_whas__1073_1_ETC___d11100 &&
	     (!coreFix_aluExe_1_bypassWire_3$whas ||
	      !coreFix_aluExe_1_bypassWire_3_wget__1102_BITS__ETC___d11104) ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11159 =
	     IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11137 &&
	     NOT_coreFix_aluExe_1_bypassWire_0_whas__1073_1_ETC___d11130 &&
	     (!coreFix_aluExe_1_bypassWire_3$whas ||
	      !coreFix_aluExe_1_bypassWire_3_wget__1102_BITS__ETC___d11131) ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11505 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_1_bypassWire_0_wget__1074_BITS__ETC___d11076) ?
	       coreFix_aluExe_0_bypassWire_1$wget[63:0] :
	       coreFix_aluExe_0_bypassWire_0$wget[63:0] ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11506 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_aluExe_1_bypassWire_0_wget__1074_BITS__ETC___d11076) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_aluExe_1_bypassWire_1_wget__1087_BITS__ETC___d11089)) ?
	       coreFix_aluExe_0_bypassWire_2$wget[63:0] :
	       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11505 ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11514 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_1_bypassWire_0_wget__1074_BITS__ETC___d11117) ?
	       coreFix_aluExe_0_bypassWire_1$wget[63:0] :
	       coreFix_aluExe_0_bypassWire_0$wget[63:0] ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11515 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_aluExe_1_bypassWire_0_wget__1074_BITS__ETC___d11117) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_aluExe_1_bypassWire_1_wget__1087_BITS__ETC___d11123)) ?
	       coreFix_aluExe_0_bypassWire_2$wget[63:0] :
	       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11514 ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7898 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_0_wget__864__ETC___d7866) ?
	       coreFix_aluExe_0_bypassWire_1$whas &&
	       coreFix_fpuMulDivExe_0_bypassWire_1_wget__877__ETC___d7879 :
	       coreFix_aluExe_0_bypassWire_0$whas ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7899 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_0_wget__864__ETC___d7866) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_1_wget__877__ETC___d7879)) ?
	       coreFix_fpuMulDivExe_0_bypassWire_2$whas &&
	       coreFix_fpuMulDivExe_0_bypassWire_2_wget__885__ETC___d7887 :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7898 ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7900 =
	     NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d7890 ?
	       coreFix_fpuMulDivExe_0_bypassWire_3$whas &&
	       coreFix_fpuMulDivExe_0_bypassWire_3_wget__892__ETC___d7894 :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7899 ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7924 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_0_wget__864__ETC___d7906) ?
	       coreFix_aluExe_0_bypassWire_1$whas &&
	       coreFix_fpuMulDivExe_0_bypassWire_1_wget__877__ETC___d7912 :
	       coreFix_aluExe_0_bypassWire_0$whas ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7925 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_0_wget__864__ETC___d7906) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_1_wget__877__ETC___d7912)) ?
	       coreFix_fpuMulDivExe_0_bypassWire_2$whas &&
	       coreFix_fpuMulDivExe_0_bypassWire_2_wget__885__ETC___d7916 :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7924 ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7926 =
	     NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d7919 ?
	       coreFix_fpuMulDivExe_0_bypassWire_3$whas &&
	       coreFix_fpuMulDivExe_0_bypassWire_3_wget__892__ETC___d7920 :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7925 ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7950 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_0_wget__864__ETC___d7932) ?
	       coreFix_aluExe_0_bypassWire_1$whas &&
	       coreFix_fpuMulDivExe_0_bypassWire_1_wget__877__ETC___d7938 :
	       coreFix_aluExe_0_bypassWire_0$whas ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7951 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_0_wget__864__ETC___d7932) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_1_wget__877__ETC___d7938)) ?
	       coreFix_fpuMulDivExe_0_bypassWire_2$whas &&
	       coreFix_fpuMulDivExe_0_bypassWire_2_wget__885__ETC___d7942 :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7950 ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7952 =
	     NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d7945 ?
	       coreFix_fpuMulDivExe_0_bypassWire_3$whas &&
	       coreFix_fpuMulDivExe_0_bypassWire_3_wget__892__ETC___d7946 :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7951 ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7966 =
	     IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7900 &&
	     NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d7890 &&
	     (!coreFix_fpuMulDivExe_0_bypassWire_3$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_3_wget__892__ETC___d7894) ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7973 =
	     IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7926 &&
	     NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d7919 &&
	     (!coreFix_fpuMulDivExe_0_bypassWire_3$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_3_wget__892__ETC___d7920) ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7980 =
	     IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7952 &&
	     NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d7945 &&
	     (!coreFix_fpuMulDivExe_0_bypassWire_3$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_3_wget__892__ETC___d7946) ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8016 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_0_wget__864__ETC___d7866) ?
	       coreFix_aluExe_0_bypassWire_1$wget[63:0] :
	       coreFix_aluExe_0_bypassWire_0$wget[63:0] ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8017 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_0_wget__864__ETC___d7866) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_1_wget__877__ETC___d7879)) ?
	       coreFix_aluExe_0_bypassWire_2$wget[63:0] :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8016 ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8024 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_0_wget__864__ETC___d7906) ?
	       coreFix_aluExe_0_bypassWire_1$wget[63:0] :
	       coreFix_aluExe_0_bypassWire_0$wget[63:0] ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8025 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_0_wget__864__ETC___d7906) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_1_wget__877__ETC___d7912)) ?
	       coreFix_aluExe_0_bypassWire_2$wget[63:0] :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8024 ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8032 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_0_wget__864__ETC___d7932) ?
	       coreFix_aluExe_0_bypassWire_1$wget[63:0] :
	       coreFix_aluExe_0_bypassWire_0$wget[63:0] ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8033 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_0_wget__864__ETC___d7932) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_1_wget__877__ETC___d7938)) ?
	       coreFix_aluExe_0_bypassWire_2$wget[63:0] :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8032 ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1364 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_memExe_bypassWire_0_wget__330_BITS_70__ETC___d1332) ?
	       coreFix_aluExe_0_bypassWire_1$whas &&
	       coreFix_memExe_bypassWire_1_wget__343_BITS_70__ETC___d1345 :
	       coreFix_aluExe_0_bypassWire_0$whas ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1365 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_memExe_bypassWire_0_wget__330_BITS_70__ETC___d1332) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_memExe_bypassWire_1_wget__343_BITS_70__ETC___d1345)) ?
	       coreFix_memExe_bypassWire_2$whas &&
	       coreFix_memExe_bypassWire_2_wget__351_BITS_70__ETC___d1353 :
	       IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1364 ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1366 =
	     NOT_coreFix_memExe_bypassWire_0_whas__329_335__ETC___d1356 ?
	       coreFix_memExe_bypassWire_3$whas &&
	       coreFix_memExe_bypassWire_3_wget__358_BITS_70__ETC___d1360 :
	       IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1365 ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1390 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_memExe_bypassWire_0_wget__330_BITS_70__ETC___d1372) ?
	       coreFix_aluExe_0_bypassWire_1$whas &&
	       coreFix_memExe_bypassWire_1_wget__343_BITS_70__ETC___d1378 :
	       coreFix_aluExe_0_bypassWire_0$whas ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1391 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_memExe_bypassWire_0_wget__330_BITS_70__ETC___d1372) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_memExe_bypassWire_1_wget__343_BITS_70__ETC___d1378)) ?
	       coreFix_memExe_bypassWire_2$whas &&
	       coreFix_memExe_bypassWire_2_wget__351_BITS_70__ETC___d1382 :
	       IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1390 ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1392 =
	     NOT_coreFix_memExe_bypassWire_0_whas__329_335__ETC___d1385 ?
	       coreFix_memExe_bypassWire_3$whas &&
	       coreFix_memExe_bypassWire_3_wget__358_BITS_70__ETC___d1386 :
	       IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1391 ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1405 =
	     IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1366 &&
	     NOT_coreFix_memExe_bypassWire_0_whas__329_335__ETC___d1356 &&
	     (!coreFix_memExe_bypassWire_3$whas ||
	      !coreFix_memExe_bypassWire_3_wget__358_BITS_70__ETC___d1360) ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1412 =
	     IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1392 &&
	     NOT_coreFix_memExe_bypassWire_0_whas__329_335__ETC___d1385 &&
	     (!coreFix_memExe_bypassWire_3$whas ||
	      !coreFix_memExe_bypassWire_3_wget__358_BITS_70__ETC___d1386) ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1423 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_memExe_bypassWire_0_wget__330_BITS_70__ETC___d1332) ?
	       coreFix_aluExe_0_bypassWire_1$wget[63:0] :
	       coreFix_aluExe_0_bypassWire_0$wget[63:0] ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1424 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_memExe_bypassWire_0_wget__330_BITS_70__ETC___d1332) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_memExe_bypassWire_1_wget__343_BITS_70__ETC___d1345)) ?
	       coreFix_aluExe_0_bypassWire_2$wget[63:0] :
	       IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1423 ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1431 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_memExe_bypassWire_0_wget__330_BITS_70__ETC___d1372) ?
	       coreFix_aluExe_0_bypassWire_1$wget[63:0] :
	       coreFix_aluExe_0_bypassWire_0$wget[63:0] ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1432 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_memExe_bypassWire_0_wget__330_BITS_70__ETC___d1372) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_memExe_bypassWire_1_wget__343_BITS_70__ETC___d1378)) ?
	       coreFix_aluExe_0_bypassWire_2$wget[63:0] :
	       IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1431 ;
  assign IF_NOT_coreFix_memExe_dMem_cache_m_banks_0_pip_ETC___d1841 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) ?
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1819 :
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite &&
	       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d1839 ;
  assign IF_NOT_coreFix_memExe_dMem_cache_m_banks_0_pip_ETC___d1858 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] !=
	      2'd0 &&
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851) ?
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$FULL_N :
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$FULL_N ;
  assign IF_NOT_coreFix_memExe_dMem_cache_m_banks_0_pip_ETC___d2263 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) ?
	       { coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:95],
		 IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1899,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2253 } :
	       { IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2261,
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:0] } ;
  assign IF_NOT_coreFix_memExe_dTlb_procResp__485_BIT_1_ETC___d1564 =
	     (!coreFix_memExe_dTlb$procResp[110] &&
	      coreFix_memExe_dTlb$procResp[12]) ?
	       CASE_coreFix_memExe_dTlbprocResp_BITS_105_TO__ETC__q13 :
	       CASE_coreFix_memExe_dTlbprocResp_BITS_109_TO__ETC__q14 ;
  assign IF_NOT_fetchStage_pipelines_0_canDeq__2489_249_ETC___d13636 =
	     ((!fetchStage$pipelines_0_canDeq ||
	       NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13216) &&
	      fetchStage$pipelines_1_canDeq) ?
	       fetchStage$RDY_pipelines_1_first &&
	       (fetchStage$pipelines_1_first[194:192] != 3'd1 ||
		!fetchStage$pipelines_0_canDeq ||
		fetchStage$RDY_pipelines_0_first) &&
	       IF_fetchStage_RDY_pipelines_1_first__2499_AND__ETC___d13633 :
	       !fetchStage$pipelines_0_canDeq ||
	       fetchStage$RDY_pipelines_0_first ;
  assign IF_NOT_fetchStage_pipelines_0_canDeq__2489_249_ETC___d13644 =
	     ((!fetchStage$pipelines_0_canDeq ||
	       NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13216) &&
	      fetchStage$pipelines_1_canDeq) ?
	       IF_NOT_fetchStage_pipelines_1_first__2500_BITS_ETC___d13643 :
	       fetchStage$pipelines_0_canDeq &&
	       NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13641 ;
  assign IF_NOT_fetchStage_pipelines_1_first__2500_BITS_ETC___d13566 =
	     (fetchStage$pipelines_1_first[194:192] == 3'd3 ||
	      fetchStage$pipelines_1_first[194:192] == 3'd4) ?
	       NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13549 :
	       ((fetchStage$pipelines_1_first[194:192] == 3'd2) ?
		  NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13560 :
		  (fetchStage$pipelines_1_first[194:192] != 3'd1 ||
		   !fetchStage$pipelines_0_canDeq ||
		   fetchStage$RDY_pipelines_0_first) &&
		  _0_OR_fetchStage_RDY_pipelines_0_first__2488_35_ETC___d13563) ;
  assign IF_NOT_fetchStage_pipelines_1_first__2500_BITS_ETC___d13643 =
	     NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13476 ?
	       IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13630 ||
	       fetchStage$pipelines_0_canDeq &&
	       (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
		specTagManager$canClaim) &&
	       regRenamingTable_rename_0_canRename__3159_AND__ETC___d13229 &&
	       IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13239 :
	       fetchStage$pipelines_0_canDeq &&
	       NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13641 ;
  assign IF_NOT_rob_deqPort_1_deq_data__4678_BIT_25_467_ETC___d14890 =
	     (!rob$deqPort_1_deq_data[25] || rob$deqPort_1_deq_data[18] ||
	      rob$deqPort_1_deq_data[266] ||
	      rob$deqPort_1_deq_data[356:352] == 5'd0 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd21 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd17 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd18 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd13 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd16 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd15 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd19 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd20) ?
	       rob$deqPort_0_canDeq && rob$deqPort_0_deq_data[26] :
	       rob$deqPort_0_canDeq && rob$deqPort_0_deq_data[26] ||
	       rob$deqPort_1_deq_data[26] ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10105 =
	     ((SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q169[10:0] ==
	       11'd0) ?
		12'd3074 :
		{ SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q172[10],
		  SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q172 }) -
	     12'd3074 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10146 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9806 ?
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9807 ?
		  IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d10098 :
		  IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10144) :
	       coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[107] ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10379 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9806 ?
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9807 ?
		  IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d10365 :
		  IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10377) :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10352 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10574 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8322 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10432[2] :
	       _theResult___fst_exp__h440304 == 11'd2047 &&
	       _theResult___fst_sfd__h440305 == 52'd0 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10588 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9807 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10473[2] :
	       _theResult___fst_exp__h479157 == 11'd2047 &&
	       _theResult___fst_sfd__h479158 == 52'd0 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10603 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9037 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10517[2] :
	       _theResult___fst_exp__h518461 == 11'd2047 &&
	       _theResult___fst_sfd__h518462 == 52'd0 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10620 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8322 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10432[1] :
	       _theResult___fst_exp__h439521 == 11'd0 &&
	       guard__h431531 != 2'b0 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10632 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9807 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10473[1] :
	       _theResult___fst_exp__h478374 == 11'd0 &&
	       guard__h470384 != 2'b0 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10645 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9037 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10517[1] :
	       _theResult___fst_exp__h517678 == 11'd0 &&
	       guard__h509688 != 2'b0 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10662 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8322 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10432[0] :
	       _theResult___fst_exp__h439521 != 11'd2047 &&
	       guard__h431531 != 2'b0 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10674 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9807 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10473[0] :
	       _theResult___fst_exp__h478374 != 11'd2047 &&
	       guard__h470384 != 2'b0 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10687 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9037 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10517[0] :
	       _theResult___fst_exp__h517678 != 11'd2047 &&
	       guard__h509688 != 2'b0 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d8620 =
	     ((SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q129[10:0] ==
	       11'd0) ?
		12'd3074 :
		{ SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q132[10],
		  SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q132 }) -
	     12'd3074 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d8661 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8321 ?
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8322 ?
		  IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d8613 :
		  IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d8659) :
	       coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[171] ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9335 =
	     ((SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q146[10:0] ==
	       11'd0) ?
		12'd3074 :
		{ SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q149[10],
		  SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q149 }) -
	     12'd3074 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9376 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9036 ?
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9037 ?
		  IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d9328 :
		  IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d9374) :
	       coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[43] ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9610 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9036 ?
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9037 ?
		  IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d9596 :
		  IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d9608) :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9583 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d4531 =
	     ((SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q30[7:0] ==
	       8'd0) ?
		9'd386 :
		{ SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q35[7],
		  SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q35 }) -
	     9'd386 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d4758 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4212 ?
	       ((_theResult___fst_exp__h290808 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4743) :
	       ((_theResult___fst_exp__h299493 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4756) ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d4795 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4212 ?
	       ((_theResult___fst_exp__h290808 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4786) :
	       ((_theResult___fst_exp__h299493 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4793) ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d4886 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4212 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d4857[2] :
	       _theResult___fst_exp__h300041 == 8'd255 &&
	       _theResult___fst_sfd__h300042 == 23'd0 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d4899 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4212 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d4857[1] :
	       _theResult___fst_exp__h299493 == 8'd0 &&
	       guard__h291416 != 2'b0 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d4912 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4212 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d4857[0] :
	       _theResult___fst_exp__h299493 != 8'd255 &&
	       guard__h291416 != 2'b0 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5923 =
	     ((SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q65[7:0] ==
	       8'd0) ?
		9'd386 :
		{ SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q70[7],
		  SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q70 }) -
	     9'd386 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6150 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5604 ?
	       ((_theResult___fst_exp__h336505 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6135) :
	       ((_theResult___fst_exp__h345190 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6148) ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6187 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5604 ?
	       ((_theResult___fst_exp__h336505 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6178) :
	       ((_theResult___fst_exp__h345190 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6185) ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6278 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5604 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6249[2] :
	       _theResult___fst_exp__h345738 == 8'd255 &&
	       _theResult___fst_sfd__h345739 == 23'd0 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6291 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5604 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6249[1] :
	       _theResult___fst_exp__h345190 == 8'd0 &&
	       guard__h337113 != 2'b0 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6304 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5604 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6249[0] :
	       _theResult___fst_exp__h345190 != 8'd255 &&
	       guard__h337113 != 2'b0 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7315 =
	     ((SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q100[7:0] ==
	       8'd0) ?
		9'd386 :
		{ SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q105[7],
		  SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q105 }) -
	     9'd386 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7542 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6996 ?
	       ((_theResult___fst_exp__h382200 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7527) :
	       ((_theResult___fst_exp__h390885 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7540) ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7579 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6996 ?
	       ((_theResult___fst_exp__h382200 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7570) :
	       ((_theResult___fst_exp__h390885 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7577) ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7670 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6996 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d7641[2] :
	       _theResult___fst_exp__h391433 == 8'd255 &&
	       _theResult___fst_sfd__h391434 == 23'd0 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7683 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6996 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d7641[1] :
	       _theResult___fst_exp__h390885 == 8'd0 &&
	       guard__h382808 != 2'b0 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7696 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6996 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d7641[0] :
	       _theResult___fst_exp__h390885 != 8'd255 &&
	       guard__h382808 != 2'b0 ;
  assign IF_checkForException_2723_BIT_4_2724_THEN_IF_c_ETC___d12917 =
	     checkForException___d12723[4] ?
	       CASE_checkForException_2723_BITS_3_TO_0_0_chec_ETC__q226 :
	       4'd2 ;
  assign IF_coreFix_aluExe_0_dispToRegQ_RDY_first__1907_ETC___d11940 =
	     (coreFix_aluExe_0_dispToRegQ$RDY_first &&
	      coreFix_aluExe_0_bypassWire_0$whas &&
	      coreFix_aluExe_0_bypassWire_0_wget__1930_BITS__ETC___d11932) ?
	       !coreFix_aluExe_0_bypassWire_0$whas ||
	       coreFix_aluExe_0_dispToRegQ$RDY_first :
	       !coreFix_aluExe_0_bypassWire_1$whas ||
	       coreFix_aluExe_0_dispToRegQ$RDY_first ;
  assign IF_coreFix_aluExe_0_dispToRegQ_RDY_first__1907_ETC___d11976 =
	     (coreFix_aluExe_0_dispToRegQ$RDY_first &&
	      coreFix_aluExe_0_bypassWire_0$whas &&
	      coreFix_aluExe_0_bypassWire_0_wget__1930_BITS__ETC___d11973) ?
	       !coreFix_aluExe_0_bypassWire_0$whas ||
	       coreFix_aluExe_0_dispToRegQ$RDY_first :
	       !coreFix_aluExe_0_bypassWire_1$whas ||
	       coreFix_aluExe_0_dispToRegQ$RDY_first ;
  assign IF_coreFix_aluExe_1_dispToRegQ_RDY_first__1051_ETC___d11084 =
	     (coreFix_aluExe_1_dispToRegQ$RDY_first &&
	      coreFix_aluExe_0_bypassWire_0$whas &&
	      coreFix_aluExe_1_bypassWire_0_wget__1074_BITS__ETC___d11076) ?
	       !coreFix_aluExe_0_bypassWire_0$whas ||
	       coreFix_aluExe_1_dispToRegQ$RDY_first :
	       !coreFix_aluExe_0_bypassWire_1$whas ||
	       coreFix_aluExe_1_dispToRegQ$RDY_first ;
  assign IF_coreFix_aluExe_1_dispToRegQ_RDY_first__1051_ETC___d11120 =
	     (coreFix_aluExe_1_dispToRegQ$RDY_first &&
	      coreFix_aluExe_0_bypassWire_0$whas &&
	      coreFix_aluExe_1_bypassWire_0_wget__1074_BITS__ETC___d11117) ?
	       !coreFix_aluExe_0_bypassWire_0$whas ||
	       coreFix_aluExe_1_dispToRegQ$RDY_first :
	       !coreFix_aluExe_0_bypassWire_1$whas ||
	       coreFix_aluExe_1_dispToRegQ$RDY_first ;
  assign IF_coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first_ETC___d7874 =
	     (coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first &&
	      coreFix_aluExe_0_bypassWire_0$whas &&
	      coreFix_fpuMulDivExe_0_bypassWire_0_wget__864__ETC___d7866) ?
	       !coreFix_aluExe_0_bypassWire_0$whas ||
	       coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first :
	       !coreFix_aluExe_0_bypassWire_1$whas ||
	       coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first ;
  assign IF_coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first_ETC___d7909 =
	     (coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first &&
	      coreFix_aluExe_0_bypassWire_0$whas &&
	      coreFix_fpuMulDivExe_0_bypassWire_0_wget__864__ETC___d7906) ?
	       !coreFix_aluExe_0_bypassWire_0$whas ||
	       coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first :
	       !coreFix_aluExe_0_bypassWire_1$whas ||
	       coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first ;
  assign IF_coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first_ETC___d7935 =
	     (coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first &&
	      coreFix_aluExe_0_bypassWire_0$whas &&
	      coreFix_fpuMulDivExe_0_bypassWire_0_wget__864__ETC___d7932) ?
	       !coreFix_aluExe_0_bypassWire_0$whas ||
	       coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first :
	       !coreFix_aluExe_0_bypassWire_1$whas ||
	       coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6191 =
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[33] ?
	       ((coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
		 11'd2047 &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		 52'd0 ||
		 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
		  11'd2047 ||
		  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
		  11'd0) &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
		 52'd0) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6152) :
	       ((coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
		 11'd2047 &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		 52'd0 ||
		 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
		  11'd2047 ||
		  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
		  11'd0) &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
		 52'd0) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6189) ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d5529 =
	     ((coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	       11'd0) ?
		(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56] ?
		   6'd2 :
		   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[55] ?
		      6'd3 :
		      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[54] ?
			 6'd4 :
			 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[53] ?
			    6'd5 :
			    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[52] ?
			       6'd6 :
			       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[51] ?
				  6'd7 :
				  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[50] ?
				     6'd8 :
				     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[49] ?
					6'd9 :
					(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[48] ?
					   6'd10 :
					   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[47] ?
					      6'd11 :
					      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[46] ?
						 6'd12 :
						 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[45] ?
						    6'd13 :
						    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[44] ?
						       6'd14 :
						       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[43] ?
							  6'd15 :
							  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[42] ?
							     6'd16 :
							     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[41] ?
								6'd17 :
								(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[40] ?
								   6'd18 :
								   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[39] ?
								      6'd19 :
								      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[38] ?
									 6'd20 :
									 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[37] ?
									    6'd21 :
									    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[36] ?
									       6'd22 :
									       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[35] ?
										  6'd23 :
										  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[34] ?
										     6'd24 :
										     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[33] ?
											6'd25 :
											(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[32] ?
											   6'd26 :
											   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[31] ?
											      6'd27 :
											      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[30] ?
												 6'd28 :
												 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[29] ?
												    6'd29 :
												    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[28] ?
												       6'd30 :
												       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[27] ?
													  6'd31 :
													  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[26] ?
													     6'd32 :
													     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[25] ?
														6'd33 :
														(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[24] ?
														   6'd34 :
														   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[23] ?
														      6'd35 :
														      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[22] ?
															 6'd36 :
															 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[21] ?
															    6'd37 :
															    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[20] ?
															       6'd38 :
															       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[19] ?
																  6'd39 :
																  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[18] ?
																     6'd40 :
																     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[17] ?
																	6'd41 :
																	(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[16] ?
																	   6'd42 :
																	   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[15] ?
																	      6'd43 :
																	      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[14] ?
																		 6'd44 :
																		 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[13] ?
																		    6'd45 :
																		    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[12] ?
																		       6'd46 :
																		       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[11] ?
																			  6'd47 :
																			  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[10] ?
																			     6'd48 :
																			     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[9] ?
																				6'd49 :
																				(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[8] ?
																				   6'd50 :
																				   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[7] ?
																				      6'd51 :
																				      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[6] ?
																					 6'd52 :
																					 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[5] ?
																					    6'd53 :
																					    6'd57)))))))))))))))))))))))))))))))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6152 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5063 ?
		  IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d6120 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6122) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5603 ?
		  IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6150 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6122) ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6189 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5063 ?
		  IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d6170 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6171) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5603 ?
		  IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6187 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6171) ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6253 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6235 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5603 &&
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5604 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6249[4] ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6264 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6260 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5603 &&
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5604 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6249[3] ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6280 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d6272 :
	       !SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5603 ||
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6278 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6293 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6287 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5603 &&
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6291 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6306 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d6300 :
	       !SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5603 ||
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6304 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4137 =
	     ((coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	       11'd0) ?
		(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56] ?
		   6'd2 :
		   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[55] ?
		      6'd3 :
		      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[54] ?
			 6'd4 :
			 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[53] ?
			    6'd5 :
			    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[52] ?
			       6'd6 :
			       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[51] ?
				  6'd7 :
				  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[50] ?
				     6'd8 :
				     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[49] ?
					6'd9 :
					(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[48] ?
					   6'd10 :
					   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[47] ?
					      6'd11 :
					      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[46] ?
						 6'd12 :
						 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[45] ?
						    6'd13 :
						    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[44] ?
						       6'd14 :
						       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[43] ?
							  6'd15 :
							  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[42] ?
							     6'd16 :
							     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[41] ?
								6'd17 :
								(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[40] ?
								   6'd18 :
								   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[39] ?
								      6'd19 :
								      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[38] ?
									 6'd20 :
									 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[37] ?
									    6'd21 :
									    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[36] ?
									       6'd22 :
									       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[35] ?
										  6'd23 :
										  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[34] ?
										     6'd24 :
										     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[33] ?
											6'd25 :
											(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[32] ?
											   6'd26 :
											   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[31] ?
											      6'd27 :
											      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[30] ?
												 6'd28 :
												 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[29] ?
												    6'd29 :
												    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[28] ?
												       6'd30 :
												       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[27] ?
													  6'd31 :
													  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[26] ?
													     6'd32 :
													     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[25] ?
														6'd33 :
														(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[24] ?
														   6'd34 :
														   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[23] ?
														      6'd35 :
														      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[22] ?
															 6'd36 :
															 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[21] ?
															    6'd37 :
															    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[20] ?
															       6'd38 :
															       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[19] ?
																  6'd39 :
																  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[18] ?
																     6'd40 :
																     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[17] ?
																	6'd41 :
																	(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[16] ?
																	   6'd42 :
																	   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[15] ?
																	      6'd43 :
																	      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[14] ?
																		 6'd44 :
																		 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[13] ?
																		    6'd45 :
																		    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[12] ?
																		       6'd46 :
																		       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[11] ?
																			  6'd47 :
																			  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[10] ?
																			     6'd48 :
																			     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[9] ?
																				6'd49 :
																				(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[8] ?
																				   6'd50 :
																				   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[7] ?
																				      6'd51 :
																				      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[6] ?
																					 6'd52 :
																					 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[5] ?
																					    6'd53 :
																					    6'd57)))))))))))))))))))))))))))))))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4760 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d3671 ?
		  IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d4728 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4730) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4211 ?
		  IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d4758 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4730) ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4797 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d3671 ?
		  IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d4778 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4779) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4211 ?
		  IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d4795 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4779) ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4861 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4843 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4211 &&
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4212 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d4857[4] ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4872 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4868 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4211 &&
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4212 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d4857[3] ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4888 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d4880 :
	       !SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4211 ||
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d4886 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4901 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4895 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4211 &&
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d4899 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4914 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d4908 :
	       !SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4211 ||
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d4912 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d6921 =
	     ((coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	       11'd0) ?
		(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56] ?
		   6'd2 :
		   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[55] ?
		      6'd3 :
		      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[54] ?
			 6'd4 :
			 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[53] ?
			    6'd5 :
			    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[52] ?
			       6'd6 :
			       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[51] ?
				  6'd7 :
				  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[50] ?
				     6'd8 :
				     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[49] ?
					6'd9 :
					(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[48] ?
					   6'd10 :
					   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[47] ?
					      6'd11 :
					      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[46] ?
						 6'd12 :
						 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[45] ?
						    6'd13 :
						    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[44] ?
						       6'd14 :
						       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[43] ?
							  6'd15 :
							  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[42] ?
							     6'd16 :
							     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[41] ?
								6'd17 :
								(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[40] ?
								   6'd18 :
								   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[39] ?
								      6'd19 :
								      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[38] ?
									 6'd20 :
									 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[37] ?
									    6'd21 :
									    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[36] ?
									       6'd22 :
									       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[35] ?
										  6'd23 :
										  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[34] ?
										     6'd24 :
										     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[33] ?
											6'd25 :
											(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[32] ?
											   6'd26 :
											   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[31] ?
											      6'd27 :
											      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[30] ?
												 6'd28 :
												 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[29] ?
												    6'd29 :
												    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[28] ?
												       6'd30 :
												       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[27] ?
													  6'd31 :
													  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[26] ?
													     6'd32 :
													     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[25] ?
														6'd33 :
														(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[24] ?
														   6'd34 :
														   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[23] ?
														      6'd35 :
														      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[22] ?
															 6'd36 :
															 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[21] ?
															    6'd37 :
															    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[20] ?
															       6'd38 :
															       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[19] ?
																  6'd39 :
																  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[18] ?
																     6'd40 :
																     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[17] ?
																	6'd41 :
																	(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[16] ?
																	   6'd42 :
																	   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[15] ?
																	      6'd43 :
																	      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[14] ?
																		 6'd44 :
																		 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[13] ?
																		    6'd45 :
																		    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[12] ?
																		       6'd46 :
																		       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[11] ?
																			  6'd47 :
																			  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[10] ?
																			     6'd48 :
																			     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[9] ?
																				6'd49 :
																				(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[8] ?
																				   6'd50 :
																				   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[7] ?
																				      6'd51 :
																				      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[6] ?
																					 6'd52 :
																					 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[5] ?
																					    6'd53 :
																					    6'd57)))))))))))))))))))))))))))))))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7544 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6455 ?
		  IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d7512 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7514) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6995 ?
		  IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7542 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7514) ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7581 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6455 ?
		  IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d7562 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7563) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6995 ?
		  IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7579 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7563) ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7645 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7627 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6995 &&
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6996 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d7641[4] ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7656 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7652 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6995 &&
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6996 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d7641[3] ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7672 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d7664 :
	       !SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6995 ||
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7670 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7685 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7679 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6995 &&
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7683 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7698 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d7692 :
	       !SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6995 ||
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7696 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4799 =
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[33] ?
	       ((coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
		 11'd2047 &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		 52'd0 ||
		 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
		  11'd2047 ||
		  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
		  11'd0) &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
		 52'd0) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4760) :
	       ((coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
		 11'd2047 &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		 52'd0 ||
		 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
		  11'd2047 ||
		  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
		  11'd0) &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
		 52'd0) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4797) ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7583 =
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[33] ?
	       ((coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
		 11'd2047 &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		 52'd0 ||
		 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
		  11'd2047 ||
		  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
		  11'd0) &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
		 52'd0) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7544) :
	       ((coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
		 11'd2047 &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		 52'd0 ||
		 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
		  11'd2047 ||
		  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
		  11'd0) &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
		 52'd0) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7581) ;
  assign IF_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_d_ETC___d10818 =
	     (coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$D_OUT ==
	      64'd0) ?
	       64'd1 :
	       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$D_OUT ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10328 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[225] ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[139:76] :
	       { IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10148,
		 IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10326 } ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10352 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	     32'hFFFFFFFF ||
	     !coreFix_fpuMulDivExe_0_regToExeQ$first[107] ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8104 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd4) ?
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8070 &&
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8083 :
	       NOT_coreFix_fpuMulDivExe_0_regToExeQ_first__04_ETC___d8103 ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8848 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[225] ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[203:140] :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8847 ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9558 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[225] ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[75:12] :
	       { IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9378,
		 IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9556 } ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9583 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] != 32'hFFFFFFFF ||
	     !coreFix_fpuMulDivExe_0_regToExeQ$first[43] ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9614 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[225] ?
	       { !coreFix_fpuMulDivExe_0_regToExeQ$first[75],
		 coreFix_fpuMulDivExe_0_regToExeQ$first[74:12] } :
	       { IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9612,
		 IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9556 } ;
  assign IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12432 =
	     coreFix_globalSpecUpdate_correctSpecTag_1$whas ?
	       result__h567936 :
	       w__h567931 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d1839 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3 &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58] ||
	       !coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1825)) ?
	       NOT_coreFix_memExe_respLrScAmoQ_full_710_711_A_ETC___d1837 :
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$FULL_N ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d1859 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3 &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58] ||
	       !coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1825)) ?
	       NOT_coreFix_memExe_respLrScAmoQ_full_710_711_A_ETC___d1837 :
	       IF_NOT_coreFix_memExe_dMem_cache_m_banks_0_pip_ETC___d1858 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d1862 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState ==
	      3'd1) ?
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite :
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d1951 =
	     { (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[89:87] ==
		3'd7) ?
		 n___1__h128958 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:448],
	       (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[89:87] ==
		3'd6) ?
		 n___1__h128958 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[447:384],
	       (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[89:87] ==
		3'd5) ?
		 n___1__h128958 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[383:320],
	       (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[89:87] ==
		3'd4) ?
		 n___1__h128958 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[319:256] } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d1956 =
	     { IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d1951,
	       (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[89:87] ==
		3'd3) ?
		 n___1__h128958 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[255:192],
	       (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[89:87] ==
		3'd2) ?
		 n___1__h128958 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[191:128] } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d1961 =
	     { IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d1956,
	       (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[89:87] ==
		3'd1) ?
		 n___1__h128958 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[127:64],
	       (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[89:87] ==
		3'd0) ?
		 n___1__h128958 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[63:0] } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2261 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3 &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58] ||
	       !coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1825)) ?
	       { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[570:516],
		 4'd2 } :
	       { coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:95],
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516],
		 1'd1,
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[577:575] } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2274 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3 &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58] ||
	       !coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1825)) ?
	       { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[570:516],
		 4'd2,
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:0] } :
	       { coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:95],
		 (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] !=
		  2'd0 &&
		  !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851) ?
		   { 3'd1,
		     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[577:575] } :
		   { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516],
		     1'd1,
		     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[577:575] },
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:0] } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2276 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState ==
	      3'd1) ?
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[570:0] :
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2275 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2292 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState ==
	      3'd1) ?
	       3'd5 :
	       ((coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] !=
		 2'd0 &&
		 !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851) ?
		  3'd2 :
		  3'd3) ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2303 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState ==
	      3'd1) ?
	       59'h295555555555554 :
	       ((coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] !=
		 2'd0 &&
		 !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851) ?
		  { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[574:572],
		    2'd0,
		    coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[570:518],
		    1'd0 } :
		  { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[574:572],
		    coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516],
		    54'h15555555555555 }) ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2320 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd2) ?
	       x__h127992 :
	       ((coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58] &&
		 coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1825) ?
		  64'd0 :
		  64'd1) ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d2769 =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$whas ?
	       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$wget[3] :
	       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl[3] ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d2782 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry ||
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d2863 =
	     EN_dCacheToParent_fromP_enq ?
	       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget[583] :
	       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl[583] ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d2876 =
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_lat_0$whas ||
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d2898 =
	     EN_dCacheToParent_fromP_enq ?
	       !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget[583] :
	       !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl[583] ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_linkAdd_ETC___d1962 =
	     (coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58] &&
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1825) ?
	       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d1961 :
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:0] ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_linkAdd_ETC___d2745 =
	     !MUX_flush_reservation$write_1__SEL_1 &&
	     (coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wget[58] :
		coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58]) ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_linkAdd_ETC___d2753 =
	     MUX_flush_reservation$write_1__SEL_1 ?
	       58'h2AAAAAAAAAAAAAA :
	       (coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$whas ?
		  coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wget[57:0] :
		  coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[57:0]) ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1808 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3) ?
	       !coreFix_memExe_respLrScAmoQ_full :
	       !coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first ||
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	       3'd1 ||
	       coreFix_memExe_stb$RDY_deq ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1810 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd2) ?
	       !coreFix_memExe_respLrScAmoQ_full :
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first &&
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	       3'd4 ||
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1808 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1811 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd0) ?
	       !coreFix_memExe_memRespLdQ_full :
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1810 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1819 =
	     IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1811 &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd4 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$RDY_pipelineResp_releaseEntry &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite &&
	      (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	       3'd1 ||
	       coreFix_memExe_stb$RDY_deq)) ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851 &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
	       !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788)) ?
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1819 :
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite &&
	       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d1859 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1863 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
	       (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 ?
		  IF_NOT_coreFix_memExe_dMem_cache_m_banks_0_pip_ETC___d1841 :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite) :
	       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d1862 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1899 =
	     { (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] <=
		coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[83:82]) ?
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[83:82] :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2275 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851 &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
	       !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788)) ?
	       { coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:95],
		 IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1899,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2253 } :
	       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2274 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2323 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851 &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
	       !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788)) ?
	       { 1'd1,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2320 } :
	       65'h10000000000000001 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2503 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[571] ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2496 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2499) ?
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$RDY_pipelineResp_releaseEntry :
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$FULL_N ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2512 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[571] ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2496 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2499) ?
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[570:512] :
	       { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[570:518],
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
		   2'd0 :
		   coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq[1:0],
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515:512] } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_process_ETC___d1756 =
	     { (coreFix_memExe_dMem_cache_m_banks_0_processAmo[93:91] ==
		3'd7) ?
		 n__h124635 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:448],
	       (coreFix_memExe_dMem_cache_m_banks_0_processAmo[93:91] ==
		3'd6) ?
		 n__h124635 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[447:384],
	       (coreFix_memExe_dMem_cache_m_banks_0_processAmo[93:91] ==
		3'd5) ?
		 n__h124635 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[383:320] } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_process_ETC___d1761 =
	     { IF_coreFix_memExe_dMem_cache_m_banks_0_process_ETC___d1756,
	       (coreFix_memExe_dMem_cache_m_banks_0_processAmo[93:91] ==
		3'd4) ?
		 n__h124635 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[319:256],
	       (coreFix_memExe_dMem_cache_m_banks_0_processAmo[93:91] ==
		3'd3) ?
		 n__h124635 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[255:192] } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_process_ETC___d1766 =
	     { IF_coreFix_memExe_dMem_cache_m_banks_0_process_ETC___d1761,
	       (coreFix_memExe_dMem_cache_m_banks_0_processAmo[93:91] ==
		3'd2) ?
		 n__h124635 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[191:128],
	       (coreFix_memExe_dMem_cache_m_banks_0_processAmo[93:91] ==
		3'd1) ?
		 n__h124635 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[127:64] } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3022 =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP ?
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_lat_0$wget[72] :
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl[72] ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3035 =
	     EN_dCacheToParent_rqToP_deq ||
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3106 =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$whas ?
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wget[579] :
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl[579] ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3119 =
	     EN_dCacheToParent_rsToP_deq ||
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3141 =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$whas ?
	       !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wget[579] :
	       !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl[579] ;
  assign IF_coreFix_memExe_dTlb_procResp__485_BITS_105__ETC___d1565 =
	     (coreFix_memExe_dTlb$procResp[105:103] == 3'd3) ?
	       4'd7 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__485_BIT_1_ETC___d1564 ;
  assign IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1513 =
	     (!coreFix_memExe_dTlb$procResp[12] &&
	      !coreFix_memExe_dTlb$procResp[110] &&
	      coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1504) ?
	       coreFix_memExe_dTlb$procResp[105:103] != 3'd2 &&
	       coreFix_memExe_dTlb$procResp[105:103] != 3'd3 &&
	       !coreFix_memExe_dTlb$procResp[12] :
	       !coreFix_memExe_dTlb$procResp[12] &&
	       !coreFix_memExe_dTlb$procResp[110] ;
  assign IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1569 =
	     (!coreFix_memExe_dTlb$procResp[12] &&
	      !coreFix_memExe_dTlb$procResp[110] &&
	      coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1504) ?
	       coreFix_memExe_dTlb$procResp[105:103] != 3'd2 &&
	       IF_coreFix_memExe_dTlb_procResp__485_BITS_105__ETC___d1565 ==
	       4'd0 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__485_BIT_1_ETC___d1564 ==
	       4'd0 ;
  assign IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1573 =
	     (!coreFix_memExe_dTlb$procResp[12] &&
	      !coreFix_memExe_dTlb$procResp[110] &&
	      coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1504) ?
	       coreFix_memExe_dTlb$procResp[105:103] != 3'd2 &&
	       IF_coreFix_memExe_dTlb_procResp__485_BITS_105__ETC___d1565 ==
	       4'd1 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__485_BIT_1_ETC___d1564 ==
	       4'd1 ;
  assign IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1577 =
	     (!coreFix_memExe_dTlb$procResp[12] &&
	      !coreFix_memExe_dTlb$procResp[110] &&
	      coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1504) ?
	       coreFix_memExe_dTlb$procResp[105:103] != 3'd2 &&
	       IF_coreFix_memExe_dTlb_procResp__485_BITS_105__ETC___d1565 ==
	       4'd2 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__485_BIT_1_ETC___d1564 ==
	       4'd2 ;
  assign IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1581 =
	     (!coreFix_memExe_dTlb$procResp[12] &&
	      !coreFix_memExe_dTlb$procResp[110] &&
	      coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1504) ?
	       coreFix_memExe_dTlb$procResp[105:103] != 3'd2 &&
	       IF_coreFix_memExe_dTlb_procResp__485_BITS_105__ETC___d1565 ==
	       4'd3 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__485_BIT_1_ETC___d1564 ==
	       4'd3 ;
  assign IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1585 =
	     (!coreFix_memExe_dTlb$procResp[12] &&
	      !coreFix_memExe_dTlb$procResp[110] &&
	      coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1504) ?
	       coreFix_memExe_dTlb$procResp[105:103] != 3'd2 &&
	       IF_coreFix_memExe_dTlb_procResp__485_BITS_105__ETC___d1565 ==
	       4'd4 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__485_BIT_1_ETC___d1564 ==
	       4'd4 ;
  assign IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1589 =
	     (!coreFix_memExe_dTlb$procResp[12] &&
	      !coreFix_memExe_dTlb$procResp[110] &&
	      coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1504) ?
	       coreFix_memExe_dTlb$procResp[105:103] == 3'd2 ||
	       IF_coreFix_memExe_dTlb_procResp__485_BITS_105__ETC___d1565 ==
	       4'd5 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__485_BIT_1_ETC___d1564 ==
	       4'd5 ;
  assign IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1593 =
	     (!coreFix_memExe_dTlb$procResp[12] &&
	      !coreFix_memExe_dTlb$procResp[110] &&
	      coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1504) ?
	       coreFix_memExe_dTlb$procResp[105:103] != 3'd2 &&
	       IF_coreFix_memExe_dTlb_procResp__485_BITS_105__ETC___d1565 ==
	       4'd6 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__485_BIT_1_ETC___d1564 ==
	       4'd6 ;
  assign IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1597 =
	     (!coreFix_memExe_dTlb$procResp[12] &&
	      !coreFix_memExe_dTlb$procResp[110] &&
	      coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1504) ?
	       coreFix_memExe_dTlb$procResp[105:103] != 3'd2 &&
	       IF_coreFix_memExe_dTlb_procResp__485_BITS_105__ETC___d1565 ==
	       4'd7 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__485_BIT_1_ETC___d1564 ==
	       4'd7 ;
  assign IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1601 =
	     (!coreFix_memExe_dTlb$procResp[12] &&
	      !coreFix_memExe_dTlb$procResp[110] &&
	      coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1504) ?
	       coreFix_memExe_dTlb$procResp[105:103] != 3'd2 &&
	       IF_coreFix_memExe_dTlb_procResp__485_BITS_105__ETC___d1565 ==
	       4'd8 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__485_BIT_1_ETC___d1564 ==
	       4'd8 ;
  assign IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1605 =
	     (!coreFix_memExe_dTlb$procResp[12] &&
	      !coreFix_memExe_dTlb$procResp[110] &&
	      coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1504) ?
	       coreFix_memExe_dTlb$procResp[105:103] != 3'd2 &&
	       IF_coreFix_memExe_dTlb_procResp__485_BITS_105__ETC___d1565 ==
	       4'd9 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__485_BIT_1_ETC___d1564 ==
	       4'd9 ;
  assign IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1609 =
	     (!coreFix_memExe_dTlb$procResp[12] &&
	      !coreFix_memExe_dTlb$procResp[110] &&
	      coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1504) ?
	       coreFix_memExe_dTlb$procResp[105:103] != 3'd2 &&
	       IF_coreFix_memExe_dTlb_procResp__485_BITS_105__ETC___d1565 ==
	       4'd10 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__485_BIT_1_ETC___d1564 ==
	       4'd10 ;
  assign IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1613 =
	     (!coreFix_memExe_dTlb$procResp[12] &&
	      !coreFix_memExe_dTlb$procResp[110] &&
	      coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1504) ?
	       coreFix_memExe_dTlb$procResp[105:103] != 3'd2 &&
	       IF_coreFix_memExe_dTlb_procResp__485_BITS_105__ETC___d1565 ==
	       4'd11 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__485_BIT_1_ETC___d1564 ==
	       4'd11 ;
  assign IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1617 =
	     (!coreFix_memExe_dTlb$procResp[12] &&
	      !coreFix_memExe_dTlb$procResp[110] &&
	      coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1504) ?
	       coreFix_memExe_dTlb$procResp[105:103] != 3'd2 &&
	       IF_coreFix_memExe_dTlb_procResp__485_BITS_105__ETC___d1565 ==
	       4'd12 :
	       IF_NOT_coreFix_memExe_dTlb_procResp__485_BIT_1_ETC___d1564 ==
	       4'd12 ;
  assign IF_coreFix_memExe_dispToRegQ_RDY_first__309_AN_ETC___d1340 =
	     (coreFix_memExe_dispToRegQ$RDY_first &&
	      coreFix_aluExe_0_bypassWire_0$whas &&
	      coreFix_memExe_bypassWire_0_wget__330_BITS_70__ETC___d1332) ?
	       !coreFix_aluExe_0_bypassWire_0$whas ||
	       coreFix_memExe_dispToRegQ$RDY_first :
	       !coreFix_aluExe_0_bypassWire_1$whas ||
	       coreFix_memExe_dispToRegQ$RDY_first ;
  assign IF_coreFix_memExe_dispToRegQ_RDY_first__309_AN_ETC___d1375 =
	     (coreFix_memExe_dispToRegQ$RDY_first &&
	      coreFix_aluExe_0_bypassWire_0$whas &&
	      coreFix_memExe_bypassWire_0_wget__330_BITS_70__ETC___d1372) ?
	       !coreFix_aluExe_0_bypassWire_0$whas ||
	       coreFix_memExe_dispToRegQ$RDY_first :
	       !coreFix_aluExe_0_bypassWire_1$whas ||
	       coreFix_memExe_dispToRegQ$RDY_first ;
  assign IF_coreFix_memExe_forwardQ_deqReq_lat_1_whas___ETC___d3406 =
	     WILL_FIRE_RL_coreFix_memExe_doRespLdForward ||
	     coreFix_memExe_forwardQ_deqReq_rl ;
  assign IF_coreFix_memExe_forwardQ_enqReq_lat_1_whas___ETC___d3393 =
	     coreFix_memExe_forwardQ_enqReq_lat_0$whas ?
	       coreFix_memExe_forwardQ_enqReq_lat_0$wget[69] :
	       coreFix_memExe_forwardQ_enqReq_rl[69] ;
  assign IF_coreFix_memExe_lsq_firstLd__039_BIT_94_114__ETC___d1139 =
	     coreFix_memExe_lsq$firstLd[94] ?
	       (coreFix_memExe_lsq$firstLd[92] ?
		  { 48'd0,
		    SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_39__ETC___d1121 } :
		  { {48{SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_39__ETC___d1121[15]}},
		    SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_39__ETC___d1121 }) :
	       (coreFix_memExe_lsq$firstLd[92] ?
		  { 56'd0,
		    SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_39__ETC___d1135 } :
		  { {56{SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_39__ETC___d1135[7]}},
		    SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_39__ETC___d1135 }) ;
  assign IF_coreFix_memExe_lsq_firstLd__039_BIT_94_114__ETC___d1188 =
	     coreFix_memExe_lsq$firstLd[94] ?
	       (coreFix_memExe_lsq$firstLd[92] ?
		  { 48'd0,
		    SEL_ARR_mmio_dataRespQ_data_0_75_BITS_15_TO_0__ETC___d1171 } :
		  { {48{SEL_ARR_mmio_dataRespQ_data_0_75_BITS_15_TO_0__ETC___d1171[15]}},
		    SEL_ARR_mmio_dataRespQ_data_0_75_BITS_15_TO_0__ETC___d1171 }) :
	       (coreFix_memExe_lsq$firstLd[92] ?
		  { 56'd0,
		    SEL_ARR_mmio_dataRespQ_data_0_75_BITS_7_TO_0_1_ETC___d1184 } :
		  { {56{SEL_ARR_mmio_dataRespQ_data_0_75_BITS_7_TO_0_1_ETC___d1184[7]}},
		    SEL_ARR_mmio_dataRespQ_data_0_75_BITS_7_TO_0_1_ETC___d1184 }) ;
  assign IF_coreFix_memExe_lsq_firstLd__039_BIT_96_104__ETC___d1140 =
	     coreFix_memExe_lsq$firstLd[96] ?
	       (coreFix_memExe_lsq$firstLd[92] ?
		  { 32'd0,
		    SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_39__ETC___d1110 } :
		  { {32{SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_39__ETC___d1110[31]}},
		    SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_39__ETC___d1110 }) :
	       IF_coreFix_memExe_lsq_firstLd__039_BIT_94_114__ETC___d1139 ;
  assign IF_coreFix_memExe_lsq_firstLd__039_BIT_96_104__ETC___d1189 =
	     coreFix_memExe_lsq$firstLd[96] ?
	       (coreFix_memExe_lsq$firstLd[92] ?
		  { 32'd0,
		    SEL_ARR_mmio_dataRespQ_data_0_75_BITS_31_TO_0__ETC___d1162 } :
		  { {32{SEL_ARR_mmio_dataRespQ_data_0_75_BITS_31_TO_0__ETC___d1162[31]}},
		    SEL_ARR_mmio_dataRespQ_data_0_75_BITS_31_TO_0__ETC___d1162 }) :
	       IF_coreFix_memExe_lsq_firstLd__039_BIT_94_114__ETC___d1188 ;
  assign IF_coreFix_memExe_memRespLdQ_deqReq_lat_1_whas_ETC___d3324 =
	     WILL_FIRE_RL_coreFix_memExe_doRespLdMem ||
	     coreFix_memExe_memRespLdQ_deqReq_rl ;
  assign IF_coreFix_memExe_memRespLdQ_enqReq_lat_1_whas_ETC___d3311 =
	     coreFix_memExe_memRespLdQ_enqReq_lat_0$whas ?
	       coreFix_memExe_memRespLdQ_enqReq_lat_0$wget[69] :
	       coreFix_memExe_memRespLdQ_enqReq_rl[69] ;
  assign IF_coreFix_memExe_respLrScAmoQ_enqReq_lat_1_wh_ETC___d3247 =
	     coreFix_memExe_respLrScAmoQ_enqReq_lat_0$whas ?
	       coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wget[64] :
	       coreFix_memExe_respLrScAmoQ_enqReq_rl[64] ;
  assign IF_fetchStage_RDY_pipelines_0_first__2488_AND__ETC___d13186 =
	     fetchStage_RDY_pipelines_0_first__2488_AND_NOT_ETC___d13182 ?
	       fetchStage$RDY_pipelines_0_first :
	       !regRenamingTable$rename_0_canRename ||
	       fetchStage$RDY_pipelines_0_first ;
  assign IF_fetchStage_RDY_pipelines_1_first__2499_AND__ETC___d13568 =
	     (fetchStage$RDY_pipelines_1_first &&
	      (fetchStage$pipelines_1_first[194:192] == 3'd0 ||
	       fetchStage$pipelines_1_first[194:192] == 3'd1)) ?
	       (!fetchStage$pipelines_0_canDeq ||
		fetchStage$RDY_pipelines_0_first) &&
	       SEL_ARR_fetchStage_pipelines_0_canDeq__2489_AN_ETC___d13538 :
	       fetchStage$RDY_pipelines_1_first &&
	       IF_NOT_fetchStage_pipelines_1_first__2500_BITS_ETC___d13566 ;
  assign IF_fetchStage_RDY_pipelines_1_first__2499_AND__ETC___d13633 =
	     (fetchStage$RDY_pipelines_1_first &&
	      (fetchStage$pipelines_1_first[194:192] != 3'd1 ||
	       !fetchStage$pipelines_0_canDeq ||
	       fetchStage$RDY_pipelines_0_first) &&
	      fetchStage_RDY_pipelines_0_first__2488_AND_fet_ETC___d13248 &&
	      NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13476) ?
	       IF_fetchStage_RDY_pipelines_1_first__2499_AND__ETC___d13568 &&
	       (IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13630 ||
		!fetchStage$pipelines_0_canDeq ||
		fetchStage$RDY_pipelines_0_first) :
	       !fetchStage$pipelines_0_canDeq ||
	       fetchStage$RDY_pipelines_0_first ;
  assign IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13681 =
	     IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13674 ||
	     rob$RDY_enqPort_0_enq &&
	     regRenamingTable$RDY_rename_0_getRename &&
	     regRenamingTable$RDY_rename_0_claimRename &&
	     fetchStage$RDY_pipelines_0_deq &&
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$RDY_claimSpecTag) ;
  assign IF_fetchStage_pipelines_0_first__2491_BIT_160__ETC___d13868 =
	     { fetchStage$pipelines_0_first[159:128],
	       IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13856,
	       IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13859 ?
		 IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13862 :
		 { 1'h0,
		   IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13865 } } ;
  assign IF_fetchStage_pipelines_0_first__2491_BIT_68_2_ETC___d13007 =
	     (fetchStage$pipelines_0_first[68] ||
	      !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[0] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[1] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[2] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[3] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[4] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[5] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[6] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[7] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[8] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[9] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[10] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[11]) ?
	       IF_IF_fetchStage_pipelines_0_first__2491_BIT_6_ETC___d12968 :
	       CASE_IF_NOT_IF_IF_NOT_csrf_prv_reg_read__2519__ETC__q227 ;
  assign IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13802 =
	     IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13761 &&
	     IF_fetchStage_RDY_pipelines_1_first__2499_AND__ETC___d13568 &&
	     (IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13786 ||
	      rob$RDY_enqPort_1_enq &&
	      regRenamingTable$RDY_rename_1_getRename &&
	      regRenamingTable$RDY_rename_1_claimRename &&
	      fetchStage_RDY_pipelines_1_deq__2503_AND_NOT_f_ETC___d13796) ;
  assign IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d14126 =
	     (fetchStage$pipelines_1_first[194:192] == 3'd2 &&
	      NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d14017 &&
	      IF_fetchStage_pipelines_1_first__2500_BITS_191_ETC___d14024) ?
	       IF_fetchStage_pipelines_1_first__2500_BITS_191_ETC___d14025 :
	       { 1'h0,
		 IF_fetchStage_pipelines_1_first__2500_BITS_191_ETC___d14026 } ;
  assign IF_fetchStage_pipelines_1_first__2500_BIT_160__ETC___d14029 =
	     { fetchStage$pipelines_1_first[159:128],
	       IF_fetchStage_pipelines_1_first__2500_BITS_191_ETC___d14023,
	       IF_fetchStage_pipelines_1_first__2500_BITS_191_ETC___d14024 ?
		 IF_fetchStage_pipelines_1_first__2500_BITS_191_ETC___d14025 :
		 { 1'h0,
		   IF_fetchStage_pipelines_1_first__2500_BITS_191_ETC___d14026 } } ;
  assign IF_mmio_cRqQ_enqReq_lat_1_whas__80_THEN_mmio_c_ETC___d289 =
	     mmio_cRqQ_enqReq_lat_0$whas ?
	       mmio_cRqQ_enqReq_lat_0$wget[142] :
	       mmio_cRqQ_enqReq_rl[142] ;
  assign IF_mmio_cRsQ_enqReq_lat_1_whas__76_THEN_mmio_c_ETC___d685 =
	     CAN_FIRE_RL_mmio_handlePRq ?
	       mmio_cRsQ_enqReq_lat_0$wget[1] :
	       mmio_cRsQ_enqReq_rl[1] ;
  assign IF_mmio_dataReqQ_enqReq_lat_1_whas__5_THEN_mmi_ETC___d44 =
	     mmio_dataReqQ_enqReq_lat_0$whas ?
	       mmio_dataReqQ_enqReq_lat_0$wget[142] :
	       mmio_dataReqQ_enqReq_rl[142] ;
  assign IF_mmio_dataRespQ_enqReq_lat_1_whas__66_THEN_m_ETC___d175 =
	     CAN_FIRE_RL_mmio_sendDataResp ?
	       mmio_dataRespQ_enqReq_lat_0$wget[65] :
	       mmio_dataRespQ_enqReq_rl[65] ;
  assign IF_mmio_pRqQ_enqReq_lat_1_whas__47_THEN_mmio_p_ETC___d556 =
	     EN_mmioToPlatform_pRq_enq ?
	       mmio_pRqQ_enqReq_lat_0$wget[39] :
	       mmio_pRqQ_enqReq_rl[39] ;
  assign IF_mmio_pRsQ_enqReq_lat_1_whas__08_THEN_mmio_p_ETC___d417 =
	     EN_mmioToPlatform_pRs_enq ?
	       mmio_pRsQ_enqReq_lat_0$wget[67] :
	       mmio_pRsQ_enqReq_rl[67] ;
  assign IF_rob_deqPort_0_canDeq__4671_THEN_IF_NOT_rob__ETC___d14782 =
	     rob$deqPort_0_canDeq ?
	       y_avValue_snd_snd_snd_snd_snd__h639572 :
	       64'd0 ;
  assign IF_rob_deqPort_0_canDeq__4671_THEN_IF_NOT_rob__ETC___d14877 =
	     rob$deqPort_0_canDeq ? y_avValue_fst__h639132 : 5'd0 ;
  assign IF_rob_deqPort_0_canDeq__4671_THEN_IF_NOT_rob__ETC___d14899 =
	     rob$deqPort_0_canDeq ?
	       y_avValue_snd_snd_snd_fst__h639566 :
	       2'd0 ;
  assign IF_rob_deqPort_1_canDeq__4675_THEN_IF_NOT_rob__ETC___d14891 =
	     rob$deqPort_1_canDeq ?
	       IF_NOT_rob_deqPort_1_deq_data__4678_BIT_25_467_ETC___d14890 :
	       rob$deqPort_0_canDeq && rob$deqPort_0_deq_data[26] ;
  assign IF_scaprf_pcc_reg_read_wget__2773_BITS_149_TO__ETC___d12809 =
	     ((newAddrDiff__h576958 == 64'd0) ?
		2'd0 :
		(scaprf_pcc_reg_read_wget__2773_BITS_149_TO_86__ETC___d12785 ?
		   2'd3 :
		   2'd1)) ==
	     ((scaprf_pcc_reg_read_wget__2773_BITS_85_TO_83_2_ETC___d12796 &&
	       _0_CONCAT_fetchStage_pipelines_0_first__2491_BI_ETC___d12800) ?
		2'd0 :
		((scaprf_pcc_reg_read_wget__2773_BITS_85_TO_83_2_ETC___d12796 &&
		  !_0_CONCAT_fetchStage_pipelines_0_first__2491_BI_ETC___d12800) ?
		   2'd1 :
		   ((!scaprf_pcc_reg_read_wget__2773_BITS_85_TO_83_2_ETC___d12796 &&
		     _0_CONCAT_fetchStage_pipelines_0_first__2491_BI_ETC___d12800) ?
		      2'd3 :
		      2'd0))) ;
  assign IF_scaprf_pcc_reg_read_wget__2773_BITS_149_TO__ETC___d12812 =
	     IF_scaprf_pcc_reg_read_wget__2773_BITS_149_TO__ETC___d12809 &&
	     (newAddrDiff__h576958 == 64'd0 ||
	      scaprf_pcc_reg_read_wget__2773_BITS_149_TO_86__ETC___d12785 ||
	      newAddrDiff__h576958 ==
	      _18446744073709551615_SL_scaprf_pcc_reg_read_wg_ETC___d12788) ;
  assign IF_scaprf_pcc_reg_read_wget__2773_BITS_149_TO__ETC___d14082 =
	     ((newAddrDiff__h617908 == 64'd0) ?
		2'd0 :
		(scaprf_pcc_reg_read_wget__2773_BITS_149_TO_86__ETC___d14066 ?
		   2'd3 :
		   2'd1)) ==
	     ((scaprf_pcc_reg_read_wget__2773_BITS_85_TO_83_2_ETC___d12796 &&
	       _0_CONCAT_fetchStage_pipelines_1_first__2500_BI_ETC___d14074) ?
		2'd0 :
		((scaprf_pcc_reg_read_wget__2773_BITS_85_TO_83_2_ETC___d12796 &&
		  !_0_CONCAT_fetchStage_pipelines_1_first__2500_BI_ETC___d14074) ?
		   2'd1 :
		   ((!scaprf_pcc_reg_read_wget__2773_BITS_85_TO_83_2_ETC___d12796 &&
		     _0_CONCAT_fetchStage_pipelines_1_first__2500_BI_ETC___d14074) ?
		      2'd3 :
		      2'd0))) ;
  assign IF_scaprf_pcc_reg_read_wget__2773_BITS_149_TO__ETC___d14085 =
	     IF_scaprf_pcc_reg_read_wget__2773_BITS_149_TO__ETC___d14082 &&
	     (newAddrDiff__h617908 == 64'd0 ||
	      scaprf_pcc_reg_read_wget__2773_BITS_149_TO_86__ETC___d14066 ||
	      newAddrDiff__h617908 ==
	      _18446744073709551615_SL_scaprf_pcc_reg_read_wg_ETC___d12788) ;
  assign IF_scaprf_pcc_reg_read_wget__2773_BITS_27_TO_2_ETC___d14099 =
	     { (scaprf_pcc_reg_read_wget__2773_BITS_27_TO_25_2_ETC___d12820 ==
		_0_CONCAT_fetchStage_pipelines_1_first__2500_BI_ETC___d14074) ?
		 2'd0 :
		 ((scaprf_pcc_reg_read_wget__2773_BITS_27_TO_25_2_ETC___d12820 &&
		   !_0_CONCAT_fetchStage_pipelines_1_first__2500_BI_ETC___d14074) ?
		    2'd1 :
		    2'd3),
	       (scaprf_pcc_reg_read_wget__2773_BITS_13_TO_11_2_ETC___d12821 ==
		_0_CONCAT_fetchStage_pipelines_1_first__2500_BI_ETC___d14074) ?
		 2'd0 :
		 ((scaprf_pcc_reg_read_wget__2773_BITS_13_TO_11_2_ETC___d12821 &&
		   !_0_CONCAT_fetchStage_pipelines_1_first__2500_BI_ETC___d14074) ?
		    2'd1 :
		    2'd3) } ;
  assign IF_sfdin08839_BIT_4_THEN_2_ELSE_0__q148 =
	     sfdin__h508839[4] ? 2'd2 : 2'd0 ;
  assign IF_sfdin18733_BIT_33_THEN_2_ELSE_0__q57 =
	     sfdin__h318733[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin30682_BIT_4_THEN_2_ELSE_0__q131 =
	     sfdin__h430682[4] ? 2'd2 : 2'd0 ;
  assign IF_sfdin36499_BIT_33_THEN_2_ELSE_0__q67 =
	     sfdin__h336499[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin64428_BIT_33_THEN_2_ELSE_0__q92 =
	     sfdin__h364428[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin69535_BIT_4_THEN_2_ELSE_0__q171 =
	     sfdin__h469535[4] ? 2'd2 : 2'd0 ;
  assign IF_sfdin73036_BIT_33_THEN_2_ELSE_0__q22 =
	     sfdin__h273036[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin82194_BIT_33_THEN_2_ELSE_0__q102 =
	     sfdin__h382194[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin90802_BIT_33_THEN_2_ELSE_0__q32 =
	     sfdin__h290802[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd17624_BIT_4_THEN_2_ELSE_0__q151 =
	     _theResult___snd__h517624[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd21062_BIT_4_THEN_2_ELSE_0__q127 =
	     _theResult___snd__h421062[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd27346_BIT_33_THEN_2_ELSE_0__q59 =
	     _theResult___snd__h327346[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd39467_BIT_4_THEN_2_ELSE_0__q134 =
	     _theResult___snd__h439467[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd45136_BIT_33_THEN_2_ELSE_0__q72 =
	     _theResult___snd__h345136[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd59915_BIT_4_THEN_2_ELSE_0__q167 =
	     _theResult___snd__h459915[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd73041_BIT_33_THEN_2_ELSE_0__q94 =
	     _theResult___snd__h373041[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd78320_BIT_4_THEN_2_ELSE_0__q174 =
	     _theResult___snd__h478320[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd81649_BIT_33_THEN_2_ELSE_0__q24 =
	     _theResult___snd__h281649[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd90831_BIT_33_THEN_2_ELSE_0__q107 =
	     _theResult___snd__h390831[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd99219_BIT_4_THEN_2_ELSE_0__q144 =
	     _theResult___snd__h499219[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd99439_BIT_33_THEN_2_ELSE_0__q37 =
	     _theResult___snd__h299439[33] ? 2'd2 : 2'd0 ;
  assign NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d4880 =
	     !_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d3671 ||
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d3672 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d4828[2] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d4840[2]) ;
  assign NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d4908 =
	     !_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d3671 ||
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d3672 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d4828[0] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d4840[0]) ;
  assign NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d6272 =
	     !_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5063 ||
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5064 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d6220[2] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6232[2]) ;
  assign NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d6300 =
	     !_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5063 ||
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5064 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d6220[0] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6232[0]) ;
  assign NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d7664 =
	     !_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6455 ||
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6456 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d7612[2] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d7624[2]) ;
  assign NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d7692 =
	     !_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6455 ||
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6456 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d7612[0] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d7624[0]) ;
  assign NOT_IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_252_ETC___d13066 =
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[0] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[1] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[2] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[3] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[4] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[5] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[6] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[7] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[8] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[9] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[10] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[11] &&
	     !checkForException___d12723[4] &&
	     NOT_csrf_fs_reg_read__1289_EQ_0_2712_2713_OR_N_ETC___d13059 &&
	     (fetchStage$pipelines_0_first[231:200] != 32'h10500073 ||
	      !csrf_tw_reg ||
	      csrf_prv_reg == 2'd3) ;
  assign NOT_IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_252_ETC___d13174 =
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[0] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[1] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[2] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[3] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[4] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[5] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[6] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[7] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[8] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[9] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[10] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[11] &&
	     !checkForException___d12723[4] &&
	     NOT_csrf_fs_reg_read__1289_EQ_0_2712_2713_OR_N_ETC___d13172 ;
  assign NOT_IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_252_ETC___d13465 =
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[0] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[1] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[2] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[3] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[4] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[5] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[6] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[7] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[8] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[9] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[10] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[11] &&
	     !checkForException___d13438[4] &&
	     NOT_csrf_fs_reg_read__1289_EQ_0_2712_2713_OR_N_ETC___d13463 ;
  assign NOT_IF_NOT_rob_deqPort_0_canDeq__4671_4672_OR__ETC___d14896 =
	     (fflags__h640705 & csrf_fflags_reg) != fflags__h640705 ||
	     !r__h533618 &&
	     (IF_rob_deqPort_1_canDeq__4675_THEN_IF_NOT_rob__ETC___d14891 ||
	      fflags__h640705 != 5'd0) ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10439 =
	     (f1_exp__h401723 != 8'd255 || f1_sfd__h401724 == 23'd0) &&
	     (f1_exp__h401723 != 8'd255 || f1_sfd__h401724 != 23'd0) &&
	     (f1_exp__h401723 != 8'd0 || f1_sfd__h401724 != 23'd0) &&
	     IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10436 ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10481 =
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10439 |
	     ((f2_exp__h440717 != 8'd255 || f2_sfd__h440718 == 23'd0) &&
	      (f2_exp__h440717 != 8'd255 || f2_sfd__h440718 != 23'd0) &&
	      (f2_exp__h440717 != 8'd0 || f2_sfd__h440718 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10477) ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10539 =
	     (f1_exp__h401723 != 8'd255 || f1_sfd__h401724 == 23'd0) &&
	     (f1_exp__h401723 != 8'd255 || f1_sfd__h401724 != 23'd0) &&
	     (f1_exp__h401723 != 8'd0 || f1_sfd__h401724 != 23'd0) &&
	     IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10536 ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10550 =
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10539 |
	     ((f2_exp__h440717 != 8'd255 || f2_sfd__h440718 == 23'd0) &&
	      (f2_exp__h440717 != 8'd255 || f2_sfd__h440718 != 23'd0) &&
	      (f2_exp__h440717 != 8'd0 || f2_sfd__h440718 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10546) ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10579 =
	     (f1_exp__h401723 != 8'd255 || f1_sfd__h401724 == 23'd0) &&
	     (f1_exp__h401723 != 8'd255 || f1_sfd__h401724 != 23'd0) &&
	     (f1_exp__h401723 != 8'd0 || f1_sfd__h401724 != 23'd0) &&
	     IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10576 ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10594 =
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10579 |
	     ((f2_exp__h440717 != 8'd255 || f2_sfd__h440718 == 23'd0) &&
	      (f2_exp__h440717 != 8'd255 || f2_sfd__h440718 != 23'd0) &&
	      (f2_exp__h440717 != 8'd0 || f2_sfd__h440718 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10590) ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10625 =
	     (f1_exp__h401723 != 8'd255 || f1_sfd__h401724 == 23'd0) &&
	     (f1_exp__h401723 != 8'd255 || f1_sfd__h401724 != 23'd0) &&
	     (f1_exp__h401723 != 8'd0 || f1_sfd__h401724 != 23'd0) &&
	     IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10622 ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10638 =
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10625 |
	     ((f2_exp__h440717 != 8'd255 || f2_sfd__h440718 == 23'd0) &&
	      (f2_exp__h440717 != 8'd255 || f2_sfd__h440718 != 23'd0) &&
	      (f2_exp__h440717 != 8'd0 || f2_sfd__h440718 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10634) ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10667 =
	     (f1_exp__h401723 != 8'd255 || f1_sfd__h401724 == 23'd0) &&
	     (f1_exp__h401723 != 8'd255 || f1_sfd__h401724 != 23'd0) &&
	     (f1_exp__h401723 != 8'd0 || f1_sfd__h401724 != 23'd0) &&
	     IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10664 ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10680 =
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10667 |
	     ((f2_exp__h440717 != 8'd255 || f2_sfd__h440718 == 23'd0) &&
	      (f2_exp__h440717 != 8'd255 || f2_sfd__h440718 != 23'd0) &&
	      (f2_exp__h440717 != 8'd0 || f2_sfd__h440718 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10676) ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d8230 =
	     !f1_sfd__h401724[21] && !f1_sfd__h401724[20] &&
	     !f1_sfd__h401724[19] &&
	     !f1_sfd__h401724[18] &&
	     !f1_sfd__h401724[17] &&
	     !f1_sfd__h401724[16] &&
	     !f1_sfd__h401724[15] &&
	     !f1_sfd__h401724[14] &&
	     !f1_sfd__h401724[13] &&
	     !f1_sfd__h401724[12] &&
	     !f1_sfd__h401724[11] &&
	     !f1_sfd__h401724[10] &&
	     !f1_sfd__h401724[9] &&
	     !f1_sfd__h401724[8] &&
	     !f1_sfd__h401724[7] &&
	     !f1_sfd__h401724[6] &&
	     !f1_sfd__h401724[5] &&
	     !f1_sfd__h401724[4] &&
	     !f1_sfd__h401724[3] &&
	     !f1_sfd__h401724[2] &&
	     !f1_sfd__h401724[1] &&
	     !f1_sfd__h401724[0] ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d8960 =
	     !f3_sfd__h480022[21] && !f3_sfd__h480022[20] &&
	     !f3_sfd__h480022[19] &&
	     !f3_sfd__h480022[18] &&
	     !f3_sfd__h480022[17] &&
	     !f3_sfd__h480022[16] &&
	     !f3_sfd__h480022[15] &&
	     !f3_sfd__h480022[14] &&
	     !f3_sfd__h480022[13] &&
	     !f3_sfd__h480022[12] &&
	     !f3_sfd__h480022[11] &&
	     !f3_sfd__h480022[10] &&
	     !f3_sfd__h480022[9] &&
	     !f3_sfd__h480022[8] &&
	     !f3_sfd__h480022[7] &&
	     !f3_sfd__h480022[6] &&
	     !f3_sfd__h480022[5] &&
	     !f3_sfd__h480022[4] &&
	     !f3_sfd__h480022[3] &&
	     !f3_sfd__h480022[2] &&
	     !f3_sfd__h480022[1] &&
	     !f3_sfd__h480022[0] ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d9730 =
	     !f2_sfd__h440718[21] && !f2_sfd__h440718[20] &&
	     !f2_sfd__h440718[19] &&
	     !f2_sfd__h440718[18] &&
	     !f2_sfd__h440718[17] &&
	     !f2_sfd__h440718[16] &&
	     !f2_sfd__h440718[15] &&
	     !f2_sfd__h440718[14] &&
	     !f2_sfd__h440718[13] &&
	     !f2_sfd__h440718[12] &&
	     !f2_sfd__h440718[11] &&
	     !f2_sfd__h440718[10] &&
	     !f2_sfd__h440718[9] &&
	     !f2_sfd__h440718[8] &&
	     !f2_sfd__h440718[7] &&
	     !f2_sfd__h440718[6] &&
	     !f2_sfd__h440718[5] &&
	     !f2_sfd__h440718[4] &&
	     !f2_sfd__h440718[3] &&
	     !f2_sfd__h440718[2] &&
	     !f2_sfd__h440718[1] &&
	     !f2_sfd__h440718[0] ;
  assign NOT_IF_rob_deqPort_0_deq_data__4141_BITS_196_T_ETC___d14648 =
	     next_pc__h636122 !=
	     rob_deqPort_0_deq_data__4141_BITS_548_TO_485_4_ETC___d14645 ;
  assign NOT_SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__ETC___d13234 =
	     !SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__318_ETC___d13232 &&
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$canClaim) &&
	     regRenamingTable$rename_0_canRename &&
	     NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13179 ;
  assign NOT_coreFix_aluExe_0_bypassWire_0_whas__1929_1_ETC___d11956 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_0_bypassWire_0_wget__1930_BITS__ETC___d11932) &&
	     (!coreFix_aluExe_0_bypassWire_1$whas ||
	      !coreFix_aluExe_0_bypassWire_1_wget__1943_BITS__ETC___d11945) &&
	     (!coreFix_aluExe_0_bypassWire_2$whas ||
	      !coreFix_aluExe_0_bypassWire_2_wget__1951_BITS__ETC___d11953) ;
  assign NOT_coreFix_aluExe_0_bypassWire_0_whas__1929_1_ETC___d11986 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_0_bypassWire_0_wget__1930_BITS__ETC___d11973) &&
	     (!coreFix_aluExe_0_bypassWire_1$whas ||
	      !coreFix_aluExe_0_bypassWire_1_wget__1943_BITS__ETC___d11979) &&
	     (!coreFix_aluExe_0_bypassWire_2$whas ||
	      !coreFix_aluExe_0_bypassWire_2_wget__1951_BITS__ETC___d11983) ;
  assign NOT_coreFix_aluExe_1_bypassWire_0_whas__1073_1_ETC___d11100 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_1_bypassWire_0_wget__1074_BITS__ETC___d11076) &&
	     (!coreFix_aluExe_0_bypassWire_1$whas ||
	      !coreFix_aluExe_1_bypassWire_1_wget__1087_BITS__ETC___d11089) &&
	     (!coreFix_aluExe_1_bypassWire_2$whas ||
	      !coreFix_aluExe_1_bypassWire_2_wget__1095_BITS__ETC___d11097) ;
  assign NOT_coreFix_aluExe_1_bypassWire_0_whas__1073_1_ETC___d11130 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_1_bypassWire_0_wget__1074_BITS__ETC___d11117) &&
	     (!coreFix_aluExe_0_bypassWire_1$whas ||
	      !coreFix_aluExe_1_bypassWire_1_wget__1087_BITS__ETC___d11123) &&
	     (!coreFix_aluExe_1_bypassWire_2$whas ||
	      !coreFix_aluExe_1_bypassWire_2_wget__1095_BITS__ETC___d11127) ;
  assign NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d7890 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_0_wget__864__ETC___d7866) &&
	     (!coreFix_aluExe_0_bypassWire_1$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_1_wget__877__ETC___d7879) &&
	     (!coreFix_fpuMulDivExe_0_bypassWire_2$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_2_wget__885__ETC___d7887) ;
  assign NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d7919 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_0_wget__864__ETC___d7906) &&
	     (!coreFix_aluExe_0_bypassWire_1$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_1_wget__877__ETC___d7912) &&
	     (!coreFix_fpuMulDivExe_0_bypassWire_2$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_2_wget__885__ETC___d7916) ;
  assign NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d7945 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_0_wget__864__ETC___d7932) &&
	     (!coreFix_aluExe_0_bypassWire_1$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_1_wget__877__ETC___d7938) &&
	     (!coreFix_fpuMulDivExe_0_bypassWire_2$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_2_wget__885__ETC___d7942) ;
  assign NOT_coreFix_fpuMulDivExe_0_fpuExec_double_div__ETC___d5474 =
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[55] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[54] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[53] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[52] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[51] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[50] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[49] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[48] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[47] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[46] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[45] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[44] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[43] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[42] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[41] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[40] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[39] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[38] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[37] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[36] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[35] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[34] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[33] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[32] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[31] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[30] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[29] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[28] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[27] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[26] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[25] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[24] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[23] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[22] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[21] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[20] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[19] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[18] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[17] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[16] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[15] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[14] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[13] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[12] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[11] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[10] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[9] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[8] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[7] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[6] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[5] ;
  assign NOT_coreFix_fpuMulDivExe_0_fpuExec_double_fma__ETC___d4082 =
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[55] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[54] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[53] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[52] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[51] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[50] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[49] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[48] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[47] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[46] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[45] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[44] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[43] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[42] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[41] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[40] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[39] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[38] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[37] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[36] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[35] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[34] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[33] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[32] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[31] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[30] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[29] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[28] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[27] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[26] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[25] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[24] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[23] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[22] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[21] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[20] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[19] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[18] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[17] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[16] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[15] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[14] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[13] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[12] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[11] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[10] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[9] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[8] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[7] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[6] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[5] ;
  assign NOT_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt_ETC___d6866 =
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[55] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[54] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[53] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[52] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[51] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[50] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[49] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[48] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[47] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[46] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[45] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[44] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[43] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[42] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[41] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[40] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[39] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[38] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[37] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[36] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[35] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[34] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[33] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[32] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[31] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[30] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[29] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[28] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[27] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[26] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[25] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[24] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[23] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[22] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[21] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[20] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[19] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[18] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[17] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[16] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[15] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[14] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[13] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[12] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[11] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[10] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[9] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[8] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[7] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[6] &&
	     !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[5] ;
  assign NOT_coreFix_fpuMulDivExe_0_regToExeQ_first__04_ETC___d8103 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] != 3'd3 ||
	     CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q252 ;
  assign NOT_coreFix_fpuMulDivExe_0_rsFpuMulDiv_canEnq__ETC___d13577 =
	     !coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq ||
	     fetchStage$pipelines_0_first[68] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[0] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[1] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[2] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[3] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[4] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[5] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[6] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[7] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[8] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[9] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[10] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[11] ;
  assign NOT_coreFix_memExe_bypassWire_0_whas__329_335__ETC___d1356 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_memExe_bypassWire_0_wget__330_BITS_70__ETC___d1332) &&
	     (!coreFix_aluExe_0_bypassWire_1$whas ||
	      !coreFix_memExe_bypassWire_1_wget__343_BITS_70__ETC___d1345) &&
	     (!coreFix_memExe_bypassWire_2$whas ||
	      !coreFix_memExe_bypassWire_2_wget__351_BITS_70__ETC___d1353) ;
  assign NOT_coreFix_memExe_bypassWire_0_whas__329_335__ETC___d1385 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_memExe_bypassWire_0_wget__330_BITS_70__ETC___d1372) &&
	     (!coreFix_aluExe_0_bypassWire_1$whas ||
	      !coreFix_memExe_bypassWire_1_wget__343_BITS_70__ETC___d1378) &&
	     (!coreFix_memExe_bypassWire_2$whas ||
	      !coreFix_memExe_bypassWire_2_wget__351_BITS_70__ETC___d1382) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2279 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2407 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	      3'd3 ||
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58] &&
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1825) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] ==
	      2'd0 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2438 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	      3'd3 ||
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58] &&
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1825) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSlot[0] ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2454 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	      3'd3 ||
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58] &&
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1825) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] !=
	     2'd0 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2463 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	      3'd3 ||
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58] &&
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1825) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2462 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d1878 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState ==
	      3'd1 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	      3'd4 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2286 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	      3'd3 ||
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58] &&
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1825) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2288 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState ==
	      3'd1 ||
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2286) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2310 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd2 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3) ||
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2309 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2314 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd3 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58] ||
	      !coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1825) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2317 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2313 ||
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2314) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2331 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_pi_ETC___d2330 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2334 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2313 ||
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2331) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2345 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd4 ||
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2309 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2351 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851 &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
	       !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	      3'd4 ||
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2314) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2358 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2383 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd1 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2391 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd4 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2399 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_pi_ETC___d2395 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2408 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2407 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2433 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd0 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd2 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd4 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd3 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd1 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2450 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] ==
	     2'd0 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2453 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2451 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2456 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2454 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2464 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2463 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2466 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2464 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2472 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ||
	     IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1811 &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd4 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$RDY_pipelineResp_releaseEntry &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite &&
	      (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	       3'd1 ||
	       coreFix_memExe_stb$RDY_deq)) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2540 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[571] &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2496 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2499 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] !=
	      2'd1 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[83:82] <=
	      2'd1 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq[1:0] !=
	      2'd0 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd3 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSlot[0]) ;
  assign NOT_coreFix_memExe_dTlb_procResp__485_BITS_174_ETC___d1524 =
	     !coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1495 &&
	     coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1496 &&
	     !coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1500 &&
	     !coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1503 ;
  assign NOT_coreFix_memExe_respLrScAmoQ_full_710_711_A_ETC___d1837 =
	     !coreFix_memExe_respLrScAmoQ_full &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$RDY_pipelineResp_releaseEntry &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc[3] ||
	      !coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full) ;
  assign NOT_coreFix_memExe_rsMem_canEnq__3202_3264_OR__ETC___d13578 =
	     !coreFix_memExe_rsMem$canEnq ||
	     IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13267 ||
	     fetchStage$pipelines_0_first[68] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[0] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[1] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[2] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[3] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[4] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[5] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[6] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[7] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[8] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[9] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[10] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[11] ;
  assign NOT_csrf_fs_reg_read__1289_EQ_0_2712_2713_OR_N_ETC___d13059 =
	     (csrf_fs_reg != 2'd0 ||
	      (!fetchStage$pipelines_0_first[95] ||
	       !fetchStage$pipelines_0_first[94]) &&
	      (!fetchStage$pipelines_0_first[88] ||
	       !fetchStage$pipelines_0_first[87]) &&
	      !fetchStage$pipelines_0_first[81] &&
	      (!fetchStage$pipelines_0_first[75] ||
	       !fetchStage$pipelines_0_first[74])) &&
	     (fetchStage$pipelines_0_first[199:195] != 5'd13 ||
	      NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13053 &&
	      !csrf_prv_reg_read__2519_ULT_IF_fetchStage_pipe_ETC___d12755 &&
	      csr_addr__h576039 != 12'h8FF) ;
  assign NOT_csrf_fs_reg_read__1289_EQ_0_2712_2713_OR_N_ETC___d13172 =
	     (csrf_fs_reg != 2'd0 ||
	      (!fetchStage$pipelines_0_first[95] ||
	       !fetchStage$pipelines_0_first[94]) &&
	      (!fetchStage$pipelines_0_first[88] ||
	       !fetchStage$pipelines_0_first[87]) &&
	      !fetchStage$pipelines_0_first[81] &&
	      (!fetchStage$pipelines_0_first[75] ||
	       !fetchStage$pipelines_0_first[74])) &&
	     (fetchStage$pipelines_0_first[231:200] != 32'h10500073 ||
	      !csrf_tw_reg ||
	      csrf_prv_reg == 2'd3) ;
  assign NOT_csrf_fs_reg_read__1289_EQ_0_2712_2713_OR_N_ETC___d13463 =
	     (csrf_fs_reg != 2'd0 ||
	      (!fetchStage$pipelines_1_first[95] ||
	       !fetchStage$pipelines_1_first[94]) &&
	      (!fetchStage$pipelines_1_first[88] ||
	       !fetchStage$pipelines_1_first[87]) &&
	      !fetchStage$pipelines_1_first[81] &&
	      (!fetchStage$pipelines_1_first[75] ||
	       !fetchStage$pipelines_1_first[74])) &&
	     (fetchStage$pipelines_1_first[231:200] != 32'h10500073 ||
	      !csrf_tw_reg ||
	      csrf_prv_reg == 2'd3) ;
  assign NOT_csrf_prv_reg_read__2519_ULE_1_4282_4346_OR_ETC___d14350 =
	     !csrf_prv_reg_read__2519_ULE_1___d14282 ||
	     (commitStage_commitTrap[36] ?
		!_0b0_CONCAT_csrf_mideleg_11_reg_read__1396_1397_ETC___d14300 :
		!_0b0_CONCAT_csrf_medeleg_15_reg_read__1388_1389_ETC___d14319) ;
  assign NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13549 =
	     (!fetchStage$pipelines_0_canDeq ||
	      fetchStage$RDY_pipelines_0_first) &&
	     (regRenamingTable_rename_0_canRename__3159_AND__ETC___d13229 &&
	      (fetchStage$pipelines_0_first[194:192] == 3'd3 ||
	       fetchStage$pipelines_0_first[194:192] == 3'd4) ||
	      !coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq ||
	      !regRenamingTable$rename_1_canRename ||
	      fetchStage_pipelines_1_first__2500_BITS_199_TO_ETC___d13535) ;
  assign NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13560 =
	     (!fetchStage$pipelines_0_canDeq ||
	      fetchStage$RDY_pipelines_0_first) &&
	     (regRenamingTable_rename_0_canRename__3159_AND__ETC___d13558 ||
	      !regRenamingTable$rename_1_canRename ||
	      fetchStage_pipelines_1_first__2500_BITS_199_TO_ETC___d13535) ;
  assign NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13599 =
	     !fetchStage$pipelines_0_canDeq ||
	     NOT_regRenamingTable_rename_0_canRename__3159__ETC___d13593 ||
	     fetchStage$pipelines_0_first[194:192] != 3'd3 &&
	     fetchStage$pipelines_0_first[194:192] != 3'd4 ;
  assign NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13616 =
	     (!fetchStage$pipelines_0_canDeq ||
	      NOT_regRenamingTable_rename_0_canRename__3159__ETC___d13258 ||
	      fetchStage$pipelines_0_first[194:192] != 3'd2 ||
	      IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13267) &&
	     coreFix_memExe_rsMem$canEnq &&
	     CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q231 ;
  assign NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13737 =
	     (!fetchStage$pipelines_0_canDeq ||
	      fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	      !specTagManager$canClaim ||
	      NOT_regRenamingTable_rename_0_canRename__3159__ETC___d13593 ||
	      fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	      fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      !SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3189_co_ETC___d13199) &&
	     coreFix_aluExe_1_rsAlu$canEnq &&
	     !coreFix_aluExe_0_rsAlu_approximateCount__3193__ETC___d13195 ;
  assign NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13756 =
	     (!fetchStage$pipelines_0_canDeq ||
	      NOT_specTagManager_canClaim__3157_3242_OR_NOT__ETC___d13727) &&
	     CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q235 &&
	     (fetchStage$pipelines_1_first[199:195] == 5'd14 ||
	      coreFix_memExe_rsMem$RDY_enq) ;
  assign NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13808 =
	     (!fetchStage$pipelines_0_canDeq ||
	      fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13683 &&
	      IF_fetchStage_RDY_pipelines_0_first__2488_AND__ETC___d13186) &&
	     fetchStage$RDY_pipelines_0_first &&
	     fetchStage_pipelines_0_canDeq__2489_AND_fetchS_ETC___d13806 ;
  assign NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13940 =
	     (!fetchStage$pipelines_0_canDeq ||
	      NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13814 &&
	      IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13215) &&
	     fetchStage$pipelines_1_canDeq ;
  assign NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13942 =
	     !fetchStage$pipelines_0_canDeq ||
	     NOT_regRenamingTable_rename_0_canRename__3159__ETC___d13648 ||
	     IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13272 ||
	     fetchStage$pipelines_0_first[194:192] != 3'd1 ;
  assign NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13953 =
	     NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13940 &&
	     NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13950 &&
	     (fetchStage$pipelines_1_first[194:192] == 3'd0 ||
	      fetchStage$pipelines_1_first[194:192] == 3'd1) &&
	     SEL_ARR_NOT_fetchStage_pipelines_0_canDeq__248_ETC___d13722 ;
  assign NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13989 =
	     !fetchStage$pipelines_0_canDeq ||
	     NOT_regRenamingTable_rename_0_canRename__3159__ETC___d13648 ||
	     fetchStage$pipelines_0_first[194:192] != 3'd3 &&
	     fetchStage$pipelines_0_first[194:192] != 3'd4 ;
  assign NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d14009 =
	     NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13940 &&
	     regRenamingTable_rename_1_canRename__3278_AND__ETC___d13949 &&
	     (fetchStage$pipelines_1_first[194:192] == 3'd3 ||
	      fetchStage$pipelines_1_first[194:192] == 3'd4) &&
	     NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13989 &&
	     coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq &&
	     NOT_fetchStage_pipelines_1_first__2500_BITS_32_ETC___d14004 ;
  assign NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d14017 =
	     (!fetchStage$pipelines_0_canDeq ||
	      NOT_regRenamingTable_rename_0_canRename__3159__ETC___d13648 ||
	      fetchStage$pipelines_0_first[194:192] != 3'd2 ||
	      IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13267) &&
	     coreFix_memExe_rsMem$canEnq &&
	     CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q231 ;
  assign NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d14038 =
	     NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13940 &&
	     regRenamingTable_rename_1_canRename__3278_AND__ETC___d13949 &&
	     fetchStage$pipelines_1_first[194:192] == 3'd2 &&
	     NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d14017 &&
	     fetchStage$pipelines_1_first[173] ;
  assign NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d14061 =
	     NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13942 &&
	     specTagManager$canClaim &&
	     regRenamingTable_rename_1_canRename__3278_AND__ETC___d13949 &&
	     IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13630 &&
	     fetchStage$pipelines_1_first[194:192] == 3'd1 ;
  assign NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13053 =
	     (fetchStage$pipelines_0_first[194:192] != 3'd0 ||
	      fetchStage$pipelines_0_first[178:174] != 5'd15) &&
	     rs1__h576040 == 5'd0 &&
	     imm__h576041 == 32'd0 ||
	     csr_addr__h576039[11:10] != 2'b11 ;
  assign NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13179 =
	     fetchStage$pipelines_0_first[199:195] != 5'd0 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd21 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd17 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd18 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd13 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd16 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd15 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd19 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd20 &&
	     !fetchStage$pipelines_0_first[68] &&
	     NOT_IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_252_ETC___d13174 &&
	     rob$enqPort_0_canEnq &&
	     epochManager$checkEpoch_0_check ;
  assign NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13216 =
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$canClaim) &&
	     regRenamingTable$rename_0_canRename &&
	     NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13179 &&
	     IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13215 ;
  assign NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13483 =
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$canClaim) &&
	     regRenamingTable$rename_0_canRename &&
	     NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13179 &&
	     fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13482 ;
  assign NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13489 =
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$canClaim) &&
	     regRenamingTable$rename_0_canRename &&
	     NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13179 &&
	     (fetchStage$pipelines_0_first[194:192] == 3'd0 ||
	      fetchStage$pipelines_0_first[194:192] == 3'd1) &&
	     SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3189_co_ETC___d13199 &&
	     (!coreFix_aluExe_0_rsAlu$canEnq ||
	      !coreFix_aluExe_0_rsAlu_approximateCount__3193__ETC___d13195) ;
  assign NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13641 =
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$canClaim) &&
	     regRenamingTable$rename_0_canRename &&
	     NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13179 &&
	     IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13239 ;
  assign NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13814 =
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$canClaim) &&
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d12723[4] &&
	     rob$enqPort_0_canEnq ;
  assign NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13914 =
	     { fetchStage$pipelines_0_first[194:192] != 3'd2 ||
	       !coreFix_memExe_rsMem$canEnq ||
	       IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13267 ||
	       IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13856,
	       (fetchStage$pipelines_0_first[194:192] == 3'd2 &&
		coreFix_memExe_rsMem$canEnq &&
		IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13211 &&
		IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13859) ?
		 IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13862 :
		 { 1'h0,
		   IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13865 },
	       7'd32,
	       specTagManager$currentSpecBits } ;
  assign NOT_fetchStage_pipelines_0_first__2491_BITS_32_ETC___d13838 =
	     fetchStage$pipelines_0_first[323:260] !=
	     fallthrough_pc__h586537 ;
  assign NOT_fetchStage_pipelines_0_first__2491_BIT_68__ETC___d13227 =
	     !fetchStage$pipelines_0_first[68] &&
	     !checkForException___d12723[4] &&
	     NOT_csrf_fs_reg_read__1289_EQ_0_2712_2713_OR_N_ETC___d13172 &&
	     rob$enqPort_0_canEnq &&
	     epochManager$checkEpoch_0_check ;
  assign NOT_fetchStage_pipelines_1_canDeq__2497_2498_O_ETC___d12506 =
	     !fetchStage$pipelines_1_canDeq ||
	     fetchStage$RDY_pipelines_1_first &&
	     (epochManager$checkEpoch_1_check ||
	      fetchStage$RDY_pipelines_1_deq) ;
  assign NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13474 =
	     fetchStage$pipelines_1_first[199:195] != 5'd0 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd21 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd17 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd18 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd13 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd16 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd15 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd19 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd20 &&
	     !fetchStage$pipelines_1_first[68] &&
	     NOT_IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_252_ETC___d13465 &&
	     rob_enqPort_1_canEnq__3467_AND_epochManager_ch_ETC___d13472 ;
  assign NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13476 =
	     (fetchStage$pipelines_1_first[194:192] != 3'd1 ||
	      (!fetchStage$pipelines_0_canDeq ||
	       NOT_regRenamingTable_rename_0_canRename__3159__ETC___d13258 ||
	       IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13272 ||
	       fetchStage$pipelines_0_first[194:192] != 3'd1) &&
	      specTagManager$canClaim) &&
	     regRenamingTable$rename_1_canRename &&
	     NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13474 ;
  assign NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13587 =
	     (fetchStage$pipelines_1_first[194:192] != 3'd1 ||
	      (!fetchStage$pipelines_0_canDeq ||
	       NOT_regRenamingTable_rename_0_canRename__3159__ETC___d13258 ||
	       IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13581 ||
	       fetchStage$pipelines_0_first[194:192] != 3'd1) &&
	      specTagManager$canClaim) &&
	     regRenamingTable$rename_1_canRename &&
	     NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13474 ;
  assign NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13608 =
	     fetchStage$pipelines_1_first[199:195] != 5'd0 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd21 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd17 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd18 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd13 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd16 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd15 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd19 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd20 &&
	     !fetchStage$pipelines_1_first[68] &&
	     NOT_IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_252_ETC___d13465 &&
	     rob_enqPort_1_canEnq__3467_AND_epochManager_ch_ETC___d13606 ;
  assign NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13625 =
	     fetchStage$pipelines_1_first[199:195] != 5'd0 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd21 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd17 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd18 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd13 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd16 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd15 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd19 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd20 &&
	     !fetchStage$pipelines_1_first[68] &&
	     NOT_IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_252_ETC___d13465 &&
	     rob_enqPort_1_canEnq__3467_AND_epochManager_ch_ETC___d13623 ;
  assign NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13950 =
	     (fetchStage$pipelines_1_first[194:192] != 3'd1 ||
	      NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13942 &&
	      specTagManager$canClaim) &&
	     regRenamingTable_rename_1_canRename__3278_AND__ETC___d13949 ;
  assign NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d14012 =
	     (fetchStage$pipelines_1_first[194:192] == 3'd3 ||
	      fetchStage$pipelines_1_first[194:192] == 3'd4) &&
	     NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13989 &&
	     coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq &&
	     fetchStage$pipelines_1_first[173] ;
  assign NOT_fetchStage_pipelines_1_first__2500_BITS_32_ETC___d14004 =
	     fetchStage$pipelines_1_first[323:260] !=
	     fallthrough_pc__h602840 ;
  assign NOT_fetchStage_pipelines_1_first__2500_BIT_68__ETC___d13947 =
	     !fetchStage$pipelines_1_first[68] &&
	     !checkForException___d13438[4] &&
	     NOT_csrf_fs_reg_read__1289_EQ_0_2712_2713_OR_N_ETC___d13463 &&
	     rob$enqPort_1_canEnq &&
	     epochManager$checkEpoch_1_check ;
  assign NOT_mmio_dataPendQ_empty_73_64_AND_rob_RDY_set_ETC___d1154 =
	     !mmio_dataPendQ_empty && rob$RDY_setExecuted_deqLSQ &&
	     coreFix_memExe_lsq$RDY_firstLd &&
	     coreFix_memExe_lsq$RDY_deqLd ;
  assign NOT_mmio_dataPendQ_empty_73_64_AND_rob_RDY_set_ETC___d965 =
	     !mmio_dataPendQ_empty && rob$RDY_setExecuted_deqLSQ &&
	     coreFix_memExe_lsq$RDY_firstSt &&
	     coreFix_memExe_lsq$RDY_deqSt ;
  assign NOT_regRenamingTable_rename_0_canRename__3159__ETC___d13258 =
	     !regRenamingTable$rename_0_canRename ||
	     fetchStage$pipelines_0_first[199:195] == 5'd0 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd21 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd17 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd18 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd13 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd16 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd15 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd19 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd20 ||
	     fetchStage_pipelines_0_first__2491_BIT_68_2518_ETC___d13256 ;
  assign NOT_regRenamingTable_rename_0_canRename__3159__ETC___d13593 =
	     !regRenamingTable$rename_0_canRename ||
	     fetchStage$pipelines_0_first[199:195] == 5'd0 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd21 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd17 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd18 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd13 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd16 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd15 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd19 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd20 ||
	     fetchStage_pipelines_0_first__2491_BIT_68_2518_ETC___d13256 ;
  assign NOT_regRenamingTable_rename_0_canRename__3159__ETC___d13648 =
	     !regRenamingTable$rename_0_canRename ||
	     fetchStage$pipelines_0_first[68] ||
	     checkForException___d12723[4] ||
	     !rob$enqPort_0_canEnq ;
  assign NOT_regRenamingTable_rename_1_canRename__3278__ETC___d13706 =
	     !regRenamingTable$rename_1_canRename ||
	     fetchStage$pipelines_1_first[199:195] == 5'd0 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd21 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd17 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd18 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd13 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd16 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd15 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd19 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd20 ||
	     fetchStage_pipelines_1_first__2500_BIT_68_3306_ETC___d13704 ;
  assign NOT_rob_deqPort_0_canDeq__4671_4672_OR_rob_RDY_ETC___d14710 =
	     (!rob$deqPort_0_canDeq ||
	      rob$RDY_deqPort_0_deq &&
	      regRenamingTable$RDY_commit_0_commit) &&
	     (!rob$deqPort_1_canDeq ||
	      rob$RDY_deqPort_1_deq_data &&
	      NOT_rob_deqPort_1_deq_data__4678_BIT_25_4679_4_ETC___d14707) ;
  assign NOT_rob_deqPort_0_canDeq__4671_4672_OR_rob_deq_ETC___d14870 =
	     (!rob$deqPort_0_canDeq ||
	      rob$deqPort_0_deq_data[25] && !rob$deqPort_0_deq_data[18] &&
	      !rob$deqPort_0_deq_data[266] &&
	      rob$deqPort_0_deq_data[356:352] != 5'd0 &&
	      rob$deqPort_0_deq_data[356:352] != 5'd21 &&
	      rob$deqPort_0_deq_data[356:352] != 5'd17 &&
	      rob$deqPort_0_deq_data[356:352] != 5'd18 &&
	      rob$deqPort_0_deq_data[356:352] != 5'd13 &&
	      rob$deqPort_0_deq_data[356:352] != 5'd16 &&
	      rob$deqPort_0_deq_data[356:352] != 5'd15 &&
	      rob$deqPort_0_deq_data[356:352] != 5'd19 &&
	      rob$deqPort_0_deq_data[356:352] != 5'd20) &&
	     rob$deqPort_1_canDeq ;
  assign NOT_rob_deqPort_0_deq_data__4141_BITS_356_TO_3_ETC___d14464 =
	     rob$deqPort_0_deq_data[356:352] != 5'd13 ||
	     (IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 !=
	      6'd7 ||
	      csrf_stats_module_writeQ$FULL_N) &&
	     (IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 !=
	      6'd6 ||
	      csrf_terminate_module_terminateQ$FULL_N) ;
  assign NOT_rob_deqPort_0_deq_data__4141_BITS_356_TO_3_ETC___d14657 =
	     (rob$deqPort_0_deq_data[356:352] == 5'd13) !=
	     rob$deqPort_0_deq_data[280] ;
  assign NOT_rob_deqPort_1_deq_data__4678_BIT_25_4679_4_ETC___d14707 =
	     !rob$deqPort_1_deq_data[25] || rob$deqPort_1_deq_data[18] ||
	     rob$deqPort_1_deq_data[266] ||
	     rob$deqPort_1_deq_data[356:352] == 5'd0 ||
	     rob$deqPort_1_deq_data[356:352] == 5'd21 ||
	     rob$deqPort_1_deq_data[356:352] == 5'd17 ||
	     rob$deqPort_1_deq_data[356:352] == 5'd18 ||
	     rob$deqPort_1_deq_data[356:352] == 5'd13 ||
	     rob$deqPort_1_deq_data[356:352] == 5'd16 ||
	     rob$deqPort_1_deq_data[356:352] == 5'd15 ||
	     rob$deqPort_1_deq_data[356:352] == 5'd19 ||
	     rob$deqPort_1_deq_data[356:352] == 5'd20 ||
	     rob$RDY_deqPort_1_deq && regRenamingTable$RDY_commit_1_commit ;
  assign NOT_scaprf_pcc_reg_read_wget__2773_BITS_33_TO__ETC___d12776 =
	     scaprf_pcc_reg_data_rl[33:28] >= 6'd50 ;
  assign NOT_specTagManager_canClaim__3157_3242_OR_NOT__ETC___d13727 =
	     !specTagManager$canClaim ||
	     NOT_regRenamingTable_rename_0_canRename__3159__ETC___d13593 ||
	     IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13674 ||
	     fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	     specTagManager$RDY_nextSpecTag ;
  assign NOT_specTagManager_canClaim__3157_3242_OR_NOT__ETC___d13792 =
	     !specTagManager$canClaim ||
	     NOT_regRenamingTable_rename_0_canRename__3159__ETC___d13648 ||
	     IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13674 ||
	     fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	     specTagManager$RDY_nextSpecTag ;
  assign SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2658 =
	     { CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q15,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q16,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q17,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q18 } ;
  assign SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2667 =
	     { SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2658,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q19,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q20 } ;
  assign SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2676 =
	     { SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2667,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q243,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q244 } ;
  assign SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2683 =
	     { CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q250,
	       !CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q251,
	       SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2676,
	       x__h220334 } ;
  assign SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rq_ETC___d15018 =
	     { CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q253,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q254,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q255 } ;
  assign SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d14974 =
	     { CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q236,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q237,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q238,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q239 } ;
  assign SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d14983 =
	     { SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d14974,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q240,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q241 } ;
  assign SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d14992 =
	     { SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d14983,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q245,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q246 } ;
  assign SEL_ARR_fetchStage_pipelines_0_canDeq__2489_AN_ETC___d13538 =
	     SEL_ARR_fetchStage_pipelines_0_canDeq__2489_AN_ETC___d13508 ||
	     fetchStage$pipelines_1_first[194:192] == 3'd1 &&
	     regRenamingTable_rename_0_canRename__3159_AND__ETC___d13243 ||
	     !regRenamingTable$rename_1_canRename ||
	     fetchStage_pipelines_1_first__2500_BITS_199_TO_ETC___d13535 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10750 =
	     b__h522717 * b__h522793 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10763 =
	     b__h522717 * b__h522906 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8320 =
	     { {4{f1_exp01723_MINUS_127__q128[7]}},
	       f1_exp01723_MINUS_127__q128 } ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8321 =
	     (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8320 ^
	      12'h800) <=
	     12'd3071 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8322 =
	     (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8320 ^
	      12'h800) <
	     12'd1026 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9035 =
	     { {4{f3_exp80021_MINUS_127__q145[7]}},
	       f3_exp80021_MINUS_127__q145 } ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9036 =
	     (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9035 ^
	      12'h800) <=
	     12'd3071 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9037 =
	     (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9035 ^
	      12'h800) <
	     12'd1026 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9805 =
	     { {4{f2_exp40717_MINUS_127__q168[7]}},
	       f2_exp40717_MINUS_127__q168 } ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9806 =
	     (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9805 ^
	      12'h800) <=
	     12'd3071 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9807 =
	     (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9805 ^
	      12'h800) <
	     12'd1026 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q129 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8320 +
	     12'd1023 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q132 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q129[10:0] -
	     11'd1023 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q146 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9035 +
	     12'd1023 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q149 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q146[10:0] -
	     11'd1023 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q169 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9805 +
	     12'd1023 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q172 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q169[10:0] -
	     11'd1023 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5602 =
	     { coreFix_fpuMulDivExe_0_fpuExec_double_divresp_ETC__q64[10],
	       coreFix_fpuMulDivExe_0_fpuExec_double_divresp_ETC__q64 } ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5603 =
	     (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5602 ^
	      12'h800) <=
	     12'd2175 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5604 =
	     (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5602 ^
	      12'h800) <
	     12'd1922 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q65 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5602 +
	     12'd127 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q70 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q65[7:0] -
	     8'd127 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4210 =
	     { coreFix_fpuMulDivExe_0_fpuExec_double_fmaresp_ETC__q29[10],
	       coreFix_fpuMulDivExe_0_fpuExec_double_fmaresp_ETC__q29 } ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4211 =
	     (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4210 ^
	      12'h800) <=
	     12'd2175 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4212 =
	     (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4210 ^
	      12'h800) <
	     12'd1922 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q30 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4210 +
	     12'd127 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q35 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q30[7:0] -
	     8'd127 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6994 =
	     { coreFix_fpuMulDivExe_0_fpuExec_double_sqrtres_ETC__q99[10],
	       coreFix_fpuMulDivExe_0_fpuExec_double_sqrtres_ETC__q99 } ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6995 =
	     (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6994 ^
	      12'h800) <=
	     12'd2175 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6996 =
	     (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6994 ^
	      12'h800) <
	     12'd1922 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q100 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6994 +
	     12'd127 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q105 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q100[7:0] -
	     8'd127 ;
  assign _0_CONCAT_1_CONCAT_0_CONCAT_fetchStage_pipeline_ETC___d13151 =
	     { 3'd1,
	       ret_address__h585298,
	       ret_addrBits__h585299,
	       87'h7FFF8FFFFFA20000007E00,
	       (fetchStage$pipelines_0_first[173] &&
		fetchStage$pipelines_0_first[199:195] == 5'd13 &&
		(fetchStage$pipelines_0_first[172:161] == 12'd1 ||
		 fetchStage$pipelines_0_first[172:161] == 12'd2 ||
		 fetchStage$pipelines_0_first[172:161] == 12'd3)) ?
		 fetchStage$pipelines_0_first[194:192] == 3'd0 &&
		 fetchStage$pipelines_0_first[178:174] == 5'd15 ||
		 (!fetchStage$pipelines_0_first[88] ||
		  fetchStage$pipelines_0_first[87] ||
		  fetchStage$pipelines_0_first[86:82] != 5'd0) &&
		 (!fetchStage$pipelines_0_first[160] ||
		  fetchStage$pipelines_0_first[159:128] != 32'd0) :
		 fetchStage$pipelines_0_first[75] &&
		 fetchStage$pipelines_0_first[74],
	       fetchStage$pipelines_0_first[194:192] != 3'd0,
	       13'h1521,
	       specTagManager$currentSpecBits } ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d3908 =
	     ({ 3'd0,
		IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d3906 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d4828 =
	     { 3'd0,
	       _theResult___fst_exp__h273042 == 8'd0 &&
	       (sfdin__h273036[56:34] == 23'd0 || guard__h264941 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h273639 == 8'd255 &&
	       _theResult___fst_sfd__h273640 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h273042 != 8'd255 &&
	       guard__h264941 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d5300 =
	     ({ 3'd0,
		IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d5298 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d6220 =
	     { 3'd0,
	       _theResult___fst_exp__h318739 == 8'd0 &&
	       (sfdin__h318733[56:34] == 23'd0 || guard__h310640 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h319336 == 8'd255 &&
	       _theResult___fst_sfd__h319337 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h318739 != 8'd255 &&
	       guard__h310640 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d6692 =
	     ({ 3'd0,
		IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d6690 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d7612 =
	     { 3'd0,
	       _theResult___fst_exp__h364434 == 8'd0 &&
	       (sfdin__h364428[56:34] == 23'd0 || guard__h356335 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h365031 == 8'd255 &&
	       _theResult___fst_sfd__h365032 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h364434 != 8'd255 &&
	       guard__h356335 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10056 =
	     ({ 6'd0,
		IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d10054 } ^
	      12'h800) <=
	     12'd2048 ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10432 =
	     { 3'd0,
	       _theResult___fst_exp__h430688 == 11'd0 &&
	       (sfdin__h430682[56:5] == 52'd0 || guard__h422462 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h431520 == 11'd2047 &&
	       _theResult___fst_sfd__h431521 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h430688 != 11'd2047 &&
	       guard__h422462 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10473 =
	     { 3'd0,
	       _theResult___fst_exp__h469541 == 11'd0 &&
	       (sfdin__h469535[56:5] == 52'd0 || guard__h461315 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h470373 == 11'd2047 &&
	       _theResult___fst_sfd__h470374 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h469541 != 11'd2047 &&
	       guard__h461315 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10517 =
	     { 3'd0,
	       _theResult___fst_exp__h508845 == 11'd0 &&
	       (sfdin__h508839[56:5] == 52'd0 || guard__h500619 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h509677 == 11'd2047 &&
	       _theResult___fst_sfd__h509678 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h508845 != 11'd2047 &&
	       guard__h500619 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d8571 =
	     ({ 6'd0,
		IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d8569 } ^
	      12'h800) <=
	     12'd2048 ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d9286 =
	     ({ 6'd0,
		IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d9284 } ^
	      12'h800) <=
	     12'd2048 ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d4459 =
	     ({ 3'd0,
		IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d4457 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d4857 =
	     { 3'd0,
	       _theResult___fst_exp__h290808 == 8'd0 &&
	       (sfdin__h290802[56:34] == 23'd0 || guard__h282580 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h291405 == 8'd255 &&
	       _theResult___fst_sfd__h291406 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h290808 != 8'd255 &&
	       guard__h282580 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d5851 =
	     ({ 3'd0,
		IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d5849 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6249 =
	     { 3'd0,
	       _theResult___fst_exp__h336505 == 8'd0 &&
	       (sfdin__h336499[56:34] == 23'd0 || guard__h328277 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h337102 == 8'd255 &&
	       _theResult___fst_sfd__h337103 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h336505 != 8'd255 &&
	       guard__h328277 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d7243 =
	     ({ 3'd0,
		IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d7241 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d7641 =
	     { 3'd0,
	       _theResult___fst_exp__h382200 == 8'd0 &&
	       (sfdin__h382194[56:34] == 23'd0 || guard__h373972 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h382797 == 8'd255 &&
	       _theResult___fst_sfd__h382798 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h382200 != 8'd255 &&
	       guard__h373972 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10106 =
	     ({ 6'd0,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9757 } ^
	      12'h800) <=
	     (IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10105 ^
	      12'h800) ;
  assign _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10415 =
	     { 3'd0,
	       _theResult___fst_exp__h421111 == 11'd0 &&
	       guard__h413150 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h421869 == 11'd2047 &&
	       _theResult___fst_sfd__h421870 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h421111 != 11'd2047 &&
	       guard__h413150 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10456 =
	     { 3'd0,
	       _theResult___fst_exp__h459964 == 11'd0 &&
	       guard__h452003 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h460722 == 11'd2047 &&
	       _theResult___fst_sfd__h460723 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h459964 != 11'd2047 &&
	       guard__h452003 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10500 =
	     { 3'd0,
	       _theResult___fst_exp__h499268 == 11'd0 &&
	       guard__h491307 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h500026 == 11'd2047 &&
	       _theResult___fst_sfd__h500027 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h499268 != 11'd2047 &&
	       guard__h491307 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d8259 =
	     ({ 6'd0,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8257 } ^
	      12'h800) <=
	     12'd2944 ;
  assign _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d8621 =
	     ({ 6'd0,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8257 } ^
	      12'h800) <=
	     (IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d8620 ^
	      12'h800) ;
  assign _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d8989 =
	     ({ 6'd0,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8987 } ^
	      12'h800) <=
	     12'd2944 ;
  assign _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9336 =
	     ({ 6'd0,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8987 } ^
	      12'h800) <=
	     (IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9335 ^
	      12'h800) ;
  assign _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9759 =
	     ({ 6'd0,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9757 } ^
	      12'h800) <=
	     12'd2944 ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d4139 =
	     ({ 3'd0,
		IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4137 } ^
	      9'h100) <=
	     9'd384 ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d4532 =
	     ({ 3'd0,
		IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4137 } ^
	      9'h100) <=
	     (IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d4531 ^
	      9'h100) ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d4840 =
	     { 3'd0,
	       _theResult___fst_exp__h281698 == 8'd0 &&
	       guard__h273650 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h282221 == 8'd255 &&
	       _theResult___fst_sfd__h282222 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h281698 != 8'd255 &&
	       guard__h273650 != 2'b0 } ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5531 =
	     ({ 3'd0,
		IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d5529 } ^
	      9'h100) <=
	     9'd384 ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5924 =
	     ({ 3'd0,
		IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d5529 } ^
	      9'h100) <=
	     (IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5923 ^
	      9'h100) ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6232 =
	     { 3'd0,
	       _theResult___fst_exp__h327395 == 8'd0 &&
	       guard__h319347 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h327918 == 8'd255 &&
	       _theResult___fst_sfd__h327919 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h327395 != 8'd255 &&
	       guard__h319347 != 2'b0 } ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6923 =
	     ({ 3'd0,
		IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d6921 } ^
	      9'h100) <=
	     9'd384 ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d7316 =
	     ({ 3'd0,
		IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d6921 } ^
	      9'h100) <=
	     (IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7315 ^
	      9'h100) ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d7624 =
	     { 3'd0,
	       _theResult___fst_exp__h373090 == 8'd0 &&
	       guard__h365042 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h373613 == 8'd255 &&
	       _theResult___fst_sfd__h373614 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h373090 != 8'd255 &&
	       guard__h365042 != 2'b0 } ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10756 =
	     b__h522894 * b__h522906 ;
  assign _0_CONCAT_fetchStage_pipelines_0_first__2491_BI_ETC___d12800 =
	     x__h577269[13:11] < repBound__h577231 ;
  assign _0_CONCAT_fetchStage_pipelines_0_first__2491_BI_ETC___d12830 =
	     { _0_CONCAT_fetchStage_pipelines_0_first__2491_BI_ETC___d12800,
	       (scaprf_pcc_reg_read_wget__2773_BITS_27_TO_25_2_ETC___d12820 ==
		_0_CONCAT_fetchStage_pipelines_0_first__2491_BI_ETC___d12800) ?
		 2'd0 :
		 ((scaprf_pcc_reg_read_wget__2773_BITS_27_TO_25_2_ETC___d12820 &&
		   !_0_CONCAT_fetchStage_pipelines_0_first__2491_BI_ETC___d12800) ?
		    2'd1 :
		    2'd3),
	       (scaprf_pcc_reg_read_wget__2773_BITS_13_TO_11_2_ETC___d12821 ==
		_0_CONCAT_fetchStage_pipelines_0_first__2491_BI_ETC___d12800) ?
		 2'd0 :
		 ((scaprf_pcc_reg_read_wget__2773_BITS_13_TO_11_2_ETC___d12821 &&
		   !_0_CONCAT_fetchStage_pipelines_0_first__2491_BI_ETC___d12800) ?
		    2'd1 :
		    2'd3) } ;
  assign _0_CONCAT_fetchStage_pipelines_1_first__2500_BI_ETC___d14074 =
	     x__h618085[13:11] < repBound__h577231 ;
  assign _0_OR_NOT_fetchStage_pipelines_0_first__2491_BI_ETC___d13655 =
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$RDY_nextSpecTag) &&
	     CASE_k90245_0_coreFix_aluExe_0_rsAluRDY_enq_1_ETC__q232 ;
  assign _0_OR_NOT_fetchStage_pipelines_1_first__2500_BI_ETC___d13740 =
	     (fetchStage$pipelines_1_first[194:192] != 3'd1 ||
	      specTagManager$RDY_nextSpecTag) &&
	     CASE_fetchStage_pipelines_0_canDeq__2489_AND_N_ETC__q234 ;
  assign _0_OR_fetchStage_RDY_pipelines_0_first__2488_35_ETC___d13563 =
	     fetchStage$RDY_pipelines_0_first &&
	     fetchStage$pipelines_1_first[194:192] == 3'd1 &&
	     regRenamingTable_rename_0_canRename__3159_AND__ETC___d13243 ||
	     !regRenamingTable$rename_1_canRename ||
	     fetchStage_pipelines_1_first__2500_BITS_199_TO_ETC___d13535 ;
  assign _0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d8327 =
	     sfd__h402085 >>
	     _3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d8323 ;
  assign _0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d9042 =
	     sfd__h480383 >>
	     _3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d9038 ;
  assign _0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d9812 =
	     sfd__h441079 >>
	     _3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d9808 ;
  assign _0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d4217 =
	     sfd__h257326 >>
	     (_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d4213[11] ?
		12'hAAA :
		_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d4213) ;
  assign _0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d5609 =
	     sfd__h303028 >>
	     (_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d5605[11] ?
		12'hAAA :
		_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d5605) ;
  assign _0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d7001 =
	     sfd__h348723 >>
	     (_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d6997[11] ?
		12'hAAA :
		_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d6997) ;
  assign _0b0_CONCAT_csrf_medeleg_15_reg_read__1388_1389_ETC___d14319 =
	     medeleg_csr__read__h531425[i__h625344] ;
  assign _0b0_CONCAT_csrf_mideleg_11_reg_read__1396_1397_ETC___d14300 =
	     mideleg_csr__read__h531520[i__h625504] ;
  assign _18446744073709551615_SL_scaprf_pcc_reg_read_wg_ETC___d12788 =
	     mask__h584357 ^ y__h577196 ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d3670 =
	     12'd3074 -
	     { 6'd0,
	       coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56] ?
		 6'd0 :
		 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[55] ?
		    6'd1 :
		    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[54] ?
		       6'd2 :
		       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[53] ?
			  6'd3 :
			  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[52] ?
			     6'd4 :
			     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[51] ?
				6'd5 :
				(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[50] ?
				   6'd6 :
				   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[49] ?
				      6'd7 :
				      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[48] ?
					 6'd8 :
					 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[47] ?
					    6'd9 :
					    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[46] ?
					       6'd10 :
					       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[45] ?
						  6'd11 :
						  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[44] ?
						     6'd12 :
						     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[43] ?
							6'd13 :
							(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[42] ?
							   6'd14 :
							   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[41] ?
							      6'd15 :
							      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[40] ?
								 6'd16 :
								 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[39] ?
								    6'd17 :
								    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[38] ?
								       6'd18 :
								       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[37] ?
									  6'd19 :
									  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[36] ?
									     6'd20 :
									     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[35] ?
										6'd21 :
										(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[34] ?
										   6'd22 :
										   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[33] ?
										      6'd23 :
										      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[32] ?
											 6'd24 :
											 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[31] ?
											    6'd25 :
											    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[30] ?
											       6'd26 :
											       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[29] ?
												  6'd27 :
												  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[28] ?
												     6'd28 :
												     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[27] ?
													6'd29 :
													(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[26] ?
													   6'd30 :
													   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[25] ?
													      6'd31 :
													      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[24] ?
														 6'd32 :
														 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[23] ?
														    6'd33 :
														    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[22] ?
														       6'd34 :
														       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[21] ?
															  6'd35 :
															  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[20] ?
															     6'd36 :
															     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[19] ?
																6'd37 :
																(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[18] ?
																   6'd38 :
																   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[17] ?
																      6'd39 :
																      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[16] ?
																	 6'd40 :
																	 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[15] ?
																	    6'd41 :
																	    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[14] ?
																	       6'd42 :
																	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[13] ?
																		  6'd43 :
																		  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[12] ?
																		     6'd44 :
																		     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[11] ?
																			6'd45 :
																			(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[10] ?
																			   6'd46 :
																			   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[9] ?
																			      6'd47 :
																			      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[8] ?
																				 6'd48 :
																				 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[7] ?
																				    6'd49 :
																				    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[6] ?
																				       6'd50 :
																				       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[5] ?
																					  6'd51 :
																					  6'd52))))))))))))))))))))))))))))))))))))))))))))))))))) } ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d3671 =
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d3670 ^
	      12'h800) <=
	     12'd2175 ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d3672 =
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d3670 ^
	      12'h800) <
	     12'd1922 ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4843 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d3671 &&
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d3672 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d4828[4] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d4840[4]) ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4868 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d3671 &&
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d3672 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d4828[3] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d4840[3]) ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4895 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d3671 &&
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d3672 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d4828[1] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d4840[1]) ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5062 =
	     12'd3074 -
	     { 6'd0,
	       coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56] ?
		 6'd0 :
		 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[55] ?
		    6'd1 :
		    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[54] ?
		       6'd2 :
		       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[53] ?
			  6'd3 :
			  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[52] ?
			     6'd4 :
			     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[51] ?
				6'd5 :
				(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[50] ?
				   6'd6 :
				   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[49] ?
				      6'd7 :
				      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[48] ?
					 6'd8 :
					 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[47] ?
					    6'd9 :
					    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[46] ?
					       6'd10 :
					       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[45] ?
						  6'd11 :
						  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[44] ?
						     6'd12 :
						     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[43] ?
							6'd13 :
							(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[42] ?
							   6'd14 :
							   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[41] ?
							      6'd15 :
							      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[40] ?
								 6'd16 :
								 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[39] ?
								    6'd17 :
								    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[38] ?
								       6'd18 :
								       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[37] ?
									  6'd19 :
									  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[36] ?
									     6'd20 :
									     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[35] ?
										6'd21 :
										(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[34] ?
										   6'd22 :
										   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[33] ?
										      6'd23 :
										      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[32] ?
											 6'd24 :
											 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[31] ?
											    6'd25 :
											    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[30] ?
											       6'd26 :
											       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[29] ?
												  6'd27 :
												  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[28] ?
												     6'd28 :
												     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[27] ?
													6'd29 :
													(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[26] ?
													   6'd30 :
													   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[25] ?
													      6'd31 :
													      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[24] ?
														 6'd32 :
														 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[23] ?
														    6'd33 :
														    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[22] ?
														       6'd34 :
														       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[21] ?
															  6'd35 :
															  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[20] ?
															     6'd36 :
															     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[19] ?
																6'd37 :
																(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[18] ?
																   6'd38 :
																   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[17] ?
																      6'd39 :
																      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[16] ?
																	 6'd40 :
																	 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[15] ?
																	    6'd41 :
																	    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[14] ?
																	       6'd42 :
																	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[13] ?
																		  6'd43 :
																		  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[12] ?
																		     6'd44 :
																		     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[11] ?
																			6'd45 :
																			(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[10] ?
																			   6'd46 :
																			   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[9] ?
																			      6'd47 :
																			      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[8] ?
																				 6'd48 :
																				 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[7] ?
																				    6'd49 :
																				    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[6] ?
																				       6'd50 :
																				       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[5] ?
																					  6'd51 :
																					  6'd52))))))))))))))))))))))))))))))))))))))))))))))))))) } ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5063 =
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5062 ^
	      12'h800) <=
	     12'd2175 ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5064 =
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5062 ^
	      12'h800) <
	     12'd1922 ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6235 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5063 &&
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5064 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d6220[4] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6232[4]) ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6260 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5063 &&
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5064 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d6220[3] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6232[3]) ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6287 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5063 &&
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5064 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d6220[1] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6232[1]) ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6454 =
	     12'd3074 -
	     { 6'd0,
	       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56] ?
		 6'd0 :
		 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[55] ?
		    6'd1 :
		    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[54] ?
		       6'd2 :
		       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[53] ?
			  6'd3 :
			  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[52] ?
			     6'd4 :
			     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[51] ?
				6'd5 :
				(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[50] ?
				   6'd6 :
				   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[49] ?
				      6'd7 :
				      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[48] ?
					 6'd8 :
					 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[47] ?
					    6'd9 :
					    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[46] ?
					       6'd10 :
					       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[45] ?
						  6'd11 :
						  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[44] ?
						     6'd12 :
						     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[43] ?
							6'd13 :
							(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[42] ?
							   6'd14 :
							   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[41] ?
							      6'd15 :
							      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[40] ?
								 6'd16 :
								 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[39] ?
								    6'd17 :
								    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[38] ?
								       6'd18 :
								       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[37] ?
									  6'd19 :
									  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[36] ?
									     6'd20 :
									     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[35] ?
										6'd21 :
										(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[34] ?
										   6'd22 :
										   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[33] ?
										      6'd23 :
										      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[32] ?
											 6'd24 :
											 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[31] ?
											    6'd25 :
											    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[30] ?
											       6'd26 :
											       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[29] ?
												  6'd27 :
												  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[28] ?
												     6'd28 :
												     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[27] ?
													6'd29 :
													(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[26] ?
													   6'd30 :
													   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[25] ?
													      6'd31 :
													      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[24] ?
														 6'd32 :
														 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[23] ?
														    6'd33 :
														    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[22] ?
														       6'd34 :
														       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[21] ?
															  6'd35 :
															  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[20] ?
															     6'd36 :
															     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[19] ?
																6'd37 :
																(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[18] ?
																   6'd38 :
																   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[17] ?
																      6'd39 :
																      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[16] ?
																	 6'd40 :
																	 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[15] ?
																	    6'd41 :
																	    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[14] ?
																	       6'd42 :
																	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[13] ?
																		  6'd43 :
																		  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[12] ?
																		     6'd44 :
																		     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[11] ?
																			6'd45 :
																			(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[10] ?
																			   6'd46 :
																			   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[9] ?
																			      6'd47 :
																			      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[8] ?
																				 6'd48 :
																				 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[7] ?
																				    6'd49 :
																				    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[6] ?
																				       6'd50 :
																				       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[5] ?
																					  6'd51 :
																					  6'd52))))))))))))))))))))))))))))))))))))))))))))))))))) } ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6455 =
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6454 ^
	      12'h800) <=
	     12'd2175 ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6456 =
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6454 ^
	      12'h800) <
	     12'd1922 ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7627 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6455 &&
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6456 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d7612[4] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d7624[4]) ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7652 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6455 &&
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6456 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d7612[3] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d7624[3]) ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7679 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6455 &&
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6456 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d7612[1] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d7624[1]) ;
  assign _3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d8323 =
	     12'd3074 -
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8320 ;
  assign _3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d9038 =
	     12'd3074 -
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9035 ;
  assign _3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d9808 =
	     12'd3074 -
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9805 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8183 =
	     12'd3970 -
	     { 7'd0,
	       f1_sfd__h401724[22] ?
		 5'd0 :
		 (f1_sfd__h401724[21] ?
		    5'd1 :
		    (f1_sfd__h401724[20] ?
		       5'd2 :
		       (f1_sfd__h401724[19] ?
			  5'd3 :
			  (f1_sfd__h401724[18] ?
			     5'd4 :
			     (f1_sfd__h401724[17] ?
				5'd5 :
				(f1_sfd__h401724[16] ?
				   5'd6 :
				   (f1_sfd__h401724[15] ?
				      5'd7 :
				      (f1_sfd__h401724[14] ?
					 5'd8 :
					 (f1_sfd__h401724[13] ?
					    5'd9 :
					    (f1_sfd__h401724[12] ?
					       5'd10 :
					       (f1_sfd__h401724[11] ?
						  5'd11 :
						  (f1_sfd__h401724[10] ?
						     5'd12 :
						     (f1_sfd__h401724[9] ?
							5'd13 :
							(f1_sfd__h401724[8] ?
							   5'd14 :
							   (f1_sfd__h401724[7] ?
							      5'd15 :
							      (f1_sfd__h401724[6] ?
								 5'd16 :
								 (f1_sfd__h401724[5] ?
								    5'd17 :
								    (f1_sfd__h401724[4] ?
								       5'd18 :
								       (f1_sfd__h401724[3] ?
									  5'd19 :
									  (f1_sfd__h401724[2] ?
									     5'd20 :
									     (f1_sfd__h401724[1] ?
										5'd21 :
										(f1_sfd__h401724[0] ?
										   5'd22 :
										   5'd23)))))))))))))))))))))) } ;
  assign _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8184 =
	     (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8183 ^
	      12'h800) <=
	     12'd3071 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8186 =
	     (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8183 ^
	      12'h800) <
	     12'd1026 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8913 =
	     12'd3970 -
	     { 7'd0,
	       f3_sfd__h480022[22] ?
		 5'd0 :
		 (f3_sfd__h480022[21] ?
		    5'd1 :
		    (f3_sfd__h480022[20] ?
		       5'd2 :
		       (f3_sfd__h480022[19] ?
			  5'd3 :
			  (f3_sfd__h480022[18] ?
			     5'd4 :
			     (f3_sfd__h480022[17] ?
				5'd5 :
				(f3_sfd__h480022[16] ?
				   5'd6 :
				   (f3_sfd__h480022[15] ?
				      5'd7 :
				      (f3_sfd__h480022[14] ?
					 5'd8 :
					 (f3_sfd__h480022[13] ?
					    5'd9 :
					    (f3_sfd__h480022[12] ?
					       5'd10 :
					       (f3_sfd__h480022[11] ?
						  5'd11 :
						  (f3_sfd__h480022[10] ?
						     5'd12 :
						     (f3_sfd__h480022[9] ?
							5'd13 :
							(f3_sfd__h480022[8] ?
							   5'd14 :
							   (f3_sfd__h480022[7] ?
							      5'd15 :
							      (f3_sfd__h480022[6] ?
								 5'd16 :
								 (f3_sfd__h480022[5] ?
								    5'd17 :
								    (f3_sfd__h480022[4] ?
								       5'd18 :
								       (f3_sfd__h480022[3] ?
									  5'd19 :
									  (f3_sfd__h480022[2] ?
									     5'd20 :
									     (f3_sfd__h480022[1] ?
										5'd21 :
										(f3_sfd__h480022[0] ?
										   5'd22 :
										   5'd23)))))))))))))))))))))) } ;
  assign _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8914 =
	     (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8913 ^
	      12'h800) <=
	     12'd3071 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8916 =
	     (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8913 ^
	      12'h800) <
	     12'd1026 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9683 =
	     12'd3970 -
	     { 7'd0,
	       f2_sfd__h440718[22] ?
		 5'd0 :
		 (f2_sfd__h440718[21] ?
		    5'd1 :
		    (f2_sfd__h440718[20] ?
		       5'd2 :
		       (f2_sfd__h440718[19] ?
			  5'd3 :
			  (f2_sfd__h440718[18] ?
			     5'd4 :
			     (f2_sfd__h440718[17] ?
				5'd5 :
				(f2_sfd__h440718[16] ?
				   5'd6 :
				   (f2_sfd__h440718[15] ?
				      5'd7 :
				      (f2_sfd__h440718[14] ?
					 5'd8 :
					 (f2_sfd__h440718[13] ?
					    5'd9 :
					    (f2_sfd__h440718[12] ?
					       5'd10 :
					       (f2_sfd__h440718[11] ?
						  5'd11 :
						  (f2_sfd__h440718[10] ?
						     5'd12 :
						     (f2_sfd__h440718[9] ?
							5'd13 :
							(f2_sfd__h440718[8] ?
							   5'd14 :
							   (f2_sfd__h440718[7] ?
							      5'd15 :
							      (f2_sfd__h440718[6] ?
								 5'd16 :
								 (f2_sfd__h440718[5] ?
								    5'd17 :
								    (f2_sfd__h440718[4] ?
								       5'd18 :
								       (f2_sfd__h440718[3] ?
									  5'd19 :
									  (f2_sfd__h440718[2] ?
									     5'd20 :
									     (f2_sfd__h440718[1] ?
										5'd21 :
										(f2_sfd__h440718[0] ?
										   5'd22 :
										   5'd23)))))))))))))))))))))) } ;
  assign _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9684 =
	     (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9683 ^
	      12'h800) <=
	     12'd3071 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9686 =
	     (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9683 ^
	      12'h800) <
	     12'd1026 ;
  assign _3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d4213 =
	     12'd3970 -
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4210 ;
  assign _3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d5605 =
	     12'd3970 -
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5602 ;
  assign _3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d6997 =
	     12'd3970 -
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6994 ;
  assign _dfoo12 =
	     fetchStage$pipelines_0_canDeq &&
	     regRenamingTable_rename_0_canRename__3159_AND__ETC___d13852 ||
	     NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13940 &&
	     regRenamingTable_rename_1_canRename__3278_AND__ETC___d13949 &&
	     fetchStage$pipelines_1_first[194:192] == 3'd2 &&
	     NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d14017 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd14 ;
  assign _dfoo18 =
	     k__h590245 == 1'd0 &&
	     fetchStage_pipelines_0_canDeq__2489_AND_NOT_fe_ETC___d13817 ||
	     fetchStage_pipelines_0_canDeq__2489_AND_NOT_fe_ETC___d13936 ==
	     1'd0 &&
	     NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13953 ;
  assign _dfoo2 =
	     fetchStage$pipelines_0_canDeq &&
	     regRenamingTable_rename_0_canRename__3159_AND__ETC___d13894 ||
	     NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13940 &&
	     regRenamingTable_rename_1_canRename__3278_AND__ETC___d13949 &&
	     fetchStage$pipelines_1_first[194:192] == 3'd2 &&
	     NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d14017 &&
	     fetchStage$pipelines_1_first[191:189] != 3'd0 &&
	     fetchStage$pipelines_1_first[191:189] != 3'd2 ;
  assign _dfoo20 =
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	     6'd18 ||
	     rob$deqPort_0_deq_data[356:352] == 5'd20 ;
  assign _dfoo26 =
	     rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	     (IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd8 ||
	      IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 ==
	      6'd18) ||
	     rob$deqPort_0_deq_data[356:352] == 5'd19 ;
  assign _dfoo7 =
	     fetchStage$pipelines_0_canDeq &&
	     regRenamingTable_rename_0_canRename__3159_AND__ETC___d13886 ||
	     NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13940 &&
	     regRenamingTable_rename_1_canRename__3278_AND__ETC___d13949 &&
	     fetchStage$pipelines_1_first[194:192] == 3'd2 &&
	     NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d14017 &&
	     (fetchStage$pipelines_1_first[191:189] == 3'd0 ||
	      fetchStage$pipelines_1_first[191:189] == 3'd2) ;
  assign _dor1coreFix_aluExe_0_bypassWire_2$EN_wset =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  assign _dor1coreFix_aluExe_0_bypassWire_3$EN_wset =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;
  assign _dor1coreFix_aluExe_0_rsAlu$EN_setRegReady_3_put =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1coreFix_aluExe_1_bypassWire_2$EN_wset =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  assign _dor1coreFix_aluExe_1_bypassWire_3$EN_wset =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;
  assign _dor1coreFix_aluExe_1_rsAlu$EN_setRegReady_3_put =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1coreFix_fpuMulDivExe_0_bypassWire_2$EN_wset =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  assign _dor1coreFix_fpuMulDivExe_0_bypassWire_3$EN_wset =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;
  assign _dor1coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_3_put =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1coreFix_memExe_bypassWire_2$EN_wset =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  assign _dor1coreFix_memExe_bypassWire_3$EN_wset =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;
  assign _dor1coreFix_memExe_reqLdQ_empty_lat_0$EN_wset =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1coreFix_memExe_reqLdQ_full_lat_0$EN_wset =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1coreFix_memExe_rsMem$EN_setRegReady_3_put =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1rf$EN_write_0_wr =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  assign _dor1rf$EN_write_1_wr =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;
  assign _dor1sbAggr$EN_setReady_3_put =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1sbCons$EN_setReady_0_put =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  assign _dor1sbCons$EN_setReady_1_put =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;
  assign _theResult_____2__h224782 =
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d2782 ?
	       next_deqP___1__h225027 :
	       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP ;
  assign _theResult_____2__h231351 =
	     IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d2876 ?
	       next_deqP___1__h231596 :
	       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP ;
  assign _theResult_____2__h236020 =
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3035 ?
	       next_deqP___1__h236450 :
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP ;
  assign _theResult_____2__h242447 =
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3119 ?
	       next_deqP___1__h242877 :
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP ;
  assign _theResult_____2__h250043 =
	     IF_coreFix_memExe_memRespLdQ_deqReq_lat_1_whas_ETC___d3324 ?
	       next_deqP___1__h250288 :
	       coreFix_memExe_memRespLdQ_deqP ;
  assign _theResult_____2__h251943 =
	     IF_coreFix_memExe_forwardQ_deqReq_lat_1_whas___ETC___d3406 ?
	       next_deqP___1__h252188 :
	       coreFix_memExe_forwardQ_deqP ;
  assign _theResult____h264931 =
	     (value__h265553 == 54'd0) ? sfd__h257326 : 57'd1 ;
  assign _theResult____h282570 =
	     ((_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d4213 ^
	       12'h800) <
	      12'd2105) ?
	       result__h283183 :
	       _theResult____h264931 ;
  assign _theResult____h310630 =
	     (value__h311250 == 54'd0) ? sfd__h303028 : 57'd1 ;
  assign _theResult____h328267 =
	     ((_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d5605 ^
	       12'h800) <
	      12'd2105) ?
	       result__h328880 :
	       _theResult____h310630 ;
  assign _theResult____h356325 =
	     (value__h356945 == 54'd0) ? sfd__h348723 : 57'd1 ;
  assign _theResult____h373962 =
	     ((_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d6997 ^
	       12'h800) <
	      12'd2105) ?
	       result__h374575 :
	       _theResult____h356325 ;
  assign _theResult____h422452 =
	     ((_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d8323 ^
	       12'h800) <
	      12'd2105) ?
	       result__h423065 :
	       ((value__h406668 == 25'd0) ? sfd__h402085 : 57'd1) ;
  assign _theResult____h461305 =
	     ((_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d9808 ^
	       12'h800) <
	      12'd2105) ?
	       result__h461918 :
	       ((value__h445521 == 25'd0) ? sfd__h441079 : 57'd1) ;
  assign _theResult____h500609 =
	     ((_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d9038 ^
	       12'h800) <
	      12'd2105) ?
	       result__h501222 :
	       ((value__h484825 == 25'd0) ? sfd__h480383 : 57'd1) ;
  assign _theResult____h572230 =
	     (csrf_prv_reg != 2'd3 || csrf_ie_vec_3) ?
	       enabled_ints___1__h572643 :
	       12'd0 ;
  assign _theResult___exp__h273558 =
	     sfd__h273134[24] ?
	       ((_theResult___fst_exp__h273042 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h300075) :
	       ((_theResult___fst_exp__h273042 == 8'd0 &&
		 sfd__h273134[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h273042) ;
  assign _theResult___exp__h282140 =
	     sfd__h281716[24] ?
	       ((_theResult___fst_exp__h281698 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h300099) :
	       ((_theResult___fst_exp__h281698 == 8'd0 &&
		 sfd__h281716[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h281698) ;
  assign _theResult___exp__h291324 =
	     sfd__h290900[24] ?
	       ((_theResult___fst_exp__h290808 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h300129) :
	       ((_theResult___fst_exp__h290808 == 8'd0 &&
		 sfd__h290900[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h290808) ;
  assign _theResult___exp__h299960 =
	     sfd__h299512[24] ?
	       ((_theResult___fst_exp__h299493 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h300153) :
	       ((_theResult___fst_exp__h299493 == 8'd0 &&
		 sfd__h299512[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h299493) ;
  assign _theResult___exp__h300062 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd2047) ?
	       8'd255 :
	       _theResult___fst_exp__h300053 ;
  assign _theResult___exp__h319255 =
	     sfd__h318831[24] ?
	       ((_theResult___fst_exp__h318739 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h345772) :
	       ((_theResult___fst_exp__h318739 == 8'd0 &&
		 sfd__h318831[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h318739) ;
  assign _theResult___exp__h327837 =
	     sfd__h327413[24] ?
	       ((_theResult___fst_exp__h327395 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h345796) :
	       ((_theResult___fst_exp__h327395 == 8'd0 &&
		 sfd__h327413[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h327395) ;
  assign _theResult___exp__h337021 =
	     sfd__h336597[24] ?
	       ((_theResult___fst_exp__h336505 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h345826) :
	       ((_theResult___fst_exp__h336505 == 8'd0 &&
		 sfd__h336597[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h336505) ;
  assign _theResult___exp__h345657 =
	     sfd__h345209[24] ?
	       ((_theResult___fst_exp__h345190 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h345850) :
	       ((_theResult___fst_exp__h345190 == 8'd0 &&
		 sfd__h345209[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h345190) ;
  assign _theResult___exp__h345759 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd2047) ?
	       8'd255 :
	       _theResult___fst_exp__h345750 ;
  assign _theResult___exp__h364950 =
	     sfd__h364526[24] ?
	       ((_theResult___fst_exp__h364434 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h391467) :
	       ((_theResult___fst_exp__h364434 == 8'd0 &&
		 sfd__h364526[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h364434) ;
  assign _theResult___exp__h373532 =
	     sfd__h373108[24] ?
	       ((_theResult___fst_exp__h373090 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h391491) :
	       ((_theResult___fst_exp__h373090 == 8'd0 &&
		 sfd__h373108[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h373090) ;
  assign _theResult___exp__h382716 =
	     sfd__h382292[24] ?
	       ((_theResult___fst_exp__h382200 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h391521) :
	       ((_theResult___fst_exp__h382200 == 8'd0 &&
		 sfd__h382292[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h382200) ;
  assign _theResult___exp__h391352 =
	     sfd__h390904[24] ?
	       ((_theResult___fst_exp__h390885 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h391545) :
	       ((_theResult___fst_exp__h390885 == 8'd0 &&
		 sfd__h390904[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h390885) ;
  assign _theResult___exp__h391454 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd2047) ?
	       8'd255 :
	       _theResult___fst_exp__h391445 ;
  assign _theResult___exp__h421766 =
	     sfd__h421129[53] ?
	       ((_theResult___fst_exp__h421111 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h440361) :
	       ((_theResult___fst_exp__h421111 == 11'd0 &&
		 sfd__h421129[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h421111) ;
  assign _theResult___exp__h431417 =
	     sfd__h430780[53] ?
	       ((_theResult___fst_exp__h430688 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h440396) :
	       ((_theResult___fst_exp__h430688 == 11'd0 &&
		 sfd__h430780[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h430688) ;
  assign _theResult___exp__h440201 =
	     sfd__h439540[53] ?
	       ((_theResult___fst_exp__h439521 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h440422) :
	       ((_theResult___fst_exp__h439521 == 11'd0 &&
		 sfd__h439540[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h439521) ;
  assign _theResult___exp__h460619 =
	     sfd__h459982[53] ?
	       ((_theResult___fst_exp__h459964 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h479214) :
	       ((_theResult___fst_exp__h459964 == 11'd0 &&
		 sfd__h459982[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h459964) ;
  assign _theResult___exp__h470270 =
	     sfd__h469633[53] ?
	       ((_theResult___fst_exp__h469541 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h479249) :
	       ((_theResult___fst_exp__h469541 == 11'd0 &&
		 sfd__h469633[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h469541) ;
  assign _theResult___exp__h479054 =
	     sfd__h478393[53] ?
	       ((_theResult___fst_exp__h478374 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h479275) :
	       ((_theResult___fst_exp__h478374 == 11'd0 &&
		 sfd__h478393[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h478374) ;
  assign _theResult___exp__h499923 =
	     sfd__h499286[53] ?
	       ((_theResult___fst_exp__h499268 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h518518) :
	       ((_theResult___fst_exp__h499268 == 11'd0 &&
		 sfd__h499286[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h499268) ;
  assign _theResult___exp__h509574 =
	     sfd__h508937[53] ?
	       ((_theResult___fst_exp__h508845 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h518553) :
	       ((_theResult___fst_exp__h508845 == 11'd0 &&
		 sfd__h508937[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h508845) ;
  assign _theResult___exp__h518358 =
	     sfd__h517697[53] ?
	       ((_theResult___fst_exp__h517678 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h518579) :
	       ((_theResult___fst_exp__h517678 == 11'd0 &&
		 sfd__h517697[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h517678) ;
  assign _theResult___fst__h523117 =
	     a__h522569[63] ? a___1__h523122 : a__h522569 ;
  assign _theResult___fst_exp__h273042 =
	     _theResult____h264931[56] ?
	       8'd2 :
	       _theResult___fst_exp__h273116 ;
  assign _theResult___fst_exp__h273107 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d3906 } ;
  assign _theResult___fst_exp__h273113 =
	     (!_theResult____h264931[56] && !_theResult____h264931[55] &&
	      !_theResult____h264931[54] &&
	      !_theResult____h264931[53] &&
	      !_theResult____h264931[52] &&
	      !_theResult____h264931[51] &&
	      !_theResult____h264931[50] &&
	      !_theResult____h264931[49] &&
	      !_theResult____h264931[48] &&
	      !_theResult____h264931[47] &&
	      !_theResult____h264931[46] &&
	      !_theResult____h264931[45] &&
	      !_theResult____h264931[44] &&
	      !_theResult____h264931[43] &&
	      !_theResult____h264931[42] &&
	      !_theResult____h264931[41] &&
	      !_theResult____h264931[40] &&
	      !_theResult____h264931[39] &&
	      !_theResult____h264931[38] &&
	      !_theResult____h264931[37] &&
	      !_theResult____h264931[36] &&
	      !_theResult____h264931[35] &&
	      !_theResult____h264931[34] &&
	      !_theResult____h264931[33] &&
	      !_theResult____h264931[32] &&
	      !_theResult____h264931[31] &&
	      !_theResult____h264931[30] &&
	      !_theResult____h264931[29] &&
	      !_theResult____h264931[28] &&
	      !_theResult____h264931[27] &&
	      !_theResult____h264931[26] &&
	      !_theResult____h264931[25] &&
	      !_theResult____h264931[24] &&
	      !_theResult____h264931[23] &&
	      !_theResult____h264931[22] &&
	      !_theResult____h264931[21] &&
	      !_theResult____h264931[20] &&
	      !_theResult____h264931[19] &&
	      !_theResult____h264931[18] &&
	      !_theResult____h264931[17] &&
	      !_theResult____h264931[16] &&
	      !_theResult____h264931[15] &&
	      !_theResult____h264931[14] &&
	      !_theResult____h264931[13] &&
	      !_theResult____h264931[12] &&
	      !_theResult____h264931[11] &&
	      !_theResult____h264931[10] &&
	      !_theResult____h264931[9] &&
	      !_theResult____h264931[8] &&
	      !_theResult____h264931[7] &&
	      !_theResult____h264931[6] &&
	      !_theResult____h264931[5] &&
	      !_theResult____h264931[4] &&
	      !_theResult____h264931[3] &&
	      !_theResult____h264931[2] &&
	      !_theResult____h264931[1] &&
	      !_theResult____h264931[0] ||
	      !_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d3908) ?
	       8'd0 :
	       _theResult___fst_exp__h273107 ;
  assign _theResult___fst_exp__h273116 =
	     (!_theResult____h264931[56] && _theResult____h264931[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h273113 ;
  assign _theResult___fst_exp__h273639 =
	     (_theResult___fst_exp__h273042 == 8'd255) ?
	       _theResult___fst_exp__h273042 :
	       _theResult___fst_exp__h273636 ;
  assign _theResult___fst_exp__h281689 =
	     8'd129 -
	     { 2'd0,
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4137 } ;
  assign _theResult___fst_exp__h281695 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0 &&
	      NOT_coreFix_fpuMulDivExe_0_fpuExec_double_fma__ETC___d4082 ||
	      !_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d4139) ?
	       8'd0 :
	       _theResult___fst_exp__h281689 ;
  assign _theResult___fst_exp__h281698 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       _theResult___fst_exp__h281695 :
	       8'd129 ;
  assign _theResult___fst_exp__h282221 =
	     (_theResult___fst_exp__h281698 == 8'd255) ?
	       _theResult___fst_exp__h281698 :
	       _theResult___fst_exp__h282218 ;
  assign _theResult___fst_exp__h290808 =
	     _theResult____h282570[56] ?
	       8'd2 :
	       _theResult___fst_exp__h290882 ;
  assign _theResult___fst_exp__h290873 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d4457 } ;
  assign _theResult___fst_exp__h290879 =
	     (!_theResult____h282570[56] && !_theResult____h282570[55] &&
	      !_theResult____h282570[54] &&
	      !_theResult____h282570[53] &&
	      !_theResult____h282570[52] &&
	      !_theResult____h282570[51] &&
	      !_theResult____h282570[50] &&
	      !_theResult____h282570[49] &&
	      !_theResult____h282570[48] &&
	      !_theResult____h282570[47] &&
	      !_theResult____h282570[46] &&
	      !_theResult____h282570[45] &&
	      !_theResult____h282570[44] &&
	      !_theResult____h282570[43] &&
	      !_theResult____h282570[42] &&
	      !_theResult____h282570[41] &&
	      !_theResult____h282570[40] &&
	      !_theResult____h282570[39] &&
	      !_theResult____h282570[38] &&
	      !_theResult____h282570[37] &&
	      !_theResult____h282570[36] &&
	      !_theResult____h282570[35] &&
	      !_theResult____h282570[34] &&
	      !_theResult____h282570[33] &&
	      !_theResult____h282570[32] &&
	      !_theResult____h282570[31] &&
	      !_theResult____h282570[30] &&
	      !_theResult____h282570[29] &&
	      !_theResult____h282570[28] &&
	      !_theResult____h282570[27] &&
	      !_theResult____h282570[26] &&
	      !_theResult____h282570[25] &&
	      !_theResult____h282570[24] &&
	      !_theResult____h282570[23] &&
	      !_theResult____h282570[22] &&
	      !_theResult____h282570[21] &&
	      !_theResult____h282570[20] &&
	      !_theResult____h282570[19] &&
	      !_theResult____h282570[18] &&
	      !_theResult____h282570[17] &&
	      !_theResult____h282570[16] &&
	      !_theResult____h282570[15] &&
	      !_theResult____h282570[14] &&
	      !_theResult____h282570[13] &&
	      !_theResult____h282570[12] &&
	      !_theResult____h282570[11] &&
	      !_theResult____h282570[10] &&
	      !_theResult____h282570[9] &&
	      !_theResult____h282570[8] &&
	      !_theResult____h282570[7] &&
	      !_theResult____h282570[6] &&
	      !_theResult____h282570[5] &&
	      !_theResult____h282570[4] &&
	      !_theResult____h282570[3] &&
	      !_theResult____h282570[2] &&
	      !_theResult____h282570[1] &&
	      !_theResult____h282570[0] ||
	      !_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d4459) ?
	       8'd0 :
	       _theResult___fst_exp__h290873 ;
  assign _theResult___fst_exp__h290882 =
	     (!_theResult____h282570[56] && _theResult____h282570[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h290879 ;
  assign _theResult___fst_exp__h291405 =
	     (_theResult___fst_exp__h290808 == 8'd255) ?
	       _theResult___fst_exp__h290808 :
	       _theResult___fst_exp__h291402 ;
  assign _theResult___fst_exp__h299445 =
	     (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q30[7:0] ==
	      8'd0) ?
	       8'd1 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q30[7:0] ;
  assign _theResult___fst_exp__h299484 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q30[7:0] -
	     { 2'd0,
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4137 } ;
  assign _theResult___fst_exp__h299490 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0 &&
	      NOT_coreFix_fpuMulDivExe_0_fpuExec_double_fma__ETC___d4082 ||
	      !_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d4532) ?
	       8'd0 :
	       _theResult___fst_exp__h299484 ;
  assign _theResult___fst_exp__h299493 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       _theResult___fst_exp__h299490 :
	       _theResult___fst_exp__h299445 ;
  assign _theResult___fst_exp__h300041 =
	     (_theResult___fst_exp__h299493 == 8'd255) ?
	       _theResult___fst_exp__h299493 :
	       _theResult___fst_exp__h300038 ;
  assign _theResult___fst_exp__h300050 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d3671 ?
		  _theResult___snd_fst_exp__h282224 :
		  _theResult___fst_exp__h264913) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4211 ?
		  _theResult___snd_fst_exp__h300044 :
		  _theResult___fst_exp__h264913) ;
  assign _theResult___fst_exp__h300053 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
	      52'd0) ?
	       8'd0 :
	       _theResult___fst_exp__h300050 ;
  assign _theResult___fst_exp__h318739 =
	     _theResult____h310630[56] ?
	       8'd2 :
	       _theResult___fst_exp__h318813 ;
  assign _theResult___fst_exp__h318804 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d5298 } ;
  assign _theResult___fst_exp__h318810 =
	     (!_theResult____h310630[56] && !_theResult____h310630[55] &&
	      !_theResult____h310630[54] &&
	      !_theResult____h310630[53] &&
	      !_theResult____h310630[52] &&
	      !_theResult____h310630[51] &&
	      !_theResult____h310630[50] &&
	      !_theResult____h310630[49] &&
	      !_theResult____h310630[48] &&
	      !_theResult____h310630[47] &&
	      !_theResult____h310630[46] &&
	      !_theResult____h310630[45] &&
	      !_theResult____h310630[44] &&
	      !_theResult____h310630[43] &&
	      !_theResult____h310630[42] &&
	      !_theResult____h310630[41] &&
	      !_theResult____h310630[40] &&
	      !_theResult____h310630[39] &&
	      !_theResult____h310630[38] &&
	      !_theResult____h310630[37] &&
	      !_theResult____h310630[36] &&
	      !_theResult____h310630[35] &&
	      !_theResult____h310630[34] &&
	      !_theResult____h310630[33] &&
	      !_theResult____h310630[32] &&
	      !_theResult____h310630[31] &&
	      !_theResult____h310630[30] &&
	      !_theResult____h310630[29] &&
	      !_theResult____h310630[28] &&
	      !_theResult____h310630[27] &&
	      !_theResult____h310630[26] &&
	      !_theResult____h310630[25] &&
	      !_theResult____h310630[24] &&
	      !_theResult____h310630[23] &&
	      !_theResult____h310630[22] &&
	      !_theResult____h310630[21] &&
	      !_theResult____h310630[20] &&
	      !_theResult____h310630[19] &&
	      !_theResult____h310630[18] &&
	      !_theResult____h310630[17] &&
	      !_theResult____h310630[16] &&
	      !_theResult____h310630[15] &&
	      !_theResult____h310630[14] &&
	      !_theResult____h310630[13] &&
	      !_theResult____h310630[12] &&
	      !_theResult____h310630[11] &&
	      !_theResult____h310630[10] &&
	      !_theResult____h310630[9] &&
	      !_theResult____h310630[8] &&
	      !_theResult____h310630[7] &&
	      !_theResult____h310630[6] &&
	      !_theResult____h310630[5] &&
	      !_theResult____h310630[4] &&
	      !_theResult____h310630[3] &&
	      !_theResult____h310630[2] &&
	      !_theResult____h310630[1] &&
	      !_theResult____h310630[0] ||
	      !_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d5300) ?
	       8'd0 :
	       _theResult___fst_exp__h318804 ;
  assign _theResult___fst_exp__h318813 =
	     (!_theResult____h310630[56] && _theResult____h310630[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h318810 ;
  assign _theResult___fst_exp__h319336 =
	     (_theResult___fst_exp__h318739 == 8'd255) ?
	       _theResult___fst_exp__h318739 :
	       _theResult___fst_exp__h319333 ;
  assign _theResult___fst_exp__h327386 =
	     8'd129 -
	     { 2'd0,
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d5529 } ;
  assign _theResult___fst_exp__h327392 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0 &&
	      NOT_coreFix_fpuMulDivExe_0_fpuExec_double_div__ETC___d5474 ||
	      !_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5531) ?
	       8'd0 :
	       _theResult___fst_exp__h327386 ;
  assign _theResult___fst_exp__h327395 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       _theResult___fst_exp__h327392 :
	       8'd129 ;
  assign _theResult___fst_exp__h327918 =
	     (_theResult___fst_exp__h327395 == 8'd255) ?
	       _theResult___fst_exp__h327395 :
	       _theResult___fst_exp__h327915 ;
  assign _theResult___fst_exp__h336505 =
	     _theResult____h328267[56] ?
	       8'd2 :
	       _theResult___fst_exp__h336579 ;
  assign _theResult___fst_exp__h336570 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d5849 } ;
  assign _theResult___fst_exp__h336576 =
	     (!_theResult____h328267[56] && !_theResult____h328267[55] &&
	      !_theResult____h328267[54] &&
	      !_theResult____h328267[53] &&
	      !_theResult____h328267[52] &&
	      !_theResult____h328267[51] &&
	      !_theResult____h328267[50] &&
	      !_theResult____h328267[49] &&
	      !_theResult____h328267[48] &&
	      !_theResult____h328267[47] &&
	      !_theResult____h328267[46] &&
	      !_theResult____h328267[45] &&
	      !_theResult____h328267[44] &&
	      !_theResult____h328267[43] &&
	      !_theResult____h328267[42] &&
	      !_theResult____h328267[41] &&
	      !_theResult____h328267[40] &&
	      !_theResult____h328267[39] &&
	      !_theResult____h328267[38] &&
	      !_theResult____h328267[37] &&
	      !_theResult____h328267[36] &&
	      !_theResult____h328267[35] &&
	      !_theResult____h328267[34] &&
	      !_theResult____h328267[33] &&
	      !_theResult____h328267[32] &&
	      !_theResult____h328267[31] &&
	      !_theResult____h328267[30] &&
	      !_theResult____h328267[29] &&
	      !_theResult____h328267[28] &&
	      !_theResult____h328267[27] &&
	      !_theResult____h328267[26] &&
	      !_theResult____h328267[25] &&
	      !_theResult____h328267[24] &&
	      !_theResult____h328267[23] &&
	      !_theResult____h328267[22] &&
	      !_theResult____h328267[21] &&
	      !_theResult____h328267[20] &&
	      !_theResult____h328267[19] &&
	      !_theResult____h328267[18] &&
	      !_theResult____h328267[17] &&
	      !_theResult____h328267[16] &&
	      !_theResult____h328267[15] &&
	      !_theResult____h328267[14] &&
	      !_theResult____h328267[13] &&
	      !_theResult____h328267[12] &&
	      !_theResult____h328267[11] &&
	      !_theResult____h328267[10] &&
	      !_theResult____h328267[9] &&
	      !_theResult____h328267[8] &&
	      !_theResult____h328267[7] &&
	      !_theResult____h328267[6] &&
	      !_theResult____h328267[5] &&
	      !_theResult____h328267[4] &&
	      !_theResult____h328267[3] &&
	      !_theResult____h328267[2] &&
	      !_theResult____h328267[1] &&
	      !_theResult____h328267[0] ||
	      !_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d5851) ?
	       8'd0 :
	       _theResult___fst_exp__h336570 ;
  assign _theResult___fst_exp__h336579 =
	     (!_theResult____h328267[56] && _theResult____h328267[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h336576 ;
  assign _theResult___fst_exp__h337102 =
	     (_theResult___fst_exp__h336505 == 8'd255) ?
	       _theResult___fst_exp__h336505 :
	       _theResult___fst_exp__h337099 ;
  assign _theResult___fst_exp__h345142 =
	     (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q65[7:0] ==
	      8'd0) ?
	       8'd1 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q65[7:0] ;
  assign _theResult___fst_exp__h345181 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q65[7:0] -
	     { 2'd0,
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d5529 } ;
  assign _theResult___fst_exp__h345187 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0 &&
	      NOT_coreFix_fpuMulDivExe_0_fpuExec_double_div__ETC___d5474 ||
	      !_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5924) ?
	       8'd0 :
	       _theResult___fst_exp__h345181 ;
  assign _theResult___fst_exp__h345190 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       _theResult___fst_exp__h345187 :
	       _theResult___fst_exp__h345142 ;
  assign _theResult___fst_exp__h345738 =
	     (_theResult___fst_exp__h345190 == 8'd255) ?
	       _theResult___fst_exp__h345190 :
	       _theResult___fst_exp__h345735 ;
  assign _theResult___fst_exp__h345747 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5063 ?
		  _theResult___snd_fst_exp__h327921 :
		  _theResult___fst_exp__h310612) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5603 ?
		  _theResult___snd_fst_exp__h345741 :
		  _theResult___fst_exp__h310612) ;
  assign _theResult___fst_exp__h345750 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
	      52'd0) ?
	       8'd0 :
	       _theResult___fst_exp__h345747 ;
  assign _theResult___fst_exp__h364434 =
	     _theResult____h356325[56] ?
	       8'd2 :
	       _theResult___fst_exp__h364508 ;
  assign _theResult___fst_exp__h364499 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d6690 } ;
  assign _theResult___fst_exp__h364505 =
	     (!_theResult____h356325[56] && !_theResult____h356325[55] &&
	      !_theResult____h356325[54] &&
	      !_theResult____h356325[53] &&
	      !_theResult____h356325[52] &&
	      !_theResult____h356325[51] &&
	      !_theResult____h356325[50] &&
	      !_theResult____h356325[49] &&
	      !_theResult____h356325[48] &&
	      !_theResult____h356325[47] &&
	      !_theResult____h356325[46] &&
	      !_theResult____h356325[45] &&
	      !_theResult____h356325[44] &&
	      !_theResult____h356325[43] &&
	      !_theResult____h356325[42] &&
	      !_theResult____h356325[41] &&
	      !_theResult____h356325[40] &&
	      !_theResult____h356325[39] &&
	      !_theResult____h356325[38] &&
	      !_theResult____h356325[37] &&
	      !_theResult____h356325[36] &&
	      !_theResult____h356325[35] &&
	      !_theResult____h356325[34] &&
	      !_theResult____h356325[33] &&
	      !_theResult____h356325[32] &&
	      !_theResult____h356325[31] &&
	      !_theResult____h356325[30] &&
	      !_theResult____h356325[29] &&
	      !_theResult____h356325[28] &&
	      !_theResult____h356325[27] &&
	      !_theResult____h356325[26] &&
	      !_theResult____h356325[25] &&
	      !_theResult____h356325[24] &&
	      !_theResult____h356325[23] &&
	      !_theResult____h356325[22] &&
	      !_theResult____h356325[21] &&
	      !_theResult____h356325[20] &&
	      !_theResult____h356325[19] &&
	      !_theResult____h356325[18] &&
	      !_theResult____h356325[17] &&
	      !_theResult____h356325[16] &&
	      !_theResult____h356325[15] &&
	      !_theResult____h356325[14] &&
	      !_theResult____h356325[13] &&
	      !_theResult____h356325[12] &&
	      !_theResult____h356325[11] &&
	      !_theResult____h356325[10] &&
	      !_theResult____h356325[9] &&
	      !_theResult____h356325[8] &&
	      !_theResult____h356325[7] &&
	      !_theResult____h356325[6] &&
	      !_theResult____h356325[5] &&
	      !_theResult____h356325[4] &&
	      !_theResult____h356325[3] &&
	      !_theResult____h356325[2] &&
	      !_theResult____h356325[1] &&
	      !_theResult____h356325[0] ||
	      !_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d6692) ?
	       8'd0 :
	       _theResult___fst_exp__h364499 ;
  assign _theResult___fst_exp__h364508 =
	     (!_theResult____h356325[56] && _theResult____h356325[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h364505 ;
  assign _theResult___fst_exp__h365031 =
	     (_theResult___fst_exp__h364434 == 8'd255) ?
	       _theResult___fst_exp__h364434 :
	       _theResult___fst_exp__h365028 ;
  assign _theResult___fst_exp__h373081 =
	     8'd129 -
	     { 2'd0,
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d6921 } ;
  assign _theResult___fst_exp__h373087 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0 &&
	      NOT_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt_ETC___d6866 ||
	      !_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6923) ?
	       8'd0 :
	       _theResult___fst_exp__h373081 ;
  assign _theResult___fst_exp__h373090 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       _theResult___fst_exp__h373087 :
	       8'd129 ;
  assign _theResult___fst_exp__h373613 =
	     (_theResult___fst_exp__h373090 == 8'd255) ?
	       _theResult___fst_exp__h373090 :
	       _theResult___fst_exp__h373610 ;
  assign _theResult___fst_exp__h382200 =
	     _theResult____h373962[56] ?
	       8'd2 :
	       _theResult___fst_exp__h382274 ;
  assign _theResult___fst_exp__h382265 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d7241 } ;
  assign _theResult___fst_exp__h382271 =
	     (!_theResult____h373962[56] && !_theResult____h373962[55] &&
	      !_theResult____h373962[54] &&
	      !_theResult____h373962[53] &&
	      !_theResult____h373962[52] &&
	      !_theResult____h373962[51] &&
	      !_theResult____h373962[50] &&
	      !_theResult____h373962[49] &&
	      !_theResult____h373962[48] &&
	      !_theResult____h373962[47] &&
	      !_theResult____h373962[46] &&
	      !_theResult____h373962[45] &&
	      !_theResult____h373962[44] &&
	      !_theResult____h373962[43] &&
	      !_theResult____h373962[42] &&
	      !_theResult____h373962[41] &&
	      !_theResult____h373962[40] &&
	      !_theResult____h373962[39] &&
	      !_theResult____h373962[38] &&
	      !_theResult____h373962[37] &&
	      !_theResult____h373962[36] &&
	      !_theResult____h373962[35] &&
	      !_theResult____h373962[34] &&
	      !_theResult____h373962[33] &&
	      !_theResult____h373962[32] &&
	      !_theResult____h373962[31] &&
	      !_theResult____h373962[30] &&
	      !_theResult____h373962[29] &&
	      !_theResult____h373962[28] &&
	      !_theResult____h373962[27] &&
	      !_theResult____h373962[26] &&
	      !_theResult____h373962[25] &&
	      !_theResult____h373962[24] &&
	      !_theResult____h373962[23] &&
	      !_theResult____h373962[22] &&
	      !_theResult____h373962[21] &&
	      !_theResult____h373962[20] &&
	      !_theResult____h373962[19] &&
	      !_theResult____h373962[18] &&
	      !_theResult____h373962[17] &&
	      !_theResult____h373962[16] &&
	      !_theResult____h373962[15] &&
	      !_theResult____h373962[14] &&
	      !_theResult____h373962[13] &&
	      !_theResult____h373962[12] &&
	      !_theResult____h373962[11] &&
	      !_theResult____h373962[10] &&
	      !_theResult____h373962[9] &&
	      !_theResult____h373962[8] &&
	      !_theResult____h373962[7] &&
	      !_theResult____h373962[6] &&
	      !_theResult____h373962[5] &&
	      !_theResult____h373962[4] &&
	      !_theResult____h373962[3] &&
	      !_theResult____h373962[2] &&
	      !_theResult____h373962[1] &&
	      !_theResult____h373962[0] ||
	      !_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d7243) ?
	       8'd0 :
	       _theResult___fst_exp__h382265 ;
  assign _theResult___fst_exp__h382274 =
	     (!_theResult____h373962[56] && _theResult____h373962[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h382271 ;
  assign _theResult___fst_exp__h382797 =
	     (_theResult___fst_exp__h382200 == 8'd255) ?
	       _theResult___fst_exp__h382200 :
	       _theResult___fst_exp__h382794 ;
  assign _theResult___fst_exp__h390837 =
	     (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q100[7:0] ==
	      8'd0) ?
	       8'd1 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q100[7:0] ;
  assign _theResult___fst_exp__h390876 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q100[7:0] -
	     { 2'd0,
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d6921 } ;
  assign _theResult___fst_exp__h390882 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0 &&
	      NOT_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt_ETC___d6866 ||
	      !_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d7316) ?
	       8'd0 :
	       _theResult___fst_exp__h390876 ;
  assign _theResult___fst_exp__h390885 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       _theResult___fst_exp__h390882 :
	       _theResult___fst_exp__h390837 ;
  assign _theResult___fst_exp__h391433 =
	     (_theResult___fst_exp__h390885 == 8'd255) ?
	       _theResult___fst_exp__h390885 :
	       _theResult___fst_exp__h391430 ;
  assign _theResult___fst_exp__h391442 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6455 ?
		  _theResult___snd_fst_exp__h373616 :
		  _theResult___fst_exp__h356307) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6995 ?
		  _theResult___snd_fst_exp__h391436 :
		  _theResult___fst_exp__h356307) ;
  assign _theResult___fst_exp__h391445 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
	      52'd0) ?
	       8'd0 :
	       _theResult___fst_exp__h391442 ;
  assign _theResult___fst_exp__h406038 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3) ?
	       11'd2047 :
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q7 ;
  assign _theResult___fst_exp__h421102 =
	     11'd897 -
	     { 5'd0,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8257 } ;
  assign _theResult___fst_exp__h421108 =
	     (f1_exp__h401723 == 8'd0 && !f1_sfd__h401724[22] &&
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d8230 ||
	      !_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d8259) ?
	       11'd0 :
	       _theResult___fst_exp__h421102 ;
  assign _theResult___fst_exp__h421111 =
	     (f1_exp__h401723 == 8'd0) ?
	       _theResult___fst_exp__h421108 :
	       11'd897 ;
  assign _theResult___fst_exp__h421866 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard13150_0b0_theResult___fst_exp21111_0_ETC__q136 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8693 ;
  assign _theResult___fst_exp__h421869 =
	     (_theResult___fst_exp__h421111 == 11'd2047) ?
	       _theResult___fst_exp__h421111 :
	       _theResult___fst_exp__h421866 ;
  assign _theResult___fst_exp__h430688 =
	     _theResult____h422452[56] ?
	       11'd2 :
	       _theResult___fst_exp__h430762 ;
  assign _theResult___fst_exp__h430753 =
	     11'd0 -
	     { 5'd0,
	       IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d8569 } ;
  assign _theResult___fst_exp__h430759 =
	     (!_theResult____h422452[56] && !_theResult____h422452[55] &&
	      !_theResult____h422452[54] &&
	      !_theResult____h422452[53] &&
	      !_theResult____h422452[52] &&
	      !_theResult____h422452[51] &&
	      !_theResult____h422452[50] &&
	      !_theResult____h422452[49] &&
	      !_theResult____h422452[48] &&
	      !_theResult____h422452[47] &&
	      !_theResult____h422452[46] &&
	      !_theResult____h422452[45] &&
	      !_theResult____h422452[44] &&
	      !_theResult____h422452[43] &&
	      !_theResult____h422452[42] &&
	      !_theResult____h422452[41] &&
	      !_theResult____h422452[40] &&
	      !_theResult____h422452[39] &&
	      !_theResult____h422452[38] &&
	      !_theResult____h422452[37] &&
	      !_theResult____h422452[36] &&
	      !_theResult____h422452[35] &&
	      !_theResult____h422452[34] &&
	      !_theResult____h422452[33] &&
	      !_theResult____h422452[32] &&
	      !_theResult____h422452[31] &&
	      !_theResult____h422452[30] &&
	      !_theResult____h422452[29] &&
	      !_theResult____h422452[28] &&
	      !_theResult____h422452[27] &&
	      !_theResult____h422452[26] &&
	      !_theResult____h422452[25] &&
	      !_theResult____h422452[24] &&
	      !_theResult____h422452[23] &&
	      !_theResult____h422452[22] &&
	      !_theResult____h422452[21] &&
	      !_theResult____h422452[20] &&
	      !_theResult____h422452[19] &&
	      !_theResult____h422452[18] &&
	      !_theResult____h422452[17] &&
	      !_theResult____h422452[16] &&
	      !_theResult____h422452[15] &&
	      !_theResult____h422452[14] &&
	      !_theResult____h422452[13] &&
	      !_theResult____h422452[12] &&
	      !_theResult____h422452[11] &&
	      !_theResult____h422452[10] &&
	      !_theResult____h422452[9] &&
	      !_theResult____h422452[8] &&
	      !_theResult____h422452[7] &&
	      !_theResult____h422452[6] &&
	      !_theResult____h422452[5] &&
	      !_theResult____h422452[4] &&
	      !_theResult____h422452[3] &&
	      !_theResult____h422452[2] &&
	      !_theResult____h422452[1] &&
	      !_theResult____h422452[0] ||
	      !_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d8571) ?
	       11'd0 :
	       _theResult___fst_exp__h430753 ;
  assign _theResult___fst_exp__h430762 =
	     (!_theResult____h422452[56] && _theResult____h422452[55]) ?
	       11'd1 :
	       _theResult___fst_exp__h430759 ;
  assign _theResult___fst_exp__h431517 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard22462_0b0_theResult___fst_exp30688_0_ETC__q204 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8736 ;
  assign _theResult___fst_exp__h431520 =
	     (_theResult___fst_exp__h430688 == 11'd2047) ?
	       _theResult___fst_exp__h430688 :
	       _theResult___fst_exp__h431517 ;
  assign _theResult___fst_exp__h439473 =
	     (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q129[10:0] ==
	      11'd0) ?
	       11'd1 :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q129[10:0] ;
  assign _theResult___fst_exp__h439512 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q129[10:0] -
	     { 5'd0,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8257 } ;
  assign _theResult___fst_exp__h439518 =
	     (f1_exp__h401723 == 8'd0 && !f1_sfd__h401724[22] &&
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d8230 ||
	      !_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d8621) ?
	       11'd0 :
	       _theResult___fst_exp__h439512 ;
  assign _theResult___fst_exp__h439521 =
	     (f1_exp__h401723 == 8'd0) ?
	       _theResult___fst_exp__h439518 :
	       _theResult___fst_exp__h439473 ;
  assign _theResult___fst_exp__h440301 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard31531_0b0_theResult___fst_exp39521_0_ETC__q206 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8767 ;
  assign _theResult___fst_exp__h440304 =
	     (_theResult___fst_exp__h439521 == 11'd2047) ?
	       _theResult___fst_exp__h439521 :
	       _theResult___fst_exp__h440301 ;
  assign _theResult___fst_exp__h440313 =
	     (f1_exp__h401723 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8184 ?
		  _theResult___snd_fst_exp__h421872 :
		  _theResult___fst_exp__h406038) :
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8321 ?
		  _theResult___snd_fst_exp__h440307 :
		  _theResult___fst_exp__h406038) ;
  assign _theResult___fst_exp__h440316 =
	     (f1_exp__h401723 == 8'd0 && f1_sfd__h401724 == 23'd0) ?
	       11'd0 :
	       _theResult___fst_exp__h440313 ;
  assign _theResult___fst_exp__h444891 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3) ?
	       11'd2047 :
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q9 ;
  assign _theResult___fst_exp__h459955 =
	     11'd897 -
	     { 5'd0,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9757 } ;
  assign _theResult___fst_exp__h459961 =
	     (f2_exp__h440717 == 8'd0 && !f2_sfd__h440718[22] &&
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d9730 ||
	      !_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9759) ?
	       11'd0 :
	       _theResult___fst_exp__h459955 ;
  assign _theResult___fst_exp__h459964 =
	     (f2_exp__h440717 == 8'd0) ?
	       _theResult___fst_exp__h459961 :
	       11'd897 ;
  assign _theResult___fst_exp__h460719 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard52003_0b0_theResult___fst_exp59964_0_ETC__q176 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10178 ;
  assign _theResult___fst_exp__h460722 =
	     (_theResult___fst_exp__h459964 == 11'd2047) ?
	       _theResult___fst_exp__h459964 :
	       _theResult___fst_exp__h460719 ;
  assign _theResult___fst_exp__h469541 =
	     _theResult____h461305[56] ?
	       11'd2 :
	       _theResult___fst_exp__h469615 ;
  assign _theResult___fst_exp__h469606 =
	     11'd0 -
	     { 5'd0,
	       IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d10054 } ;
  assign _theResult___fst_exp__h469612 =
	     (!_theResult____h461305[56] && !_theResult____h461305[55] &&
	      !_theResult____h461305[54] &&
	      !_theResult____h461305[53] &&
	      !_theResult____h461305[52] &&
	      !_theResult____h461305[51] &&
	      !_theResult____h461305[50] &&
	      !_theResult____h461305[49] &&
	      !_theResult____h461305[48] &&
	      !_theResult____h461305[47] &&
	      !_theResult____h461305[46] &&
	      !_theResult____h461305[45] &&
	      !_theResult____h461305[44] &&
	      !_theResult____h461305[43] &&
	      !_theResult____h461305[42] &&
	      !_theResult____h461305[41] &&
	      !_theResult____h461305[40] &&
	      !_theResult____h461305[39] &&
	      !_theResult____h461305[38] &&
	      !_theResult____h461305[37] &&
	      !_theResult____h461305[36] &&
	      !_theResult____h461305[35] &&
	      !_theResult____h461305[34] &&
	      !_theResult____h461305[33] &&
	      !_theResult____h461305[32] &&
	      !_theResult____h461305[31] &&
	      !_theResult____h461305[30] &&
	      !_theResult____h461305[29] &&
	      !_theResult____h461305[28] &&
	      !_theResult____h461305[27] &&
	      !_theResult____h461305[26] &&
	      !_theResult____h461305[25] &&
	      !_theResult____h461305[24] &&
	      !_theResult____h461305[23] &&
	      !_theResult____h461305[22] &&
	      !_theResult____h461305[21] &&
	      !_theResult____h461305[20] &&
	      !_theResult____h461305[19] &&
	      !_theResult____h461305[18] &&
	      !_theResult____h461305[17] &&
	      !_theResult____h461305[16] &&
	      !_theResult____h461305[15] &&
	      !_theResult____h461305[14] &&
	      !_theResult____h461305[13] &&
	      !_theResult____h461305[12] &&
	      !_theResult____h461305[11] &&
	      !_theResult____h461305[10] &&
	      !_theResult____h461305[9] &&
	      !_theResult____h461305[8] &&
	      !_theResult____h461305[7] &&
	      !_theResult____h461305[6] &&
	      !_theResult____h461305[5] &&
	      !_theResult____h461305[4] &&
	      !_theResult____h461305[3] &&
	      !_theResult____h461305[2] &&
	      !_theResult____h461305[1] &&
	      !_theResult____h461305[0] ||
	      !_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10056) ?
	       11'd0 :
	       _theResult___fst_exp__h469606 ;
  assign _theResult___fst_exp__h469615 =
	     (!_theResult____h461305[56] && _theResult____h461305[55]) ?
	       11'd1 :
	       _theResult___fst_exp__h469612 ;
  assign _theResult___fst_exp__h470370 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard61315_0b0_theResult___fst_exp69541_0_ETC__q178 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10216 ;
  assign _theResult___fst_exp__h470373 =
	     (_theResult___fst_exp__h469541 == 11'd2047) ?
	       _theResult___fst_exp__h469541 :
	       _theResult___fst_exp__h470370 ;
  assign _theResult___fst_exp__h478326 =
	     (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q169[10:0] ==
	      11'd0) ?
	       11'd1 :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q169[10:0] ;
  assign _theResult___fst_exp__h478365 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q169[10:0] -
	     { 5'd0,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9757 } ;
  assign _theResult___fst_exp__h478371 =
	     (f2_exp__h440717 == 8'd0 && !f2_sfd__h440718[22] &&
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d9730 ||
	      !_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10106) ?
	       11'd0 :
	       _theResult___fst_exp__h478365 ;
  assign _theResult___fst_exp__h478374 =
	     (f2_exp__h440717 == 8'd0) ?
	       _theResult___fst_exp__h478371 :
	       _theResult___fst_exp__h478326 ;
  assign _theResult___fst_exp__h479154 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard70384_0b0_theResult___fst_exp78374_0_ETC__q180 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10247 ;
  assign _theResult___fst_exp__h479157 =
	     (_theResult___fst_exp__h478374 == 11'd2047) ?
	       _theResult___fst_exp__h478374 :
	       _theResult___fst_exp__h479154 ;
  assign _theResult___fst_exp__h479166 =
	     (f2_exp__h440717 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9684 ?
		  _theResult___snd_fst_exp__h460725 :
		  _theResult___fst_exp__h444891) :
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9806 ?
		  _theResult___snd_fst_exp__h479160 :
		  _theResult___fst_exp__h444891) ;
  assign _theResult___fst_exp__h479169 =
	     (f2_exp__h440717 == 8'd0 && f2_sfd__h440718 == 23'd0) ?
	       11'd0 :
	       _theResult___fst_exp__h479166 ;
  assign _theResult___fst_exp__h484195 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3) ?
	       11'd2047 :
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q11 ;
  assign _theResult___fst_exp__h499259 =
	     11'd897 -
	     { 5'd0,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8987 } ;
  assign _theResult___fst_exp__h499265 =
	     (f3_exp__h480021 == 8'd0 && !f3_sfd__h480022[22] &&
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d8960 ||
	      !_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d8989) ?
	       11'd0 :
	       _theResult___fst_exp__h499259 ;
  assign _theResult___fst_exp__h499268 =
	     (f3_exp__h480021 == 8'd0) ?
	       _theResult___fst_exp__h499265 :
	       11'd897 ;
  assign _theResult___fst_exp__h500023 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard91307_0b0_theResult___fst_exp99268_0_ETC__q153 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9408 ;
  assign _theResult___fst_exp__h500026 =
	     (_theResult___fst_exp__h499268 == 11'd2047) ?
	       _theResult___fst_exp__h499268 :
	       _theResult___fst_exp__h500023 ;
  assign _theResult___fst_exp__h508845 =
	     _theResult____h500609[56] ?
	       11'd2 :
	       _theResult___fst_exp__h508919 ;
  assign _theResult___fst_exp__h508910 =
	     11'd0 -
	     { 5'd0,
	       IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d9284 } ;
  assign _theResult___fst_exp__h508916 =
	     (!_theResult____h500609[56] && !_theResult____h500609[55] &&
	      !_theResult____h500609[54] &&
	      !_theResult____h500609[53] &&
	      !_theResult____h500609[52] &&
	      !_theResult____h500609[51] &&
	      !_theResult____h500609[50] &&
	      !_theResult____h500609[49] &&
	      !_theResult____h500609[48] &&
	      !_theResult____h500609[47] &&
	      !_theResult____h500609[46] &&
	      !_theResult____h500609[45] &&
	      !_theResult____h500609[44] &&
	      !_theResult____h500609[43] &&
	      !_theResult____h500609[42] &&
	      !_theResult____h500609[41] &&
	      !_theResult____h500609[40] &&
	      !_theResult____h500609[39] &&
	      !_theResult____h500609[38] &&
	      !_theResult____h500609[37] &&
	      !_theResult____h500609[36] &&
	      !_theResult____h500609[35] &&
	      !_theResult____h500609[34] &&
	      !_theResult____h500609[33] &&
	      !_theResult____h500609[32] &&
	      !_theResult____h500609[31] &&
	      !_theResult____h500609[30] &&
	      !_theResult____h500609[29] &&
	      !_theResult____h500609[28] &&
	      !_theResult____h500609[27] &&
	      !_theResult____h500609[26] &&
	      !_theResult____h500609[25] &&
	      !_theResult____h500609[24] &&
	      !_theResult____h500609[23] &&
	      !_theResult____h500609[22] &&
	      !_theResult____h500609[21] &&
	      !_theResult____h500609[20] &&
	      !_theResult____h500609[19] &&
	      !_theResult____h500609[18] &&
	      !_theResult____h500609[17] &&
	      !_theResult____h500609[16] &&
	      !_theResult____h500609[15] &&
	      !_theResult____h500609[14] &&
	      !_theResult____h500609[13] &&
	      !_theResult____h500609[12] &&
	      !_theResult____h500609[11] &&
	      !_theResult____h500609[10] &&
	      !_theResult____h500609[9] &&
	      !_theResult____h500609[8] &&
	      !_theResult____h500609[7] &&
	      !_theResult____h500609[6] &&
	      !_theResult____h500609[5] &&
	      !_theResult____h500609[4] &&
	      !_theResult____h500609[3] &&
	      !_theResult____h500609[2] &&
	      !_theResult____h500609[1] &&
	      !_theResult____h500609[0] ||
	      !_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d9286) ?
	       11'd0 :
	       _theResult___fst_exp__h508910 ;
  assign _theResult___fst_exp__h508919 =
	     (!_theResult____h500609[56] && _theResult____h500609[55]) ?
	       11'd1 :
	       _theResult___fst_exp__h508916 ;
  assign _theResult___fst_exp__h509674 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard00619_0b0_theResult___fst_exp08845_0_ETC__q182 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9446 ;
  assign _theResult___fst_exp__h509677 =
	     (_theResult___fst_exp__h508845 == 11'd2047) ?
	       _theResult___fst_exp__h508845 :
	       _theResult___fst_exp__h509674 ;
  assign _theResult___fst_exp__h517630 =
	     (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q146[10:0] ==
	      11'd0) ?
	       11'd1 :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q146[10:0] ;
  assign _theResult___fst_exp__h517669 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q146[10:0] -
	     { 5'd0,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8987 } ;
  assign _theResult___fst_exp__h517675 =
	     (f3_exp__h480021 == 8'd0 && !f3_sfd__h480022[22] &&
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d8960 ||
	      !_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9336) ?
	       11'd0 :
	       _theResult___fst_exp__h517669 ;
  assign _theResult___fst_exp__h517678 =
	     (f3_exp__h480021 == 8'd0) ?
	       _theResult___fst_exp__h517675 :
	       _theResult___fst_exp__h517630 ;
  assign _theResult___fst_exp__h518458 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard09688_0b0_theResult___fst_exp17678_0_ETC__q184 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9477 ;
  assign _theResult___fst_exp__h518461 =
	     (_theResult___fst_exp__h517678 == 11'd2047) ?
	       _theResult___fst_exp__h517678 :
	       _theResult___fst_exp__h518458 ;
  assign _theResult___fst_exp__h518470 =
	     (f3_exp__h480021 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8914 ?
		  _theResult___snd_fst_exp__h500029 :
		  _theResult___fst_exp__h484195) :
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9036 ?
		  _theResult___snd_fst_exp__h518464 :
		  _theResult___fst_exp__h484195) ;
  assign _theResult___fst_exp__h518473 =
	     (f3_exp__h480021 == 8'd0 && f3_sfd__h480022 == 23'd0) ?
	       11'd0 :
	       _theResult___fst_exp__h518470 ;
  assign _theResult___fst_sfd__h273640 =
	     (_theResult___fst_exp__h273042 == 8'd255) ?
	       sfdin__h273036[56:34] :
	       _theResult___fst_sfd__h273637 ;
  assign _theResult___fst_sfd__h282222 =
	     (_theResult___fst_exp__h281698 == 8'd255) ?
	       _theResult___snd__h281649[56:34] :
	       _theResult___fst_sfd__h282219 ;
  assign _theResult___fst_sfd__h291406 =
	     (_theResult___fst_exp__h290808 == 8'd255) ?
	       sfdin__h290802[56:34] :
	       _theResult___fst_sfd__h291403 ;
  assign _theResult___fst_sfd__h300042 =
	     (_theResult___fst_exp__h299493 == 8'd255) ?
	       _theResult___snd__h299439[56:34] :
	       _theResult___fst_sfd__h300039 ;
  assign _theResult___fst_sfd__h300051 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d3671 ?
		  _theResult___snd_fst_sfd__h282225 :
		  _theResult___fst_sfd__h264914) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4211 ?
		  _theResult___snd_fst_sfd__h300045 :
		  _theResult___fst_sfd__h264914) ;
  assign _theResult___fst_sfd__h300057 =
	     ((coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	       11'd2047 ||
	       coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	       11'd0) &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
	      52'd0) ?
	       23'd0 :
	       _theResult___fst_sfd__h300051 ;
  assign _theResult___fst_sfd__h319337 =
	     (_theResult___fst_exp__h318739 == 8'd255) ?
	       sfdin__h318733[56:34] :
	       _theResult___fst_sfd__h319334 ;
  assign _theResult___fst_sfd__h327919 =
	     (_theResult___fst_exp__h327395 == 8'd255) ?
	       _theResult___snd__h327346[56:34] :
	       _theResult___fst_sfd__h327916 ;
  assign _theResult___fst_sfd__h337103 =
	     (_theResult___fst_exp__h336505 == 8'd255) ?
	       sfdin__h336499[56:34] :
	       _theResult___fst_sfd__h337100 ;
  assign _theResult___fst_sfd__h345739 =
	     (_theResult___fst_exp__h345190 == 8'd255) ?
	       _theResult___snd__h345136[56:34] :
	       _theResult___fst_sfd__h345736 ;
  assign _theResult___fst_sfd__h345748 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5063 ?
		  _theResult___snd_fst_sfd__h327922 :
		  _theResult___fst_sfd__h310613) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5603 ?
		  _theResult___snd_fst_sfd__h345742 :
		  _theResult___fst_sfd__h310613) ;
  assign _theResult___fst_sfd__h345754 =
	     ((coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	       11'd2047 ||
	       coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	       11'd0) &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
	      52'd0) ?
	       23'd0 :
	       _theResult___fst_sfd__h345748 ;
  assign _theResult___fst_sfd__h365032 =
	     (_theResult___fst_exp__h364434 == 8'd255) ?
	       sfdin__h364428[56:34] :
	       _theResult___fst_sfd__h365029 ;
  assign _theResult___fst_sfd__h373614 =
	     (_theResult___fst_exp__h373090 == 8'd255) ?
	       _theResult___snd__h373041[56:34] :
	       _theResult___fst_sfd__h373611 ;
  assign _theResult___fst_sfd__h382798 =
	     (_theResult___fst_exp__h382200 == 8'd255) ?
	       sfdin__h382194[56:34] :
	       _theResult___fst_sfd__h382795 ;
  assign _theResult___fst_sfd__h391434 =
	     (_theResult___fst_exp__h390885 == 8'd255) ?
	       _theResult___snd__h390831[56:34] :
	       _theResult___fst_sfd__h391431 ;
  assign _theResult___fst_sfd__h391443 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6455 ?
		  _theResult___snd_fst_sfd__h373617 :
		  _theResult___fst_sfd__h356308) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6995 ?
		  _theResult___snd_fst_sfd__h391437 :
		  _theResult___fst_sfd__h356308) ;
  assign _theResult___fst_sfd__h391449 =
	     ((coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	       11'd2047 ||
	       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	       11'd0) &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
	      52'd0) ?
	       23'd0 :
	       _theResult___fst_sfd__h391443 ;
  assign _theResult___fst_sfd__h406039 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3) ?
	       52'd0 :
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q8 ;
  assign _theResult___fst_sfd__h421867 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard13150_0b0_theResult___snd21062_BITS__ETC__q208 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8793 ;
  assign _theResult___fst_sfd__h421870 =
	     (_theResult___fst_exp__h421111 == 11'd2047) ?
	       _theResult___snd__h421062[56:5] :
	       _theResult___fst_sfd__h421867 ;
  assign _theResult___fst_sfd__h431518 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard22462_0b0_sfdin30682_BITS_56_TO_5_0b_ETC__q210 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8820 ;
  assign _theResult___fst_sfd__h431521 =
	     (_theResult___fst_exp__h430688 == 11'd2047) ?
	       sfdin__h430682[56:5] :
	       _theResult___fst_sfd__h431518 ;
  assign _theResult___fst_sfd__h440302 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard31531_0b0_theResult___snd39467_BITS__ETC__q212 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8839 ;
  assign _theResult___fst_sfd__h440305 =
	     (_theResult___fst_exp__h439521 == 11'd2047) ?
	       _theResult___snd__h439467[56:5] :
	       _theResult___fst_sfd__h440302 ;
  assign _theResult___fst_sfd__h440314 =
	     (f1_exp__h401723 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8184 ?
		  _theResult___snd_fst_sfd__h421873 :
		  _theResult___fst_sfd__h406039) :
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8321 ?
		  _theResult___snd_fst_sfd__h440308 :
		  _theResult___fst_sfd__h406039) ;
  assign _theResult___fst_sfd__h440320 =
	     ((f1_exp__h401723 == 8'd255 || f1_exp__h401723 == 8'd0) &&
	      f1_sfd__h401724 == 23'd0) ?
	       52'd0 :
	       _theResult___fst_sfd__h440314 ;
  assign _theResult___fst_sfd__h444892 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3) ?
	       52'd0 :
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q10 ;
  assign _theResult___fst_sfd__h460720 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard52003_0b0_theResult___snd59915_BITS__ETC__q198 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10273 ;
  assign _theResult___fst_sfd__h460723 =
	     (_theResult___fst_exp__h459964 == 11'd2047) ?
	       _theResult___snd__h459915[56:5] :
	       _theResult___fst_sfd__h460720 ;
  assign _theResult___fst_sfd__h470371 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard61315_0b0_sfdin69535_BITS_56_TO_5_0b_ETC__q202 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10299 ;
  assign _theResult___fst_sfd__h470374 =
	     (_theResult___fst_exp__h469541 == 11'd2047) ?
	       sfdin__h469535[56:5] :
	       _theResult___fst_sfd__h470371 ;
  assign _theResult___fst_sfd__h479155 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard70384_0b0_theResult___snd78320_BITS__ETC__q200 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10318 ;
  assign _theResult___fst_sfd__h479158 =
	     (_theResult___fst_exp__h478374 == 11'd2047) ?
	       _theResult___snd__h478320[56:5] :
	       _theResult___fst_sfd__h479155 ;
  assign _theResult___fst_sfd__h479167 =
	     (f2_exp__h440717 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9684 ?
		  _theResult___snd_fst_sfd__h460726 :
		  _theResult___fst_sfd__h444892) :
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9806 ?
		  _theResult___snd_fst_sfd__h479161 :
		  _theResult___fst_sfd__h444892) ;
  assign _theResult___fst_sfd__h479173 =
	     ((f2_exp__h440717 == 8'd255 || f2_exp__h440717 == 8'd0) &&
	      f2_sfd__h440718 == 23'd0) ?
	       52'd0 :
	       _theResult___fst_sfd__h479167 ;
  assign _theResult___fst_sfd__h484196 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3) ?
	       52'd0 :
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q12 ;
  assign _theResult___fst_sfd__h500024 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard91307_0b0_theResult___snd99219_BITS__ETC__q214 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9503 ;
  assign _theResult___fst_sfd__h500027 =
	     (_theResult___fst_exp__h499268 == 11'd2047) ?
	       _theResult___snd__h499219[56:5] :
	       _theResult___fst_sfd__h500024 ;
  assign _theResult___fst_sfd__h509675 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard00619_0b0_sfdin08839_BITS_56_TO_5_0b_ETC__q216 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9529 ;
  assign _theResult___fst_sfd__h509678 =
	     (_theResult___fst_exp__h508845 == 11'd2047) ?
	       sfdin__h508839[56:5] :
	       _theResult___fst_sfd__h509675 ;
  assign _theResult___fst_sfd__h518459 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard09688_0b0_theResult___snd17624_BITS__ETC__q218 :
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9548 ;
  assign _theResult___fst_sfd__h518462 =
	     (_theResult___fst_exp__h517678 == 11'd2047) ?
	       _theResult___snd__h517624[56:5] :
	       _theResult___fst_sfd__h518459 ;
  assign _theResult___fst_sfd__h518471 =
	     (f3_exp__h480021 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8914 ?
		  _theResult___snd_fst_sfd__h500030 :
		  _theResult___fst_sfd__h484196) :
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9036 ?
		  _theResult___snd_fst_sfd__h518465 :
		  _theResult___fst_sfd__h484196) ;
  assign _theResult___fst_sfd__h518477 =
	     ((f3_exp__h480021 == 8'd255 || f3_exp__h480021 == 8'd0) &&
	      f3_sfd__h480022 == 23'd0) ?
	       52'd0 :
	       _theResult___fst_sfd__h518471 ;
  assign _theResult___sfd__h273559 =
	     sfd__h273134[24] ?
	       ((_theResult___fst_exp__h273042 == 8'd254) ?
		  23'd0 :
		  sfd__h273134[23:1]) :
	       sfd__h273134[22:0] ;
  assign _theResult___sfd__h282141 =
	     sfd__h281716[24] ?
	       ((_theResult___fst_exp__h281698 == 8'd254) ?
		  23'd0 :
		  sfd__h281716[23:1]) :
	       sfd__h281716[22:0] ;
  assign _theResult___sfd__h291325 =
	     sfd__h290900[24] ?
	       ((_theResult___fst_exp__h290808 == 8'd254) ?
		  23'd0 :
		  sfd__h290900[23:1]) :
	       sfd__h290900[22:0] ;
  assign _theResult___sfd__h299961 =
	     sfd__h299512[24] ?
	       ((_theResult___fst_exp__h299493 == 8'd254) ?
		  23'd0 :
		  sfd__h299512[23:1]) :
	       sfd__h299512[22:0] ;
  assign _theResult___sfd__h300063 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd2047 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
	      52'd0) ?
	       _theResult___snd_fst_sfd__h257276 :
	       _theResult___fst_sfd__h300057 ;
  assign _theResult___sfd__h319256 =
	     sfd__h318831[24] ?
	       ((_theResult___fst_exp__h318739 == 8'd254) ?
		  23'd0 :
		  sfd__h318831[23:1]) :
	       sfd__h318831[22:0] ;
  assign _theResult___sfd__h327838 =
	     sfd__h327413[24] ?
	       ((_theResult___fst_exp__h327395 == 8'd254) ?
		  23'd0 :
		  sfd__h327413[23:1]) :
	       sfd__h327413[22:0] ;
  assign _theResult___sfd__h337022 =
	     sfd__h336597[24] ?
	       ((_theResult___fst_exp__h336505 == 8'd254) ?
		  23'd0 :
		  sfd__h336597[23:1]) :
	       sfd__h336597[22:0] ;
  assign _theResult___sfd__h345658 =
	     sfd__h345209[24] ?
	       ((_theResult___fst_exp__h345190 == 8'd254) ?
		  23'd0 :
		  sfd__h345209[23:1]) :
	       sfd__h345209[22:0] ;
  assign _theResult___sfd__h345760 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd2047 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
	      52'd0) ?
	       _theResult___snd_fst_sfd__h302978 :
	       _theResult___fst_sfd__h345754 ;
  assign _theResult___sfd__h364951 =
	     sfd__h364526[24] ?
	       ((_theResult___fst_exp__h364434 == 8'd254) ?
		  23'd0 :
		  sfd__h364526[23:1]) :
	       sfd__h364526[22:0] ;
  assign _theResult___sfd__h373533 =
	     sfd__h373108[24] ?
	       ((_theResult___fst_exp__h373090 == 8'd254) ?
		  23'd0 :
		  sfd__h373108[23:1]) :
	       sfd__h373108[22:0] ;
  assign _theResult___sfd__h382717 =
	     sfd__h382292[24] ?
	       ((_theResult___fst_exp__h382200 == 8'd254) ?
		  23'd0 :
		  sfd__h382292[23:1]) :
	       sfd__h382292[22:0] ;
  assign _theResult___sfd__h391353 =
	     sfd__h390904[24] ?
	       ((_theResult___fst_exp__h390885 == 8'd254) ?
		  23'd0 :
		  sfd__h390904[23:1]) :
	       sfd__h390904[22:0] ;
  assign _theResult___sfd__h391455 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd2047 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
	      52'd0) ?
	       _theResult___snd_fst_sfd__h348673 :
	       _theResult___fst_sfd__h391449 ;
  assign _theResult___sfd__h421767 =
	     sfd__h421129[53] ?
	       ((_theResult___fst_exp__h421111 == 11'd2046) ?
		  52'd0 :
		  sfd__h421129[52:1]) :
	       sfd__h421129[51:0] ;
  assign _theResult___sfd__h431418 =
	     sfd__h430780[53] ?
	       ((_theResult___fst_exp__h430688 == 11'd2046) ?
		  52'd0 :
		  sfd__h430780[52:1]) :
	       sfd__h430780[51:0] ;
  assign _theResult___sfd__h440202 =
	     sfd__h439540[53] ?
	       ((_theResult___fst_exp__h439521 == 11'd2046) ?
		  52'd0 :
		  sfd__h439540[52:1]) :
	       sfd__h439540[51:0] ;
  assign _theResult___sfd__h460620 =
	     sfd__h459982[53] ?
	       ((_theResult___fst_exp__h459964 == 11'd2046) ?
		  52'd0 :
		  sfd__h459982[52:1]) :
	       sfd__h459982[51:0] ;
  assign _theResult___sfd__h470271 =
	     sfd__h469633[53] ?
	       ((_theResult___fst_exp__h469541 == 11'd2046) ?
		  52'd0 :
		  sfd__h469633[52:1]) :
	       sfd__h469633[51:0] ;
  assign _theResult___sfd__h479055 =
	     sfd__h478393[53] ?
	       ((_theResult___fst_exp__h478374 == 11'd2046) ?
		  52'd0 :
		  sfd__h478393[52:1]) :
	       sfd__h478393[51:0] ;
  assign _theResult___sfd__h499924 =
	     sfd__h499286[53] ?
	       ((_theResult___fst_exp__h499268 == 11'd2046) ?
		  52'd0 :
		  sfd__h499286[52:1]) :
	       sfd__h499286[51:0] ;
  assign _theResult___sfd__h509575 =
	     sfd__h508937[53] ?
	       ((_theResult___fst_exp__h508845 == 11'd2046) ?
		  52'd0 :
		  sfd__h508937[52:1]) :
	       sfd__h508937[51:0] ;
  assign _theResult___sfd__h518359 =
	     sfd__h517697[53] ?
	       ((_theResult___fst_exp__h517678 == 11'd2046) ?
		  52'd0 :
		  sfd__h517697[52:1]) :
	       sfd__h517697[51:0] ;
  assign _theResult___snd__h273053 = { _theResult____h264931[55:0], 1'd0 } ;
  assign _theResult___snd__h273064 =
	     (!_theResult____h264931[56] && _theResult____h264931[55]) ?
	       _theResult___snd__h273066 :
	       _theResult___snd__h273076 ;
  assign _theResult___snd__h273066 = { _theResult____h264931[54:0], 2'd0 } ;
  assign _theResult___snd__h273076 =
	     (!_theResult____h264931[56] && !_theResult____h264931[55] &&
	      !_theResult____h264931[54] &&
	      !_theResult____h264931[53] &&
	      !_theResult____h264931[52] &&
	      !_theResult____h264931[51] &&
	      !_theResult____h264931[50] &&
	      !_theResult____h264931[49] &&
	      !_theResult____h264931[48] &&
	      !_theResult____h264931[47] &&
	      !_theResult____h264931[46] &&
	      !_theResult____h264931[45] &&
	      !_theResult____h264931[44] &&
	      !_theResult____h264931[43] &&
	      !_theResult____h264931[42] &&
	      !_theResult____h264931[41] &&
	      !_theResult____h264931[40] &&
	      !_theResult____h264931[39] &&
	      !_theResult____h264931[38] &&
	      !_theResult____h264931[37] &&
	      !_theResult____h264931[36] &&
	      !_theResult____h264931[35] &&
	      !_theResult____h264931[34] &&
	      !_theResult____h264931[33] &&
	      !_theResult____h264931[32] &&
	      !_theResult____h264931[31] &&
	      !_theResult____h264931[30] &&
	      !_theResult____h264931[29] &&
	      !_theResult____h264931[28] &&
	      !_theResult____h264931[27] &&
	      !_theResult____h264931[26] &&
	      !_theResult____h264931[25] &&
	      !_theResult____h264931[24] &&
	      !_theResult____h264931[23] &&
	      !_theResult____h264931[22] &&
	      !_theResult____h264931[21] &&
	      !_theResult____h264931[20] &&
	      !_theResult____h264931[19] &&
	      !_theResult____h264931[18] &&
	      !_theResult____h264931[17] &&
	      !_theResult____h264931[16] &&
	      !_theResult____h264931[15] &&
	      !_theResult____h264931[14] &&
	      !_theResult____h264931[13] &&
	      !_theResult____h264931[12] &&
	      !_theResult____h264931[11] &&
	      !_theResult____h264931[10] &&
	      !_theResult____h264931[9] &&
	      !_theResult____h264931[8] &&
	      !_theResult____h264931[7] &&
	      !_theResult____h264931[6] &&
	      !_theResult____h264931[5] &&
	      !_theResult____h264931[4] &&
	      !_theResult____h264931[3] &&
	      !_theResult____h264931[2] &&
	      !_theResult____h264931[1] &&
	      !_theResult____h264931[0]) ?
	       _theResult____h264931 :
	       _theResult___snd__h273082 ;
  assign _theResult___snd__h273082 =
	     { IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMu_ETC__q21[54:0],
	       2'd0 } ;
  assign _theResult___snd__h273105 =
	     _theResult____h264931 <<
	     IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d3906 ;
  assign _theResult___snd__h281649 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       _theResult___snd__h281658 :
	       _theResult___snd__h281651 ;
  assign _theResult___snd__h281651 =
	     { coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5],
	       5'd0 } ;
  assign _theResult___snd__h281658 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0 &&
	      NOT_coreFix_fpuMulDivExe_0_fpuExec_double_fma__ETC___d4082) ?
	       sfd__h257326 :
	       _theResult___snd__h281664 ;
  assign _theResult___snd__h281664 =
	     { IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q23[54:0],
	       2'd0 } ;
  assign _theResult___snd__h281687 =
	     sfd__h257326 <<
	     IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4137 ;
  assign _theResult___snd__h290819 = { _theResult____h282570[55:0], 1'd0 } ;
  assign _theResult___snd__h290830 =
	     (!_theResult____h282570[56] && _theResult____h282570[55]) ?
	       _theResult___snd__h290832 :
	       _theResult___snd__h290842 ;
  assign _theResult___snd__h290832 = { _theResult____h282570[54:0], 2'd0 } ;
  assign _theResult___snd__h290842 =
	     (!_theResult____h282570[56] && !_theResult____h282570[55] &&
	      !_theResult____h282570[54] &&
	      !_theResult____h282570[53] &&
	      !_theResult____h282570[52] &&
	      !_theResult____h282570[51] &&
	      !_theResult____h282570[50] &&
	      !_theResult____h282570[49] &&
	      !_theResult____h282570[48] &&
	      !_theResult____h282570[47] &&
	      !_theResult____h282570[46] &&
	      !_theResult____h282570[45] &&
	      !_theResult____h282570[44] &&
	      !_theResult____h282570[43] &&
	      !_theResult____h282570[42] &&
	      !_theResult____h282570[41] &&
	      !_theResult____h282570[40] &&
	      !_theResult____h282570[39] &&
	      !_theResult____h282570[38] &&
	      !_theResult____h282570[37] &&
	      !_theResult____h282570[36] &&
	      !_theResult____h282570[35] &&
	      !_theResult____h282570[34] &&
	      !_theResult____h282570[33] &&
	      !_theResult____h282570[32] &&
	      !_theResult____h282570[31] &&
	      !_theResult____h282570[30] &&
	      !_theResult____h282570[29] &&
	      !_theResult____h282570[28] &&
	      !_theResult____h282570[27] &&
	      !_theResult____h282570[26] &&
	      !_theResult____h282570[25] &&
	      !_theResult____h282570[24] &&
	      !_theResult____h282570[23] &&
	      !_theResult____h282570[22] &&
	      !_theResult____h282570[21] &&
	      !_theResult____h282570[20] &&
	      !_theResult____h282570[19] &&
	      !_theResult____h282570[18] &&
	      !_theResult____h282570[17] &&
	      !_theResult____h282570[16] &&
	      !_theResult____h282570[15] &&
	      !_theResult____h282570[14] &&
	      !_theResult____h282570[13] &&
	      !_theResult____h282570[12] &&
	      !_theResult____h282570[11] &&
	      !_theResult____h282570[10] &&
	      !_theResult____h282570[9] &&
	      !_theResult____h282570[8] &&
	      !_theResult____h282570[7] &&
	      !_theResult____h282570[6] &&
	      !_theResult____h282570[5] &&
	      !_theResult____h282570[4] &&
	      !_theResult____h282570[3] &&
	      !_theResult____h282570[2] &&
	      !_theResult____h282570[1] &&
	      !_theResult____h282570[0]) ?
	       _theResult____h282570 :
	       _theResult___snd__h290848 ;
  assign _theResult___snd__h290848 =
	     { IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuM_ETC__q31[54:0],
	       2'd0 } ;
  assign _theResult___snd__h290871 =
	     _theResult____h282570 <<
	     IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d4457 ;
  assign _theResult___snd__h299439 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       _theResult___snd__h299453 :
	       _theResult___snd__h281651 ;
  assign _theResult___snd__h299453 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0 &&
	      NOT_coreFix_fpuMulDivExe_0_fpuExec_double_fma__ETC___d4082) ?
	       sfd__h257326 :
	       _theResult___snd__h299459 ;
  assign _theResult___snd__h299459 =
	     { IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q36[54:0],
	       2'd0 } ;
  assign _theResult___snd__h299477 =
	     sfd__h257326 <<
	     (IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d4531[8] ?
		9'h0AA :
		IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d4531) ;
  assign _theResult___snd__h318750 = { _theResult____h310630[55:0], 1'd0 } ;
  assign _theResult___snd__h318761 =
	     (!_theResult____h310630[56] && _theResult____h310630[55]) ?
	       _theResult___snd__h318763 :
	       _theResult___snd__h318773 ;
  assign _theResult___snd__h318763 = { _theResult____h310630[54:0], 2'd0 } ;
  assign _theResult___snd__h318773 =
	     (!_theResult____h310630[56] && !_theResult____h310630[55] &&
	      !_theResult____h310630[54] &&
	      !_theResult____h310630[53] &&
	      !_theResult____h310630[52] &&
	      !_theResult____h310630[51] &&
	      !_theResult____h310630[50] &&
	      !_theResult____h310630[49] &&
	      !_theResult____h310630[48] &&
	      !_theResult____h310630[47] &&
	      !_theResult____h310630[46] &&
	      !_theResult____h310630[45] &&
	      !_theResult____h310630[44] &&
	      !_theResult____h310630[43] &&
	      !_theResult____h310630[42] &&
	      !_theResult____h310630[41] &&
	      !_theResult____h310630[40] &&
	      !_theResult____h310630[39] &&
	      !_theResult____h310630[38] &&
	      !_theResult____h310630[37] &&
	      !_theResult____h310630[36] &&
	      !_theResult____h310630[35] &&
	      !_theResult____h310630[34] &&
	      !_theResult____h310630[33] &&
	      !_theResult____h310630[32] &&
	      !_theResult____h310630[31] &&
	      !_theResult____h310630[30] &&
	      !_theResult____h310630[29] &&
	      !_theResult____h310630[28] &&
	      !_theResult____h310630[27] &&
	      !_theResult____h310630[26] &&
	      !_theResult____h310630[25] &&
	      !_theResult____h310630[24] &&
	      !_theResult____h310630[23] &&
	      !_theResult____h310630[22] &&
	      !_theResult____h310630[21] &&
	      !_theResult____h310630[20] &&
	      !_theResult____h310630[19] &&
	      !_theResult____h310630[18] &&
	      !_theResult____h310630[17] &&
	      !_theResult____h310630[16] &&
	      !_theResult____h310630[15] &&
	      !_theResult____h310630[14] &&
	      !_theResult____h310630[13] &&
	      !_theResult____h310630[12] &&
	      !_theResult____h310630[11] &&
	      !_theResult____h310630[10] &&
	      !_theResult____h310630[9] &&
	      !_theResult____h310630[8] &&
	      !_theResult____h310630[7] &&
	      !_theResult____h310630[6] &&
	      !_theResult____h310630[5] &&
	      !_theResult____h310630[4] &&
	      !_theResult____h310630[3] &&
	      !_theResult____h310630[2] &&
	      !_theResult____h310630[1] &&
	      !_theResult____h310630[0]) ?
	       _theResult____h310630 :
	       _theResult___snd__h318779 ;
  assign _theResult___snd__h318779 =
	     { IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMu_ETC__q56[54:0],
	       2'd0 } ;
  assign _theResult___snd__h318802 =
	     _theResult____h310630 <<
	     IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d5298 ;
  assign _theResult___snd__h327346 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       _theResult___snd__h327355 :
	       _theResult___snd__h327348 ;
  assign _theResult___snd__h327348 =
	     { coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5],
	       5'd0 } ;
  assign _theResult___snd__h327355 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0 &&
	      NOT_coreFix_fpuMulDivExe_0_fpuExec_double_div__ETC___d5474) ?
	       sfd__h303028 :
	       _theResult___snd__h327361 ;
  assign _theResult___snd__h327361 =
	     { IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q58[54:0],
	       2'd0 } ;
  assign _theResult___snd__h327384 =
	     sfd__h303028 <<
	     IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d5529 ;
  assign _theResult___snd__h336516 = { _theResult____h328267[55:0], 1'd0 } ;
  assign _theResult___snd__h336527 =
	     (!_theResult____h328267[56] && _theResult____h328267[55]) ?
	       _theResult___snd__h336529 :
	       _theResult___snd__h336539 ;
  assign _theResult___snd__h336529 = { _theResult____h328267[54:0], 2'd0 } ;
  assign _theResult___snd__h336539 =
	     (!_theResult____h328267[56] && !_theResult____h328267[55] &&
	      !_theResult____h328267[54] &&
	      !_theResult____h328267[53] &&
	      !_theResult____h328267[52] &&
	      !_theResult____h328267[51] &&
	      !_theResult____h328267[50] &&
	      !_theResult____h328267[49] &&
	      !_theResult____h328267[48] &&
	      !_theResult____h328267[47] &&
	      !_theResult____h328267[46] &&
	      !_theResult____h328267[45] &&
	      !_theResult____h328267[44] &&
	      !_theResult____h328267[43] &&
	      !_theResult____h328267[42] &&
	      !_theResult____h328267[41] &&
	      !_theResult____h328267[40] &&
	      !_theResult____h328267[39] &&
	      !_theResult____h328267[38] &&
	      !_theResult____h328267[37] &&
	      !_theResult____h328267[36] &&
	      !_theResult____h328267[35] &&
	      !_theResult____h328267[34] &&
	      !_theResult____h328267[33] &&
	      !_theResult____h328267[32] &&
	      !_theResult____h328267[31] &&
	      !_theResult____h328267[30] &&
	      !_theResult____h328267[29] &&
	      !_theResult____h328267[28] &&
	      !_theResult____h328267[27] &&
	      !_theResult____h328267[26] &&
	      !_theResult____h328267[25] &&
	      !_theResult____h328267[24] &&
	      !_theResult____h328267[23] &&
	      !_theResult____h328267[22] &&
	      !_theResult____h328267[21] &&
	      !_theResult____h328267[20] &&
	      !_theResult____h328267[19] &&
	      !_theResult____h328267[18] &&
	      !_theResult____h328267[17] &&
	      !_theResult____h328267[16] &&
	      !_theResult____h328267[15] &&
	      !_theResult____h328267[14] &&
	      !_theResult____h328267[13] &&
	      !_theResult____h328267[12] &&
	      !_theResult____h328267[11] &&
	      !_theResult____h328267[10] &&
	      !_theResult____h328267[9] &&
	      !_theResult____h328267[8] &&
	      !_theResult____h328267[7] &&
	      !_theResult____h328267[6] &&
	      !_theResult____h328267[5] &&
	      !_theResult____h328267[4] &&
	      !_theResult____h328267[3] &&
	      !_theResult____h328267[2] &&
	      !_theResult____h328267[1] &&
	      !_theResult____h328267[0]) ?
	       _theResult____h328267 :
	       _theResult___snd__h336545 ;
  assign _theResult___snd__h336545 =
	     { IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuM_ETC__q66[54:0],
	       2'd0 } ;
  assign _theResult___snd__h336568 =
	     _theResult____h328267 <<
	     IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d5849 ;
  assign _theResult___snd__h345136 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       _theResult___snd__h345150 :
	       _theResult___snd__h327348 ;
  assign _theResult___snd__h345150 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0 &&
	      NOT_coreFix_fpuMulDivExe_0_fpuExec_double_div__ETC___d5474) ?
	       sfd__h303028 :
	       _theResult___snd__h345156 ;
  assign _theResult___snd__h345156 =
	     { IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q71[54:0],
	       2'd0 } ;
  assign _theResult___snd__h345174 =
	     sfd__h303028 <<
	     (IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5923[8] ?
		9'h0AA :
		IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5923) ;
  assign _theResult___snd__h364445 = { _theResult____h356325[55:0], 1'd0 } ;
  assign _theResult___snd__h364456 =
	     (!_theResult____h356325[56] && _theResult____h356325[55]) ?
	       _theResult___snd__h364458 :
	       _theResult___snd__h364468 ;
  assign _theResult___snd__h364458 = { _theResult____h356325[54:0], 2'd0 } ;
  assign _theResult___snd__h364468 =
	     (!_theResult____h356325[56] && !_theResult____h356325[55] &&
	      !_theResult____h356325[54] &&
	      !_theResult____h356325[53] &&
	      !_theResult____h356325[52] &&
	      !_theResult____h356325[51] &&
	      !_theResult____h356325[50] &&
	      !_theResult____h356325[49] &&
	      !_theResult____h356325[48] &&
	      !_theResult____h356325[47] &&
	      !_theResult____h356325[46] &&
	      !_theResult____h356325[45] &&
	      !_theResult____h356325[44] &&
	      !_theResult____h356325[43] &&
	      !_theResult____h356325[42] &&
	      !_theResult____h356325[41] &&
	      !_theResult____h356325[40] &&
	      !_theResult____h356325[39] &&
	      !_theResult____h356325[38] &&
	      !_theResult____h356325[37] &&
	      !_theResult____h356325[36] &&
	      !_theResult____h356325[35] &&
	      !_theResult____h356325[34] &&
	      !_theResult____h356325[33] &&
	      !_theResult____h356325[32] &&
	      !_theResult____h356325[31] &&
	      !_theResult____h356325[30] &&
	      !_theResult____h356325[29] &&
	      !_theResult____h356325[28] &&
	      !_theResult____h356325[27] &&
	      !_theResult____h356325[26] &&
	      !_theResult____h356325[25] &&
	      !_theResult____h356325[24] &&
	      !_theResult____h356325[23] &&
	      !_theResult____h356325[22] &&
	      !_theResult____h356325[21] &&
	      !_theResult____h356325[20] &&
	      !_theResult____h356325[19] &&
	      !_theResult____h356325[18] &&
	      !_theResult____h356325[17] &&
	      !_theResult____h356325[16] &&
	      !_theResult____h356325[15] &&
	      !_theResult____h356325[14] &&
	      !_theResult____h356325[13] &&
	      !_theResult____h356325[12] &&
	      !_theResult____h356325[11] &&
	      !_theResult____h356325[10] &&
	      !_theResult____h356325[9] &&
	      !_theResult____h356325[8] &&
	      !_theResult____h356325[7] &&
	      !_theResult____h356325[6] &&
	      !_theResult____h356325[5] &&
	      !_theResult____h356325[4] &&
	      !_theResult____h356325[3] &&
	      !_theResult____h356325[2] &&
	      !_theResult____h356325[1] &&
	      !_theResult____h356325[0]) ?
	       _theResult____h356325 :
	       _theResult___snd__h364474 ;
  assign _theResult___snd__h364474 =
	     { IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMu_ETC__q91[54:0],
	       2'd0 } ;
  assign _theResult___snd__h364497 =
	     _theResult____h356325 <<
	     IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d6690 ;
  assign _theResult___snd__h373041 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       _theResult___snd__h373050 :
	       _theResult___snd__h373043 ;
  assign _theResult___snd__h373043 =
	     { coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5],
	       5'd0 } ;
  assign _theResult___snd__h373050 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0 &&
	      NOT_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt_ETC___d6866) ?
	       sfd__h348723 :
	       _theResult___snd__h373056 ;
  assign _theResult___snd__h373056 =
	     { IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q93[54:0],
	       2'd0 } ;
  assign _theResult___snd__h373079 =
	     sfd__h348723 <<
	     IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d6921 ;
  assign _theResult___snd__h382211 = { _theResult____h373962[55:0], 1'd0 } ;
  assign _theResult___snd__h382222 =
	     (!_theResult____h373962[56] && _theResult____h373962[55]) ?
	       _theResult___snd__h382224 :
	       _theResult___snd__h382234 ;
  assign _theResult___snd__h382224 = { _theResult____h373962[54:0], 2'd0 } ;
  assign _theResult___snd__h382234 =
	     (!_theResult____h373962[56] && !_theResult____h373962[55] &&
	      !_theResult____h373962[54] &&
	      !_theResult____h373962[53] &&
	      !_theResult____h373962[52] &&
	      !_theResult____h373962[51] &&
	      !_theResult____h373962[50] &&
	      !_theResult____h373962[49] &&
	      !_theResult____h373962[48] &&
	      !_theResult____h373962[47] &&
	      !_theResult____h373962[46] &&
	      !_theResult____h373962[45] &&
	      !_theResult____h373962[44] &&
	      !_theResult____h373962[43] &&
	      !_theResult____h373962[42] &&
	      !_theResult____h373962[41] &&
	      !_theResult____h373962[40] &&
	      !_theResult____h373962[39] &&
	      !_theResult____h373962[38] &&
	      !_theResult____h373962[37] &&
	      !_theResult____h373962[36] &&
	      !_theResult____h373962[35] &&
	      !_theResult____h373962[34] &&
	      !_theResult____h373962[33] &&
	      !_theResult____h373962[32] &&
	      !_theResult____h373962[31] &&
	      !_theResult____h373962[30] &&
	      !_theResult____h373962[29] &&
	      !_theResult____h373962[28] &&
	      !_theResult____h373962[27] &&
	      !_theResult____h373962[26] &&
	      !_theResult____h373962[25] &&
	      !_theResult____h373962[24] &&
	      !_theResult____h373962[23] &&
	      !_theResult____h373962[22] &&
	      !_theResult____h373962[21] &&
	      !_theResult____h373962[20] &&
	      !_theResult____h373962[19] &&
	      !_theResult____h373962[18] &&
	      !_theResult____h373962[17] &&
	      !_theResult____h373962[16] &&
	      !_theResult____h373962[15] &&
	      !_theResult____h373962[14] &&
	      !_theResult____h373962[13] &&
	      !_theResult____h373962[12] &&
	      !_theResult____h373962[11] &&
	      !_theResult____h373962[10] &&
	      !_theResult____h373962[9] &&
	      !_theResult____h373962[8] &&
	      !_theResult____h373962[7] &&
	      !_theResult____h373962[6] &&
	      !_theResult____h373962[5] &&
	      !_theResult____h373962[4] &&
	      !_theResult____h373962[3] &&
	      !_theResult____h373962[2] &&
	      !_theResult____h373962[1] &&
	      !_theResult____h373962[0]) ?
	       _theResult____h373962 :
	       _theResult___snd__h382240 ;
  assign _theResult___snd__h382240 =
	     { IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuM_ETC__q101[54:0],
	       2'd0 } ;
  assign _theResult___snd__h382263 =
	     _theResult____h373962 <<
	     IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d7241 ;
  assign _theResult___snd__h390831 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       _theResult___snd__h390845 :
	       _theResult___snd__h373043 ;
  assign _theResult___snd__h390845 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0 &&
	      NOT_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt_ETC___d6866) ?
	       sfd__h348723 :
	       _theResult___snd__h390851 ;
  assign _theResult___snd__h390851 =
	     { IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q106[54:0],
	       2'd0 } ;
  assign _theResult___snd__h390869 =
	     sfd__h348723 <<
	     (IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7315[8] ?
		9'h0AA :
		IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7315) ;
  assign _theResult___snd__h421062 =
	     (f1_exp__h401723 == 8'd0) ?
	       _theResult___snd__h421071 :
	       _theResult___snd__h421064 ;
  assign _theResult___snd__h421064 = { f1_sfd__h401724, 34'd0 } ;
  assign _theResult___snd__h421071 =
	     (f1_exp__h401723 == 8'd0 && !f1_sfd__h401724[22] &&
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d8230) ?
	       sfd__h402085 :
	       _theResult___snd__h421077 ;
  assign _theResult___snd__h421077 =
	     { IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q126[54:0],
	       2'd0 } ;
  assign _theResult___snd__h421100 =
	     sfd__h402085 <<
	     IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8257 ;
  assign _theResult___snd__h430699 = { _theResult____h422452[55:0], 1'd0 } ;
  assign _theResult___snd__h430710 =
	     (!_theResult____h422452[56] && _theResult____h422452[55]) ?
	       _theResult___snd__h430712 :
	       _theResult___snd__h430722 ;
  assign _theResult___snd__h430712 = { _theResult____h422452[54:0], 2'd0 } ;
  assign _theResult___snd__h430722 =
	     (!_theResult____h422452[56] && !_theResult____h422452[55] &&
	      !_theResult____h422452[54] &&
	      !_theResult____h422452[53] &&
	      !_theResult____h422452[52] &&
	      !_theResult____h422452[51] &&
	      !_theResult____h422452[50] &&
	      !_theResult____h422452[49] &&
	      !_theResult____h422452[48] &&
	      !_theResult____h422452[47] &&
	      !_theResult____h422452[46] &&
	      !_theResult____h422452[45] &&
	      !_theResult____h422452[44] &&
	      !_theResult____h422452[43] &&
	      !_theResult____h422452[42] &&
	      !_theResult____h422452[41] &&
	      !_theResult____h422452[40] &&
	      !_theResult____h422452[39] &&
	      !_theResult____h422452[38] &&
	      !_theResult____h422452[37] &&
	      !_theResult____h422452[36] &&
	      !_theResult____h422452[35] &&
	      !_theResult____h422452[34] &&
	      !_theResult____h422452[33] &&
	      !_theResult____h422452[32] &&
	      !_theResult____h422452[31] &&
	      !_theResult____h422452[30] &&
	      !_theResult____h422452[29] &&
	      !_theResult____h422452[28] &&
	      !_theResult____h422452[27] &&
	      !_theResult____h422452[26] &&
	      !_theResult____h422452[25] &&
	      !_theResult____h422452[24] &&
	      !_theResult____h422452[23] &&
	      !_theResult____h422452[22] &&
	      !_theResult____h422452[21] &&
	      !_theResult____h422452[20] &&
	      !_theResult____h422452[19] &&
	      !_theResult____h422452[18] &&
	      !_theResult____h422452[17] &&
	      !_theResult____h422452[16] &&
	      !_theResult____h422452[15] &&
	      !_theResult____h422452[14] &&
	      !_theResult____h422452[13] &&
	      !_theResult____h422452[12] &&
	      !_theResult____h422452[11] &&
	      !_theResult____h422452[10] &&
	      !_theResult____h422452[9] &&
	      !_theResult____h422452[8] &&
	      !_theResult____h422452[7] &&
	      !_theResult____h422452[6] &&
	      !_theResult____h422452[5] &&
	      !_theResult____h422452[4] &&
	      !_theResult____h422452[3] &&
	      !_theResult____h422452[2] &&
	      !_theResult____h422452[1] &&
	      !_theResult____h422452[0]) ?
	       _theResult____h422452 :
	       _theResult___snd__h430728 ;
  assign _theResult___snd__h430728 =
	     { IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_f_ETC__q130[54:0],
	       2'd0 } ;
  assign _theResult___snd__h430751 =
	     _theResult____h422452 <<
	     IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d8569 ;
  assign _theResult___snd__h439467 =
	     (f1_exp__h401723 == 8'd0) ?
	       _theResult___snd__h439481 :
	       _theResult___snd__h421064 ;
  assign _theResult___snd__h439481 =
	     (f1_exp__h401723 == 8'd0 && !f1_sfd__h401724[22] &&
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d8230) ?
	       sfd__h402085 :
	       _theResult___snd__h439487 ;
  assign _theResult___snd__h439487 =
	     { IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q133[54:0],
	       2'd0 } ;
  assign _theResult___snd__h439505 =
	     sfd__h402085 <<
	     IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d8620 ;
  assign _theResult___snd__h459915 =
	     (f2_exp__h440717 == 8'd0) ?
	       _theResult___snd__h459924 :
	       _theResult___snd__h459917 ;
  assign _theResult___snd__h459917 = { f2_sfd__h440718, 34'd0 } ;
  assign _theResult___snd__h459924 =
	     (f2_exp__h440717 == 8'd0 && !f2_sfd__h440718[22] &&
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d9730) ?
	       sfd__h441079 :
	       _theResult___snd__h459930 ;
  assign _theResult___snd__h459930 =
	     { IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q166[54:0],
	       2'd0 } ;
  assign _theResult___snd__h459953 =
	     sfd__h441079 <<
	     IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9757 ;
  assign _theResult___snd__h469552 = { _theResult____h461305[55:0], 1'd0 } ;
  assign _theResult___snd__h469563 =
	     (!_theResult____h461305[56] && _theResult____h461305[55]) ?
	       _theResult___snd__h469565 :
	       _theResult___snd__h469575 ;
  assign _theResult___snd__h469565 = { _theResult____h461305[54:0], 2'd0 } ;
  assign _theResult___snd__h469575 =
	     (!_theResult____h461305[56] && !_theResult____h461305[55] &&
	      !_theResult____h461305[54] &&
	      !_theResult____h461305[53] &&
	      !_theResult____h461305[52] &&
	      !_theResult____h461305[51] &&
	      !_theResult____h461305[50] &&
	      !_theResult____h461305[49] &&
	      !_theResult____h461305[48] &&
	      !_theResult____h461305[47] &&
	      !_theResult____h461305[46] &&
	      !_theResult____h461305[45] &&
	      !_theResult____h461305[44] &&
	      !_theResult____h461305[43] &&
	      !_theResult____h461305[42] &&
	      !_theResult____h461305[41] &&
	      !_theResult____h461305[40] &&
	      !_theResult____h461305[39] &&
	      !_theResult____h461305[38] &&
	      !_theResult____h461305[37] &&
	      !_theResult____h461305[36] &&
	      !_theResult____h461305[35] &&
	      !_theResult____h461305[34] &&
	      !_theResult____h461305[33] &&
	      !_theResult____h461305[32] &&
	      !_theResult____h461305[31] &&
	      !_theResult____h461305[30] &&
	      !_theResult____h461305[29] &&
	      !_theResult____h461305[28] &&
	      !_theResult____h461305[27] &&
	      !_theResult____h461305[26] &&
	      !_theResult____h461305[25] &&
	      !_theResult____h461305[24] &&
	      !_theResult____h461305[23] &&
	      !_theResult____h461305[22] &&
	      !_theResult____h461305[21] &&
	      !_theResult____h461305[20] &&
	      !_theResult____h461305[19] &&
	      !_theResult____h461305[18] &&
	      !_theResult____h461305[17] &&
	      !_theResult____h461305[16] &&
	      !_theResult____h461305[15] &&
	      !_theResult____h461305[14] &&
	      !_theResult____h461305[13] &&
	      !_theResult____h461305[12] &&
	      !_theResult____h461305[11] &&
	      !_theResult____h461305[10] &&
	      !_theResult____h461305[9] &&
	      !_theResult____h461305[8] &&
	      !_theResult____h461305[7] &&
	      !_theResult____h461305[6] &&
	      !_theResult____h461305[5] &&
	      !_theResult____h461305[4] &&
	      !_theResult____h461305[3] &&
	      !_theResult____h461305[2] &&
	      !_theResult____h461305[1] &&
	      !_theResult____h461305[0]) ?
	       _theResult____h461305 :
	       _theResult___snd__h469581 ;
  assign _theResult___snd__h469581 =
	     { IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_f_ETC__q170[54:0],
	       2'd0 } ;
  assign _theResult___snd__h469604 =
	     _theResult____h461305 <<
	     IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d10054 ;
  assign _theResult___snd__h478320 =
	     (f2_exp__h440717 == 8'd0) ?
	       _theResult___snd__h478334 :
	       _theResult___snd__h459917 ;
  assign _theResult___snd__h478334 =
	     (f2_exp__h440717 == 8'd0 && !f2_sfd__h440718[22] &&
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d9730) ?
	       sfd__h441079 :
	       _theResult___snd__h478340 ;
  assign _theResult___snd__h478340 =
	     { IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q173[54:0],
	       2'd0 } ;
  assign _theResult___snd__h478358 =
	     sfd__h441079 <<
	     IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10105 ;
  assign _theResult___snd__h499219 =
	     (f3_exp__h480021 == 8'd0) ?
	       _theResult___snd__h499228 :
	       _theResult___snd__h499221 ;
  assign _theResult___snd__h499221 = { f3_sfd__h480022, 34'd0 } ;
  assign _theResult___snd__h499228 =
	     (f3_exp__h480021 == 8'd0 && !f3_sfd__h480022[22] &&
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d8960) ?
	       sfd__h480383 :
	       _theResult___snd__h499234 ;
  assign _theResult___snd__h499234 =
	     { IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q143[54:0],
	       2'd0 } ;
  assign _theResult___snd__h499257 =
	     sfd__h480383 <<
	     IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8987 ;
  assign _theResult___snd__h508856 = { _theResult____h500609[55:0], 1'd0 } ;
  assign _theResult___snd__h508867 =
	     (!_theResult____h500609[56] && _theResult____h500609[55]) ?
	       _theResult___snd__h508869 :
	       _theResult___snd__h508879 ;
  assign _theResult___snd__h508869 = { _theResult____h500609[54:0], 2'd0 } ;
  assign _theResult___snd__h508879 =
	     (!_theResult____h500609[56] && !_theResult____h500609[55] &&
	      !_theResult____h500609[54] &&
	      !_theResult____h500609[53] &&
	      !_theResult____h500609[52] &&
	      !_theResult____h500609[51] &&
	      !_theResult____h500609[50] &&
	      !_theResult____h500609[49] &&
	      !_theResult____h500609[48] &&
	      !_theResult____h500609[47] &&
	      !_theResult____h500609[46] &&
	      !_theResult____h500609[45] &&
	      !_theResult____h500609[44] &&
	      !_theResult____h500609[43] &&
	      !_theResult____h500609[42] &&
	      !_theResult____h500609[41] &&
	      !_theResult____h500609[40] &&
	      !_theResult____h500609[39] &&
	      !_theResult____h500609[38] &&
	      !_theResult____h500609[37] &&
	      !_theResult____h500609[36] &&
	      !_theResult____h500609[35] &&
	      !_theResult____h500609[34] &&
	      !_theResult____h500609[33] &&
	      !_theResult____h500609[32] &&
	      !_theResult____h500609[31] &&
	      !_theResult____h500609[30] &&
	      !_theResult____h500609[29] &&
	      !_theResult____h500609[28] &&
	      !_theResult____h500609[27] &&
	      !_theResult____h500609[26] &&
	      !_theResult____h500609[25] &&
	      !_theResult____h500609[24] &&
	      !_theResult____h500609[23] &&
	      !_theResult____h500609[22] &&
	      !_theResult____h500609[21] &&
	      !_theResult____h500609[20] &&
	      !_theResult____h500609[19] &&
	      !_theResult____h500609[18] &&
	      !_theResult____h500609[17] &&
	      !_theResult____h500609[16] &&
	      !_theResult____h500609[15] &&
	      !_theResult____h500609[14] &&
	      !_theResult____h500609[13] &&
	      !_theResult____h500609[12] &&
	      !_theResult____h500609[11] &&
	      !_theResult____h500609[10] &&
	      !_theResult____h500609[9] &&
	      !_theResult____h500609[8] &&
	      !_theResult____h500609[7] &&
	      !_theResult____h500609[6] &&
	      !_theResult____h500609[5] &&
	      !_theResult____h500609[4] &&
	      !_theResult____h500609[3] &&
	      !_theResult____h500609[2] &&
	      !_theResult____h500609[1] &&
	      !_theResult____h500609[0]) ?
	       _theResult____h500609 :
	       _theResult___snd__h508885 ;
  assign _theResult___snd__h508885 =
	     { IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_f_ETC__q147[54:0],
	       2'd0 } ;
  assign _theResult___snd__h508908 =
	     _theResult____h500609 <<
	     IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d9284 ;
  assign _theResult___snd__h517624 =
	     (f3_exp__h480021 == 8'd0) ?
	       _theResult___snd__h517638 :
	       _theResult___snd__h499221 ;
  assign _theResult___snd__h517638 =
	     (f3_exp__h480021 == 8'd0 && !f3_sfd__h480022[22] &&
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d8960) ?
	       sfd__h480383 :
	       _theResult___snd__h517644 ;
  assign _theResult___snd__h517644 =
	     { IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q150[54:0],
	       2'd0 } ;
  assign _theResult___snd__h517662 =
	     sfd__h480383 <<
	     IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9335 ;
  assign _theResult___snd__h523118 =
	     b__h522570[63] ? b___1__h523183 : b__h522570 ;
  assign _theResult___snd_fst_exp__h282224 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d3672 ?
	       _theResult___fst_exp__h273639 :
	       _theResult___fst_exp__h282221 ;
  assign _theResult___snd_fst_exp__h300044 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4212 ?
	       _theResult___fst_exp__h291405 :
	       _theResult___fst_exp__h300041 ;
  assign _theResult___snd_fst_exp__h327921 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5064 ?
	       _theResult___fst_exp__h319336 :
	       _theResult___fst_exp__h327918 ;
  assign _theResult___snd_fst_exp__h345741 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5604 ?
	       _theResult___fst_exp__h337102 :
	       _theResult___fst_exp__h345738 ;
  assign _theResult___snd_fst_exp__h373616 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6456 ?
	       _theResult___fst_exp__h365031 :
	       _theResult___fst_exp__h373613 ;
  assign _theResult___snd_fst_exp__h391436 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6996 ?
	       _theResult___fst_exp__h382797 :
	       _theResult___fst_exp__h391433 ;
  assign _theResult___snd_fst_exp__h421872 =
	     _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8186 ?
	       11'd0 :
	       _theResult___fst_exp__h421869 ;
  assign _theResult___snd_fst_exp__h440307 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8322 ?
	       _theResult___fst_exp__h431520 :
	       _theResult___fst_exp__h440304 ;
  assign _theResult___snd_fst_exp__h460725 =
	     _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9686 ?
	       11'd0 :
	       _theResult___fst_exp__h460722 ;
  assign _theResult___snd_fst_exp__h479160 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9807 ?
	       _theResult___fst_exp__h470373 :
	       _theResult___fst_exp__h479157 ;
  assign _theResult___snd_fst_exp__h500029 =
	     _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8916 ?
	       11'd0 :
	       _theResult___fst_exp__h500026 ;
  assign _theResult___snd_fst_exp__h518464 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9037 ?
	       _theResult___fst_exp__h509677 :
	       _theResult___fst_exp__h518461 ;
  assign _theResult___snd_fst_sfd__h257276 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:34] ==
	      23'd0) ?
	       23'd2097152 :
	       coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:34] ;
  assign _theResult___snd_fst_sfd__h282225 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d3672 ?
	       _theResult___fst_sfd__h273640 :
	       _theResult___fst_sfd__h282222 ;
  assign _theResult___snd_fst_sfd__h300045 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4212 ?
	       _theResult___fst_sfd__h291406 :
	       _theResult___fst_sfd__h300042 ;
  assign _theResult___snd_fst_sfd__h302978 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:34] ==
	      23'd0) ?
	       23'd2097152 :
	       coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:34] ;
  assign _theResult___snd_fst_sfd__h327922 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5064 ?
	       _theResult___fst_sfd__h319337 :
	       _theResult___fst_sfd__h327919 ;
  assign _theResult___snd_fst_sfd__h345742 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d5604 ?
	       _theResult___fst_sfd__h337103 :
	       _theResult___fst_sfd__h345739 ;
  assign _theResult___snd_fst_sfd__h348673 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:34] ==
	      23'd0) ?
	       23'd2097152 :
	       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:34] ;
  assign _theResult___snd_fst_sfd__h373617 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6456 ?
	       _theResult___fst_sfd__h365032 :
	       _theResult___fst_sfd__h373614 ;
  assign _theResult___snd_fst_sfd__h391437 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d6996 ?
	       _theResult___fst_sfd__h382798 :
	       _theResult___fst_sfd__h391434 ;
  assign _theResult___snd_fst_sfd__h402039 =
	     (f1_sfd__h401724 == 23'd0) ?
	       52'h4000000000000 :
	       out___1_sfd__h401787 ;
  assign _theResult___snd_fst_sfd__h421873 =
	     _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8186 ?
	       52'd0 :
	       _theResult___fst_sfd__h421870 ;
  assign _theResult___snd_fst_sfd__h440308 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8322 ?
	       _theResult___fst_sfd__h431521 :
	       _theResult___fst_sfd__h440305 ;
  assign _theResult___snd_fst_sfd__h441033 =
	     (f2_sfd__h440718 == 23'd0) ?
	       52'h4000000000000 :
	       out___1_sfd__h440781 ;
  assign _theResult___snd_fst_sfd__h460726 =
	     _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9686 ?
	       52'd0 :
	       _theResult___fst_sfd__h460723 ;
  assign _theResult___snd_fst_sfd__h479161 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9807 ?
	       _theResult___fst_sfd__h470374 :
	       _theResult___fst_sfd__h479158 ;
  assign _theResult___snd_fst_sfd__h480337 =
	     (f3_sfd__h480022 == 23'd0) ?
	       52'h4000000000000 :
	       out___1_sfd__h480085 ;
  assign _theResult___snd_fst_sfd__h500030 =
	     _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8916 ?
	       52'd0 :
	       _theResult___fst_sfd__h500027 ;
  assign _theResult___snd_fst_sfd__h518465 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9037 ?
	       _theResult___fst_sfd__h509678 :
	       _theResult___fst_sfd__h518462 ;
  assign a___1__h522731 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[226:225] == 2'd1) ?
	       { 32'd0, coreFix_fpuMulDivExe_0_regToExeQ$first[171:140] } :
	       { {32{coreFix_fpuMulDivExe_0_regToExeQfirst_BITS_17_ETC__q3[31]}},
		 coreFix_fpuMulDivExe_0_regToExeQfirst_BITS_17_ETC__q3 } ;
  assign a___1__h523122 = 64'd0 - a__h522569 ;
  assign a__h522569 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[227] ?
	       a___1__h522731 :
	       coreFix_fpuMulDivExe_0_regToExeQ$first[203:140] ;
  assign addr__h621369 =
	     (!rob$deqPort_0_deq_data[265] &&
	      (rob$deqPort_0_deq_data[264:261] == 4'd1 ||
	       rob$deqPort_0_deq_data[264:261] == 4'd12)) ?
	       rob$deqPort_0_deq_data[260:197] :
	       rob$deqPort_0_deq_data[191:128] ;
  assign address__h576951 = { 2'd0, fetchStage$pipelines_0_first[387:324] } ;
  assign address__h617901 = { 2'd0, fetchStage$pipelines_1_first[387:324] } ;
  assign b___1__h522732 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[226:225] == 2'd0) ?
	       { {32{coreFix_fpuMulDivExe_0_regToExeQfirst_BITS_10_ETC__q4[31]}},
		 coreFix_fpuMulDivExe_0_regToExeQfirst_BITS_10_ETC__q4 } :
	       { 32'd0, coreFix_fpuMulDivExe_0_regToExeQ$first[107:76] } ;
  assign b___1__h523183 = 64'd0 - b__h522570 ;
  assign b__h522570 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[227] ?
	       b___1__h522732 :
	       coreFix_fpuMulDivExe_0_regToExeQ$first[139:76] ;
  assign b__h522717 = { {64{a__h522569[63]}}, a__h522569 } ;
  assign b__h522793 = { {64{b__h522570[63]}}, b__h522570 } ;
  assign b__h522894 = { 64'd0, a__h522569 } ;
  assign b__h522906 = { 64'd0, b__h522570 } ;
  assign base__h628306 = { csrf_stvec_base_hi_reg, 2'b0 } ;
  assign base__h628326 = { csrf_mtvec_base_hi_reg, 2'b0 } ;
  assign cause_code__h625329 =
	     commitStage_commitTrap[36] ? i__h625504 : i__h625344 ;
  assign coreFix_aluExe_0_bypassWire_0_wget__1930_BITS__ETC___d11932 =
	     coreFix_aluExe_0_bypassWire_0$wget[70:64] ==
	     coreFix_aluExe_0_dispToRegQ$first[84:78] ;
  assign coreFix_aluExe_0_bypassWire_0_wget__1930_BITS__ETC___d11973 =
	     coreFix_aluExe_0_bypassWire_0$wget[70:64] ==
	     coreFix_aluExe_0_dispToRegQ$first[76:70] ;
  assign coreFix_aluExe_0_bypassWire_1_wget__1943_BITS__ETC___d11945 =
	     coreFix_aluExe_0_bypassWire_1$wget[70:64] ==
	     coreFix_aluExe_0_dispToRegQ$first[84:78] ;
  assign coreFix_aluExe_0_bypassWire_1_wget__1943_BITS__ETC___d11979 =
	     coreFix_aluExe_0_bypassWire_1$wget[70:64] ==
	     coreFix_aluExe_0_dispToRegQ$first[76:70] ;
  assign coreFix_aluExe_0_bypassWire_2_wget__1951_BITS__ETC___d11953 =
	     coreFix_aluExe_0_bypassWire_2$wget[70:64] ==
	     coreFix_aluExe_0_dispToRegQ$first[84:78] ;
  assign coreFix_aluExe_0_bypassWire_2_wget__1951_BITS__ETC___d11983 =
	     coreFix_aluExe_0_bypassWire_2$wget[70:64] ==
	     coreFix_aluExe_0_dispToRegQ$first[76:70] ;
  assign coreFix_aluExe_0_bypassWire_3_wget__1958_BITS__ETC___d11960 =
	     coreFix_aluExe_0_bypassWire_3$wget[70:64] ==
	     coreFix_aluExe_0_dispToRegQ$first[84:78] ;
  assign coreFix_aluExe_0_bypassWire_3_wget__1958_BITS__ETC___d11987 =
	     coreFix_aluExe_0_bypassWire_3$wget[70:64] ==
	     coreFix_aluExe_0_dispToRegQ$first[76:70] ;
  assign coreFix_aluExe_0_dispToRegQ_RDY_first__1907_AN_ETC___d11998 =
	     coreFix_aluExe_0_dispToRegQ$RDY_first &&
	     (coreFix_aluExe_0_dispToRegQ$first[131] ||
	      !coreFix_aluExe_0_dispToRegQ$first[85] ||
	      sbCons$lazyLookup_0_get[3] ||
	      IF_coreFix_aluExe_0_dispToRegQ_RDY_first__1907_ETC___d11940 &&
	      IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d11966) &&
	     (!coreFix_aluExe_0_dispToRegQ$first[77] ||
	      sbCons$lazyLookup_0_get[2] ||
	      IF_coreFix_aluExe_0_dispToRegQ_RDY_first__1907_ETC___d11976 &&
	      IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d11993) ;
  assign coreFix_aluExe_0_exeToFinQ_RDY_first__2374_AND_ETC___d12414 =
	     coreFix_aluExe_0_exeToFinQ$RDY_first &&
	     rob$RDY_setExecuted_doFinishAlu_0_set &&
	     (coreFix_aluExe_0_exeToFinQ$first[326:322] != 5'd9 &&
	      coreFix_aluExe_0_exeToFinQ$first[326:322] != 5'd10 ||
	      coreFix_trainBPQ_0$FULL_N) ;
  assign coreFix_aluExe_0_rsAlu_approximateCount__3193__ETC___d13195 =
	     coreFix_aluExe_0_rsAlu$approximateCount <
	     coreFix_aluExe_1_rsAlu$approximateCount ;
  assign coreFix_aluExe_1_bypassWire_0_wget__1074_BITS__ETC___d11076 =
	     coreFix_aluExe_0_bypassWire_0$wget[70:64] ==
	     coreFix_aluExe_1_dispToRegQ$first[84:78] ;
  assign coreFix_aluExe_1_bypassWire_0_wget__1074_BITS__ETC___d11117 =
	     coreFix_aluExe_0_bypassWire_0$wget[70:64] ==
	     coreFix_aluExe_1_dispToRegQ$first[76:70] ;
  assign coreFix_aluExe_1_bypassWire_1_wget__1087_BITS__ETC___d11089 =
	     coreFix_aluExe_0_bypassWire_1$wget[70:64] ==
	     coreFix_aluExe_1_dispToRegQ$first[84:78] ;
  assign coreFix_aluExe_1_bypassWire_1_wget__1087_BITS__ETC___d11123 =
	     coreFix_aluExe_0_bypassWire_1$wget[70:64] ==
	     coreFix_aluExe_1_dispToRegQ$first[76:70] ;
  assign coreFix_aluExe_1_bypassWire_2_wget__1095_BITS__ETC___d11097 =
	     coreFix_aluExe_0_bypassWire_2$wget[70:64] ==
	     coreFix_aluExe_1_dispToRegQ$first[84:78] ;
  assign coreFix_aluExe_1_bypassWire_2_wget__1095_BITS__ETC___d11127 =
	     coreFix_aluExe_0_bypassWire_2$wget[70:64] ==
	     coreFix_aluExe_1_dispToRegQ$first[76:70] ;
  assign coreFix_aluExe_1_bypassWire_3_wget__1102_BITS__ETC___d11104 =
	     coreFix_aluExe_0_bypassWire_3$wget[70:64] ==
	     coreFix_aluExe_1_dispToRegQ$first[84:78] ;
  assign coreFix_aluExe_1_bypassWire_3_wget__1102_BITS__ETC___d11131 =
	     coreFix_aluExe_0_bypassWire_3$wget[70:64] ==
	     coreFix_aluExe_1_dispToRegQ$first[76:70] ;
  assign coreFix_aluExe_1_dispToRegQ_RDY_first__1051_AN_ETC___d11142 =
	     coreFix_aluExe_1_dispToRegQ$RDY_first &&
	     (coreFix_aluExe_1_dispToRegQ$first[131] ||
	      !coreFix_aluExe_1_dispToRegQ$first[85] ||
	      sbCons$lazyLookup_1_get[3] ||
	      IF_coreFix_aluExe_1_dispToRegQ_RDY_first__1051_ETC___d11084 &&
	      IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11110) &&
	     (!coreFix_aluExe_1_dispToRegQ$first[77] ||
	      sbCons$lazyLookup_1_get[2] ||
	      IF_coreFix_aluExe_1_dispToRegQ_RDY_first__1051_ETC___d11120 &&
	      IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11137) ;
  assign coreFix_aluExe_1_exeToFinQ_RDY_first__1700_AND_ETC___d11741 =
	     coreFix_aluExe_1_exeToFinQ$RDY_first &&
	     rob$RDY_setExecuted_doFinishAlu_1_set &&
	     (coreFix_aluExe_1_exeToFinQ$first[326:322] != 5'd9 &&
	      coreFix_aluExe_1_exeToFinQ$first[326:322] != 5'd10 ||
	      coreFix_trainBPQ_1$FULL_N) ;
  assign coreFix_fpuMulDivExe_0_bypassWire_0_wget__864__ETC___d7866 =
	     coreFix_aluExe_0_bypassWire_0$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[55:49] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_0_wget__864__ETC___d7906 =
	     coreFix_aluExe_0_bypassWire_0$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[47:41] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_0_wget__864__ETC___d7932 =
	     coreFix_aluExe_0_bypassWire_0$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[39:33] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_1_wget__877__ETC___d7879 =
	     coreFix_aluExe_0_bypassWire_1$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[55:49] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_1_wget__877__ETC___d7912 =
	     coreFix_aluExe_0_bypassWire_1$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[47:41] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_1_wget__877__ETC___d7938 =
	     coreFix_aluExe_0_bypassWire_1$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[39:33] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_2_wget__885__ETC___d7887 =
	     coreFix_aluExe_0_bypassWire_2$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[55:49] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_2_wget__885__ETC___d7916 =
	     coreFix_aluExe_0_bypassWire_2$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[47:41] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_2_wget__885__ETC___d7942 =
	     coreFix_aluExe_0_bypassWire_2$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[39:33] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_3_wget__892__ETC___d7894 =
	     coreFix_aluExe_0_bypassWire_3$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[55:49] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_3_wget__892__ETC___d7920 =
	     coreFix_aluExe_0_bypassWire_3$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[47:41] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_3_wget__892__ETC___d7946 =
	     coreFix_aluExe_0_bypassWire_3$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[39:33] ;
  assign coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first__8_ETC___d7958 =
	     coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first &&
	     (!coreFix_fpuMulDivExe_0_dispToRegQ$first[56] ||
	      sbCons$lazyLookup_2_get[3] ||
	      IF_coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first_ETC___d7874 &&
	      IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7900) &&
	     (!coreFix_fpuMulDivExe_0_dispToRegQ$first[48] ||
	      sbCons$lazyLookup_2_get[2] ||
	      IF_coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first_ETC___d7909 &&
	      IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7926) &&
	     (!coreFix_fpuMulDivExe_0_dispToRegQ$first[40] ||
	      sbCons$lazyLookup_2_get[1] ||
	      IF_coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first_ETC___d7935 &&
	      IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7952) ;
  assign coreFix_fpuMulDivExe_0_fpuExec_divQ_RDY_first__ETC___d4931 =
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_first_poisoned &&
	     !coreFix_fpuMulDivExe_0_fpuExec_divQ$first_poisoned &&
	     rob$RDY_setExecuted_doFinishFpuMulDiv_0_set &&
	     coreFix_fpuMulDivExe_0_fpuExec_double_div$RDY_response_get &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_first_data ;
  assign coreFix_fpuMulDivExe_0_fpuExec_double_divresp_ETC__q64 =
	     coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] -
	     11'd1023 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_double_fmaresp_ETC__q29 =
	     coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] -
	     11'd1023 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_double_sqrtres_ETC__q99 =
	     coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] -
	     11'd1023 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_fmaQ_RDY_first__ETC___d3539 =
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_first_poisoned &&
	     !coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_poisoned &&
	     rob$RDY_setExecuted_doFinishFpuMulDiv_0_set &&
	     coreFix_fpuMulDivExe_0_fpuExec_double_fma$RDY_response_get &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_first_data ;
  assign coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_RDY_first_ETC___d6323 =
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_first_poisoned &&
	     !coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_poisoned &&
	     rob$RDY_setExecuted_doFinishFpuMulDiv_0_set &&
	     coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$RDY_response_get &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_first_data ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divQ_RDY_enq_ETC___d8101 =
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_enq &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$FULL_N &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$FULL_N ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divI_ETC___d10819 =
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$D_OUT[139:76] /
	     IF_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_d_ETC___d10818 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divI_ETC___d10820 =
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$D_OUT[139:76] %
	     IF_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_d_ETC___d10818 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulQ_RDY_fir_ETC___d7715 =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_first_poisoned &&
	     !coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_poisoned &&
	     rob$RDY_setExecuted_doFinishFpuMulDiv_0_set &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_first_data &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$EMPTY_N ;
  assign coreFix_fpuMulDivExe_0_regToExeQ_first__045_BI_ETC___d10526 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd25 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd26 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd27 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd28) &&
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10481 |
	     ((f3_exp__h480021 != 8'd255 || f3_sfd__h480022 == 23'd0) &&
	      (f3_exp__h480021 != 8'd255 || f3_sfd__h480022 != 23'd0) &&
	      (f3_exp__h480021 != 8'd0 || f3_sfd__h480022 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10521) ;
  assign coreFix_fpuMulDivExe_0_regToExeQ_first__045_BI_ETC___d10562 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd25 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd26 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd27 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd28) &&
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10550 |
	     ((f3_exp__h480021 != 8'd255 || f3_sfd__h480022 == 23'd0) &&
	      (f3_exp__h480021 != 8'd255 || f3_sfd__h480022 != 23'd0) &&
	      (f3_exp__h480021 != 8'd0 || f3_sfd__h480022 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10557) ;
  assign coreFix_fpuMulDivExe_0_regToExeQ_first__045_BI_ETC___d10610 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd25 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd26 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd27 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd28) &&
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10594 |
	     ((f3_exp__h480021 != 8'd255 || f3_sfd__h480022 == 23'd0) &&
	      (f3_exp__h480021 != 8'd255 || f3_sfd__h480022 != 23'd0) &&
	      (f3_exp__h480021 != 8'd0 || f3_sfd__h480022 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10605) ;
  assign coreFix_fpuMulDivExe_0_regToExeQ_first__045_BI_ETC___d10652 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd25 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd26 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd27 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd28) &&
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10638 |
	     ((f3_exp__h480021 != 8'd255 || f3_sfd__h480022 == 23'd0) &&
	      (f3_exp__h480021 != 8'd255 || f3_sfd__h480022 != 23'd0) &&
	      (f3_exp__h480021 != 8'd0 || f3_sfd__h480022 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10647) ;
  assign coreFix_fpuMulDivExe_0_regToExeQ_first__045_BI_ETC___d10694 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd25 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd26 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd27 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd28) &&
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10680 |
	     ((f3_exp__h480021 != 8'd255 || f3_sfd__h480022 == 23'd0) &&
	      (f3_exp__h480021 != 8'd255 || f3_sfd__h480022 != 23'd0) &&
	      (f3_exp__h480021 != 8'd0 || f3_sfd__h480022 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10689) ;
  assign coreFix_fpuMulDivExe_0_regToExeQfirst_BITS_10_ETC__q4 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[107:76] ;
  assign coreFix_fpuMulDivExe_0_regToExeQfirst_BITS_17_ETC__q3 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[171:140] ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv_RDY_enq__36_ETC___d13747 =
	     coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_enq &&
	     regRenamingTable$RDY_rename_1_getRename &&
	     (!fetchStage$pipelines_0_canDeq ||
	      NOT_specTagManager_canClaim__3157_3242_OR_NOT__ETC___d13727) ;
  assign coreFix_memExe_bypassWire_0_wget__330_BITS_70__ETC___d1332 =
	     coreFix_aluExe_0_bypassWire_0$wget[70:64] ==
	     coreFix_memExe_dispToRegQ$first[61:55] ;
  assign coreFix_memExe_bypassWire_0_wget__330_BITS_70__ETC___d1372 =
	     coreFix_aluExe_0_bypassWire_0$wget[70:64] ==
	     coreFix_memExe_dispToRegQ$first[53:47] ;
  assign coreFix_memExe_bypassWire_1_wget__343_BITS_70__ETC___d1345 =
	     coreFix_aluExe_0_bypassWire_1$wget[70:64] ==
	     coreFix_memExe_dispToRegQ$first[61:55] ;
  assign coreFix_memExe_bypassWire_1_wget__343_BITS_70__ETC___d1378 =
	     coreFix_aluExe_0_bypassWire_1$wget[70:64] ==
	     coreFix_memExe_dispToRegQ$first[53:47] ;
  assign coreFix_memExe_bypassWire_2_wget__351_BITS_70__ETC___d1353 =
	     coreFix_aluExe_0_bypassWire_2$wget[70:64] ==
	     coreFix_memExe_dispToRegQ$first[61:55] ;
  assign coreFix_memExe_bypassWire_2_wget__351_BITS_70__ETC___d1382 =
	     coreFix_aluExe_0_bypassWire_2$wget[70:64] ==
	     coreFix_memExe_dispToRegQ$first[53:47] ;
  assign coreFix_memExe_bypassWire_3_wget__358_BITS_70__ETC___d1360 =
	     coreFix_aluExe_0_bypassWire_3$wget[70:64] ==
	     coreFix_memExe_dispToRegQ$first[61:55] ;
  assign coreFix_memExe_bypassWire_3_wget__358_BITS_70__ETC___d1386 =
	     coreFix_aluExe_0_bypassWire_3$wget[70:64] ==
	     coreFix_memExe_dispToRegQ$first[53:47] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_pi_ETC___d2330 =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd3 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58] ||
	      !coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1825) ||
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] !=
	     2'd0 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851 &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58] &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[57:0] ==
	     y__h184788 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_pi_ETC___d2395 =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd3 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58] ||
	      !coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1825) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc[3] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1825 =
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[57:0] ==
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:90] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d2547 =
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58] &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[57:0] ==
	     coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq[65:8] &&
	     coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq[1:0] ==
	     2'd0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512] ==
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[577:575] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] <
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[83:82] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] <
	     2'd2 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[570:518] ==
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:95] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2283 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788 &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	      3'd3 ||
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58] &&
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1825) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2289 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2283 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778) ||
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2288 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2309 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd3 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58] ||
	      !coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1825) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2313 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd2 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2318 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2310 ||
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2317 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2335 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2310 ||
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2334 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2352 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2345 ||
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2351 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2372 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 &&
	     coreFix_memExe_lsq$getHit[8] &&
	     !coreFix_memExe_lsq$getHit[9] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2375 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 &&
	     coreFix_memExe_lsq$getHit[8] &&
	     !coreFix_memExe_lsq$getHit[9] ||
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2372 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2411 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2283 ||
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2408 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2426 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2440 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2438 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2451 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd0 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd2 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd4 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd3 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2462 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] ==
	      2'd0 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSlot[0] ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2482 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1788) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2496 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] <=
	     coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq[1:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2499 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[570:518] ==
	     coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq[65:13] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2522 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2496 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2499) &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[571] &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] !=
	      2'd1 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq[1:0] !=
	      2'd1 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2499) ;
  assign coreFix_memExe_dTlb_procResp__485_BITS_105_TO__ETC___d1639 =
	     coreFix_memExe_dTlb$procResp[105:103] == 3'd0 &&
	     NOT_coreFix_memExe_dTlb_procResp__485_BITS_174_ETC___d1524 &&
	     IF_coreFix_memExe_dTlb_procResp__485_BIT_110_4_ETC___d1513 &&
	     !coreFix_memExe_lsq$updateAddr ;
  assign coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1495 =
	     coreFix_memExe_dTlb$procResp[174:114] < 61'd268435456 ;
  assign coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1496 =
	     coreFix_memExe_dTlb$procResp[174:114] < 61'd301989888 ;
  assign coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1500 =
	     coreFix_memExe_dTlb$procResp[174:114] == mmio_toHostAddr ;
  assign coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1503 =
	     coreFix_memExe_dTlb$procResp[174:114] == mmio_fromHostAddr ;
  assign coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1504 =
	     coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1495 ||
	     !coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1496 ||
	     coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1500 ||
	     coreFix_memExe_dTlb_procResp__485_BITS_174_TO__ETC___d1503 ;
  assign coreFix_memExe_regToExeQ_RDY_enq__308_AND_core_ETC___d1398 =
	     coreFix_memExe_regToExeQ$RDY_enq &&
	     coreFix_memExe_dispToRegQ$RDY_first &&
	     (!coreFix_memExe_dispToRegQ$first[62] ||
	      sbCons$lazyLookup_3_get[3] ||
	      IF_coreFix_memExe_dispToRegQ_RDY_first__309_AN_ETC___d1340 &&
	      IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1366) &&
	     (!coreFix_memExe_dispToRegQ$first[54] ||
	      sbCons$lazyLookup_3_get[2] ||
	      IF_coreFix_memExe_dispToRegQ_RDY_first__309_AN_ETC___d1375 &&
	      IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1392) ;
  assign coreFix_memExe_regToExeQfirst_BITS_189_TO_158__q5 =
	     coreFix_memExe_regToExeQ$first[189:158] ;
  assign coreFix_memExe_stb_isEmpty__86_AND_coreFix_mem_ETC___d14469 =
	     coreFix_memExe_stb$isEmpty && coreFix_memExe_lsq$stqEmpty &&
	     rob$RDY_deqPort_0_deq &&
	     rob$RDY_deqPort_0_deq_data &&
	     regRenamingTable$RDY_commit_0_commit &&
	     fetchStage$iTlbIfc_noPendingReq &&
	     coreFix_memExe_dTlb$noPendingReq &&
	     NOT_rob_deqPort_0_deq_data__4141_BITS_356_TO_3_ETC___d14464 ;
  assign csr_addr__h576039 =
	     fetchStage$pipelines_0_first[173] ?
	       IF_fetchStage_pipelines_0_first__2491_BITS_172_ETC___d12688 :
	       12'hCFF ;
  assign csrf_external_int_en_vec_3_read__1407_AND_csrf_ETC___d12530 =
	     { csrf_external_int_en_vec_3 & csrf_external_int_pend_vec_3,
	       1'd0,
	       csrf_external_int_en_vec_1 & csrf_external_int_pend_vec_1,
	       1'd0,
	       csrf_timer_int_en_vec_3 & csrf_timer_int_pend_vec_3,
	       1'd0,
	       csrf_timer_int_en_vec_1 & csrf_timer_int_pend_vec_1,
	       1'd0 } ;
  assign csrf_fs_reg_read__1289_EQ_0_2712_AND_fetchStag_ETC___d12760 =
	     csrf_fs_reg == 2'd0 &&
	     (fetchStage$pipelines_0_first[95] &&
	      fetchStage$pipelines_0_first[94] ||
	      fetchStage$pipelines_0_first[88] &&
	      fetchStage$pipelines_0_first[87] ||
	      fetchStage$pipelines_0_first[81] ||
	      fetchStage$pipelines_0_first[75] &&
	      fetchStage$pipelines_0_first[74]) ||
	     fetchStage$pipelines_0_first[199:195] == 5'd13 &&
	     (fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d12753 ||
	      csrf_prv_reg_read__2519_ULT_IF_fetchStage_pipe_ETC___d12755 ||
	      csr_addr__h576039 == 12'h8FF) ;
  assign csrf_fs_reg_read__1289_EQ_0_2712_AND_fetchStag_ETC___d13251 =
	     csrf_fs_reg == 2'd0 &&
	     (fetchStage$pipelines_0_first[95] &&
	      fetchStage$pipelines_0_first[94] ||
	      fetchStage$pipelines_0_first[88] &&
	      fetchStage$pipelines_0_first[87] ||
	      fetchStage$pipelines_0_first[81] ||
	      fetchStage$pipelines_0_first[75] &&
	      fetchStage$pipelines_0_first[74]) ||
	     fetchStage$pipelines_0_first[231:200] == 32'h10500073 &&
	     csrf_tw_reg &&
	     csrf_prv_reg != 2'd3 ;
  assign csrf_fs_reg_read__1289_EQ_0_2712_AND_fetchStag_ETC___d13527 =
	     csrf_fs_reg == 2'd0 &&
	     (fetchStage$pipelines_1_first[95] &&
	      fetchStage$pipelines_1_first[94] ||
	      fetchStage$pipelines_1_first[88] &&
	      fetchStage$pipelines_1_first[87] ||
	      fetchStage$pipelines_1_first[81] ||
	      fetchStage$pipelines_1_first[75] &&
	      fetchStage$pipelines_1_first[74]) ||
	     fetchStage$pipelines_1_first[231:200] == 32'h10500073 &&
	     csrf_tw_reg &&
	     csrf_prv_reg != 2'd3 ;
  assign csrf_prv_reg_read__2519_ULE_1_4282_AND_IF_comm_ETC___d14321 =
	     csrf_prv_reg_read__2519_ULE_1___d14282 &&
	     (commitStage_commitTrap[36] ?
		_0b0_CONCAT_csrf_mideleg_11_reg_read__1396_1397_ETC___d14300 :
		_0b0_CONCAT_csrf_medeleg_15_reg_read__1388_1389_ETC___d14319) ;
  assign csrf_prv_reg_read__2519_ULE_1___d14282 = csrf_prv_reg <= 2'd1 ;
  assign csrf_prv_reg_read__2519_ULT_IF_fetchStage_pipe_ETC___d12755 =
	     csrf_prv_reg < csr_addr__h576039[9:8] ;
  assign data93457_BITS_31_TO_0__q2 = data__h393457[31:0] ;
  assign data94389_BITS_31_TO_0__q6 = data__h394389[31:0] ;
  assign data___1__h393969 =
	     { {32{data93457_BITS_31_TO_0__q2[31]}},
	       data93457_BITS_31_TO_0__q2 } ;
  assign data___1__h394901 =
	     { {32{data94389_BITS_31_TO_0__q6[31]}},
	       data94389_BITS_31_TO_0__q6 } ;
  assign data__h393457 =
	     (coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[35:34] ==
	      2'd0) ?
	       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$D_OUT[63:0] :
	       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$D_OUT[127:64] ;
  assign data__h394389 =
	     (coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[35:34] ==
	      2'd2) ?
	       x_quotient__h394153 :
	       x_remainder__h394154 ;
  assign din_inc___2_exp__h300075 = _theResult___fst_exp__h273042 + 8'd1 ;
  assign din_inc___2_exp__h300099 = _theResult___fst_exp__h281698 + 8'd1 ;
  assign din_inc___2_exp__h300129 = _theResult___fst_exp__h290808 + 8'd1 ;
  assign din_inc___2_exp__h300153 = _theResult___fst_exp__h299493 + 8'd1 ;
  assign din_inc___2_exp__h345772 = _theResult___fst_exp__h318739 + 8'd1 ;
  assign din_inc___2_exp__h345796 = _theResult___fst_exp__h327395 + 8'd1 ;
  assign din_inc___2_exp__h345826 = _theResult___fst_exp__h336505 + 8'd1 ;
  assign din_inc___2_exp__h345850 = _theResult___fst_exp__h345190 + 8'd1 ;
  assign din_inc___2_exp__h391467 = _theResult___fst_exp__h364434 + 8'd1 ;
  assign din_inc___2_exp__h391491 = _theResult___fst_exp__h373090 + 8'd1 ;
  assign din_inc___2_exp__h391521 = _theResult___fst_exp__h382200 + 8'd1 ;
  assign din_inc___2_exp__h391545 = _theResult___fst_exp__h390885 + 8'd1 ;
  assign din_inc___2_exp__h440361 = _theResult___fst_exp__h421111 + 11'd1 ;
  assign din_inc___2_exp__h440396 = _theResult___fst_exp__h430688 + 11'd1 ;
  assign din_inc___2_exp__h440422 = _theResult___fst_exp__h439521 + 11'd1 ;
  assign din_inc___2_exp__h479214 = _theResult___fst_exp__h459964 + 11'd1 ;
  assign din_inc___2_exp__h479249 = _theResult___fst_exp__h469541 + 11'd1 ;
  assign din_inc___2_exp__h479275 = _theResult___fst_exp__h478374 + 11'd1 ;
  assign din_inc___2_exp__h518518 = _theResult___fst_exp__h499268 + 11'd1 ;
  assign din_inc___2_exp__h518553 = _theResult___fst_exp__h508845 + 11'd1 ;
  assign din_inc___2_exp__h518579 = _theResult___fst_exp__h517678 + 11'd1 ;
  assign enabled_ints___1__h572643 = pend_ints__h572228 & y__h572655 ;
  assign enabled_ints__h572689 =
	     pend_ints__h572228 &
	     { r1__read_BITS_9_TO_0___h572665, csrf_mideleg_1_0_reg } ;
  assign f1_exp01723_MINUS_127__q128 = f1_exp__h401723 - 8'd127 ;
  assign f1_exp__h401723 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[170:163] :
	       8'd255 ;
  assign f1_sfd__h401724 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[162:140] :
	       23'd4194304 ;
  assign f2_exp40717_MINUS_127__q168 = f2_exp__h440717 - 8'd127 ;
  assign f2_exp__h440717 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[106:99] :
	       8'd255 ;
  assign f2_sfd__h440718 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[98:76] :
	       23'd4194304 ;
  assign f3_exp80021_MINUS_127__q145 = f3_exp__h480021 - 8'd127 ;
  assign f3_exp__h480021 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[42:35] :
	       8'd255 ;
  assign f3_sfd__h480022 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[34:12] :
	       23'd4194304 ;
  assign fallthrough_pc__h586537 =
	     (fetchStage$pipelines_0_first[97:96] == 2'b11) ?
	       fetchStage$pipelines_0_first[387:324] + 64'd4 :
	       fetchStage$pipelines_0_first[387:324] + 64'd2 ;
  assign fallthrough_pc__h602840 =
	     (fetchStage$pipelines_1_first[97:96] == 2'b11) ?
	       fetchStage$pipelines_1_first[387:324] + 64'd4 :
	       fetchStage$pipelines_1_first[387:324] + 64'd2 ;
  assign fcsr_csr__read__h530431 = { 56'd0, x__h533571 } ;
  assign fetchStage_RDY_pipelines_0_first__2488_AND_NOT_ETC___d13182 =
	     fetchStage$RDY_pipelines_0_first &&
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$canClaim) &&
	     regRenamingTable$rename_0_canRename &&
	     NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13179 ;
  assign fetchStage_RDY_pipelines_0_first__2488_AND_fet_ETC___d13248 =
	     fetchStage$RDY_pipelines_0_first &&
	     fetchStage$pipelines_1_first[194:192] == 3'd1 &&
	     regRenamingTable_rename_0_canRename__3159_AND__ETC___d13243 ||
	     !fetchStage$pipelines_0_canDeq ||
	     fetchStage$RDY_pipelines_0_first &&
	     IF_fetchStage_RDY_pipelines_0_first__2488_AND__ETC___d13186 ;
  assign fetchStage_RDY_pipelines_1_deq__2503_AND_NOT_f_ETC___d13796 =
	     fetchStage$RDY_pipelines_1_deq &&
	     (!fetchStage$pipelines_0_canDeq ||
	      NOT_specTagManager_canClaim__3157_3242_OR_NOT__ETC___d13792) &&
	     (fetchStage$pipelines_1_first[194:192] != 3'd1 ||
	      specTagManager$RDY_claimSpecTag) ;
  assign fetchStage_pipelines_0_canDeq__2489_AND_NOT_fe_ETC___d13738 =
	     fetchStage$pipelines_0_canDeq &&
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$canClaim) &&
	     regRenamingTable_rename_0_canRename__3159_AND__ETC___d13229 &&
	     fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13482 ||
	     !coreFix_aluExe_0_rsAlu$canEnq ||
	     NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13737 ;
  assign fetchStage_pipelines_0_canDeq__2489_AND_NOT_fe_ETC___d13817 =
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13814 &&
	     (fetchStage$pipelines_0_first[194:192] == 3'd0 ||
	      fetchStage$pipelines_0_first[194:192] == 3'd1) &&
	     SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3189_co_ETC___d13199 ;
  assign fetchStage_pipelines_0_canDeq__2489_AND_NOT_fe_ETC___d13936 =
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13814 &&
	     fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13482 ||
	     !coreFix_aluExe_0_rsAlu$canEnq ||
	     (!fetchStage$pipelines_0_canDeq ||
	      fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13931 ||
	      fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	      fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      !SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3189_co_ETC___d13199) &&
	     coreFix_aluExe_1_rsAlu$canEnq &&
	     !coreFix_aluExe_0_rsAlu_approximateCount__3193__ETC___d13195 ;
  assign fetchStage_pipelines_0_canDeq__2489_AND_fetchS_ETC___d13806 =
	     fetchStage$pipelines_0_canDeq &&
	     fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13689 ||
	     !fetchStage$pipelines_1_canDeq ||
	     fetchStage$RDY_pipelines_1_first &&
	     (fetchStage_pipelines_1_first__2500_BITS_194_TO_ETC___d13700 ||
	      NOT_regRenamingTable_rename_1_canRename__3278__ETC___d13706 ||
	      IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13802) &&
	     IF_fetchStage_RDY_pipelines_1_first__2499_AND__ETC___d13633 ;
  assign fetchStage_pipelines_0_canDeq__2489_AND_regRen_ETC___d13744 =
	     fetchStage$pipelines_0_canDeq &&
	     regRenamingTable_rename_0_canRename__3159_AND__ETC___d13229 &&
	     (fetchStage$pipelines_0_first[194:192] == 3'd3 ||
	      fetchStage$pipelines_0_first[194:192] == 3'd4) ;
  assign fetchStage_pipelines_0_canDeq__2489_AND_regRen_ETC___d13751 =
	     fetchStage$pipelines_0_canDeq &&
	     regRenamingTable_rename_0_canRename__3159_AND__ETC___d13229 &&
	     fetchStage$pipelines_0_first[194:192] == 3'd2 &&
	     IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13211 ||
	     !coreFix_memExe_rsMem$canEnq ||
	     CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q230 ;
  assign fetchStage_pipelines_0_canDeq__2489_AND_regRen_ETC___d13772 =
	     fetchStage_pipelines_0_canDeq__2489_AND_regRen_ETC___d13744 ||
	     !coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq ||
	     fetchStage$pipelines_0_canDeq &&
	     (fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	      !specTagManager$canClaim ||
	      NOT_regRenamingTable_rename_0_canRename__3159__ETC___d13258 ||
	      IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13764) ;
  assign fetchStage_pipelines_0_canDeq__2489_AND_regRen_ETC___d13783 =
	     fetchStage_pipelines_0_canDeq__2489_AND_regRen_ETC___d13751 ||
	     fetchStage$pipelines_0_canDeq &&
	     (fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	      !specTagManager$canClaim ||
	      NOT_regRenamingTable_rename_0_canRename__3159__ETC___d13258 ||
	      IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13775) ;
  assign fetchStage_pipelines_0_canDeq__2489_AND_regRen_ETC___d14116 =
	     fetchStage$pipelines_0_canDeq &&
	     regRenamingTable_rename_0_canRename__3159_AND__ETC___d14114 ||
	     !coreFix_memExe_rsMem$canEnq ||
	     CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q230 ;
  assign fetchStage_pipelines_0_canDeq__2489_AND_specTa_ETC___d13900 =
	     fetchStage$pipelines_0_canDeq && specTagManager$canClaim &&
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d12723[4] &&
	     rob$enqPort_0_canEnq &&
	     IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13239 &&
	     fetchStage$pipelines_0_first[194:192] == 3'd1 ;
  assign fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d12753 =
	     (fetchStage$pipelines_0_first[194:192] == 3'd0 &&
	      fetchStage$pipelines_0_first[178:174] == 5'd15 ||
	      rs1__h576040 != 5'd0 ||
	      imm__h576041 != 32'd0) &&
	     csr_addr__h576039[11:10] == 2'b11 ;
  assign fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13482 =
	     (fetchStage$pipelines_0_first[194:192] == 3'd0 ||
	      fetchStage$pipelines_0_first[194:192] == 3'd1) &&
	     SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3189_co_ETC___d13199 &&
	     (!coreFix_aluExe_1_rsAlu$canEnq ||
	      coreFix_aluExe_0_rsAlu_approximateCount__3193__ETC___d13195) ;
  assign fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13503 =
	     fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	     !specTagManager$canClaim ||
	     !regRenamingTable$rename_0_canRename ||
	     fetchStage_pipelines_0_first__2491_BITS_199_TO_ETC___d13496 ||
	     fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	     fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	     !SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3189_co_ETC___d13199 ;
  assign fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13575 =
	     fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	     !specTagManager$canClaim ||
	     fetchStage$pipelines_0_first[68] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[0] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[1] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[2] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[3] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[4] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[5] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[6] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[7] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[8] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[9] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[10] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[11] ;
  assign fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13683 =
	     fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	     !specTagManager$canClaim ||
	     NOT_regRenamingTable_rename_0_canRename__3159__ETC___d13648 ||
	     IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13672 &&
	     IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13681 ;
  assign fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13689 =
	     fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	     !specTagManager$canClaim ||
	     NOT_regRenamingTable_rename_0_canRename__3159__ETC___d13648 ||
	     IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13688 ;
  assign fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13711 =
	     fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	     !specTagManager$canClaim ||
	     !regRenamingTable$rename_0_canRename ||
	     fetchStage_pipelines_0_first__2491_BITS_199_TO_ETC___d13496 ||
	     fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	     fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	     !SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3189_co_ETC___d13199 ||
	     coreFix_aluExe_1_rsAlu$canEnq &&
	     !coreFix_aluExe_0_rsAlu_approximateCount__3193__ETC___d13195 ;
  assign fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13718 =
	     fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	     !specTagManager$canClaim ||
	     !regRenamingTable$rename_0_canRename ||
	     fetchStage_pipelines_0_first__2491_BITS_199_TO_ETC___d13496 ||
	     fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	     fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	     !SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3189_co_ETC___d13199 ||
	     coreFix_aluExe_0_rsAlu$canEnq &&
	     coreFix_aluExe_0_rsAlu_approximateCount__3193__ETC___d13195 ;
  assign fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13931 =
	     fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	     !specTagManager$canClaim ||
	     !regRenamingTable$rename_0_canRename ||
	     fetchStage$pipelines_0_first[68] ||
	     checkForException___d12723[4] ||
	     !rob$enqPort_0_canEnq ;
  assign fetchStage_pipelines_0_first__2491_BITS_199_TO_ETC___d13496 =
	     fetchStage$pipelines_0_first[199:195] == 5'd0 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd21 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd17 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd18 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd13 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd16 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd15 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd19 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd20 ||
	     fetchStage$pipelines_0_first[68] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d13493 ||
	     !rob$enqPort_0_canEnq ||
	     !epochManager$checkEpoch_0_check ;
  assign fetchStage_pipelines_0_first__2491_BIT_68_2518_ETC___d13256 =
	     fetchStage$pipelines_0_first[68] ||
	     checkForException___d12723[4] ||
	     csrf_fs_reg_read__1289_EQ_0_2712_AND_fetchStag_ETC___d13251 ||
	     !rob$enqPort_0_canEnq ||
	     !epochManager$checkEpoch_0_check ;
  assign fetchStage_pipelines_1_first__2500_BITS_194_TO_ETC___d13700 =
	     fetchStage$pipelines_1_first[194:192] == 3'd1 &&
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__3159_AND__ETC___d13697 ||
	      !specTagManager$canClaim) ;
  assign fetchStage_pipelines_1_first__2500_BITS_199_TO_ETC___d13535 =
	     fetchStage$pipelines_1_first[199:195] == 5'd0 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd21 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd17 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd18 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd13 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd16 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd15 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd19 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd20 ||
	     fetchStage$pipelines_1_first[68] ||
	     IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d13529 ||
	     !rob$enqPort_1_canEnq ||
	     !epochManager$checkEpoch_1_check ||
	     !fetchStage$pipelines_0_canDeq ||
	     fetchStage$RDY_pipelines_0_first &&
	     IF_fetchStage_RDY_pipelines_0_first__2488_AND__ETC___d13186 ;
  assign fetchStage_pipelines_1_first__2500_BIT_173_333_ETC___d13416 =
	     { fetchStage$pipelines_1_first[173],
	       CASE_fetchStagepipelines_1_first_BITS_172_TO__ETC__q228 } ;
  assign fetchStage_pipelines_1_first__2500_BIT_68_3306_ETC___d13704 =
	     fetchStage$pipelines_1_first[68] ||
	     checkForException___d13438[4] ||
	     csrf_fs_reg_read__1289_EQ_0_2712_AND_fetchStag_ETC___d13527 ||
	     !rob$enqPort_1_canEnq ||
	     !epochManager$checkEpoch_1_check ||
	     fetchStage$pipelines_0_canDeq &&
	     fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13689 ;
  assign fflags__h640705 =
	     NOT_rob_deqPort_0_canDeq__4671_4672_OR_rob_deq_ETC___d14870 ?
	       y_avValue_fst__h640652 :
	       IF_rob_deqPort_0_canDeq__4671_THEN_IF_NOT_rob__ETC___d14877 ;
  assign fflags_csr__read__h530406 = { 59'd0, csrf_fflags_reg } ;
  assign frm_csr__read__h530417 = { 61'd0, csrf_frm_reg } ;
  assign guard__h264941 =
	     { IF_sfdin73036_BIT_33_THEN_2_ELSE_0__q22[1],
	       { sfdin__h273036[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h273650 =
	     { IF_theResult___snd81649_BIT_33_THEN_2_ELSE_0__q24[1],
	       { _theResult___snd__h281649[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h282580 =
	     { IF_sfdin90802_BIT_33_THEN_2_ELSE_0__q32[1],
	       { sfdin__h290802[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h283178 = x__h283280 != 57'd0 ;
  assign guard__h291416 =
	     { IF_theResult___snd99439_BIT_33_THEN_2_ELSE_0__q37[1],
	       { _theResult___snd__h299439[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h310640 =
	     { IF_sfdin18733_BIT_33_THEN_2_ELSE_0__q57[1],
	       { sfdin__h318733[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h319347 =
	     { IF_theResult___snd27346_BIT_33_THEN_2_ELSE_0__q59[1],
	       { _theResult___snd__h327346[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h328277 =
	     { IF_sfdin36499_BIT_33_THEN_2_ELSE_0__q67[1],
	       { sfdin__h336499[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h328875 = x__h328977 != 57'd0 ;
  assign guard__h337113 =
	     { IF_theResult___snd45136_BIT_33_THEN_2_ELSE_0__q72[1],
	       { _theResult___snd__h345136[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h356335 =
	     { IF_sfdin64428_BIT_33_THEN_2_ELSE_0__q92[1],
	       { sfdin__h364428[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h365042 =
	     { IF_theResult___snd73041_BIT_33_THEN_2_ELSE_0__q94[1],
	       { _theResult___snd__h373041[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h373972 =
	     { IF_sfdin82194_BIT_33_THEN_2_ELSE_0__q102[1],
	       { sfdin__h382194[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h374570 = x__h374672 != 57'd0 ;
  assign guard__h382808 =
	     { IF_theResult___snd90831_BIT_33_THEN_2_ELSE_0__q107[1],
	       { _theResult___snd__h390831[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h413150 =
	     { IF_theResult___snd21062_BIT_4_THEN_2_ELSE_0__q127[1],
	       { _theResult___snd__h421062[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h422462 =
	     { IF_sfdin30682_BIT_4_THEN_2_ELSE_0__q131[1],
	       { sfdin__h430682[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h423060 = x__h423160 != 57'd0 ;
  assign guard__h431531 =
	     { IF_theResult___snd39467_BIT_4_THEN_2_ELSE_0__q134[1],
	       { _theResult___snd__h439467[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h452003 =
	     { IF_theResult___snd59915_BIT_4_THEN_2_ELSE_0__q167[1],
	       { _theResult___snd__h459915[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h461315 =
	     { IF_sfdin69535_BIT_4_THEN_2_ELSE_0__q171[1],
	       { sfdin__h469535[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h461913 = x__h462013 != 57'd0 ;
  assign guard__h470384 =
	     { IF_theResult___snd78320_BIT_4_THEN_2_ELSE_0__q174[1],
	       { _theResult___snd__h478320[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h491307 =
	     { IF_theResult___snd99219_BIT_4_THEN_2_ELSE_0__q144[1],
	       { _theResult___snd__h499219[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h500619 =
	     { IF_sfdin08839_BIT_4_THEN_2_ELSE_0__q148[1],
	       { sfdin__h508839[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h501217 = x__h501317 != 57'd0 ;
  assign guard__h509688 =
	     { IF_theResult___snd17624_BIT_4_THEN_2_ELSE_0__q151[1],
	       { _theResult___snd__h517624[3:0], 52'd0 } != 56'd0 } ;
  assign idx__h606397 =
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13483 ||
	     !coreFix_aluExe_0_rsAlu$canEnq ||
	     (!fetchStage$pipelines_0_canDeq ||
	      fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13503) &&
	     coreFix_aluExe_1_rsAlu$canEnq &&
	     !coreFix_aluExe_0_rsAlu_approximateCount__3193__ETC___d13195 ;
  assign imm__h576041 =
	     fetchStage$pipelines_0_first[160] ?
	       fetchStage$pipelines_0_first[159:128] :
	       32'd0 ;
  assign k__h590245 =
	     !coreFix_aluExe_0_rsAlu$canEnq ||
	     coreFix_aluExe_1_rsAlu$canEnq &&
	     !coreFix_aluExe_0_rsAlu_approximateCount__3193__ETC___d13195 ;
  assign mask__h584357 = 64'hFFFFFFFFFFFFFFFF << x__h577163 ;
  assign mcause_csr__read__h532073 =
	     { r1__read__h535034, csrf_mcause_code_reg } ;
  assign mcounteren_csr__read__h531818 =
	     { r1__read__h535021, csrf_mcounteren_cy_reg } ;
  assign medeleg_csr__read__h531425 =
	     { r1__read__h534882, csrf_medeleg_9_0_reg } ;
  assign mideleg_csr__read__h531520 =
	     { r1__read__h534899, csrf_mideleg_1_0_reg } ;
  assign mie_csr__read__h531644 = { r1__read__h534923, 1'b0 } ;
  assign mip_csr__read__h532306 = { r1__read__h535040, 1'b0 } ;
  assign mmio_pRqQ_empty_55_AND_epochManager_checkEpoch_ETC___d12771 =
	     mmio_pRqQ_empty && epochManager$checkEpoch_0_check &&
	     (fetchStage$pipelines_0_first[68] ||
	      IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12767) &&
	     rob$isEmpty ;
  assign mmio_pRqQ_empty_55_AND_epochManager_checkEpoch_ETC___d13085 =
	     mmio_pRqQ_empty && epochManager$checkEpoch_0_check &&
	     !fetchStage$pipelines_0_first[68] &&
	     NOT_IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_252_ETC___d13066 &&
	     (fetchStage$pipelines_0_first[199:195] == 5'd0 ||
	      fetchStage$pipelines_0_first[199:195] == 5'd21 ||
	      fetchStage$pipelines_0_first[199:195] == 5'd17 ||
	      fetchStage$pipelines_0_first[199:195] == 5'd18 ||
	      fetchStage$pipelines_0_first[199:195] == 5'd13 ||
	      fetchStage$pipelines_0_first[199:195] == 5'd16 ||
	      fetchStage$pipelines_0_first[199:195] == 5'd15 ||
	      fetchStage$pipelines_0_first[199:195] == 5'd19 ||
	      fetchStage$pipelines_0_first[199:195] == 5'd20) ;
  assign mmio_pRqQ_empty_55_AND_epochManager_checkEpoch_ETC___d13811 =
	     mmio_pRqQ_empty && epochManager$checkEpoch_0_check &&
	     !fetchStage$pipelines_0_first[68] &&
	     NOT_IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_252_ETC___d13174 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd0 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd21 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd17 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd18 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd13 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd16 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd15 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd19 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd20 ;
  assign mstatus_csr__read__h531277 = { r1__read__h534757, csrf_ie_vec_0 } ;
  assign mtvec_csr__read__h531726 =
	     { r1__read__h535016, csrf_mtvec_mode_low_reg } ;
  assign n___1__h128958 =
	     { coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[78] ?
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[70:63] :
		 x__h127992[63:56],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[77] ?
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[62:55] :
		 x__h127992[55:48],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[76] ?
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[54:47] :
		 x__h127992[47:40],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[75] ?
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[46:39] :
		 x__h127992[39:32],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[74] ?
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[38:31] :
		 x__h127992[31:24],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[73] ?
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[30:23] :
		 x__h127992[23:16],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[72] ?
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[22:15] :
		 x__h127992[15:8],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[71] ?
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[14:7] :
		 x__h127992[7:0] } ;
  assign n__read__h4917 =
	     csrf_mcycle_ehr_data_lat_0$whas ?
	       rob$deqPort_0_deq_data[95:32] :
	       csrf_mcycle_ehr_data_rl ;
  assign n__read__h636971 =
	     csrf_minstret_ehr_data_lat_0$whas ?
	       rob$deqPort_0_deq_data[95:32] :
	       csrf_minstret_ehr_data_rl ;
  assign newAddrDiff__h576958 =
	     scaprf_pcc_reg_read_wget__2773_BITS_149_TO_86__ETC___d12780 -
	     (fetchStage$pipelines_0_first[387:324] & mask__h584357) ;
  assign newAddrDiff__h617908 =
	     scaprf_pcc_reg_read_wget__2773_BITS_149_TO_86__ETC___d12780 -
	     (fetchStage$pipelines_1_first[387:324] & mask__h584357) ;
  assign next_deqP___1__h225027 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP ==
	      3'd7) ?
	       3'd0 :
	       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP +
	       3'd1 ;
  assign next_deqP___1__h231596 =
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP + 1'd1 ;
  assign next_deqP___1__h236450 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP + 1'd1 ;
  assign next_deqP___1__h242877 =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP + 1'd1 ;
  assign next_deqP___1__h250288 = coreFix_memExe_memRespLdQ_deqP + 1'd1 ;
  assign next_deqP___1__h252188 = coreFix_memExe_forwardQ_deqP + 1'd1 ;
  assign next_pc__h636122 =
	     (rob$deqPort_0_deq_data[196:195] == 2'd0) ?
	       rob$deqPort_0_deq_data[191:128] :
	       rob_deqPort_0_deq_data__4141_BITS_548_TO_485_4_ETC___d14645 ;
  assign out___1_sfd__h401787 = { f1_sfd__h401724, 29'd0 } ;
  assign out___1_sfd__h440781 = { f2_sfd__h440718, 29'd0 } ;
  assign out___1_sfd__h480085 = { f3_sfd__h480022, 29'd0 } ;
  assign out_exp__h273561 =
	     sfdin__h273036[34] ?
	       _theResult___exp__h273558 :
	       _theResult___fst_exp__h273042 ;
  assign out_exp__h282143 =
	     _theResult___snd__h281649[34] ?
	       _theResult___exp__h282140 :
	       _theResult___fst_exp__h281698 ;
  assign out_exp__h291327 =
	     sfdin__h290802[34] ?
	       _theResult___exp__h291324 :
	       _theResult___fst_exp__h290808 ;
  assign out_exp__h299963 =
	     _theResult___snd__h299439[34] ?
	       _theResult___exp__h299960 :
	       _theResult___fst_exp__h299493 ;
  assign out_exp__h319258 =
	     sfdin__h318733[34] ?
	       _theResult___exp__h319255 :
	       _theResult___fst_exp__h318739 ;
  assign out_exp__h327840 =
	     _theResult___snd__h327346[34] ?
	       _theResult___exp__h327837 :
	       _theResult___fst_exp__h327395 ;
  assign out_exp__h337024 =
	     sfdin__h336499[34] ?
	       _theResult___exp__h337021 :
	       _theResult___fst_exp__h336505 ;
  assign out_exp__h345660 =
	     _theResult___snd__h345136[34] ?
	       _theResult___exp__h345657 :
	       _theResult___fst_exp__h345190 ;
  assign out_exp__h364953 =
	     sfdin__h364428[34] ?
	       _theResult___exp__h364950 :
	       _theResult___fst_exp__h364434 ;
  assign out_exp__h373535 =
	     _theResult___snd__h373041[34] ?
	       _theResult___exp__h373532 :
	       _theResult___fst_exp__h373090 ;
  assign out_exp__h382719 =
	     sfdin__h382194[34] ?
	       _theResult___exp__h382716 :
	       _theResult___fst_exp__h382200 ;
  assign out_exp__h391355 =
	     _theResult___snd__h390831[34] ?
	       _theResult___exp__h391352 :
	       _theResult___fst_exp__h390885 ;
  assign out_exp__h421769 =
	     _theResult___snd__h421062[5] ?
	       _theResult___exp__h421766 :
	       _theResult___fst_exp__h421111 ;
  assign out_exp__h431420 =
	     sfdin__h430682[5] ?
	       _theResult___exp__h431417 :
	       _theResult___fst_exp__h430688 ;
  assign out_exp__h440204 =
	     _theResult___snd__h439467[5] ?
	       _theResult___exp__h440201 :
	       _theResult___fst_exp__h439521 ;
  assign out_exp__h460622 =
	     _theResult___snd__h459915[5] ?
	       _theResult___exp__h460619 :
	       _theResult___fst_exp__h459964 ;
  assign out_exp__h470273 =
	     sfdin__h469535[5] ?
	       _theResult___exp__h470270 :
	       _theResult___fst_exp__h469541 ;
  assign out_exp__h479057 =
	     _theResult___snd__h478320[5] ?
	       _theResult___exp__h479054 :
	       _theResult___fst_exp__h478374 ;
  assign out_exp__h499926 =
	     _theResult___snd__h499219[5] ?
	       _theResult___exp__h499923 :
	       _theResult___fst_exp__h499268 ;
  assign out_exp__h509577 =
	     sfdin__h508839[5] ?
	       _theResult___exp__h509574 :
	       _theResult___fst_exp__h508845 ;
  assign out_exp__h518361 =
	     _theResult___snd__h517624[5] ?
	       _theResult___exp__h518358 :
	       _theResult___fst_exp__h517678 ;
  assign out_f_exp__h300339 =
	     (_theResult___exp__h300062 == 8'd255 &&
	      _theResult___sfd__h300063 != 23'd0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd2047) ?
	       8'd255 :
	       _theResult___fst_exp__h300053 ;
  assign out_f_exp__h346036 =
	     (_theResult___exp__h345759 == 8'd255 &&
	      _theResult___sfd__h345760 != 23'd0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd2047) ?
	       8'd255 :
	       _theResult___fst_exp__h345750 ;
  assign out_f_exp__h391731 =
	     (_theResult___exp__h391454 == 8'd255 &&
	      _theResult___sfd__h391455 != 23'd0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd2047) ?
	       8'd255 :
	       _theResult___fst_exp__h391445 ;
  assign out_f_sfd__h300340 =
	     (_theResult___exp__h300062 == 8'd255 &&
	      _theResult___sfd__h300063 != 23'd0) ?
	       23'd4194304 :
	       _theResult___sfd__h300063 ;
  assign out_f_sfd__h346037 =
	     (_theResult___exp__h345759 == 8'd255 &&
	      _theResult___sfd__h345760 != 23'd0) ?
	       23'd4194304 :
	       _theResult___sfd__h345760 ;
  assign out_f_sfd__h391732 =
	     (_theResult___exp__h391454 == 8'd255 &&
	      _theResult___sfd__h391455 != 23'd0) ?
	       23'd4194304 :
	       _theResult___sfd__h391455 ;
  assign out_sfd__h273562 =
	     sfdin__h273036[34] ?
	       _theResult___sfd__h273559 :
	       sfdin__h273036[56:34] ;
  assign out_sfd__h282144 =
	     _theResult___snd__h281649[34] ?
	       _theResult___sfd__h282141 :
	       _theResult___snd__h281649[56:34] ;
  assign out_sfd__h291328 =
	     sfdin__h290802[34] ?
	       _theResult___sfd__h291325 :
	       sfdin__h290802[56:34] ;
  assign out_sfd__h299964 =
	     _theResult___snd__h299439[34] ?
	       _theResult___sfd__h299961 :
	       _theResult___snd__h299439[56:34] ;
  assign out_sfd__h319259 =
	     sfdin__h318733[34] ?
	       _theResult___sfd__h319256 :
	       sfdin__h318733[56:34] ;
  assign out_sfd__h327841 =
	     _theResult___snd__h327346[34] ?
	       _theResult___sfd__h327838 :
	       _theResult___snd__h327346[56:34] ;
  assign out_sfd__h337025 =
	     sfdin__h336499[34] ?
	       _theResult___sfd__h337022 :
	       sfdin__h336499[56:34] ;
  assign out_sfd__h345661 =
	     _theResult___snd__h345136[34] ?
	       _theResult___sfd__h345658 :
	       _theResult___snd__h345136[56:34] ;
  assign out_sfd__h364954 =
	     sfdin__h364428[34] ?
	       _theResult___sfd__h364951 :
	       sfdin__h364428[56:34] ;
  assign out_sfd__h373536 =
	     _theResult___snd__h373041[34] ?
	       _theResult___sfd__h373533 :
	       _theResult___snd__h373041[56:34] ;
  assign out_sfd__h382720 =
	     sfdin__h382194[34] ?
	       _theResult___sfd__h382717 :
	       sfdin__h382194[56:34] ;
  assign out_sfd__h391356 =
	     _theResult___snd__h390831[34] ?
	       _theResult___sfd__h391353 :
	       _theResult___snd__h390831[56:34] ;
  assign out_sfd__h421770 =
	     _theResult___snd__h421062[5] ?
	       _theResult___sfd__h421767 :
	       _theResult___snd__h421062[56:5] ;
  assign out_sfd__h431421 =
	     sfdin__h430682[5] ?
	       _theResult___sfd__h431418 :
	       sfdin__h430682[56:5] ;
  assign out_sfd__h440205 =
	     _theResult___snd__h439467[5] ?
	       _theResult___sfd__h440202 :
	       _theResult___snd__h439467[56:5] ;
  assign out_sfd__h460623 =
	     _theResult___snd__h459915[5] ?
	       _theResult___sfd__h460620 :
	       _theResult___snd__h459915[56:5] ;
  assign out_sfd__h470274 =
	     sfdin__h469535[5] ?
	       _theResult___sfd__h470271 :
	       sfdin__h469535[56:5] ;
  assign out_sfd__h479058 =
	     _theResult___snd__h478320[5] ?
	       _theResult___sfd__h479055 :
	       _theResult___snd__h478320[56:5] ;
  assign out_sfd__h499927 =
	     _theResult___snd__h499219[5] ?
	       _theResult___sfd__h499924 :
	       _theResult___snd__h499219[56:5] ;
  assign out_sfd__h509578 =
	     sfdin__h508839[5] ?
	       _theResult___sfd__h509575 :
	       sfdin__h508839[56:5] ;
  assign out_sfd__h518362 =
	     _theResult___snd__h517624[5] ?
	       _theResult___sfd__h518359 :
	       _theResult___snd__h517624[56:5] ;
  assign pend_ints__h572228 =
	     { csrf_external_int_en_vec_3_read__1407_AND_csrf_ETC___d12530,
	       csrf_software_int_en_vec_3 & csrf_software_int_pend_vec_3,
	       1'd0,
	       csrf_software_int_en_vec_1 & csrf_software_int_pend_vec_1,
	       1'd0 } ;
  assign prv__h641787 = csrf_prv_reg ;
  assign prv__h641831 = csrf_mprv_reg ? csrf_mpp_reg : csrf_prv_reg ;
  assign q___1__h394976 =
	     64'd0 -
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_OUT[203:140] ;
  assign r1__read_BITS_13_TO_12___h575909 = csrf_fs_reg ;
  assign r1__read_BITS_9_TO_0___h572665 =
	     { csrf_mideleg_11_reg,
	       1'b0,
	       csrf_mideleg_9_7_reg,
	       1'b0,
	       csrf_mideleg_5_3_reg,
	       1'b0 } ;
  assign r1__read_BIT_20___h576573 = csrf_tw_reg ;
  assign r1__read__h533586 = { r1__read__h533588, csrf_ie_vec_1 } ;
  assign r1__read__h533588 = { r1__read__h533590, 2'b0 } ;
  assign r1__read__h533590 = { r1__read__h533592, csrf_prev_ie_vec_0 } ;
  assign r1__read__h533592 = { r1__read__h533594, csrf_prev_ie_vec_1 } ;
  assign r1__read__h533594 = { r1__read__h533596, 2'b0 } ;
  assign r1__read__h533596 = { r1__read__h533598, csrf_spp_reg } ;
  assign r1__read__h533598 = { r1__read__h533600, 4'b0 } ;
  assign r1__read__h533600 = { r1__read__h533602, csrf_fs_reg } ;
  assign r1__read__h533602 = { r1__read__h533604, 2'd0 } ;
  assign r1__read__h533604 = { r1__read__h533606, 1'b0 } ;
  assign r1__read__h533606 = { r1__read__h533608, csrf_sum_reg } ;
  assign r1__read__h533608 = { r1__read__h533610, csrf_mxr_reg } ;
  assign r1__read__h533610 = { r1__read__h533612, 12'b0 } ;
  assign r1__read__h533612 = { r1__read__h533614, 2'b10 } ;
  assign r1__read__h533614 = { r__h533618, 29'b0 } ;
  assign r1__read__h533990 =
	     { r1__read__h533992, csrf_software_int_en_vec_1 } ;
  assign r1__read__h533992 = { r1__read__h533994, 2'b0 } ;
  assign r1__read__h533994 = { r1__read__h533996, 1'b0 } ;
  assign r1__read__h533996 = { r1__read__h533998, csrf_timer_int_en_vec_1 } ;
  assign r1__read__h533998 = { r1__read__h534000, 2'b0 } ;
  assign r1__read__h534000 = { r1__read__h534002, 1'b0 } ;
  assign r1__read__h534002 = { 54'b0, csrf_external_int_en_vec_1 } ;
  assign r1__read__h534500 = { csrf_stvec_base_hi_reg, 1'b0 } ;
  assign r1__read__h534505 = { r1__read__h534507, csrf_scounteren_tm_reg } ;
  assign r1__read__h534507 = { 61'd0, csrf_scounteren_ir_reg } ;
  assign r1__read__h534518 = { csrf_scause_interrupt_reg, 59'b0 } ;
  assign r1__read__h534524 =
	     { r1__read__h534526, csrf_software_int_pend_vec_1 } ;
  assign r1__read__h534526 = { r1__read__h534528, 2'b0 } ;
  assign r1__read__h534528 = { r1__read__h534530, 1'b0 } ;
  assign r1__read__h534530 =
	     { r1__read__h534532, csrf_timer_int_pend_vec_1 } ;
  assign r1__read__h534532 = { r1__read__h534534, 2'b0 } ;
  assign r1__read__h534534 = { r1__read__h534536, 1'b0 } ;
  assign r1__read__h534536 = { 54'b0, csrf_external_int_pend_vec_1 } ;
  assign r1__read__h534734 = { vm_mode_reg__read__h534740, 16'd0 } ;
  assign r1__read__h534757 = { r1__read__h534759, csrf_ie_vec_1 } ;
  assign r1__read__h534759 = { r1__read__h534761, 1'b0 } ;
  assign r1__read__h534761 = { r1__read__h534763, csrf_ie_vec_3 } ;
  assign r1__read__h534763 = { r1__read__h534765, csrf_prev_ie_vec_0 } ;
  assign r1__read__h534765 = { r1__read__h534767, csrf_prev_ie_vec_1 } ;
  assign r1__read__h534767 = { r1__read__h534769, 1'b0 } ;
  assign r1__read__h534769 = { r1__read__h534771, csrf_prev_ie_vec_3 } ;
  assign r1__read__h534771 = { r1__read__h534773, csrf_spp_reg } ;
  assign r1__read__h534773 = { r1__read__h534775, 2'b0 } ;
  assign r1__read__h534775 = { r1__read__h534777, csrf_mpp_reg } ;
  assign r1__read__h534777 = { r1__read__h534779, csrf_fs_reg } ;
  assign r1__read__h534779 = { r1__read__h534781, 2'd0 } ;
  assign r1__read__h534781 = { r1__read__h534783, csrf_mprv_reg } ;
  assign r1__read__h534783 = { r1__read__h534785, csrf_sum_reg } ;
  assign r1__read__h534785 = { r1__read__h534787, csrf_mxr_reg } ;
  assign r1__read__h534787 = { r1__read__h534789, csrf_tvm_reg } ;
  assign r1__read__h534789 = { r1__read__h534791, csrf_tw_reg } ;
  assign r1__read__h534791 = { r1__read__h534793, csrf_tsr_reg } ;
  assign r1__read__h534793 = { r1__read__h534795, 9'b0 } ;
  assign r1__read__h534795 = { r1__read__h534797, 2'b10 } ;
  assign r1__read__h534797 = { r1__read__h534799, 2'b10 } ;
  assign r1__read__h534799 = { r__h533618, 27'b0 } ;
  assign r1__read__h534882 = { r1__read__h534884, 1'b0 } ;
  assign r1__read__h534884 = { r1__read__h534886, csrf_medeleg_13_11_reg } ;
  assign r1__read__h534886 = { r1__read__h534888, 1'b0 } ;
  assign r1__read__h534888 = { 48'b0, csrf_medeleg_15_reg } ;
  assign r1__read__h534899 = { r1__read__h534901, 1'b0 } ;
  assign r1__read__h534901 = { r1__read__h534903, csrf_mideleg_5_3_reg } ;
  assign r1__read__h534903 = { r1__read__h534905, 1'b0 } ;
  assign r1__read__h534905 = { r1__read__h534907, csrf_mideleg_9_7_reg } ;
  assign r1__read__h534907 = { r1__read__h534909, 1'b0 } ;
  assign r1__read__h534909 = { 52'b0, csrf_mideleg_11_reg } ;
  assign r1__read__h534923 =
	     { r1__read__h534925, csrf_software_int_en_vec_1 } ;
  assign r1__read__h534925 = { r1__read__h534927, 1'b0 } ;
  assign r1__read__h534927 =
	     { r1__read__h534929, csrf_software_int_en_vec_3 } ;
  assign r1__read__h534929 = { r1__read__h534931, 1'b0 } ;
  assign r1__read__h534931 = { r1__read__h534933, csrf_timer_int_en_vec_1 } ;
  assign r1__read__h534933 = { r1__read__h534935, 1'b0 } ;
  assign r1__read__h534935 = { r1__read__h534937, csrf_timer_int_en_vec_3 } ;
  assign r1__read__h534937 = { r1__read__h534939, 1'b0 } ;
  assign r1__read__h534939 =
	     { r1__read__h534941, csrf_external_int_en_vec_1 } ;
  assign r1__read__h534941 = { r1__read__h534943, 1'b0 } ;
  assign r1__read__h534943 = { 52'b0, csrf_external_int_en_vec_3 } ;
  assign r1__read__h535016 = { csrf_mtvec_base_hi_reg, 1'b0 } ;
  assign r1__read__h535021 = { r1__read__h535023, csrf_mcounteren_tm_reg } ;
  assign r1__read__h535023 = { 61'd0, csrf_mcounteren_ir_reg } ;
  assign r1__read__h535034 = { csrf_mcause_interrupt_reg, 59'b0 } ;
  assign r1__read__h535040 =
	     { r1__read__h535042, csrf_software_int_pend_vec_1 } ;
  assign r1__read__h535042 = { r1__read__h535044, 1'b0 } ;
  assign r1__read__h535044 =
	     { r1__read__h535046, csrf_software_int_pend_vec_3 } ;
  assign r1__read__h535046 = { r1__read__h535048, 1'b0 } ;
  assign r1__read__h535048 =
	     { r1__read__h535050, csrf_timer_int_pend_vec_1 } ;
  assign r1__read__h535050 = { r1__read__h535052, 1'b0 } ;
  assign r1__read__h535052 =
	     { r1__read__h535054, csrf_timer_int_pend_vec_3 } ;
  assign r1__read__h535054 = { r1__read__h535056, 1'b0 } ;
  assign r1__read__h535056 =
	     { r1__read__h535058, csrf_external_int_pend_vec_1 } ;
  assign r1__read__h535058 = { r1__read__h535060, 1'b0 } ;
  assign r1__read__h535060 = { 52'b0, csrf_external_int_pend_vec_3 } ;
  assign r1__read__h535141 = { 4'd0, csrf_rg_tdata1_dmode } ;
  assign rVal1__h401339 = coreFix_fpuMulDivExe_0_regToExeQ$first[203:140] ;
  assign rVal2__h401340 = coreFix_fpuMulDivExe_0_regToExeQ$first[139:76] ;
  assign r___1__h395003 =
	     64'd0 -
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_OUT[139:76] ;
  assign r__h533618 = csrf_fs_reg == 2'b11 ;
  assign r__h535115 = csrf_software_int_pend_vec_3 ;
  assign regRenamingTable_RDY_rename_0_getRename__3022__ETC___d13031 =
	     regRenamingTable$RDY_rename_0_getRename &&
	     regRenamingTable$RDY_rename_0_claimRename &&
	     epochManager$RDY_incrementEpoch &&
	     fetchStage$RDY_pipelines_0_first &&
	     fetchStage$RDY_pipelines_0_deq &&
	     (fetchStage$pipelines_0_first[194:192] != 3'd0 ||
	      coreFix_aluExe_0_rsAlu$RDY_enq) ;
  assign regRenamingTable_RDY_rename_0_getRename__3022__ETC___d13668 =
	     regRenamingTable$RDY_rename_0_getRename &&
	     CASE_fetchStagepipelines_0_first_BITS_191_TO__ETC__q233 &&
	     (fetchStage$pipelines_0_first[199:195] == 5'd14 ||
	      coreFix_memExe_rsMem$RDY_enq) ;
  assign regRenamingTable_RDY_rename_1_getRename__3724__ETC___d13742 =
	     regRenamingTable$RDY_rename_1_getRename &&
	     (!fetchStage$pipelines_0_canDeq ||
	      NOT_specTagManager_canClaim__3157_3242_OR_NOT__ETC___d13727) &&
	     _0_OR_NOT_fetchStage_pipelines_1_first__2500_BI_ETC___d13740 ;
  assign regRenamingTable_rename_0_canRename__3159_AND__ETC___d13229 =
	     regRenamingTable$rename_0_canRename &&
	     fetchStage$pipelines_0_first[199:195] != 5'd0 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd21 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd17 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd18 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd13 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd16 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd15 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd19 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd20 &&
	     NOT_fetchStage_pipelines_0_first__2491_BIT_68__ETC___d13227 ;
  assign regRenamingTable_rename_0_canRename__3159_AND__ETC___d13243 =
	     regRenamingTable_rename_0_canRename__3159_AND__ETC___d13229 &&
	     IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13239 &&
	     fetchStage$pipelines_0_first[194:192] == 3'd1 ||
	     !specTagManager$canClaim ;
  assign regRenamingTable_rename_0_canRename__3159_AND__ETC___d13558 =
	     regRenamingTable_rename_0_canRename__3159_AND__ETC___d13229 &&
	     fetchStage$pipelines_0_first[194:192] == 3'd2 &&
	     IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13211 ||
	     !coreFix_memExe_rsMem$canEnq ||
	     CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q230 ;
  assign regRenamingTable_rename_0_canRename__3159_AND__ETC___d13697 =
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d12723[4] &&
	     rob$enqPort_0_canEnq &&
	     IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13695 &&
	     fetchStage$pipelines_0_first[194:192] == 3'd1 ;
  assign regRenamingTable_rename_0_canRename__3159_AND__ETC___d13829 =
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d12723[4] &&
	     rob$enqPort_0_canEnq &&
	     (fetchStage$pipelines_0_first[194:192] == 3'd3 ||
	      fetchStage$pipelines_0_first[194:192] == 3'd4) &&
	     coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq ;
  assign regRenamingTable_rename_0_canRename__3159_AND__ETC___d13842 =
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d12723[4] &&
	     rob$enqPort_0_canEnq &&
	     (fetchStage$pipelines_0_first[194:192] == 3'd3 ||
	      fetchStage$pipelines_0_first[194:192] == 3'd4) &&
	     coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq &&
	     NOT_fetchStage_pipelines_0_first__2491_BITS_32_ETC___d13838 ;
  assign regRenamingTable_rename_0_canRename__3159_AND__ETC___d13847 =
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d12723[4] &&
	     rob$enqPort_0_canEnq &&
	     (fetchStage$pipelines_0_first[194:192] == 3'd3 ||
	      fetchStage$pipelines_0_first[194:192] == 3'd4) &&
	     coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq &&
	     fetchStage$pipelines_0_first[173] ;
  assign regRenamingTable_rename_0_canRename__3159_AND__ETC___d13852 =
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d12723[4] &&
	     rob$enqPort_0_canEnq &&
	     fetchStage$pipelines_0_first[194:192] == 3'd2 &&
	     coreFix_memExe_rsMem$canEnq &&
	     IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13211 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd14 ;
  assign regRenamingTable_rename_0_canRename__3159_AND__ETC___d13872 =
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d12723[4] &&
	     rob$enqPort_0_canEnq &&
	     fetchStage$pipelines_0_first[194:192] == 3'd2 &&
	     coreFix_memExe_rsMem$canEnq &&
	     IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13211 &&
	     NOT_fetchStage_pipelines_0_first__2491_BITS_32_ETC___d13838 ;
  assign regRenamingTable_rename_0_canRename__3159_AND__ETC___d13876 =
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d12723[4] &&
	     rob$enqPort_0_canEnq &&
	     fetchStage$pipelines_0_first[194:192] == 3'd2 &&
	     coreFix_memExe_rsMem$canEnq &&
	     IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13211 &&
	     fetchStage$pipelines_0_first[173] ;
  assign regRenamingTable_rename_0_canRename__3159_AND__ETC___d13882 =
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d12723[4] &&
	     rob$enqPort_0_canEnq &&
	     fetchStage$pipelines_0_first[194:192] == 3'd2 &&
	     coreFix_memExe_rsMem$canEnq &&
	     IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13211 &&
	     (fetchStage$pipelines_0_first[199:195] != 5'd14) !=
	     fetchStage$pipelines_0_first[160] ;
  assign regRenamingTable_rename_0_canRename__3159_AND__ETC___d13886 =
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d12723[4] &&
	     rob$enqPort_0_canEnq &&
	     fetchStage$pipelines_0_first[194:192] == 3'd2 &&
	     coreFix_memExe_rsMem$canEnq &&
	     IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13211 &&
	     (fetchStage$pipelines_0_first[191:189] == 3'd0 ||
	      fetchStage$pipelines_0_first[191:189] == 3'd2) ;
  assign regRenamingTable_rename_0_canRename__3159_AND__ETC___d13894 =
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d12723[4] &&
	     rob$enqPort_0_canEnq &&
	     fetchStage$pipelines_0_first[194:192] == 3'd2 &&
	     coreFix_memExe_rsMem$canEnq &&
	     IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13211 &&
	     fetchStage$pipelines_0_first[191:189] != 3'd0 &&
	     fetchStage$pipelines_0_first[191:189] != 3'd2 ;
  assign regRenamingTable_rename_0_canRename__3159_AND__ETC___d14114 =
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d12723[4] &&
	     rob$enqPort_0_canEnq &&
	     fetchStage$pipelines_0_first[194:192] == 3'd2 &&
	     IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13211 ;
  assign regRenamingTable_rename_1_canRename__3278_AND__ETC___d13949 =
	     regRenamingTable$rename_1_canRename &&
	     fetchStage$pipelines_1_first[199:195] != 5'd0 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd21 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd17 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd18 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd13 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd16 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd15 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd19 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd20 &&
	     NOT_fetchStage_pipelines_1_first__2500_BIT_68__ETC___d13947 ;
  assign regRenamingTable_rename_1_canRename__3278_AND__ETC___d14033 =
	     regRenamingTable_rename_1_canRename__3278_AND__ETC___d13949 &&
	     fetchStage$pipelines_1_first[194:192] == 3'd2 &&
	     NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d14017 &&
	     NOT_fetchStage_pipelines_1_first__2500_BITS_32_ETC___d14004 ;
  assign regRenamingTable_rename_1_canRename__3278_AND__ETC___d14043 =
	     regRenamingTable_rename_1_canRename__3278_AND__ETC___d13949 &&
	     fetchStage$pipelines_1_first[194:192] == 3'd2 &&
	     NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d14017 &&
	     (fetchStage$pipelines_1_first[199:195] != 5'd14) !=
	     fetchStage$pipelines_1_first[160] ;
  assign renaming_spec_bits__h606266 =
	     fetchStage$pipelines_0_canDeq ?
	       y_avValue_snd_fst__h602964 :
	       specTagManager$currentSpecBits ;
  assign repBound__h577231 = scaprf_pcc_reg_data_rl[13:11] - 3'b001 ;
  assign res_data__h256715 = { 32'hFFFFFFFF, x__h256730 } ;
  assign res_data__h256720 =
	     { (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
		52'd0) &&
	       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[33] ^
	       coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68],
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
		11'd2047 &&
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) ?
		 63'h7FF8000000000000 :
		 coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:5] } ;
  assign res_data__h302417 = { 32'hFFFFFFFF, x__h302432 } ;
  assign res_data__h302422 =
	     { (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
		52'd0) &&
	       coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[33] ^
	       coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68],
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
		11'd2047 &&
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) ?
		 63'h7FF8000000000000 :
		 coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:5] } ;
  assign res_data__h348112 = { 32'hFFFFFFFF, x__h348127 } ;
  assign res_data__h348117 =
	     { (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
		52'd0) &&
	       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[33] ^
	       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68],
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
		11'd2047 &&
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) ?
		 63'h7FF8000000000000 :
		 coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:5] } ;
  assign res_fflags__h256716 =
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[38:34] |
	     coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[4:0] |
	     { (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4861,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4872,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4888,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4901,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4914 } ;
  assign res_fflags__h302418 =
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[38:34] |
	     coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[4:0] |
	     { (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6253,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6264,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6280,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6293,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6306 } ;
  assign res_fflags__h348113 =
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[38:34] |
	     coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[4:0] |
	     { (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7645,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7656,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7672,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7685,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7698 } ;
  assign resp_addr__h220791 =
	     { coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getSlot[53:1],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getRq[94:84] } ;
  assign result__h283183 =
	     { _0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d4217[56:1],
	       _0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d4217[0] |
	       guard__h283178 } ;
  assign result__h328880 =
	     { _0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d5609[56:1],
	       _0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d5609[0] |
	       guard__h328875 } ;
  assign result__h374575 =
	     { _0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d7001[56:1],
	       _0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d7001[0] |
	       guard__h374570 } ;
  assign result__h423065 =
	     { _0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d8327[56:1],
	       _0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d8327[0] |
	       guard__h423060 } ;
  assign result__h461918 =
	     { _0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d9812[56:1],
	       _0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d9812[0] |
	       guard__h461913 } ;
  assign result__h501222 =
	     { _0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d9042[56:1],
	       _0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d9042[0] |
	       guard__h501217 } ;
  assign result__h567936 = w__h567931 & y__h567965 ;
  assign result__h567987 = ~x__h567986 ;
  assign ret_addrBits__h579466 =
	     { 2'd0, fetchStage$pipelines_0_first[387:376] } ;
  assign ret_addrBits__h585299 =
	     { 2'd0, fetchStage$pipelines_0_first[323:312] } ;
  assign ret_addrBits__h618849 =
	     { 2'd0, fetchStage$pipelines_1_first[323:312] } ;
  assign ret_address__h585298 =
	     { 2'd0, fetchStage$pipelines_0_first[323:260] } ;
  assign ret_address__h618848 =
	     { 2'd0, fetchStage$pipelines_1_first[323:260] } ;
  assign rg_tdata1__read__h533261 =
	     { r1__read__h535141, csrf_rg_tdata1_data } ;
  assign rob_deqPort_0_deq_data__4141_BITS_548_TO_485_4_ETC___d14645 =
	     rob$deqPort_0_deq_data[548:485] + 64'd4 ;
  assign rob_enqPort_1_canEnq__3467_AND_epochManager_ch_ETC___d13472 =
	     rob$enqPort_1_canEnq && epochManager$checkEpoch_1_check &&
	     (!fetchStage$pipelines_0_canDeq ||
	      (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	       specTagManager$canClaim) &&
	      regRenamingTable_rename_0_canRename__3159_AND__ETC___d13229 &&
	      IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13215) ;
  assign rob_enqPort_1_canEnq__3467_AND_epochManager_ch_ETC___d13606 =
	     rob$enqPort_1_canEnq && epochManager$checkEpoch_1_check &&
	     (!fetchStage$pipelines_0_canDeq ||
	      (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	       specTagManager$canClaim) &&
	      regRenamingTable_rename_0_canRename__3159_AND__ETC___d13229 &&
	      IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13602) ;
  assign rob_enqPort_1_canEnq__3467_AND_epochManager_ch_ETC___d13623 =
	     rob$enqPort_1_canEnq && epochManager$checkEpoch_1_check &&
	     (!fetchStage$pipelines_0_canDeq ||
	      (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	       specTagManager$canClaim) &&
	      regRenamingTable_rename_0_canRename__3159_AND__ETC___d13229 &&
	      IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13619) ;
  assign robdeqPort_0_deq_data_BITS_95_TO_32__q262 =
	     rob$deqPort_0_deq_data[95:32] ;
  assign rs1__h576040 =
	     (fetchStage$pipelines_0_first[88] &&
	      !fetchStage$pipelines_0_first[87]) ?
	       fetchStage$pipelines_0_first[86:82] :
	       5'd0 ;
  assign satp_csr__read__h531134 = { r1__read__h534734, csrf_ppn_reg } ;
  assign sbIdx__h91776 =
	     CAN_FIRE_RL_coreFix_memExe_doIssueSB ?
	       coreFix_memExe_reqStQ_data_0_lat_0$wget[65:64] :
	       coreFix_memExe_reqStQ_data_0_rl[65:64] ;
  assign scaprf_pcc_reg_read_wget__2773_BITS_13_TO_11_2_ETC___d12821 =
	     scaprf_pcc_reg_data_rl[13:11] < repBound__h577231 ;
  assign scaprf_pcc_reg_read_wget__2773_BITS_149_TO_86__ETC___d12780 =
	     scaprf_pcc_reg_data_rl[149:86] & mask__h584357 ;
  assign scaprf_pcc_reg_read_wget__2773_BITS_149_TO_86__ETC___d12785 =
	     newAddrDiff__h576958 == mask__h584357 ;
  assign scaprf_pcc_reg_read_wget__2773_BITS_149_TO_86__ETC___d14066 =
	     newAddrDiff__h617908 == mask__h584357 ;
  assign scaprf_pcc_reg_read_wget__2773_BITS_27_TO_25_2_ETC___d12820 =
	     scaprf_pcc_reg_data_rl[27:25] < repBound__h577231 ;
  assign scaprf_pcc_reg_read_wget__2773_BITS_85_TO_83_2_ETC___d12796 =
	     scaprf_pcc_reg_data_rl[85:83] < repBound__h577231 ;
  assign scause_csr__read__h530931 =
	     { r1__read__h534518, csrf_scause_code_reg } ;
  assign scounteren_csr__read__h530793 =
	     { r1__read__h534505, csrf_scounteren_cy_reg } ;
  assign sfd__h257326 = { value__h265553, 3'd0 } ;
  assign sfd__h273134 =
	     { 1'b0,
	       _theResult___fst_exp__h273042 != 8'd0,
	       sfdin__h273036[56:34] } +
	     25'd1 ;
  assign sfd__h281716 =
	     { 1'b0,
	       _theResult___fst_exp__h281698 != 8'd0,
	       _theResult___snd__h281649[56:34] } +
	     25'd1 ;
  assign sfd__h290900 =
	     { 1'b0,
	       _theResult___fst_exp__h290808 != 8'd0,
	       sfdin__h290802[56:34] } +
	     25'd1 ;
  assign sfd__h299512 =
	     { 1'b0,
	       _theResult___fst_exp__h299493 != 8'd0,
	       _theResult___snd__h299439[56:34] } +
	     25'd1 ;
  assign sfd__h303028 = { value__h311250, 3'd0 } ;
  assign sfd__h318831 =
	     { 1'b0,
	       _theResult___fst_exp__h318739 != 8'd0,
	       sfdin__h318733[56:34] } +
	     25'd1 ;
  assign sfd__h327413 =
	     { 1'b0,
	       _theResult___fst_exp__h327395 != 8'd0,
	       _theResult___snd__h327346[56:34] } +
	     25'd1 ;
  assign sfd__h336597 =
	     { 1'b0,
	       _theResult___fst_exp__h336505 != 8'd0,
	       sfdin__h336499[56:34] } +
	     25'd1 ;
  assign sfd__h345209 =
	     { 1'b0,
	       _theResult___fst_exp__h345190 != 8'd0,
	       _theResult___snd__h345136[56:34] } +
	     25'd1 ;
  assign sfd__h348723 = { value__h356945, 3'd0 } ;
  assign sfd__h364526 =
	     { 1'b0,
	       _theResult___fst_exp__h364434 != 8'd0,
	       sfdin__h364428[56:34] } +
	     25'd1 ;
  assign sfd__h373108 =
	     { 1'b0,
	       _theResult___fst_exp__h373090 != 8'd0,
	       _theResult___snd__h373041[56:34] } +
	     25'd1 ;
  assign sfd__h382292 =
	     { 1'b0,
	       _theResult___fst_exp__h382200 != 8'd0,
	       sfdin__h382194[56:34] } +
	     25'd1 ;
  assign sfd__h390904 =
	     { 1'b0,
	       _theResult___fst_exp__h390885 != 8'd0,
	       _theResult___snd__h390831[56:34] } +
	     25'd1 ;
  assign sfd__h402085 = { value__h406668, 32'd0 } ;
  assign sfd__h421129 =
	     { 1'b0,
	       _theResult___fst_exp__h421111 != 11'd0,
	       _theResult___snd__h421062[56:5] } +
	     54'd1 ;
  assign sfd__h430780 =
	     { 1'b0,
	       _theResult___fst_exp__h430688 != 11'd0,
	       sfdin__h430682[56:5] } +
	     54'd1 ;
  assign sfd__h439540 =
	     { 1'b0,
	       _theResult___fst_exp__h439521 != 11'd0,
	       _theResult___snd__h439467[56:5] } +
	     54'd1 ;
  assign sfd__h441079 = { value__h445521, 32'd0 } ;
  assign sfd__h459982 =
	     { 1'b0,
	       _theResult___fst_exp__h459964 != 11'd0,
	       _theResult___snd__h459915[56:5] } +
	     54'd1 ;
  assign sfd__h469633 =
	     { 1'b0,
	       _theResult___fst_exp__h469541 != 11'd0,
	       sfdin__h469535[56:5] } +
	     54'd1 ;
  assign sfd__h478393 =
	     { 1'b0,
	       _theResult___fst_exp__h478374 != 11'd0,
	       _theResult___snd__h478320[56:5] } +
	     54'd1 ;
  assign sfd__h480383 = { value__h484825, 32'd0 } ;
  assign sfd__h499286 =
	     { 1'b0,
	       _theResult___fst_exp__h499268 != 11'd0,
	       _theResult___snd__h499219[56:5] } +
	     54'd1 ;
  assign sfd__h508937 =
	     { 1'b0,
	       _theResult___fst_exp__h508845 != 11'd0,
	       sfdin__h508839[56:5] } +
	     54'd1 ;
  assign sfd__h517697 =
	     { 1'b0,
	       _theResult___fst_exp__h517678 != 11'd0,
	       _theResult___snd__h517624[56:5] } +
	     54'd1 ;
  assign sfdin__h273036 =
	     _theResult____h264931[56] ?
	       _theResult___snd__h273053 :
	       _theResult___snd__h273064 ;
  assign sfdin__h290802 =
	     _theResult____h282570[56] ?
	       _theResult___snd__h290819 :
	       _theResult___snd__h290830 ;
  assign sfdin__h318733 =
	     _theResult____h310630[56] ?
	       _theResult___snd__h318750 :
	       _theResult___snd__h318761 ;
  assign sfdin__h336499 =
	     _theResult____h328267[56] ?
	       _theResult___snd__h336516 :
	       _theResult___snd__h336527 ;
  assign sfdin__h364428 =
	     _theResult____h356325[56] ?
	       _theResult___snd__h364445 :
	       _theResult___snd__h364456 ;
  assign sfdin__h382194 =
	     _theResult____h373962[56] ?
	       _theResult___snd__h382211 :
	       _theResult___snd__h382222 ;
  assign sfdin__h430682 =
	     _theResult____h422452[56] ?
	       _theResult___snd__h430699 :
	       _theResult___snd__h430710 ;
  assign sfdin__h469535 =
	     _theResult____h461305[56] ?
	       _theResult___snd__h469552 :
	       _theResult___snd__h469563 ;
  assign sfdin__h508839 =
	     _theResult____h500609[56] ?
	       _theResult___snd__h508856 :
	       _theResult___snd__h508867 ;
  assign shiftData__h114243 =
	     coreFix_memExe_regToExeQ$first[75:12] << x__h114372 ;
  assign sie_csr__read__h530697 = { r1__read__h533990, 1'b0 } ;
  assign sip_csr__read__h531071 = { r1__read__h534524, 1'b0 } ;
  assign spec_bits__h609393 = specTagManager$currentSpecBits | y__h609406 ;
  assign sstatus_csr__read__h530627 = { r1__read__h533586, csrf_ie_vec_0 } ;
  assign stvec_csr__read__h530740 =
	     { r1__read__h534500, csrf_stvec_mode_low_reg } ;
  assign upd__h3097 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ?
	       MUX_csrf_minstret_ehr_data_lat_1$wset_1__VAL_1 :
	       MUX_csrf_minstret_ehr_data_lat_1$wset_1__VAL_2 ;
  assign upd__h3707 = n__read__h4917 + 64'd1 ;
  assign v__h224238 =
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d2769 ?
	       v__h224433 :
	       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ;
  assign v__h224433 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ==
	      3'd7) ?
	       3'd0 :
	       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP +
	       3'd1 ;
  assign v__h226258 =
	     IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d2863 ?
	       v__h226638 :
	       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP ;
  assign v__h226638 = coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP + 1'd1 ;
  assign v__h235345 =
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3022 ?
	       v__h235540 :
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP ;
  assign v__h235540 = coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP + 1'd1 ;
  assign v__h237794 =
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3106 ?
	       v__h237989 :
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP ;
  assign v__h237989 = coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP + 1'd1 ;
  assign v__h249647 =
	     IF_coreFix_memExe_memRespLdQ_enqReq_lat_1_whas_ETC___d3311 ?
	       v__h249842 :
	       coreFix_memExe_memRespLdQ_enqP ;
  assign v__h249842 = coreFix_memExe_memRespLdQ_enqP + 1'd1 ;
  assign v__h251547 =
	     IF_coreFix_memExe_forwardQ_enqReq_lat_1_whas___ETC___d3393 ?
	       v__h251742 :
	       coreFix_memExe_forwardQ_enqP ;
  assign v__h251742 = coreFix_memExe_forwardQ_enqP + 1'd1 ;
  assign v__h523816 =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_deqEn$whas ?
	       v__h523826 :
	       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit ;
  assign v__h523826 =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit + 2'd1 ;
  assign v__h524884 = v__h523816 - 2'd1 ;
  assign v__h528901 =
	     sbCons$lazyLookup_1_get[3] ? rf$read_1_rd1 : y_avValue__h530072 ;
  assign v__h553904 =
	     sbCons$lazyLookup_0_get[3] ? rf$read_0_rd1 : y_avValue__h554923 ;
  assign vaddr__h114238 =
	     coreFix_memExe_regToExeQ$first[139:76] +
	     { {32{coreFix_memExe_regToExeQfirst_BITS_189_TO_158__q5[31]}},
	       coreFix_memExe_regToExeQfirst_BITS_189_TO_158__q5 } ;
  assign value__h265553 =
	     { 1'b0,
	       coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
	       11'd0,
	       coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] } ;
  assign value__h311250 =
	     { 1'b0,
	       coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
	       11'd0,
	       coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] } ;
  assign value__h356945 =
	     { 1'b0,
	       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
	       11'd0,
	       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] } ;
  assign value__h406668 = { 1'b0, f1_exp__h401723 != 8'd0, f1_sfd__h401724 } ;
  assign value__h445521 = { 1'b0, f2_exp__h440717 != 8'd0, f2_sfd__h440718 } ;
  assign value__h484825 = { 1'b0, f3_exp__h480021 != 8'd0, f3_sfd__h480022 } ;
  assign vm_mode_reg__read__h534740 = { csrf_vm_mode_sv39_reg, 3'b0 } ;
  assign w__h567931 =
	     coreFix_globalSpecUpdate_correctSpecTag_0$whas ?
	       result__h567987 :
	       12'd4095 ;
  assign x__h114150 =
	     sbCons$lazyLookup_3_get[3] ? rf$read_3_rd1 : y_avValue__h113278 ;
  assign x__h114151 =
	     sbCons$lazyLookup_3_get[2] ? rf$read_3_rd2 : y_avValue__h113997 ;
  assign x__h114372 = { vaddr__h114238[2:0], 3'b0 } ;
  assign x__h124024 =
	     coreFix_memExe_dMem_cache_m_banks_0_processAmo[90] ?
	       curData__h123270[63:32] :
	       curData__h123270[31:0] ;
  assign x__h15064 =
	     mmio_dataReqQ_enqReq_lat_0$whas ?
	       mmio_dataReqQ_enqReq_lat_0$wget[141:78] :
	       mmio_dataReqQ_enqReq_rl[141:78] ;
  assign x__h216634 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[147:84] :
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[147:84] ;
  assign x__h228985 =
	     EN_dCacheToParent_fromP_enq ?
	       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget[2:0] :
	       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl[2:0] ;
  assign x__h256730 =
	     { (_theResult___exp__h300062 != 8'd255 ||
		_theResult___sfd__h300063 == 23'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4799,
	       out_f_exp__h300339,
	       out_f_sfd__h300340 } ;
  assign x__h283280 =
	     sfd__h257326 << (x__h283313[11] ? 12'hAAA : x__h283313) ;
  assign x__h283313 =
	     12'd57 -
	     _3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d4213 ;
  assign x__h302432 =
	     { (_theResult___exp__h345759 != 8'd255 ||
		_theResult___sfd__h345760 == 23'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6191,
	       out_f_exp__h346036,
	       out_f_sfd__h346037 } ;
  assign x__h31099 =
	     mmio_cRqQ_enqReq_lat_0$whas ?
	       mmio_cRqQ_enqReq_lat_0$wget[141:78] :
	       mmio_cRqQ_enqReq_rl[141:78] ;
  assign x__h328977 =
	     sfd__h303028 << (x__h329010[11] ? 12'hAAA : x__h329010) ;
  assign x__h329010 =
	     12'd57 -
	     _3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d5605 ;
  assign x__h348127 =
	     { (_theResult___exp__h391454 != 8'd255 ||
		_theResult___sfd__h391455 == 23'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7583,
	       out_f_exp__h391731,
	       out_f_sfd__h391732 } ;
  assign x__h374672 =
	     sfd__h348723 << (x__h374705[11] ? 12'hAAA : x__h374705) ;
  assign x__h374705 =
	     12'd57 -
	     _3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d6997 ;
  assign x__h401245 =
	     sbCons$lazyLookup_2_get[3] ? rf$read_2_rd1 : y_avValue__h398308 ;
  assign x__h401246 =
	     sbCons$lazyLookup_2_get[2] ? rf$read_2_rd2 : y_avValue__h399029 ;
  assign x__h401247 =
	     sbCons$lazyLookup_2_get[1] ? rf$read_2_rd3 : y_avValue__h399744 ;
  assign x__h423160 = sfd__h402085 << x__h423193 ;
  assign x__h423193 =
	     12'd57 -
	     _3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d8323 ;
  assign x__h462013 = sfd__h441079 << x__h462046 ;
  assign x__h462046 =
	     12'd57 -
	     _3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d9808 ;
  assign x__h47746 = mmio_pRqQ_data_0[31:0] ;
  assign x__h501317 = sfd__h480383 << x__h501350 ;
  assign x__h501350 =
	     12'd57 -
	     _3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d9038 ;
  assign x__h523106 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[226:225] == 2'd0) ?
	       _theResult___fst__h523117 :
	       a__h522569 ;
  assign x__h523132 = a__h522569[63] ^ b__h522570[63] ;
  assign x__h523746 =
	     (coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$D_OUT ==
	      64'd0) ?
	       { 64'hFFFFFFFFFFFFFFFF,
		 coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$D_OUT[139:76] } :
	       { coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divI_ETC___d10819,
		 coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divI_ETC___d10820 } ;
  assign x__h533571 = { csrf_frm_reg, csrf_fflags_reg } ;
  assign x__h537844 =
	     coreFix_aluExe_1_dispToRegQ$first[131] ?
	       rVal1__h530129 :
	       v__h528901 ;
  assign x__h537845 =
	     sbCons$lazyLookup_1_get[2] ? rf$read_1_rd2 : y_avValue__h535854 ;
  assign x__h560475 =
	     coreFix_aluExe_0_dispToRegQ$first[131] ?
	       rVal1__h554978 :
	       v__h553904 ;
  assign x__h560476 =
	     sbCons$lazyLookup_0_get[2] ? rf$read_0_rd2 : y_avValue__h558495 ;
  assign x__h567935 = 12'd1 << coreFix_aluExe_1_exeToFinQ$first[15:12] ;
  assign x__h567986 = 12'd1 << coreFix_aluExe_0_exeToFinQ$first[15:12] ;
  assign x__h577163 = scaprf_pcc_reg_data_rl[33:28] + 6'd14 ;
  assign x__h577269 = address__h576951 >> scaprf_pcc_reg_data_rl[33:28] ;
  assign x__h618085 = address__h617901 >> scaprf_pcc_reg_data_rl[33:28] ;
  assign x__h628321 = { cause_code__h625329, 2'b0 } ;
  assign x__h636333 = { 1'b0, csrf_spp_reg } ;
  assign x__h640953 =
	     NOT_rob_deqPort_0_canDeq__4671_4672_OR_rob_deq_ETC___d14870 ?
	       y_avValue_snd_snd_snd_fst__h640775 :
	       IF_rob_deqPort_0_canDeq__4671_THEN_IF_NOT_rob__ETC___d14899 ;
  assign x__h89816 =
	     coreFix_memExe_reqLdQ_data_0_lat_0$whas ?
	       coreFix_memExe_reqLdQ_data_0_lat_0$wget[68:64] :
	       coreFix_memExe_reqLdQ_data_0_rl[68:64] ;
  assign x__h89821 =
	     coreFix_memExe_reqLdQ_data_0_lat_0$whas ?
	       coreFix_memExe_reqLdQ_data_0_lat_0$wget[63:0] :
	       coreFix_memExe_reqLdQ_data_0_rl[63:0] ;
  assign x__h91885 = { 3'd0, sbIdx__h91776 } ;
  assign x__h91890 =
	     CAN_FIRE_RL_coreFix_memExe_doIssueSB ?
	       coreFix_memExe_reqStQ_data_0_lat_0$wget[63:0] :
	       coreFix_memExe_reqStQ_data_0_rl[63:0] ;
  assign x_addr__h238156 =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$whas ?
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wget[578:515] :
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl[578:515] ;
  assign x_data__h42975 =
	     EN_mmioToPlatform_pRq_enq ?
	       mmio_pRqQ_enqReq_lat_0$wget[31:0] :
	       mmio_pRqQ_enqReq_rl[31:0] ;
  assign x_data_imm__h597590 = fetchStage$pipelines_0_first[159:128] ;
  assign x_data_imm__h614051 = fetchStage$pipelines_1_first[159:128] ;
  assign x_decodeInfo_frm__h575724 = csrf_frm_reg ;
  assign x_quotient__h394153 =
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_OUT[75] ?
	       64'hFFFFFFFFFFFFFFFF :
	       ((coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_OUT[10] &&
		 coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_OUT[9]) ?
		  q___1__h394976 :
		  coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_OUT[203:140]) ;
  assign x_reg_ifc__read__h530536 = { 63'd0, csrf_stats_module_doStats } ;
  assign x_remainder__h394154 =
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_OUT[75] ?
	       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_OUT[74:11] :
	       ((coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_OUT[10] &&
		 coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_OUT[8]) ?
		  r___1__h395003 :
		  coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_OUT[139:76]) ;
  assign y__h184788 =
	     { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[570:518],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[94:90] } ;
  assign y__h540646 = coreFix_aluExe_1_regToExeQ$first[176:113] + 64'd4 ;
  assign y__h562984 = coreFix_aluExe_0_regToExeQ$first[176:113] + 64'd4 ;
  assign y__h567965 = ~x__h567935 ;
  assign y__h572655 =
	     { ~csrf_mideleg_11_reg,
	       1'd1,
	       ~csrf_mideleg_9_7_reg,
	       1'd1,
	       ~csrf_mideleg_5_3_reg,
	       1'd1,
	       ~csrf_mideleg_1_0_reg } ;
  assign y__h577196 = { mask__h584357[62:0], 1'd0 } ;
  assign y__h609406 = 12'd1 << specTagManager$nextSpecTag ;
  assign y__h640728 =
	     NOT_rob_deqPort_0_canDeq__4671_4672_OR_rob_deq_ETC___d14870 ?
	       y_avValue_snd_snd_snd_snd_snd__h640781 :
	       IF_rob_deqPort_0_canDeq__4671_THEN_IF_NOT_rob__ETC___d14782 ;
  assign y_avValue__h113278 =
	     NOT_coreFix_memExe_bypassWire_0_whas__329_335__ETC___d1356 ?
	       coreFix_aluExe_0_bypassWire_3$wget[63:0] :
	       IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1424 ;
  assign y_avValue__h113997 =
	     NOT_coreFix_memExe_bypassWire_0_whas__329_335__ETC___d1385 ?
	       coreFix_aluExe_0_bypassWire_3$wget[63:0] :
	       IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1432 ;
  assign y_avValue__h398308 =
	     NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d7890 ?
	       coreFix_aluExe_0_bypassWire_3$wget[63:0] :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8017 ;
  assign y_avValue__h399029 =
	     NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d7919 ?
	       coreFix_aluExe_0_bypassWire_3$wget[63:0] :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8025 ;
  assign y_avValue__h399744 =
	     NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d7945 ?
	       coreFix_aluExe_0_bypassWire_3$wget[63:0] :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8033 ;
  assign y_avValue__h530072 =
	     NOT_coreFix_aluExe_1_bypassWire_0_whas__1073_1_ETC___d11100 ?
	       coreFix_aluExe_0_bypassWire_3$wget[63:0] :
	       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11506 ;
  assign y_avValue__h535854 =
	     NOT_coreFix_aluExe_1_bypassWire_0_whas__1073_1_ETC___d11130 ?
	       coreFix_aluExe_0_bypassWire_3$wget[63:0] :
	       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11515 ;
  assign y_avValue__h554923 =
	     NOT_coreFix_aluExe_0_bypassWire_0_whas__1929_1_ETC___d11956 ?
	       coreFix_aluExe_0_bypassWire_3$wget[63:0] :
	       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d12180 ;
  assign y_avValue__h558495 =
	     NOT_coreFix_aluExe_0_bypassWire_0_whas__1929_1_ETC___d11986 ?
	       coreFix_aluExe_0_bypassWire_3$wget[63:0] :
	       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d12189 ;
  assign y_avValue_fst__h602690 =
	     (fetchStage$pipelines_0_first[194:192] == 3'd1) ?
	       spec_bits__h609393 :
	       specTagManager$currentSpecBits ;
  assign y_avValue_fst__h639132 =
	     (!rob$deqPort_0_deq_data[25] || rob$deqPort_0_deq_data[18] ||
	      rob$deqPort_0_deq_data[266] ||
	      rob$deqPort_0_deq_data[356:352] == 5'd0 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd21 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd17 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd18 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd13 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd16 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd15 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd19 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd20) ?
	       5'd0 :
	       rob$deqPort_0_deq_data[31:27] ;
  assign y_avValue_fst__h640624 =
	     IF_rob_deqPort_0_canDeq__4671_THEN_IF_NOT_rob__ETC___d14877 |
	     rob$deqPort_1_deq_data[31:27] ;
  assign y_avValue_fst__h640652 =
	     (!rob$deqPort_1_deq_data[25] || rob$deqPort_1_deq_data[18] ||
	      rob$deqPort_1_deq_data[266] ||
	      rob$deqPort_1_deq_data[356:352] == 5'd0 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd21 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd17 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd18 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd13 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd16 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd15 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd19 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd20) ?
	       IF_rob_deqPort_0_canDeq__4671_THEN_IF_NOT_rob__ETC___d14877 :
	       y_avValue_fst__h640624 ;
  assign y_avValue_new_pc__h628066 =
	     (csrf_stvec_mode_low_reg && commitStage_commitTrap[36]) ?
	       base__h628306 + { 58'd0, x__h628321 } :
	       base__h628306 ;
  assign y_avValue_new_pc__h628252 =
	     (csrf_mtvec_mode_low_reg && commitStage_commitTrap[36]) ?
	       base__h628326 + { 58'd0, x__h628321 } :
	       base__h628326 ;
  assign y_avValue_snd_fst__h602964 =
	     ((fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	       specTagManager$canClaim) &&
	      regRenamingTable$rename_0_canRename &&
	      NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13179) ?
	       y_avValue_snd_fst__h602999 :
	       specTagManager$currentSpecBits ;
  assign y_avValue_snd_fst__h602999 =
	     IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13239 ?
	       y_avValue_fst__h602690 :
	       specTagManager$currentSpecBits ;
  assign y_avValue_snd_snd_snd_fst__h639566 =
	     (!rob$deqPort_0_deq_data[25] || rob$deqPort_0_deq_data[18] ||
	      rob$deqPort_0_deq_data[266] ||
	      rob$deqPort_0_deq_data[356:352] == 5'd0 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd21 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd17 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd18 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd13 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd16 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd15 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd19 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd20) ?
	       2'd0 :
	       2'd1 ;
  assign y_avValue_snd_snd_snd_fst__h640775 =
	     (!rob$deqPort_1_deq_data[25] || rob$deqPort_1_deq_data[18] ||
	      rob$deqPort_1_deq_data[266] ||
	      rob$deqPort_1_deq_data[356:352] == 5'd0 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd21 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd17 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd18 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd13 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd16 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd15 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd19 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd20) ?
	       IF_rob_deqPort_0_canDeq__4671_THEN_IF_NOT_rob__ETC___d14899 :
	       y_avValue_snd_snd_snd_fst__h640804 ;
  assign y_avValue_snd_snd_snd_fst__h640804 =
	     IF_rob_deqPort_0_canDeq__4671_THEN_IF_NOT_rob__ETC___d14899 +
	     2'd1 ;
  assign y_avValue_snd_snd_snd_snd_snd__h639572 =
	     (!rob$deqPort_0_deq_data[25] || rob$deqPort_0_deq_data[18] ||
	      rob$deqPort_0_deq_data[266] ||
	      rob$deqPort_0_deq_data[356:352] == 5'd0 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd21 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd17 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd18 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd13 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd16 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd15 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd19 ||
	      rob$deqPort_0_deq_data[356:352] == 5'd20) ?
	       64'd0 :
	       64'd1 ;
  assign y_avValue_snd_snd_snd_snd_snd__h640781 =
	     (!rob$deqPort_1_deq_data[25] || rob$deqPort_1_deq_data[18] ||
	      rob$deqPort_1_deq_data[266] ||
	      rob$deqPort_1_deq_data[356:352] == 5'd0 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd21 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd17 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd18 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd13 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd16 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd15 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd19 ||
	      rob$deqPort_1_deq_data[356:352] == 5'd20) ?
	       IF_rob_deqPort_0_canDeq__4671_THEN_IF_NOT_rob__ETC___d14782 :
	       y_avValue_snd_snd_snd_snd_snd__h640810 ;
  assign y_avValue_snd_snd_snd_snd_snd__h640810 =
	     IF_rob_deqPort_0_canDeq__4671_THEN_IF_NOT_rob__ETC___d14782 +
	     64'd1 ;
  always@(mmio_cRqQ_data_0)
  begin
    case (mmio_cRqQ_data_0[77:76])
      2'd0, 2'd1, 2'd2:
	  CASE_mmio_cRqQ_data_0_BITS_77_TO_76_0_mmio_cRq_ETC__q1 =
	      mmio_cRqQ_data_0[77:72];
      2'd3:
	  CASE_mmio_cRqQ_data_0_BITS_77_TO_76_0_mmio_cRq_ETC__q1 =
	      { 2'd3, mmio_cRqQ_data_0[75:72] };
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq or
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[89:87])
      3'd0:
	  x__h127992 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[63:0];
      3'd1:
	  x__h127992 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[127:64];
      3'd2:
	  x__h127992 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[191:128];
      3'd3:
	  x__h127992 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[255:192];
      3'd4:
	  x__h127992 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[319:256];
      3'd5:
	  x__h127992 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[383:320];
      3'd6:
	  x__h127992 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[447:384];
      3'd7:
	  x__h127992 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:448];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1 or
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2 or
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3 or
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4 or
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5 or
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6 or
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP)
      3'd0:
	  x__h216092 =
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0;
      3'd1:
	  x__h216092 =
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1;
      3'd2:
	  x__h216092 =
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2;
      3'd3:
	  x__h216092 =
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3;
      3'd4:
	  x__h216092 =
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4;
      3'd5:
	  x__h216092 =
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5;
      3'd6:
	  x__h216092 =
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6;
      3'd7:
	  x__h216092 =
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7;
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  addr__h218785 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[581:518];
      1'd1:
	  addr__h218785 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[581:518];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_processAmo or
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_processAmo[93:91])
      3'd0:
	  curData__h123270 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[63:0];
      3'd1:
	  curData__h123270 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[127:64];
      3'd2:
	  curData__h123270 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[191:128];
      3'd3:
	  curData__h123270 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[255:192];
      3'd4:
	  curData__h123270 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[319:256];
      3'd5:
	  curData__h123270 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[383:320];
      3'd6:
	  curData__h123270 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[447:384];
      3'd7:
	  curData__h123270 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:448];
    endcase
  end
  always@(commitStage_commitTrap)
  begin
    case (commitStage_commitTrap[35:32])
      4'd0, 4'd3: trap_val__h626385 = commitStage_commitTrap[260:197];
      4'd2: trap_val__h626385 = { 32'd0, commitStage_commitTrap[31:0] };
      default: trap_val__h626385 =
		   (commitStage_commitTrap[35:32] != 4'd8 &&
		    commitStage_commitTrap[35:32] != 4'd9 &&
		    commitStage_commitTrap[35:32] != 4'd11) ?
		     commitStage_commitTrap[100:37] :
		     64'd0;
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  x__h220334 = coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[2:0];
      1'd1:
	  x__h220334 = coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[2:0];
    endcase
  end
  always@(coreFix_aluExe_1_dispToRegQ$first or
	  fflags_csr__read__h530406 or
	  frm_csr__read__h530417 or
	  fcsr_csr__read__h530431 or
	  sstatus_csr__read__h530627 or
	  sie_csr__read__h530697 or
	  stvec_csr__read__h530740 or
	  scounteren_csr__read__h530793 or
	  csrf_sscratch_csr or
	  csrf_sepc_csr or
	  scause_csr__read__h530931 or
	  csrf_stval_csr or
	  sip_csr__read__h531071 or
	  satp_csr__read__h531134 or
	  mstatus_csr__read__h531277 or
	  medeleg_csr__read__h531425 or
	  mideleg_csr__read__h531520 or
	  mie_csr__read__h531644 or
	  mtvec_csr__read__h531726 or
	  mcounteren_csr__read__h531818 or
	  csrf_mscratch_csr or
	  csrf_mepc_csr or
	  mcause_csr__read__h532073 or
	  csrf_mtval_csr or
	  mip_csr__read__h532306 or
	  csrf_rg_tselect or
	  rg_tdata1__read__h533261 or
	  csrf_rg_tdata2 or
	  csrf_rg_tdata3 or
	  x_reg_ifc__read__h530536 or
	  csrf_mcycle_ehr_data_rl or
	  csrf_minstret_ehr_data_rl or csrf_time_reg)
  begin
    case (coreFix_aluExe_1_dispToRegQ$first[130:119])
      12'd1: rVal1__h530129 = fflags_csr__read__h530406;
      12'd2: rVal1__h530129 = frm_csr__read__h530417;
      12'd3: rVal1__h530129 = fcsr_csr__read__h530431;
      12'd256: rVal1__h530129 = sstatus_csr__read__h530627;
      12'd260: rVal1__h530129 = sie_csr__read__h530697;
      12'd261: rVal1__h530129 = stvec_csr__read__h530740;
      12'd262: rVal1__h530129 = scounteren_csr__read__h530793;
      12'd320: rVal1__h530129 = csrf_sscratch_csr;
      12'd321: rVal1__h530129 = csrf_sepc_csr;
      12'd322: rVal1__h530129 = scause_csr__read__h530931;
      12'd323: rVal1__h530129 = csrf_stval_csr;
      12'd324: rVal1__h530129 = sip_csr__read__h531071;
      12'd384: rVal1__h530129 = satp_csr__read__h531134;
      12'd768: rVal1__h530129 = mstatus_csr__read__h531277;
      12'd769: rVal1__h530129 = 64'h800000000014112D;
      12'd770: rVal1__h530129 = medeleg_csr__read__h531425;
      12'd771: rVal1__h530129 = mideleg_csr__read__h531520;
      12'd772: rVal1__h530129 = mie_csr__read__h531644;
      12'd773: rVal1__h530129 = mtvec_csr__read__h531726;
      12'd774: rVal1__h530129 = mcounteren_csr__read__h531818;
      12'd832: rVal1__h530129 = csrf_mscratch_csr;
      12'd833: rVal1__h530129 = csrf_mepc_csr;
      12'd834: rVal1__h530129 = mcause_csr__read__h532073;
      12'd835: rVal1__h530129 = csrf_mtval_csr;
      12'd836: rVal1__h530129 = mip_csr__read__h532306;
      12'd1952: rVal1__h530129 = csrf_rg_tselect;
      12'd1953: rVal1__h530129 = rg_tdata1__read__h533261;
      12'd1954: rVal1__h530129 = csrf_rg_tdata2;
      12'd1955: rVal1__h530129 = csrf_rg_tdata3;
      12'd2048, 12'd3857, 12'd3858, 12'd3859, 12'd3860:
	  rVal1__h530129 = 64'd0;
      12'd2049: rVal1__h530129 = x_reg_ifc__read__h530536;
      12'd2816, 12'd3072: rVal1__h530129 = csrf_mcycle_ehr_data_rl;
      12'd2818, 12'd3074: rVal1__h530129 = csrf_minstret_ehr_data_rl;
      12'd3073: rVal1__h530129 = csrf_time_reg;
      default: rVal1__h530129 = 64'b0;
    endcase
  end
  always@(coreFix_aluExe_0_dispToRegQ$first or
	  fflags_csr__read__h530406 or
	  frm_csr__read__h530417 or
	  fcsr_csr__read__h530431 or
	  sstatus_csr__read__h530627 or
	  sie_csr__read__h530697 or
	  stvec_csr__read__h530740 or
	  scounteren_csr__read__h530793 or
	  csrf_sscratch_csr or
	  csrf_sepc_csr or
	  scause_csr__read__h530931 or
	  csrf_stval_csr or
	  sip_csr__read__h531071 or
	  satp_csr__read__h531134 or
	  mstatus_csr__read__h531277 or
	  medeleg_csr__read__h531425 or
	  mideleg_csr__read__h531520 or
	  mie_csr__read__h531644 or
	  mtvec_csr__read__h531726 or
	  mcounteren_csr__read__h531818 or
	  csrf_mscratch_csr or
	  csrf_mepc_csr or
	  mcause_csr__read__h532073 or
	  csrf_mtval_csr or
	  mip_csr__read__h532306 or
	  csrf_rg_tselect or
	  rg_tdata1__read__h533261 or
	  csrf_rg_tdata2 or
	  csrf_rg_tdata3 or
	  x_reg_ifc__read__h530536 or
	  csrf_mcycle_ehr_data_rl or
	  csrf_minstret_ehr_data_rl or csrf_time_reg)
  begin
    case (coreFix_aluExe_0_dispToRegQ$first[130:119])
      12'd1: rVal1__h554978 = fflags_csr__read__h530406;
      12'd2: rVal1__h554978 = frm_csr__read__h530417;
      12'd3: rVal1__h554978 = fcsr_csr__read__h530431;
      12'd256: rVal1__h554978 = sstatus_csr__read__h530627;
      12'd260: rVal1__h554978 = sie_csr__read__h530697;
      12'd261: rVal1__h554978 = stvec_csr__read__h530740;
      12'd262: rVal1__h554978 = scounteren_csr__read__h530793;
      12'd320: rVal1__h554978 = csrf_sscratch_csr;
      12'd321: rVal1__h554978 = csrf_sepc_csr;
      12'd322: rVal1__h554978 = scause_csr__read__h530931;
      12'd323: rVal1__h554978 = csrf_stval_csr;
      12'd324: rVal1__h554978 = sip_csr__read__h531071;
      12'd384: rVal1__h554978 = satp_csr__read__h531134;
      12'd768: rVal1__h554978 = mstatus_csr__read__h531277;
      12'd769: rVal1__h554978 = 64'h800000000014112D;
      12'd770: rVal1__h554978 = medeleg_csr__read__h531425;
      12'd771: rVal1__h554978 = mideleg_csr__read__h531520;
      12'd772: rVal1__h554978 = mie_csr__read__h531644;
      12'd773: rVal1__h554978 = mtvec_csr__read__h531726;
      12'd774: rVal1__h554978 = mcounteren_csr__read__h531818;
      12'd832: rVal1__h554978 = csrf_mscratch_csr;
      12'd833: rVal1__h554978 = csrf_mepc_csr;
      12'd834: rVal1__h554978 = mcause_csr__read__h532073;
      12'd835: rVal1__h554978 = csrf_mtval_csr;
      12'd836: rVal1__h554978 = mip_csr__read__h532306;
      12'd1952: rVal1__h554978 = csrf_rg_tselect;
      12'd1953: rVal1__h554978 = rg_tdata1__read__h533261;
      12'd1954: rVal1__h554978 = csrf_rg_tdata2;
      12'd1955: rVal1__h554978 = csrf_rg_tdata3;
      12'd2048, 12'd3857, 12'd3858, 12'd3859, 12'd3860:
	  rVal1__h554978 = 64'd0;
      12'd2049: rVal1__h554978 = x_reg_ifc__read__h530536;
      12'd2816, 12'd3072: rVal1__h554978 = csrf_mcycle_ehr_data_rl;
      12'd2818, 12'd3074: rVal1__h554978 = csrf_minstret_ehr_data_rl;
      12'd3073: rVal1__h554978 = csrf_time_reg;
      default: rVal1__h554978 = 64'b0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0, 3'd1: _theResult___fst_exp__h264913 = 8'd255;
      3'd2:
	  _theResult___fst_exp__h264913 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		8'd254 :
		8'd255;
      3'd3:
	  _theResult___fst_exp__h264913 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		8'd255 :
		8'd254;
      3'd4: _theResult___fst_exp__h264913 = 8'd254;
      default: _theResult___fst_exp__h264913 = 8'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0, 3'd1: _theResult___fst_sfd__h264914 = 23'd0;
      3'd2:
	  _theResult___fst_sfd__h264914 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		23'd8388607 :
		23'd0;
      3'd3:
	  _theResult___fst_sfd__h264914 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		23'd0 :
		23'd8388607;
      3'd4: _theResult___fst_sfd__h264914 = 23'd8388607;
      default: _theResult___fst_sfd__h264914 = 23'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0, 3'd1: _theResult___fst_exp__h310612 = 8'd255;
      3'd2:
	  _theResult___fst_exp__h310612 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		8'd254 :
		8'd255;
      3'd3:
	  _theResult___fst_exp__h310612 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		8'd255 :
		8'd254;
      3'd4: _theResult___fst_exp__h310612 = 8'd254;
      default: _theResult___fst_exp__h310612 = 8'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0, 3'd1: _theResult___fst_sfd__h310613 = 23'd0;
      3'd2:
	  _theResult___fst_sfd__h310613 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		23'd8388607 :
		23'd0;
      3'd3:
	  _theResult___fst_sfd__h310613 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		23'd0 :
		23'd8388607;
      3'd4: _theResult___fst_sfd__h310613 = 23'd8388607;
      default: _theResult___fst_sfd__h310613 = 23'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0, 3'd1: _theResult___fst_exp__h356307 = 8'd255;
      3'd2:
	  _theResult___fst_exp__h356307 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		8'd254 :
		8'd255;
      3'd3:
	  _theResult___fst_exp__h356307 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		8'd255 :
		8'd254;
      3'd4: _theResult___fst_exp__h356307 = 8'd254;
      default: _theResult___fst_exp__h356307 = 8'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0, 3'd1: _theResult___fst_sfd__h356308 = 23'd0;
      3'd2:
	  _theResult___fst_sfd__h356308 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		23'd8388607 :
		23'd0;
      3'd3:
	  _theResult___fst_sfd__h356308 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		23'd0 :
		23'd8388607;
      3'd4: _theResult___fst_sfd__h356308 = 23'd8388607;
      default: _theResult___fst_sfd__h356308 = 23'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q7 = 11'd2046;
      3'd2:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q7 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
		11'd2047 :
		11'd2046;
      3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q7 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
		11'd2046 :
		11'd2047;
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q7 = 11'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q8 =
	      52'hFFFFFFFFFFFFF;
      3'd2:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q8 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
		52'd0 :
		52'hFFFFFFFFFFFFF;
      3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q8 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
		52'hFFFFFFFFFFFFF :
		52'd0;
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q8 = 52'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q9 = 11'd2046;
      3'd2:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q9 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
		11'd2047 :
		11'd2046;
      3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q9 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
		11'd2046 :
		11'd2047;
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q9 = 11'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q10 =
	      52'hFFFFFFFFFFFFF;
      3'd2:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q10 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
		52'd0 :
		52'hFFFFFFFFFFFFF;
      3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q10 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
		52'hFFFFFFFFFFFFF :
		52'd0;
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q10 = 52'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q11 = 11'd2046;
      3'd2:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q11 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
		11'd2047 :
		11'd2046;
      3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q11 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
		11'd2046 :
		11'd2047;
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q11 = 11'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q12 =
	      52'hFFFFFFFFFFFFF;
      3'd2:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q12 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
		52'd0 :
		52'hFFFFFFFFFFFFF;
      3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q12 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
		52'hFFFFFFFFFFFFF :
		52'd0;
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q12 = 52'd0;
    endcase
  end
  always@(commitStage_commitTrap)
  begin
    case (commitStage_commitTrap[35:32])
      4'd0,
      4'd1,
      4'd2,
      4'd3,
      4'd4,
      4'd5,
      4'd6,
      4'd7,
      4'd8,
      4'd9,
      4'd11,
      4'd12,
      4'd13:
	  i__h625344 = commitStage_commitTrap[35:32];
      default: i__h625344 = 4'd15;
    endcase
  end
  always@(commitStage_commitTrap)
  begin
    case (commitStage_commitTrap[35:32])
      4'd0, 4'd1, 4'd3, 4'd4, 4'd5, 4'd7, 4'd8, 4'd9:
	  i__h625504 = commitStage_commitTrap[35:32];
      default: i__h625504 = 4'd11;
    endcase
  end
  always@(coreFix_memExe_lsq$firstLd or coreFix_memExe_respLrScAmoQ_data_0)
  begin
    case (coreFix_memExe_lsq$firstLd[19])
      1'd0:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_39__ETC___d1110 =
	      coreFix_memExe_respLrScAmoQ_data_0[31:0];
      1'd1:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_39__ETC___d1110 =
	      coreFix_memExe_respLrScAmoQ_data_0[63:32];
    endcase
  end
  always@(coreFix_memExe_lsq$firstLd or coreFix_memExe_respLrScAmoQ_data_0)
  begin
    case (coreFix_memExe_lsq$firstLd[19:18])
      2'd0:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_39__ETC___d1121 =
	      coreFix_memExe_respLrScAmoQ_data_0[15:0];
      2'd1:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_39__ETC___d1121 =
	      coreFix_memExe_respLrScAmoQ_data_0[31:16];
      2'd2:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_39__ETC___d1121 =
	      coreFix_memExe_respLrScAmoQ_data_0[47:32];
      2'd3:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_39__ETC___d1121 =
	      coreFix_memExe_respLrScAmoQ_data_0[63:48];
    endcase
  end
  always@(coreFix_memExe_lsq$firstLd or coreFix_memExe_respLrScAmoQ_data_0)
  begin
    case (coreFix_memExe_lsq$firstLd[19:17])
      3'd0:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_39__ETC___d1135 =
	      coreFix_memExe_respLrScAmoQ_data_0[7:0];
      3'd1:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_39__ETC___d1135 =
	      coreFix_memExe_respLrScAmoQ_data_0[15:8];
      3'd2:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_39__ETC___d1135 =
	      coreFix_memExe_respLrScAmoQ_data_0[23:16];
      3'd3:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_39__ETC___d1135 =
	      coreFix_memExe_respLrScAmoQ_data_0[31:24];
      3'd4:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_39__ETC___d1135 =
	      coreFix_memExe_respLrScAmoQ_data_0[39:32];
      3'd5:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_39__ETC___d1135 =
	      coreFix_memExe_respLrScAmoQ_data_0[47:40];
      3'd6:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_39__ETC___d1135 =
	      coreFix_memExe_respLrScAmoQ_data_0[55:48];
      3'd7:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_39__ETC___d1135 =
	      coreFix_memExe_respLrScAmoQ_data_0[63:56];
    endcase
  end
  always@(coreFix_memExe_lsq$firstLd or mmio_dataRespQ_data_0)
  begin
    case (coreFix_memExe_lsq$firstLd[19:18])
      2'd0:
	  SEL_ARR_mmio_dataRespQ_data_0_75_BITS_15_TO_0__ETC___d1171 =
	      mmio_dataRespQ_data_0[15:0];
      2'd1:
	  SEL_ARR_mmio_dataRespQ_data_0_75_BITS_15_TO_0__ETC___d1171 =
	      mmio_dataRespQ_data_0[31:16];
      2'd2:
	  SEL_ARR_mmio_dataRespQ_data_0_75_BITS_15_TO_0__ETC___d1171 =
	      mmio_dataRespQ_data_0[47:32];
      2'd3:
	  SEL_ARR_mmio_dataRespQ_data_0_75_BITS_15_TO_0__ETC___d1171 =
	      mmio_dataRespQ_data_0[63:48];
    endcase
  end
  always@(coreFix_memExe_lsq$firstLd or mmio_dataRespQ_data_0)
  begin
    case (coreFix_memExe_lsq$firstLd[19])
      1'd0:
	  SEL_ARR_mmio_dataRespQ_data_0_75_BITS_31_TO_0__ETC___d1162 =
	      mmio_dataRespQ_data_0[31:0];
      1'd1:
	  SEL_ARR_mmio_dataRespQ_data_0_75_BITS_31_TO_0__ETC___d1162 =
	      mmio_dataRespQ_data_0[63:32];
    endcase
  end
  always@(coreFix_memExe_lsq$firstLd or mmio_dataRespQ_data_0)
  begin
    case (coreFix_memExe_lsq$firstLd[19:17])
      3'd0:
	  SEL_ARR_mmio_dataRespQ_data_0_75_BITS_7_TO_0_1_ETC___d1184 =
	      mmio_dataRespQ_data_0[7:0];
      3'd1:
	  SEL_ARR_mmio_dataRespQ_data_0_75_BITS_7_TO_0_1_ETC___d1184 =
	      mmio_dataRespQ_data_0[15:8];
      3'd2:
	  SEL_ARR_mmio_dataRespQ_data_0_75_BITS_7_TO_0_1_ETC___d1184 =
	      mmio_dataRespQ_data_0[23:16];
      3'd3:
	  SEL_ARR_mmio_dataRespQ_data_0_75_BITS_7_TO_0_1_ETC___d1184 =
	      mmio_dataRespQ_data_0[31:24];
      3'd4:
	  SEL_ARR_mmio_dataRespQ_data_0_75_BITS_7_TO_0_1_ETC___d1184 =
	      mmio_dataRespQ_data_0[39:32];
      3'd5:
	  SEL_ARR_mmio_dataRespQ_data_0_75_BITS_7_TO_0_1_ETC___d1184 =
	      mmio_dataRespQ_data_0[47:40];
      3'd6:
	  SEL_ARR_mmio_dataRespQ_data_0_75_BITS_7_TO_0_1_ETC___d1184 =
	      mmio_dataRespQ_data_0[55:48];
      3'd7:
	  SEL_ARR_mmio_dataRespQ_data_0_75_BITS_7_TO_0_1_ETC___d1184 =
	      mmio_dataRespQ_data_0[63:56];
    endcase
  end
  always@(coreFix_memExe_dTlb$procResp)
  begin
    case (coreFix_memExe_dTlb$procResp[105:103])
      3'd0, 3'd2:
	  CASE_coreFix_memExe_dTlbprocResp_BITS_105_TO__ETC__q13 = 4'd4;
      default: CASE_coreFix_memExe_dTlbprocResp_BITS_105_TO__ETC__q13 = 4'd6;
    endcase
  end
  always@(coreFix_memExe_dTlb$procResp)
  begin
    case (coreFix_memExe_dTlb$procResp[109:106])
      4'd0, 4'd1, 4'd2, 4'd3, 4'd4, 4'd5, 4'd6, 4'd7, 4'd8, 4'd9:
	  CASE_coreFix_memExe_dTlbprocResp_BITS_109_TO__ETC__q14 =
	      coreFix_memExe_dTlb$procResp[109:106];
      4'd11: CASE_coreFix_memExe_dTlbprocResp_BITS_109_TO__ETC__q14 = 4'd10;
      4'd12: CASE_coreFix_memExe_dTlbprocResp_BITS_109_TO__ETC__q14 = 4'd11;
      4'd13: CASE_coreFix_memExe_dTlbprocResp_BITS_109_TO__ETC__q14 = 4'd12;
      default: CASE_coreFix_memExe_dTlbprocResp_BITS_109_TO__ETC__q14 = 4'd13;
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2613 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[65:2];
      1'd1:
	  SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2613 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[65:2];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q15 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[514:451];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q15 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[514:451];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q16 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[450:387];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q16 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[450:387];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q17 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[386:323];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q17 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[386:323];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q18 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[322:259];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q18 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[322:259];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q19 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[258:195];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q19 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[258:195];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q20 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[194:131];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q20 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[194:131];
    endcase
  end
  always@(guard__h273650 or
	  _theResult___fst_exp__h281698 or
	  out_exp__h282143 or _theResult___exp__h282140)
  begin
    case (guard__h273650)
      2'b0, 2'b01:
	  CASE_guard73650_0b0_theResult___fst_exp81698_0_ETC__q25 =
	      _theResult___fst_exp__h281698;
      2'b10:
	  CASE_guard73650_0b0_theResult___fst_exp81698_0_ETC__q25 =
	      out_exp__h282143;
      2'b11:
	  CASE_guard73650_0b0_theResult___fst_exp81698_0_ETC__q25 =
	      _theResult___exp__h282140;
    endcase
  end
  always@(guard__h273650 or
	  _theResult___fst_exp__h281698 or _theResult___exp__h282140)
  begin
    case (guard__h273650)
      2'b0:
	  CASE_guard73650_0b0_theResult___fst_exp81698_0_ETC__q26 =
	      _theResult___fst_exp__h281698;
      2'b01, 2'b10, 2'b11:
	  CASE_guard73650_0b0_theResult___fst_exp81698_0_ETC__q26 =
	      _theResult___exp__h282140;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  CASE_guard73650_0b0_theResult___fst_exp81698_0_ETC__q25 or
	  CASE_guard73650_0b0_theResult___fst_exp81698_0_ETC__q26 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4191 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4193 or
	  _theResult___fst_exp__h281698)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  _theResult___fst_exp__h282218 =
	      CASE_guard73650_0b0_theResult___fst_exp81698_0_ETC__q25;
      3'd1:
	  _theResult___fst_exp__h282218 =
	      CASE_guard73650_0b0_theResult___fst_exp81698_0_ETC__q26;
      3'd2:
	  _theResult___fst_exp__h282218 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4191;
      3'd3:
	  _theResult___fst_exp__h282218 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4193;
      3'd4: _theResult___fst_exp__h282218 = _theResult___fst_exp__h281698;
      default: _theResult___fst_exp__h282218 = 8'd0;
    endcase
  end
  always@(guard__h264941 or
	  _theResult___fst_exp__h273042 or
	  out_exp__h273561 or _theResult___exp__h273558)
  begin
    case (guard__h264941)
      2'b0, 2'b01:
	  CASE_guard64941_0b0_theResult___fst_exp73042_0_ETC__q27 =
	      _theResult___fst_exp__h273042;
      2'b10:
	  CASE_guard64941_0b0_theResult___fst_exp73042_0_ETC__q27 =
	      out_exp__h273561;
      2'b11:
	  CASE_guard64941_0b0_theResult___fst_exp73042_0_ETC__q27 =
	      _theResult___exp__h273558;
    endcase
  end
  always@(guard__h264941 or
	  _theResult___fst_exp__h273042 or _theResult___exp__h273558)
  begin
    case (guard__h264941)
      2'b0:
	  CASE_guard64941_0b0_theResult___fst_exp73042_0_ETC__q28 =
	      _theResult___fst_exp__h273042;
      2'b01, 2'b10, 2'b11:
	  CASE_guard64941_0b0_theResult___fst_exp73042_0_ETC__q28 =
	      _theResult___exp__h273558;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  CASE_guard64941_0b0_theResult___fst_exp73042_0_ETC__q27 or
	  CASE_guard64941_0b0_theResult___fst_exp73042_0_ETC__q28 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d3969 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d3972 or
	  _theResult___fst_exp__h273042)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  _theResult___fst_exp__h273636 =
	      CASE_guard64941_0b0_theResult___fst_exp73042_0_ETC__q27;
      3'd1:
	  _theResult___fst_exp__h273636 =
	      CASE_guard64941_0b0_theResult___fst_exp73042_0_ETC__q28;
      3'd2:
	  _theResult___fst_exp__h273636 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d3969;
      3'd3:
	  _theResult___fst_exp__h273636 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d3972;
      3'd4: _theResult___fst_exp__h273636 = _theResult___fst_exp__h273042;
      default: _theResult___fst_exp__h273636 = 8'd0;
    endcase
  end
  always@(guard__h282580 or
	  _theResult___fst_exp__h290808 or
	  out_exp__h291327 or _theResult___exp__h291324)
  begin
    case (guard__h282580)
      2'b0, 2'b01:
	  CASE_guard82580_0b0_theResult___fst_exp90808_0_ETC__q33 =
	      _theResult___fst_exp__h290808;
      2'b10:
	  CASE_guard82580_0b0_theResult___fst_exp90808_0_ETC__q33 =
	      out_exp__h291327;
      2'b11:
	  CASE_guard82580_0b0_theResult___fst_exp90808_0_ETC__q33 =
	      _theResult___exp__h291324;
    endcase
  end
  always@(guard__h282580 or
	  _theResult___fst_exp__h290808 or _theResult___exp__h291324)
  begin
    case (guard__h282580)
      2'b0:
	  CASE_guard82580_0b0_theResult___fst_exp90808_0_ETC__q34 =
	      _theResult___fst_exp__h290808;
      2'b01, 2'b10, 2'b11:
	  CASE_guard82580_0b0_theResult___fst_exp90808_0_ETC__q34 =
	      _theResult___exp__h291324;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  CASE_guard82580_0b0_theResult___fst_exp90808_0_ETC__q33 or
	  CASE_guard82580_0b0_theResult___fst_exp90808_0_ETC__q34 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d4516 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d4518 or
	  _theResult___fst_exp__h290808)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  _theResult___fst_exp__h291402 =
	      CASE_guard82580_0b0_theResult___fst_exp90808_0_ETC__q33;
      3'd1:
	  _theResult___fst_exp__h291402 =
	      CASE_guard82580_0b0_theResult___fst_exp90808_0_ETC__q34;
      3'd2:
	  _theResult___fst_exp__h291402 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d4516;
      3'd3:
	  _theResult___fst_exp__h291402 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d4518;
      3'd4: _theResult___fst_exp__h291402 = _theResult___fst_exp__h290808;
      default: _theResult___fst_exp__h291402 = 8'd0;
    endcase
  end
  always@(guard__h291416 or
	  _theResult___fst_exp__h299493 or
	  out_exp__h299963 or _theResult___exp__h299960)
  begin
    case (guard__h291416)
      2'b0, 2'b01:
	  CASE_guard91416_0b0_theResult___fst_exp99493_0_ETC__q38 =
	      _theResult___fst_exp__h299493;
      2'b10:
	  CASE_guard91416_0b0_theResult___fst_exp99493_0_ETC__q38 =
	      out_exp__h299963;
      2'b11:
	  CASE_guard91416_0b0_theResult___fst_exp99493_0_ETC__q38 =
	      _theResult___exp__h299960;
    endcase
  end
  always@(guard__h291416 or
	  _theResult___fst_exp__h299493 or _theResult___exp__h299960)
  begin
    case (guard__h291416)
      2'b0:
	  CASE_guard91416_0b0_theResult___fst_exp99493_0_ETC__q39 =
	      _theResult___fst_exp__h299493;
      2'b01, 2'b10, 2'b11:
	  CASE_guard91416_0b0_theResult___fst_exp99493_0_ETC__q39 =
	      _theResult___exp__h299960;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  CASE_guard91416_0b0_theResult___fst_exp99493_0_ETC__q38 or
	  CASE_guard91416_0b0_theResult___fst_exp99493_0_ETC__q39 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4585 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4587 or
	  _theResult___fst_exp__h299493)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  _theResult___fst_exp__h300038 =
	      CASE_guard91416_0b0_theResult___fst_exp99493_0_ETC__q38;
      3'd1:
	  _theResult___fst_exp__h300038 =
	      CASE_guard91416_0b0_theResult___fst_exp99493_0_ETC__q39;
      3'd2:
	  _theResult___fst_exp__h300038 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4585;
      3'd3:
	  _theResult___fst_exp__h300038 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4587;
      3'd4: _theResult___fst_exp__h300038 = _theResult___fst_exp__h299493;
      default: _theResult___fst_exp__h300038 = 8'd0;
    endcase
  end
  always@(guard__h273650 or
	  _theResult___snd__h281649 or
	  out_sfd__h282144 or _theResult___sfd__h282141)
  begin
    case (guard__h273650)
      2'b0, 2'b01:
	  CASE_guard73650_0b0_theResult___snd81649_BITS__ETC__q40 =
	      _theResult___snd__h281649[56:34];
      2'b10:
	  CASE_guard73650_0b0_theResult___snd81649_BITS__ETC__q40 =
	      out_sfd__h282144;
      2'b11:
	  CASE_guard73650_0b0_theResult___snd81649_BITS__ETC__q40 =
	      _theResult___sfd__h282141;
    endcase
  end
  always@(guard__h273650 or
	  _theResult___snd__h281649 or _theResult___sfd__h282141)
  begin
    case (guard__h273650)
      2'b0:
	  CASE_guard73650_0b0_theResult___snd81649_BITS__ETC__q41 =
	      _theResult___snd__h281649[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard73650_0b0_theResult___snd81649_BITS__ETC__q41 =
	      _theResult___sfd__h282141;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  CASE_guard73650_0b0_theResult___snd81649_BITS__ETC__q40 or
	  CASE_guard73650_0b0_theResult___snd81649_BITS__ETC__q41 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4635 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4637 or
	  _theResult___snd__h281649)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  _theResult___fst_sfd__h282219 =
	      CASE_guard73650_0b0_theResult___snd81649_BITS__ETC__q40;
      3'd1:
	  _theResult___fst_sfd__h282219 =
	      CASE_guard73650_0b0_theResult___snd81649_BITS__ETC__q41;
      3'd2:
	  _theResult___fst_sfd__h282219 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4635;
      3'd3:
	  _theResult___fst_sfd__h282219 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4637;
      3'd4: _theResult___fst_sfd__h282219 = _theResult___snd__h281649[56:34];
      default: _theResult___fst_sfd__h282219 = 23'd0;
    endcase
  end
  always@(guard__h264941 or
	  sfdin__h273036 or out_sfd__h273562 or _theResult___sfd__h273559)
  begin
    case (guard__h264941)
      2'b0, 2'b01:
	  CASE_guard64941_0b0_sfdin73036_BITS_56_TO_34_0_ETC__q42 =
	      sfdin__h273036[56:34];
      2'b10:
	  CASE_guard64941_0b0_sfdin73036_BITS_56_TO_34_0_ETC__q42 =
	      out_sfd__h273562;
      2'b11:
	  CASE_guard64941_0b0_sfdin73036_BITS_56_TO_34_0_ETC__q42 =
	      _theResult___sfd__h273559;
    endcase
  end
  always@(guard__h264941 or sfdin__h273036 or _theResult___sfd__h273559)
  begin
    case (guard__h264941)
      2'b0:
	  CASE_guard64941_0b0_sfdin73036_BITS_56_TO_34_0_ETC__q43 =
	      sfdin__h273036[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard64941_0b0_sfdin73036_BITS_56_TO_34_0_ETC__q43 =
	      _theResult___sfd__h273559;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  CASE_guard64941_0b0_sfdin73036_BITS_56_TO_34_0_ETC__q42 or
	  CASE_guard64941_0b0_sfdin73036_BITS_56_TO_34_0_ETC__q43 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d4616 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d4618 or
	  sfdin__h273036)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  _theResult___fst_sfd__h273637 =
	      CASE_guard64941_0b0_sfdin73036_BITS_56_TO_34_0_ETC__q42;
      3'd1:
	  _theResult___fst_sfd__h273637 =
	      CASE_guard64941_0b0_sfdin73036_BITS_56_TO_34_0_ETC__q43;
      3'd2:
	  _theResult___fst_sfd__h273637 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d4616;
      3'd3:
	  _theResult___fst_sfd__h273637 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d4618;
      3'd4: _theResult___fst_sfd__h273637 = sfdin__h273036[56:34];
      default: _theResult___fst_sfd__h273637 = 23'd0;
    endcase
  end
  always@(guard__h282580 or
	  sfdin__h290802 or out_sfd__h291328 or _theResult___sfd__h291325)
  begin
    case (guard__h282580)
      2'b0, 2'b01:
	  CASE_guard82580_0b0_sfdin90802_BITS_56_TO_34_0_ETC__q44 =
	      sfdin__h290802[56:34];
      2'b10:
	  CASE_guard82580_0b0_sfdin90802_BITS_56_TO_34_0_ETC__q44 =
	      out_sfd__h291328;
      2'b11:
	  CASE_guard82580_0b0_sfdin90802_BITS_56_TO_34_0_ETC__q44 =
	      _theResult___sfd__h291325;
    endcase
  end
  always@(guard__h282580 or sfdin__h290802 or _theResult___sfd__h291325)
  begin
    case (guard__h282580)
      2'b0:
	  CASE_guard82580_0b0_sfdin90802_BITS_56_TO_34_0_ETC__q45 =
	      sfdin__h290802[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard82580_0b0_sfdin90802_BITS_56_TO_34_0_ETC__q45 =
	      _theResult___sfd__h291325;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  CASE_guard82580_0b0_sfdin90802_BITS_56_TO_34_0_ETC__q44 or
	  CASE_guard82580_0b0_sfdin90802_BITS_56_TO_34_0_ETC__q45 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d4662 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d4664 or
	  sfdin__h290802)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  _theResult___fst_sfd__h291403 =
	      CASE_guard82580_0b0_sfdin90802_BITS_56_TO_34_0_ETC__q44;
      3'd1:
	  _theResult___fst_sfd__h291403 =
	      CASE_guard82580_0b0_sfdin90802_BITS_56_TO_34_0_ETC__q45;
      3'd2:
	  _theResult___fst_sfd__h291403 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d4662;
      3'd3:
	  _theResult___fst_sfd__h291403 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d4664;
      3'd4: _theResult___fst_sfd__h291403 = sfdin__h290802[56:34];
      default: _theResult___fst_sfd__h291403 = 23'd0;
    endcase
  end
  always@(guard__h291416 or
	  _theResult___snd__h299439 or
	  out_sfd__h299964 or _theResult___sfd__h299961)
  begin
    case (guard__h291416)
      2'b0, 2'b01:
	  CASE_guard91416_0b0_theResult___snd99439_BITS__ETC__q46 =
	      _theResult___snd__h299439[56:34];
      2'b10:
	  CASE_guard91416_0b0_theResult___snd99439_BITS__ETC__q46 =
	      out_sfd__h299964;
      2'b11:
	  CASE_guard91416_0b0_theResult___snd99439_BITS__ETC__q46 =
	      _theResult___sfd__h299961;
    endcase
  end
  always@(guard__h291416 or
	  _theResult___snd__h299439 or _theResult___sfd__h299961)
  begin
    case (guard__h291416)
      2'b0:
	  CASE_guard91416_0b0_theResult___snd99439_BITS__ETC__q47 =
	      _theResult___snd__h299439[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard91416_0b0_theResult___snd99439_BITS__ETC__q47 =
	      _theResult___sfd__h299961;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  CASE_guard91416_0b0_theResult___snd99439_BITS__ETC__q46 or
	  CASE_guard91416_0b0_theResult___snd99439_BITS__ETC__q47 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4681 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4683 or
	  _theResult___snd__h299439)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  _theResult___fst_sfd__h300039 =
	      CASE_guard91416_0b0_theResult___snd99439_BITS__ETC__q46;
      3'd1:
	  _theResult___fst_sfd__h300039 =
	      CASE_guard91416_0b0_theResult___snd99439_BITS__ETC__q47;
      3'd2:
	  _theResult___fst_sfd__h300039 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4681;
      3'd3:
	  _theResult___fst_sfd__h300039 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4683;
      3'd4: _theResult___fst_sfd__h300039 = _theResult___snd__h299439[56:34];
      default: _theResult___fst_sfd__h300039 = 23'd0;
    endcase
  end
  always@(guard__h264941 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (guard__h264941)
      2'b0, 2'b01, 2'b10:
	  CASE_guard64941_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q48 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      2'd3:
	  CASE_guard64941_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q48 =
	      guard__h264941 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get or
	  CASE_guard64941_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q48 or
	  guard__h264941)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4769 =
	      CASE_guard64941_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q48;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4769 =
	      (guard__h264941 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		(guard__h264941 == 2'b01 || guard__h264941 == 2'b10 ||
		 guard__h264941 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4769 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4769 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(guard__h264941 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (guard__h264941)
      2'b0, 2'b01, 2'b10:
	  CASE_guard64941_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q49 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      2'd3:
	  CASE_guard64941_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q49 =
	      guard__h264941 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get or
	  CASE_guard64941_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q49 or
	  guard__h264941)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4713 =
	      CASE_guard64941_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q49;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4713 =
	      (guard__h264941 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		guard__h264941 != 2'b01 && guard__h264941 != 2'b10 &&
		guard__h264941 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4713 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4713 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(guard__h273650 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (guard__h273650)
      2'b0, 2'b01, 2'b10:
	  CASE_guard73650_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q50 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      2'd3:
	  CASE_guard73650_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q50 =
	      guard__h273650 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get or
	  CASE_guard73650_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q50 or
	  guard__h273650)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4776 =
	      CASE_guard73650_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q50;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4776 =
	      (guard__h273650 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		(guard__h273650 == 2'b01 || guard__h273650 == 2'b10 ||
		 guard__h273650 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4776 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4776 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(guard__h273650 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (guard__h273650)
      2'b0, 2'b01, 2'b10:
	  CASE_guard73650_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q51 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      2'd3:
	  CASE_guard73650_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q51 =
	      guard__h273650 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get or
	  CASE_guard73650_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q51 or
	  guard__h273650)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4726 =
	      CASE_guard73650_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q51;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4726 =
	      (guard__h273650 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		guard__h273650 != 2'b01 && guard__h273650 != 2'b10 &&
		guard__h273650 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4726 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4726 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(guard__h282580 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (guard__h282580)
      2'b0, 2'b01, 2'b10:
	  CASE_guard82580_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q52 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      2'd3:
	  CASE_guard82580_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q52 =
	      guard__h282580 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get or
	  CASE_guard82580_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q52 or
	  guard__h282580)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4786 =
	      CASE_guard82580_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q52;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4786 =
	      (guard__h282580 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		(guard__h282580 == 2'b01 || guard__h282580 == 2'b10 ||
		 guard__h282580 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4786 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4786 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(guard__h282580 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (guard__h282580)
      2'b0, 2'b01, 2'b10:
	  CASE_guard82580_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q53 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      2'd3:
	  CASE_guard82580_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q53 =
	      guard__h282580 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get or
	  CASE_guard82580_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q53 or
	  guard__h282580)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4743 =
	      CASE_guard82580_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q53;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4743 =
	      (guard__h282580 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		guard__h282580 != 2'b01 && guard__h282580 != 2'b10 &&
		guard__h282580 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4743 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4743 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(guard__h291416 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (guard__h291416)
      2'b0, 2'b01, 2'b10:
	  CASE_guard91416_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q54 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      2'd3:
	  CASE_guard91416_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q54 =
	      guard__h291416 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get or
	  CASE_guard91416_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q54 or
	  guard__h291416)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4793 =
	      CASE_guard91416_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q54;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4793 =
	      (guard__h291416 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		(guard__h291416 == 2'b01 || guard__h291416 == 2'b10 ||
		 guard__h291416 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4793 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4793 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(guard__h291416 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (guard__h291416)
      2'b0, 2'b01, 2'b10:
	  CASE_guard91416_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q55 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      2'd3:
	  CASE_guard91416_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q55 =
	      guard__h291416 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get or
	  CASE_guard91416_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q55 or
	  guard__h291416)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4756 =
	      CASE_guard91416_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q55;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4756 =
	      (guard__h291416 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		guard__h291416 != 2'b01 && guard__h291416 != 2'b10 &&
		guard__h291416 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4756 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4756 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0, 3'd1, 3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4779 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4779 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0, 3'd1, 3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4730 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d4730 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(guard__h319347 or
	  _theResult___fst_exp__h327395 or
	  out_exp__h327840 or _theResult___exp__h327837)
  begin
    case (guard__h319347)
      2'b0, 2'b01:
	  CASE_guard19347_0b0_theResult___fst_exp27395_0_ETC__q60 =
	      _theResult___fst_exp__h327395;
      2'b10:
	  CASE_guard19347_0b0_theResult___fst_exp27395_0_ETC__q60 =
	      out_exp__h327840;
      2'b11:
	  CASE_guard19347_0b0_theResult___fst_exp27395_0_ETC__q60 =
	      _theResult___exp__h327837;
    endcase
  end
  always@(guard__h319347 or
	  _theResult___fst_exp__h327395 or _theResult___exp__h327837)
  begin
    case (guard__h319347)
      2'b0:
	  CASE_guard19347_0b0_theResult___fst_exp27395_0_ETC__q61 =
	      _theResult___fst_exp__h327395;
      2'b01, 2'b10, 2'b11:
	  CASE_guard19347_0b0_theResult___fst_exp27395_0_ETC__q61 =
	      _theResult___exp__h327837;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  CASE_guard19347_0b0_theResult___fst_exp27395_0_ETC__q60 or
	  CASE_guard19347_0b0_theResult___fst_exp27395_0_ETC__q61 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5583 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5585 or
	  _theResult___fst_exp__h327395)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  _theResult___fst_exp__h327915 =
	      CASE_guard19347_0b0_theResult___fst_exp27395_0_ETC__q60;
      3'd1:
	  _theResult___fst_exp__h327915 =
	      CASE_guard19347_0b0_theResult___fst_exp27395_0_ETC__q61;
      3'd2:
	  _theResult___fst_exp__h327915 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5583;
      3'd3:
	  _theResult___fst_exp__h327915 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5585;
      3'd4: _theResult___fst_exp__h327915 = _theResult___fst_exp__h327395;
      default: _theResult___fst_exp__h327915 = 8'd0;
    endcase
  end
  always@(guard__h310640 or
	  _theResult___fst_exp__h318739 or
	  out_exp__h319258 or _theResult___exp__h319255)
  begin
    case (guard__h310640)
      2'b0, 2'b01:
	  CASE_guard10640_0b0_theResult___fst_exp18739_0_ETC__q62 =
	      _theResult___fst_exp__h318739;
      2'b10:
	  CASE_guard10640_0b0_theResult___fst_exp18739_0_ETC__q62 =
	      out_exp__h319258;
      2'b11:
	  CASE_guard10640_0b0_theResult___fst_exp18739_0_ETC__q62 =
	      _theResult___exp__h319255;
    endcase
  end
  always@(guard__h310640 or
	  _theResult___fst_exp__h318739 or _theResult___exp__h319255)
  begin
    case (guard__h310640)
      2'b0:
	  CASE_guard10640_0b0_theResult___fst_exp18739_0_ETC__q63 =
	      _theResult___fst_exp__h318739;
      2'b01, 2'b10, 2'b11:
	  CASE_guard10640_0b0_theResult___fst_exp18739_0_ETC__q63 =
	      _theResult___exp__h319255;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  CASE_guard10640_0b0_theResult___fst_exp18739_0_ETC__q62 or
	  CASE_guard10640_0b0_theResult___fst_exp18739_0_ETC__q63 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5361 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5364 or
	  _theResult___fst_exp__h318739)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  _theResult___fst_exp__h319333 =
	      CASE_guard10640_0b0_theResult___fst_exp18739_0_ETC__q62;
      3'd1:
	  _theResult___fst_exp__h319333 =
	      CASE_guard10640_0b0_theResult___fst_exp18739_0_ETC__q63;
      3'd2:
	  _theResult___fst_exp__h319333 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5361;
      3'd3:
	  _theResult___fst_exp__h319333 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5364;
      3'd4: _theResult___fst_exp__h319333 = _theResult___fst_exp__h318739;
      default: _theResult___fst_exp__h319333 = 8'd0;
    endcase
  end
  always@(guard__h328277 or
	  _theResult___fst_exp__h336505 or
	  out_exp__h337024 or _theResult___exp__h337021)
  begin
    case (guard__h328277)
      2'b0, 2'b01:
	  CASE_guard28277_0b0_theResult___fst_exp36505_0_ETC__q68 =
	      _theResult___fst_exp__h336505;
      2'b10:
	  CASE_guard28277_0b0_theResult___fst_exp36505_0_ETC__q68 =
	      out_exp__h337024;
      2'b11:
	  CASE_guard28277_0b0_theResult___fst_exp36505_0_ETC__q68 =
	      _theResult___exp__h337021;
    endcase
  end
  always@(guard__h328277 or
	  _theResult___fst_exp__h336505 or _theResult___exp__h337021)
  begin
    case (guard__h328277)
      2'b0:
	  CASE_guard28277_0b0_theResult___fst_exp36505_0_ETC__q69 =
	      _theResult___fst_exp__h336505;
      2'b01, 2'b10, 2'b11:
	  CASE_guard28277_0b0_theResult___fst_exp36505_0_ETC__q69 =
	      _theResult___exp__h337021;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  CASE_guard28277_0b0_theResult___fst_exp36505_0_ETC__q68 or
	  CASE_guard28277_0b0_theResult___fst_exp36505_0_ETC__q69 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5908 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5910 or
	  _theResult___fst_exp__h336505)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  _theResult___fst_exp__h337099 =
	      CASE_guard28277_0b0_theResult___fst_exp36505_0_ETC__q68;
      3'd1:
	  _theResult___fst_exp__h337099 =
	      CASE_guard28277_0b0_theResult___fst_exp36505_0_ETC__q69;
      3'd2:
	  _theResult___fst_exp__h337099 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5908;
      3'd3:
	  _theResult___fst_exp__h337099 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5910;
      3'd4: _theResult___fst_exp__h337099 = _theResult___fst_exp__h336505;
      default: _theResult___fst_exp__h337099 = 8'd0;
    endcase
  end
  always@(guard__h337113 or
	  _theResult___fst_exp__h345190 or
	  out_exp__h345660 or _theResult___exp__h345657)
  begin
    case (guard__h337113)
      2'b0, 2'b01:
	  CASE_guard37113_0b0_theResult___fst_exp45190_0_ETC__q73 =
	      _theResult___fst_exp__h345190;
      2'b10:
	  CASE_guard37113_0b0_theResult___fst_exp45190_0_ETC__q73 =
	      out_exp__h345660;
      2'b11:
	  CASE_guard37113_0b0_theResult___fst_exp45190_0_ETC__q73 =
	      _theResult___exp__h345657;
    endcase
  end
  always@(guard__h337113 or
	  _theResult___fst_exp__h345190 or _theResult___exp__h345657)
  begin
    case (guard__h337113)
      2'b0:
	  CASE_guard37113_0b0_theResult___fst_exp45190_0_ETC__q74 =
	      _theResult___fst_exp__h345190;
      2'b01, 2'b10, 2'b11:
	  CASE_guard37113_0b0_theResult___fst_exp45190_0_ETC__q74 =
	      _theResult___exp__h345657;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  CASE_guard37113_0b0_theResult___fst_exp45190_0_ETC__q73 or
	  CASE_guard37113_0b0_theResult___fst_exp45190_0_ETC__q74 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5977 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5979 or
	  _theResult___fst_exp__h345190)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  _theResult___fst_exp__h345735 =
	      CASE_guard37113_0b0_theResult___fst_exp45190_0_ETC__q73;
      3'd1:
	  _theResult___fst_exp__h345735 =
	      CASE_guard37113_0b0_theResult___fst_exp45190_0_ETC__q74;
      3'd2:
	  _theResult___fst_exp__h345735 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5977;
      3'd3:
	  _theResult___fst_exp__h345735 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5979;
      3'd4: _theResult___fst_exp__h345735 = _theResult___fst_exp__h345190;
      default: _theResult___fst_exp__h345735 = 8'd0;
    endcase
  end
  always@(guard__h319347 or
	  _theResult___snd__h327346 or
	  out_sfd__h327841 or _theResult___sfd__h327838)
  begin
    case (guard__h319347)
      2'b0, 2'b01:
	  CASE_guard19347_0b0_theResult___snd27346_BITS__ETC__q75 =
	      _theResult___snd__h327346[56:34];
      2'b10:
	  CASE_guard19347_0b0_theResult___snd27346_BITS__ETC__q75 =
	      out_sfd__h327841;
      2'b11:
	  CASE_guard19347_0b0_theResult___snd27346_BITS__ETC__q75 =
	      _theResult___sfd__h327838;
    endcase
  end
  always@(guard__h319347 or
	  _theResult___snd__h327346 or _theResult___sfd__h327838)
  begin
    case (guard__h319347)
      2'b0:
	  CASE_guard19347_0b0_theResult___snd27346_BITS__ETC__q76 =
	      _theResult___snd__h327346[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard19347_0b0_theResult___snd27346_BITS__ETC__q76 =
	      _theResult___sfd__h327838;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  CASE_guard19347_0b0_theResult___snd27346_BITS__ETC__q75 or
	  CASE_guard19347_0b0_theResult___snd27346_BITS__ETC__q76 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6027 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6029 or
	  _theResult___snd__h327346)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  _theResult___fst_sfd__h327916 =
	      CASE_guard19347_0b0_theResult___snd27346_BITS__ETC__q75;
      3'd1:
	  _theResult___fst_sfd__h327916 =
	      CASE_guard19347_0b0_theResult___snd27346_BITS__ETC__q76;
      3'd2:
	  _theResult___fst_sfd__h327916 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6027;
      3'd3:
	  _theResult___fst_sfd__h327916 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6029;
      3'd4: _theResult___fst_sfd__h327916 = _theResult___snd__h327346[56:34];
      default: _theResult___fst_sfd__h327916 = 23'd0;
    endcase
  end
  always@(guard__h310640 or
	  sfdin__h318733 or out_sfd__h319259 or _theResult___sfd__h319256)
  begin
    case (guard__h310640)
      2'b0, 2'b01:
	  CASE_guard10640_0b0_sfdin18733_BITS_56_TO_34_0_ETC__q77 =
	      sfdin__h318733[56:34];
      2'b10:
	  CASE_guard10640_0b0_sfdin18733_BITS_56_TO_34_0_ETC__q77 =
	      out_sfd__h319259;
      2'b11:
	  CASE_guard10640_0b0_sfdin18733_BITS_56_TO_34_0_ETC__q77 =
	      _theResult___sfd__h319256;
    endcase
  end
  always@(guard__h310640 or sfdin__h318733 or _theResult___sfd__h319256)
  begin
    case (guard__h310640)
      2'b0:
	  CASE_guard10640_0b0_sfdin18733_BITS_56_TO_34_0_ETC__q78 =
	      sfdin__h318733[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard10640_0b0_sfdin18733_BITS_56_TO_34_0_ETC__q78 =
	      _theResult___sfd__h319256;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  CASE_guard10640_0b0_sfdin18733_BITS_56_TO_34_0_ETC__q77 or
	  CASE_guard10640_0b0_sfdin18733_BITS_56_TO_34_0_ETC__q78 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6008 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6010 or
	  sfdin__h318733)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  _theResult___fst_sfd__h319334 =
	      CASE_guard10640_0b0_sfdin18733_BITS_56_TO_34_0_ETC__q77;
      3'd1:
	  _theResult___fst_sfd__h319334 =
	      CASE_guard10640_0b0_sfdin18733_BITS_56_TO_34_0_ETC__q78;
      3'd2:
	  _theResult___fst_sfd__h319334 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6008;
      3'd3:
	  _theResult___fst_sfd__h319334 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6010;
      3'd4: _theResult___fst_sfd__h319334 = sfdin__h318733[56:34];
      default: _theResult___fst_sfd__h319334 = 23'd0;
    endcase
  end
  always@(guard__h328277 or
	  sfdin__h336499 or out_sfd__h337025 or _theResult___sfd__h337022)
  begin
    case (guard__h328277)
      2'b0, 2'b01:
	  CASE_guard28277_0b0_sfdin36499_BITS_56_TO_34_0_ETC__q79 =
	      sfdin__h336499[56:34];
      2'b10:
	  CASE_guard28277_0b0_sfdin36499_BITS_56_TO_34_0_ETC__q79 =
	      out_sfd__h337025;
      2'b11:
	  CASE_guard28277_0b0_sfdin36499_BITS_56_TO_34_0_ETC__q79 =
	      _theResult___sfd__h337022;
    endcase
  end
  always@(guard__h328277 or sfdin__h336499 or _theResult___sfd__h337022)
  begin
    case (guard__h328277)
      2'b0:
	  CASE_guard28277_0b0_sfdin36499_BITS_56_TO_34_0_ETC__q80 =
	      sfdin__h336499[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard28277_0b0_sfdin36499_BITS_56_TO_34_0_ETC__q80 =
	      _theResult___sfd__h337022;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  CASE_guard28277_0b0_sfdin36499_BITS_56_TO_34_0_ETC__q79 or
	  CASE_guard28277_0b0_sfdin36499_BITS_56_TO_34_0_ETC__q80 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6054 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6056 or
	  sfdin__h336499)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  _theResult___fst_sfd__h337100 =
	      CASE_guard28277_0b0_sfdin36499_BITS_56_TO_34_0_ETC__q79;
      3'd1:
	  _theResult___fst_sfd__h337100 =
	      CASE_guard28277_0b0_sfdin36499_BITS_56_TO_34_0_ETC__q80;
      3'd2:
	  _theResult___fst_sfd__h337100 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6054;
      3'd3:
	  _theResult___fst_sfd__h337100 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6056;
      3'd4: _theResult___fst_sfd__h337100 = sfdin__h336499[56:34];
      default: _theResult___fst_sfd__h337100 = 23'd0;
    endcase
  end
  always@(guard__h337113 or
	  _theResult___snd__h345136 or
	  out_sfd__h345661 or _theResult___sfd__h345658)
  begin
    case (guard__h337113)
      2'b0, 2'b01:
	  CASE_guard37113_0b0_theResult___snd45136_BITS__ETC__q81 =
	      _theResult___snd__h345136[56:34];
      2'b10:
	  CASE_guard37113_0b0_theResult___snd45136_BITS__ETC__q81 =
	      out_sfd__h345661;
      2'b11:
	  CASE_guard37113_0b0_theResult___snd45136_BITS__ETC__q81 =
	      _theResult___sfd__h345658;
    endcase
  end
  always@(guard__h337113 or
	  _theResult___snd__h345136 or _theResult___sfd__h345658)
  begin
    case (guard__h337113)
      2'b0:
	  CASE_guard37113_0b0_theResult___snd45136_BITS__ETC__q82 =
	      _theResult___snd__h345136[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard37113_0b0_theResult___snd45136_BITS__ETC__q82 =
	      _theResult___sfd__h345658;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  CASE_guard37113_0b0_theResult___snd45136_BITS__ETC__q81 or
	  CASE_guard37113_0b0_theResult___snd45136_BITS__ETC__q82 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6073 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6075 or
	  _theResult___snd__h345136)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  _theResult___fst_sfd__h345736 =
	      CASE_guard37113_0b0_theResult___snd45136_BITS__ETC__q81;
      3'd1:
	  _theResult___fst_sfd__h345736 =
	      CASE_guard37113_0b0_theResult___snd45136_BITS__ETC__q82;
      3'd2:
	  _theResult___fst_sfd__h345736 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6073;
      3'd3:
	  _theResult___fst_sfd__h345736 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6075;
      3'd4: _theResult___fst_sfd__h345736 = _theResult___snd__h345136[56:34];
      default: _theResult___fst_sfd__h345736 = 23'd0;
    endcase
  end
  always@(guard__h310640 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (guard__h310640)
      2'b0, 2'b01, 2'b10:
	  CASE_guard10640_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q83 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      2'd3:
	  CASE_guard10640_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q83 =
	      guard__h310640 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get or
	  CASE_guard10640_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q83 or
	  guard__h310640)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6161 =
	      CASE_guard10640_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q83;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6161 =
	      (guard__h310640 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		(guard__h310640 == 2'b01 || guard__h310640 == 2'b10 ||
		 guard__h310640 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6161 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6161 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(guard__h310640 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (guard__h310640)
      2'b0, 2'b01, 2'b10:
	  CASE_guard10640_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q84 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      2'd3:
	  CASE_guard10640_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q84 =
	      guard__h310640 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get or
	  CASE_guard10640_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q84 or
	  guard__h310640)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6105 =
	      CASE_guard10640_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q84;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6105 =
	      (guard__h310640 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		guard__h310640 != 2'b01 && guard__h310640 != 2'b10 &&
		guard__h310640 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6105 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6105 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(guard__h319347 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (guard__h319347)
      2'b0, 2'b01, 2'b10:
	  CASE_guard19347_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q85 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      2'd3:
	  CASE_guard19347_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q85 =
	      guard__h319347 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get or
	  CASE_guard19347_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q85 or
	  guard__h319347)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6168 =
	      CASE_guard19347_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q85;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6168 =
	      (guard__h319347 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		(guard__h319347 == 2'b01 || guard__h319347 == 2'b10 ||
		 guard__h319347 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6168 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6168 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(guard__h319347 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (guard__h319347)
      2'b0, 2'b01, 2'b10:
	  CASE_guard19347_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q86 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      2'd3:
	  CASE_guard19347_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q86 =
	      guard__h319347 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get or
	  CASE_guard19347_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q86 or
	  guard__h319347)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6118 =
	      CASE_guard19347_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q86;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6118 =
	      (guard__h319347 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		guard__h319347 != 2'b01 && guard__h319347 != 2'b10 &&
		guard__h319347 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6118 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6118 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(guard__h328277 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (guard__h328277)
      2'b0, 2'b01, 2'b10:
	  CASE_guard28277_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q87 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      2'd3:
	  CASE_guard28277_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q87 =
	      guard__h328277 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get or
	  CASE_guard28277_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q87 or
	  guard__h328277)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6178 =
	      CASE_guard28277_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q87;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6178 =
	      (guard__h328277 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		(guard__h328277 == 2'b01 || guard__h328277 == 2'b10 ||
		 guard__h328277 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6178 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6178 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(guard__h328277 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (guard__h328277)
      2'b0, 2'b01, 2'b10:
	  CASE_guard28277_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q88 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      2'd3:
	  CASE_guard28277_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q88 =
	      guard__h328277 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get or
	  CASE_guard28277_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q88 or
	  guard__h328277)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6135 =
	      CASE_guard28277_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q88;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6135 =
	      (guard__h328277 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		guard__h328277 != 2'b01 && guard__h328277 != 2'b10 &&
		guard__h328277 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6135 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6135 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(guard__h337113 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (guard__h337113)
      2'b0, 2'b01, 2'b10:
	  CASE_guard37113_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q89 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      2'd3:
	  CASE_guard37113_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q89 =
	      guard__h337113 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get or
	  CASE_guard37113_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q89 or
	  guard__h337113)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6185 =
	      CASE_guard37113_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q89;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6185 =
	      (guard__h337113 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		(guard__h337113 == 2'b01 || guard__h337113 == 2'b10 ||
		 guard__h337113 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6185 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6185 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(guard__h337113 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (guard__h337113)
      2'b0, 2'b01, 2'b10:
	  CASE_guard37113_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q90 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      2'd3:
	  CASE_guard37113_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q90 =
	      guard__h337113 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get or
	  CASE_guard37113_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q90 or
	  guard__h337113)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6148 =
	      CASE_guard37113_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q90;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6148 =
	      (guard__h337113 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		guard__h337113 != 2'b01 && guard__h337113 != 2'b10 &&
		guard__h337113 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6148 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6148 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0, 3'd1, 3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6171 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6171 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0, 3'd1, 3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6122 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6122 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(guard__h365042 or
	  _theResult___fst_exp__h373090 or
	  out_exp__h373535 or _theResult___exp__h373532)
  begin
    case (guard__h365042)
      2'b0, 2'b01:
	  CASE_guard65042_0b0_theResult___fst_exp73090_0_ETC__q95 =
	      _theResult___fst_exp__h373090;
      2'b10:
	  CASE_guard65042_0b0_theResult___fst_exp73090_0_ETC__q95 =
	      out_exp__h373535;
      2'b11:
	  CASE_guard65042_0b0_theResult___fst_exp73090_0_ETC__q95 =
	      _theResult___exp__h373532;
    endcase
  end
  always@(guard__h365042 or
	  _theResult___fst_exp__h373090 or _theResult___exp__h373532)
  begin
    case (guard__h365042)
      2'b0:
	  CASE_guard65042_0b0_theResult___fst_exp73090_0_ETC__q96 =
	      _theResult___fst_exp__h373090;
      2'b01, 2'b10, 2'b11:
	  CASE_guard65042_0b0_theResult___fst_exp73090_0_ETC__q96 =
	      _theResult___exp__h373532;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  CASE_guard65042_0b0_theResult___fst_exp73090_0_ETC__q95 or
	  CASE_guard65042_0b0_theResult___fst_exp73090_0_ETC__q96 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6975 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6977 or
	  _theResult___fst_exp__h373090)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  _theResult___fst_exp__h373610 =
	      CASE_guard65042_0b0_theResult___fst_exp73090_0_ETC__q95;
      3'd1:
	  _theResult___fst_exp__h373610 =
	      CASE_guard65042_0b0_theResult___fst_exp73090_0_ETC__q96;
      3'd2:
	  _theResult___fst_exp__h373610 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6975;
      3'd3:
	  _theResult___fst_exp__h373610 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6977;
      3'd4: _theResult___fst_exp__h373610 = _theResult___fst_exp__h373090;
      default: _theResult___fst_exp__h373610 = 8'd0;
    endcase
  end
  always@(guard__h356335 or
	  _theResult___fst_exp__h364434 or
	  out_exp__h364953 or _theResult___exp__h364950)
  begin
    case (guard__h356335)
      2'b0, 2'b01:
	  CASE_guard56335_0b0_theResult___fst_exp64434_0_ETC__q97 =
	      _theResult___fst_exp__h364434;
      2'b10:
	  CASE_guard56335_0b0_theResult___fst_exp64434_0_ETC__q97 =
	      out_exp__h364953;
      2'b11:
	  CASE_guard56335_0b0_theResult___fst_exp64434_0_ETC__q97 =
	      _theResult___exp__h364950;
    endcase
  end
  always@(guard__h356335 or
	  _theResult___fst_exp__h364434 or _theResult___exp__h364950)
  begin
    case (guard__h356335)
      2'b0:
	  CASE_guard56335_0b0_theResult___fst_exp64434_0_ETC__q98 =
	      _theResult___fst_exp__h364434;
      2'b01, 2'b10, 2'b11:
	  CASE_guard56335_0b0_theResult___fst_exp64434_0_ETC__q98 =
	      _theResult___exp__h364950;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  CASE_guard56335_0b0_theResult___fst_exp64434_0_ETC__q97 or
	  CASE_guard56335_0b0_theResult___fst_exp64434_0_ETC__q98 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6753 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6756 or
	  _theResult___fst_exp__h364434)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  _theResult___fst_exp__h365028 =
	      CASE_guard56335_0b0_theResult___fst_exp64434_0_ETC__q97;
      3'd1:
	  _theResult___fst_exp__h365028 =
	      CASE_guard56335_0b0_theResult___fst_exp64434_0_ETC__q98;
      3'd2:
	  _theResult___fst_exp__h365028 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6753;
      3'd3:
	  _theResult___fst_exp__h365028 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6756;
      3'd4: _theResult___fst_exp__h365028 = _theResult___fst_exp__h364434;
      default: _theResult___fst_exp__h365028 = 8'd0;
    endcase
  end
  always@(guard__h373972 or
	  _theResult___fst_exp__h382200 or
	  out_exp__h382719 or _theResult___exp__h382716)
  begin
    case (guard__h373972)
      2'b0, 2'b01:
	  CASE_guard73972_0b0_theResult___fst_exp82200_0_ETC__q103 =
	      _theResult___fst_exp__h382200;
      2'b10:
	  CASE_guard73972_0b0_theResult___fst_exp82200_0_ETC__q103 =
	      out_exp__h382719;
      2'b11:
	  CASE_guard73972_0b0_theResult___fst_exp82200_0_ETC__q103 =
	      _theResult___exp__h382716;
    endcase
  end
  always@(guard__h373972 or
	  _theResult___fst_exp__h382200 or _theResult___exp__h382716)
  begin
    case (guard__h373972)
      2'b0:
	  CASE_guard73972_0b0_theResult___fst_exp82200_0_ETC__q104 =
	      _theResult___fst_exp__h382200;
      2'b01, 2'b10, 2'b11:
	  CASE_guard73972_0b0_theResult___fst_exp82200_0_ETC__q104 =
	      _theResult___exp__h382716;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  CASE_guard73972_0b0_theResult___fst_exp82200_0_ETC__q103 or
	  CASE_guard73972_0b0_theResult___fst_exp82200_0_ETC__q104 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7300 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7302 or
	  _theResult___fst_exp__h382200)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  _theResult___fst_exp__h382794 =
	      CASE_guard73972_0b0_theResult___fst_exp82200_0_ETC__q103;
      3'd1:
	  _theResult___fst_exp__h382794 =
	      CASE_guard73972_0b0_theResult___fst_exp82200_0_ETC__q104;
      3'd2:
	  _theResult___fst_exp__h382794 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7300;
      3'd3:
	  _theResult___fst_exp__h382794 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7302;
      3'd4: _theResult___fst_exp__h382794 = _theResult___fst_exp__h382200;
      default: _theResult___fst_exp__h382794 = 8'd0;
    endcase
  end
  always@(guard__h382808 or
	  _theResult___fst_exp__h390885 or
	  out_exp__h391355 or _theResult___exp__h391352)
  begin
    case (guard__h382808)
      2'b0, 2'b01:
	  CASE_guard82808_0b0_theResult___fst_exp90885_0_ETC__q108 =
	      _theResult___fst_exp__h390885;
      2'b10:
	  CASE_guard82808_0b0_theResult___fst_exp90885_0_ETC__q108 =
	      out_exp__h391355;
      2'b11:
	  CASE_guard82808_0b0_theResult___fst_exp90885_0_ETC__q108 =
	      _theResult___exp__h391352;
    endcase
  end
  always@(guard__h382808 or
	  _theResult___fst_exp__h390885 or _theResult___exp__h391352)
  begin
    case (guard__h382808)
      2'b0:
	  CASE_guard82808_0b0_theResult___fst_exp90885_0_ETC__q109 =
	      _theResult___fst_exp__h390885;
      2'b01, 2'b10, 2'b11:
	  CASE_guard82808_0b0_theResult___fst_exp90885_0_ETC__q109 =
	      _theResult___exp__h391352;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  CASE_guard82808_0b0_theResult___fst_exp90885_0_ETC__q108 or
	  CASE_guard82808_0b0_theResult___fst_exp90885_0_ETC__q109 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7369 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7371 or
	  _theResult___fst_exp__h390885)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  _theResult___fst_exp__h391430 =
	      CASE_guard82808_0b0_theResult___fst_exp90885_0_ETC__q108;
      3'd1:
	  _theResult___fst_exp__h391430 =
	      CASE_guard82808_0b0_theResult___fst_exp90885_0_ETC__q109;
      3'd2:
	  _theResult___fst_exp__h391430 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7369;
      3'd3:
	  _theResult___fst_exp__h391430 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7371;
      3'd4: _theResult___fst_exp__h391430 = _theResult___fst_exp__h390885;
      default: _theResult___fst_exp__h391430 = 8'd0;
    endcase
  end
  always@(guard__h365042 or
	  _theResult___snd__h373041 or
	  out_sfd__h373536 or _theResult___sfd__h373533)
  begin
    case (guard__h365042)
      2'b0, 2'b01:
	  CASE_guard65042_0b0_theResult___snd73041_BITS__ETC__q110 =
	      _theResult___snd__h373041[56:34];
      2'b10:
	  CASE_guard65042_0b0_theResult___snd73041_BITS__ETC__q110 =
	      out_sfd__h373536;
      2'b11:
	  CASE_guard65042_0b0_theResult___snd73041_BITS__ETC__q110 =
	      _theResult___sfd__h373533;
    endcase
  end
  always@(guard__h365042 or
	  _theResult___snd__h373041 or _theResult___sfd__h373533)
  begin
    case (guard__h365042)
      2'b0:
	  CASE_guard65042_0b0_theResult___snd73041_BITS__ETC__q111 =
	      _theResult___snd__h373041[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard65042_0b0_theResult___snd73041_BITS__ETC__q111 =
	      _theResult___sfd__h373533;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  CASE_guard65042_0b0_theResult___snd73041_BITS__ETC__q110 or
	  CASE_guard65042_0b0_theResult___snd73041_BITS__ETC__q111 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7419 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7421 or
	  _theResult___snd__h373041)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  _theResult___fst_sfd__h373611 =
	      CASE_guard65042_0b0_theResult___snd73041_BITS__ETC__q110;
      3'd1:
	  _theResult___fst_sfd__h373611 =
	      CASE_guard65042_0b0_theResult___snd73041_BITS__ETC__q111;
      3'd2:
	  _theResult___fst_sfd__h373611 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7419;
      3'd3:
	  _theResult___fst_sfd__h373611 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7421;
      3'd4: _theResult___fst_sfd__h373611 = _theResult___snd__h373041[56:34];
      default: _theResult___fst_sfd__h373611 = 23'd0;
    endcase
  end
  always@(guard__h356335 or
	  sfdin__h364428 or out_sfd__h364954 or _theResult___sfd__h364951)
  begin
    case (guard__h356335)
      2'b0, 2'b01:
	  CASE_guard56335_0b0_sfdin64428_BITS_56_TO_34_0_ETC__q112 =
	      sfdin__h364428[56:34];
      2'b10:
	  CASE_guard56335_0b0_sfdin64428_BITS_56_TO_34_0_ETC__q112 =
	      out_sfd__h364954;
      2'b11:
	  CASE_guard56335_0b0_sfdin64428_BITS_56_TO_34_0_ETC__q112 =
	      _theResult___sfd__h364951;
    endcase
  end
  always@(guard__h356335 or sfdin__h364428 or _theResult___sfd__h364951)
  begin
    case (guard__h356335)
      2'b0:
	  CASE_guard56335_0b0_sfdin64428_BITS_56_TO_34_0_ETC__q113 =
	      sfdin__h364428[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard56335_0b0_sfdin64428_BITS_56_TO_34_0_ETC__q113 =
	      _theResult___sfd__h364951;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  CASE_guard56335_0b0_sfdin64428_BITS_56_TO_34_0_ETC__q112 or
	  CASE_guard56335_0b0_sfdin64428_BITS_56_TO_34_0_ETC__q113 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7400 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7402 or
	  sfdin__h364428)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  _theResult___fst_sfd__h365029 =
	      CASE_guard56335_0b0_sfdin64428_BITS_56_TO_34_0_ETC__q112;
      3'd1:
	  _theResult___fst_sfd__h365029 =
	      CASE_guard56335_0b0_sfdin64428_BITS_56_TO_34_0_ETC__q113;
      3'd2:
	  _theResult___fst_sfd__h365029 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7400;
      3'd3:
	  _theResult___fst_sfd__h365029 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7402;
      3'd4: _theResult___fst_sfd__h365029 = sfdin__h364428[56:34];
      default: _theResult___fst_sfd__h365029 = 23'd0;
    endcase
  end
  always@(guard__h373972 or
	  sfdin__h382194 or out_sfd__h382720 or _theResult___sfd__h382717)
  begin
    case (guard__h373972)
      2'b0, 2'b01:
	  CASE_guard73972_0b0_sfdin82194_BITS_56_TO_34_0_ETC__q114 =
	      sfdin__h382194[56:34];
      2'b10:
	  CASE_guard73972_0b0_sfdin82194_BITS_56_TO_34_0_ETC__q114 =
	      out_sfd__h382720;
      2'b11:
	  CASE_guard73972_0b0_sfdin82194_BITS_56_TO_34_0_ETC__q114 =
	      _theResult___sfd__h382717;
    endcase
  end
  always@(guard__h373972 or sfdin__h382194 or _theResult___sfd__h382717)
  begin
    case (guard__h373972)
      2'b0:
	  CASE_guard73972_0b0_sfdin82194_BITS_56_TO_34_0_ETC__q115 =
	      sfdin__h382194[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard73972_0b0_sfdin82194_BITS_56_TO_34_0_ETC__q115 =
	      _theResult___sfd__h382717;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  CASE_guard73972_0b0_sfdin82194_BITS_56_TO_34_0_ETC__q114 or
	  CASE_guard73972_0b0_sfdin82194_BITS_56_TO_34_0_ETC__q115 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7446 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7448 or
	  sfdin__h382194)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  _theResult___fst_sfd__h382795 =
	      CASE_guard73972_0b0_sfdin82194_BITS_56_TO_34_0_ETC__q114;
      3'd1:
	  _theResult___fst_sfd__h382795 =
	      CASE_guard73972_0b0_sfdin82194_BITS_56_TO_34_0_ETC__q115;
      3'd2:
	  _theResult___fst_sfd__h382795 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7446;
      3'd3:
	  _theResult___fst_sfd__h382795 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7448;
      3'd4: _theResult___fst_sfd__h382795 = sfdin__h382194[56:34];
      default: _theResult___fst_sfd__h382795 = 23'd0;
    endcase
  end
  always@(guard__h365042 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (guard__h365042)
      2'b0, 2'b01, 2'b10:
	  CASE_guard65042_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q116 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      2'd3:
	  CASE_guard65042_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q116 =
	      guard__h365042 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get or
	  CASE_guard65042_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q116 or
	  guard__h365042)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7510 =
	      CASE_guard65042_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q116;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7510 =
	      (guard__h365042 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		guard__h365042 != 2'b01 && guard__h365042 != 2'b10 &&
		guard__h365042 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7510 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7510 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(guard__h382808 or
	  _theResult___snd__h390831 or
	  out_sfd__h391356 or _theResult___sfd__h391353)
  begin
    case (guard__h382808)
      2'b0, 2'b01:
	  CASE_guard82808_0b0_theResult___snd90831_BITS__ETC__q117 =
	      _theResult___snd__h390831[56:34];
      2'b10:
	  CASE_guard82808_0b0_theResult___snd90831_BITS__ETC__q117 =
	      out_sfd__h391356;
      2'b11:
	  CASE_guard82808_0b0_theResult___snd90831_BITS__ETC__q117 =
	      _theResult___sfd__h391353;
    endcase
  end
  always@(guard__h382808 or
	  _theResult___snd__h390831 or _theResult___sfd__h391353)
  begin
    case (guard__h382808)
      2'b0:
	  CASE_guard82808_0b0_theResult___snd90831_BITS__ETC__q118 =
	      _theResult___snd__h390831[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard82808_0b0_theResult___snd90831_BITS__ETC__q118 =
	      _theResult___sfd__h391353;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  CASE_guard82808_0b0_theResult___snd90831_BITS__ETC__q117 or
	  CASE_guard82808_0b0_theResult___snd90831_BITS__ETC__q118 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7465 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7467 or
	  _theResult___snd__h390831)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  _theResult___fst_sfd__h391431 =
	      CASE_guard82808_0b0_theResult___snd90831_BITS__ETC__q117;
      3'd1:
	  _theResult___fst_sfd__h391431 =
	      CASE_guard82808_0b0_theResult___snd90831_BITS__ETC__q118;
      3'd2:
	  _theResult___fst_sfd__h391431 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7465;
      3'd3:
	  _theResult___fst_sfd__h391431 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7467;
      3'd4: _theResult___fst_sfd__h391431 = _theResult___snd__h390831[56:34];
      default: _theResult___fst_sfd__h391431 = 23'd0;
    endcase
  end
  always@(guard__h356335 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (guard__h356335)
      2'b0, 2'b01, 2'b10:
	  CASE_guard56335_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q119 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      2'd3:
	  CASE_guard56335_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q119 =
	      guard__h356335 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get or
	  CASE_guard56335_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q119 or
	  guard__h356335)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7553 =
	      CASE_guard56335_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q119;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7553 =
	      (guard__h356335 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		(guard__h356335 == 2'b01 || guard__h356335 == 2'b10 ||
		 guard__h356335 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7553 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7553 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(guard__h356335 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (guard__h356335)
      2'b0, 2'b01, 2'b10:
	  CASE_guard56335_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q120 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      2'd3:
	  CASE_guard56335_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q120 =
	      guard__h356335 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get or
	  CASE_guard56335_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q120 or
	  guard__h356335)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7497 =
	      CASE_guard56335_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q120;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7497 =
	      (guard__h356335 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		guard__h356335 != 2'b01 && guard__h356335 != 2'b10 &&
		guard__h356335 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7497 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7497 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(guard__h365042 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (guard__h365042)
      2'b0, 2'b01, 2'b10:
	  CASE_guard65042_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q121 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      2'd3:
	  CASE_guard65042_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q121 =
	      guard__h365042 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get or
	  CASE_guard65042_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q121 or
	  guard__h365042)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7560 =
	      CASE_guard65042_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q121;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7560 =
	      (guard__h365042 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		(guard__h365042 == 2'b01 || guard__h365042 == 2'b10 ||
		 guard__h365042 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7560 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7560 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(guard__h373972 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (guard__h373972)
      2'b0, 2'b01, 2'b10:
	  CASE_guard73972_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q122 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      2'd3:
	  CASE_guard73972_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q122 =
	      guard__h373972 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get or
	  CASE_guard73972_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q122 or
	  guard__h373972)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7570 =
	      CASE_guard73972_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q122;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7570 =
	      (guard__h373972 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		(guard__h373972 == 2'b01 || guard__h373972 == 2'b10 ||
		 guard__h373972 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7570 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7570 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(guard__h373972 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (guard__h373972)
      2'b0, 2'b01, 2'b10:
	  CASE_guard73972_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q123 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      2'd3:
	  CASE_guard73972_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q123 =
	      guard__h373972 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get or
	  CASE_guard73972_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q123 or
	  guard__h373972)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7527 =
	      CASE_guard73972_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q123;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7527 =
	      (guard__h373972 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		guard__h373972 != 2'b01 && guard__h373972 != 2'b10 &&
		guard__h373972 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7527 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7527 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(guard__h382808 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (guard__h382808)
      2'b0, 2'b01, 2'b10:
	  CASE_guard82808_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q124 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      2'd3:
	  CASE_guard82808_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q124 =
	      guard__h382808 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get or
	  CASE_guard82808_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q124 or
	  guard__h382808)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7577 =
	      CASE_guard82808_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q124;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7577 =
	      (guard__h382808 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		(guard__h382808 == 2'b01 || guard__h382808 == 2'b10 ||
		 guard__h382808 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7577 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7577 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(guard__h382808 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (guard__h382808)
      2'b0, 2'b01, 2'b10:
	  CASE_guard82808_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q125 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      2'd3:
	  CASE_guard82808_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q125 =
	      guard__h382808 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get or
	  CASE_guard82808_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q125 or
	  guard__h382808)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7540 =
	      CASE_guard82808_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q125;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7540 =
	      (guard__h382808 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		guard__h382808 != 2'b01 && guard__h382808 != 2'b10 &&
		guard__h382808 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7540 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7540 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0, 3'd1, 3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7563 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7563 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0, 3'd1, 3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7514 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d7514 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$RDY_request_put or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$RDY_request_put or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$RDY_request_put)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229])
      5'd0, 5'd1, 5'd2, 5'd25, 5'd26, 5'd27:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8070 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$RDY_request_put;
      5'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8070 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$RDY_request_put;
      5'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8070 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$RDY_request_put;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8070 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] != 5'd28 ||
		   coreFix_fpuMulDivExe_0_fpuExec_double_fma$RDY_request_put;
    endcase
  end
  always@(guard__h413150 or
	  _theResult___fst_exp__h421111 or _theResult___exp__h421766)
  begin
    case (guard__h413150)
      2'b0:
	  CASE_guard13150_0b0_theResult___fst_exp21111_0_ETC__q135 =
	      _theResult___fst_exp__h421111;
      2'b01, 2'b10, 2'b11:
	  CASE_guard13150_0b0_theResult___fst_exp21111_0_ETC__q135 =
	      _theResult___exp__h421766;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___fst_exp__h421111 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8689 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8687 or
	  CASE_guard13150_0b0_theResult___fst_exp21111_0_ETC__q135)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8693 =
	      _theResult___fst_exp__h421111;
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8693 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8689;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8693 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8687;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8693 =
	      CASE_guard13150_0b0_theResult___fst_exp21111_0_ETC__q135;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8693 =
		   11'd0;
    endcase
  end
  always@(guard__h413150 or
	  _theResult___fst_exp__h421111 or
	  out_exp__h421769 or _theResult___exp__h421766)
  begin
    case (guard__h413150)
      2'b0, 2'b01:
	  CASE_guard13150_0b0_theResult___fst_exp21111_0_ETC__q136 =
	      _theResult___fst_exp__h421111;
      2'b10:
	  CASE_guard13150_0b0_theResult___fst_exp21111_0_ETC__q136 =
	      out_exp__h421769;
      2'b11:
	  CASE_guard13150_0b0_theResult___fst_exp21111_0_ETC__q136 =
	      _theResult___exp__h421766;
    endcase
  end
  always@(guard__h413150 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h413150)
      2'b0, 2'b01, 2'b10:
	  CASE_guard13150_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q137 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171];
      2'd3:
	  CASE_guard13150_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q137 =
	      guard__h413150 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h413150)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q138 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q138 =
	      (guard__h413150 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[171] :
		(guard__h413150 == 2'b01 || guard__h413150 == 2'b10 ||
		 guard__h413150 == 2'b11) &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[171];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q138 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] == 3'd1 &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		   32'hFFFFFFFF &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[171];
    endcase
  end
  always@(guard__h422462 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h422462)
      2'b0, 2'b01, 2'b10:
	  CASE_guard22462_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q139 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171];
      2'd3:
	  CASE_guard22462_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q139 =
	      guard__h422462 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h422462)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q140 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q140 =
	      (guard__h422462 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[171] :
		(guard__h422462 == 2'b01 || guard__h422462 == 2'b10 ||
		 guard__h422462 == 2'b11) &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[171];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q140 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] == 3'd1 &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		   32'hFFFFFFFF &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[171];
    endcase
  end
  always@(guard__h431531 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h431531)
      2'b0, 2'b01, 2'b10:
	  CASE_guard31531_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q141 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171];
      2'd3:
	  CASE_guard31531_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q141 =
	      guard__h431531 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h431531)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q142 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q142 =
	      (guard__h431531 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[171] :
		(guard__h431531 == 2'b01 || guard__h431531 == 2'b10 ||
		 guard__h431531 == 2'b11) &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[171];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q142 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] == 3'd1 &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		   32'hFFFFFFFF &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[171];
    endcase
  end
  always@(guard__h491307 or
	  _theResult___fst_exp__h499268 or _theResult___exp__h499923)
  begin
    case (guard__h491307)
      2'b0:
	  CASE_guard91307_0b0_theResult___fst_exp99268_0_ETC__q152 =
	      _theResult___fst_exp__h499268;
      2'b01, 2'b10, 2'b11:
	  CASE_guard91307_0b0_theResult___fst_exp99268_0_ETC__q152 =
	      _theResult___exp__h499923;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___fst_exp__h499268 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9404 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9402 or
	  CASE_guard91307_0b0_theResult___fst_exp99268_0_ETC__q152)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9408 =
	      _theResult___fst_exp__h499268;
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9408 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9404;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9408 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9402;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9408 =
	      CASE_guard91307_0b0_theResult___fst_exp99268_0_ETC__q152;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9408 =
		   11'd0;
    endcase
  end
  always@(guard__h491307 or
	  _theResult___fst_exp__h499268 or
	  out_exp__h499926 or _theResult___exp__h499923)
  begin
    case (guard__h491307)
      2'b0, 2'b01:
	  CASE_guard91307_0b0_theResult___fst_exp99268_0_ETC__q153 =
	      _theResult___fst_exp__h499268;
      2'b10:
	  CASE_guard91307_0b0_theResult___fst_exp99268_0_ETC__q153 =
	      out_exp__h499926;
      2'b11:
	  CASE_guard91307_0b0_theResult___fst_exp99268_0_ETC__q153 =
	      _theResult___exp__h499923;
    endcase
  end
  always@(guard__h491307 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h491307)
      2'b0, 2'b01, 2'b10:
	  CASE_guard91307_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q154 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      2'd3:
	  CASE_guard91307_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q154 =
	      guard__h491307 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h491307)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q155 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q155 =
	      (guard__h491307 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
		(guard__h491307 == 2'b01 || guard__h491307 == 2'b10 ||
		 guard__h491307 == 2'b11) &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q155 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] == 3'd1 &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		   32'hFFFFFFFF &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[43];
    endcase
  end
  always@(guard__h500619 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h500619)
      2'b0, 2'b01, 2'b10:
	  CASE_guard00619_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q156 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      2'd3:
	  CASE_guard00619_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q156 =
	      guard__h500619 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h500619)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q157 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q157 =
	      (guard__h500619 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
		(guard__h500619 == 2'b01 || guard__h500619 == 2'b10 ||
		 guard__h500619 == 2'b11) &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q157 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] == 3'd1 &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		   32'hFFFFFFFF &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[43];
    endcase
  end
  always@(guard__h509688 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h509688)
      2'b0, 2'b01, 2'b10:
	  CASE_guard09688_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q158 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      2'd3:
	  CASE_guard09688_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q158 =
	      guard__h509688 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h509688)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q159 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q159 =
	      (guard__h509688 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
		(guard__h509688 == 2'b01 || guard__h509688 == 2'b10 ||
		 guard__h509688 == 2'b11) &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q159 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] == 3'd1 &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		   32'hFFFFFFFF &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[43];
    endcase
  end
  always@(guard__h500619 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h500619)
      2'b0, 2'b01, 2'b10:
	  CASE_guard00619_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q160 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] != 32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      2'd3:
	  CASE_guard00619_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q160 =
	      guard__h500619 != 2'b11 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] != 32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[43];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h500619)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q161 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] != 32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q161 =
	      (guard__h500619 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
		guard__h500619 != 2'b01 && guard__h500619 != 2'b10 &&
		guard__h500619 != 2'b11 ||
		coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q161 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 ||
		   coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
		   32'hFFFFFFFF ||
		   !coreFix_fpuMulDivExe_0_regToExeQ$first[43];
    endcase
  end
  always@(guard__h509688 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h509688)
      2'b0, 2'b01, 2'b10:
	  CASE_guard09688_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q162 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] != 32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      2'd3:
	  CASE_guard09688_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q162 =
	      guard__h509688 != 2'b11 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] != 32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[43];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h509688)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q163 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] != 32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q163 =
	      (guard__h509688 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
		guard__h509688 != 2'b01 && guard__h509688 != 2'b10 &&
		guard__h509688 != 2'b11 ||
		coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q163 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 ||
		   coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
		   32'hFFFFFFFF ||
		   !coreFix_fpuMulDivExe_0_regToExeQ$first[43];
    endcase
  end
  always@(guard__h491307 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h491307)
      2'b0, 2'b01, 2'b10:
	  CASE_guard91307_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q164 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] != 32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      2'd3:
	  CASE_guard91307_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q164 =
	      guard__h491307 != 2'b11 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] != 32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[43];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h491307)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q165 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] != 32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q165 =
	      (guard__h491307 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
		guard__h491307 != 2'b01 && guard__h491307 != 2'b10 &&
		guard__h491307 != 2'b11 ||
		coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q165 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 ||
		   coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
		   32'hFFFFFFFF ||
		   !coreFix_fpuMulDivExe_0_regToExeQ$first[43];
    endcase
  end
  always@(guard__h452003 or
	  _theResult___fst_exp__h459964 or _theResult___exp__h460619)
  begin
    case (guard__h452003)
      2'b0:
	  CASE_guard52003_0b0_theResult___fst_exp59964_0_ETC__q175 =
	      _theResult___fst_exp__h459964;
      2'b01, 2'b10, 2'b11:
	  CASE_guard52003_0b0_theResult___fst_exp59964_0_ETC__q175 =
	      _theResult___exp__h460619;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___fst_exp__h459964 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10174 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10172 or
	  CASE_guard52003_0b0_theResult___fst_exp59964_0_ETC__q175)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10178 =
	      _theResult___fst_exp__h459964;
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10178 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10174;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10178 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10172;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10178 =
	      CASE_guard52003_0b0_theResult___fst_exp59964_0_ETC__q175;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10178 =
		   11'd0;
    endcase
  end
  always@(guard__h452003 or
	  _theResult___fst_exp__h459964 or
	  out_exp__h460622 or _theResult___exp__h460619)
  begin
    case (guard__h452003)
      2'b0, 2'b01:
	  CASE_guard52003_0b0_theResult___fst_exp59964_0_ETC__q176 =
	      _theResult___fst_exp__h459964;
      2'b10:
	  CASE_guard52003_0b0_theResult___fst_exp59964_0_ETC__q176 =
	      out_exp__h460622;
      2'b11:
	  CASE_guard52003_0b0_theResult___fst_exp59964_0_ETC__q176 =
	      _theResult___exp__h460619;
    endcase
  end
  always@(guard__h461315 or
	  _theResult___fst_exp__h469541 or _theResult___exp__h470270)
  begin
    case (guard__h461315)
      2'b0:
	  CASE_guard61315_0b0_theResult___fst_exp69541_0_ETC__q177 =
	      _theResult___fst_exp__h469541;
      2'b01, 2'b10, 2'b11:
	  CASE_guard61315_0b0_theResult___fst_exp69541_0_ETC__q177 =
	      _theResult___exp__h470270;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___fst_exp__h469541 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10212 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10210 or
	  CASE_guard61315_0b0_theResult___fst_exp69541_0_ETC__q177)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10216 =
	      _theResult___fst_exp__h469541;
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10216 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10212;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10216 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10210;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10216 =
	      CASE_guard61315_0b0_theResult___fst_exp69541_0_ETC__q177;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10216 =
		   11'd0;
    endcase
  end
  always@(guard__h461315 or
	  _theResult___fst_exp__h469541 or
	  out_exp__h470273 or _theResult___exp__h470270)
  begin
    case (guard__h461315)
      2'b0, 2'b01:
	  CASE_guard61315_0b0_theResult___fst_exp69541_0_ETC__q178 =
	      _theResult___fst_exp__h469541;
      2'b10:
	  CASE_guard61315_0b0_theResult___fst_exp69541_0_ETC__q178 =
	      out_exp__h470273;
      2'b11:
	  CASE_guard61315_0b0_theResult___fst_exp69541_0_ETC__q178 =
	      _theResult___exp__h470270;
    endcase
  end
  always@(guard__h470384 or
	  _theResult___fst_exp__h478374 or _theResult___exp__h479054)
  begin
    case (guard__h470384)
      2'b0:
	  CASE_guard70384_0b0_theResult___fst_exp78374_0_ETC__q179 =
	      _theResult___fst_exp__h478374;
      2'b01, 2'b10, 2'b11:
	  CASE_guard70384_0b0_theResult___fst_exp78374_0_ETC__q179 =
	      _theResult___exp__h479054;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___fst_exp__h478374 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10243 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10241 or
	  CASE_guard70384_0b0_theResult___fst_exp78374_0_ETC__q179)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10247 =
	      _theResult___fst_exp__h478374;
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10247 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10243;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10247 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10241;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10247 =
	      CASE_guard70384_0b0_theResult___fst_exp78374_0_ETC__q179;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10247 =
		   11'd0;
    endcase
  end
  always@(guard__h470384 or
	  _theResult___fst_exp__h478374 or
	  out_exp__h479057 or _theResult___exp__h479054)
  begin
    case (guard__h470384)
      2'b0, 2'b01:
	  CASE_guard70384_0b0_theResult___fst_exp78374_0_ETC__q180 =
	      _theResult___fst_exp__h478374;
      2'b10:
	  CASE_guard70384_0b0_theResult___fst_exp78374_0_ETC__q180 =
	      out_exp__h479057;
      2'b11:
	  CASE_guard70384_0b0_theResult___fst_exp78374_0_ETC__q180 =
	      _theResult___exp__h479054;
    endcase
  end
  always@(guard__h500619 or
	  _theResult___fst_exp__h508845 or _theResult___exp__h509574)
  begin
    case (guard__h500619)
      2'b0:
	  CASE_guard00619_0b0_theResult___fst_exp08845_0_ETC__q181 =
	      _theResult___fst_exp__h508845;
      2'b01, 2'b10, 2'b11:
	  CASE_guard00619_0b0_theResult___fst_exp08845_0_ETC__q181 =
	      _theResult___exp__h509574;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___fst_exp__h508845 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9442 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9440 or
	  CASE_guard00619_0b0_theResult___fst_exp08845_0_ETC__q181)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9446 =
	      _theResult___fst_exp__h508845;
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9446 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9442;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9446 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9440;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9446 =
	      CASE_guard00619_0b0_theResult___fst_exp08845_0_ETC__q181;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9446 =
		   11'd0;
    endcase
  end
  always@(guard__h500619 or
	  _theResult___fst_exp__h508845 or
	  out_exp__h509577 or _theResult___exp__h509574)
  begin
    case (guard__h500619)
      2'b0, 2'b01:
	  CASE_guard00619_0b0_theResult___fst_exp08845_0_ETC__q182 =
	      _theResult___fst_exp__h508845;
      2'b10:
	  CASE_guard00619_0b0_theResult___fst_exp08845_0_ETC__q182 =
	      out_exp__h509577;
      2'b11:
	  CASE_guard00619_0b0_theResult___fst_exp08845_0_ETC__q182 =
	      _theResult___exp__h509574;
    endcase
  end
  always@(guard__h509688 or
	  _theResult___fst_exp__h517678 or _theResult___exp__h518358)
  begin
    case (guard__h509688)
      2'b0:
	  CASE_guard09688_0b0_theResult___fst_exp17678_0_ETC__q183 =
	      _theResult___fst_exp__h517678;
      2'b01, 2'b10, 2'b11:
	  CASE_guard09688_0b0_theResult___fst_exp17678_0_ETC__q183 =
	      _theResult___exp__h518358;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___fst_exp__h517678 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9473 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9471 or
	  CASE_guard09688_0b0_theResult___fst_exp17678_0_ETC__q183)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9477 =
	      _theResult___fst_exp__h517678;
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9477 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9473;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9477 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9471;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9477 =
	      CASE_guard09688_0b0_theResult___fst_exp17678_0_ETC__q183;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9477 =
		   11'd0;
    endcase
  end
  always@(guard__h509688 or
	  _theResult___fst_exp__h517678 or
	  out_exp__h518361 or _theResult___exp__h518358)
  begin
    case (guard__h509688)
      2'b0, 2'b01:
	  CASE_guard09688_0b0_theResult___fst_exp17678_0_ETC__q184 =
	      _theResult___fst_exp__h517678;
      2'b10:
	  CASE_guard09688_0b0_theResult___fst_exp17678_0_ETC__q184 =
	      out_exp__h518361;
      2'b11:
	  CASE_guard09688_0b0_theResult___fst_exp17678_0_ETC__q184 =
	      _theResult___exp__h518358;
    endcase
  end
  always@(guard__h452003 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h452003)
      2'b0, 2'b01, 2'b10:
	  CASE_guard52003_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q185 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      2'd3:
	  CASE_guard52003_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q185 =
	      guard__h452003 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h452003)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q186 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q186 =
	      (guard__h452003 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
		(guard__h452003 == 2'b01 || guard__h452003 == 2'b10 ||
		 guard__h452003 == 2'b11) &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q186 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] == 3'd1 &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		   32'hFFFFFFFF &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[107];
    endcase
  end
  always@(guard__h461315 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h461315)
      2'b0, 2'b01, 2'b10:
	  CASE_guard61315_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q187 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      2'd3:
	  CASE_guard61315_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q187 =
	      guard__h461315 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h461315)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q188 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q188 =
	      (guard__h461315 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
		(guard__h461315 == 2'b01 || guard__h461315 == 2'b10 ||
		 guard__h461315 == 2'b11) &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q188 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] == 3'd1 &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		   32'hFFFFFFFF &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[107];
    endcase
  end
  always@(guard__h470384 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h470384)
      2'b0, 2'b01, 2'b10:
	  CASE_guard70384_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q189 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      2'd3:
	  CASE_guard70384_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q189 =
	      guard__h470384 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h470384)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q190 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q190 =
	      (guard__h470384 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
		(guard__h470384 == 2'b01 || guard__h470384 == 2'b10 ||
		 guard__h470384 == 2'b11) &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q190 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] == 3'd1 &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		   32'hFFFFFFFF &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[107];
    endcase
  end
  always@(guard__h461315 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h461315)
      2'b0, 2'b01, 2'b10:
	  CASE_guard61315_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q191 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	      32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      2'd3:
	  CASE_guard61315_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q191 =
	      guard__h461315 != 2'b11 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	      32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[107];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h461315)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q192 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	      32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q192 =
	      (guard__h461315 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
		guard__h461315 != 2'b01 && guard__h461315 != 2'b10 &&
		guard__h461315 != 2'b11 ||
		coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q192 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 ||
		   coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
		   32'hFFFFFFFF ||
		   !coreFix_fpuMulDivExe_0_regToExeQ$first[107];
    endcase
  end
  always@(guard__h470384 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h470384)
      2'b0, 2'b01, 2'b10:
	  CASE_guard70384_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q193 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	      32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      2'd3:
	  CASE_guard70384_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q193 =
	      guard__h470384 != 2'b11 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	      32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[107];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h470384)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q194 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	      32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q194 =
	      (guard__h470384 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
		guard__h470384 != 2'b01 && guard__h470384 != 2'b10 &&
		guard__h470384 != 2'b11 ||
		coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q194 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 ||
		   coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
		   32'hFFFFFFFF ||
		   !coreFix_fpuMulDivExe_0_regToExeQ$first[107];
    endcase
  end
  always@(guard__h452003 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h452003)
      2'b0, 2'b01, 2'b10:
	  CASE_guard52003_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q195 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	      32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      2'd3:
	  CASE_guard52003_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q195 =
	      guard__h452003 != 2'b11 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	      32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[107];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h452003)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q196 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	      32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q196 =
	      (guard__h452003 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
		guard__h452003 != 2'b01 && guard__h452003 != 2'b10 &&
		guard__h452003 != 2'b11 ||
		coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q196 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 ||
		   coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
		   32'hFFFFFFFF ||
		   !coreFix_fpuMulDivExe_0_regToExeQ$first[107];
    endcase
  end
  always@(guard__h452003 or
	  _theResult___snd__h459915 or _theResult___sfd__h460620)
  begin
    case (guard__h452003)
      2'b0:
	  CASE_guard52003_0b0_theResult___snd59915_BITS__ETC__q197 =
	      _theResult___snd__h459915[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard52003_0b0_theResult___snd59915_BITS__ETC__q197 =
	      _theResult___sfd__h460620;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___snd__h459915 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10269 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10267 or
	  CASE_guard52003_0b0_theResult___snd59915_BITS__ETC__q197)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10273 =
	      _theResult___snd__h459915[56:5];
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10273 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10269;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10273 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10267;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10273 =
	      CASE_guard52003_0b0_theResult___snd59915_BITS__ETC__q197;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10273 =
		   52'd0;
    endcase
  end
  always@(guard__h452003 or
	  _theResult___snd__h459915 or
	  out_sfd__h460623 or _theResult___sfd__h460620)
  begin
    case (guard__h452003)
      2'b0, 2'b01:
	  CASE_guard52003_0b0_theResult___snd59915_BITS__ETC__q198 =
	      _theResult___snd__h459915[56:5];
      2'b10:
	  CASE_guard52003_0b0_theResult___snd59915_BITS__ETC__q198 =
	      out_sfd__h460623;
      2'b11:
	  CASE_guard52003_0b0_theResult___snd59915_BITS__ETC__q198 =
	      _theResult___sfd__h460620;
    endcase
  end
  always@(guard__h470384 or
	  _theResult___snd__h478320 or _theResult___sfd__h479055)
  begin
    case (guard__h470384)
      2'b0:
	  CASE_guard70384_0b0_theResult___snd78320_BITS__ETC__q199 =
	      _theResult___snd__h478320[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard70384_0b0_theResult___snd78320_BITS__ETC__q199 =
	      _theResult___sfd__h479055;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___snd__h478320 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10314 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10312 or
	  CASE_guard70384_0b0_theResult___snd78320_BITS__ETC__q199)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10318 =
	      _theResult___snd__h478320[56:5];
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10318 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10314;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10318 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10312;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10318 =
	      CASE_guard70384_0b0_theResult___snd78320_BITS__ETC__q199;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10318 =
		   52'd0;
    endcase
  end
  always@(guard__h470384 or
	  _theResult___snd__h478320 or
	  out_sfd__h479058 or _theResult___sfd__h479055)
  begin
    case (guard__h470384)
      2'b0, 2'b01:
	  CASE_guard70384_0b0_theResult___snd78320_BITS__ETC__q200 =
	      _theResult___snd__h478320[56:5];
      2'b10:
	  CASE_guard70384_0b0_theResult___snd78320_BITS__ETC__q200 =
	      out_sfd__h479058;
      2'b11:
	  CASE_guard70384_0b0_theResult___snd78320_BITS__ETC__q200 =
	      _theResult___sfd__h479055;
    endcase
  end
  always@(guard__h461315 or sfdin__h469535 or _theResult___sfd__h470271)
  begin
    case (guard__h461315)
      2'b0:
	  CASE_guard61315_0b0_sfdin69535_BITS_56_TO_5_0b_ETC__q201 =
	      sfdin__h469535[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard61315_0b0_sfdin69535_BITS_56_TO_5_0b_ETC__q201 =
	      _theResult___sfd__h470271;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  sfdin__h469535 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10295 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10293 or
	  CASE_guard61315_0b0_sfdin69535_BITS_56_TO_5_0b_ETC__q201)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10299 =
	      sfdin__h469535[56:5];
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10299 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10295;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10299 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10293;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10299 =
	      CASE_guard61315_0b0_sfdin69535_BITS_56_TO_5_0b_ETC__q201;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10299 =
		   52'd0;
    endcase
  end
  always@(guard__h461315 or
	  sfdin__h469535 or out_sfd__h470274 or _theResult___sfd__h470271)
  begin
    case (guard__h461315)
      2'b0, 2'b01:
	  CASE_guard61315_0b0_sfdin69535_BITS_56_TO_5_0b_ETC__q202 =
	      sfdin__h469535[56:5];
      2'b10:
	  CASE_guard61315_0b0_sfdin69535_BITS_56_TO_5_0b_ETC__q202 =
	      out_sfd__h470274;
      2'b11:
	  CASE_guard61315_0b0_sfdin69535_BITS_56_TO_5_0b_ETC__q202 =
	      _theResult___sfd__h470271;
    endcase
  end
  always@(guard__h422462 or
	  _theResult___fst_exp__h430688 or _theResult___exp__h431417)
  begin
    case (guard__h422462)
      2'b0:
	  CASE_guard22462_0b0_theResult___fst_exp30688_0_ETC__q203 =
	      _theResult___fst_exp__h430688;
      2'b01, 2'b10, 2'b11:
	  CASE_guard22462_0b0_theResult___fst_exp30688_0_ETC__q203 =
	      _theResult___exp__h431417;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___fst_exp__h430688 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d8732 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d8730 or
	  CASE_guard22462_0b0_theResult___fst_exp30688_0_ETC__q203)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8736 =
	      _theResult___fst_exp__h430688;
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8736 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d8732;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8736 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d8730;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8736 =
	      CASE_guard22462_0b0_theResult___fst_exp30688_0_ETC__q203;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8736 =
		   11'd0;
    endcase
  end
  always@(guard__h422462 or
	  _theResult___fst_exp__h430688 or
	  out_exp__h431420 or _theResult___exp__h431417)
  begin
    case (guard__h422462)
      2'b0, 2'b01:
	  CASE_guard22462_0b0_theResult___fst_exp30688_0_ETC__q204 =
	      _theResult___fst_exp__h430688;
      2'b10:
	  CASE_guard22462_0b0_theResult___fst_exp30688_0_ETC__q204 =
	      out_exp__h431420;
      2'b11:
	  CASE_guard22462_0b0_theResult___fst_exp30688_0_ETC__q204 =
	      _theResult___exp__h431417;
    endcase
  end
  always@(guard__h431531 or
	  _theResult___fst_exp__h439521 or _theResult___exp__h440201)
  begin
    case (guard__h431531)
      2'b0:
	  CASE_guard31531_0b0_theResult___fst_exp39521_0_ETC__q205 =
	      _theResult___fst_exp__h439521;
      2'b01, 2'b10, 2'b11:
	  CASE_guard31531_0b0_theResult___fst_exp39521_0_ETC__q205 =
	      _theResult___exp__h440201;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___fst_exp__h439521 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8763 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8761 or
	  CASE_guard31531_0b0_theResult___fst_exp39521_0_ETC__q205)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8767 =
	      _theResult___fst_exp__h439521;
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8767 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8763;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8767 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8761;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8767 =
	      CASE_guard31531_0b0_theResult___fst_exp39521_0_ETC__q205;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8767 =
		   11'd0;
    endcase
  end
  always@(guard__h431531 or
	  _theResult___fst_exp__h439521 or
	  out_exp__h440204 or _theResult___exp__h440201)
  begin
    case (guard__h431531)
      2'b0, 2'b01:
	  CASE_guard31531_0b0_theResult___fst_exp39521_0_ETC__q206 =
	      _theResult___fst_exp__h439521;
      2'b10:
	  CASE_guard31531_0b0_theResult___fst_exp39521_0_ETC__q206 =
	      out_exp__h440204;
      2'b11:
	  CASE_guard31531_0b0_theResult___fst_exp39521_0_ETC__q206 =
	      _theResult___exp__h440201;
    endcase
  end
  always@(guard__h413150 or
	  _theResult___snd__h421062 or _theResult___sfd__h421767)
  begin
    case (guard__h413150)
      2'b0:
	  CASE_guard13150_0b0_theResult___snd21062_BITS__ETC__q207 =
	      _theResult___snd__h421062[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard13150_0b0_theResult___snd21062_BITS__ETC__q207 =
	      _theResult___sfd__h421767;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___snd__h421062 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8789 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8787 or
	  CASE_guard13150_0b0_theResult___snd21062_BITS__ETC__q207)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8793 =
	      _theResult___snd__h421062[56:5];
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8793 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8789;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8793 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8787;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8793 =
	      CASE_guard13150_0b0_theResult___snd21062_BITS__ETC__q207;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8793 =
		   52'd0;
    endcase
  end
  always@(guard__h413150 or
	  _theResult___snd__h421062 or
	  out_sfd__h421770 or _theResult___sfd__h421767)
  begin
    case (guard__h413150)
      2'b0, 2'b01:
	  CASE_guard13150_0b0_theResult___snd21062_BITS__ETC__q208 =
	      _theResult___snd__h421062[56:5];
      2'b10:
	  CASE_guard13150_0b0_theResult___snd21062_BITS__ETC__q208 =
	      out_sfd__h421770;
      2'b11:
	  CASE_guard13150_0b0_theResult___snd21062_BITS__ETC__q208 =
	      _theResult___sfd__h421767;
    endcase
  end
  always@(guard__h422462 or sfdin__h430682 or _theResult___sfd__h431418)
  begin
    case (guard__h422462)
      2'b0:
	  CASE_guard22462_0b0_sfdin30682_BITS_56_TO_5_0b_ETC__q209 =
	      sfdin__h430682[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard22462_0b0_sfdin30682_BITS_56_TO_5_0b_ETC__q209 =
	      _theResult___sfd__h431418;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  sfdin__h430682 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d8816 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d8814 or
	  CASE_guard22462_0b0_sfdin30682_BITS_56_TO_5_0b_ETC__q209)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8820 =
	      sfdin__h430682[56:5];
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8820 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d8816;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8820 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d8814;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8820 =
	      CASE_guard22462_0b0_sfdin30682_BITS_56_TO_5_0b_ETC__q209;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8820 =
		   52'd0;
    endcase
  end
  always@(guard__h422462 or
	  sfdin__h430682 or out_sfd__h431421 or _theResult___sfd__h431418)
  begin
    case (guard__h422462)
      2'b0, 2'b01:
	  CASE_guard22462_0b0_sfdin30682_BITS_56_TO_5_0b_ETC__q210 =
	      sfdin__h430682[56:5];
      2'b10:
	  CASE_guard22462_0b0_sfdin30682_BITS_56_TO_5_0b_ETC__q210 =
	      out_sfd__h431421;
      2'b11:
	  CASE_guard22462_0b0_sfdin30682_BITS_56_TO_5_0b_ETC__q210 =
	      _theResult___sfd__h431418;
    endcase
  end
  always@(guard__h431531 or
	  _theResult___snd__h439467 or _theResult___sfd__h440202)
  begin
    case (guard__h431531)
      2'b0:
	  CASE_guard31531_0b0_theResult___snd39467_BITS__ETC__q211 =
	      _theResult___snd__h439467[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard31531_0b0_theResult___snd39467_BITS__ETC__q211 =
	      _theResult___sfd__h440202;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___snd__h439467 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8835 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8833 or
	  CASE_guard31531_0b0_theResult___snd39467_BITS__ETC__q211)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8839 =
	      _theResult___snd__h439467[56:5];
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8839 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8835;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8839 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d8833;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8839 =
	      CASE_guard31531_0b0_theResult___snd39467_BITS__ETC__q211;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8839 =
		   52'd0;
    endcase
  end
  always@(guard__h431531 or
	  _theResult___snd__h439467 or
	  out_sfd__h440205 or _theResult___sfd__h440202)
  begin
    case (guard__h431531)
      2'b0, 2'b01:
	  CASE_guard31531_0b0_theResult___snd39467_BITS__ETC__q212 =
	      _theResult___snd__h439467[56:5];
      2'b10:
	  CASE_guard31531_0b0_theResult___snd39467_BITS__ETC__q212 =
	      out_sfd__h440205;
      2'b11:
	  CASE_guard31531_0b0_theResult___snd39467_BITS__ETC__q212 =
	      _theResult___sfd__h440202;
    endcase
  end
  always@(guard__h491307 or
	  _theResult___snd__h499219 or _theResult___sfd__h499924)
  begin
    case (guard__h491307)
      2'b0:
	  CASE_guard91307_0b0_theResult___snd99219_BITS__ETC__q213 =
	      _theResult___snd__h499219[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard91307_0b0_theResult___snd99219_BITS__ETC__q213 =
	      _theResult___sfd__h499924;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___snd__h499219 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9499 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9497 or
	  CASE_guard91307_0b0_theResult___snd99219_BITS__ETC__q213)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9503 =
	      _theResult___snd__h499219[56:5];
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9503 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9499;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9503 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9497;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9503 =
	      CASE_guard91307_0b0_theResult___snd99219_BITS__ETC__q213;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9503 =
		   52'd0;
    endcase
  end
  always@(guard__h491307 or
	  _theResult___snd__h499219 or
	  out_sfd__h499927 or _theResult___sfd__h499924)
  begin
    case (guard__h491307)
      2'b0, 2'b01:
	  CASE_guard91307_0b0_theResult___snd99219_BITS__ETC__q214 =
	      _theResult___snd__h499219[56:5];
      2'b10:
	  CASE_guard91307_0b0_theResult___snd99219_BITS__ETC__q214 =
	      out_sfd__h499927;
      2'b11:
	  CASE_guard91307_0b0_theResult___snd99219_BITS__ETC__q214 =
	      _theResult___sfd__h499924;
    endcase
  end
  always@(guard__h500619 or sfdin__h508839 or _theResult___sfd__h509575)
  begin
    case (guard__h500619)
      2'b0:
	  CASE_guard00619_0b0_sfdin08839_BITS_56_TO_5_0b_ETC__q215 =
	      sfdin__h508839[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard00619_0b0_sfdin08839_BITS_56_TO_5_0b_ETC__q215 =
	      _theResult___sfd__h509575;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  sfdin__h508839 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9525 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9523 or
	  CASE_guard00619_0b0_sfdin08839_BITS_56_TO_5_0b_ETC__q215)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9529 =
	      sfdin__h508839[56:5];
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9529 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9525;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9529 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9523;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9529 =
	      CASE_guard00619_0b0_sfdin08839_BITS_56_TO_5_0b_ETC__q215;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9529 =
		   52'd0;
    endcase
  end
  always@(guard__h500619 or
	  sfdin__h508839 or out_sfd__h509578 or _theResult___sfd__h509575)
  begin
    case (guard__h500619)
      2'b0, 2'b01:
	  CASE_guard00619_0b0_sfdin08839_BITS_56_TO_5_0b_ETC__q216 =
	      sfdin__h508839[56:5];
      2'b10:
	  CASE_guard00619_0b0_sfdin08839_BITS_56_TO_5_0b_ETC__q216 =
	      out_sfd__h509578;
      2'b11:
	  CASE_guard00619_0b0_sfdin08839_BITS_56_TO_5_0b_ETC__q216 =
	      _theResult___sfd__h509575;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  coreFix_fpuMulDivExe_0_regToExeQ_first__045_BI_ETC___d10562 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10550 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10539)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229])
      5'd0, 5'd1, 5'd2, 5'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10564 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10550;
      5'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10564 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10539;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10564 =
		   coreFix_fpuMulDivExe_0_regToExeQ_first__045_BI_ETC___d10562;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  coreFix_fpuMulDivExe_0_regToExeQ_first__045_BI_ETC___d10526 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10481 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10439)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229])
      5'd0, 5'd1, 5'd2, 5'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10528 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10481;
      5'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10528 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10439;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10528 =
		   coreFix_fpuMulDivExe_0_regToExeQ_first__045_BI_ETC___d10526;
    endcase
  end
  always@(guard__h509688 or
	  _theResult___snd__h517624 or _theResult___sfd__h518359)
  begin
    case (guard__h509688)
      2'b0:
	  CASE_guard09688_0b0_theResult___snd17624_BITS__ETC__q217 =
	      _theResult___snd__h517624[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard09688_0b0_theResult___snd17624_BITS__ETC__q217 =
	      _theResult___sfd__h518359;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___snd__h517624 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9544 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9542 or
	  CASE_guard09688_0b0_theResult___snd17624_BITS__ETC__q217)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9548 =
	      _theResult___snd__h517624[56:5];
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9548 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9544;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9548 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9542;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9548 =
	      CASE_guard09688_0b0_theResult___snd17624_BITS__ETC__q217;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9548 =
		   52'd0;
    endcase
  end
  always@(guard__h509688 or
	  _theResult___snd__h517624 or
	  out_sfd__h518362 or _theResult___sfd__h518359)
  begin
    case (guard__h509688)
      2'b0, 2'b01:
	  CASE_guard09688_0b0_theResult___snd17624_BITS__ETC__q218 =
	      _theResult___snd__h517624[56:5];
      2'b10:
	  CASE_guard09688_0b0_theResult___snd17624_BITS__ETC__q218 =
	      out_sfd__h518362;
      2'b11:
	  CASE_guard09688_0b0_theResult___snd17624_BITS__ETC__q218 =
	      _theResult___sfd__h518359;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  coreFix_fpuMulDivExe_0_regToExeQ_first__045_BI_ETC___d10610 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10594 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10579)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229])
      5'd0, 5'd1, 5'd2, 5'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10612 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10594;
      5'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10612 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10579;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10612 =
		   coreFix_fpuMulDivExe_0_regToExeQ_first__045_BI_ETC___d10610;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  coreFix_fpuMulDivExe_0_regToExeQ_first__045_BI_ETC___d10652 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10638 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10625)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229])
      5'd0, 5'd1, 5'd2, 5'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10654 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10638;
      5'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10654 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10625;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10654 =
		   coreFix_fpuMulDivExe_0_regToExeQ_first__045_BI_ETC___d10652;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  coreFix_fpuMulDivExe_0_regToExeQ_first__045_BI_ETC___d10694 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10680 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10667)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229])
      5'd0, 5'd1, 5'd2, 5'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10696 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10680;
      5'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10696 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d10667;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10696 =
		   coreFix_fpuMulDivExe_0_regToExeQ_first__045_BI_ETC___d10694;
    endcase
  end
  always@(coreFix_aluExe_0_regToExeQ$first)
  begin
    case (coreFix_aluExe_0_regToExeQ$first[399:397])
      3'd0, 3'd1, 3'd2, 3'd3, 3'd4:
	  CASE_coreFix_aluExe_0_regToExeQfirst_BITS_399_ETC__q219 =
	      coreFix_aluExe_0_regToExeQ$first[399:397];
      default: CASE_coreFix_aluExe_0_regToExeQfirst_BITS_399_ETC__q219 = 3'd7;
    endcase
  end
  always@(coreFix_aluExe_0_regToExeQ$first or
	  CASE_coreFix_aluExe_0_regToExeQfirst_BITS_399_ETC__q219)
  begin
    case (coreFix_aluExe_0_regToExeQ$first[416:414])
      3'd3, 3'd2, 3'd1, 3'd0:
	  CASE_coreFix_aluExe_0_regToExeQfirst_BITS_416_ETC__q220 =
	      coreFix_aluExe_0_regToExeQ$first[416:396];
      3'd4:
	  CASE_coreFix_aluExe_0_regToExeQfirst_BITS_416_ETC__q220 =
	      { coreFix_aluExe_0_regToExeQ$first[416:414],
		9'h0AA,
		coreFix_aluExe_0_regToExeQ$first[404:400],
		CASE_coreFix_aluExe_0_regToExeQfirst_BITS_399_ETC__q219,
		coreFix_aluExe_0_regToExeQ$first[396] };
      default: CASE_coreFix_aluExe_0_regToExeQfirst_BITS_416_ETC__q220 =
		   { 3'd5, 18'h2AAAA };
    endcase
  end
  always@(coreFix_aluExe_0_regToExeQ$first)
  begin
    case (coreFix_aluExe_0_regToExeQ$first[394:383])
      12'd1955,
      12'd1954,
      12'd1953,
      12'd1952,
      12'd3860,
      12'd3859,
      12'd3858,
      12'd3857,
      12'd2818,
      12'd2816,
      12'd836,
      12'd835,
      12'd834,
      12'd833,
      12'd832,
      12'd774,
      12'd773,
      12'd772,
      12'd771,
      12'd770,
      12'd769,
      12'd768,
      12'd384,
      12'd324,
      12'd323,
      12'd322,
      12'd321,
      12'd320,
      12'd262,
      12'd261,
      12'd260,
      12'd256,
      12'd2049,
      12'd2048,
      12'd3074,
      12'd3073,
      12'd3072,
      12'd3,
      12'd2,
      12'd1:
	  CASE_coreFix_aluExe_0_regToExeQfirst_BITS_394_ETC__q221 =
	      coreFix_aluExe_0_regToExeQ$first[394:383];
      default: CASE_coreFix_aluExe_0_regToExeQfirst_BITS_394_ETC__q221 =
		   12'd2303;
    endcase
  end
  always@(coreFix_aluExe_1_regToExeQ$first)
  begin
    case (coreFix_aluExe_1_regToExeQ$first[399:397])
      3'd0, 3'd1, 3'd2, 3'd3, 3'd4:
	  CASE_coreFix_aluExe_1_regToExeQfirst_BITS_399_ETC__q222 =
	      coreFix_aluExe_1_regToExeQ$first[399:397];
      default: CASE_coreFix_aluExe_1_regToExeQfirst_BITS_399_ETC__q222 = 3'd7;
    endcase
  end
  always@(coreFix_aluExe_1_regToExeQ$first or
	  CASE_coreFix_aluExe_1_regToExeQfirst_BITS_399_ETC__q222)
  begin
    case (coreFix_aluExe_1_regToExeQ$first[416:414])
      3'd3, 3'd2, 3'd1, 3'd0:
	  CASE_coreFix_aluExe_1_regToExeQfirst_BITS_416_ETC__q223 =
	      coreFix_aluExe_1_regToExeQ$first[416:396];
      3'd4:
	  CASE_coreFix_aluExe_1_regToExeQfirst_BITS_416_ETC__q223 =
	      { coreFix_aluExe_1_regToExeQ$first[416:414],
		9'h0AA,
		coreFix_aluExe_1_regToExeQ$first[404:400],
		CASE_coreFix_aluExe_1_regToExeQfirst_BITS_399_ETC__q222,
		coreFix_aluExe_1_regToExeQ$first[396] };
      default: CASE_coreFix_aluExe_1_regToExeQfirst_BITS_416_ETC__q223 =
		   { 3'd5, 18'h2AAAA };
    endcase
  end
  always@(coreFix_aluExe_1_regToExeQ$first)
  begin
    case (coreFix_aluExe_1_regToExeQ$first[394:383])
      12'd1955,
      12'd1954,
      12'd1953,
      12'd1952,
      12'd3860,
      12'd3859,
      12'd3858,
      12'd3857,
      12'd2818,
      12'd2816,
      12'd836,
      12'd835,
      12'd834,
      12'd833,
      12'd832,
      12'd774,
      12'd773,
      12'd772,
      12'd771,
      12'd770,
      12'd769,
      12'd768,
      12'd384,
      12'd324,
      12'd323,
      12'd322,
      12'd321,
      12'd320,
      12'd262,
      12'd261,
      12'd260,
      12'd256,
      12'd2049,
      12'd2048,
      12'd3074,
      12'd3073,
      12'd3072,
      12'd3,
      12'd2,
      12'd1:
	  CASE_coreFix_aluExe_1_regToExeQfirst_BITS_394_ETC__q224 =
	      coreFix_aluExe_1_regToExeQ$first[394:383];
      default: CASE_coreFix_aluExe_1_regToExeQfirst_BITS_394_ETC__q224 =
		   12'd2303;
    endcase
  end
  always@(fetchStage$pipelines_0_first)
  begin
    case (fetchStage$pipelines_0_first[172:161])
      12'd1,
      12'd2,
      12'd3,
      12'd256,
      12'd260,
      12'd261,
      12'd262,
      12'd320,
      12'd321,
      12'd322,
      12'd323,
      12'd324,
      12'd384,
      12'd768,
      12'd769,
      12'd770,
      12'd771,
      12'd772,
      12'd773,
      12'd774,
      12'd832,
      12'd833,
      12'd834,
      12'd835,
      12'd836,
      12'd1952,
      12'd1953,
      12'd1954,
      12'd1955,
      12'd2048,
      12'd2049,
      12'd2816,
      12'd2818,
      12'd3072,
      12'd3073,
      12'd3074,
      12'd3857,
      12'd3858,
      12'd3859,
      12'd3860:
	  IF_fetchStage_pipelines_0_first__2491_BITS_172_ETC___d12688 =
	      fetchStage$pipelines_0_first[172:161];
      default: IF_fetchStage_pipelines_0_first__2491_BITS_172_ETC___d12688 =
		   12'd2303;
    endcase
  end
  always@(fetchStage$pipelines_0_first)
  begin
    case (fetchStage$pipelines_0_first[67:64])
      4'd0, 4'd1, 4'd2, 4'd3, 4'd4, 4'd5, 4'd6, 4'd7, 4'd8, 4'd9:
	  IF_fetchStage_pipelines_0_first__2491_BIT_68_2_ETC___d12888 =
	      fetchStage$pipelines_0_first[67:64];
      4'd11:
	  IF_fetchStage_pipelines_0_first__2491_BIT_68_2_ETC___d12888 = 4'd10;
      4'd12:
	  IF_fetchStage_pipelines_0_first__2491_BIT_68_2_ETC___d12888 = 4'd11;
      4'd13:
	  IF_fetchStage_pipelines_0_first__2491_BIT_68_2_ETC___d12888 = 4'd12;
      default: IF_fetchStage_pipelines_0_first__2491_BIT_68_2_ETC___d12888 =
		   4'd13;
    endcase
  end
  always@(fetchStage$pipelines_0_first)
  begin
    case (fetchStage$pipelines_0_first[177:175])
      3'd0, 3'd1, 3'd2, 3'd3, 3'd4:
	  CASE_fetchStagepipelines_0_first_BITS_177_TO__ETC__q225 =
	      fetchStage$pipelines_0_first[177:175];
      default: CASE_fetchStagepipelines_0_first_BITS_177_TO__ETC__q225 = 3'd7;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  CASE_fetchStagepipelines_0_first_BITS_177_TO__ETC__q225)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1, 3'd2, 3'd3:
	  IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d12606 =
	      fetchStage$pipelines_0_first[194:174];
      3'd4:
	  IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d12606 =
	      { fetchStage$pipelines_0_first[194:192],
		9'h0AA,
		fetchStage$pipelines_0_first[182:178],
		CASE_fetchStagepipelines_0_first_BITS_177_TO__ETC__q225,
		fetchStage$pipelines_0_first[174] };
      default: IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d12606 =
		   21'd1485482;
    endcase
  end
  always@(checkForException___d12723)
  begin
    case (checkForException___d12723[3:0])
      4'd0, 4'd1, 4'd2, 4'd3, 4'd4, 4'd5, 4'd6, 4'd7, 4'd8, 4'd9:
	  CASE_checkForException_2723_BITS_3_TO_0_0_chec_ETC__q226 =
	      checkForException___d12723[3:0];
      4'd11: CASE_checkForException_2723_BITS_3_TO_0_0_chec_ETC__q226 = 4'd10;
      4'd12: CASE_checkForException_2723_BITS_3_TO_0_0_chec_ETC__q226 = 4'd11;
      4'd13: CASE_checkForException_2723_BITS_3_TO_0_0_chec_ETC__q226 = 4'd12;
      default: CASE_checkForException_2723_BITS_3_TO_0_0_chec_ETC__q226 =
		   4'd13;
    endcase
  end
  always@(IF_NOT_IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3__ETC___d12990)
  begin
    case (IF_NOT_IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3__ETC___d12990)
      4'd0, 4'd1:
	  CASE_IF_NOT_IF_IF_NOT_csrf_prv_reg_read__2519__ETC__q227 =
	      IF_NOT_IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3__ETC___d12990;
      4'd2: CASE_IF_NOT_IF_IF_NOT_csrf_prv_reg_read__2519__ETC__q227 = 4'd3;
      4'd3: CASE_IF_NOT_IF_IF_NOT_csrf_prv_reg_read__2519__ETC__q227 = 4'd4;
      4'd4: CASE_IF_NOT_IF_IF_NOT_csrf_prv_reg_read__2519__ETC__q227 = 4'd5;
      4'd5: CASE_IF_NOT_IF_IF_NOT_csrf_prv_reg_read__2519__ETC__q227 = 4'd7;
      4'd6: CASE_IF_NOT_IF_IF_NOT_csrf_prv_reg_read__2519__ETC__q227 = 4'd8;
      4'd7: CASE_IF_NOT_IF_IF_NOT_csrf_prv_reg_read__2519__ETC__q227 = 4'd9;
      default: CASE_IF_NOT_IF_IF_NOT_csrf_prv_reg_read__2519__ETC__q227 =
		   4'd11;
    endcase
  end
  always@(k__h590245 or
	  coreFix_aluExe_0_rsAlu$canEnq or coreFix_aluExe_1_rsAlu$canEnq)
  begin
    case (k__h590245)
      1'd0:
	  SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3189_co_ETC___d13199 =
	      coreFix_aluExe_0_rsAlu$canEnq;
      1'd1:
	  SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3189_co_ETC___d13199 =
	      coreFix_aluExe_1_rsAlu$canEnq;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_0_first[191:189])
      3'd0, 3'd2:
	  IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13211 =
	      coreFix_memExe_lsq$enqLdTag[6];
      default: IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13211 =
		   coreFix_memExe_lsq$enqStTag[6];
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_rsMem$canEnq or
	  IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13211 or
	  SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3189_co_ETC___d13199 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13215 =
	      SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3189_co_ETC___d13199;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13215 =
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq;
      default: IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13215 =
		   fetchStage$pipelines_0_first[194:192] != 3'd2 ||
		   coreFix_memExe_rsMem$canEnq &&
		   IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13211;
    endcase
  end
  always@(k__h590245 or
	  coreFix_aluExe_0_rsAlu$canEnq or coreFix_aluExe_1_rsAlu$canEnq)
  begin
    case (k__h590245)
      1'd0:
	  SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__318_ETC___d13232 =
	      !coreFix_aluExe_0_rsAlu$canEnq;
      1'd1:
	  SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__318_ETC___d13232 =
	      !coreFix_aluExe_1_rsAlu$canEnq;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  regRenamingTable$rename_0_canRename or
	  NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13179 or
	  NOT_SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__ETC___d13234 or
	  coreFix_memExe_rsMem$canEnq or
	  IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13211 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13239 =
	      NOT_SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__ETC___d13234;
      3'd2:
	  IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13239 =
	      coreFix_memExe_rsMem$canEnq &&
	      IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13211 &&
	      regRenamingTable$rename_0_canRename &&
	      NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13179;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13239 =
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq &&
	      regRenamingTable$rename_0_canRename &&
	      NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13179;
      default: IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13239 =
		   regRenamingTable$rename_0_canRename &&
		   NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13179;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_0_first[191:189])
      3'd0, 3'd2:
	  IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13267 =
	      !coreFix_memExe_lsq$enqLdTag[6];
      default: IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13267 =
		   !coreFix_memExe_lsq$enqStTag[6];
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_rsMem$canEnq or
	  IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13267 or
	  SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__318_ETC___d13232 or
	  specTagManager$canClaim or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13272 =
	      SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__318_ETC___d13232 ||
	      fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	      !specTagManager$canClaim;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13272 =
	      !coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq;
      default: IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13272 =
		   fetchStage$pipelines_0_first[194:192] == 3'd2 &&
		   (!coreFix_memExe_rsMem$canEnq ||
		    IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13267);
    endcase
  end
  always@(fetchStage$pipelines_1_first)
  begin
    case (fetchStage$pipelines_1_first[172:161])
      12'd1,
      12'd2,
      12'd3,
      12'd256,
      12'd260,
      12'd261,
      12'd262,
      12'd320,
      12'd321,
      12'd322,
      12'd323,
      12'd324,
      12'd384,
      12'd768,
      12'd769,
      12'd770,
      12'd771,
      12'd772,
      12'd773,
      12'd774,
      12'd832,
      12'd833,
      12'd834,
      12'd835,
      12'd836,
      12'd1952,
      12'd1953,
      12'd1954,
      12'd1955,
      12'd2048,
      12'd2049,
      12'd2816,
      12'd2818,
      12'd3072,
      12'd3073,
      12'd3074,
      12'd3857,
      12'd3858,
      12'd3859,
      12'd3860:
	  CASE_fetchStagepipelines_1_first_BITS_172_TO__ETC__q228 =
	      fetchStage$pipelines_1_first[172:161];
      default: CASE_fetchStagepipelines_1_first_BITS_172_TO__ETC__q228 =
		   12'd2303;
    endcase
  end
  always@(fetchStage$pipelines_1_first)
  begin
    case (fetchStage$pipelines_1_first[177:175])
      3'd0, 3'd1, 3'd2, 3'd3, 3'd4:
	  CASE_fetchStagepipelines_1_first_BITS_177_TO__ETC__q229 =
	      fetchStage$pipelines_1_first[177:175];
      default: CASE_fetchStagepipelines_1_first_BITS_177_TO__ETC__q229 = 3'd7;
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  CASE_fetchStagepipelines_1_first_BITS_177_TO__ETC__q229)
  begin
    case (fetchStage$pipelines_1_first[194:192])
      3'd0, 3'd1, 3'd2, 3'd3:
	  IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13332 =
	      fetchStage$pipelines_1_first[194:174];
      3'd4:
	  IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13332 =
	      { fetchStage$pipelines_1_first[194:192],
		9'h0AA,
		fetchStage$pipelines_1_first[182:178],
		CASE_fetchStagepipelines_1_first_BITS_177_TO__ETC__q229,
		fetchStage$pipelines_1_first[174] };
      default: IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13332 =
		   21'd1485482;
    endcase
  end
  always@(idx__h606397 or
	  fetchStage$pipelines_0_canDeq or
	  NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13483 or
	  coreFix_aluExe_0_rsAlu$canEnq or
	  NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13489 or
	  coreFix_aluExe_1_rsAlu$canEnq)
  begin
    case (idx__h606397)
      1'd0:
	  SEL_ARR_fetchStage_pipelines_0_canDeq__2489_AN_ETC___d13508 =
	      fetchStage$pipelines_0_canDeq &&
	      NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13483 ||
	      !coreFix_aluExe_0_rsAlu$canEnq;
      1'd1:
	  SEL_ARR_fetchStage_pipelines_0_canDeq__2489_AN_ETC___d13508 =
	      fetchStage$pipelines_0_canDeq &&
	      NOT_fetchStage_pipelines_0_first__2491_BITS_19_ETC___d13489 ||
	      !coreFix_aluExe_1_rsAlu$canEnq;
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_1_first[191:189])
      3'd0, 3'd2:
	  CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q230 =
	      !coreFix_memExe_lsq$enqLdTag[6];
      default: CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q230 =
		   !coreFix_memExe_lsq$enqStTag[6];
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555 or
	  SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__318_ETC___d13232 or
	  fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13575 or
	  NOT_coreFix_memExe_rsMem_canEnq__3202_3264_OR__ETC___d13578 or
	  NOT_coreFix_fpuMulDivExe_0_rsFpuMulDiv_canEnq__ETC___d13577)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13581 =
	      SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__318_ETC___d13232 ||
	      fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13575;
      3'd2:
	  IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13581 =
	      NOT_coreFix_memExe_rsMem_canEnq__3202_3264_OR__ETC___d13578;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13581 =
	      NOT_coreFix_fpuMulDivExe_0_rsFpuMulDiv_canEnq__ETC___d13577;
      default: IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13581 =
		   fetchStage$pipelines_0_first[68] ||
		   IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[0] ||
		   IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[1] ||
		   IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[2] ||
		   IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[3] ||
		   IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[4] ||
		   IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[5] ||
		   IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[6] ||
		   IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[7] ||
		   IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[8] ||
		   IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[9] ||
		   IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[10] ||
		   IF_IF_NOT_csrf_prv_reg_read__2519_EQ_3_2520_25_ETC___d12555[11];
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_rsMem$canEnq or
	  IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13211 or
	  SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3189_co_ETC___d13199)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13602 =
	      SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3189_co_ETC___d13199;
      default: IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13602 =
		   fetchStage$pipelines_0_first[194:192] != 3'd2 ||
		   coreFix_memExe_rsMem$canEnq &&
		   IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13211;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13211 or
	  SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3189_co_ETC___d13199 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13619 =
	      SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3189_co_ETC___d13199;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13619 =
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq;
      default: IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13619 =
		   fetchStage$pipelines_0_first[194:192] != 3'd2 ||
		   IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13211;
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_1_first[191:189])
      3'd0, 3'd2:
	  CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q231 =
	      coreFix_memExe_lsq$enqLdTag[6];
      default: CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q231 =
		   coreFix_memExe_lsq$enqStTag[6];
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  regRenamingTable$rename_1_canRename or
	  NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13474 or
	  SEL_ARR_fetchStage_pipelines_0_canDeq__2489_AN_ETC___d13508 or
	  NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13587 or
	  NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13616 or
	  NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13625 or
	  NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13599 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq or
	  NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13608)
  begin
    case (fetchStage$pipelines_1_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13630 =
	      !SEL_ARR_fetchStage_pipelines_0_canDeq__2489_AN_ETC___d13508 &&
	      NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13587;
      3'd2:
	  IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13630 =
	      NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13616 &&
	      regRenamingTable$rename_1_canRename &&
	      NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13625;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13630 =
	      NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13599 &&
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq &&
	      regRenamingTable$rename_1_canRename &&
	      NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13608;
      default: IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13630 =
		   regRenamingTable$rename_1_canRename &&
		   NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d13474;
    endcase
  end
  always@(k__h590245 or
	  coreFix_aluExe_0_rsAlu$RDY_enq or coreFix_aluExe_1_rsAlu$RDY_enq)
  begin
    case (k__h590245)
      1'd0:
	  CASE_k90245_0_coreFix_aluExe_0_rsAluRDY_enq_1_ETC__q232 =
	      coreFix_aluExe_0_rsAlu$RDY_enq;
      1'd1:
	  CASE_k90245_0_coreFix_aluExe_0_rsAluRDY_enq_1_ETC__q232 =
	      coreFix_aluExe_1_rsAlu$RDY_enq;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_lsq$RDY_enqSt or coreFix_memExe_lsq$RDY_enqLd)
  begin
    case (fetchStage$pipelines_0_first[191:189])
      3'd0, 3'd2:
	  CASE_fetchStagepipelines_0_first_BITS_191_TO__ETC__q233 =
	      coreFix_memExe_lsq$RDY_enqLd;
      default: CASE_fetchStagepipelines_0_first_BITS_191_TO__ETC__q233 =
		   coreFix_memExe_lsq$RDY_enqSt;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_rsMem$canEnq or
	  IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13267 or
	  SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__318_ETC___d13232 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13674 =
	      SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__318_ETC___d13232;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13674 =
	      !coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq;
      default: IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13674 =
		   fetchStage$pipelines_0_first[194:192] == 3'd2 &&
		   (!coreFix_memExe_rsMem$canEnq ||
		    IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13267);
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_rsMem$canEnq or
	  IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13267 or
	  regRenamingTable_RDY_rename_0_getRename__3022__ETC___d13668 or
	  SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3189_co_ETC___d13199 or
	  regRenamingTable$RDY_rename_0_getRename or
	  _0_OR_NOT_fetchStage_pipelines_0_first__2491_BI_ETC___d13655 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_enq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13672 =
	      !SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3189_co_ETC___d13199 ||
	      regRenamingTable$RDY_rename_0_getRename &&
	      _0_OR_NOT_fetchStage_pipelines_0_first__2491_BI_ETC___d13655;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13672 =
	      !coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq ||
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_enq &&
	      regRenamingTable$RDY_rename_0_getRename;
      default: IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13672 =
		   fetchStage$pipelines_0_first[194:192] != 3'd2 ||
		   !coreFix_memExe_rsMem$canEnq ||
		   IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13267 ||
		   regRenamingTable_RDY_rename_0_getRename__3022__ETC___d13668;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_rsMem$canEnq or
	  IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13267 or
	  SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3189_co_ETC___d13199 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13688 =
	      !SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3189_co_ETC___d13199;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13688 =
	      !coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq;
      default: IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13688 =
		   fetchStage$pipelines_0_first[194:192] == 3'd2 &&
		   (!coreFix_memExe_rsMem$canEnq ||
		    IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13267);
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_rsMem$canEnq or
	  IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13211 or
	  SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__318_ETC___d13232 or
	  specTagManager$canClaim or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13695 =
	      !SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__318_ETC___d13232 &&
	      (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	       specTagManager$canClaim);
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13695 =
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq;
      default: IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13695 =
		   fetchStage$pipelines_0_first[194:192] != 3'd2 ||
		   coreFix_memExe_rsMem$canEnq &&
		   IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13211;
    endcase
  end
  always@(idx__h606397 or
	  fetchStage$pipelines_0_canDeq or
	  fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13711 or
	  coreFix_aluExe_0_rsAlu$canEnq or
	  fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13718 or
	  coreFix_aluExe_1_rsAlu$canEnq)
  begin
    case (idx__h606397)
      1'd0:
	  SEL_ARR_NOT_fetchStage_pipelines_0_canDeq__248_ETC___d13722 =
	      (!fetchStage$pipelines_0_canDeq ||
	       fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13711) &&
	      coreFix_aluExe_0_rsAlu$canEnq;
      1'd1:
	  SEL_ARR_NOT_fetchStage_pipelines_0_canDeq__248_ETC___d13722 =
	      (!fetchStage$pipelines_0_canDeq ||
	       fetchStage_pipelines_0_first__2491_BITS_194_TO_ETC___d13718) &&
	      coreFix_aluExe_1_rsAlu$canEnq;
    endcase
  end
  always@(fetchStage_pipelines_0_canDeq__2489_AND_NOT_fe_ETC___d13738 or
	  coreFix_aluExe_0_rsAlu$RDY_enq or coreFix_aluExe_1_rsAlu$RDY_enq)
  begin
    case (fetchStage_pipelines_0_canDeq__2489_AND_NOT_fe_ETC___d13738)
      1'd0:
	  CASE_fetchStage_pipelines_0_canDeq__2489_AND_N_ETC__q234 =
	      coreFix_aluExe_0_rsAlu$RDY_enq;
      1'd1:
	  CASE_fetchStage_pipelines_0_canDeq__2489_AND_N_ETC__q234 =
	      coreFix_aluExe_1_rsAlu$RDY_enq;
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  coreFix_memExe_lsq$RDY_enqSt or coreFix_memExe_lsq$RDY_enqLd)
  begin
    case (fetchStage$pipelines_1_first[191:189])
      3'd0, 3'd2:
	  CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q235 =
	      coreFix_memExe_lsq$RDY_enqLd;
      default: CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q235 =
		   coreFix_memExe_lsq$RDY_enqSt;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_rsMem$canEnq or
	  IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13267 or
	  SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3189_co_ETC___d13199)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13764 =
	      !SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3189_co_ETC___d13199;
      default: IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13764 =
		   fetchStage$pipelines_0_first[194:192] == 3'd2 &&
		   (!coreFix_memExe_rsMem$canEnq ||
		    IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13267);
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13267 or
	  SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3189_co_ETC___d13199 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13775 =
	      !SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__3189_co_ETC___d13199;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13775 =
	      !coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq;
      default: IF_fetchStage_pipelines_0_first__2491_BITS_194_ETC___d13775 =
		   fetchStage$pipelines_0_first[194:192] == 3'd2 &&
		   IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13267;
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  fetchStage_pipelines_0_canDeq__2489_AND_regRen_ETC___d13783 or
	  SEL_ARR_fetchStage_pipelines_0_canDeq__2489_AN_ETC___d13508 or
	  fetchStage_pipelines_0_canDeq__2489_AND_regRen_ETC___d13772)
  begin
    case (fetchStage$pipelines_1_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13786 =
	      SEL_ARR_fetchStage_pipelines_0_canDeq__2489_AN_ETC___d13508;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13786 =
	      fetchStage_pipelines_0_canDeq__2489_AND_regRen_ETC___d13772;
      default: IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13786 =
		   fetchStage$pipelines_1_first[194:192] == 3'd2 &&
		   fetchStage_pipelines_0_canDeq__2489_AND_regRen_ETC___d13783;
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  fetchStage_pipelines_0_canDeq__2489_AND_regRen_ETC___d13751 or
	  regRenamingTable$RDY_rename_1_getRename or
	  NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13756 or
	  SEL_ARR_NOT_fetchStage_pipelines_0_canDeq__248_ETC___d13722 or
	  regRenamingTable_RDY_rename_1_getRename__3724__ETC___d13742 or
	  fetchStage_pipelines_0_canDeq__2489_AND_regRen_ETC___d13744 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv_RDY_enq__36_ETC___d13747)
  begin
    case (fetchStage$pipelines_1_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13761 =
	      !SEL_ARR_NOT_fetchStage_pipelines_0_canDeq__248_ETC___d13722 ||
	      regRenamingTable_RDY_rename_1_getRename__3724__ETC___d13742;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13761 =
	      fetchStage_pipelines_0_canDeq__2489_AND_regRen_ETC___d13744 ||
	      !coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq ||
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv_RDY_enq__36_ETC___d13747;
      default: IF_fetchStage_pipelines_1_first__2500_BITS_194_ETC___d13761 =
		   fetchStage$pipelines_1_first[194:192] != 3'd2 ||
		   fetchStage_pipelines_0_canDeq__2489_AND_regRen_ETC___d13751 ||
		   regRenamingTable$RDY_rename_1_getRename &&
		   NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13756;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_0_first[191:189])
      3'd0, 3'd2:
	  IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13859 =
	      !coreFix_memExe_lsq$enqLdTag[5];
      default: IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13859 =
		   !coreFix_memExe_lsq$enqStTag[5];
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_0_first[191:189])
      3'd0, 3'd2:
	  IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13856 =
	      coreFix_memExe_lsq$enqLdTag[5];
      default: IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13856 =
		   coreFix_memExe_lsq$enqStTag[5];
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_0_first[191:189])
      3'd0, 3'd2:
	  IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13865 =
	      coreFix_memExe_lsq$enqLdTag[3:0];
      default: IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13865 =
		   coreFix_memExe_lsq$enqStTag[3:0];
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_0_first[191:189])
      3'd0, 3'd2:
	  IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13862 =
	      coreFix_memExe_lsq$enqLdTag[4:0];
      default: IF_fetchStage_pipelines_0_first__2491_BITS_191_ETC___d13862 =
		   coreFix_memExe_lsq$enqStTag[4:0];
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_1_first[191:189])
      3'd0, 3'd2:
	  IF_fetchStage_pipelines_1_first__2500_BITS_191_ETC___d14026 =
	      coreFix_memExe_lsq$enqLdTag[3:0];
      default: IF_fetchStage_pipelines_1_first__2500_BITS_191_ETC___d14026 =
		   coreFix_memExe_lsq$enqStTag[3:0];
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_1_first[191:189])
      3'd0, 3'd2:
	  IF_fetchStage_pipelines_1_first__2500_BITS_191_ETC___d14024 =
	      !coreFix_memExe_lsq$enqLdTag[5];
      default: IF_fetchStage_pipelines_1_first__2500_BITS_191_ETC___d14024 =
		   !coreFix_memExe_lsq$enqStTag[5];
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_1_first[191:189])
      3'd0, 3'd2:
	  IF_fetchStage_pipelines_1_first__2500_BITS_191_ETC___d14023 =
	      coreFix_memExe_lsq$enqLdTag[5];
      default: IF_fetchStage_pipelines_1_first__2500_BITS_191_ETC___d14023 =
		   coreFix_memExe_lsq$enqStTag[5];
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_1_first[191:189])
      3'd0, 3'd2:
	  IF_fetchStage_pipelines_1_first__2500_BITS_191_ETC___d14025 =
	      coreFix_memExe_lsq$enqLdTag[4:0];
      default: IF_fetchStage_pipelines_1_first__2500_BITS_191_ETC___d14025 =
		   coreFix_memExe_lsq$enqStTag[4:0];
    endcase
  end
  always@(rob$deqPort_0_deq_data)
  begin
    case (rob$deqPort_0_deq_data[279:268])
      12'd1:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd0;
      12'd2:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd1;
      12'd3:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd2;
      12'd256:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd8;
      12'd260:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd9;
      12'd261:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd10;
      12'd262:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd11;
      12'd320:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd12;
      12'd321:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd13;
      12'd322:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd14;
      12'd323:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd15;
      12'd324:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd16;
      12'd384:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd17;
      12'd768:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd18;
      12'd769:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd19;
      12'd770:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd20;
      12'd771:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd21;
      12'd772:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd22;
      12'd773:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd23;
      12'd774:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd24;
      12'd832:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd25;
      12'd833:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd26;
      12'd834:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd27;
      12'd835:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd28;
      12'd836:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd29;
      12'd1952:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd36;
      12'd1953:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd37;
      12'd1954:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd38;
      12'd1955:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd39;
      12'd2048:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd6;
      12'd2049:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd7;
      12'd2816:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd30;
      12'd2818:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd31;
      12'd3072:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd3;
      12'd3073:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd4;
      12'd3074:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd5;
      12'd3857:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd32;
      12'd3858:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd33;
      12'd3859:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd34;
      12'd3860:
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 = 6'd35;
      default: IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 =
		   6'd40;
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q236 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[511:448];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q236 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[511:448];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q237 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[447:384];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q237 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[447:384];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q238 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[383:320];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q238 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[383:320];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q239 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[319:256];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q239 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[319:256];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q240 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[255:192];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q240 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[255:192];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q241 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[191:128];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q241 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[191:128];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10391 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226];
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10391 = 3'd4;
      3'd2:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10391 = 3'd3;
      3'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10391 = 3'd2;
      3'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10391 = 3'd1;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10391 =
		   3'd0;
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq or
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first or
	  coreFix_memExe_stb$deq or
	  IF_coreFix_memExe_dMem_cache_m_banks_0_linkAdd_ETC___d1962)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79])
      3'd0, 3'd2, 3'd4:
	  IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2253 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:0];
      3'd1:
	  IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2253 =
	      { coreFix_memExe_stb$deq[575] ?
		  coreFix_memExe_stb$deq[511:504] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:504],
		coreFix_memExe_stb$deq[574] ?
		  coreFix_memExe_stb$deq[503:496] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[503:496],
		coreFix_memExe_stb$deq[573] ?
		  coreFix_memExe_stb$deq[495:488] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[495:488],
		coreFix_memExe_stb$deq[572] ?
		  coreFix_memExe_stb$deq[487:480] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[487:480],
		coreFix_memExe_stb$deq[571] ?
		  coreFix_memExe_stb$deq[479:472] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[479:472],
		coreFix_memExe_stb$deq[570] ?
		  coreFix_memExe_stb$deq[471:464] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[471:464],
		coreFix_memExe_stb$deq[569] ?
		  coreFix_memExe_stb$deq[463:456] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[463:456],
		coreFix_memExe_stb$deq[568] ?
		  coreFix_memExe_stb$deq[455:448] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[455:448],
		coreFix_memExe_stb$deq[567] ?
		  coreFix_memExe_stb$deq[447:440] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[447:440],
		coreFix_memExe_stb$deq[566] ?
		  coreFix_memExe_stb$deq[439:432] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[439:432],
		coreFix_memExe_stb$deq[565] ?
		  coreFix_memExe_stb$deq[431:424] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[431:424],
		coreFix_memExe_stb$deq[564] ?
		  coreFix_memExe_stb$deq[423:416] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[423:416],
		coreFix_memExe_stb$deq[563] ?
		  coreFix_memExe_stb$deq[415:408] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[415:408],
		coreFix_memExe_stb$deq[562] ?
		  coreFix_memExe_stb$deq[407:400] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[407:400],
		coreFix_memExe_stb$deq[561] ?
		  coreFix_memExe_stb$deq[399:392] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[399:392],
		coreFix_memExe_stb$deq[560] ?
		  coreFix_memExe_stb$deq[391:384] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[391:384],
		coreFix_memExe_stb$deq[559] ?
		  coreFix_memExe_stb$deq[383:376] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[383:376],
		coreFix_memExe_stb$deq[558] ?
		  coreFix_memExe_stb$deq[375:368] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[375:368],
		coreFix_memExe_stb$deq[557] ?
		  coreFix_memExe_stb$deq[367:360] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[367:360],
		coreFix_memExe_stb$deq[556] ?
		  coreFix_memExe_stb$deq[359:352] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[359:352],
		coreFix_memExe_stb$deq[555] ?
		  coreFix_memExe_stb$deq[351:344] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[351:344],
		coreFix_memExe_stb$deq[554] ?
		  coreFix_memExe_stb$deq[343:336] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[343:336],
		coreFix_memExe_stb$deq[553] ?
		  coreFix_memExe_stb$deq[335:328] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[335:328],
		coreFix_memExe_stb$deq[552] ?
		  coreFix_memExe_stb$deq[327:320] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[327:320],
		coreFix_memExe_stb$deq[551] ?
		  coreFix_memExe_stb$deq[319:312] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[319:312],
		coreFix_memExe_stb$deq[550] ?
		  coreFix_memExe_stb$deq[311:304] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[311:304],
		coreFix_memExe_stb$deq[549] ?
		  coreFix_memExe_stb$deq[303:296] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[303:296],
		coreFix_memExe_stb$deq[548] ?
		  coreFix_memExe_stb$deq[295:288] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[295:288],
		coreFix_memExe_stb$deq[547] ?
		  coreFix_memExe_stb$deq[287:280] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[287:280],
		coreFix_memExe_stb$deq[546] ?
		  coreFix_memExe_stb$deq[279:272] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[279:272],
		coreFix_memExe_stb$deq[545] ?
		  coreFix_memExe_stb$deq[271:264] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[271:264],
		coreFix_memExe_stb$deq[544] ?
		  coreFix_memExe_stb$deq[263:256] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[263:256],
		coreFix_memExe_stb$deq[543] ?
		  coreFix_memExe_stb$deq[255:248] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[255:248],
		coreFix_memExe_stb$deq[542] ?
		  coreFix_memExe_stb$deq[247:240] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[247:240],
		coreFix_memExe_stb$deq[541] ?
		  coreFix_memExe_stb$deq[239:232] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[239:232],
		coreFix_memExe_stb$deq[540] ?
		  coreFix_memExe_stb$deq[231:224] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[231:224],
		coreFix_memExe_stb$deq[539] ?
		  coreFix_memExe_stb$deq[223:216] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[223:216],
		coreFix_memExe_stb$deq[538] ?
		  coreFix_memExe_stb$deq[215:208] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[215:208],
		coreFix_memExe_stb$deq[537] ?
		  coreFix_memExe_stb$deq[207:200] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[207:200],
		coreFix_memExe_stb$deq[536] ?
		  coreFix_memExe_stb$deq[199:192] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[199:192],
		coreFix_memExe_stb$deq[535] ?
		  coreFix_memExe_stb$deq[191:184] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[191:184],
		coreFix_memExe_stb$deq[534] ?
		  coreFix_memExe_stb$deq[183:176] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[183:176],
		coreFix_memExe_stb$deq[533] ?
		  coreFix_memExe_stb$deq[175:168] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[175:168],
		coreFix_memExe_stb$deq[532] ?
		  coreFix_memExe_stb$deq[167:160] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[167:160],
		coreFix_memExe_stb$deq[531] ?
		  coreFix_memExe_stb$deq[159:152] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[159:152],
		coreFix_memExe_stb$deq[530] ?
		  coreFix_memExe_stb$deq[151:144] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[151:144],
		coreFix_memExe_stb$deq[529] ?
		  coreFix_memExe_stb$deq[143:136] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[143:136],
		coreFix_memExe_stb$deq[528] ?
		  coreFix_memExe_stb$deq[135:128] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[135:128],
		coreFix_memExe_stb$deq[527] ?
		  coreFix_memExe_stb$deq[127:120] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[127:120],
		coreFix_memExe_stb$deq[526] ?
		  coreFix_memExe_stb$deq[119:112] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[119:112],
		coreFix_memExe_stb$deq[525] ?
		  coreFix_memExe_stb$deq[111:104] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[111:104],
		coreFix_memExe_stb$deq[524] ?
		  coreFix_memExe_stb$deq[103:96] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[103:96],
		coreFix_memExe_stb$deq[523] ?
		  coreFix_memExe_stb$deq[95:88] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[95:88],
		coreFix_memExe_stb$deq[522] ?
		  coreFix_memExe_stb$deq[87:80] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[87:80],
		coreFix_memExe_stb$deq[521] ?
		  coreFix_memExe_stb$deq[79:72] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[79:72],
		coreFix_memExe_stb$deq[520] ?
		  coreFix_memExe_stb$deq[71:64] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[71:64],
		coreFix_memExe_stb$deq[519] ?
		  coreFix_memExe_stb$deq[63:56] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[63:56],
		coreFix_memExe_stb$deq[518] ?
		  coreFix_memExe_stb$deq[55:48] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[55:48],
		coreFix_memExe_stb$deq[517] ?
		  coreFix_memExe_stb$deq[47:40] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[47:40],
		coreFix_memExe_stb$deq[516] ?
		  coreFix_memExe_stb$deq[39:32] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[39:32],
		coreFix_memExe_stb$deq[515] ?
		  coreFix_memExe_stb$deq[31:24] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[31:24],
		coreFix_memExe_stb$deq[514] ?
		  coreFix_memExe_stb$deq[23:16] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[23:16],
		coreFix_memExe_stb$deq[513] ?
		  coreFix_memExe_stb$deq[15:8] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[15:8],
		coreFix_memExe_stb$deq[512] ?
		  coreFix_memExe_stb$deq[7:0] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[7:0] };
      3'd3:
	  IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2253 =
	      IF_coreFix_memExe_dMem_cache_m_banks_0_linkAdd_ETC___d1962;
      default: IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2253 =
		   coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:0];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd4, 3'd3, 3'd2, 3'd1, 3'd0:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q242 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q242 = 3'd7;
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q243 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[130:67];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q243 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[130:67];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q244 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[66:3];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q244 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[66:3];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9558 or
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8848 or
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9614)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229])
      5'd0, 5'd1:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9618 =
	      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8848;
      5'd25:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9618 =
	      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9558;
      5'd26, 5'd27:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9618 =
	      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9614;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9618 =
		   IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d9558;
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q245 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[127:64];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q245 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[127:64];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q246 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[63:0];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q246 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[63:0];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q247 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[578:515];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q247 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[578:515];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q248 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[514:513];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q248 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[514:513];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q249 =
	      !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[512];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q249 =
	      !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[512];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q250 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[517:516];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q250 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[517:516];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q251 =
	      !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[515];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q251 =
	      !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[515];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_enq or
	  coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_enq or
	  coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_enq or
	  coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_enq)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229])
      5'd0, 5'd1, 5'd2, 5'd25, 5'd26, 5'd27, 5'd28:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8083 =
	      coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_enq;
      5'd3:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8083 =
	      coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_enq;
      5'd4:
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8083 =
	      coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_enq;
      default: IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8083 =
		   coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_enq;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ_RDY_enq_ETC___d8101 or
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit or
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_enq)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[229:228])
      2'd0, 2'd1:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q252 =
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit != 2'd0 &&
	      coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_enq;
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q252 =
		   coreFix_fpuMulDivExe_0_mulDivExec_divQ_RDY_enq_ETC___d8101;
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q253 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0[5:4];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q253 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1[5:4];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q254 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0[3];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q254 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1[3];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q255 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0[2:0];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q255 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1[2:0];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q256 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0[71:8];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q256 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1[71:8];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q257 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0[7:6];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q257 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1[7:6];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q258 =
	      !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[582];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q258 =
	      !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[582];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q259 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[582];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q259 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[582];
    endcase
  end
  always@(rob$deqPort_0_deq_data)
  begin
    case (rob$deqPort_0_deq_data[264:261])
      4'd0, 4'd1, 4'd3, 4'd4, 4'd5, 4'd7, 4'd8, 4'd9:
	  CASE_robdeqPort_0_deq_data_BITS_264_TO_261_0__ETC__q260 =
	      rob$deqPort_0_deq_data[264:261];
      default: CASE_robdeqPort_0_deq_data_BITS_264_TO_261_0__ETC__q260 =
		   4'd11;
    endcase
  end
  always@(rob$deqPort_0_deq_data)
  begin
    case (rob$deqPort_0_deq_data[264:261])
      4'd0,
      4'd1,
      4'd2,
      4'd3,
      4'd4,
      4'd5,
      4'd6,
      4'd7,
      4'd8,
      4'd9,
      4'd11,
      4'd12,
      4'd13:
	  CASE_robdeqPort_0_deq_data_BITS_264_TO_261_0__ETC__q261 =
	      rob$deqPort_0_deq_data[264:261];
      default: CASE_robdeqPort_0_deq_data_BITS_264_TO_261_0__ETC__q261 =
		   4'd15;
    endcase
  end
  always@(mmio_dataReqQ_data_0)
  begin
    case (mmio_dataReqQ_data_0[77:76])
      2'd0, 2'd1, 2'd2:
	  CASE_mmio_dataReqQ_data_0_BITS_77_TO_76_0_mmio_ETC__q263 =
	      mmio_dataReqQ_data_0[77:72];
      2'd3:
	  CASE_mmio_dataReqQ_data_0_BITS_77_TO_76_0_mmio_ETC__q263 =
	      { 2'd3, mmio_dataReqQ_data_0[75:72] };
    endcase
  end
  always@(coreFix_memExe_lsq$firstSt)
  begin
    case (coreFix_memExe_lsq$firstSt[3:0])
      4'd0,
      4'd1,
      4'd2,
      4'd3,
      4'd4,
      4'd5,
      4'd6,
      4'd7,
      4'd8,
      4'd9,
      4'd11,
      4'd12,
      4'd13:
	  CASE_coreFix_memExe_lsqfirstSt_BITS_3_TO_0_0__ETC__q264 =
	      coreFix_memExe_lsq$firstSt[3:0];
      default: CASE_coreFix_memExe_lsqfirstSt_BITS_3_TO_0_0__ETC__q264 =
		   4'd15;
    endcase
  end
  always@(coreFix_memExe_lsq$firstLd)
  begin
    case (coreFix_memExe_lsq$firstLd[6:3])
      4'd0,
      4'd1,
      4'd2,
      4'd3,
      4'd4,
      4'd5,
      4'd6,
      4'd7,
      4'd8,
      4'd9,
      4'd11,
      4'd12,
      4'd13:
	  CASE_coreFix_memExe_lsqfirstLd_BITS_6_TO_3_0__ETC__q265 =
	      coreFix_memExe_lsq$firstLd[6:3];
      default: CASE_coreFix_memExe_lsqfirstLd_BITS_6_TO_3_0__ETC__q265 =
		   4'd15;
    endcase
  end
  always@(mmioToPlatform_pRq_enq_x)
  begin
    case (mmioToPlatform_pRq_enq_x[37:36])
      2'd0, 2'd1, 2'd2:
	  CASE_mmioToPlatform_pRq_enq_x_BITS_37_TO_36_0__ETC__q266 =
	      mmioToPlatform_pRq_enq_x[37:32];
      2'd3:
	  CASE_mmioToPlatform_pRq_enq_x_BITS_37_TO_36_0__ETC__q266 =
	      { 2'd3, mmioToPlatform_pRq_enq_x[35:32] };
    endcase
  end
  always@(coreFix_aluExe_0_rsAlu$dispatchData)
  begin
    case (coreFix_aluExe_0_rsAlu$dispatchData[139:137])
      3'd0, 3'd1, 3'd2, 3'd3, 3'd4:
	  CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q267 =
	      coreFix_aluExe_0_rsAlu$dispatchData[139:137];
      default: CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q267 = 3'd7;
    endcase
  end
  always@(coreFix_aluExe_0_rsAlu$dispatchData or
	  CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q267)
  begin
    case (coreFix_aluExe_0_rsAlu$dispatchData[156:154])
      3'd0, 3'd1, 3'd2, 3'd3:
	  CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q268 =
	      coreFix_aluExe_0_rsAlu$dispatchData[156:136];
      3'd4:
	  CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q268 =
	      { coreFix_aluExe_0_rsAlu$dispatchData[156:154],
		9'h0AA,
		coreFix_aluExe_0_rsAlu$dispatchData[144:140],
		CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q267,
		coreFix_aluExe_0_rsAlu$dispatchData[136] };
      default: CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q268 =
		   21'd1485482;
    endcase
  end
  always@(coreFix_aluExe_0_rsAlu$dispatchData)
  begin
    case (coreFix_aluExe_0_rsAlu$dispatchData[134:123])
      12'd1,
      12'd2,
      12'd3,
      12'd256,
      12'd260,
      12'd261,
      12'd262,
      12'd320,
      12'd321,
      12'd322,
      12'd323,
      12'd324,
      12'd384,
      12'd768,
      12'd769,
      12'd770,
      12'd771,
      12'd772,
      12'd773,
      12'd774,
      12'd832,
      12'd833,
      12'd834,
      12'd835,
      12'd836,
      12'd1952,
      12'd1953,
      12'd1954,
      12'd1955,
      12'd2048,
      12'd2049,
      12'd2816,
      12'd2818,
      12'd3072,
      12'd3073,
      12'd3074,
      12'd3857,
      12'd3858,
      12'd3859,
      12'd3860:
	  CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q269 =
	      coreFix_aluExe_0_rsAlu$dispatchData[134:123];
      default: CASE_coreFix_aluExe_0_rsAludispatchData_BITS__ETC__q269 =
		   12'd2303;
    endcase
  end
  always@(coreFix_aluExe_0_dispToRegQ$first)
  begin
    case (coreFix_aluExe_0_dispToRegQ$first[135:133])
      3'd0, 3'd1, 3'd2, 3'd3, 3'd4:
	  CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_13_ETC__q270 =
	      coreFix_aluExe_0_dispToRegQ$first[135:133];
      default: CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_13_ETC__q270 = 3'd7;
    endcase
  end
  always@(coreFix_aluExe_0_dispToRegQ$first or
	  CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_13_ETC__q270)
  begin
    case (coreFix_aluExe_0_dispToRegQ$first[152:150])
      3'd0, 3'd1, 3'd2, 3'd3:
	  CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_15_ETC__q271 =
	      coreFix_aluExe_0_dispToRegQ$first[152:132];
      3'd4:
	  CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_15_ETC__q271 =
	      { coreFix_aluExe_0_dispToRegQ$first[152:150],
		9'h0AA,
		coreFix_aluExe_0_dispToRegQ$first[140:136],
		CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_13_ETC__q270,
		coreFix_aluExe_0_dispToRegQ$first[132] };
      default: CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_15_ETC__q271 =
		   21'd1485482;
    endcase
  end
  always@(coreFix_aluExe_0_dispToRegQ$first)
  begin
    case (coreFix_aluExe_0_dispToRegQ$first[130:119])
      12'd1,
      12'd2,
      12'd3,
      12'd256,
      12'd260,
      12'd261,
      12'd262,
      12'd320,
      12'd321,
      12'd322,
      12'd323,
      12'd324,
      12'd384,
      12'd768,
      12'd769,
      12'd770,
      12'd771,
      12'd772,
      12'd773,
      12'd774,
      12'd832,
      12'd833,
      12'd834,
      12'd835,
      12'd836,
      12'd1952,
      12'd1953,
      12'd1954,
      12'd1955,
      12'd2048,
      12'd2049,
      12'd2816,
      12'd2818,
      12'd3072,
      12'd3073,
      12'd3074,
      12'd3857,
      12'd3858,
      12'd3859,
      12'd3860:
	  CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_13_ETC__q272 =
	      coreFix_aluExe_0_dispToRegQ$first[130:119];
      default: CASE_coreFix_aluExe_0_dispToRegQfirst_BITS_13_ETC__q272 =
		   12'd2303;
    endcase
  end
  always@(coreFix_aluExe_1_rsAlu$dispatchData)
  begin
    case (coreFix_aluExe_1_rsAlu$dispatchData[139:137])
      3'd0, 3'd1, 3'd2, 3'd3, 3'd4:
	  CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q273 =
	      coreFix_aluExe_1_rsAlu$dispatchData[139:137];
      default: CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q273 = 3'd7;
    endcase
  end
  always@(coreFix_aluExe_1_rsAlu$dispatchData or
	  CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q273)
  begin
    case (coreFix_aluExe_1_rsAlu$dispatchData[156:154])
      3'd0, 3'd1, 3'd2, 3'd3:
	  CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q274 =
	      coreFix_aluExe_1_rsAlu$dispatchData[156:136];
      3'd4:
	  CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q274 =
	      { coreFix_aluExe_1_rsAlu$dispatchData[156:154],
		9'h0AA,
		coreFix_aluExe_1_rsAlu$dispatchData[144:140],
		CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q273,
		coreFix_aluExe_1_rsAlu$dispatchData[136] };
      default: CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q274 =
		   21'd1485482;
    endcase
  end
  always@(coreFix_aluExe_1_rsAlu$dispatchData)
  begin
    case (coreFix_aluExe_1_rsAlu$dispatchData[134:123])
      12'd1,
      12'd2,
      12'd3,
      12'd256,
      12'd260,
      12'd261,
      12'd262,
      12'd320,
      12'd321,
      12'd322,
      12'd323,
      12'd324,
      12'd384,
      12'd768,
      12'd769,
      12'd770,
      12'd771,
      12'd772,
      12'd773,
      12'd774,
      12'd832,
      12'd833,
      12'd834,
      12'd835,
      12'd836,
      12'd1952,
      12'd1953,
      12'd1954,
      12'd1955,
      12'd2048,
      12'd2049,
      12'd2816,
      12'd2818,
      12'd3072,
      12'd3073,
      12'd3074,
      12'd3857,
      12'd3858,
      12'd3859,
      12'd3860:
	  CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q275 =
	      coreFix_aluExe_1_rsAlu$dispatchData[134:123];
      default: CASE_coreFix_aluExe_1_rsAludispatchData_BITS__ETC__q275 =
		   12'd2303;
    endcase
  end
  always@(coreFix_aluExe_1_dispToRegQ$first)
  begin
    case (coreFix_aluExe_1_dispToRegQ$first[135:133])
      3'd0, 3'd1, 3'd2, 3'd3, 3'd4:
	  CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_13_ETC__q276 =
	      coreFix_aluExe_1_dispToRegQ$first[135:133];
      default: CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_13_ETC__q276 = 3'd7;
    endcase
  end
  always@(coreFix_aluExe_1_dispToRegQ$first or
	  CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_13_ETC__q276)
  begin
    case (coreFix_aluExe_1_dispToRegQ$first[152:150])
      3'd0, 3'd1, 3'd2, 3'd3:
	  CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_15_ETC__q277 =
	      coreFix_aluExe_1_dispToRegQ$first[152:132];
      3'd4:
	  CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_15_ETC__q277 =
	      { coreFix_aluExe_1_dispToRegQ$first[152:150],
		9'h0AA,
		coreFix_aluExe_1_dispToRegQ$first[140:136],
		CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_13_ETC__q276,
		coreFix_aluExe_1_dispToRegQ$first[132] };
      default: CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_15_ETC__q277 =
		   21'd1485482;
    endcase
  end
  always@(coreFix_aluExe_1_dispToRegQ$first)
  begin
    case (coreFix_aluExe_1_dispToRegQ$first[130:119])
      12'd1,
      12'd2,
      12'd3,
      12'd256,
      12'd260,
      12'd261,
      12'd262,
      12'd320,
      12'd321,
      12'd322,
      12'd323,
      12'd324,
      12'd384,
      12'd768,
      12'd769,
      12'd770,
      12'd771,
      12'd772,
      12'd773,
      12'd774,
      12'd832,
      12'd833,
      12'd834,
      12'd835,
      12'd836,
      12'd1952,
      12'd1953,
      12'd1954,
      12'd1955,
      12'd2048,
      12'd2049,
      12'd2816,
      12'd2818,
      12'd3072,
      12'd3073,
      12'd3074,
      12'd3857,
      12'd3858,
      12'd3859,
      12'd3860:
	  CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_13_ETC__q278 =
	      coreFix_aluExe_1_dispToRegQ$first[130:119];
      default: CASE_coreFix_aluExe_1_dispToRegQfirst_BITS_13_ETC__q278 =
		   12'd2303;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData)
  begin
    case (coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData[69:67])
      3'd0, 3'd1, 3'd2, 3'd3, 3'd4:
	  CASE_coreFix_fpuMulDivExe_0_rsFpuMulDivdispat_ETC__q279 =
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData[69:67];
      default: CASE_coreFix_fpuMulDivExe_0_rsFpuMulDivdispat_ETC__q279 = 3'd7;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData or
	  CASE_coreFix_fpuMulDivExe_0_rsFpuMulDivdispat_ETC__q279)
  begin
    case (coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData[86:84])
      3'd0, 3'd1, 3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_rsFpuMulDivdispat_ETC__q280 =
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData[86:66];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_rsFpuMulDivdispat_ETC__q280 =
	      { coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData[86:84],
		9'h0AA,
		coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData[74:70],
		CASE_coreFix_fpuMulDivExe_0_rsFpuMulDivdispat_ETC__q279,
		coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData[66] };
      default: CASE_coreFix_fpuMulDivExe_0_rsFpuMulDivdispat_ETC__q280 =
		   21'd1485482;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8848 or
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10328 or
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10381 or
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10326)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229])
      5'd0:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q281 =
	      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10328;
      5'd1:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q281 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[225] ?
		{ !coreFix_fpuMulDivExe_0_regToExeQ$first[139],
		  coreFix_fpuMulDivExe_0_regToExeQ$first[138:76] } :
		{ IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10381,
		  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10326 };
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q281 =
		   IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d8848;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10328)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229])
      5'd0, 5'd1:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q282 =
	      64'h3FF0000000000000;
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q282 =
		   IF_coreFix_fpuMulDivExe_0_regToExeQ_first__045_ETC___d10328;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_dispToRegQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_dispToRegQ$first[60:58])
      3'd0, 3'd1, 3'd2, 3'd3, 3'd4:
	  CASE_coreFix_fpuMulDivExe_0_dispToRegQfirst_B_ETC__q283 =
	      coreFix_fpuMulDivExe_0_dispToRegQ$first[60:58];
      default: CASE_coreFix_fpuMulDivExe_0_dispToRegQfirst_B_ETC__q283 = 3'd7;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_dispToRegQ$first or
	  CASE_coreFix_fpuMulDivExe_0_dispToRegQfirst_B_ETC__q283)
  begin
    case (coreFix_fpuMulDivExe_0_dispToRegQ$first[77:75])
      3'd0, 3'd1, 3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_dispToRegQfirst_B_ETC__q284 =
	      coreFix_fpuMulDivExe_0_dispToRegQ$first[77:57];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_dispToRegQfirst_B_ETC__q284 =
	      { coreFix_fpuMulDivExe_0_dispToRegQ$first[77:75],
		9'h0AA,
		coreFix_fpuMulDivExe_0_dispToRegQ$first[65:61],
		CASE_coreFix_fpuMulDivExe_0_dispToRegQfirst_B_ETC__q283,
		coreFix_fpuMulDivExe_0_dispToRegQ$first[57] };
      default: CASE_coreFix_fpuMulDivExe_0_dispToRegQfirst_B_ETC__q284 =
		   21'd1485482;
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q285 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[1:0];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q285 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[1:0];
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        commitStage_commitTrap <= `BSV_ASSIGNMENT_DELAY
	    265'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	commitStage_rg_serial_num <= `BSV_ASSIGNMENT_DELAY 64'd0;
	coreFix_doStatsReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt <= `BSV_ASSIGNMENT_DELAY
	    4'd0;
	coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit <= `BSV_ASSIGNMENT_DELAY
	    2'd3;
	coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_0 <= `BSV_ASSIGNMENT_DELAY
	    129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1 <= `BSV_ASSIGNMENT_DELAY
	    129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_0 <= `BSV_ASSIGNMENT_DELAY
	    129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1 <= `BSV_ASSIGNMENT_DELAY
	    129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_0 <= `BSV_ASSIGNMENT_DELAY
	    129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1 <= `BSV_ASSIGNMENT_DELAY
	    129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0 <= `BSV_ASSIGNMENT_DELAY
	    3'd2;
	coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1 <= `BSV_ASSIGNMENT_DELAY
	    3'd2;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2 <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3 <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4 <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5 <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6 <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7 <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    4'd2;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	    583'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA80000000000000000;
	coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	    583'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA80000000000000000;
	coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    584'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl <= `BSV_ASSIGNMENT_DELAY
	    59'h2AAAAAAAAAAAAAA;
	coreFix_memExe_dMem_cache_m_banks_0_processAmo <= `BSV_ASSIGNMENT_DELAY
	    161'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl <= `BSV_ASSIGNMENT_DELAY
	    153'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	    72'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	    72'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    73'h0AAAAAAAAAAAAAAAAAA;
	coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	    579'h00000000000000000AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	    579'h00000000000000000AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    580'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_perfReqQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_perfReqQ_data_0 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	coreFix_memExe_dMem_perfReqQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_dMem_perfReqQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	coreFix_memExe_dMem_perfReqQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY 5'd10;
	coreFix_memExe_dMem_perfReqQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_forwardQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_forwardQ_data_0 <= `BSV_ASSIGNMENT_DELAY 69'd0;
	coreFix_memExe_forwardQ_data_1 <= `BSV_ASSIGNMENT_DELAY 69'd0;
	coreFix_memExe_forwardQ_deqP <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_forwardQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_forwardQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	coreFix_memExe_forwardQ_enqP <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_forwardQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    70'h0AAAAAAAAAAAAAAAAA;
	coreFix_memExe_forwardQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_memRespLdQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_memRespLdQ_data_0 <= `BSV_ASSIGNMENT_DELAY 69'd0;
	coreFix_memExe_memRespLdQ_data_1 <= `BSV_ASSIGNMENT_DELAY 69'd0;
	coreFix_memExe_memRespLdQ_deqP <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_memRespLdQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_memRespLdQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	coreFix_memExe_memRespLdQ_enqP <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_memRespLdQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    70'h0AAAAAAAAAAAAAAAAA;
	coreFix_memExe_memRespLdQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_reqLdQ_data_0_rl <= `BSV_ASSIGNMENT_DELAY
	    69'h0AAAAAAAAAAAAAAAAA;
	coreFix_memExe_reqLdQ_empty_rl <= `BSV_ASSIGNMENT_DELAY 1'd1;
	coreFix_memExe_reqLdQ_full_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_reqLrScAmoQ_data_0_rl <= `BSV_ASSIGNMENT_DELAY
	    153'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_memExe_reqLrScAmoQ_empty_rl <= `BSV_ASSIGNMENT_DELAY 1'd1;
	coreFix_memExe_reqLrScAmoQ_full_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_reqStQ_data_0_rl <= `BSV_ASSIGNMENT_DELAY
	    66'h2AAAAAAAAAAAAAAAA;
	coreFix_memExe_reqStQ_empty_rl <= `BSV_ASSIGNMENT_DELAY 1'd1;
	coreFix_memExe_reqStQ_full_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_respLrScAmoQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_respLrScAmoQ_data_0 <= `BSV_ASSIGNMENT_DELAY 64'd0;
	coreFix_memExe_respLrScAmoQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_respLrScAmoQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	coreFix_memExe_respLrScAmoQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    65'h0AAAAAAAAAAAAAAAA;
	coreFix_memExe_respLrScAmoQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_waitLrScAmoMMIOResp <= `BSV_ASSIGNMENT_DELAY 3'd0;
	csrInstOrInterruptInflight_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_external_int_en_vec_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_external_int_en_vec_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_external_int_en_vec_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_external_int_pend_vec_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_external_int_pend_vec_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_external_int_pend_vec_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_fflags_reg <= `BSV_ASSIGNMENT_DELAY 5'd0;
	csrf_frm_reg <= `BSV_ASSIGNMENT_DELAY 3'd0;
	csrf_fs_reg <= `BSV_ASSIGNMENT_DELAY 2'b01;
	csrf_ie_vec_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_ie_vec_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_ie_vec_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_mcause_code_reg <= `BSV_ASSIGNMENT_DELAY 4'd0;
	csrf_mcause_interrupt_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_mcounteren_cy_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_mcounteren_ir_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_mcounteren_tm_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_mcycle_ehr_data_rl <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_medeleg_13_11_reg <= `BSV_ASSIGNMENT_DELAY 3'd0;
	csrf_medeleg_15_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_medeleg_9_0_reg <= `BSV_ASSIGNMENT_DELAY 10'd0;
	csrf_mepc_csr <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_mideleg_11_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_mideleg_1_0_reg <= `BSV_ASSIGNMENT_DELAY 2'd0;
	csrf_mideleg_5_3_reg <= `BSV_ASSIGNMENT_DELAY 3'd0;
	csrf_mideleg_9_7_reg <= `BSV_ASSIGNMENT_DELAY 3'd0;
	csrf_minstret_ehr_data_rl <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_mpp_reg <= `BSV_ASSIGNMENT_DELAY 2'd0;
	csrf_mprv_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_mscratch_csr <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_mtval_csr <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_mtvec_base_hi_reg <= `BSV_ASSIGNMENT_DELAY 62'd0;
	csrf_mtvec_mode_low_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_mxr_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_ppn_reg <= `BSV_ASSIGNMENT_DELAY 44'd0;
	csrf_prev_ie_vec_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_prev_ie_vec_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_prev_ie_vec_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_prv_reg <= `BSV_ASSIGNMENT_DELAY 2'd3;
	csrf_rg_tdata1_data <= `BSV_ASSIGNMENT_DELAY 59'd0;
	csrf_rg_tdata1_dmode <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_rg_tselect <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_scause_code_reg <= `BSV_ASSIGNMENT_DELAY 4'd0;
	csrf_scause_interrupt_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_scounteren_cy_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_scounteren_ir_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_scounteren_tm_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_sepc_csr <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_software_int_en_vec_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_software_int_en_vec_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_software_int_en_vec_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_software_int_pend_vec_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_software_int_pend_vec_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_software_int_pend_vec_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_spp_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_sscratch_csr <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_stats_module_doStats <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_stval_csr <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_stvec_base_hi_reg <= `BSV_ASSIGNMENT_DELAY 62'd0;
	csrf_stvec_mode_low_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_sum_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_time_reg <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_timer_int_en_vec_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_timer_int_en_vec_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_timer_int_en_vec_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_timer_int_pend_vec_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_timer_int_pend_vec_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_timer_int_pend_vec_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_tsr_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_tvm_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_tw_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_vm_mode_sv39_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	flush_reservation <= `BSV_ASSIGNMENT_DELAY 1'd0;
	flush_tlbs <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_cRqQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_cRqQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	    142'h000000000000000004000000000000000000;
	mmio_cRqQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_cRqQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	mmio_cRqQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    143'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	mmio_cRqQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_cRsQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_cRsQ_data_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_cRsQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_cRsQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	mmio_cRsQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY 2'd0;
	mmio_cRsQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataPendQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataPendQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataPendQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	mmio_dataPendQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataPendQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataReqQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataReqQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	    142'h000000000000000004000000000000000000;
	mmio_dataReqQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataReqQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	mmio_dataReqQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    143'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	mmio_dataReqQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataRespQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataRespQ_data_0 <= `BSV_ASSIGNMENT_DELAY 65'd0;
	mmio_dataRespQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataRespQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	mmio_dataRespQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    66'h0AAAAAAAAAAAAAAAA;
	mmio_dataRespQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_fromHostAddr <= `BSV_ASSIGNMENT_DELAY 61'd0;
	mmio_pRqQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_pRqQ_data_0 <= `BSV_ASSIGNMENT_DELAY 39'h0400000000;
	mmio_pRqQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_pRqQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	mmio_pRqQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY 40'h2AAAAAAAAA;
	mmio_pRqQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_pRsQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_pRsQ_data_0 <= `BSV_ASSIGNMENT_DELAY 67'h155555554AAAAAAAA;
	mmio_pRsQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_pRsQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	mmio_pRsQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY 68'h2AAAAAAAAAAAAAAAA;
	mmio_pRsQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_toHostAddr <= `BSV_ASSIGNMENT_DELAY 61'd0;
	outOfReset <= `BSV_ASSIGNMENT_DELAY 1'd0;
	scaprf_ddc_reg <= `BSV_ASSIGNMENT_DELAY
	    153'h100000000000000000000FFFF1FFFFF44000000;
	scaprf_mScratchC_reg <= `BSV_ASSIGNMENT_DELAY
	    153'h00000000000000000000000001FFFFF44000000;
	scaprf_mepcc_reg <= `BSV_ASSIGNMENT_DELAY
	    153'h100000000000000000000FFFF1FFFFF44000000;
	scaprf_mtcc_reg <= `BSV_ASSIGNMENT_DELAY
	    153'h100000000000000000000FFFF1FFFFF44000000;
	scaprf_mtdc_reg <= `BSV_ASSIGNMENT_DELAY
	    153'h00000000000000000000000001FFFFF44000000;
	scaprf_pcc_reg_data_rl <= `BSV_ASSIGNMENT_DELAY
	    153'h100000000000000000000FFFF1FFFFF44000000;
	scaprf_sScratchC_reg <= `BSV_ASSIGNMENT_DELAY
	    153'h00000000000000000000000001FFFFF44000000;
	scaprf_sepcc_reg <= `BSV_ASSIGNMENT_DELAY
	    153'h100000000000000000000FFFF1FFFFF44000000;
	scaprf_stcc_reg <= `BSV_ASSIGNMENT_DELAY
	    153'h100000000000000000000FFFF1FFFFF44000000;
	scaprf_stdc_reg <= `BSV_ASSIGNMENT_DELAY
	    153'h00000000000000000000000001FFFFF44000000;
	scaprf_uScratchC_reg <= `BSV_ASSIGNMENT_DELAY
	    153'h00000000000000000000000001FFFFF44000000;
	scaprf_uepcc_reg <= `BSV_ASSIGNMENT_DELAY
	    153'h100000000000000000000FFFF1FFFFF44000000;
	scaprf_utcc_reg <= `BSV_ASSIGNMENT_DELAY
	    153'h100000000000000000000FFFF1FFFFF44000000;
	scaprf_utdc_reg <= `BSV_ASSIGNMENT_DELAY
	    153'h00000000000000000000000001FFFFF44000000;
	started <= `BSV_ASSIGNMENT_DELAY 1'd0;
	update_vm_info <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (commitStage_commitTrap$EN)
	  commitStage_commitTrap <= `BSV_ASSIGNMENT_DELAY
	      commitStage_commitTrap$D_IN;
	if (commitStage_rg_serial_num$EN)
	  commitStage_rg_serial_num <= `BSV_ASSIGNMENT_DELAY
	      commitStage_rg_serial_num$D_IN;
	if (coreFix_doStatsReg$EN)
	  coreFix_doStatsReg <= `BSV_ASSIGNMENT_DELAY coreFix_doStatsReg$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_0$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_0$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_0$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_0$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_0$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_0$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_processAmo$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_processAmo <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_processAmo$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full$D_IN;
	if (coreFix_memExe_dMem_perfReqQ_clearReq_rl$EN)
	  coreFix_memExe_dMem_perfReqQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_perfReqQ_clearReq_rl$D_IN;
	if (coreFix_memExe_dMem_perfReqQ_data_0$EN)
	  coreFix_memExe_dMem_perfReqQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_perfReqQ_data_0$D_IN;
	if (coreFix_memExe_dMem_perfReqQ_deqReq_rl$EN)
	  coreFix_memExe_dMem_perfReqQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_perfReqQ_deqReq_rl$D_IN;
	if (coreFix_memExe_dMem_perfReqQ_empty$EN)
	  coreFix_memExe_dMem_perfReqQ_empty <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_perfReqQ_empty$D_IN;
	if (coreFix_memExe_dMem_perfReqQ_enqReq_rl$EN)
	  coreFix_memExe_dMem_perfReqQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_perfReqQ_enqReq_rl$D_IN;
	if (coreFix_memExe_dMem_perfReqQ_full$EN)
	  coreFix_memExe_dMem_perfReqQ_full <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_perfReqQ_full$D_IN;
	if (coreFix_memExe_forwardQ_clearReq_rl$EN)
	  coreFix_memExe_forwardQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_forwardQ_clearReq_rl$D_IN;
	if (coreFix_memExe_forwardQ_data_0$EN)
	  coreFix_memExe_forwardQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_forwardQ_data_0$D_IN;
	if (coreFix_memExe_forwardQ_data_1$EN)
	  coreFix_memExe_forwardQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_forwardQ_data_1$D_IN;
	if (coreFix_memExe_forwardQ_deqP$EN)
	  coreFix_memExe_forwardQ_deqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_forwardQ_deqP$D_IN;
	if (coreFix_memExe_forwardQ_deqReq_rl$EN)
	  coreFix_memExe_forwardQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_forwardQ_deqReq_rl$D_IN;
	if (coreFix_memExe_forwardQ_empty$EN)
	  coreFix_memExe_forwardQ_empty <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_forwardQ_empty$D_IN;
	if (coreFix_memExe_forwardQ_enqP$EN)
	  coreFix_memExe_forwardQ_enqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_forwardQ_enqP$D_IN;
	if (coreFix_memExe_forwardQ_enqReq_rl$EN)
	  coreFix_memExe_forwardQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_forwardQ_enqReq_rl$D_IN;
	if (coreFix_memExe_forwardQ_full$EN)
	  coreFix_memExe_forwardQ_full <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_forwardQ_full$D_IN;
	if (coreFix_memExe_memRespLdQ_clearReq_rl$EN)
	  coreFix_memExe_memRespLdQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_memRespLdQ_clearReq_rl$D_IN;
	if (coreFix_memExe_memRespLdQ_data_0$EN)
	  coreFix_memExe_memRespLdQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_memRespLdQ_data_0$D_IN;
	if (coreFix_memExe_memRespLdQ_data_1$EN)
	  coreFix_memExe_memRespLdQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_memRespLdQ_data_1$D_IN;
	if (coreFix_memExe_memRespLdQ_deqP$EN)
	  coreFix_memExe_memRespLdQ_deqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_memRespLdQ_deqP$D_IN;
	if (coreFix_memExe_memRespLdQ_deqReq_rl$EN)
	  coreFix_memExe_memRespLdQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_memRespLdQ_deqReq_rl$D_IN;
	if (coreFix_memExe_memRespLdQ_empty$EN)
	  coreFix_memExe_memRespLdQ_empty <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_memRespLdQ_empty$D_IN;
	if (coreFix_memExe_memRespLdQ_enqP$EN)
	  coreFix_memExe_memRespLdQ_enqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_memRespLdQ_enqP$D_IN;
	if (coreFix_memExe_memRespLdQ_enqReq_rl$EN)
	  coreFix_memExe_memRespLdQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_memRespLdQ_enqReq_rl$D_IN;
	if (coreFix_memExe_memRespLdQ_full$EN)
	  coreFix_memExe_memRespLdQ_full <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_memRespLdQ_full$D_IN;
	if (coreFix_memExe_reqLdQ_data_0_rl$EN)
	  coreFix_memExe_reqLdQ_data_0_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_reqLdQ_data_0_rl$D_IN;
	if (coreFix_memExe_reqLdQ_empty_rl$EN)
	  coreFix_memExe_reqLdQ_empty_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_reqLdQ_empty_rl$D_IN;
	if (coreFix_memExe_reqLdQ_full_rl$EN)
	  coreFix_memExe_reqLdQ_full_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_reqLdQ_full_rl$D_IN;
	if (coreFix_memExe_reqLrScAmoQ_data_0_rl$EN)
	  coreFix_memExe_reqLrScAmoQ_data_0_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_reqLrScAmoQ_data_0_rl$D_IN;
	if (coreFix_memExe_reqLrScAmoQ_empty_rl$EN)
	  coreFix_memExe_reqLrScAmoQ_empty_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_reqLrScAmoQ_empty_rl$D_IN;
	if (coreFix_memExe_reqLrScAmoQ_full_rl$EN)
	  coreFix_memExe_reqLrScAmoQ_full_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_reqLrScAmoQ_full_rl$D_IN;
	if (coreFix_memExe_reqStQ_data_0_rl$EN)
	  coreFix_memExe_reqStQ_data_0_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_reqStQ_data_0_rl$D_IN;
	if (coreFix_memExe_reqStQ_empty_rl$EN)
	  coreFix_memExe_reqStQ_empty_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_reqStQ_empty_rl$D_IN;
	if (coreFix_memExe_reqStQ_full_rl$EN)
	  coreFix_memExe_reqStQ_full_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_reqStQ_full_rl$D_IN;
	if (coreFix_memExe_respLrScAmoQ_clearReq_rl$EN)
	  coreFix_memExe_respLrScAmoQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_respLrScAmoQ_clearReq_rl$D_IN;
	if (coreFix_memExe_respLrScAmoQ_data_0$EN)
	  coreFix_memExe_respLrScAmoQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_respLrScAmoQ_data_0$D_IN;
	if (coreFix_memExe_respLrScAmoQ_deqReq_rl$EN)
	  coreFix_memExe_respLrScAmoQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_respLrScAmoQ_deqReq_rl$D_IN;
	if (coreFix_memExe_respLrScAmoQ_empty$EN)
	  coreFix_memExe_respLrScAmoQ_empty <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_respLrScAmoQ_empty$D_IN;
	if (coreFix_memExe_respLrScAmoQ_enqReq_rl$EN)
	  coreFix_memExe_respLrScAmoQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_respLrScAmoQ_enqReq_rl$D_IN;
	if (coreFix_memExe_respLrScAmoQ_full$EN)
	  coreFix_memExe_respLrScAmoQ_full <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_respLrScAmoQ_full$D_IN;
	if (coreFix_memExe_waitLrScAmoMMIOResp$EN)
	  coreFix_memExe_waitLrScAmoMMIOResp <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_waitLrScAmoMMIOResp$D_IN;
	if (csrInstOrInterruptInflight_rl$EN)
	  csrInstOrInterruptInflight_rl <= `BSV_ASSIGNMENT_DELAY
	      csrInstOrInterruptInflight_rl$D_IN;
	if (csrf_external_int_en_vec_0$EN)
	  csrf_external_int_en_vec_0 <= `BSV_ASSIGNMENT_DELAY
	      csrf_external_int_en_vec_0$D_IN;
	if (csrf_external_int_en_vec_1$EN)
	  csrf_external_int_en_vec_1 <= `BSV_ASSIGNMENT_DELAY
	      csrf_external_int_en_vec_1$D_IN;
	if (csrf_external_int_en_vec_3$EN)
	  csrf_external_int_en_vec_3 <= `BSV_ASSIGNMENT_DELAY
	      csrf_external_int_en_vec_3$D_IN;
	if (csrf_external_int_pend_vec_0$EN)
	  csrf_external_int_pend_vec_0 <= `BSV_ASSIGNMENT_DELAY
	      csrf_external_int_pend_vec_0$D_IN;
	if (csrf_external_int_pend_vec_1$EN)
	  csrf_external_int_pend_vec_1 <= `BSV_ASSIGNMENT_DELAY
	      csrf_external_int_pend_vec_1$D_IN;
	if (csrf_external_int_pend_vec_3$EN)
	  csrf_external_int_pend_vec_3 <= `BSV_ASSIGNMENT_DELAY
	      csrf_external_int_pend_vec_3$D_IN;
	if (csrf_fflags_reg$EN)
	  csrf_fflags_reg <= `BSV_ASSIGNMENT_DELAY csrf_fflags_reg$D_IN;
	if (csrf_frm_reg$EN)
	  csrf_frm_reg <= `BSV_ASSIGNMENT_DELAY csrf_frm_reg$D_IN;
	if (csrf_fs_reg$EN)
	  csrf_fs_reg <= `BSV_ASSIGNMENT_DELAY csrf_fs_reg$D_IN;
	if (csrf_ie_vec_0$EN)
	  csrf_ie_vec_0 <= `BSV_ASSIGNMENT_DELAY csrf_ie_vec_0$D_IN;
	if (csrf_ie_vec_1$EN)
	  csrf_ie_vec_1 <= `BSV_ASSIGNMENT_DELAY csrf_ie_vec_1$D_IN;
	if (csrf_ie_vec_3$EN)
	  csrf_ie_vec_3 <= `BSV_ASSIGNMENT_DELAY csrf_ie_vec_3$D_IN;
	if (csrf_mcause_code_reg$EN)
	  csrf_mcause_code_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mcause_code_reg$D_IN;
	if (csrf_mcause_interrupt_reg$EN)
	  csrf_mcause_interrupt_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mcause_interrupt_reg$D_IN;
	if (csrf_mcounteren_cy_reg$EN)
	  csrf_mcounteren_cy_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mcounteren_cy_reg$D_IN;
	if (csrf_mcounteren_ir_reg$EN)
	  csrf_mcounteren_ir_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mcounteren_ir_reg$D_IN;
	if (csrf_mcounteren_tm_reg$EN)
	  csrf_mcounteren_tm_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mcounteren_tm_reg$D_IN;
	if (csrf_mcycle_ehr_data_rl$EN)
	  csrf_mcycle_ehr_data_rl <= `BSV_ASSIGNMENT_DELAY
	      csrf_mcycle_ehr_data_rl$D_IN;
	if (csrf_medeleg_13_11_reg$EN)
	  csrf_medeleg_13_11_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_medeleg_13_11_reg$D_IN;
	if (csrf_medeleg_15_reg$EN)
	  csrf_medeleg_15_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_medeleg_15_reg$D_IN;
	if (csrf_medeleg_9_0_reg$EN)
	  csrf_medeleg_9_0_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_medeleg_9_0_reg$D_IN;
	if (csrf_mepc_csr$EN)
	  csrf_mepc_csr <= `BSV_ASSIGNMENT_DELAY csrf_mepc_csr$D_IN;
	if (csrf_mideleg_11_reg$EN)
	  csrf_mideleg_11_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mideleg_11_reg$D_IN;
	if (csrf_mideleg_1_0_reg$EN)
	  csrf_mideleg_1_0_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mideleg_1_0_reg$D_IN;
	if (csrf_mideleg_5_3_reg$EN)
	  csrf_mideleg_5_3_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mideleg_5_3_reg$D_IN;
	if (csrf_mideleg_9_7_reg$EN)
	  csrf_mideleg_9_7_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mideleg_9_7_reg$D_IN;
	if (csrf_minstret_ehr_data_rl$EN)
	  csrf_minstret_ehr_data_rl <= `BSV_ASSIGNMENT_DELAY
	      csrf_minstret_ehr_data_rl$D_IN;
	if (csrf_mpp_reg$EN)
	  csrf_mpp_reg <= `BSV_ASSIGNMENT_DELAY csrf_mpp_reg$D_IN;
	if (csrf_mprv_reg$EN)
	  csrf_mprv_reg <= `BSV_ASSIGNMENT_DELAY csrf_mprv_reg$D_IN;
	if (csrf_mscratch_csr$EN)
	  csrf_mscratch_csr <= `BSV_ASSIGNMENT_DELAY csrf_mscratch_csr$D_IN;
	if (csrf_mtval_csr$EN)
	  csrf_mtval_csr <= `BSV_ASSIGNMENT_DELAY csrf_mtval_csr$D_IN;
	if (csrf_mtvec_base_hi_reg$EN)
	  csrf_mtvec_base_hi_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mtvec_base_hi_reg$D_IN;
	if (csrf_mtvec_mode_low_reg$EN)
	  csrf_mtvec_mode_low_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mtvec_mode_low_reg$D_IN;
	if (csrf_mxr_reg$EN)
	  csrf_mxr_reg <= `BSV_ASSIGNMENT_DELAY csrf_mxr_reg$D_IN;
	if (csrf_ppn_reg$EN)
	  csrf_ppn_reg <= `BSV_ASSIGNMENT_DELAY csrf_ppn_reg$D_IN;
	if (csrf_prev_ie_vec_0$EN)
	  csrf_prev_ie_vec_0 <= `BSV_ASSIGNMENT_DELAY csrf_prev_ie_vec_0$D_IN;
	if (csrf_prev_ie_vec_1$EN)
	  csrf_prev_ie_vec_1 <= `BSV_ASSIGNMENT_DELAY csrf_prev_ie_vec_1$D_IN;
	if (csrf_prev_ie_vec_3$EN)
	  csrf_prev_ie_vec_3 <= `BSV_ASSIGNMENT_DELAY csrf_prev_ie_vec_3$D_IN;
	if (csrf_prv_reg$EN)
	  csrf_prv_reg <= `BSV_ASSIGNMENT_DELAY csrf_prv_reg$D_IN;
	if (csrf_rg_tdata1_data$EN)
	  csrf_rg_tdata1_data <= `BSV_ASSIGNMENT_DELAY
	      csrf_rg_tdata1_data$D_IN;
	if (csrf_rg_tdata1_dmode$EN)
	  csrf_rg_tdata1_dmode <= `BSV_ASSIGNMENT_DELAY
	      csrf_rg_tdata1_dmode$D_IN;
	if (csrf_rg_tselect$EN)
	  csrf_rg_tselect <= `BSV_ASSIGNMENT_DELAY csrf_rg_tselect$D_IN;
	if (csrf_scause_code_reg$EN)
	  csrf_scause_code_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_scause_code_reg$D_IN;
	if (csrf_scause_interrupt_reg$EN)
	  csrf_scause_interrupt_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_scause_interrupt_reg$D_IN;
	if (csrf_scounteren_cy_reg$EN)
	  csrf_scounteren_cy_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_scounteren_cy_reg$D_IN;
	if (csrf_scounteren_ir_reg$EN)
	  csrf_scounteren_ir_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_scounteren_ir_reg$D_IN;
	if (csrf_scounteren_tm_reg$EN)
	  csrf_scounteren_tm_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_scounteren_tm_reg$D_IN;
	if (csrf_sepc_csr$EN)
	  csrf_sepc_csr <= `BSV_ASSIGNMENT_DELAY csrf_sepc_csr$D_IN;
	if (csrf_software_int_en_vec_0$EN)
	  csrf_software_int_en_vec_0 <= `BSV_ASSIGNMENT_DELAY
	      csrf_software_int_en_vec_0$D_IN;
	if (csrf_software_int_en_vec_1$EN)
	  csrf_software_int_en_vec_1 <= `BSV_ASSIGNMENT_DELAY
	      csrf_software_int_en_vec_1$D_IN;
	if (csrf_software_int_en_vec_3$EN)
	  csrf_software_int_en_vec_3 <= `BSV_ASSIGNMENT_DELAY
	      csrf_software_int_en_vec_3$D_IN;
	if (csrf_software_int_pend_vec_0$EN)
	  csrf_software_int_pend_vec_0 <= `BSV_ASSIGNMENT_DELAY
	      csrf_software_int_pend_vec_0$D_IN;
	if (csrf_software_int_pend_vec_1$EN)
	  csrf_software_int_pend_vec_1 <= `BSV_ASSIGNMENT_DELAY
	      csrf_software_int_pend_vec_1$D_IN;
	if (csrf_software_int_pend_vec_3$EN)
	  csrf_software_int_pend_vec_3 <= `BSV_ASSIGNMENT_DELAY
	      csrf_software_int_pend_vec_3$D_IN;
	if (csrf_spp_reg$EN)
	  csrf_spp_reg <= `BSV_ASSIGNMENT_DELAY csrf_spp_reg$D_IN;
	if (csrf_sscratch_csr$EN)
	  csrf_sscratch_csr <= `BSV_ASSIGNMENT_DELAY csrf_sscratch_csr$D_IN;
	if (csrf_stats_module_doStats$EN)
	  csrf_stats_module_doStats <= `BSV_ASSIGNMENT_DELAY
	      csrf_stats_module_doStats$D_IN;
	if (csrf_stval_csr$EN)
	  csrf_stval_csr <= `BSV_ASSIGNMENT_DELAY csrf_stval_csr$D_IN;
	if (csrf_stvec_base_hi_reg$EN)
	  csrf_stvec_base_hi_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_stvec_base_hi_reg$D_IN;
	if (csrf_stvec_mode_low_reg$EN)
	  csrf_stvec_mode_low_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_stvec_mode_low_reg$D_IN;
	if (csrf_sum_reg$EN)
	  csrf_sum_reg <= `BSV_ASSIGNMENT_DELAY csrf_sum_reg$D_IN;
	if (csrf_time_reg$EN)
	  csrf_time_reg <= `BSV_ASSIGNMENT_DELAY csrf_time_reg$D_IN;
	if (csrf_timer_int_en_vec_0$EN)
	  csrf_timer_int_en_vec_0 <= `BSV_ASSIGNMENT_DELAY
	      csrf_timer_int_en_vec_0$D_IN;
	if (csrf_timer_int_en_vec_1$EN)
	  csrf_timer_int_en_vec_1 <= `BSV_ASSIGNMENT_DELAY
	      csrf_timer_int_en_vec_1$D_IN;
	if (csrf_timer_int_en_vec_3$EN)
	  csrf_timer_int_en_vec_3 <= `BSV_ASSIGNMENT_DELAY
	      csrf_timer_int_en_vec_3$D_IN;
	if (csrf_timer_int_pend_vec_0$EN)
	  csrf_timer_int_pend_vec_0 <= `BSV_ASSIGNMENT_DELAY
	      csrf_timer_int_pend_vec_0$D_IN;
	if (csrf_timer_int_pend_vec_1$EN)
	  csrf_timer_int_pend_vec_1 <= `BSV_ASSIGNMENT_DELAY
	      csrf_timer_int_pend_vec_1$D_IN;
	if (csrf_timer_int_pend_vec_3$EN)
	  csrf_timer_int_pend_vec_3 <= `BSV_ASSIGNMENT_DELAY
	      csrf_timer_int_pend_vec_3$D_IN;
	if (csrf_tsr_reg$EN)
	  csrf_tsr_reg <= `BSV_ASSIGNMENT_DELAY csrf_tsr_reg$D_IN;
	if (csrf_tvm_reg$EN)
	  csrf_tvm_reg <= `BSV_ASSIGNMENT_DELAY csrf_tvm_reg$D_IN;
	if (csrf_tw_reg$EN)
	  csrf_tw_reg <= `BSV_ASSIGNMENT_DELAY csrf_tw_reg$D_IN;
	if (csrf_vm_mode_sv39_reg$EN)
	  csrf_vm_mode_sv39_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_vm_mode_sv39_reg$D_IN;
	if (flush_reservation$EN)
	  flush_reservation <= `BSV_ASSIGNMENT_DELAY flush_reservation$D_IN;
	if (flush_tlbs$EN)
	  flush_tlbs <= `BSV_ASSIGNMENT_DELAY flush_tlbs$D_IN;
	if (mmio_cRqQ_clearReq_rl$EN)
	  mmio_cRqQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_cRqQ_clearReq_rl$D_IN;
	if (mmio_cRqQ_data_0$EN)
	  mmio_cRqQ_data_0 <= `BSV_ASSIGNMENT_DELAY mmio_cRqQ_data_0$D_IN;
	if (mmio_cRqQ_deqReq_rl$EN)
	  mmio_cRqQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_cRqQ_deqReq_rl$D_IN;
	if (mmio_cRqQ_empty$EN)
	  mmio_cRqQ_empty <= `BSV_ASSIGNMENT_DELAY mmio_cRqQ_empty$D_IN;
	if (mmio_cRqQ_enqReq_rl$EN)
	  mmio_cRqQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_cRqQ_enqReq_rl$D_IN;
	if (mmio_cRqQ_full$EN)
	  mmio_cRqQ_full <= `BSV_ASSIGNMENT_DELAY mmio_cRqQ_full$D_IN;
	if (mmio_cRsQ_clearReq_rl$EN)
	  mmio_cRsQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_cRsQ_clearReq_rl$D_IN;
	if (mmio_cRsQ_data_0$EN)
	  mmio_cRsQ_data_0 <= `BSV_ASSIGNMENT_DELAY mmio_cRsQ_data_0$D_IN;
	if (mmio_cRsQ_deqReq_rl$EN)
	  mmio_cRsQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_cRsQ_deqReq_rl$D_IN;
	if (mmio_cRsQ_empty$EN)
	  mmio_cRsQ_empty <= `BSV_ASSIGNMENT_DELAY mmio_cRsQ_empty$D_IN;
	if (mmio_cRsQ_enqReq_rl$EN)
	  mmio_cRsQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_cRsQ_enqReq_rl$D_IN;
	if (mmio_cRsQ_full$EN)
	  mmio_cRsQ_full <= `BSV_ASSIGNMENT_DELAY mmio_cRsQ_full$D_IN;
	if (mmio_dataPendQ_clearReq_rl$EN)
	  mmio_dataPendQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataPendQ_clearReq_rl$D_IN;
	if (mmio_dataPendQ_deqReq_rl$EN)
	  mmio_dataPendQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataPendQ_deqReq_rl$D_IN;
	if (mmio_dataPendQ_empty$EN)
	  mmio_dataPendQ_empty <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataPendQ_empty$D_IN;
	if (mmio_dataPendQ_enqReq_rl$EN)
	  mmio_dataPendQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataPendQ_enqReq_rl$D_IN;
	if (mmio_dataPendQ_full$EN)
	  mmio_dataPendQ_full <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataPendQ_full$D_IN;
	if (mmio_dataReqQ_clearReq_rl$EN)
	  mmio_dataReqQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataReqQ_clearReq_rl$D_IN;
	if (mmio_dataReqQ_data_0$EN)
	  mmio_dataReqQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataReqQ_data_0$D_IN;
	if (mmio_dataReqQ_deqReq_rl$EN)
	  mmio_dataReqQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataReqQ_deqReq_rl$D_IN;
	if (mmio_dataReqQ_empty$EN)
	  mmio_dataReqQ_empty <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataReqQ_empty$D_IN;
	if (mmio_dataReqQ_enqReq_rl$EN)
	  mmio_dataReqQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataReqQ_enqReq_rl$D_IN;
	if (mmio_dataReqQ_full$EN)
	  mmio_dataReqQ_full <= `BSV_ASSIGNMENT_DELAY mmio_dataReqQ_full$D_IN;
	if (mmio_dataRespQ_clearReq_rl$EN)
	  mmio_dataRespQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataRespQ_clearReq_rl$D_IN;
	if (mmio_dataRespQ_data_0$EN)
	  mmio_dataRespQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataRespQ_data_0$D_IN;
	if (mmio_dataRespQ_deqReq_rl$EN)
	  mmio_dataRespQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataRespQ_deqReq_rl$D_IN;
	if (mmio_dataRespQ_empty$EN)
	  mmio_dataRespQ_empty <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataRespQ_empty$D_IN;
	if (mmio_dataRespQ_enqReq_rl$EN)
	  mmio_dataRespQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataRespQ_enqReq_rl$D_IN;
	if (mmio_dataRespQ_full$EN)
	  mmio_dataRespQ_full <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataRespQ_full$D_IN;
	if (mmio_fromHostAddr$EN)
	  mmio_fromHostAddr <= `BSV_ASSIGNMENT_DELAY mmio_fromHostAddr$D_IN;
	if (mmio_pRqQ_clearReq_rl$EN)
	  mmio_pRqQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_pRqQ_clearReq_rl$D_IN;
	if (mmio_pRqQ_data_0$EN)
	  mmio_pRqQ_data_0 <= `BSV_ASSIGNMENT_DELAY mmio_pRqQ_data_0$D_IN;
	if (mmio_pRqQ_deqReq_rl$EN)
	  mmio_pRqQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_pRqQ_deqReq_rl$D_IN;
	if (mmio_pRqQ_empty$EN)
	  mmio_pRqQ_empty <= `BSV_ASSIGNMENT_DELAY mmio_pRqQ_empty$D_IN;
	if (mmio_pRqQ_enqReq_rl$EN)
	  mmio_pRqQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_pRqQ_enqReq_rl$D_IN;
	if (mmio_pRqQ_full$EN)
	  mmio_pRqQ_full <= `BSV_ASSIGNMENT_DELAY mmio_pRqQ_full$D_IN;
	if (mmio_pRsQ_clearReq_rl$EN)
	  mmio_pRsQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_pRsQ_clearReq_rl$D_IN;
	if (mmio_pRsQ_data_0$EN)
	  mmio_pRsQ_data_0 <= `BSV_ASSIGNMENT_DELAY mmio_pRsQ_data_0$D_IN;
	if (mmio_pRsQ_deqReq_rl$EN)
	  mmio_pRsQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_pRsQ_deqReq_rl$D_IN;
	if (mmio_pRsQ_empty$EN)
	  mmio_pRsQ_empty <= `BSV_ASSIGNMENT_DELAY mmio_pRsQ_empty$D_IN;
	if (mmio_pRsQ_enqReq_rl$EN)
	  mmio_pRsQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_pRsQ_enqReq_rl$D_IN;
	if (mmio_pRsQ_full$EN)
	  mmio_pRsQ_full <= `BSV_ASSIGNMENT_DELAY mmio_pRsQ_full$D_IN;
	if (mmio_toHostAddr$EN)
	  mmio_toHostAddr <= `BSV_ASSIGNMENT_DELAY mmio_toHostAddr$D_IN;
	if (outOfReset$EN)
	  outOfReset <= `BSV_ASSIGNMENT_DELAY outOfReset$D_IN;
	if (scaprf_ddc_reg$EN)
	  scaprf_ddc_reg <= `BSV_ASSIGNMENT_DELAY scaprf_ddc_reg$D_IN;
	if (scaprf_mScratchC_reg$EN)
	  scaprf_mScratchC_reg <= `BSV_ASSIGNMENT_DELAY
	      scaprf_mScratchC_reg$D_IN;
	if (scaprf_mepcc_reg$EN)
	  scaprf_mepcc_reg <= `BSV_ASSIGNMENT_DELAY scaprf_mepcc_reg$D_IN;
	if (scaprf_mtcc_reg$EN)
	  scaprf_mtcc_reg <= `BSV_ASSIGNMENT_DELAY scaprf_mtcc_reg$D_IN;
	if (scaprf_mtdc_reg$EN)
	  scaprf_mtdc_reg <= `BSV_ASSIGNMENT_DELAY scaprf_mtdc_reg$D_IN;
	if (scaprf_pcc_reg_data_rl$EN)
	  scaprf_pcc_reg_data_rl <= `BSV_ASSIGNMENT_DELAY
	      scaprf_pcc_reg_data_rl$D_IN;
	if (scaprf_sScratchC_reg$EN)
	  scaprf_sScratchC_reg <= `BSV_ASSIGNMENT_DELAY
	      scaprf_sScratchC_reg$D_IN;
	if (scaprf_sepcc_reg$EN)
	  scaprf_sepcc_reg <= `BSV_ASSIGNMENT_DELAY scaprf_sepcc_reg$D_IN;
	if (scaprf_stcc_reg$EN)
	  scaprf_stcc_reg <= `BSV_ASSIGNMENT_DELAY scaprf_stcc_reg$D_IN;
	if (scaprf_stdc_reg$EN)
	  scaprf_stdc_reg <= `BSV_ASSIGNMENT_DELAY scaprf_stdc_reg$D_IN;
	if (scaprf_uScratchC_reg$EN)
	  scaprf_uScratchC_reg <= `BSV_ASSIGNMENT_DELAY
	      scaprf_uScratchC_reg$D_IN;
	if (scaprf_uepcc_reg$EN)
	  scaprf_uepcc_reg <= `BSV_ASSIGNMENT_DELAY scaprf_uepcc_reg$D_IN;
	if (scaprf_utcc_reg$EN)
	  scaprf_utcc_reg <= `BSV_ASSIGNMENT_DELAY scaprf_utcc_reg$D_IN;
	if (scaprf_utdc_reg$EN)
	  scaprf_utdc_reg <= `BSV_ASSIGNMENT_DELAY scaprf_utdc_reg$D_IN;
	if (started$EN) started <= `BSV_ASSIGNMENT_DELAY started$D_IN;
	if (update_vm_info$EN)
	  update_vm_info <= `BSV_ASSIGNMENT_DELAY update_vm_info$D_IN;
      end
    if (csrf_rg_tdata2$EN)
      csrf_rg_tdata2 <= `BSV_ASSIGNMENT_DELAY csrf_rg_tdata2$D_IN;
    if (csrf_rg_tdata3$EN)
      csrf_rg_tdata3 <= `BSV_ASSIGNMENT_DELAY csrf_rg_tdata3$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    commitStage_commitTrap =
	265'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    commitStage_rg_serial_num = 64'hAAAAAAAAAAAAAAAA;
    coreFix_doStatsReg = 1'h0;
    coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt = 4'hA;
    coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init = 1'h0;
    coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready = 1'h0;
    coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit = 2'h2;
    coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_0 =
	129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1 =
	129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_0 =
	129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1 =
	129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_0 =
	129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1 =
	129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0 = 3'h2;
    coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1 = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0 = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1 = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2 = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3 = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4 = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5 = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6 = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7 = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl = 4'hA;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 =
	583'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1 =
	583'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl =
	584'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl = 59'h2AAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_processAmo =
	161'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl =
	153'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0 =
	72'hAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1 =
	72'hAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl =
	73'h0AAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 =
	579'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1 =
	579'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl =
	580'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full = 1'h0;
    coreFix_memExe_dMem_perfReqQ_clearReq_rl = 1'h0;
    coreFix_memExe_dMem_perfReqQ_data_0 = 4'hA;
    coreFix_memExe_dMem_perfReqQ_deqReq_rl = 1'h0;
    coreFix_memExe_dMem_perfReqQ_empty = 1'h0;
    coreFix_memExe_dMem_perfReqQ_enqReq_rl = 5'h0A;
    coreFix_memExe_dMem_perfReqQ_full = 1'h0;
    coreFix_memExe_forwardQ_clearReq_rl = 1'h0;
    coreFix_memExe_forwardQ_data_0 = 69'h0AAAAAAAAAAAAAAAAA;
    coreFix_memExe_forwardQ_data_1 = 69'h0AAAAAAAAAAAAAAAAA;
    coreFix_memExe_forwardQ_deqP = 1'h0;
    coreFix_memExe_forwardQ_deqReq_rl = 1'h0;
    coreFix_memExe_forwardQ_empty = 1'h0;
    coreFix_memExe_forwardQ_enqP = 1'h0;
    coreFix_memExe_forwardQ_enqReq_rl = 70'h2AAAAAAAAAAAAAAAAA;
    coreFix_memExe_forwardQ_full = 1'h0;
    coreFix_memExe_memRespLdQ_clearReq_rl = 1'h0;
    coreFix_memExe_memRespLdQ_data_0 = 69'h0AAAAAAAAAAAAAAAAA;
    coreFix_memExe_memRespLdQ_data_1 = 69'h0AAAAAAAAAAAAAAAAA;
    coreFix_memExe_memRespLdQ_deqP = 1'h0;
    coreFix_memExe_memRespLdQ_deqReq_rl = 1'h0;
    coreFix_memExe_memRespLdQ_empty = 1'h0;
    coreFix_memExe_memRespLdQ_enqP = 1'h0;
    coreFix_memExe_memRespLdQ_enqReq_rl = 70'h2AAAAAAAAAAAAAAAAA;
    coreFix_memExe_memRespLdQ_full = 1'h0;
    coreFix_memExe_reqLdQ_data_0_rl = 69'h0AAAAAAAAAAAAAAAAA;
    coreFix_memExe_reqLdQ_empty_rl = 1'h0;
    coreFix_memExe_reqLdQ_full_rl = 1'h0;
    coreFix_memExe_reqLrScAmoQ_data_0_rl =
	153'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_reqLrScAmoQ_empty_rl = 1'h0;
    coreFix_memExe_reqLrScAmoQ_full_rl = 1'h0;
    coreFix_memExe_reqStQ_data_0_rl = 66'h2AAAAAAAAAAAAAAAA;
    coreFix_memExe_reqStQ_empty_rl = 1'h0;
    coreFix_memExe_reqStQ_full_rl = 1'h0;
    coreFix_memExe_respLrScAmoQ_clearReq_rl = 1'h0;
    coreFix_memExe_respLrScAmoQ_data_0 = 64'hAAAAAAAAAAAAAAAA;
    coreFix_memExe_respLrScAmoQ_deqReq_rl = 1'h0;
    coreFix_memExe_respLrScAmoQ_empty = 1'h0;
    coreFix_memExe_respLrScAmoQ_enqReq_rl = 65'h0AAAAAAAAAAAAAAAA;
    coreFix_memExe_respLrScAmoQ_full = 1'h0;
    coreFix_memExe_waitLrScAmoMMIOResp = 3'h2;
    csrInstOrInterruptInflight_rl = 1'h0;
    csrf_external_int_en_vec_0 = 1'h0;
    csrf_external_int_en_vec_1 = 1'h0;
    csrf_external_int_en_vec_3 = 1'h0;
    csrf_external_int_pend_vec_0 = 1'h0;
    csrf_external_int_pend_vec_1 = 1'h0;
    csrf_external_int_pend_vec_3 = 1'h0;
    csrf_fflags_reg = 5'h0A;
    csrf_frm_reg = 3'h2;
    csrf_fs_reg = 2'h2;
    csrf_ie_vec_0 = 1'h0;
    csrf_ie_vec_1 = 1'h0;
    csrf_ie_vec_3 = 1'h0;
    csrf_mcause_code_reg = 4'hA;
    csrf_mcause_interrupt_reg = 1'h0;
    csrf_mcounteren_cy_reg = 1'h0;
    csrf_mcounteren_ir_reg = 1'h0;
    csrf_mcounteren_tm_reg = 1'h0;
    csrf_mcycle_ehr_data_rl = 64'hAAAAAAAAAAAAAAAA;
    csrf_medeleg_13_11_reg = 3'h2;
    csrf_medeleg_15_reg = 1'h0;
    csrf_medeleg_9_0_reg = 10'h2AA;
    csrf_mepc_csr = 64'hAAAAAAAAAAAAAAAA;
    csrf_mideleg_11_reg = 1'h0;
    csrf_mideleg_1_0_reg = 2'h2;
    csrf_mideleg_5_3_reg = 3'h2;
    csrf_mideleg_9_7_reg = 3'h2;
    csrf_minstret_ehr_data_rl = 64'hAAAAAAAAAAAAAAAA;
    csrf_mpp_reg = 2'h2;
    csrf_mprv_reg = 1'h0;
    csrf_mscratch_csr = 64'hAAAAAAAAAAAAAAAA;
    csrf_mtval_csr = 64'hAAAAAAAAAAAAAAAA;
    csrf_mtvec_base_hi_reg = 62'h2AAAAAAAAAAAAAAA;
    csrf_mtvec_mode_low_reg = 1'h0;
    csrf_mxr_reg = 1'h0;
    csrf_ppn_reg = 44'hAAAAAAAAAAA;
    csrf_prev_ie_vec_0 = 1'h0;
    csrf_prev_ie_vec_1 = 1'h0;
    csrf_prev_ie_vec_3 = 1'h0;
    csrf_prv_reg = 2'h2;
    csrf_rg_tdata1_data = 59'h2AAAAAAAAAAAAAA;
    csrf_rg_tdata1_dmode = 1'h0;
    csrf_rg_tdata2 = 64'hAAAAAAAAAAAAAAAA;
    csrf_rg_tdata3 = 64'hAAAAAAAAAAAAAAAA;
    csrf_rg_tselect = 64'hAAAAAAAAAAAAAAAA;
    csrf_scause_code_reg = 4'hA;
    csrf_scause_interrupt_reg = 1'h0;
    csrf_scounteren_cy_reg = 1'h0;
    csrf_scounteren_ir_reg = 1'h0;
    csrf_scounteren_tm_reg = 1'h0;
    csrf_sepc_csr = 64'hAAAAAAAAAAAAAAAA;
    csrf_software_int_en_vec_0 = 1'h0;
    csrf_software_int_en_vec_1 = 1'h0;
    csrf_software_int_en_vec_3 = 1'h0;
    csrf_software_int_pend_vec_0 = 1'h0;
    csrf_software_int_pend_vec_1 = 1'h0;
    csrf_software_int_pend_vec_3 = 1'h0;
    csrf_spp_reg = 1'h0;
    csrf_sscratch_csr = 64'hAAAAAAAAAAAAAAAA;
    csrf_stats_module_doStats = 1'h0;
    csrf_stval_csr = 64'hAAAAAAAAAAAAAAAA;
    csrf_stvec_base_hi_reg = 62'h2AAAAAAAAAAAAAAA;
    csrf_stvec_mode_low_reg = 1'h0;
    csrf_sum_reg = 1'h0;
    csrf_time_reg = 64'hAAAAAAAAAAAAAAAA;
    csrf_timer_int_en_vec_0 = 1'h0;
    csrf_timer_int_en_vec_1 = 1'h0;
    csrf_timer_int_en_vec_3 = 1'h0;
    csrf_timer_int_pend_vec_0 = 1'h0;
    csrf_timer_int_pend_vec_1 = 1'h0;
    csrf_timer_int_pend_vec_3 = 1'h0;
    csrf_tsr_reg = 1'h0;
    csrf_tvm_reg = 1'h0;
    csrf_tw_reg = 1'h0;
    csrf_vm_mode_sv39_reg = 1'h0;
    flush_reservation = 1'h0;
    flush_tlbs = 1'h0;
    mmio_cRqQ_clearReq_rl = 1'h0;
    mmio_cRqQ_data_0 = 142'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mmio_cRqQ_deqReq_rl = 1'h0;
    mmio_cRqQ_empty = 1'h0;
    mmio_cRqQ_enqReq_rl = 143'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mmio_cRqQ_full = 1'h0;
    mmio_cRsQ_clearReq_rl = 1'h0;
    mmio_cRsQ_data_0 = 1'h0;
    mmio_cRsQ_deqReq_rl = 1'h0;
    mmio_cRsQ_empty = 1'h0;
    mmio_cRsQ_enqReq_rl = 2'h2;
    mmio_cRsQ_full = 1'h0;
    mmio_dataPendQ_clearReq_rl = 1'h0;
    mmio_dataPendQ_deqReq_rl = 1'h0;
    mmio_dataPendQ_empty = 1'h0;
    mmio_dataPendQ_enqReq_rl = 1'h0;
    mmio_dataPendQ_full = 1'h0;
    mmio_dataReqQ_clearReq_rl = 1'h0;
    mmio_dataReqQ_data_0 = 142'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mmio_dataReqQ_deqReq_rl = 1'h0;
    mmio_dataReqQ_empty = 1'h0;
    mmio_dataReqQ_enqReq_rl = 143'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mmio_dataReqQ_full = 1'h0;
    mmio_dataRespQ_clearReq_rl = 1'h0;
    mmio_dataRespQ_data_0 = 65'h0AAAAAAAAAAAAAAAA;
    mmio_dataRespQ_deqReq_rl = 1'h0;
    mmio_dataRespQ_empty = 1'h0;
    mmio_dataRespQ_enqReq_rl = 66'h2AAAAAAAAAAAAAAAA;
    mmio_dataRespQ_full = 1'h0;
    mmio_fromHostAddr = 61'h0AAAAAAAAAAAAAAA;
    mmio_pRqQ_clearReq_rl = 1'h0;
    mmio_pRqQ_data_0 = 39'h2AAAAAAAAA;
    mmio_pRqQ_deqReq_rl = 1'h0;
    mmio_pRqQ_empty = 1'h0;
    mmio_pRqQ_enqReq_rl = 40'hAAAAAAAAAA;
    mmio_pRqQ_full = 1'h0;
    mmio_pRsQ_clearReq_rl = 1'h0;
    mmio_pRsQ_data_0 = 67'h2AAAAAAAAAAAAAAAA;
    mmio_pRsQ_deqReq_rl = 1'h0;
    mmio_pRsQ_empty = 1'h0;
    mmio_pRsQ_enqReq_rl = 68'hAAAAAAAAAAAAAAAAA;
    mmio_pRsQ_full = 1'h0;
    mmio_toHostAddr = 61'h0AAAAAAAAAAAAAAA;
    outOfReset = 1'h0;
    scaprf_ddc_reg = 153'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    scaprf_mScratchC_reg = 153'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    scaprf_mepcc_reg = 153'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    scaprf_mtcc_reg = 153'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    scaprf_mtdc_reg = 153'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    scaprf_pcc_reg_data_rl = 153'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    scaprf_sScratchC_reg = 153'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    scaprf_sepcc_reg = 153'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    scaprf_stcc_reg = 153'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    scaprf_stdc_reg = 153'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    scaprf_uScratchC_reg = 153'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    scaprf_uepcc_reg = 153'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    scaprf_utcc_reg = 153'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    scaprf_utdc_reg = 153'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    started = 1'h0;
    update_vm_info = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_outOfReset)
	$fwrite(32'h80000002, "mkProc came out of reset\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_mmio_handlePRq && mmio_pRqQ_data_0[38] &&
	  mmio_pRqQ_data_0[37:36] != 2'd2)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_mmio_handlePRq && mmio_pRqQ_data_0[38] &&
	  mmio_pRqQ_data_0[37:36] != 2'd2)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/lib/MMIOCore.bsv\", line 133, column 37\nplatform can only write MTIP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_mmio_handlePRq && mmio_pRqQ_data_0[38] &&
	  mmio_pRqQ_data_0[37:36] != 2'd2)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault &&
	  coreFix_memExe_lsq$firstLd[2])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault &&
	  coreFix_memExe_lsq$firstLd[2])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 757, column 45\ncannot be killed");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault &&
	  coreFix_memExe_lsq$firstLd[2])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	  coreFix_memExe_lsq$firstLd[90])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	  coreFix_memExe_lsq$firstLd[90])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 768, column 33\nnormal Ld cannot have .rl");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	  coreFix_memExe_lsq$firstLd[90])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue &&
	  coreFix_memExe_lsq$firstLd[2])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue &&
	  coreFix_memExe_lsq$firstLd[2])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 821, column 45\ncannot be killed");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue &&
	  coreFix_memExe_lsq$firstLd[2])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue &&
	  coreFix_memExe_lsq$firstLd[2])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue &&
	  coreFix_memExe_lsq$firstLd[2])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 910, column 45\ncannot be killed");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue &&
	  coreFix_memExe_lsq$firstLd[2])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue &&
	  coreFix_memExe_lsq$firstLd[101])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue &&
	  coreFix_memExe_lsq$firstLd[101])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 911, column 42\nLdQ MMIO is only Ld");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue &&
	  coreFix_memExe_lsq$firstLd[101])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	  (coreFix_memExe_lsq$firstLd[101] ||
	   !coreFix_memExe_lsq$firstLd[16]))
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	  (coreFix_memExe_lsq$firstLd[101] ||
	   !coreFix_memExe_lsq$firstLd[16]))
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 998, column 61\nmust be MMIO Ld");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	  (coreFix_memExe_lsq$firstLd[101] ||
	   !coreFix_memExe_lsq$firstLd[16]))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	  (coreFix_memExe_lsq$firstLd[7] || coreFix_memExe_lsq$firstLd[2]))
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	  (coreFix_memExe_lsq$firstLd[7] || coreFix_memExe_lsq$firstLd[2]))
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 999, column 73\nno fualt or kill");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	  (coreFix_memExe_lsq$firstLd[7] || coreFix_memExe_lsq$firstLd[2]))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo &&
	  coreFix_memExe_dMem_cache_m_banks_0_processAmo[87:86] != 2'd3)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo &&
	  coreFix_memExe_dMem_cache_m_banks_0_processAmo[87:86] != 2'd3)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 572, column 36\nAMO must req for M");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo &&
	  coreFix_memExe_dMem_cache_m_banks_0_processAmo[87:86] != 2'd3)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getState !=
	  3'd2)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getState !=
	  3'd2)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 352, column 13\nsend replacement resp to parent, state should be WaitNewTag");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getState !=
	  3'd2)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2522)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2522)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 853, column 22\npRqMiss deasserted, must be down to S");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2522)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2540)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2540)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 870, column 18\npRq overtakes CRq");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2540)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush)
	$write("instret:%0d  PC:0x%0h  instr:0x%08h",
	       commitStage_rg_serial_num,
	       rob$deqPort_0_deq_data[551:389],
	       rob$deqPort_0_deq_data[388:357],
	       "  iType:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[356:352] == 5'd0)
	$write("Unsupported");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[356:352] == 5'd1)
	$write("Nop");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[356:352] == 5'd2)
	$write("Amo");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[356:352] == 5'd3)
	$write("Alu");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[356:352] == 5'd4)
	$write("Ld");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[356:352] == 5'd5)
	$write("St");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[356:352] == 5'd6)
	$write("Lr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[356:352] == 5'd7)
	$write("Sc");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[356:352] == 5'd8)
	$write("J");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[356:352] == 5'd9)
	$write("Jr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[356:352] == 5'd10)
	$write("Br");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[356:352] == 5'd11)
	$write("Auipc");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[356:352] == 5'd12)
	$write("Fpu");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[356:352] == 5'd13)
	$write("Csr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[356:352] == 5'd14)
	$write("Fence");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[356:352] == 5'd15)
	$write("FenceI");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[356:352] == 5'd16)
	$write("SFence");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[356:352] == 5'd17)
	$write("Ecall");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[356:352] == 5'd18)
	$write("Ebreak");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[356:352] == 5'd19)
	$write("Sret");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[356:352] == 5'd20)
	$write("Mret");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[356:352] != 5'd0 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd1 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd2 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd3 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd4 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd5 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd6 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd7 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd8 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd9 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd10 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd11 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd12 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd13 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd14 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd15 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd16 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd17 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd18 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd19 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd20)
	$write("Interrupt");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush)
	$write("    [doCommitTrap]", "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  !rob$deqPort_0_deq_data[25])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  !rob$deqPort_0_deq_data[25])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/CommitStage.bsv\", line 678, column 48\nmust be executed");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  !rob$deqPort_0_deq_data[25])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[11:0] != 12'd0)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[11:0] != 12'd0)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/CommitStage.bsv\", line 679, column 36\ncannot have spec bits");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[11:0] != 12'd0)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	  rob$deqPort_0_deq_data[12])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	  rob$deqPort_0_deq_data[12])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/CommitStage.bsv\", line 811, column 39\ncannot increment epoch before");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	  rob$deqPort_0_deq_data[12])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	  !rob$deqPort_0_deq_data[25])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	  !rob$deqPort_0_deq_data[25])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/CommitStage.bsv\", line 812, column 48\nmust be executed");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	  !rob$deqPort_0_deq_data[25])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	  rob$deqPort_0_deq_data[11:0] != 12'd0)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	  rob$deqPort_0_deq_data[11:0] != 12'd0)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/CommitStage.bsv\", line 813, column 36\ncannot have spec bits");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	  rob$deqPort_0_deq_data[11:0] != 12'd0)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst)
	$write("instret:%0d  PC:0x%0h  instr:0x%08h",
	       commitStage_rg_serial_num,
	       rob$deqPort_0_deq_data[551:389],
	       rob$deqPort_0_deq_data[388:357],
	       "   iType:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[356:352] == 5'd0)
	$write("Unsupported");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[356:352] == 5'd1)
	$write("Nop");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[356:352] == 5'd2)
	$write("Amo");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[356:352] == 5'd3)
	$write("Alu");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[356:352] == 5'd4)
	$write("Ld");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[356:352] == 5'd5)
	$write("St");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[356:352] == 5'd6)
	$write("Lr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[356:352] == 5'd7)
	$write("Sc");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[356:352] == 5'd8)
	$write("J");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[356:352] == 5'd9)
	$write("Jr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[356:352] == 5'd10)
	$write("Br");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[356:352] == 5'd11)
	$write("Auipc");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[356:352] == 5'd12)
	$write("Fpu");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[356:352] == 5'd13)
	$write("Csr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[356:352] == 5'd14)
	$write("Fence");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[356:352] == 5'd15)
	$write("FenceI");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[356:352] == 5'd16)
	$write("SFence");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[356:352] == 5'd17)
	$write("Ecall");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[356:352] == 5'd18)
	$write("Ebreak");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[356:352] == 5'd19)
	$write("Sret");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[356:352] == 5'd20)
	$write("Mret");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[356:352] != 5'd0 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd1 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd2 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd3 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd4 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd5 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd6 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd7 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd8 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd9 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd10 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd11 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd12 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd13 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd14 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd15 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd16 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd17 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd18 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd19 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd20)
	$write("Interrupt");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst)
	$write("    [doCommitSystemInst]", "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	  (rob$deqPort_0_deq_data[196:195] == 2'd0 ||
	   rob$deqPort_0_deq_data[196:195] == 2'd1))
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	  (rob$deqPort_0_deq_data[196:195] == 2'd0 ||
	   rob$deqPort_0_deq_data[196:195] == 2'd1))
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/CommitStage.bsv\", line 856, column 33\nmust have csr data");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	  (rob$deqPort_0_deq_data[196:195] == 2'd0 ||
	   rob$deqPort_0_deq_data[196:195] == 2'd1))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[356:352] == 5'd13 &&
	  IF_rob_deqPort_0_deq_data__4141_BIT_280_4372_T_ETC___d14454 == 6'd6)
	$display("[Terminate CSR] being written (val = %x), ",
		 "send terminate signal to host",
		 rob$deqPort_0_deq_data[95:32]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  NOT_IF_rob_deqPort_0_deq_data__4141_BITS_196_T_ETC___d14648)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  NOT_IF_rob_deqPort_0_deq_data__4141_BITS_196_T_ETC___d14648)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/CommitStage.bsv\", line 879, column 48\nppc must be pc + 4");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  NOT_IF_rob_deqPort_0_deq_data__4141_BITS_196_T_ETC___d14648)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  !rob$deqPort_0_deq_data[12])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  !rob$deqPort_0_deq_data[12])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/CommitStage.bsv\", line 952, column 38\nmust have already incremented epoch");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  !rob$deqPort_0_deq_data[12])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  NOT_rob_deqPort_0_deq_data__4141_BITS_356_TO_3_ETC___d14657)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  NOT_rob_deqPort_0_deq_data__4141_BITS_356_TO_3_ETC___d14657)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/CommitStage.bsv\", line 953, column 54\nonly CSR has valid csr idx");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  NOT_rob_deqPort_0_deq_data__4141_BITS_356_TO_3_ETC___d14657)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[11:0] != 12'd0)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[11:0] != 12'd0)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/CommitStage.bsv\", line 957, column 36\ncannot have spec bits");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[11:0] != 12'd0)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  !rob$deqPort_0_deq_data[267])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  !rob$deqPort_0_deq_data[267])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/CommitStage.bsv\", line 958, column 37\nmust have claimed phy reg");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  !rob$deqPort_0_deq_data[267])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst && rob$deqPort_0_canDeq)
	$write("instret:%0d  PC:0x%0h  instr:0x%08h",
	       commitStage_rg_serial_num,
	       rob$deqPort_0_deq_data[551:389],
	       rob$deqPort_0_deq_data[388:357],
	       "   iType:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[356:352] == 5'd1)
	$write("Nop");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[356:352] == 5'd2)
	$write("Amo");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[356:352] == 5'd3)
	$write("Alu");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[356:352] == 5'd4)
	$write("Ld");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[356:352] == 5'd5)
	$write("St");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[356:352] == 5'd6)
	$write("Lr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[356:352] == 5'd7)
	$write("Sc");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[356:352] == 5'd8)
	$write("J");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[356:352] == 5'd9)
	$write("Jr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[356:352] == 5'd10)
	$write("Br");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[356:352] == 5'd11)
	$write("Auipc");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[356:352] == 5'd12)
	$write("Fpu");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[356:352] == 5'd14)
	$write("Fence");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[356:352] != 5'd1 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd2 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd3 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd4 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd5 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd6 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd7 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd8 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd9 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd10 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd11 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd12 &&
	  rob$deqPort_0_deq_data[356:352] != 5'd14)
	$write("Interrupt");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst && rob$deqPort_0_canDeq)
	$write("    [doCommitNormalInst [%0d]]", $signed(32'd0), "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  !rob$deqPort_0_deq_data[267])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  !rob$deqPort_0_deq_data[267])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/CommitStage.bsv\", line 1087, column 49\nshould have renamed");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  !rob$deqPort_0_deq_data[267])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[266] &&
	  rob$deqPort_1_deq_data[356:352] != 5'd0 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd21 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd17 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd18 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd13 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd16 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd15 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd19 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd20)
	$write("instret:%0d  PC:0x%0h  instr:0x%08h",
	       commitStage_rg_serial_num +
	       IF_rob_deqPort_0_canDeq__4671_THEN_IF_NOT_rob__ETC___d14782,
	       rob$deqPort_1_deq_data[551:389],
	       rob$deqPort_1_deq_data[388:357],
	       "   iType:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[266] &&
	  rob$deqPort_1_deq_data[356:352] == 5'd1)
	$write("Nop");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[266] &&
	  rob$deqPort_1_deq_data[356:352] == 5'd2)
	$write("Amo");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[266] &&
	  rob$deqPort_1_deq_data[356:352] == 5'd3)
	$write("Alu");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[266] &&
	  rob$deqPort_1_deq_data[356:352] == 5'd4)
	$write("Ld");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[266] &&
	  rob$deqPort_1_deq_data[356:352] == 5'd5)
	$write("St");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[266] &&
	  rob$deqPort_1_deq_data[356:352] == 5'd6)
	$write("Lr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[266] &&
	  rob$deqPort_1_deq_data[356:352] == 5'd7)
	$write("Sc");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[266] &&
	  rob$deqPort_1_deq_data[356:352] == 5'd8)
	$write("J");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[266] &&
	  rob$deqPort_1_deq_data[356:352] == 5'd9)
	$write("Jr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[266] &&
	  rob$deqPort_1_deq_data[356:352] == 5'd10)
	$write("Br");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[266] &&
	  rob$deqPort_1_deq_data[356:352] == 5'd11)
	$write("Auipc");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[266] &&
	  rob$deqPort_1_deq_data[356:352] == 5'd12)
	$write("Fpu");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[266] &&
	  rob$deqPort_1_deq_data[356:352] == 5'd14)
	$write("Fence");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[266] &&
	  rob$deqPort_1_deq_data[356:352] != 5'd0 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd21 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd17 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd18 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd13 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd16 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd15 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd19 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd20 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd1 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd2 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd3 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd4 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd5 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd6 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd7 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd8 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd9 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd10 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd11 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd12 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd14)
	$write("Interrupt");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[266] &&
	  rob$deqPort_1_deq_data[356:352] != 5'd0 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd21 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd17 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd18 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd13 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd16 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd15 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd19 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd20)
	$write("    [doCommitNormalInst [%0d]]", $signed(32'd1), "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[266] &&
	  rob$deqPort_1_deq_data[356:352] != 5'd0 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd21 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd17 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd18 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd13 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd16 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd15 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd19 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd20 &&
	  !rob$deqPort_1_deq_data[267])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[266] &&
	  rob$deqPort_1_deq_data[356:352] != 5'd0 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd21 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd17 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd18 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd13 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd16 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd15 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd19 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd20 &&
	  !rob$deqPort_1_deq_data[267])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/CommitStage.bsv\", line 1087, column 49\nshould have renamed");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[266] &&
	  rob$deqPort_1_deq_data[356:352] != 5'd0 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd21 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd17 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd18 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd13 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd16 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd15 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd19 &&
	  rob$deqPort_1_deq_data[356:352] != 5'd20 &&
	  !rob$deqPort_1_deq_data[267])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	  !coreFix_aluExe_1_exeToFinQ$first[16])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	  !coreFix_aluExe_1_exeToFinQ$first[16])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/AluExePipeline.bsv\", line 357, column 43\nmispredicted branch must have spec tag");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	  !coreFix_aluExe_1_exeToFinQ$first[16])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	  coreFix_aluExe_1_exeToFinQ$first[326:322] != 5'd9 &&
	  coreFix_aluExe_1_exeToFinQ$first[326:322] != 5'd10)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	  coreFix_aluExe_1_exeToFinQ$first[326:322] != 5'd9 &&
	  coreFix_aluExe_1_exeToFinQ$first[326:322] != 5'd10)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/AluExePipeline.bsv\", line 360, column 54\nonly jr and br can mispredict");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	  coreFix_aluExe_1_exeToFinQ$first[326:322] != 5'd9 &&
	  coreFix_aluExe_1_exeToFinQ$first[326:322] != 5'd10)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	  !coreFix_aluExe_0_exeToFinQ$first[16])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	  !coreFix_aluExe_0_exeToFinQ$first[16])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/AluExePipeline.bsv\", line 357, column 43\nmispredicted branch must have spec tag");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	  !coreFix_aluExe_0_exeToFinQ$first[16])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	  coreFix_aluExe_0_exeToFinQ$first[326:322] != 5'd9 &&
	  coreFix_aluExe_0_exeToFinQ$first[326:322] != 5'd10)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	  coreFix_aluExe_0_exeToFinQ$first[326:322] != 5'd9 &&
	  coreFix_aluExe_0_exeToFinQ$first[326:322] != 5'd10)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/AluExePipeline.bsv\", line 360, column 54\nonly jr and br can mispredict");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	  coreFix_aluExe_0_exeToFinQ$first[326:322] != 5'd9 &&
	  coreFix_aluExe_0_exeToFinQ$first[326:322] != 5'd10)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu &&
	  coreFix_aluExe_1_regToExeQ$first[395] &&
	  coreFix_aluExe_1_regToExeQ$first[421:417] != 5'd13)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu &&
	  coreFix_aluExe_1_regToExeQ$first[395] &&
	  coreFix_aluExe_1_regToExeQ$first[421:417] != 5'd13)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/AluExePipeline.bsv\", line 297, column 44\nOnly Csr inst needs to update csrData in ROB");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu &&
	  coreFix_aluExe_1_regToExeQ$first[395] &&
	  coreFix_aluExe_1_regToExeQ$first[421:417] != 5'd13)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu &&
	  coreFix_aluExe_1_regToExeQ$first[395] &&
	  basicExec___d11664[0])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu &&
	  coreFix_aluExe_1_regToExeQ$first[395] &&
	  basicExec___d11664[0])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/AluExePipeline.bsv\", line 298, column 59\nCsr inst cannot mispredict");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu &&
	  coreFix_aluExe_1_regToExeQ$first[395] &&
	  basicExec___d11664[0])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu &&
	  coreFix_aluExe_1_regToExeQ$first[395] &&
	  (basicExec___d11664[65:2] !=
	   coreFix_aluExe_1_regToExeQ$first[112:49] ||
	   coreFix_aluExe_1_regToExeQ$first[112:49] != y__h540646))
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu &&
	  coreFix_aluExe_1_regToExeQ$first[395] &&
	  (basicExec___d11664[65:2] !=
	   coreFix_aluExe_1_regToExeQ$first[112:49] ||
	   coreFix_aluExe_1_regToExeQ$first[112:49] != y__h540646))
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/AluExePipeline.bsv\", line 299, column 84\nCsr inst ppc = pc+4");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu &&
	  coreFix_aluExe_1_regToExeQ$first[395] &&
	  (basicExec___d11664[65:2] !=
	   coreFix_aluExe_1_regToExeQ$first[112:49] ||
	   coreFix_aluExe_1_regToExeQ$first[112:49] != y__h540646))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu &&
	  coreFix_aluExe_0_regToExeQ$first[395] &&
	  coreFix_aluExe_0_regToExeQ$first[421:417] != 5'd13)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu &&
	  coreFix_aluExe_0_regToExeQ$first[395] &&
	  coreFix_aluExe_0_regToExeQ$first[421:417] != 5'd13)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/AluExePipeline.bsv\", line 297, column 44\nOnly Csr inst needs to update csrData in ROB");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu &&
	  coreFix_aluExe_0_regToExeQ$first[395] &&
	  coreFix_aluExe_0_regToExeQ$first[421:417] != 5'd13)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu &&
	  coreFix_aluExe_0_regToExeQ$first[395] &&
	  basicExec___d12338[0])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu &&
	  coreFix_aluExe_0_regToExeQ$first[395] &&
	  basicExec___d12338[0])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/AluExePipeline.bsv\", line 298, column 59\nCsr inst cannot mispredict");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu &&
	  coreFix_aluExe_0_regToExeQ$first[395] &&
	  basicExec___d12338[0])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu &&
	  coreFix_aluExe_0_regToExeQ$first[395] &&
	  (basicExec___d12338[65:2] !=
	   coreFix_aluExe_0_regToExeQ$first[112:49] ||
	   coreFix_aluExe_0_regToExeQ$first[112:49] != y__h562984))
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu &&
	  coreFix_aluExe_0_regToExeQ$first[395] &&
	  (basicExec___d12338[65:2] !=
	   coreFix_aluExe_0_regToExeQ$first[112:49] ||
	   coreFix_aluExe_0_regToExeQ$first[112:49] != y__h562984))
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/AluExePipeline.bsv\", line 299, column 84\nCsr inst ppc = pc+4");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu &&
	  coreFix_aluExe_0_regToExeQ$first[395] &&
	  (basicExec___d12338[65:2] !=
	   coreFix_aluExe_0_regToExeQ$first[112:49] ||
	   coreFix_aluExe_0_regToExeQ$first[112:49] != y__h562984))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doRegReadAlu &&
	  !coreFix_aluExe_1_dispToRegQ$first[131] &&
	  coreFix_aluExe_1_dispToRegQ$first[85] &&
	  !sbCons$lazyLookup_1_get[3] &&
	  IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11151)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doRegReadAlu &&
	  !coreFix_aluExe_1_dispToRegQ$first[131] &&
	  coreFix_aluExe_1_dispToRegQ$first[85] &&
	  !sbCons$lazyLookup_1_get[3] &&
	  IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11151)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/lib/Bypass.bsv\", line 57, column 34\nbypass found must be valid");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doRegReadAlu &&
	  !coreFix_aluExe_1_dispToRegQ$first[131] &&
	  coreFix_aluExe_1_dispToRegQ$first[85] &&
	  !sbCons$lazyLookup_1_get[3] &&
	  IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11151)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doRegReadAlu &&
	  coreFix_aluExe_1_dispToRegQ$first[77] &&
	  !sbCons$lazyLookup_1_get[2] &&
	  IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11159)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doRegReadAlu &&
	  coreFix_aluExe_1_dispToRegQ$first[77] &&
	  !sbCons$lazyLookup_1_get[2] &&
	  IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11159)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/lib/Bypass.bsv\", line 57, column 34\nbypass found must be valid");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doRegReadAlu &&
	  coreFix_aluExe_1_dispToRegQ$first[77] &&
	  !sbCons$lazyLookup_1_get[2] &&
	  IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__107_ETC___d11159)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doRegReadAlu &&
	  !coreFix_aluExe_0_dispToRegQ$first[131] &&
	  coreFix_aluExe_0_dispToRegQ$first[85] &&
	  !sbCons$lazyLookup_0_get[3] &&
	  IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d12007)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doRegReadAlu &&
	  !coreFix_aluExe_0_dispToRegQ$first[131] &&
	  coreFix_aluExe_0_dispToRegQ$first[85] &&
	  !sbCons$lazyLookup_0_get[3] &&
	  IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d12007)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/lib/Bypass.bsv\", line 57, column 34\nbypass found must be valid");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doRegReadAlu &&
	  !coreFix_aluExe_0_dispToRegQ$first[131] &&
	  coreFix_aluExe_0_dispToRegQ$first[85] &&
	  !sbCons$lazyLookup_0_get[3] &&
	  IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d12007)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doRegReadAlu &&
	  coreFix_aluExe_0_dispToRegQ$first[77] &&
	  !sbCons$lazyLookup_0_get[2] &&
	  IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d12015)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doRegReadAlu &&
	  coreFix_aluExe_0_dispToRegQ$first[77] &&
	  !sbCons$lazyLookup_0_get[2] &&
	  IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d12015)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/lib/Bypass.bsv\", line 57, column 34\nbypass found must be valid");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doRegReadAlu &&
	  coreFix_aluExe_0_dispToRegQ$first[77] &&
	  !sbCons$lazyLookup_0_get[2] &&
	  IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__192_ETC___d12015)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[35:34] != 2'd0 &&
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[35:34] != 2'd1)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[35:34] != 2'd0 &&
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[35:34] != 2'd1)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/lib/MulDiv.bsv\", line 174, column 40\nmust be mul func");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[35:34] != 2'd0 &&
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[35:34] != 2'd1)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[35:34] != 2'd2 &&
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[35:34] != 2'd3)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[35:34] != 2'd2 &&
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[35:34] != 2'd3)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/lib/MulDiv.bsv\", line 196, column 40\nmust be div func");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[35:34] != 2'd2 &&
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[35:34] != 2'd3)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	  (!coreFix_memExe_lsq$firstLd[101] ||
	   coreFix_memExe_lsq$firstLd[16]))
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	  (!coreFix_memExe_lsq$firstLd[101] ||
	   coreFix_memExe_lsq$firstLd[16]))
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 881, column 62\nmust be non-MMIO Lr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	  (!coreFix_memExe_lsq$firstLd[101] ||
	   coreFix_memExe_lsq$firstLd[16]))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	  (coreFix_memExe_lsq$firstLd[7] || coreFix_memExe_lsq$firstLd[2]))
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	  (coreFix_memExe_lsq$firstLd[7] || coreFix_memExe_lsq$firstLd[2]))
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 882, column 73\nno fualt or kill");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	  (coreFix_memExe_lsq$firstLd[7] || coreFix_memExe_lsq$firstLd[2]))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	  (coreFix_memExe_lsq$firstLd[101] ||
	   !coreFix_memExe_lsq$firstLd[16]))
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	  (coreFix_memExe_lsq$firstLd[101] ||
	   !coreFix_memExe_lsq$firstLd[16]))
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 966, column 61\nmust be MMIO Ld");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	  (coreFix_memExe_lsq$firstLd[101] ||
	   !coreFix_memExe_lsq$firstLd[16]))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	  (coreFix_memExe_lsq$firstLd[7] || coreFix_memExe_lsq$firstLd[2]))
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	  (coreFix_memExe_lsq$firstLd[7] || coreFix_memExe_lsq$firstLd[2]))
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 967, column 73\nno fualt or kill");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	  (coreFix_memExe_lsq$firstLd[7] || coreFix_memExe_lsq$firstLd[2]))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	  coreFix_memExe_dTlb_procResp__485_BITS_105_TO__ETC___d1639 &&
	  coreFix_memExe_dTlb$procResp[90])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	  coreFix_memExe_dTlb_procResp__485_BITS_105_TO__ETC___d1639 &&
	  coreFix_memExe_dTlb$procResp[90])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 586, column 33\nmust be in LdQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	  coreFix_memExe_dTlb_procResp__485_BITS_105_TO__ETC___d1639 &&
	  coreFix_memExe_dTlb$procResp[90])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd0 &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd2)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd0 &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd2)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 1261, column 69\nmust be St/Amo");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd0 &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd2)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq &&
	  (coreFix_memExe_lsq$firstSt[158:157] != 2'd1 &&
	   coreFix_memExe_lsq$firstSt[158:157] != 2'd2 ||
	   coreFix_memExe_lsq$firstSt[77]))
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq &&
	  (coreFix_memExe_lsq$firstSt[158:157] != 2'd1 &&
	   coreFix_memExe_lsq$firstSt[158:157] != 2'd2 ||
	   coreFix_memExe_lsq$firstSt[77]))
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 1218, column 36\nmust be non-MMIO Sc/Amo");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq &&
	  (coreFix_memExe_lsq$firstSt[158:157] != 2'd1 &&
	   coreFix_memExe_lsq$firstSt[158:157] != 2'd2 ||
	   coreFix_memExe_lsq$firstSt[77]))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq &&
	  coreFix_memExe_lsq$firstSt[4])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq &&
	  coreFix_memExe_lsq$firstSt[4])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 1219, column 44\nno fault");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq &&
	  coreFix_memExe_lsq$firstSt[4])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd0 &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd2)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd0 &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd2)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 1323, column 69\nmust be St/Amo");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd0 &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd2)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq &&
	  coreFix_memExe_lsq$firstSt[4])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq &&
	  coreFix_memExe_lsq$firstSt[4])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 1324, column 44\nno fault");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq &&
	  coreFix_memExe_lsq$firstSt[4])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd0 &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd2)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd0 &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd2)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 1355, column 69\nmust be St/Amo");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd0 &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd2)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault &&
	  coreFix_memExe_lsq$firstSt[4])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault &&
	  coreFix_memExe_lsq$firstSt[4])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 1356, column 44\nno fault");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault &&
	  coreFix_memExe_lsq$firstSt[4])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	  coreFix_memExe_lsq$respLd[73] &&
	  coreFix_memExe_lsq$respLd[72])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	  coreFix_memExe_lsq$respLd[73] &&
	  coreFix_memExe_lsq$respLd[72])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 720, column 42\nwrong path resp cannot write reg");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	  coreFix_memExe_lsq$respLd[73] &&
	  coreFix_memExe_lsq$respLd[72])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doRespLdForward &&
	  coreFix_memExe_lsq$respLd[73] &&
	  coreFix_memExe_lsq$respLd[72])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doRespLdForward &&
	  coreFix_memExe_lsq$respLd[73] &&
	  coreFix_memExe_lsq$respLd[72])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 720, column 42\nwrong path resp cannot write reg");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doRespLdForward &&
	  coreFix_memExe_lsq$respLd[73] &&
	  coreFix_memExe_lsq$respLd[72])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	  3'd5)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	  3'd5)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 733, column 51\nmust be swapped in");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	  3'd5)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	  (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] ==
	   2'd0 ||
	   !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851))
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	  (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] ==
	   2'd0 ||
	   !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851))
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 735, column 21\ncRq swapped in by previous cRq, tag must match & cs > I");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	  (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] ==
	   2'd0 ||
	   !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2426)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2426)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 463, column 13\ncRqHit but tag or cs incorrect");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2426)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2433)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2433)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 502, column 33\nunknown mem op");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2433)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2440)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2440)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 638, column 17\nwaitP must be false and cs must not be enough");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2440)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	  3'd1)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	  3'd1)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 719, column 49\nmust first time go through tag match");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	  3'd1)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	  (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] ==
	   2'd0 ||
	   !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851))
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	  (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] ==
	   2'd0 ||
	   !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851))
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 720, column 49\ncRq should hit in tag match");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	  (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] ==
	   2'd0 ||
	   !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	  !coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	  !coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 722, column 44\ncRq hit on another cRq, cRqEOC must be true");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1778 &&
	  !coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2450)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2450)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 781, column 40\nhit, so cs must > I");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2450)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2453)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2453)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 502, column 33\nunknown mem op");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2453)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2466)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2466)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 638, column 17\nwaitP must be false and cs must not be enough");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2466)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
	   !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851))
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
	   !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851))
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 821, column 18\npRs must be a hit");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1786 ||
	   !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1851))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2482)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2482)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 463, column 13\ncRqHit but tag or cs incorrect");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2482)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd0 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd2 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd4 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd3 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd1)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd0 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd2 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd4 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd3 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd1)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 502, column 33\nunknown mem op");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd0 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd2 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd4 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd3 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd1)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	  !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	  !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 830, column 30\npRs owner must match some cRq");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	  !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_St_Mem &&
	  coreFix_memExe_lsq$firstSt[151])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_St_Mem &&
	  coreFix_memExe_lsq$firstSt[151])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 1059, column 33\nno .rl");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_St_Mem &&
	  coreFix_memExe_lsq$firstSt[151])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doRegReadMem &&
	  coreFix_memExe_dispToRegQ$first[62] &&
	  !sbCons$lazyLookup_3_get[3] &&
	  IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1405)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doRegReadMem &&
	  coreFix_memExe_dispToRegQ$first[62] &&
	  !sbCons$lazyLookup_3_get[3] &&
	  IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1405)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/lib/Bypass.bsv\", line 57, column 34\nbypass found must be valid");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doRegReadMem &&
	  coreFix_memExe_dispToRegQ$first[62] &&
	  !sbCons$lazyLookup_3_get[3] &&
	  IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1405)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doRegReadMem &&
	  coreFix_memExe_dispToRegQ$first[54] &&
	  !sbCons$lazyLookup_3_get[2] &&
	  IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1412)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doRegReadMem &&
	  coreFix_memExe_dispToRegQ$first[54] &&
	  !sbCons$lazyLookup_3_get[2] &&
	  IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1412)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/lib/Bypass.bsv\", line 57, column 34\nbypass found must be valid");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doRegReadMem &&
	  coreFix_memExe_dispToRegQ$first[54] &&
	  !sbCons$lazyLookup_3_get[2] &&
	  IF_NOT_coreFix_memExe_bypassWire_0_whas__329_3_ETC___d1412)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDispatchMem &&
	  coreFix_memExe_rsMem$dispatchData[106:104] == 3'd1 &&
	  coreFix_memExe_rsMem$dispatchData[41])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDispatchMem &&
	  coreFix_memExe_rsMem$dispatchData[106:104] == 3'd1 &&
	  coreFix_memExe_rsMem$dispatchData[41])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 389, column 18\nSt cannot have dst reg");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDispatchMem &&
	  coreFix_memExe_rsMem$dispatchData[106:104] == 3'd1 &&
	  coreFix_memExe_rsMem$dispatchData[41])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] != 3'd4 &&
	  coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] != 3'd3)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] != 3'd4 &&
	  coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] != 3'd3)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/FpuMulDivExePipeline.bsv\", line 224, column 33\nunknown execFunc for doExeFpuMulDiv");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] != 3'd4 &&
	  coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] != 3'd3)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_dispToRegQ$first[56] &&
	  !sbCons$lazyLookup_2_get[3] &&
	  IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7966)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_dispToRegQ$first[56] &&
	  !sbCons$lazyLookup_2_get[3] &&
	  IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7966)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/lib/Bypass.bsv\", line 57, column 34\nbypass found must be valid");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_dispToRegQ$first[56] &&
	  !sbCons$lazyLookup_2_get[3] &&
	  IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7966)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_dispToRegQ$first[48] &&
	  !sbCons$lazyLookup_2_get[2] &&
	  IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7973)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_dispToRegQ$first[48] &&
	  !sbCons$lazyLookup_2_get[2] &&
	  IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7973)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/lib/Bypass.bsv\", line 57, column 34\nbypass found must be valid");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_dispToRegQ$first[48] &&
	  !sbCons$lazyLookup_2_get[2] &&
	  IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7973)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_dispToRegQ$first[40] &&
	  !sbCons$lazyLookup_2_get[1] &&
	  IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7980)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_dispToRegQ$first[40] &&
	  !sbCons$lazyLookup_2_get[1] &&
	  IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7980)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/lib/Bypass.bsv\", line 57, column 34\nbypass found must be valid");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_dispToRegQ$first[40] &&
	  !sbCons$lazyLookup_2_get[1] &&
	  IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d7980)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData[8])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData[8])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/FpuMulDivExePipeline.bsv\", line 151, column 40\nFpuMulDiv should not carry any spec tag");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData[8])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_deqEn$whas &&
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit == 2'd3)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_deqEn$whas &&
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit == 2'd3)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/fpgautils/lib/XilinxIntMul.bsv\", line 147, column 38\ncredit overflow");
    if (RST_N != `BSV_RESET_VALUE)
      if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_deqEn$whas &&
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit == 2'd3)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$whas &&
	  v__h523816 == 2'd0)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$whas &&
	  v__h523816 == 2'd0)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/fpgautils/lib/XilinxIntMul.bsv\", line 172, column 38\ncredit underflow");
    if (RST_N != `BSV_RESET_VALUE)
      if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$whas &&
	  v__h523816 == 2'd0)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  specTagManager$currentSpecBits != 12'd0)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  specTagManager$currentSpecBits != 12'd0)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 482, column 34\ncannot have spec bits");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  specTagManager$currentSpecBits != 12'd0)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  fetchStage$pipelines_0_first[194:192] == 3'd0 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd13)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  fetchStage$pipelines_0_first[194:192] == 3'd0 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd13)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 510, column 42\nonly CSR inst send to exe");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  fetchStage$pipelines_0_first[194:192] == 3'd0 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd13)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd15 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd16 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd19 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd20)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd15 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd16 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd19 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd20)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 517, column 22\nnon-CSR inst not send to exe");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd15 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd16 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd19 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd20)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	  (fetchStage$pipelines_0_first[194:192] == 3'd1 ||
	   fetchStage$pipelines_0_first[194:192] == 3'd2 ||
	   fetchStage$pipelines_0_first[194:192] == 3'd3 ||
	   fetchStage$pipelines_0_first[194:192] == 3'd4))
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	  (fetchStage$pipelines_0_first[194:192] == 3'd1 ||
	   fetchStage$pipelines_0_first[194:192] == 3'd2 ||
	   fetchStage$pipelines_0_first[194:192] == 3'd3 ||
	   fetchStage$pipelines_0_first[194:192] == 3'd4))
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 519, column 22\nnon-exe inst exec func is other");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	  (fetchStage$pipelines_0_first[194:192] == 3'd1 ||
	   fetchStage$pipelines_0_first[194:192] == 3'd2 ||
	   fetchStage$pipelines_0_first[194:192] == 3'd3 ||
	   fetchStage$pipelines_0_first[194:192] == 3'd4))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  fetchStage$pipelines_0_first[75] &&
	  fetchStage$pipelines_0_first[74])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  fetchStage$pipelines_0_first[75] &&
	  fetchStage$pipelines_0_first[74])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 538, column 29\nsystem inst never touches FP regs");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  fetchStage$pipelines_0_first[75] &&
	  fetchStage$pipelines_0_first[74])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__3159_AND__ETC___d13842)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__3159_AND__ETC___d13842)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 1005, column 61\nFpuMulDiv next PC is not PC+4/PC+2");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__3159_AND__ETC___d13842)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__3159_AND__ETC___d13847)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__3159_AND__ETC___d13847)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 1006, column 59\nFpuMulDiv never explicitly read/write CSR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__3159_AND__ETC___d13847)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__3159_AND__ETC___d13872)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__3159_AND__ETC___d13872)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 1037, column 65\nMem next PC is not PC+4/PC+2");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__3159_AND__ETC___d13872)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__3159_AND__ETC___d13876)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__3159_AND__ETC___d13876)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 1038, column 63\nMem never explicitly read/write CSR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__3159_AND__ETC___d13876)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__3159_AND__ETC___d13882)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__3159_AND__ETC___d13882)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 1040, column 42\nMem (non-Fence) needs imm for virtual addr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__3159_AND__ETC___d13882)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d14009)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d14009)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 1005, column 61\nFpuMulDiv next PC is not PC+4/PC+2");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d14009)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13940 &&
	  regRenamingTable_rename_1_canRename__3278_AND__ETC___d13949 &&
	  NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d14012)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13940 &&
	  regRenamingTable_rename_1_canRename__3278_AND__ETC___d13949 &&
	  NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d14012)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 1006, column 59\nFpuMulDiv never explicitly read/write CSR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13940 &&
	  regRenamingTable_rename_1_canRename__3278_AND__ETC___d13949 &&
	  NOT_fetchStage_pipelines_1_first__2500_BITS_19_ETC___d14012)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13940 &&
	  regRenamingTable_rename_1_canRename__3278_AND__ETC___d14033)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13940 &&
	  regRenamingTable_rename_1_canRename__3278_AND__ETC___d14033)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 1037, column 65\nMem next PC is not PC+4/PC+2");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13940 &&
	  regRenamingTable_rename_1_canRename__3278_AND__ETC___d14033)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d14038)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d14038)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 1038, column 63\nMem never explicitly read/write CSR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d14038)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13940 &&
	  regRenamingTable_rename_1_canRename__3278_AND__ETC___d14043)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13940 &&
	  regRenamingTable_rename_1_canRename__3278_AND__ETC___d14043)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 1040, column 42\nMem (non-Fence) needs imm for virtual addr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2489_2490_O_ETC___d13940 &&
	  regRenamingTable_rename_1_canRename__3278_AND__ETC___d14043)
	$finish(32'd0);
  end
  // synopsys translate_on
endmodule  // mkCore

